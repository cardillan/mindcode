// Patrols around a building and heals any damaged building
// Since the patrolling ship is close by, repairing will happen faster than usual

// Units is a system library providing functions for easy acquisition of units
require units;

// This part of the script will create mlog variables which can be modified
// in the compiled code to change which unit to use and which building to circle around
// The following line is a special comment which will be written to the mlog code as well.

/// Configurable options:
param CENTER = foundation1;
param UNIT = @poly;

// We'll write messages onto this block
// It is used by the units system library to output messages as well
param MESSAGES = message1;

/// Don't modify anything below this line.

// Title printed to messages to help identify the processor purpose
const TITLE = "Healing damaged buildings\n";

begin
    // Find a unit if we don't have one
    if @unit.@dead != 0  or @unit.@controller != @this then
        waitForFreeUnit(MESSAGES, TITLE, UNIT, 1);
    end;

    var dmgx, dmgy;
    if ulocate(damaged, out dmgx, out dmgy) then
        println($"${TITLE}Found damaged block at $dmgx, $dmgy");
        approach(dmgx, dmgy, 5);
        target(dmgx, dmgy, true);
    else
        println(TITLE, "Patrolling");
        approach(CENTER.@x + 10 * sin(@tick), CENTER.@y + 10 * cos(@tick), 2);
    end;

    printflush(MESSAGES);
end;