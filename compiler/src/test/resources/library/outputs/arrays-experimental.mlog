set p 0
assertflush
print "xxxxx"
assertprints "xxxxx" "Array fill"
set .b*9 p
set .c*0 p
op add *tmp4 p 1
set .b*8 *tmp4
set .c*1 *tmp4
op add *tmp4 p 2
set .b*7 *tmp4
set .c*2 *tmp4
op add *tmp4 p 3
set .b*6 *tmp4
set .c*3 *tmp4
op add *tmp4 p 4
set :reverse:t *tmp4
set .c*4 *tmp4
op add *tmp4 p 5
set *tmp14 *tmp4
set .c*5 *tmp4
op add *tmp4 p 6
set .b*3 *tmp4
set .c*6 *tmp4
op add *tmp4 p 7
set .b*2 *tmp4
set .c*7 *tmp4
op add *tmp4 p 8
set .b*1 *tmp4
set .c*8 *tmp4
op add *tmp4 p 9
set .b*0 *tmp4
set .c*9 *tmp4
set .b*4 *tmp14
set .b*5 :reverse:t
assertflush
print *tmp4
print .b*1
print .b*2
print .b*3
print *tmp14
print :reverse:t
print .b*6
print .b*7
print .b*8
print p
assertprints "9876543210" "Array reverse"
set :bubblesort:flag false
set :bubblesort:a .b*0
op greaterThan *tmp19 .b*0 .b*1
jump 55 equal *tmp19 false
set .b*0 .b*1
set .b*1 :bubblesort:a
set :bubblesort:flag true
jump 57 always 0 0
set :bubblesort:a .b*1
jump 57 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*2
jump 63 equal *tmp19 false
set .b*1 .b*2
set .b*2 :bubblesort:a
set :bubblesort:flag true
jump 65 always 0 0
set :bubblesort:a .b*2
jump 65 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*3
jump 71 equal *tmp19 false
set .b*2 .b*3
set .b*3 :bubblesort:a
set :bubblesort:flag true
jump 73 always 0 0
set :bubblesort:a .b*3
jump 73 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*4
jump 79 equal *tmp19 false
set .b*3 .b*4
set .b*4 :bubblesort:a
set :bubblesort:flag true
jump 81 always 0 0
set :bubblesort:a .b*4
jump 81 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*5
jump 87 equal *tmp19 false
set .b*4 .b*5
set .b*5 :bubblesort:a
set :bubblesort:flag true
jump 89 always 0 0
set :bubblesort:a .b*5
jump 89 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*6
jump 95 equal *tmp19 false
set .b*5 .b*6
set .b*6 :bubblesort:a
set :bubblesort:flag true
jump 97 always 0 0
set :bubblesort:a .b*6
jump 97 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*7
jump 103 equal *tmp19 false
set .b*6 .b*7
set .b*7 :bubblesort:a
set :bubblesort:flag true
jump 105 always 0 0
set :bubblesort:a .b*7
jump 105 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*8
jump 111 equal *tmp19 false
set .b*7 .b*8
set .b*8 :bubblesort:a
set :bubblesort:flag true
jump 113 always 0 0
set :bubblesort:a .b*8
jump 113 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*9
jump 118 equal *tmp19 false
set .b*8 .b*9
set .b*9 :bubblesort:a
set :bubblesort:flag true
jump 190 equal :bubblesort:flag false
set :bubblesort:a .b*9
op lessThan *tmp32 .b*9 .b*8
jump 126 equal *tmp32 false
set .b*9 .b*8
set .b*8 :bubblesort:a
set :bubblesort:flag true
jump 128 always 0 0
set :bubblesort:a .b*8
jump 128 always 0 0
op lessThan *tmp32 :bubblesort:a .b*7
jump 134 equal *tmp32 false
set .b*8 .b*7
set .b*7 :bubblesort:a
set :bubblesort:flag true
jump 136 always 0 0
set :bubblesort:a .b*7
jump 136 always 0 0
op lessThan *tmp32 :bubblesort:a .b*6
jump 142 equal *tmp32 false
set .b*7 .b*6
set .b*6 :bubblesort:a
set :bubblesort:flag true
jump 144 always 0 0
set :bubblesort:a .b*6
jump 144 always 0 0
op lessThan *tmp32 :bubblesort:a .b*5
jump 150 equal *tmp32 false
set .b*6 .b*5
set .b*5 :bubblesort:a
set :bubblesort:flag true
jump 152 always 0 0
set :bubblesort:a .b*5
jump 152 always 0 0
op lessThan *tmp32 :bubblesort:a .b*4
jump 158 equal *tmp32 false
set .b*5 .b*4
set .b*4 :bubblesort:a
set :bubblesort:flag true
jump 160 always 0 0
set :bubblesort:a .b*4
jump 160 always 0 0
op lessThan *tmp32 :bubblesort:a .b*3
jump 166 equal *tmp32 false
set .b*4 .b*3
set .b*3 :bubblesort:a
set :bubblesort:flag true
jump 168 always 0 0
set :bubblesort:a .b*3
jump 168 always 0 0
op lessThan *tmp32 :bubblesort:a .b*2
jump 174 equal *tmp32 false
set .b*3 .b*2
set .b*2 :bubblesort:a
set :bubblesort:flag true
jump 176 always 0 0
set :bubblesort:a .b*2
jump 176 always 0 0
op lessThan *tmp32 :bubblesort:a .b*1
jump 182 equal *tmp32 false
set .b*2 .b*1
set .b*1 :bubblesort:a
set :bubblesort:flag true
jump 184 always 0 0
set :bubblesort:a .b*1
jump 184 always 0 0
op lessThan *tmp32 :bubblesort:a .b*0
jump 189 equal *tmp32 false
set .b*1 .b*0
set .b*0 :bubblesort:a
set :bubblesort:flag true
jump 47 notEqual :bubblesort:flag false
assertflush
print .b*0
print .b*1
print .b*2
print .b*3
print .b*4
print .b*5
print .b*6
print .b*7
print .b*8
print .b*9
assertprints "0123456789" "Array sort 1"
set :bubblesort.1:flag false
set :bubblesort.1:a .b*0
op lessThan *tmp43 .b*0 .b*1
jump 213 equal *tmp43 false
set .b*0 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v .c*0
set .c*0 .c*1
set .c*1 :bubblesort.1:v
set :bubblesort.1:flag true
jump 214 always 0 0
set :bubblesort.1:a .b*1
op lessThan *tmp43 :bubblesort.1:a .b*2
jump 223 equal *tmp43 false
set .b*1 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v .c*1
set .c*1 .c*2
set .c*2 :bubblesort.1:v
set :bubblesort.1:flag true
jump 224 always 0 0
set :bubblesort.1:a .b*2
op lessThan *tmp43 :bubblesort.1:a .b*3
jump 233 equal *tmp43 false
set .b*2 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v .c*2
set .c*2 .c*3
set .c*3 :bubblesort.1:v
set :bubblesort.1:flag true
jump 234 always 0 0
set :bubblesort.1:a .b*3
op lessThan *tmp43 :bubblesort.1:a .b*4
jump 243 equal *tmp43 false
set .b*3 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v .c*3
set .c*3 .c*4
set .c*4 :bubblesort.1:v
set :bubblesort.1:flag true
jump 244 always 0 0
set :bubblesort.1:a .b*4
op lessThan *tmp43 :bubblesort.1:a .b*5
jump 253 equal *tmp43 false
set .b*4 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v .c*4
set .c*4 .c*5
set .c*5 :bubblesort.1:v
set :bubblesort.1:flag true
jump 254 always 0 0
set :bubblesort.1:a .b*5
op lessThan *tmp43 :bubblesort.1:a .b*6
jump 263 equal *tmp43 false
set .b*5 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v .c*5
set .c*5 .c*6
set .c*6 :bubblesort.1:v
set :bubblesort.1:flag true
jump 264 always 0 0
set :bubblesort.1:a .b*6
op lessThan *tmp43 :bubblesort.1:a .b*7
jump 273 equal *tmp43 false
set .b*6 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v .c*6
set .c*6 .c*7
set .c*7 :bubblesort.1:v
set :bubblesort.1:flag true
jump 274 always 0 0
set :bubblesort.1:a .b*7
op lessThan *tmp43 :bubblesort.1:a .b*8
jump 283 equal *tmp43 false
set .b*7 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v .c*7
set .c*7 .c*8
set .c*8 :bubblesort.1:v
set :bubblesort.1:flag true
jump 284 always 0 0
set :bubblesort.1:a .b*8
op lessThan *tmp43 :bubblesort.1:a .b*9
jump 292 equal *tmp43 false
set .b*8 .b*9
set .b*9 :bubblesort.1:a
set :bubblesort.1:v .c*8
set .c*8 .c*9
set .c*9 :bubblesort.1:v
set :bubblesort.1:flag true
jump 383 equal :bubblesort.1:flag false
set :bubblesort.1:a .b*9
op greaterThan *tmp66 .b*9 .b*8
jump 303 equal *tmp66 false
set .b*9 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v.1 .c*9
set .c*9 .c*8
set .c*8 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 304 always 0 0
set :bubblesort.1:a .b*8
op greaterThan *tmp66 :bubblesort.1:a .b*7
jump 313 equal *tmp66 false
set .b*8 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v.1 .c*8
set .c*8 .c*7
set .c*7 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 314 always 0 0
set :bubblesort.1:a .b*7
op greaterThan *tmp66 :bubblesort.1:a .b*6
jump 323 equal *tmp66 false
set .b*7 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v.1 .c*7
set .c*7 .c*6
set .c*6 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 324 always 0 0
set :bubblesort.1:a .b*6
op greaterThan *tmp66 :bubblesort.1:a .b*5
jump 333 equal *tmp66 false
set .b*6 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v.1 .c*6
set .c*6 .c*5
set .c*5 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 334 always 0 0
set :bubblesort.1:a .b*5
op greaterThan *tmp66 :bubblesort.1:a .b*4
jump 343 equal *tmp66 false
set .b*5 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v.1 .c*5
set .c*5 .c*4
set .c*4 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 344 always 0 0
set :bubblesort.1:a .b*4
op greaterThan *tmp66 :bubblesort.1:a .b*3
jump 353 equal *tmp66 false
set .b*4 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v.1 .c*4
set .c*4 .c*3
set .c*3 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 354 always 0 0
set :bubblesort.1:a .b*3
op greaterThan *tmp66 :bubblesort.1:a .b*2
jump 363 equal *tmp66 false
set .b*3 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v.1 .c*3
set .c*3 .c*2
set .c*2 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 364 always 0 0
set :bubblesort.1:a .b*2
op greaterThan *tmp66 :bubblesort.1:a .b*1
jump 373 equal *tmp66 false
set .b*2 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v.1 .c*2
set .c*2 .c*1
set .c*1 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 374 always 0 0
set :bubblesort.1:a .b*1
op greaterThan *tmp66 :bubblesort.1:a .b*0
jump 382 equal *tmp66 false
set .b*1 .b*0
set .b*0 :bubblesort.1:a
set :bubblesort.1:v.1 .c*1
set .c*1 .c*0
set .c*0 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 202 notEqual :bubblesort.1:flag false
assertflush
print .c*0
print .c*1
print .c*2
print .c*3
print .c*4
print .c*5
print .c*6
print .c*7
print .c*8
print .c*9
assertprints "9876543210" "Array sort 2"
