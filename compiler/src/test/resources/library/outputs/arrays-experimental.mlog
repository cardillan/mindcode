set p 0
assertflush
print "xxxxx"
assertprints "xxxxx" "Array fill"
set .b*9 p
set .c*0 p
op add *tmp4 p 1
set .b*8 *tmp4
set .c*1 *tmp4
op add *tmp4 p 2
set .b*7 *tmp4
set .c*2 *tmp4
op add *tmp4 p 3
set .b*6 *tmp4
set .c*3 *tmp4
op add *tmp4 p 4
set :reverse:t *tmp4
set .c*4 *tmp4
op add *tmp4 p 5
set *tmp14 *tmp4
set .c*5 *tmp4
op add *tmp4 p 6
set .b*3 *tmp4
set .c*6 *tmp4
op add *tmp4 p 7
set .b*2 *tmp4
set .c*7 *tmp4
op add *tmp4 p 8
set .b*1 *tmp4
set .c*8 *tmp4
op add *tmp4 p 9
set .b*0 *tmp4
set .c*9 *tmp4
set .b*4 *tmp14
set .b*5 :reverse:t
assertflush
print *tmp4
print .b*1
print .b*2
print .b*3
print *tmp14
print :reverse:t
print .b*6
print .b*7
print .b*8
print p
assertprints "9876543210" "Array reverse"
set :bubblesort:flag true
set :bubblesort:a .b*0
op greaterThan *tmp19 .b*0 .b*1
jump 55 equal *tmp19 false
set .b*0 .b*1
set .b*1 :bubblesort:a
set :bubblesort:flag false
jump 57 always 0 0
set :bubblesort:a .b*1
jump 57 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*2
jump 63 equal *tmp19 false
set .b*1 .b*2
set .b*2 :bubblesort:a
set :bubblesort:flag false
jump 65 always 0 0
set :bubblesort:a .b*2
jump 65 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*3
jump 71 equal *tmp19 false
set .b*2 .b*3
set .b*3 :bubblesort:a
set :bubblesort:flag false
jump 73 always 0 0
set :bubblesort:a .b*3
jump 73 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*4
jump 79 equal *tmp19 false
set .b*3 .b*4
set .b*4 :bubblesort:a
set :bubblesort:flag false
jump 81 always 0 0
set :bubblesort:a .b*4
jump 81 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*5
jump 87 equal *tmp19 false
set .b*4 .b*5
set .b*5 :bubblesort:a
set :bubblesort:flag false
jump 89 always 0 0
set :bubblesort:a .b*5
jump 89 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*6
jump 95 equal *tmp19 false
set .b*5 .b*6
set .b*6 :bubblesort:a
set :bubblesort:flag false
jump 97 always 0 0
set :bubblesort:a .b*6
jump 97 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*7
jump 103 equal *tmp19 false
set .b*6 .b*7
set .b*7 :bubblesort:a
set :bubblesort:flag false
jump 105 always 0 0
set :bubblesort:a .b*7
jump 105 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*8
jump 111 equal *tmp19 false
set .b*7 .b*8
set .b*8 :bubblesort:a
set :bubblesort:flag false
jump 113 always 0 0
set :bubblesort:a .b*8
jump 113 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*9
jump 118 equal *tmp19 false
set .b*8 .b*9
set .b*9 :bubblesort:a
set :bubblesort:flag false
jump 181 notEqual :bubblesort:flag false
set :bubblesort:a .b*9
op lessThan *tmp31 .b*9 .b*8
jump 125 equal *tmp31 false
set .b*9 .b*8
set .b*8 :bubblesort:a
jump 127 always 0 0
set :bubblesort:a .b*8
jump 127 always 0 0
op lessThan *tmp31 :bubblesort:a .b*7
jump 132 equal *tmp31 false
set .b*8 .b*7
set .b*7 :bubblesort:a
jump 134 always 0 0
set :bubblesort:a .b*7
jump 134 always 0 0
op lessThan *tmp31 :bubblesort:a .b*6
jump 139 equal *tmp31 false
set .b*7 .b*6
set .b*6 :bubblesort:a
jump 141 always 0 0
set :bubblesort:a .b*6
jump 141 always 0 0
op lessThan *tmp31 :bubblesort:a .b*5
jump 146 equal *tmp31 false
set .b*6 .b*5
set .b*5 :bubblesort:a
jump 148 always 0 0
set :bubblesort:a .b*5
jump 148 always 0 0
op lessThan *tmp31 :bubblesort:a .b*4
jump 153 equal *tmp31 false
set .b*5 .b*4
set .b*4 :bubblesort:a
jump 155 always 0 0
set :bubblesort:a .b*4
jump 155 always 0 0
op lessThan *tmp31 :bubblesort:a .b*3
jump 160 equal *tmp31 false
set .b*4 .b*3
set .b*3 :bubblesort:a
jump 162 always 0 0
set :bubblesort:a .b*3
jump 162 always 0 0
op lessThan *tmp31 :bubblesort:a .b*2
jump 167 equal *tmp31 false
set .b*3 .b*2
set .b*2 :bubblesort:a
jump 169 always 0 0
set :bubblesort:a .b*2
jump 169 always 0 0
op lessThan *tmp31 :bubblesort:a .b*1
jump 174 equal *tmp31 false
set .b*2 .b*1
set .b*1 :bubblesort:a
jump 176 always 0 0
set :bubblesort:a .b*1
jump 176 always 0 0
op lessThan *tmp31 :bubblesort:a .b*0
jump 47 equal *tmp31 false
set .b*1 .b*0
set .b*0 :bubblesort:a
jump 47 always 0 0
assertflush
print .b*0
print .b*1
print .b*2
print .b*3
print .b*4
print .b*5
print .b*6
print .b*7
print .b*8
print .b*9
assertprints "0123456789" "Array sort 1"
set :bubblesort.1:flag true
set :bubblesort.1:a .b*0
jump 203 greaterThanEq .b*0 .b*1
set .b*0 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v .c*0
set .c*0 .c*1
set .c*1 :bubblesort.1:v
set :bubblesort.1:flag false
jump 204 always 0 0
set :bubblesort.1:a .b*1
jump 212 greaterThanEq :bubblesort.1:a .b*2
set .b*1 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v .c*1
set .c*1 .c*2
set .c*2 :bubblesort.1:v
set :bubblesort.1:flag false
jump 213 always 0 0
set :bubblesort.1:a .b*2
jump 221 greaterThanEq :bubblesort.1:a .b*3
set .b*2 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v .c*2
set .c*2 .c*3
set .c*3 :bubblesort.1:v
set :bubblesort.1:flag false
jump 222 always 0 0
set :bubblesort.1:a .b*3
jump 230 greaterThanEq :bubblesort.1:a .b*4
set .b*3 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v .c*3
set .c*3 .c*4
set .c*4 :bubblesort.1:v
set :bubblesort.1:flag false
jump 231 always 0 0
set :bubblesort.1:a .b*4
jump 239 greaterThanEq :bubblesort.1:a .b*5
set .b*4 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v .c*4
set .c*4 .c*5
set .c*5 :bubblesort.1:v
set :bubblesort.1:flag false
jump 240 always 0 0
set :bubblesort.1:a .b*5
jump 248 greaterThanEq :bubblesort.1:a .b*6
set .b*5 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v .c*5
set .c*5 .c*6
set .c*6 :bubblesort.1:v
set :bubblesort.1:flag false
jump 249 always 0 0
set :bubblesort.1:a .b*6
jump 257 greaterThanEq :bubblesort.1:a .b*7
set .b*6 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v .c*6
set .c*6 .c*7
set .c*7 :bubblesort.1:v
set :bubblesort.1:flag false
jump 258 always 0 0
set :bubblesort.1:a .b*7
jump 266 greaterThanEq :bubblesort.1:a .b*8
set .b*7 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v .c*7
set .c*7 .c*8
set .c*8 :bubblesort.1:v
set :bubblesort.1:flag false
jump 267 always 0 0
set :bubblesort.1:a .b*8
jump 274 greaterThanEq :bubblesort.1:a .b*9
set .b*8 .b*9
set .b*9 :bubblesort.1:a
set :bubblesort.1:v .c*8
set .c*8 .c*9
set .c*9 :bubblesort.1:v
set :bubblesort.1:flag false
jump 356 notEqual :bubblesort.1:flag false
set :bubblesort.1:a .b*9
op greaterThan *tmp64 .b*9 .b*8
jump 284 equal *tmp64 false
set .b*9 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v.1 .c*9
set .c*9 .c*8
set .c*8 :bubblesort.1:v.1
jump 285 always 0 0
set :bubblesort.1:a .b*8
op greaterThan *tmp64 :bubblesort.1:a .b*7
jump 293 equal *tmp64 false
set .b*8 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v.1 .c*8
set .c*8 .c*7
set .c*7 :bubblesort.1:v.1
jump 294 always 0 0
set :bubblesort.1:a .b*7
op greaterThan *tmp64 :bubblesort.1:a .b*6
jump 302 equal *tmp64 false
set .b*7 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v.1 .c*7
set .c*7 .c*6
set .c*6 :bubblesort.1:v.1
jump 303 always 0 0
set :bubblesort.1:a .b*6
op greaterThan *tmp64 :bubblesort.1:a .b*5
jump 311 equal *tmp64 false
set .b*6 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v.1 .c*6
set .c*6 .c*5
set .c*5 :bubblesort.1:v.1
jump 312 always 0 0
set :bubblesort.1:a .b*5
op greaterThan *tmp64 :bubblesort.1:a .b*4
jump 320 equal *tmp64 false
set .b*5 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v.1 .c*5
set .c*5 .c*4
set .c*4 :bubblesort.1:v.1
jump 321 always 0 0
set :bubblesort.1:a .b*4
op greaterThan *tmp64 :bubblesort.1:a .b*3
jump 329 equal *tmp64 false
set .b*4 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v.1 .c*4
set .c*4 .c*3
set .c*3 :bubblesort.1:v.1
jump 330 always 0 0
set :bubblesort.1:a .b*3
op greaterThan *tmp64 :bubblesort.1:a .b*2
jump 338 equal *tmp64 false
set .b*3 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v.1 .c*3
set .c*3 .c*2
set .c*2 :bubblesort.1:v.1
jump 339 always 0 0
set :bubblesort.1:a .b*2
op greaterThan *tmp64 :bubblesort.1:a .b*1
jump 347 equal *tmp64 false
set .b*2 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v.1 .c*2
set .c*2 .c*1
set .c*1 :bubblesort.1:v.1
jump 348 always 0 0
set :bubblesort.1:a .b*1
op greaterThan *tmp64 :bubblesort.1:a .b*0
jump 193 equal *tmp64 false
set .b*1 .b*0
set .b*0 :bubblesort.1:a
set :bubblesort.1:v.1 .c*1
set .c*1 .c*0
set .c*0 :bubblesort.1:v.1
jump 193 always 0 0
assertflush
print .c*0
print .c*1
print .c*2
print .c*3
print .c*4
print .c*5
print .c*6
print .c*7
print .c*8
print .c*9
assertprints "9876543210" "Array sort 2"
