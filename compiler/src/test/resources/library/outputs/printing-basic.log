Main file: number of reported ambiguities: 5
Active optimizations:
    case-expression-optimization = basic,
    case-switching = basic,
    data-flow-optimization = basic,
    dead-code-elimination = basic,
    expression-optimization = basic,
    function-inlining = basic,
    if-expression-optimization = basic,
    jump-normalization = basic,
    jump-optimization = basic,
    jump-straightening = basic,
    jump-threading = basic,
    loop-hoisting = basic,
    loop-optimization = basic,
    loop-unrolling = basic,
    print-merging = basic,
    return-optimization = basic,
    single-step-elimination = basic,
    stack-optimization = basic,
    temp-variables-elimination = basic,
    unreachable-code-elimination = basic

   308 instructions before optimizations.
    18 instructions eliminated by Temp Variables Elimination.
    26 instructions eliminated by Dead Code Elimination (6 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    16 instructions eliminated by Jump Optimization (5 iterations).
    28 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
     1 instructions eliminated by If Expression Optimization (4 iterations).
    56 instructions eliminated by Data Flow Optimization (5 passes, 16 iterations).
     2 instructions eliminated by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
   100 instructions added by Loop Unrolling (7 iterations).
     2 loops unrolled by Loop Unrolling.
    98 instructions added by Function Inlining (7 iterations).
     7 function calls inlined by Function Inlining.
     3 instructions updated by JumpThreading.
    24 instructions eliminated by Unreachable Code Elimination.
   330 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 767):
    Unroll loop at *printing:108:13                              cost    27, benefit      187.5, efficiency        6.9
  * Unroll loop at *printing:153:9                               cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Inline function 'printNumber' defined at *printing:42:1      cost   107, benefit       24.5, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:64:1   cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:131:1  cost   215, benefit       35.0, efficiency        0.2

Pass 1: speed optimization selection (cost limit 714):
  * Unroll loop at *printing:108:13                              cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Inline function 'printNumber' defined at *printing:42:1      cost   107, benefit       24.5, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:64:1   cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 687):
  * Inline function 'printNumber' defined at *printing:42:1      cost   107, benefit       24.5, efficiency        0.2 (+84 instructions)
    Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 603):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 2: speed optimization selection (cost limit 624):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 3: speed optimization selection (cost limit 640):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 4: speed optimization selection (cost limit 640):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor __fn6__n 0 0
    3:  format __fn6__n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor __fn6__n 1 0
    8:  format __fn6__n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor __fn6__n 1.5 0
   13:  format __fn6__n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor __fn6__n 1.5 0
   18:  format "-{2}"
   19:  format __fn6__n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  op floor __fn6__n 1234567 0
        label __label249
   24:  op mod __fn6__mod __fn6__n 1000
   25:  jump __label250 greaterThanEq __fn6__mod 10
   26:  set __tmp7 "{2},00{1}"
   27:  jump __label253 always 0 0
        label __label250
   28:  jump __label251 greaterThanEq __fn6__mod 100
   29:  set __tmp7 "{2},0{1}"
   30:  jump __label252 always 0 0
        label __label251
   31:  set __tmp7 "{2},{1}"
        label __label252
        label __label253
   32:  format __tmp7
   33:  format __fn6__mod
   34:  op idiv __fn6__n __fn6__n 1000
   35:  jump __label249 greaterThan __fn6__n 999
   36:  format __fn6__n
   37:  assertprints "1,234,567" "printNumber(1234567)"
   38:  assertflush
   39:  print "{2}"
   40:  op floor __fn6__n 1234567 0
   41:  format "-{2}"
        label __label263
   42:  op mod __fn6__mod __fn6__n 1000
   43:  jump __label264 greaterThanEq __fn6__mod 10
   44:  set __tmp7 "{2},00{1}"
   45:  jump __label267 always 0 0
        label __label264
   46:  jump __label265 greaterThanEq __fn6__mod 100
   47:  set __tmp7 "{2},0{1}"
   48:  jump __label266 always 0 0
        label __label265
   49:  set __tmp7 "{2},{1}"
        label __label266
        label __label267
   50:  format __tmp7
   51:  format __fn6__mod
   52:  op idiv __fn6__n __fn6__n 1000
   53:  jump __label263 greaterThan __fn6__n 999
   54:  format __fn6__n
   55:  assertprints "-1,234,567" "printNumber(-1234567)"
   56:  assertflush
   57:  print "{2}"
   58:  op floor __fn6__n 9009099 0
        label __label277
   59:  op mod __fn6__mod __fn6__n 1000
   60:  jump __label278 greaterThanEq __fn6__mod 10
   61:  set __tmp7 "{2},00{1}"
   62:  jump __label281 always 0 0
        label __label278
   63:  jump __label279 greaterThanEq __fn6__mod 100
   64:  set __tmp7 "{2},0{1}"
   65:  jump __label280 always 0 0
        label __label279
   66:  set __tmp7 "{2},{1}"
        label __label280
        label __label281
   67:  format __tmp7
   68:  format __fn6__mod
   69:  op idiv __fn6__n __fn6__n 1000
   70:  jump __label277 greaterThan __fn6__n 999
   71:  format __fn6__n
   72:  assertprints "9,009,099" "printNumber(9009099)"
   73:  assertflush
   74:  set __fn4__n null
   75:  setaddr __fn4retaddr __label13
   76:  call __label4 __fn4retval
        gotolabel __label13 __fn4
   77:  assertprints "null" "printExactFast(null)"
   78:  assertflush
   79:  set __fn4__n 0
   80:  setaddr __fn4retaddr __label14
   81:  call __label4 __fn4retval
        gotolabel __label14 __fn4
   82:  assertprints "0" "printExactFast(0)"
   83:  assertflush
   84:  set __fn4__n 1
   85:  setaddr __fn4retaddr __label15
   86:  call __label4 __fn4retval
        gotolabel __label15 __fn4
   87:  assertprints "1" "printExactFast(1)"
   88:  assertflush
   89:  set __fn4__n 1.0000001
   90:  setaddr __fn4retaddr __label16
   91:  call __label4 __fn4retval
        gotolabel __label16 __fn4
   92:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   93:  assertflush
   94:  set __fn4__n 3.00000007
   95:  setaddr __fn4retaddr __label17
   96:  call __label4 __fn4retval
        gotolabel __label17 __fn4
   97:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
   98:  assertflush
   99:  set __fn4__n 3E50
  100:  setaddr __fn4retaddr __label18
  101:  call __label4 __fn4retval
        gotolabel __label18 __fn4
  102:  assertprints "3E50" "printExactFast(3e50)"
  103:  assertflush
  104:  set __fn4__n 1.0123456789
  105:  setaddr __fn4retaddr __label19
  106:  call __label4 __fn4retval
        gotolabel __label19 __fn4
  107:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  108:  assertflush
  109:  set __fn4__n 10000001E13
  110:  setaddr __fn4retaddr __label20
  111:  call __label4 __fn4retval
        gotolabel __label20 __fn4
  112:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  113:  assertflush
  114:  set __fn4__n 12345E-54
  115:  setaddr __fn4retaddr __label21
  116:  call __label4 __fn4retval
        gotolabel __label21 __fn4
  117:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  118:  assertflush
  119:  set __fn4__n -12345E-54
  120:  setaddr __fn4retaddr __label22
  121:  call __label4 __fn4retval
        gotolabel __label22 __fn4
  122:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  123:  assertflush
  124:  set __fn5__n null
  125:  setaddr __fn5retaddr __label23
  126:  call __label5 __fn5retval
        gotolabel __label23 __fn5
  127:  assertprints "null" "printExactSlow(null)"
  128:  assertflush
  129:  set __fn5__n 0
  130:  setaddr __fn5retaddr __label24
  131:  call __label5 __fn5retval
        gotolabel __label24 __fn5
  132:  assertprints "0" "printExactSlow(0)"
  133:  assertflush
  134:  set __fn5__n 1
  135:  setaddr __fn5retaddr __label25
  136:  call __label5 __fn5retval
        gotolabel __label25 __fn5
  137:  assertprints "1.000000000000000" "printExactSlow(1)"
  138:  assertflush
  139:  set __fn5__n 1.0000001
  140:  setaddr __fn5retaddr __label26
  141:  call __label5 __fn5retval
        gotolabel __label26 __fn5
  142:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  143:  assertflush
  144:  set __fn5__n 3.00000007
  145:  setaddr __fn5retaddr __label27
  146:  call __label5 __fn5retval
        gotolabel __label27 __fn5
  147:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  148:  assertflush
  149:  set __fn5__n 3E50
  150:  setaddr __fn5retaddr __label28
  151:  call __label5 __fn5retval
        gotolabel __label28 __fn5
  152:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  153:  assertflush
  154:  set __fn5__n 1.0123456789
  155:  setaddr __fn5retaddr __label29
  156:  call __label5 __fn5retval
        gotolabel __label29 __fn5
  157:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  158:  assertflush
  159:  set __fn5__n 10000001E13
  160:  setaddr __fn5retaddr __label30
  161:  call __label5 __fn5retval
        gotolabel __label30 __fn5
  162:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  163:  assertflush
  164:  set __fn5__n 12345E-54
  165:  setaddr __fn5retaddr __label31
  166:  call __label5 __fn5retval
        gotolabel __label31 __fn5
  167:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  168:  assertflush
  169:  set __fn5__n -12345E-54
  170:  setaddr __fn5retaddr __label32
  171:  call __label5 __fn5retval
        gotolabel __label32 __fn5
  172:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  173:  stop
  174:  end
        label __label4
  175:  op abs __tmp12 __fn4__n 0
  176:  jump __label48 greaterThan __tmp12 0
  177:  print __fn4__n
  178:  jump __label49 always 0 0
        label __label48
  179:  jump __label50 greaterThanEq __fn4__n 0
  180:  print "-"
  181:  op abs __fn4__n __fn4__n 0
        label __label50
  182:  op log10 __tmp18 __fn4__n 0
  183:  op floor __fn4__exp __tmp18 0
  184:  op mul __tmp20 -1 __fn4__exp
  185:  op pow __tmp21 10 __tmp20
  186:  op mul __fn4__base __fn4__n __tmp21
  187:  op add __tmp24 __fn4__base 0.5
  188:  op floor __tmp23 __tmp24 0
  189:  op sub __tmp26 __fn4__base __tmp23
  190:  op abs __fn4__cmp __tmp26 0
  191:  jump __label54 greaterThan __fn4__cmp 0
  192:  print __fn4__base
  193:  jump __label55 always 0 0
        label __label54
  194:  jump __label56 lessThanEq __fn4__cmp 0.00001
  195:  print __fn4__base
  196:  jump __label57 always 0 0
        label __label56
  197:  op floor __tmp32 __fn4__base 0
  198:  print __tmp32
  199:  print "."
  200:  op mod __tmp33 __fn4__base 1
  201:  op mul __fn4__base __tmp33 100000
  202:  op floor __fn4__t __fn4__base 0
  203:  jump __label155 greaterThanEq __fn4__t 10
  204:  print "0000"
  205:  jump __label162 always 0 0
        label __label155
  206:  jump __label156 greaterThanEq __fn4__t 100
  207:  print "000"
  208:  jump __label161 always 0 0
        label __label156
  209:  jump __label157 greaterThanEq __fn4__t 1000
  210:  print "00"
  211:  jump __label160 always 0 0
        label __label157
  212:  jump __label158 greaterThanEq __fn4__t 10000
  213:  print "0"
        label __label158
        label __label160
        label __label161
        label __label162
  214:  print __fn4__t
  215:  op mod __tmp33 __fn4__base 1
  216:  op mul __fn4__base __tmp33 100000
  217:  op floor __fn4__t __fn4__base 0
  218:  jump __label167 greaterThanEq __fn4__t 10
  219:  print "0000"
  220:  jump __label174 always 0 0
        label __label167
  221:  jump __label168 greaterThanEq __fn4__t 100
  222:  print "000"
  223:  jump __label173 always 0 0
        label __label168
  224:  jump __label169 greaterThanEq __fn4__t 1000
  225:  print "00"
  226:  jump __label172 always 0 0
        label __label169
  227:  jump __label170 greaterThanEq __fn4__t 10000
  228:  print "0"
        label __label170
        label __label172
        label __label173
        label __label174
  229:  print __fn4__t
  230:  op mod __tmp33 __fn4__base 1
  231:  op mul __fn4__base __tmp33 100000
  232:  op floor __fn4__t __fn4__base 0
  233:  jump __label179 greaterThanEq __fn4__t 10
  234:  print "0000"
  235:  jump __label186 always 0 0
        label __label179
  236:  jump __label180 greaterThanEq __fn4__t 100
  237:  print "000"
  238:  jump __label185 always 0 0
        label __label180
  239:  jump __label181 greaterThanEq __fn4__t 1000
  240:  print "00"
  241:  jump __label184 always 0 0
        label __label181
  242:  jump __label182 greaterThanEq __fn4__t 10000
  243:  print "0"
        label __label182
        label __label184
        label __label185
        label __label186
  244:  print __fn4__t
        label __label57
        label __label55
  245:  jump __label71 equal __fn4__exp 0
  246:  print "E"
  247:  print __fn4__exp
        label __label71
        label __label49
  248:  goto __fn4retaddr __fn4
  249:  end
        label __label5
  250:  op abs __tmp48 __fn5__n 0
  251:  jump __label76 greaterThan __tmp48 0
  252:  print __fn5__n
  253:  jump __label77 always 0 0
        label __label76
  254:  jump __label78 greaterThanEq __fn5__n 0
  255:  print "-"
  256:  op abs __fn5__n __fn5__n 0
        label __label78
  257:  op log10 __tmp54 __fn5__n 0
  258:  op floor __fn5__exp __tmp54 0
  259:  op mul __tmp56 -1 __fn5__exp
  260:  op pow __tmp57 10 __tmp56
  261:  op mul __fn5__base __fn5__n __tmp57
  262:  op floor __tmp59 __fn5__base 0
  263:  print __tmp59
  264:  print "."
  265:  op mod __tmp60 __fn5__base 1
  266:  op mul __fn5__base __tmp60 10
  267:  op floor __tmp63 __fn5__base 0
  268:  print __tmp63
  269:  op mod __tmp60 __fn5__base 1
  270:  op mul __fn5__base __tmp60 10
  271:  op floor __tmp63 __fn5__base 0
  272:  print __tmp63
  273:  op mod __tmp60 __fn5__base 1
  274:  op mul __fn5__base __tmp60 10
  275:  op floor __tmp63 __fn5__base 0
  276:  print __tmp63
  277:  op mod __tmp60 __fn5__base 1
  278:  op mul __fn5__base __tmp60 10
  279:  op floor __tmp63 __fn5__base 0
  280:  print __tmp63
  281:  op mod __tmp60 __fn5__base 1
  282:  op mul __fn5__base __tmp60 10
  283:  op floor __tmp63 __fn5__base 0
  284:  print __tmp63
  285:  op mod __tmp60 __fn5__base 1
  286:  op mul __fn5__base __tmp60 10
  287:  op floor __tmp63 __fn5__base 0
  288:  print __tmp63
  289:  op mod __tmp60 __fn5__base 1
  290:  op mul __fn5__base __tmp60 10
  291:  op floor __tmp63 __fn5__base 0
  292:  print __tmp63
  293:  op mod __tmp60 __fn5__base 1
  294:  op mul __fn5__base __tmp60 10
  295:  op floor __tmp63 __fn5__base 0
  296:  print __tmp63
  297:  op mod __tmp60 __fn5__base 1
  298:  op mul __fn5__base __tmp60 10
  299:  op floor __tmp63 __fn5__base 0
  300:  print __tmp63
  301:  op mod __tmp60 __fn5__base 1
  302:  op mul __fn5__base __tmp60 10
  303:  op floor __tmp63 __fn5__base 0
  304:  print __tmp63
  305:  op mod __tmp60 __fn5__base 1
  306:  op mul __fn5__base __tmp60 10
  307:  op floor __tmp63 __fn5__base 0
  308:  print __tmp63
  309:  op mod __tmp60 __fn5__base 1
  310:  op mul __fn5__base __tmp60 10
  311:  op floor __tmp63 __fn5__base 0
  312:  print __tmp63
  313:  op mod __tmp60 __fn5__base 1
  314:  op mul __fn5__base __tmp60 10
  315:  op floor __tmp63 __fn5__base 0
  316:  print __tmp63
  317:  op mod __tmp60 __fn5__base 1
  318:  op mul __fn5__base __tmp60 10
  319:  op floor __tmp63 __fn5__base 0
  320:  print __tmp63
  321:  op mod __tmp60 __fn5__base 1
  322:  op mul __fn5__base __tmp60 10
  323:  op floor __tmp63 __fn5__base 0
  324:  print __tmp63
  325:  jump __label85 equal __fn5__exp 0
  326:  print "E"
  327:  print __fn5__exp
        label __label85
        label __label77
  328:  goto __fn5retaddr __fn5
  329:  end


stop instruction encountered, dumping variable values:
@counter: 174.0
__fn4__base: 1.2345000000000002
__fn4__cmp: 0.23450000000000015
__fn4__exp: -50.0
__fn4__n: 1.2345E-50
__fn4__t: 99999.0
__fn4retaddr: 122.0
__fn5__base: 0.15276668818842154
__fn5__exp: -50.0
__fn5__n: 1.2345E-50
__fn5retaddr: 172.0
__fn6__mod: 9.0
__fn6__n: 9.0
__tmp12: 1.2345E-50
__tmp18: -49.90850890573205
__tmp20: 50.0
__tmp21: 1.0E50
__tmp23: 1.0
__tmp24: 1.7345000000000002
__tmp26: 0.23450000000000015
__tmp32: 1.0
__tmp33: 0.9999983634211276
__tmp48: 1.2345E-50
__tmp54: -49.90850890573205
__tmp56: 50.0
__tmp57: 1.0E50
__tmp59: 1.0
__tmp60: 0.015276668818842154
__tmp63: 0.0
__tmp7: {2},00{1}