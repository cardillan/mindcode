Main file: number of reported ambiguities: 5
Active optimizations:
    case-expression-optimization = basic,
    case-switching = basic,
    data-flow-optimization = basic,
    dead-code-elimination = basic,
    expression-optimization = basic,
    function-inlining = basic,
    if-expression-optimization = basic,
    jump-normalization = basic,
    jump-optimization = basic,
    jump-straightening = basic,
    jump-threading = basic,
    loop-hoisting = basic,
    loop-optimization = basic,
    loop-unrolling = basic,
    print-merging = basic,
    return-optimization = basic,
    single-step-elimination = basic,
    stack-optimization = basic,
    temp-variables-elimination = basic,
    unreachable-code-elimination = basic

   308 instructions before optimizations.
    18 instructions eliminated by Temp Variables Elimination.
    26 instructions eliminated by Dead Code Elimination (6 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    16 instructions eliminated by Jump Optimization (5 iterations).
    27 instructions eliminated by Single Step Elimination (4 passes, 10 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
    56 instructions eliminated by Data Flow Optimization (5 passes, 16 iterations).
     2 instructions eliminated by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
   100 instructions added by Loop Unrolling (7 iterations).
     2 loops unrolled by Loop Unrolling.
    92 instructions added by Function Inlining (7 iterations).
     7 function calls inlined by Function Inlining.
     3 instructions updated by JumpThreading.
    24 instructions eliminated by Unreachable Code Elimination.
   324 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 768):
    Unroll loop at *printing:108:13                              cost    27, benefit      187.5, efficiency        6.9
  * Unroll loop at *printing:153:9                               cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Inline function 'printNumber' defined at *printing:42:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:64:1   cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:131:1  cost   215, benefit       35.0, efficiency        0.2

Pass 1: speed optimization selection (cost limit 715):
  * Unroll loop at *printing:108:13                              cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Inline function 'printNumber' defined at *printing:42:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:64:1   cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 688):
  * Inline function 'printNumber' defined at *printing:42:1      cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
    Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 610):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 2: speed optimization selection (cost limit 638):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 3: speed optimization selection (cost limit 646):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Pass 4: speed optimization selection (cost limit 646):
  ! Inline function 'printExactFast' defined at *printing:64:1   cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:131:1  cost   692, benefit       35.0, efficiency        0.1

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor __fn6__n 0 0
    3:  format __fn6__n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor __fn6__n 1 0
    8:  format __fn6__n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor __fn6__n 1.5 0
   13:  format __fn6__n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor __fn6__n 1.5 0
   18:  format "-{2}"
   19:  format __fn6__n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  op floor __fn6__n 1234567 0
        label __label245
   24:  op mod __fn6__mod __fn6__n 1000
   25:  set __tmp7 "{2},00{1}"
   26:  jump __label248 lessThan __fn6__mod 10
   27:  set __tmp7 "{2},{1}"
   28:  jump __label247 greaterThanEq __fn6__mod 100
   29:  set __tmp7 "{2},0{1}"
        label __label247
        label __label248
   30:  format __tmp7
   31:  format __fn6__mod
   32:  op idiv __fn6__n __fn6__n 1000
   33:  jump __label245 greaterThan __fn6__n 999
   34:  format __fn6__n
   35:  assertprints "1,234,567" "printNumber(1234567)"
   36:  assertflush
   37:  print "{2}"
   38:  op floor __fn6__n 1234567 0
   39:  format "-{2}"
        label __label258
   40:  op mod __fn6__mod __fn6__n 1000
   41:  set __tmp7 "{2},00{1}"
   42:  jump __label261 lessThan __fn6__mod 10
   43:  set __tmp7 "{2},{1}"
   44:  jump __label260 greaterThanEq __fn6__mod 100
   45:  set __tmp7 "{2},0{1}"
        label __label260
        label __label261
   46:  format __tmp7
   47:  format __fn6__mod
   48:  op idiv __fn6__n __fn6__n 1000
   49:  jump __label258 greaterThan __fn6__n 999
   50:  format __fn6__n
   51:  assertprints "-1,234,567" "printNumber(-1234567)"
   52:  assertflush
   53:  print "{2}"
   54:  op floor __fn6__n 9009099 0
        label __label271
   55:  op mod __fn6__mod __fn6__n 1000
   56:  set __tmp7 "{2},00{1}"
   57:  jump __label274 lessThan __fn6__mod 10
   58:  set __tmp7 "{2},{1}"
   59:  jump __label273 greaterThanEq __fn6__mod 100
   60:  set __tmp7 "{2},0{1}"
        label __label273
        label __label274
   61:  format __tmp7
   62:  format __fn6__mod
   63:  op idiv __fn6__n __fn6__n 1000
   64:  jump __label271 greaterThan __fn6__n 999
   65:  format __fn6__n
   66:  assertprints "9,009,099" "printNumber(9009099)"
   67:  assertflush
   68:  set __fn4__n null
   69:  setaddr __fn4retaddr __label13
   70:  call __label4 __fn4retval
        gotolabel __label13 __fn4
   71:  assertprints "null" "printExactFast(null)"
   72:  assertflush
   73:  set __fn4__n 0
   74:  setaddr __fn4retaddr __label14
   75:  call __label4 __fn4retval
        gotolabel __label14 __fn4
   76:  assertprints "0" "printExactFast(0)"
   77:  assertflush
   78:  set __fn4__n 1
   79:  setaddr __fn4retaddr __label15
   80:  call __label4 __fn4retval
        gotolabel __label15 __fn4
   81:  assertprints "1" "printExactFast(1)"
   82:  assertflush
   83:  set __fn4__n 1.0000001
   84:  setaddr __fn4retaddr __label16
   85:  call __label4 __fn4retval
        gotolabel __label16 __fn4
   86:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   87:  assertflush
   88:  set __fn4__n 3.00000007
   89:  setaddr __fn4retaddr __label17
   90:  call __label4 __fn4retval
        gotolabel __label17 __fn4
   91:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
   92:  assertflush
   93:  set __fn4__n 3E50
   94:  setaddr __fn4retaddr __label18
   95:  call __label4 __fn4retval
        gotolabel __label18 __fn4
   96:  assertprints "3E50" "printExactFast(3e50)"
   97:  assertflush
   98:  set __fn4__n 1.0123456789
   99:  setaddr __fn4retaddr __label19
  100:  call __label4 __fn4retval
        gotolabel __label19 __fn4
  101:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  102:  assertflush
  103:  set __fn4__n 10000000999999999E4
  104:  setaddr __fn4retaddr __label20
  105:  call __label4 __fn4retval
        gotolabel __label20 __fn4
  106:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  107:  assertflush
  108:  set __fn4__n 12345E-54
  109:  setaddr __fn4retaddr __label21
  110:  call __label4 __fn4retval
        gotolabel __label21 __fn4
  111:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  112:  assertflush
  113:  set __fn4__n -12345E-54
  114:  setaddr __fn4retaddr __label22
  115:  call __label4 __fn4retval
        gotolabel __label22 __fn4
  116:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  117:  assertflush
  118:  set __fn5__n null
  119:  setaddr __fn5retaddr __label23
  120:  call __label5 __fn5retval
        gotolabel __label23 __fn5
  121:  assertprints "null" "printExactSlow(null)"
  122:  assertflush
  123:  set __fn5__n 0
  124:  setaddr __fn5retaddr __label24
  125:  call __label5 __fn5retval
        gotolabel __label24 __fn5
  126:  assertprints "0" "printExactSlow(0)"
  127:  assertflush
  128:  set __fn5__n 1
  129:  setaddr __fn5retaddr __label25
  130:  call __label5 __fn5retval
        gotolabel __label25 __fn5
  131:  assertprints "1.000000000000000" "printExactSlow(1)"
  132:  assertflush
  133:  set __fn5__n 1.0000001
  134:  setaddr __fn5retaddr __label26
  135:  call __label5 __fn5retval
        gotolabel __label26 __fn5
  136:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  137:  assertflush
  138:  set __fn5__n 3.00000007
  139:  setaddr __fn5retaddr __label27
  140:  call __label5 __fn5retval
        gotolabel __label27 __fn5
  141:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  142:  assertflush
  143:  set __fn5__n 3E50
  144:  setaddr __fn5retaddr __label28
  145:  call __label5 __fn5retval
        gotolabel __label28 __fn5
  146:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  147:  assertflush
  148:  set __fn5__n 1.0123456789
  149:  setaddr __fn5retaddr __label29
  150:  call __label5 __fn5retval
        gotolabel __label29 __fn5
  151:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  152:  assertflush
  153:  set __fn5__n 10000000999999999E4
  154:  setaddr __fn5retaddr __label30
  155:  call __label5 __fn5retval
        gotolabel __label30 __fn5
  156:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  157:  assertflush
  158:  set __fn5__n 12345E-54
  159:  setaddr __fn5retaddr __label31
  160:  call __label5 __fn5retval
        gotolabel __label31 __fn5
  161:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  162:  assertflush
  163:  set __fn5__n -12345E-54
  164:  setaddr __fn5retaddr __label32
  165:  call __label5 __fn5retval
        gotolabel __label32 __fn5
  166:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  167:  stop
  168:  end
        label __label4
  169:  op abs __tmp12 __fn4__n 0
  170:  jump __label48 greaterThan __tmp12 0
  171:  print __fn4__n
  172:  jump __label49 always 0 0
        label __label48
  173:  jump __label50 greaterThanEq __fn4__n 0
  174:  print "-"
  175:  op abs __fn4__n __fn4__n 0
        label __label50
  176:  op log10 __tmp18 __fn4__n 0
  177:  op floor __fn4__exp __tmp18 0
  178:  op mul __tmp20 -1 __fn4__exp
  179:  op pow __tmp21 10 __tmp20
  180:  op mul __fn4__base __fn4__n __tmp21
  181:  op add __tmp24 __fn4__base 0.5
  182:  op floor __tmp23 __tmp24 0
  183:  op sub __tmp26 __fn4__base __tmp23
  184:  op abs __fn4__cmp __tmp26 0
  185:  jump __label54 greaterThan __fn4__cmp 0
  186:  print __fn4__base
  187:  jump __label55 always 0 0
        label __label54
  188:  jump __label56 lessThanEq __fn4__cmp 0.00001
  189:  print __fn4__base
  190:  jump __label57 always 0 0
        label __label56
  191:  op floor __tmp32 __fn4__base 0
  192:  print __tmp32
  193:  print "."
  194:  op mod __tmp33 __fn4__base 1
  195:  op mul __fn4__base __tmp33 100000
  196:  op floor __fn4__t __fn4__base 0
  197:  jump __label155 greaterThanEq __fn4__t 10
  198:  print "0000"
  199:  jump __label162 always 0 0
        label __label155
  200:  jump __label156 greaterThanEq __fn4__t 100
  201:  print "000"
  202:  jump __label161 always 0 0
        label __label156
  203:  jump __label157 greaterThanEq __fn4__t 1000
  204:  print "00"
  205:  jump __label160 always 0 0
        label __label157
  206:  jump __label158 greaterThanEq __fn4__t 10000
  207:  print "0"
        label __label158
        label __label160
        label __label161
        label __label162
  208:  print __fn4__t
  209:  op mod __tmp33 __fn4__base 1
  210:  op mul __fn4__base __tmp33 100000
  211:  op floor __fn4__t __fn4__base 0
  212:  jump __label167 greaterThanEq __fn4__t 10
  213:  print "0000"
  214:  jump __label174 always 0 0
        label __label167
  215:  jump __label168 greaterThanEq __fn4__t 100
  216:  print "000"
  217:  jump __label173 always 0 0
        label __label168
  218:  jump __label169 greaterThanEq __fn4__t 1000
  219:  print "00"
  220:  jump __label172 always 0 0
        label __label169
  221:  jump __label170 greaterThanEq __fn4__t 10000
  222:  print "0"
        label __label170
        label __label172
        label __label173
        label __label174
  223:  print __fn4__t
  224:  op mod __tmp33 __fn4__base 1
  225:  op mul __fn4__base __tmp33 100000
  226:  op floor __fn4__t __fn4__base 0
  227:  jump __label179 greaterThanEq __fn4__t 10
  228:  print "0000"
  229:  jump __label186 always 0 0
        label __label179
  230:  jump __label180 greaterThanEq __fn4__t 100
  231:  print "000"
  232:  jump __label185 always 0 0
        label __label180
  233:  jump __label181 greaterThanEq __fn4__t 1000
  234:  print "00"
  235:  jump __label184 always 0 0
        label __label181
  236:  jump __label182 greaterThanEq __fn4__t 10000
  237:  print "0"
        label __label182
        label __label184
        label __label185
        label __label186
  238:  print __fn4__t
        label __label57
        label __label55
  239:  jump __label71 equal __fn4__exp 0
  240:  print "E"
  241:  print __fn4__exp
        label __label71
        label __label49
  242:  goto __fn4retaddr __fn4
  243:  end
        label __label5
  244:  op abs __tmp48 __fn5__n 0
  245:  jump __label76 greaterThan __tmp48 0
  246:  print __fn5__n
  247:  jump __label77 always 0 0
        label __label76
  248:  jump __label78 greaterThanEq __fn5__n 0
  249:  print "-"
  250:  op abs __fn5__n __fn5__n 0
        label __label78
  251:  op log10 __tmp54 __fn5__n 0
  252:  op floor __fn5__exp __tmp54 0
  253:  op mul __tmp56 -1 __fn5__exp
  254:  op pow __tmp57 10 __tmp56
  255:  op mul __fn5__base __fn5__n __tmp57
  256:  op floor __tmp59 __fn5__base 0
  257:  print __tmp59
  258:  print "."
  259:  op mod __tmp60 __fn5__base 1
  260:  op mul __fn5__base __tmp60 10
  261:  op floor __tmp63 __fn5__base 0
  262:  print __tmp63
  263:  op mod __tmp60 __fn5__base 1
  264:  op mul __fn5__base __tmp60 10
  265:  op floor __tmp63 __fn5__base 0
  266:  print __tmp63
  267:  op mod __tmp60 __fn5__base 1
  268:  op mul __fn5__base __tmp60 10
  269:  op floor __tmp63 __fn5__base 0
  270:  print __tmp63
  271:  op mod __tmp60 __fn5__base 1
  272:  op mul __fn5__base __tmp60 10
  273:  op floor __tmp63 __fn5__base 0
  274:  print __tmp63
  275:  op mod __tmp60 __fn5__base 1
  276:  op mul __fn5__base __tmp60 10
  277:  op floor __tmp63 __fn5__base 0
  278:  print __tmp63
  279:  op mod __tmp60 __fn5__base 1
  280:  op mul __fn5__base __tmp60 10
  281:  op floor __tmp63 __fn5__base 0
  282:  print __tmp63
  283:  op mod __tmp60 __fn5__base 1
  284:  op mul __fn5__base __tmp60 10
  285:  op floor __tmp63 __fn5__base 0
  286:  print __tmp63
  287:  op mod __tmp60 __fn5__base 1
  288:  op mul __fn5__base __tmp60 10
  289:  op floor __tmp63 __fn5__base 0
  290:  print __tmp63
  291:  op mod __tmp60 __fn5__base 1
  292:  op mul __fn5__base __tmp60 10
  293:  op floor __tmp63 __fn5__base 0
  294:  print __tmp63
  295:  op mod __tmp60 __fn5__base 1
  296:  op mul __fn5__base __tmp60 10
  297:  op floor __tmp63 __fn5__base 0
  298:  print __tmp63
  299:  op mod __tmp60 __fn5__base 1
  300:  op mul __fn5__base __tmp60 10
  301:  op floor __tmp63 __fn5__base 0
  302:  print __tmp63
  303:  op mod __tmp60 __fn5__base 1
  304:  op mul __fn5__base __tmp60 10
  305:  op floor __tmp63 __fn5__base 0
  306:  print __tmp63
  307:  op mod __tmp60 __fn5__base 1
  308:  op mul __fn5__base __tmp60 10
  309:  op floor __tmp63 __fn5__base 0
  310:  print __tmp63
  311:  op mod __tmp60 __fn5__base 1
  312:  op mul __fn5__base __tmp60 10
  313:  op floor __tmp63 __fn5__base 0
  314:  print __tmp63
  315:  op mod __tmp60 __fn5__base 1
  316:  op mul __fn5__base __tmp60 10
  317:  op floor __tmp63 __fn5__base 0
  318:  print __tmp63
  319:  jump __label85 equal __fn5__exp 0
  320:  print "E"
  321:  print __fn5__exp
        label __label85
        label __label77
  322:  goto __fn5retaddr __fn5
  323:  end


stop instruction encountered, dumping variable values:
@counter: 168.0
__fn4__base: 1.2345000000000002
__fn4__cmp: 0.23450000000000015
__fn4__exp: -50.0
__fn4__n: 1.2345E-50
__fn4__t: 99999.0
__fn4retaddr: 116.0
__fn5__base: 0.15276668818842154
__fn5__exp: -50.0
__fn5__n: 1.2345E-50
__fn5retaddr: 166.0
__fn6__mod: 9.0
__fn6__n: 9.0
__tmp12: 1.2345E-50
__tmp18: -49.90850890573205
__tmp20: 50.0
__tmp21: 1.0E50
__tmp23: 1.0
__tmp24: 1.7345000000000002
__tmp26: 0.23450000000000015
__tmp32: 1.0
__tmp33: 0.9999983634211276
__tmp48: 1.2345E-50
__tmp54: -49.90850890573205
__tmp56: 50.0
__tmp57: 1.0E50
__tmp59: 1.0
__tmp60: 0.015276668818842154
__tmp63: 0.0
__tmp7: {2},00{1}