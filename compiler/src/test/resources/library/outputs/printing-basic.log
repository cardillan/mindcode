   503 instructions before optimizations.
    27 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    42 instructions eliminated by Dead Code Elimination (7 iterations).
    88 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    23 instructions eliminated by Jump Optimization (7 iterations).
    47 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
   312 instructions eliminated by Data Flow Optimization (17 passes, 54 iterations).
     4 instructions eliminated by Loop Optimization (4 iterations).
     7 loops improved by Loop Optimization.
   320 instructions added by Loop Unrolling (19 iterations).
     6 loops unrolled by Loop Unrolling.
   653 instructions added by Function Inlining (19 iterations).
    20 function calls inlined by Function Inlining.
    10 instructions eliminated by Jump Straightening (2 passes, 7 iterations).
    49 instructions updated by JumpThreading.
   254 instructions eliminated by Unreachable Code Elimination (3 iterations).
    36 instructions eliminated by Print Merging.
   630 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 623):
  * Unroll iteration loop at *printing:23:5                      size    -5, benefit       11.0, efficiency   Infinity (-5 instructions)
    Unroll iteration loop at *printing:344:5                     size    +5, benefit        7.0, efficiency      1.400
    Unroll loop at *printing:345:9                               size   +90, benefit    40000.0, efficiency    444.444
    Unroll iteration loop at *printing:369:5                     size   +13, benefit        7.0, efficiency      0.538
    Unroll loop at *printing:370:9                               size   +46, benefit    10000.0, efficiency    217.391
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146

Pass 1: speed optimization selection (cost limit 628):
    Unroll iteration loop at *printing:344:5                     size    +5, benefit        7.0, efficiency      1.400
  * Unroll loop at *printing:345:9                               size   +90, benefit    40000.0, efficiency    444.444 (+90 instructions)
    Unroll iteration loop at *printing:369:5                     size   +13, benefit        7.0, efficiency      0.538
    Unroll loop at *printing:370:9                               size   +46, benefit    10000.0, efficiency    217.391
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146

Pass 1: speed optimization selection (cost limit 538):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +13, benefit        7.0, efficiency      0.538
  * Unroll loop at *printing:370:9                               size   +46, benefit    10000.0, efficiency    217.391 (+38 instructions)
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146

Pass 1: speed optimization selection (cost limit 500):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
  * Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755 (+53 instructions)
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146

Pass 1: speed optimization selection (cost limit 447):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079
  * Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944 (+27 instructions)
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 420):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079
    Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243
  * Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364 (+17 instructions)
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 403):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079
  * Inline function 'printNumber' defined at *printing:78:1      size  +101, benefit       24.5, efficiency      0.243 (+78 instructions)
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 325):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079
  * Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142 (+93 instructions)
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 232):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  * Unroll iteration loop at *printing:369:5                     size   +89, benefit        7.0, efficiency      0.079 (-22 instructions)
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 254):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
  * Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049 (+50 instructions)
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 204):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +575, benefit       31.5, efficiency      0.055
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
  * Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049 (+49 instructions)
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 155):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +503, benefit       28.0, efficiency      0.056
  * Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049 (+58 instructions)
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 97):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +431, benefit       24.5, efficiency      0.057
  * Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049 (+52 instructions)
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 1: speed optimization selection (cost limit 45):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +359, benefit       21.0, efficiency      0.058
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 122):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +359, benefit       21.0, efficiency      0.058
  * Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049 (+49 instructions)
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 73):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +287, benefit       17.5, efficiency      0.061
  * Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049 (+49 instructions)
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 24):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +215, benefit       14.0, efficiency      0.065
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 48):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +215, benefit       14.0, efficiency      0.065
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 4: speed optimization selection (cost limit 48):
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +215, benefit       14.0, efficiency      0.065
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "1\n2\n3\n"
    2:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
    3:  assertflush
    4:  print "{2}"
    5:  op floor :formatNumber:n 0 0
    6:  format :formatNumber:n
    7:  assertprints "0" "printNumber(null)"
    8:  assertflush
    9:  print "{2}"
   10:  op floor :formatNumber:n 1 0
   11:  format :formatNumber:n
   12:  assertprints "1" "printNumber(1)"
   13:  assertflush
   14:  print "{2}"
   15:  op floor :formatNumber:n 1.5 0
   16:  format :formatNumber:n
   17:  assertprints "1" "printNumber(1.5)"
   18:  assertflush
   19:  print "{2}"
   20:  op floor :formatNumber:n 1.5 0
   21:  format "-{2}"
   22:  format :formatNumber:n
   23:  assertprints "-1" "printNumber(-1.5)"
   24:  assertflush
   25:  print "{2}"
   26:  op floor :formatNumber:n 1234567 0
        label *label443
   27:  op mod :formatNumber:mod :formatNumber:n 1000
   28:  jump *label444 lessThan :formatNumber:mod 100
   29:  format "{2},{1}"
   30:  jump *label447 always 0 0
        label *label444
   31:  jump *label445 lessThan :formatNumber:mod 10
   32:  format "{2},0{1}"
   33:  jump *label446 always 0 0
        label *label445
   34:  format "{2},00{1}"
        label *label446
        label *label447
   35:  format :formatNumber:mod
   36:  op idiv :formatNumber:n :formatNumber:n 1000
   37:  jump *label443 greaterThan :formatNumber:n 999
   38:  format :formatNumber:n
   39:  assertprints "1,234,567" "printNumber(1234567)"
   40:  assertflush
   41:  print "{2}"
   42:  op floor :formatNumber:n 1234567 0
   43:  format "-{2}"
        label *label456
   44:  op mod :formatNumber:mod :formatNumber:n 1000
   45:  jump *label457 lessThan :formatNumber:mod 100
   46:  format "{2},{1}"
   47:  jump *label460 always 0 0
        label *label457
   48:  jump *label458 lessThan :formatNumber:mod 10
   49:  format "{2},0{1}"
   50:  jump *label459 always 0 0
        label *label458
   51:  format "{2},00{1}"
        label *label459
        label *label460
   52:  format :formatNumber:mod
   53:  op idiv :formatNumber:n :formatNumber:n 1000
   54:  jump *label456 greaterThan :formatNumber:n 999
   55:  format :formatNumber:n
   56:  assertprints "-1,234,567" "printNumber(-1234567)"
   57:  assertflush
   58:  print "{2}"
   59:  op floor :formatNumber:n 9009099999 0
        label *label469
   60:  op mod :formatNumber:mod :formatNumber:n 1000
   61:  jump *label470 lessThan :formatNumber:mod 100
   62:  format "{2},{1}"
   63:  jump *label473 always 0 0
        label *label470
   64:  jump *label471 lessThan :formatNumber:mod 10
   65:  format "{2},0{1}"
   66:  jump *label472 always 0 0
        label *label471
   67:  format "{2},00{1}"
        label *label472
        label *label473
   68:  format :formatNumber:mod
   69:  op idiv :formatNumber:n :formatNumber:n 1000
   70:  jump *label469 greaterThan :formatNumber:n 999
   71:  format :formatNumber:n
   72:  assertprints "9,009,099,999" "printNumber(9009099999)"
   73:  assertflush
   74:  print "{2}"
   75:  set :formatBinaryNumber:digits 0
   76:  op floor :formatBinaryNumber:n 0b1001 0
        label *label354
   77:  op and *tmp29 :formatBinaryNumber:n 1
   78:  format "{2}{1}"
   79:  format *tmp29
   80:  op shr :formatBinaryNumber:n :formatBinaryNumber:n 1
   81:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
   82:  jump *label354 greaterThan :formatBinaryNumber:n 0
   83:  jump *label360 lessThanEq :formatBinaryNumber:digits 0
        label *label358
   84:  format "{2}0"
   85:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
   86:  jump *label358 greaterThan :formatBinaryNumber:digits 0
        label *label360
   87:  format "0b"
   88:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   89:  assertflush
   90:  print "{2}"
   91:  set :formatBinaryNumber:digits 6
   92:  op floor :formatBinaryNumber:n 0b1010 0
        label *label366
   93:  op and *tmp29 :formatBinaryNumber:n 1
   94:  format "{2}{1}"
   95:  format *tmp29
   96:  op shr :formatBinaryNumber:n :formatBinaryNumber:n 1
   97:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
   98:  jump *label366 greaterThan :formatBinaryNumber:n 0
   99:  jump *label372 lessThanEq :formatBinaryNumber:digits 0
        label *label370
  100:  format "{2}0"
  101:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
  102:  jump *label370 greaterThan :formatBinaryNumber:digits 0
        label *label372
  103:  format "0b"
  104:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
  105:  assertflush
  106:  print "{2}"
  107:  set :formatBinaryNumber:digits 6
  108:  format "-{2}"
  109:  op floor :formatBinaryNumber:n 10 0
        label *label378
  110:  op and *tmp29 :formatBinaryNumber:n 1
  111:  format "{2}{1}"
  112:  format *tmp29
  113:  op shr :formatBinaryNumber:n :formatBinaryNumber:n 1
  114:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
  115:  jump *label378 greaterThan :formatBinaryNumber:n 0
  116:  jump *label384 lessThanEq :formatBinaryNumber:digits 0
        label *label382
  117:  format "{2}0"
  118:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
  119:  jump *label382 greaterThan :formatBinaryNumber:digits 0
        label *label384
  120:  format "0b"
  121:  assertprints "-0b001010" "printBinaryNumber(-0b1010, 6)"
  122:  assertflush
  123:  print "{2}"
  124:  set :formatHexNumber:digits 0
  125:  op floor :formatHexNumber:n 0xABCDEF 0
        label *label481
  126:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  127:  jump *label484 lessThan :formatHexNumber:digit 0
  128:  jump *label484 greaterThan :formatHexNumber:digit 9
  129:  format "{2}{1}"
  130:  format :formatHexNumber:digit
  131:  jump *label497 always 0 0
        label *label484
  132:  jump *label486 notEqual :formatHexNumber:digit 10
  133:  format "{2}A"
  134:  jump *label497 always 0 0
        label *label486
  135:  jump *label488 notEqual :formatHexNumber:digit 11
  136:  format "{2}B"
  137:  jump *label497 always 0 0
        label *label488
  138:  jump *label490 notEqual :formatHexNumber:digit 12
  139:  format "{2}C"
  140:  jump *label497 always 0 0
        label *label490
  141:  jump *label492 notEqual :formatHexNumber:digit 13
  142:  format "{2}D"
  143:  jump *label497 always 0 0
        label *label492
  144:  jump *label494 notEqual :formatHexNumber:digit 14
  145:  format "{2}E"
  146:  jump *label497 always 0 0
        label *label494
  147:  jump *label496 notEqual :formatHexNumber:digit 15
  148:  format "{2}F"
        label *label496
        label *label497
  149:  op shr :formatHexNumber:n :formatHexNumber:n 4
  150:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  151:  jump *label481 greaterThan :formatHexNumber:n 0
  152:  jump *label503 lessThanEq :formatHexNumber:digits 0
        label *label501
  153:  format "{2}0"
  154:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  155:  jump *label501 greaterThan :formatHexNumber:digits 0
        label *label503
  156:  format "0x"
  157:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
  158:  assertflush
  159:  print "{2}"
  160:  set :formatHexNumber:digits 0
  161:  op floor :formatHexNumber:n 0x1234567890 0
        label *label509
  162:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  163:  jump *label512 lessThan :formatHexNumber:digit 0
  164:  jump *label512 greaterThan :formatHexNumber:digit 9
  165:  format "{2}{1}"
  166:  format :formatHexNumber:digit
  167:  jump *label525 always 0 0
        label *label512
  168:  jump *label514 notEqual :formatHexNumber:digit 10
  169:  format "{2}A"
  170:  jump *label525 always 0 0
        label *label514
  171:  jump *label516 notEqual :formatHexNumber:digit 11
  172:  format "{2}B"
  173:  jump *label525 always 0 0
        label *label516
  174:  jump *label518 notEqual :formatHexNumber:digit 12
  175:  format "{2}C"
  176:  jump *label525 always 0 0
        label *label518
  177:  jump *label520 notEqual :formatHexNumber:digit 13
  178:  format "{2}D"
  179:  jump *label525 always 0 0
        label *label520
  180:  jump *label522 notEqual :formatHexNumber:digit 14
  181:  format "{2}E"
  182:  jump *label525 always 0 0
        label *label522
  183:  jump *label524 notEqual :formatHexNumber:digit 15
  184:  format "{2}F"
        label *label524
        label *label525
  185:  op shr :formatHexNumber:n :formatHexNumber:n 4
  186:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  187:  jump *label509 greaterThan :formatHexNumber:n 0
  188:  jump *label531 lessThanEq :formatHexNumber:digits 0
        label *label529
  189:  format "{2}0"
  190:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  191:  jump *label529 greaterThan :formatHexNumber:digits 0
        label *label531
  192:  format "0x"
  193:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  194:  assertflush
  195:  print "{2}"
  196:  set :formatHexNumber:digits 8
  197:  op floor :formatHexNumber:n 0xAABBCC 0
        label *label537
  198:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  199:  jump *label540 lessThan :formatHexNumber:digit 0
  200:  jump *label540 greaterThan :formatHexNumber:digit 9
  201:  format "{2}{1}"
  202:  format :formatHexNumber:digit
  203:  jump *label553 always 0 0
        label *label540
  204:  jump *label542 notEqual :formatHexNumber:digit 10
  205:  format "{2}A"
  206:  jump *label553 always 0 0
        label *label542
  207:  jump *label544 notEqual :formatHexNumber:digit 11
  208:  format "{2}B"
  209:  jump *label553 always 0 0
        label *label544
  210:  jump *label546 notEqual :formatHexNumber:digit 12
  211:  format "{2}C"
  212:  jump *label553 always 0 0
        label *label546
  213:  jump *label548 notEqual :formatHexNumber:digit 13
  214:  format "{2}D"
  215:  jump *label553 always 0 0
        label *label548
  216:  jump *label550 notEqual :formatHexNumber:digit 14
  217:  format "{2}E"
  218:  jump *label553 always 0 0
        label *label550
  219:  jump *label552 notEqual :formatHexNumber:digit 15
  220:  format "{2}F"
        label *label552
        label *label553
  221:  op shr :formatHexNumber:n :formatHexNumber:n 4
  222:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  223:  jump *label537 greaterThan :formatHexNumber:n 0
  224:  jump *label559 lessThanEq :formatHexNumber:digits 0
        label *label557
  225:  format "{2}0"
  226:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  227:  jump *label557 greaterThan :formatHexNumber:digits 0
        label *label559
  228:  format "0x"
  229:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  230:  assertflush
  231:  print "{2}"
  232:  set :formatHexNumber:digits 8
  233:  format "-{2}"
  234:  op floor :formatHexNumber:n 11189196 0
        label *label565
  235:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  236:  jump *label568 lessThan :formatHexNumber:digit 0
  237:  jump *label568 greaterThan :formatHexNumber:digit 9
  238:  format "{2}{1}"
  239:  format :formatHexNumber:digit
  240:  jump *label581 always 0 0
        label *label568
  241:  jump *label570 notEqual :formatHexNumber:digit 10
  242:  format "{2}A"
  243:  jump *label581 always 0 0
        label *label570
  244:  jump *label572 notEqual :formatHexNumber:digit 11
  245:  format "{2}B"
  246:  jump *label581 always 0 0
        label *label572
  247:  jump *label574 notEqual :formatHexNumber:digit 12
  248:  format "{2}C"
  249:  jump *label581 always 0 0
        label *label574
  250:  jump *label576 notEqual :formatHexNumber:digit 13
  251:  format "{2}D"
  252:  jump *label581 always 0 0
        label *label576
  253:  jump *label578 notEqual :formatHexNumber:digit 14
  254:  format "{2}E"
  255:  jump *label581 always 0 0
        label *label578
  256:  jump *label580 notEqual :formatHexNumber:digit 15
  257:  format "{2}F"
        label *label580
        label *label581
  258:  op shr :formatHexNumber:n :formatHexNumber:n 4
  259:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  260:  jump *label565 greaterThan :formatHexNumber:n 0
  261:  jump *label587 lessThanEq :formatHexNumber:digits 0
        label *label585
  262:  format "{2}0"
  263:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  264:  jump *label585 greaterThan :formatHexNumber:digits 0
        label *label587
  265:  format "0x"
  266:  assertprints "-0x00AABBCC" "printHexNumber(-0xAABBCC, 8)"
  267:  assertflush
  268:  print null
  269:  assertprints "null" "printExactFast(null)"
  270:  assertflush
  271:  print 0
  272:  assertprints "0" "printExactFast(0)"
  273:  assertflush
  274:  print 1
  275:  assertprints "1" "printExactFast(1)"
  276:  assertflush
  277:  print "1.000000100000000"
  278:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  279:  assertflush
  280:  op floor *tmp64 3.00000007 0
  281:  print "3.000000070000000"
  282:  op mod *tmp65 700.0000001866624 1
  283:  op floor :printExactFast:t 0.018666241885512136 0
  284:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  285:  assertflush
  286:  op abs *tmp44 3E50 0
  287:  op log10 *tmp50 3E50 0
  288:  op floor :printExactFast:exp 50.47712125471966 0
  289:  op sub *tmp52 0 50
  290:  op pow *tmp53 10 -50
  291:  op mul :printExactFast:base 3E50 1E-50
  292:  op add *tmp56 3 0.5
  293:  op floor *tmp55 3.5 0
  294:  op sub *tmp58 3 3
  295:  op abs :printExactFast:cmp 0 0
  296:  print "3E50"
  297:  assertprints "3E50" "printExactFast(3e50)"
  298:  assertflush
  299:  set :printExactFast:n 1.0123456789
  300:  setaddr :printExactFast*retaddr *label35
  301:  call *label6 *invalid :printExactFast*retval
        label *label35
  302:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  303:  assertflush
  304:  set :printExactFast:n 10000001E13
  305:  setaddr :printExactFast*retaddr *label36
  306:  call *label6 *invalid :printExactFast*retval
        label *label36
  307:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  308:  assertflush
  309:  set :printExactFast:n 12345E-54
  310:  setaddr :printExactFast*retaddr *label37
  311:  call *label6 *invalid :printExactFast*retval
        label *label37
  312:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  313:  assertflush
  314:  set :printExactFast:n -12345E-54
  315:  setaddr :printExactFast*retaddr *label38
  316:  call *label6 *invalid :printExactFast*retval
        label *label38
  317:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  318:  assertflush
  319:  set :printExactSlow:n null
  320:  setaddr :printExactSlow*retaddr *label39
  321:  call *label7 *invalid :printExactSlow*retval
        label *label39
  322:  assertprints "null" "printExactSlow(null)"
  323:  assertflush
  324:  set :printExactSlow:n 0
  325:  setaddr :printExactSlow*retaddr *label40
  326:  call *label7 *invalid :printExactSlow*retval
        label *label40
  327:  assertprints "0" "printExactSlow(0)"
  328:  assertflush
  329:  set :printExactSlow:n 1
  330:  setaddr :printExactSlow*retaddr *label41
  331:  call *label7 *invalid :printExactSlow*retval
        label *label41
  332:  assertprints "1.000000000000000" "printExactSlow(1)"
  333:  assertflush
  334:  set :printExactSlow:n 1.0000001
  335:  setaddr :printExactSlow*retaddr *label42
  336:  call *label7 *invalid :printExactSlow*retval
        label *label42
  337:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  338:  assertflush
  339:  set :printExactSlow:n 3.00000007
  340:  setaddr :printExactSlow*retaddr *label43
  341:  call *label7 *invalid :printExactSlow*retval
        label *label43
  342:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  343:  assertflush
  344:  set :printExactSlow:n 3E50
  345:  setaddr :printExactSlow*retaddr *label44
  346:  call *label7 *invalid :printExactSlow*retval
        label *label44
  347:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  348:  assertflush
  349:  set :printExactSlow:n 1.0123456789
  350:  setaddr :printExactSlow*retaddr *label45
  351:  call *label7 *invalid :printExactSlow*retval
        label *label45
  352:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  353:  assertflush
  354:  set :printExactSlow:n 10000001E13
  355:  setaddr :printExactSlow*retaddr *label46
  356:  call *label7 *invalid :printExactSlow*retval
        label *label46
  357:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  358:  assertflush
  359:  set :printExactSlow:n 12345E-54
  360:  setaddr :printExactSlow*retaddr *label47
  361:  call *label7 *invalid :printExactSlow*retval
        label *label47
  362:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  363:  assertflush
  364:  set :printExactSlow:n -12345E-54
  365:  setaddr :printExactSlow*retaddr *label48
  366:  call *label7 *invalid :printExactSlow*retval
        label *label48
  367:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  368:  assertflush
  369:  op shr :printExactBinary:t -1035087118336 32
  370:  setaddr *tmp1 *label53
  371:  jump *label50 always 0 0
        multilabel *label53
  372:  op and :printExactBinary:t -1035087118336 0xFFFFFFFF
  373:  setaddr *tmp1 *label54
        label *label50
  374:  op shr *tmp4 :printExactBinary:t 31
  375:  op and *tmp5 *tmp4 1
  376:  print *tmp5
  377:  op shr *tmp4 :printExactBinary:t 30
  378:  op and *tmp5 *tmp4 1
  379:  print *tmp5
  380:  op shr *tmp4 :printExactBinary:t 29
  381:  op and *tmp5 *tmp4 1
  382:  print *tmp5
  383:  op shr *tmp4 :printExactBinary:t 28
  384:  op and *tmp5 *tmp4 1
  385:  print *tmp5
  386:  op shr *tmp4 :printExactBinary:t 27
  387:  op and *tmp5 *tmp4 1
  388:  print *tmp5
  389:  op shr *tmp4 :printExactBinary:t 26
  390:  op and *tmp5 *tmp4 1
  391:  print *tmp5
  392:  op shr *tmp4 :printExactBinary:t 25
  393:  op and *tmp5 *tmp4 1
  394:  print *tmp5
  395:  op shr *tmp4 :printExactBinary:t 24
  396:  op and *tmp5 *tmp4 1
  397:  print *tmp5
  398:  op shr *tmp4 :printExactBinary:t 23
  399:  op and *tmp5 *tmp4 1
  400:  print *tmp5
  401:  op shr *tmp4 :printExactBinary:t 22
  402:  op and *tmp5 *tmp4 1
  403:  print *tmp5
  404:  op shr *tmp4 :printExactBinary:t 21
  405:  op and *tmp5 *tmp4 1
  406:  print *tmp5
  407:  op shr *tmp4 :printExactBinary:t 20
  408:  op and *tmp5 *tmp4 1
  409:  print *tmp5
  410:  op shr *tmp4 :printExactBinary:t 19
  411:  op and *tmp5 *tmp4 1
  412:  print *tmp5
  413:  op shr *tmp4 :printExactBinary:t 18
  414:  op and *tmp5 *tmp4 1
  415:  print *tmp5
  416:  op shr *tmp4 :printExactBinary:t 17
  417:  op and *tmp5 *tmp4 1
  418:  print *tmp5
  419:  op shr *tmp4 :printExactBinary:t 16
  420:  op and *tmp5 *tmp4 1
  421:  print *tmp5
  422:  op shr *tmp4 :printExactBinary:t 15
  423:  op and *tmp5 *tmp4 1
  424:  print *tmp5
  425:  op shr *tmp4 :printExactBinary:t 14
  426:  op and *tmp5 *tmp4 1
  427:  print *tmp5
  428:  op shr *tmp4 :printExactBinary:t 13
  429:  op and *tmp5 *tmp4 1
  430:  print *tmp5
  431:  op shr *tmp4 :printExactBinary:t 12
  432:  op and *tmp5 *tmp4 1
  433:  print *tmp5
  434:  op shr *tmp4 :printExactBinary:t 11
  435:  op and *tmp5 *tmp4 1
  436:  print *tmp5
  437:  op shr *tmp4 :printExactBinary:t 10
  438:  op and *tmp5 *tmp4 1
  439:  print *tmp5
  440:  op shr *tmp4 :printExactBinary:t 9
  441:  op and *tmp5 *tmp4 1
  442:  print *tmp5
  443:  op shr *tmp4 :printExactBinary:t 8
  444:  op and *tmp5 *tmp4 1
  445:  print *tmp5
  446:  op shr *tmp4 :printExactBinary:t 7
  447:  op and *tmp5 *tmp4 1
  448:  print *tmp5
  449:  op shr *tmp4 :printExactBinary:t 6
  450:  op and *tmp5 *tmp4 1
  451:  print *tmp5
  452:  op shr *tmp4 :printExactBinary:t 5
  453:  op and *tmp5 *tmp4 1
  454:  print *tmp5
  455:  op shr *tmp4 :printExactBinary:t 4
  456:  op and *tmp5 *tmp4 1
  457:  print *tmp5
  458:  op shr *tmp4 :printExactBinary:t 3
  459:  op and *tmp5 *tmp4 1
  460:  print *tmp5
  461:  op shr *tmp4 :printExactBinary:t 2
  462:  op and *tmp5 *tmp4 1
  463:  print *tmp5
  464:  op shr *tmp4 :printExactBinary:t 1
  465:  op and *tmp5 *tmp4 1
  466:  print *tmp5
  467:  op shr *tmp4 :printExactBinary:t 0
  468:  op and *tmp5 *tmp4 1
  469:  print *tmp5
  470:  multijump *tmp1 0 0
        multilabel *label54
  471:  assertprints "1111111111111111111111110000111100000000000000000000000000000000" "printExactBinary(0xFFFFFF0F << 32)"
  472:  assertflush
  473:  print "FFFFFF0F00000000"
  474:  assertprints "FFFFFF0F00000000" "printExactHex(0xFFFFFF0F << 32)"
  475:  stop
  476:  end
        label *label6
  477:  op abs *tmp44 :printExactFast:n 0
  478:  jump *label118 greaterThan *tmp44 0
  479:  print :printExactFast:n
  480:  return :printExactFast*retaddr
        label *label118
  481:  jump *label120 greaterThanEq :printExactFast:n 0
  482:  print "-"
  483:  op abs :printExactFast:n :printExactFast:n 0
        label *label120
  484:  op log10 *tmp50 :printExactFast:n 0
  485:  op floor :printExactFast:exp *tmp50 0
  486:  op sub *tmp52 0 :printExactFast:exp
  487:  op pow *tmp53 10 *tmp52
  488:  op mul :printExactFast:base :printExactFast:n *tmp53
  489:  op add *tmp56 :printExactFast:base 0.5
  490:  op floor *tmp55 *tmp56 0
  491:  op sub *tmp58 :printExactFast:base *tmp55
  492:  op abs :printExactFast:cmp *tmp58 0
  493:  jump *label123 greaterThan :printExactFast:cmp 0
  494:  print :printExactFast:base
  495:  jump *label124 always 0 0
        label *label123
  496:  jump *label125 lessThanEq :printExactFast:cmp 0.00001
  497:  print :printExactFast:base
  498:  jump *label126 always 0 0
        label *label125
  499:  op floor *tmp64 :printExactFast:base 0
  500:  print *tmp64
  501:  print "."
  502:  op mod *tmp65 :printExactFast:base 1
  503:  op mul :printExactFast:base *tmp65 100000
  504:  op floor :printExactFast:t :printExactFast:base 0
  505:  jump *label322 greaterThanEq :printExactFast:t 100
  506:  jump *label320 greaterThanEq :printExactFast:t 10
  507:  print "0000"
  508:  jump *label327 always 0 0
        label *label320
  509:  print "000"
  510:  jump *label327 always 0 0
        label *label322
  511:  jump *label323 greaterThanEq :printExactFast:t 1000
  512:  print "00"
  513:  jump *label326 always 0 0
        label *label323
  514:  jump *label324 greaterThanEq :printExactFast:t 10000
  515:  print "0"
        label *label324
        label *label326
        label *label327
  516:  print :printExactFast:t
  517:  op mod *tmp65 :printExactFast:base 1
  518:  op mul :printExactFast:base *tmp65 100000
  519:  op floor :printExactFast:t :printExactFast:base 0
  520:  jump *label333 greaterThanEq :printExactFast:t 100
  521:  jump *label331 greaterThanEq :printExactFast:t 10
  522:  print "0000"
  523:  jump *label338 always 0 0
        label *label331
  524:  print "000"
  525:  jump *label338 always 0 0
        label *label333
  526:  jump *label334 greaterThanEq :printExactFast:t 1000
  527:  print "00"
  528:  jump *label337 always 0 0
        label *label334
  529:  jump *label335 greaterThanEq :printExactFast:t 10000
  530:  print "0"
        label *label335
        label *label337
        label *label338
  531:  print :printExactFast:t
  532:  op mod *tmp65 :printExactFast:base 1
  533:  op mul :printExactFast:base *tmp65 100000
  534:  op floor :printExactFast:t :printExactFast:base 0
  535:  jump *label344 greaterThanEq :printExactFast:t 100
  536:  jump *label342 greaterThanEq :printExactFast:t 10
  537:  print "0000"
  538:  jump *label349 always 0 0
        label *label342
  539:  print "000"
  540:  jump *label349 always 0 0
        label *label344
  541:  jump *label345 greaterThanEq :printExactFast:t 1000
  542:  print "00"
  543:  jump *label348 always 0 0
        label *label345
  544:  jump *label346 greaterThanEq :printExactFast:t 10000
  545:  print "0"
        label *label346
        label *label348
        label *label349
  546:  print :printExactFast:t
        label *label126
        label *label124
  547:  jump *label139 equal :printExactFast:exp 0
  548:  print "E"
  549:  print :printExactFast:exp
        label *label139
  550:  return :printExactFast*retaddr
        label *label7
  551:  op abs *tmp80 :printExactSlow:n 0
  552:  jump *label143 greaterThan *tmp80 0
  553:  print :printExactSlow:n
  554:  return :printExactSlow*retaddr
        label *label143
  555:  jump *label145 greaterThanEq :printExactSlow:n 0
  556:  print "-"
  557:  op abs :printExactSlow:n :printExactSlow:n 0
        label *label145
  558:  op log10 *tmp86 :printExactSlow:n 0
  559:  op floor :printExactSlow:exp *tmp86 0
  560:  op sub *tmp88 0 :printExactSlow:exp
  561:  op pow *tmp89 10 *tmp88
  562:  op mul :printExactSlow:base :printExactSlow:n *tmp89
  563:  op floor *tmp91 :printExactSlow:base 0
  564:  print *tmp91
  565:  print "."
  566:  op mod *tmp92 :printExactSlow:base 1
  567:  op mul :printExactSlow:base *tmp92 10
  568:  op floor *tmp95 :printExactSlow:base 0
  569:  print *tmp95
  570:  op mod *tmp92 :printExactSlow:base 1
  571:  op mul :printExactSlow:base *tmp92 10
  572:  op floor *tmp95 :printExactSlow:base 0
  573:  print *tmp95
  574:  op mod *tmp92 :printExactSlow:base 1
  575:  op mul :printExactSlow:base *tmp92 10
  576:  op floor *tmp95 :printExactSlow:base 0
  577:  print *tmp95
  578:  op mod *tmp92 :printExactSlow:base 1
  579:  op mul :printExactSlow:base *tmp92 10
  580:  op floor *tmp95 :printExactSlow:base 0
  581:  print *tmp95
  582:  op mod *tmp92 :printExactSlow:base 1
  583:  op mul :printExactSlow:base *tmp92 10
  584:  op floor *tmp95 :printExactSlow:base 0
  585:  print *tmp95
  586:  op mod *tmp92 :printExactSlow:base 1
  587:  op mul :printExactSlow:base *tmp92 10
  588:  op floor *tmp95 :printExactSlow:base 0
  589:  print *tmp95
  590:  op mod *tmp92 :printExactSlow:base 1
  591:  op mul :printExactSlow:base *tmp92 10
  592:  op floor *tmp95 :printExactSlow:base 0
  593:  print *tmp95
  594:  op mod *tmp92 :printExactSlow:base 1
  595:  op mul :printExactSlow:base *tmp92 10
  596:  op floor *tmp95 :printExactSlow:base 0
  597:  print *tmp95
  598:  op mod *tmp92 :printExactSlow:base 1
  599:  op mul :printExactSlow:base *tmp92 10
  600:  op floor *tmp95 :printExactSlow:base 0
  601:  print *tmp95
  602:  op mod *tmp92 :printExactSlow:base 1
  603:  op mul :printExactSlow:base *tmp92 10
  604:  op floor *tmp95 :printExactSlow:base 0
  605:  print *tmp95
  606:  op mod *tmp92 :printExactSlow:base 1
  607:  op mul :printExactSlow:base *tmp92 10
  608:  op floor *tmp95 :printExactSlow:base 0
  609:  print *tmp95
  610:  op mod *tmp92 :printExactSlow:base 1
  611:  op mul :printExactSlow:base *tmp92 10
  612:  op floor *tmp95 :printExactSlow:base 0
  613:  print *tmp95
  614:  op mod *tmp92 :printExactSlow:base 1
  615:  op mul :printExactSlow:base *tmp92 10
  616:  op floor *tmp95 :printExactSlow:base 0
  617:  print *tmp95
  618:  op mod *tmp92 :printExactSlow:base 1
  619:  op mul :printExactSlow:base *tmp92 10
  620:  op floor *tmp95 :printExactSlow:base 0
  621:  print *tmp95
  622:  op mod *tmp92 :printExactSlow:base 1
  623:  op mul :printExactSlow:base *tmp92 10
  624:  op floor *tmp95 :printExactSlow:base 0
  625:  print *tmp95
  626:  jump *label151 equal :printExactSlow:exp 0
  627:  print "E"
  628:  print :printExactSlow:exp
        label *label151
  629:  return :printExactSlow*retaddr


stop instruction encountered, dumping variable values:
*tmp1: 471.0
*tmp29: 1.0
*tmp4: 0.0
*tmp44: 1.2345E-50
*tmp5: 0.0
*tmp50: -49.90850890573205
*tmp52: 50.0
*tmp53: 1.0E50
*tmp55: 1.0
*tmp56: 1.7345000000000002
*tmp58: 0.23450000000000015
*tmp64: 1.0
*tmp65: 0.9999983634211276
*tmp80: 1.2345E-50
*tmp86: -49.90850890573205
*tmp88: 50.0
*tmp89: 1.0E50
*tmp91: 1.0
*tmp92: 0.015276668818842154
*tmp95: 0.0
:formatBinaryNumber:digits: 0.0
:formatBinaryNumber:n: 0.0
:formatHexNumber:digit: 10.0
:formatHexNumber:digits: 0.0
:formatHexNumber:n: 0.0
:formatNumber:mod: 9.0
:formatNumber:n: 9.0
:printExactBinary:t: 0.0
:printExactFast*retaddr: 317.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactSlow*retaddr: 367.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
@counter: 476.0