InputFile{id=0, library=false, path=}: number of reported ambiguities: 58
Active optimizations:
    case-expression-optimization = basic,
    case-switching = basic,
    data-flow-optimization = basic,
    dead-code-elimination = basic,
    expression-optimization = basic,
    function-inlining = basic,
    if-expression-optimization = basic,
    jump-normalization = basic,
    jump-optimization = basic,
    jump-straightening = basic,
    jump-threading = basic,
    loop-hoisting = basic,
    loop-optimization = basic,
    loop-unrolling = basic,
    print-merging = basic,
    return-optimization = basic,
    single-step-elimination = basic,
    stack-optimization = basic,
    temp-variables-elimination = basic,
    unreachable-code-elimination = basic

   550 instructions before optimizations.
    18 instructions eliminated by Temp Variables Elimination.
    53 instructions eliminated by Dead Code Elimination (6 iterations).
     5 instructions eliminated by Jump Normalization (4 iterations).
    16 instructions eliminated by Jump Optimization (4 iterations).
    19 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
    94 instructions eliminated by Data Flow Optimization (4 passes, 14 iterations).
     2 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   100 instructions added by Loop Unrolling (6 iterations).
     2 loops unrolled by Loop Unrolling.
    92 instructions added by Function Inlining (6 iterations).
     7 function calls inlined by Function Inlining.
     3 instructions updated by JumpThreading.
    48 instructions eliminated by Unreachable Code Elimination.
   175 instructions eliminated by Print Merging.
   310 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 607):
    Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9
  * Loop Unrolling: unroll loop at line 153                      cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
    Function Inlining: inline function printExactSlow            cost   215, benefit       35.0, efficiency        0.2

Pass 1: speed optimization selection (cost limit 554):
  * Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 527):
  * Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 449):
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1

Pass 2: speed optimization selection (cost limit 461):
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1

Pass 3: speed optimization selection (cost limit 461):
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1

Final code before resolving virtual instructions:

    0:  print "T:printNumber(null)\nE:0\nA:{2}"
    1:  op floor __fn33__n 0 0
    2:  format __fn33__n
    3:  print "\nT:printNumber(1)\nE:1\nA:{2}"
    4:  op floor __fn33__n 1 0
    5:  format __fn33__n
    6:  print "\nT:printNumber(1.5)\nE:1\nA:{2}"
    7:  op floor __fn33__n 1.5 0
    8:  format __fn33__n
    9:  print "\nT:printNumber(-1.5)\nE:-1\nA:{2}"
   10:  op floor __fn33__n 1.5 0
   11:  format "-{2}"
   12:  format __fn33__n
   13:  print "\nT:printNumber(1234567)\nE:"
   14:  print "1,234,567\nA:{2}"
   15:  op floor __fn33__n 1234567 0
        label __label299
   16:  op mod __fn33__mod __fn33__n 1000
   17:  set __tmp34 "{2},00{1}"
   18:  jump __label302 lessThan __fn33__mod 10
   19:  set __tmp34 "{2},{1}"
   20:  jump __label301 greaterThanEq __fn33__mod 100
   21:  set __tmp34 "{2},0{1}"
        label __label301
        label __label302
   22:  format __tmp34
   23:  format __fn33__mod
   24:  op idiv __fn33__n __fn33__n 1000
   25:  jump __label299 greaterThan __fn33__n 999
   26:  format __fn33__n
   27:  print "\nT:printNumber(-1234567)\nE:"
   28:  print "-1,234,567\nA:{2}"
   29:  op floor __fn33__n 1234567 0
   30:  format "-{2}"
        label __label312
   31:  op mod __fn33__mod __fn33__n 1000
   32:  set __tmp34 "{2},00{1}"
   33:  jump __label315 lessThan __fn33__mod 10
   34:  set __tmp34 "{2},{1}"
   35:  jump __label314 greaterThanEq __fn33__mod 100
   36:  set __tmp34 "{2},0{1}"
        label __label314
        label __label315
   37:  format __tmp34
   38:  format __fn33__mod
   39:  op idiv __fn33__n __fn33__n 1000
   40:  jump __label312 greaterThan __fn33__n 999
   41:  format __fn33__n
   42:  print "\nT:printNumber(9009099)\nE:"
   43:  print "9,009,099\nA:{2}"
   44:  op floor __fn33__n 9009099 0
        label __label325
   45:  op mod __fn33__mod __fn33__n 1000
   46:  set __tmp34 "{2},00{1}"
   47:  jump __label328 lessThan __fn33__mod 10
   48:  set __tmp34 "{2},{1}"
   49:  jump __label327 greaterThanEq __fn33__mod 100
   50:  set __tmp34 "{2},0{1}"
        label __label327
        label __label328
   51:  format __tmp34
   52:  format __fn33__mod
   53:  op idiv __fn33__n __fn33__n 1000
   54:  jump __label325 greaterThan __fn33__n 999
   55:  format __fn33__n
   56:  print "\nT:printExactFast(null)\nE:null\n"
   57:  print "A:"
   58:  set __fn4__n null
   59:  setaddr __fn4retaddr __label29
   60:  call __label4 __fn4retval
        gotolabel __label29 __fn4
   61:  print "\nT:printExactFast(0)\nE:0\nA:"
   62:  set __fn4__n 0
   63:  setaddr __fn4retaddr __label32
   64:  call __label4 __fn4retval
        gotolabel __label32 __fn4
   65:  print "\nT:printExactFast(1)\nE:1\nA:"
   66:  set __fn4__n 1
   67:  setaddr __fn4retaddr __label35
   68:  call __label4 __fn4retval
        gotolabel __label35 __fn4
   69:  print "\nT:printExactFast(1.0000001)\nE:"
   70:  print "1.000000100000000\nA:"
   71:  set __fn4__n 1.0000001
   72:  setaddr __fn4retaddr __label38
   73:  call __label4 __fn4retval
        gotolabel __label38 __fn4
   74:  print "\nT:printExactFast(3.00000007)\nE:"
   75:  print "3.000000070000000\nA:"
   76:  set __fn4__n 3.00000007
   77:  setaddr __fn4retaddr __label41
   78:  call __label4 __fn4retval
        gotolabel __label41 __fn4
   79:  print "\nT:printExactFast(3e50)\nE:3E50\n"
   80:  print "A:"
   81:  set __fn4__n 3E50
   82:  setaddr __fn4retaddr __label44
   83:  call __label4 __fn4retval
        gotolabel __label44 __fn4
   84:  print "\nT:printExactFast(1.0123456789)\n"
   85:  print "E:1.0123456789\nA:"
   86:  set __fn4__n 1.0123456789
   87:  setaddr __fn4retaddr __label47
   88:  call __label4 __fn4retval
        gotolabel __label47 __fn4
   89:  print "\nT:printExactFast(1.0000001e20)\n"
   90:  print "E:1.000000099999999E20\nA:"
   91:  set __fn4__n 10000000999999999E4
   92:  setaddr __fn4retaddr __label50
   93:  call __label4 __fn4retval
        gotolabel __label50 __fn4
   94:  print "\nT:printExactFast(1.2345e-50)\nE:"
   95:  print "1.2345000000000002E-50\nA:"
   96:  set __fn4__n 12345E-54
   97:  setaddr __fn4retaddr __label53
   98:  call __label4 __fn4retval
        gotolabel __label53 __fn4
   99:  print "\nT:printExactFast(-1.2345e-50)\n"
  100:  print "E:-1.2345000000000002E-50\nA:"
  101:  set __fn4__n -12345E-54
  102:  setaddr __fn4retaddr __label56
  103:  call __label4 __fn4retval
        gotolabel __label56 __fn4
  104:  print "\nT:printExactSlow(null)\nE:null\n"
  105:  print "A:"
  106:  set __fn5__n null
  107:  setaddr __fn5retaddr __label59
  108:  call __label5 __fn5retval
        gotolabel __label59 __fn5
  109:  print "\nT:printExactSlow(0)\nE:0\nA:"
  110:  set __fn5__n 0
  111:  setaddr __fn5retaddr __label62
  112:  call __label5 __fn5retval
        gotolabel __label62 __fn5
  113:  print "\nT:printExactSlow(1)\nE:"
  114:  print "1.000000000000000\nA:"
  115:  set __fn5__n 1
  116:  setaddr __fn5retaddr __label65
  117:  call __label5 __fn5retval
        gotolabel __label65 __fn5
  118:  print "\nT:printExactSlow(1.0000001)\nE:"
  119:  print "1.000000100000000\nA:"
  120:  set __fn5__n 1.0000001
  121:  setaddr __fn5retaddr __label68
  122:  call __label5 __fn5retval
        gotolabel __label68 __fn5
  123:  print "\nT:printExactSlow(3.00000007)\nE:"
  124:  print "3.000000070000000\nA:"
  125:  set __fn5__n 3.00000007
  126:  setaddr __fn5retaddr __label71
  127:  call __label5 __fn5retval
        gotolabel __label71 __fn5
  128:  print "\nT:printExactSlow(3e50)\nE:"
  129:  print "3.000000000000000E50\nA:"
  130:  set __fn5__n 3E50
  131:  setaddr __fn5retaddr __label74
  132:  call __label5 __fn5retval
        gotolabel __label74 __fn5
  133:  print "\nT:printExactSlow(1.0123456789)\n"
  134:  print "E:1.012345678900000\nA:"
  135:  set __fn5__n 1.0123456789
  136:  setaddr __fn5retaddr __label77
  137:  call __label5 __fn5retval
        gotolabel __label77 __fn5
  138:  print "\nT:printExactSlow(1.0000001e20)\n"
  139:  print "E:1.000000099999999E20\nA:"
  140:  set __fn5__n 10000000999999999E4
  141:  setaddr __fn5retaddr __label80
  142:  call __label5 __fn5retval
        gotolabel __label80 __fn5
  143:  print "\nT:printExactSlow(1.2345e-50)\nE:"
  144:  print "1.234500000000000E-50\nA:"
  145:  set __fn5__n 12345E-54
  146:  setaddr __fn5retaddr __label83
  147:  call __label5 __fn5retval
        gotolabel __label83 __fn5
  148:  print "\nT:printExactSlow(-1.2345e-50)\n"
  149:  print "E:-1.234500000000000E-50\nA:"
  150:  set __fn5__n -12345E-54
  151:  setaddr __fn5retaddr __label86
  152:  call __label5 __fn5retval
        gotolabel __label86 __fn5
  153:  print "\n"
  154:  end
        label __label4
  155:  op abs __tmp39 __fn4__n 0
  156:  jump __label102 greaterThan __tmp39 0
  157:  print __fn4__n
  158:  jump __label103 always 0 0
        label __label102
  159:  jump __label104 greaterThanEq __fn4__n 0
  160:  print "-"
  161:  op abs __fn4__n __fn4__n 0
        label __label104
  162:  op log10 __tmp45 __fn4__n 0
  163:  op floor __fn4__exp __tmp45 0
  164:  op mul __tmp47 -1 __fn4__exp
  165:  op pow __tmp48 10 __tmp47
  166:  op mul __fn4__base __fn4__n __tmp48
  167:  op add __tmp51 __fn4__base 0.5
  168:  op floor __tmp50 __tmp51 0
  169:  op sub __tmp53 __fn4__base __tmp50
  170:  op abs __fn4__cmp __tmp53 0
  171:  jump __label108 greaterThan __fn4__cmp 0
  172:  print __fn4__base
  173:  jump __label109 always 0 0
        label __label108
  174:  jump __label110 lessThanEq __fn4__cmp 0.00001
  175:  print __fn4__base
  176:  jump __label111 always 0 0
        label __label110
  177:  op floor __tmp59 __fn4__base 0
  178:  print __tmp59
  179:  print "."
  180:  op mod __tmp60 __fn4__base 1
  181:  op mul __fn4__base __tmp60 100000
  182:  op floor __fn4__t __fn4__base 0
  183:  jump __label209 greaterThanEq __fn4__t 10
  184:  print "0000"
  185:  jump __label216 always 0 0
        label __label209
  186:  jump __label210 greaterThanEq __fn4__t 100
  187:  print "000"
  188:  jump __label215 always 0 0
        label __label210
  189:  jump __label211 greaterThanEq __fn4__t 1000
  190:  print "00"
  191:  jump __label214 always 0 0
        label __label211
  192:  jump __label212 greaterThanEq __fn4__t 10000
  193:  print "0"
        label __label212
        label __label214
        label __label215
        label __label216
  194:  print __fn4__t
  195:  op mod __tmp60 __fn4__base 1
  196:  op mul __fn4__base __tmp60 100000
  197:  op floor __fn4__t __fn4__base 0
  198:  jump __label221 greaterThanEq __fn4__t 10
  199:  print "0000"
  200:  jump __label228 always 0 0
        label __label221
  201:  jump __label222 greaterThanEq __fn4__t 100
  202:  print "000"
  203:  jump __label227 always 0 0
        label __label222
  204:  jump __label223 greaterThanEq __fn4__t 1000
  205:  print "00"
  206:  jump __label226 always 0 0
        label __label223
  207:  jump __label224 greaterThanEq __fn4__t 10000
  208:  print "0"
        label __label224
        label __label226
        label __label227
        label __label228
  209:  print __fn4__t
  210:  op mod __tmp60 __fn4__base 1
  211:  op mul __fn4__base __tmp60 100000
  212:  op floor __fn4__t __fn4__base 0
  213:  jump __label233 greaterThanEq __fn4__t 10
  214:  print "0000"
  215:  jump __label240 always 0 0
        label __label233
  216:  jump __label234 greaterThanEq __fn4__t 100
  217:  print "000"
  218:  jump __label239 always 0 0
        label __label234
  219:  jump __label235 greaterThanEq __fn4__t 1000
  220:  print "00"
  221:  jump __label238 always 0 0
        label __label235
  222:  jump __label236 greaterThanEq __fn4__t 10000
  223:  print "0"
        label __label236
        label __label238
        label __label239
        label __label240
  224:  print __fn4__t
        label __label111
        label __label109
  225:  jump __label125 equal __fn4__exp 0
  226:  print "E"
  227:  print __fn4__exp
        label __label125
        label __label103
  228:  goto __fn4retaddr __fn4
  229:  end
        label __label5
  230:  op abs __tmp75 __fn5__n 0
  231:  jump __label130 greaterThan __tmp75 0
  232:  print __fn5__n
  233:  jump __label131 always 0 0
        label __label130
  234:  jump __label132 greaterThanEq __fn5__n 0
  235:  print "-"
  236:  op abs __fn5__n __fn5__n 0
        label __label132
  237:  op log10 __tmp81 __fn5__n 0
  238:  op floor __fn5__exp __tmp81 0
  239:  op mul __tmp83 -1 __fn5__exp
  240:  op pow __tmp84 10 __tmp83
  241:  op mul __fn5__base __fn5__n __tmp84
  242:  op floor __tmp86 __fn5__base 0
  243:  print __tmp86
  244:  print "."
  245:  op mod __tmp87 __fn5__base 1
  246:  op mul __fn5__base __tmp87 10
  247:  op floor __tmp90 __fn5__base 0
  248:  print __tmp90
  249:  op mod __tmp87 __fn5__base 1
  250:  op mul __fn5__base __tmp87 10
  251:  op floor __tmp90 __fn5__base 0
  252:  print __tmp90
  253:  op mod __tmp87 __fn5__base 1
  254:  op mul __fn5__base __tmp87 10
  255:  op floor __tmp90 __fn5__base 0
  256:  print __tmp90
  257:  op mod __tmp87 __fn5__base 1
  258:  op mul __fn5__base __tmp87 10
  259:  op floor __tmp90 __fn5__base 0
  260:  print __tmp90
  261:  op mod __tmp87 __fn5__base 1
  262:  op mul __fn5__base __tmp87 10
  263:  op floor __tmp90 __fn5__base 0
  264:  print __tmp90
  265:  op mod __tmp87 __fn5__base 1
  266:  op mul __fn5__base __tmp87 10
  267:  op floor __tmp90 __fn5__base 0
  268:  print __tmp90
  269:  op mod __tmp87 __fn5__base 1
  270:  op mul __fn5__base __tmp87 10
  271:  op floor __tmp90 __fn5__base 0
  272:  print __tmp90
  273:  op mod __tmp87 __fn5__base 1
  274:  op mul __fn5__base __tmp87 10
  275:  op floor __tmp90 __fn5__base 0
  276:  print __tmp90
  277:  op mod __tmp87 __fn5__base 1
  278:  op mul __fn5__base __tmp87 10
  279:  op floor __tmp90 __fn5__base 0
  280:  print __tmp90
  281:  op mod __tmp87 __fn5__base 1
  282:  op mul __fn5__base __tmp87 10
  283:  op floor __tmp90 __fn5__base 0
  284:  print __tmp90
  285:  op mod __tmp87 __fn5__base 1
  286:  op mul __fn5__base __tmp87 10
  287:  op floor __tmp90 __fn5__base 0
  288:  print __tmp90
  289:  op mod __tmp87 __fn5__base 1
  290:  op mul __fn5__base __tmp87 10
  291:  op floor __tmp90 __fn5__base 0
  292:  print __tmp90
  293:  op mod __tmp87 __fn5__base 1
  294:  op mul __fn5__base __tmp87 10
  295:  op floor __tmp90 __fn5__base 0
  296:  print __tmp90
  297:  op mod __tmp87 __fn5__base 1
  298:  op mul __fn5__base __tmp87 10
  299:  op floor __tmp90 __fn5__base 0
  300:  print __tmp90
  301:  op mod __tmp87 __fn5__base 1
  302:  op mul __fn5__base __tmp87 10
  303:  op floor __tmp90 __fn5__base 0
  304:  print __tmp90
  305:  jump __label139 equal __fn5__exp 0
  306:  print "E"
  307:  print __fn5__exp
        label __label139
        label __label131
  308:  goto __fn5retaddr __fn5
  309:  end
