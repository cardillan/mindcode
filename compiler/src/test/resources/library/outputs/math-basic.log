Number of reported ambiguities: 46
Active optimizations:
    case-expression-optimization = basic,
    case-switching = basic,
    data-flow-optimization = basic,
    dead-code-elimination = basic,
    expression-optimization = basic,
    function-inlining = basic,
    if-expression-optimization = basic,
    jump-normalization = basic,
    jump-optimization = basic,
    jump-straightening = basic,
    jump-threading = basic,
    loop-hoisting = basic,
    loop-optimization = basic,
    loop-unrolling = basic,
    print-merging = basic,
    return-optimization = basic,
    single-step-elimination = basic,
    stack-optimization = basic,
    temp-variables-elimination = basic,
    unreachable-code-elimination = basic

   425 instructions before optimizations.
     6 instructions eliminated by Temp Variables Elimination.
    22 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Jump Normalization (4 iterations).
     2 instructions eliminated by Jump Optimization (4 iterations).
     7 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
   160 instructions eliminated by Data Flow Optimization (8 passes, 27 iterations).
    14 instructions eliminated by Function Inlining (10 iterations).
    21 function calls inlined by Function Inlining.
     7 instructions eliminated by Unreachable Code Elimination.
   109 instructions eliminated by Print Merging.
    92 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 699):
    Function Inlining: inline function distance                  cost     1, benefit       10.0, efficiency       10.0
    Function Inlining: inline function round                     cost     3, benefit       17.5, efficiency        5.8
  * Function Inlining: inline function frac                      cost     0, benefit        7.0, efficiency   Infinity (-9 instructions)
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
    Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5
    Function Inlining: inline function isZero                    cost     1, benefit       10.5, efficiency       10.5
    Function Inlining: inline function nullToZero                cost     0, benefit        7.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 708):
    Function Inlining: inline function distance                  cost     1, benefit       10.0, efficiency       10.0
    Function Inlining: inline function round                     cost     3, benefit       17.5, efficiency        5.8
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
    Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5
    Function Inlining: inline function isZero                    cost     1, benefit       10.5, efficiency       10.5
  * Function Inlining: inline function nullToZero                cost     0, benefit        7.0, efficiency   Infinity (-8 instructions)

Pass 1: speed optimization selection (cost limit 716):
    Function Inlining: inline function distance                  cost     1, benefit       10.0, efficiency       10.0
    Function Inlining: inline function round                     cost     3, benefit       17.5, efficiency        5.8
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
    Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5
  * Function Inlining: inline function isZero                    cost     1, benefit       10.5, efficiency       10.5 (-13 instructions)

Pass 1: speed optimization selection (cost limit 729):
  * Function Inlining: inline function distance                  cost     1, benefit       10.0, efficiency       10.0 (-17 instructions)
    Function Inlining: inline function round                     cost     3, benefit       17.5, efficiency        5.8
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
    Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5

Pass 1: speed optimization selection (cost limit 746):
  * Function Inlining: inline function round                     cost     3, benefit       17.5, efficiency        5.8 (-19 instructions)
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
    Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5

Pass 1: speed optimization selection (cost limit 765):
    Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0
  * Function Inlining: inline function signExact                 cost     3, benefit       10.5, efficiency        3.5 (-14 instructions)

Pass 1: speed optimization selection (cost limit 779):
  * Function Inlining: inline function sign                      cost    14, benefit       14.0, efficiency        1.0 (-3 instructions)

Final code before resolving virtual instructions:

    0:  print "T:distance forward\nE:"
    1:  print 5
    2:  print "\nA:"
    3:  print 5
    4:  print "\nT:distance backward\nE:"
    5:  print 5
    6:  print "\nA:"
    7:  print 5
    8:  print "\nT:round(1.5)\nE:"
    9:  print 2
   10:  print "\nA:"
   11:  print 2
   12:  print "\nT:round(1.7)\nE:"
   13:  print 2
   14:  print "\nA:"
   15:  print 2
   16:  print "\nT:round(2.1)\nE:"
   17:  print 2
   18:  print "\nA:"
   19:  print 2
   20:  print "\nT:round(2.5)\nE:"
   21:  print 3
   22:  print "\nA:"
   23:  print 3
   24:  print "\nT:round(-3.5)\nE:"
   25:  print -3
   26:  print "\nA:"
   27:  print -3
   28:  print "\nT:frac(3.5)\nE:"
   29:  print 0.5
   30:  print "\nA:"
   31:  print 0.5
   32:  print "\nT:frac(-1.5)\nE:"
   33:  print -0.5
   34:  print "\nA:"
   35:  print -0.5
   36:  print "\nT:sign(0)\nE:"
   37:  print 0
   38:  print "\nA:"
   39:  print 0
   40:  print "\nT:sign(1e-7)\nE:"
   41:  print 0
   42:  print "\nA:"
   43:  print 0
   44:  print "\nT:sign(1e-5)\nE:"
   45:  print 1
   46:  print "\nA:"
   47:  print 1
   48:  print "\nT:sign(-5)\nE:"
   49:  print -1
   50:  print "\nA:"
   51:  print -1
   52:  print "\nT:signExact(0)\nE:"
   53:  print 0
   54:  print "\nA:"
   55:  print 0
   56:  print "\nT:signExact(1e-7)\nE:"
   57:  print 1
   58:  print "\nA:"
   59:  print 1
   60:  print "\nT:signExact(-1e-7)\nE:"
   61:  print -1
   62:  print "\nA:"
   63:  print -1
   64:  print "\nT:isZero(0)\nE:"
   65:  print true
   66:  print "\nA:"
   67:  print true
   68:  print "\nT:isZero(1e-50)\nE:"
   69:  print false
   70:  print "\nA:"
   71:  print false
   72:  print "\nT:isZero(-1e-50)\nE:"
   73:  print false
   74:  print "\nA:"
   75:  print false
   76:  print "\nT:isZero(0.01,0.01)\nE:"
   77:  print false
   78:  print "\nA:"
   79:  print false
   80:  op add __fn7__result null 0
   81:  print "\nT:nullToZero(null)\nE:"
   82:  print 0
   83:  print "\nA:"
   84:  print __fn7__result
   85:  op add __fn7__result 1 0
   86:  print "\nT:nullToZero(1)\nE:"
   87:  print 1
   88:  print "\nA:"
   89:  print __fn7__result
   90:  print "\n"
   91:  end
