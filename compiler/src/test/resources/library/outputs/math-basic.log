Main file: number of reported ambiguities: 15
Active optimizations:
    case-expression-optimization = basic,
    case-switching = basic,
    data-flow-optimization = basic,
    dead-code-elimination = basic,
    expression-optimization = basic,
    function-inlining = basic,
    if-expression-optimization = basic,
    jump-normalization = basic,
    jump-optimization = basic,
    jump-straightening = basic,
    jump-threading = basic,
    loop-hoisting = basic,
    loop-optimization = basic,
    loop-unrolling = basic,
    print-merging = basic,
    return-optimization = basic,
    single-step-elimination = basic,
    stack-optimization = basic,
    temp-variables-elimination = basic,
    unreachable-code-elimination = basic

  1652 instructions before optimizations.
   121 instructions eliminated by Temp Variables Elimination.
   124 instructions eliminated by Dead Code Elimination (4 iterations).
     8 instructions modified by Jump Normalization (5 iterations).
    68 instructions eliminated by Jump Optimization (5 iterations).
    49 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     2 instructions modified by Expression Optimization (4 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   287 instructions eliminated by Data Flow Optimization (6 passes, 22 iterations).
     8 instructions eliminated by Loop Unrolling (9 iterations).
     5 loops unrolled by Loop Unrolling.
    11 instructions updated by JumpThreading.
     2 instructions eliminated by Unreachable Code Elimination.
   986 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  * Unroll iteration loop at *math:91:5                          cost     0, benefit        5.0, efficiency   Infinity (-8 instructions)
    Unroll iteration loop at *math:103:5                         cost     0, benefit        5.0, efficiency   Infinity
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 1: speed optimization selection (cost limit 0):
  * Unroll iteration loop at *math:103:5                         cost     0, benefit        5.0, efficiency   Infinity (-9 instructions)
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   151, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost     1, benefit      425.0, efficiency      425.0
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at *math:187:5                         cost   121, benefit       17.0, efficiency        0.1
  * Unroll iteration loop at *math:205:5                         cost     0, benefit      425.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   121, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost     0, benefit      425.0, efficiency   Infinity
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 2: speed optimization selection (cost limit 10):
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   121, benefit       17.0, efficiency        0.1
  * Unroll iteration loop at *math:205:5                         cost     0, benefit      425.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 2: speed optimization selection (cost limit 23):
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  * Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2 (+13 instructions)
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
    Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
    Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 2: speed optimization selection (cost limit 10):
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 3: speed optimization selection (cost limit 10):
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Pass 4: speed optimization selection (cost limit 10):
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost   241, benefit       17.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    13, benefit      425.0, efficiency       32.7
  ! Unroll iteration loop at *math:187:5                         cost    43, benefit       17.0, efficiency        0.4
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Unroll iteration loop at *math:187:5                         cost   442, benefit       26.0, efficiency        0.1
  ! Unroll iteration loop at *math:205:5                         cost    19, benefit      650.0, efficiency       34.2
  ! Inline function 'sign' defined at *math:37:1                 cost    17, benefit       14.0, efficiency        0.8
  ! Inline function 'median' defined at *math:131:1              cost    59, benefit       25.0, efficiency        0.4
  ! Inline function 'median' defined at *math:148:1              cost   125, benefit       44.0, efficiency        0.4

Final code before resolving virtual instructions:

    0:  assertequals 5 5 "distance(1,1,4,5)"
    1:  assertequals 5 5 "distance(-1,-1,-4,-5)"
    2:  assertequals 2 2 "round(1.5)"
    3:  assertequals 2 2 "round(1.7)"
    4:  assertequals 2 2 "round(2.1)"
    5:  assertequals 3 3 "round(2.5)"
    6:  assertequals -3 -3 "round(-3.5)"
    7:  assertequals 0.5 0.5 "frac(3.5)"
    8:  assertequals -0.5 -0.5 "frac(-1.5)"
    9:  set __fn0__x 0
   10:  setaddr __fn0retaddr __label21
   11:  call __label0 __fn0retval
        gotolabel __label21 __fn0
   12:  assertequals 0 __fn0retval "sign(0)"
   13:  set __fn0__x 0.0000001
   14:  setaddr __fn0retaddr __label22
   15:  call __label0 __fn0retval
        gotolabel __label22 __fn0
   16:  assertequals 0 __fn0retval "sign(1e-7)"
   17:  set __fn0__x 0.00001
   18:  setaddr __fn0retaddr __label23
   19:  call __label0 __fn0retval
        gotolabel __label23 __fn0
   20:  assertequals 1 __fn0retval "sign(1e-5)"
   21:  set __fn0__x -5
   22:  setaddr __fn0retaddr __label24
   23:  call __label0 __fn0retval
        gotolabel __label24 __fn0
   24:  assertequals -1 __fn0retval "sign(-5)"
   25:  assertequals 0 0 "signExact(0)"
   26:  assertequals 1 1 "signExact(1e-7)"
   27:  assertequals -1 -1 "signExact(-1e-7)"
   28:  assertequals true true "isZero(0)"
   29:  assertequals false false "isZero(1e-50)"
   30:  assertequals false false "isZero(-1e-50)"
   31:  assertequals false false "isZero(0.01,0.01)"
   32:  op add __fn19__result null 0
   33:  assertequals 0 __fn19__result "nullToZero(null)"
   34:  op add __fn20__result 1 0
   35:  assertequals 1 __fn20__result "nullToZero(1)"
   36:  assertequals 1 1 "sum(1)"
   37:  assertequals 10 10 "sum(1,2,3,4)"
   38:  assertequals 1 1 "avg(1)"
   39:  assertequals 2.5 2.5 "avg(1,2,3,4)"
   40:  assertequals 1 1 "median(1)"
   41:  assertequals 3 3 "median(2,4)"
   42:  assertequals 3 3 "median(1,3,5)"
   43:  assertequals 1 1 "median(1,1,1)"
   44:  assertequals 1 1 "median(1,1,3)"
   45:  assertequals 3 3 "median(1,3,3)"
   46:  set __fn1__x1 2
   47:  set __fn1__x2 4
   48:  set __fn1__x3 6
   49:  set __fn1__x4 8
   50:  setaddr __fn1retaddr __label73
   51:  call __label1 __fn1retval
        gotolabel __label73 __fn1
   52:  assertequals 5 __fn1retval "median(2,4,6,8)"
   53:  set __fn1__x1 8
   54:  set __fn1__x2 6
   55:  set __fn1__x3 4
   56:  set __fn1__x4 2
   57:  setaddr __fn1retaddr __label74
   58:  call __label1 __fn1retval
        gotolabel __label74 __fn1
   59:  assertequals 5 __fn1retval "median(8,6,4,2)"
   60:  set __fn1__x1 4
   61:  set __fn1__x2 8
   62:  set __fn1__x3 2
   63:  set __fn1__x4 6
   64:  setaddr __fn1retaddr __label75
   65:  call __label1 __fn1retval
        gotolabel __label75 __fn1
   66:  assertequals 5 __fn1retval "median(4,8,2,6)"
   67:  set __fn1__x1 2
   68:  set __fn1__x2 6
   69:  set __fn1__x3 4
   70:  set __fn1__x4 8
   71:  setaddr __fn1retaddr __label76
   72:  call __label1 __fn1retval
        gotolabel __label76 __fn1
   73:  assertequals 5 __fn1retval "median(2,6,4,8)"
   74:  set __fn1__x1 6
   75:  set __fn1__x2 2
   76:  set __fn1__x3 8
   77:  set __fn1__x4 4
   78:  setaddr __fn1retaddr __label77
   79:  call __label1 __fn1retval
        gotolabel __label77 __fn1
   80:  assertequals 5 __fn1retval "median(6,2,8,4)"
   81:  set __fn2__x1 1
   82:  set __fn2__x2 2
   83:  set __fn2__x3 3
   84:  set __fn2__x4 4
   85:  set __fn2__x5 5
   86:  setaddr __fn2retaddr __label78
   87:  call __label2 __fn2retval
        gotolabel __label78 __fn2
   88:  assertequals 3 __fn2retval "median(1,2,3,4,5)"
   89:  set __fn2__x1 5
   90:  set __fn2__x2 4
   91:  set __fn2__x4 2
   92:  set __fn2__x5 1
   93:  setaddr __fn2retaddr __label79
   94:  call __label2 __fn2retval
        gotolabel __label79 __fn2
   95:  assertequals 3 __fn2retval "median(5,4,3,2,1)"
   96:  set __fn2__x1 1
   97:  set __fn2__x2 1
   98:  set __fn2__x3 1
   99:  set __fn2__x4 1
  100:  setaddr __fn2retaddr __label80
  101:  call __label2 __fn2retval
        gotolabel __label80 __fn2
  102:  assertequals 1 __fn2retval "median(1,1,1,1,1)"
  103:  set __fn2__x5 5
  104:  setaddr __fn2retaddr __label81
  105:  call __label2 __fn2retval
        gotolabel __label81 __fn2
  106:  assertequals 1 __fn2retval "median(1,1,1,1,5)"
  107:  set __fn2__x4 5
  108:  setaddr __fn2retaddr __label82
  109:  call __label2 __fn2retval
        gotolabel __label82 __fn2
  110:  assertequals 1 __fn2retval "median(1,1,1,5,5)"
  111:  set __fn2__x3 5
  112:  setaddr __fn2retaddr __label83
  113:  call __label2 __fn2retval
        gotolabel __label83 __fn2
  114:  assertequals 5 __fn2retval "median(1,1,5,5,5)"
  115:  set __fn2__x2 5
  116:  setaddr __fn2retaddr __label84
  117:  call __label2 __fn2retval
        gotolabel __label84 __fn2
  118:  assertequals 5 __fn2retval "median(1,5,5,5,5)"
  119:  set __fn2__x1 5
  120:  setaddr __fn2retaddr __label85
  121:  call __label2 __fn2retval
        gotolabel __label85 __fn2
  122:  assertequals 5 __fn2retval "median(5,5,5,5,5)"
  123:  set __fn32__bestDif 10000000000
  124:  set __fn32__best null
  125:  set __fn32__count 1
  126:  setaddr __tmp108 __label93
  127:  jump __label116 always 0 0
        gotolabel __label93 marker2
  128:  setaddr __tmp108 __label94
  129:  jump __label116 always 0 0
        gotolabel __label94 marker2
  130:  setaddr __tmp108 __label95
  131:  jump __label116 always 0 0
        gotolabel __label95 marker2
  132:  setaddr __tmp108 __label96
  133:  jump __label116 always 0 0
        gotolabel __label96 marker2
  134:  setaddr __tmp108 __label97
  135:  jump __label116 always 0 0
        gotolabel __label97 marker2
  136:  setaddr __tmp108 __label98
        label __label116
  137:  jump __label118 greaterThanEq 0 __fn32__bestDif
  138:  set __fn32__bestDif 0
  139:  set __fn32__best 1
  140:  set __fn32__count 1
  141:  jump __label119 always 0 0
        label __label118
  142:  jump __label120 greaterThan 0 __fn32__bestDif
  143:  op add __fn32__best __fn32__best 1
  144:  op add __fn32__count __fn32__count 1
        label __label120
        label __label119
  145:  goto __tmp108 marker2
        gotolabel __label98 marker2
  146:  op div __tmp107 __fn32__best __fn32__count
  147:  assertequals 1 __tmp107 "median(1,1,1,1,1,1)"
  148:  set __fn35__bestDif 10000000000
  149:  set __fn35__best null
  150:  set __fn35__count 1
  151:  setaddr __tmp134 __label129
  152:  set __fn35__i 1
  153:  jump __label127 always 0 0
        gotolabel __label129 marker4
  154:  setaddr __tmp134 __label130
  155:  set __fn35__i 1
  156:  jump __label127 always 0 0
        gotolabel __label130 marker4
  157:  setaddr __tmp134 __label131
  158:  set __fn35__i 1
  159:  jump __label127 always 0 0
        gotolabel __label131 marker4
  160:  setaddr __tmp134 __label132
  161:  set __fn35__i 1
  162:  jump __label127 always 0 0
        gotolabel __label132 marker4
  163:  setaddr __tmp134 __label133
  164:  set __fn35__i 1
  165:  jump __label127 always 0 0
        gotolabel __label133 marker4
  166:  setaddr __tmp134 __label134
  167:  set __fn35__i 5
        label __label127
  168:  set __fn36__gt 0
  169:  set __fn36__lt 0
  170:  setaddr __tmp136 __label140
  171:  set __fn36__i 1
  172:  jump __label138 always 0 0
        gotolabel __label140 marker5
  173:  setaddr __tmp136 __label141
  174:  set __fn36__i 1
  175:  jump __label138 always 0 0
        gotolabel __label141 marker5
  176:  setaddr __tmp136 __label142
  177:  set __fn36__i 1
  178:  jump __label138 always 0 0
        gotolabel __label142 marker5
  179:  setaddr __tmp136 __label143
  180:  set __fn36__i 1
  181:  jump __label138 always 0 0
        gotolabel __label143 marker5
  182:  setaddr __tmp136 __label144
  183:  set __fn36__i 1
  184:  jump __label138 always 0 0
        gotolabel __label144 marker5
  185:  setaddr __tmp136 __label145
  186:  set __fn36__i 5
        label __label138
  187:  jump __label146 greaterThanEq __fn36__i __fn35__i
  188:  op add __fn36__lt __fn36__lt 1
  189:  jump __label147 always 0 0
        label __label146
  190:  jump __label148 lessThanEq __fn36__i __fn35__i
  191:  op add __fn36__gt __fn36__gt 1
        label __label148
        label __label147
  192:  goto __tmp136 marker5
        gotolabel __label145 marker5
  193:  op sub __tmp143 __fn36__gt __fn36__lt
  194:  op abs __fn36__dif __tmp143 0
  195:  op add __tmp145 __fn36__gt __fn36__lt
  196:  jump __label150 lessThan __tmp145 5
  197:  op equal __tmp148 __fn36__gt __fn36__lt
  198:  jump __label151 always 0 0
        label __label150
  199:  set __tmp148 false
        label __label151
  200:  jump __label152 equal __tmp148 false
  201:  set __tmp133 __fn35__i
  202:  jump __label125 always 0 0
        label __label152
  203:  jump __label154 greaterThanEq __fn36__dif __fn35__bestDif
  204:  set __fn35__bestDif __fn36__dif
  205:  set __fn35__best __fn35__i
  206:  set __fn35__count 1
  207:  jump __label155 always 0 0
        label __label154
  208:  jump __label156 greaterThan __fn36__dif __fn35__bestDif
  209:  op add __fn35__best __fn35__best __fn35__i
  210:  op add __fn35__count __fn35__count 1
        label __label156
        label __label155
  211:  goto __tmp134 marker4
        gotolabel __label134 marker4
  212:  op div __tmp133 __fn35__best __fn35__count
        label __label125
  213:  assertequals 1 __tmp133 "median(1,1,1,1,1,5)"
  214:  set __fn38__bestDif 10000000000
  215:  set __fn38__best null
  216:  set __fn38__count 1
  217:  setaddr __tmp160 __label165
  218:  set __fn38__i 1
  219:  jump __label163 always 0 0
        gotolabel __label165 marker6
  220:  setaddr __tmp160 __label166
  221:  set __fn38__i 1
  222:  jump __label163 always 0 0
        gotolabel __label166 marker6
  223:  setaddr __tmp160 __label167
  224:  set __fn38__i 1
  225:  jump __label163 always 0 0
        gotolabel __label167 marker6
  226:  setaddr __tmp160 __label168
  227:  set __fn38__i 1
  228:  jump __label163 always 0 0
        gotolabel __label168 marker6
  229:  setaddr __tmp160 __label169
  230:  set __fn38__i 5
  231:  jump __label163 always 0 0
        gotolabel __label169 marker6
  232:  setaddr __tmp160 __label170
  233:  set __fn38__i 5
        label __label163
  234:  set __fn39__gt 0
  235:  set __fn39__lt 0
  236:  setaddr __tmp162 __label176
  237:  set __fn39__i 1
  238:  jump __label174 always 0 0
        gotolabel __label176 marker7
  239:  setaddr __tmp162 __label177
  240:  set __fn39__i 1
  241:  jump __label174 always 0 0
        gotolabel __label177 marker7
  242:  setaddr __tmp162 __label178
  243:  set __fn39__i 1
  244:  jump __label174 always 0 0
        gotolabel __label178 marker7
  245:  setaddr __tmp162 __label179
  246:  set __fn39__i 1
  247:  jump __label174 always 0 0
        gotolabel __label179 marker7
  248:  setaddr __tmp162 __label180
  249:  set __fn39__i 5
  250:  jump __label174 always 0 0
        gotolabel __label180 marker7
  251:  setaddr __tmp162 __label181
  252:  set __fn39__i 5
        label __label174
  253:  jump __label182 greaterThanEq __fn39__i __fn38__i
  254:  op add __fn39__lt __fn39__lt 1
  255:  jump __label183 always 0 0
        label __label182
  256:  jump __label184 lessThanEq __fn39__i __fn38__i
  257:  op add __fn39__gt __fn39__gt 1
        label __label184
        label __label183
  258:  goto __tmp162 marker7
        gotolabel __label181 marker7
  259:  op sub __tmp169 __fn39__gt __fn39__lt
  260:  op abs __fn39__dif __tmp169 0
  261:  op add __tmp171 __fn39__gt __fn39__lt
  262:  jump __label186 lessThan __tmp171 5
  263:  op equal __tmp174 __fn39__gt __fn39__lt
  264:  jump __label187 always 0 0
        label __label186
  265:  set __tmp174 false
        label __label187
  266:  jump __label188 equal __tmp174 false
  267:  set __tmp159 __fn38__i
  268:  jump __label161 always 0 0
        label __label188
  269:  jump __label190 greaterThanEq __fn39__dif __fn38__bestDif
  270:  set __fn38__bestDif __fn39__dif
  271:  set __fn38__best __fn38__i
  272:  set __fn38__count 1
  273:  jump __label191 always 0 0
        label __label190
  274:  jump __label192 greaterThan __fn39__dif __fn38__bestDif
  275:  op add __fn38__best __fn38__best __fn38__i
  276:  op add __fn38__count __fn38__count 1
        label __label192
        label __label191
  277:  goto __tmp160 marker6
        gotolabel __label170 marker6
  278:  op div __tmp159 __fn38__best __fn38__count
        label __label161
  279:  assertequals 1 __tmp159 "median(1,1,1,1,5,5)"
  280:  set __fn41__bestDif 10000000000
  281:  set __fn41__best null
  282:  set __fn41__count 1
  283:  setaddr __tmp186 __label201
  284:  set __fn41__i 1
  285:  jump __label199 always 0 0
        gotolabel __label201 marker8
  286:  setaddr __tmp186 __label202
  287:  set __fn41__i 1
  288:  jump __label199 always 0 0
        gotolabel __label202 marker8
  289:  setaddr __tmp186 __label203
  290:  set __fn41__i 1
  291:  jump __label199 always 0 0
        gotolabel __label203 marker8
  292:  setaddr __tmp186 __label204
  293:  set __fn41__i 5
  294:  jump __label199 always 0 0
        gotolabel __label204 marker8
  295:  setaddr __tmp186 __label205
  296:  set __fn41__i 5
  297:  jump __label199 always 0 0
        gotolabel __label205 marker8
  298:  setaddr __tmp186 __label206
  299:  set __fn41__i 5
        label __label199
  300:  set __fn42__gt 0
  301:  set __fn42__lt 0
  302:  setaddr __tmp188 __label212
  303:  set __fn42__i 1
  304:  jump __label210 always 0 0
        gotolabel __label212 marker9
  305:  setaddr __tmp188 __label213
  306:  set __fn42__i 1
  307:  jump __label210 always 0 0
        gotolabel __label213 marker9
  308:  setaddr __tmp188 __label214
  309:  set __fn42__i 1
  310:  jump __label210 always 0 0
        gotolabel __label214 marker9
  311:  setaddr __tmp188 __label215
  312:  set __fn42__i 5
  313:  jump __label210 always 0 0
        gotolabel __label215 marker9
  314:  setaddr __tmp188 __label216
  315:  set __fn42__i 5
  316:  jump __label210 always 0 0
        gotolabel __label216 marker9
  317:  setaddr __tmp188 __label217
  318:  set __fn42__i 5
        label __label210
  319:  jump __label218 greaterThanEq __fn42__i __fn41__i
  320:  op add __fn42__lt __fn42__lt 1
  321:  jump __label219 always 0 0
        label __label218
  322:  jump __label220 lessThanEq __fn42__i __fn41__i
  323:  op add __fn42__gt __fn42__gt 1
        label __label220
        label __label219
  324:  goto __tmp188 marker9
        gotolabel __label217 marker9
  325:  op sub __tmp195 __fn42__gt __fn42__lt
  326:  op abs __fn42__dif __tmp195 0
  327:  op add __tmp197 __fn42__gt __fn42__lt
  328:  jump __label222 lessThan __tmp197 5
  329:  op equal __tmp200 __fn42__gt __fn42__lt
  330:  jump __label223 always 0 0
        label __label222
  331:  set __tmp200 false
        label __label223
  332:  jump __label224 equal __tmp200 false
  333:  set __tmp185 __fn41__i
  334:  jump __label197 always 0 0
        label __label224
  335:  jump __label226 greaterThanEq __fn42__dif __fn41__bestDif
  336:  set __fn41__bestDif __fn42__dif
  337:  set __fn41__best __fn41__i
  338:  set __fn41__count 1
  339:  jump __label227 always 0 0
        label __label226
  340:  jump __label228 greaterThan __fn42__dif __fn41__bestDif
  341:  op add __fn41__best __fn41__best __fn41__i
  342:  op add __fn41__count __fn41__count 1
        label __label228
        label __label227
  343:  goto __tmp186 marker8
        gotolabel __label206 marker8
  344:  op div __tmp185 __fn41__best __fn41__count
        label __label197
  345:  assertequals 3 __tmp185 "median(1,1,1,5,5,5)"
  346:  set __fn44__bestDif 10000000000
  347:  set __fn44__best null
  348:  set __fn44__count 1
  349:  setaddr __tmp212 __label237
  350:  set __fn44__i 1
  351:  jump __label235 always 0 0
        gotolabel __label237 marker10
  352:  setaddr __tmp212 __label238
  353:  set __fn44__i 1
  354:  jump __label235 always 0 0
        gotolabel __label238 marker10
  355:  setaddr __tmp212 __label239
  356:  set __fn44__i 5
  357:  jump __label235 always 0 0
        gotolabel __label239 marker10
  358:  setaddr __tmp212 __label240
  359:  set __fn44__i 5
  360:  jump __label235 always 0 0
        gotolabel __label240 marker10
  361:  setaddr __tmp212 __label241
  362:  set __fn44__i 5
  363:  jump __label235 always 0 0
        gotolabel __label241 marker10
  364:  setaddr __tmp212 __label242
  365:  set __fn44__i 5
        label __label235
  366:  set __fn45__gt 0
  367:  set __fn45__lt 0
  368:  setaddr __tmp214 __label248
  369:  set __fn45__i 1
  370:  jump __label246 always 0 0
        gotolabel __label248 marker11
  371:  setaddr __tmp214 __label249
  372:  set __fn45__i 1
  373:  jump __label246 always 0 0
        gotolabel __label249 marker11
  374:  setaddr __tmp214 __label250
  375:  set __fn45__i 5
  376:  jump __label246 always 0 0
        gotolabel __label250 marker11
  377:  setaddr __tmp214 __label251
  378:  set __fn45__i 5
  379:  jump __label246 always 0 0
        gotolabel __label251 marker11
  380:  setaddr __tmp214 __label252
  381:  set __fn45__i 5
  382:  jump __label246 always 0 0
        gotolabel __label252 marker11
  383:  setaddr __tmp214 __label253
  384:  set __fn45__i 5
        label __label246
  385:  jump __label254 greaterThanEq __fn45__i __fn44__i
  386:  op add __fn45__lt __fn45__lt 1
  387:  jump __label255 always 0 0
        label __label254
  388:  jump __label256 lessThanEq __fn45__i __fn44__i
  389:  op add __fn45__gt __fn45__gt 1
        label __label256
        label __label255
  390:  goto __tmp214 marker11
        gotolabel __label253 marker11
  391:  op sub __tmp221 __fn45__gt __fn45__lt
  392:  op abs __fn45__dif __tmp221 0
  393:  op add __tmp223 __fn45__gt __fn45__lt
  394:  jump __label258 lessThan __tmp223 5
  395:  op equal __tmp226 __fn45__gt __fn45__lt
  396:  jump __label259 always 0 0
        label __label258
  397:  set __tmp226 false
        label __label259
  398:  jump __label260 equal __tmp226 false
  399:  set __tmp211 __fn44__i
  400:  jump __label233 always 0 0
        label __label260
  401:  jump __label262 greaterThanEq __fn45__dif __fn44__bestDif
  402:  set __fn44__bestDif __fn45__dif
  403:  set __fn44__best __fn44__i
  404:  set __fn44__count 1
  405:  jump __label263 always 0 0
        label __label262
  406:  jump __label264 greaterThan __fn45__dif __fn44__bestDif
  407:  op add __fn44__best __fn44__best __fn44__i
  408:  op add __fn44__count __fn44__count 1
        label __label264
        label __label263
  409:  goto __tmp212 marker10
        gotolabel __label242 marker10
  410:  op div __tmp211 __fn44__best __fn44__count
        label __label233
  411:  assertequals 5 __tmp211 "median(1,1,5,5,5,5)"
  412:  set __fn47__bestDif 10000000000
  413:  set __fn47__best null
  414:  set __fn47__count 1
  415:  setaddr __tmp238 __label273
  416:  set __fn47__i 1
  417:  jump __label271 always 0 0
        gotolabel __label273 marker12
  418:  setaddr __tmp238 __label274
  419:  set __fn47__i 5
  420:  jump __label271 always 0 0
        gotolabel __label274 marker12
  421:  setaddr __tmp238 __label275
  422:  set __fn47__i 5
  423:  jump __label271 always 0 0
        gotolabel __label275 marker12
  424:  setaddr __tmp238 __label276
  425:  set __fn47__i 5
  426:  jump __label271 always 0 0
        gotolabel __label276 marker12
  427:  setaddr __tmp238 __label277
  428:  set __fn47__i 5
  429:  jump __label271 always 0 0
        gotolabel __label277 marker12
  430:  setaddr __tmp238 __label278
  431:  set __fn47__i 5
        label __label271
  432:  set __fn48__gt 0
  433:  set __fn48__lt 0
  434:  setaddr __tmp240 __label284
  435:  set __fn48__i 1
  436:  jump __label282 always 0 0
        gotolabel __label284 marker13
  437:  setaddr __tmp240 __label285
  438:  set __fn48__i 5
  439:  jump __label282 always 0 0
        gotolabel __label285 marker13
  440:  setaddr __tmp240 __label286
  441:  set __fn48__i 5
  442:  jump __label282 always 0 0
        gotolabel __label286 marker13
  443:  setaddr __tmp240 __label287
  444:  set __fn48__i 5
  445:  jump __label282 always 0 0
        gotolabel __label287 marker13
  446:  setaddr __tmp240 __label288
  447:  set __fn48__i 5
  448:  jump __label282 always 0 0
        gotolabel __label288 marker13
  449:  setaddr __tmp240 __label289
  450:  set __fn48__i 5
        label __label282
  451:  jump __label290 greaterThanEq __fn48__i __fn47__i
  452:  op add __fn48__lt __fn48__lt 1
  453:  jump __label291 always 0 0
        label __label290
  454:  jump __label292 lessThanEq __fn48__i __fn47__i
  455:  op add __fn48__gt __fn48__gt 1
        label __label292
        label __label291
  456:  goto __tmp240 marker13
        gotolabel __label289 marker13
  457:  op sub __tmp247 __fn48__gt __fn48__lt
  458:  op abs __fn48__dif __tmp247 0
  459:  op add __tmp249 __fn48__gt __fn48__lt
  460:  jump __label294 lessThan __tmp249 5
  461:  op equal __tmp252 __fn48__gt __fn48__lt
  462:  jump __label295 always 0 0
        label __label294
  463:  set __tmp252 false
        label __label295
  464:  jump __label296 equal __tmp252 false
  465:  set __tmp237 __fn47__i
  466:  jump __label269 always 0 0
        label __label296
  467:  jump __label298 greaterThanEq __fn48__dif __fn47__bestDif
  468:  set __fn47__bestDif __fn48__dif
  469:  set __fn47__best __fn47__i
  470:  set __fn47__count 1
  471:  jump __label299 always 0 0
        label __label298
  472:  jump __label300 greaterThan __fn48__dif __fn47__bestDif
  473:  op add __fn47__best __fn47__best __fn47__i
  474:  op add __fn47__count __fn47__count 1
        label __label300
        label __label299
  475:  goto __tmp238 marker12
        gotolabel __label278 marker12
  476:  op div __tmp237 __fn47__best __fn47__count
        label __label269
  477:  assertequals 5 __tmp237 "median(1,5,5,5,5,5)"
  478:  set __fn50__bestDif 10000000000
  479:  set __fn50__best null
  480:  set __fn50__count 1
  481:  setaddr __tmp264 __label309
  482:  jump __label332 always 0 0
        gotolabel __label309 marker14
  483:  setaddr __tmp264 __label310
  484:  jump __label332 always 0 0
        gotolabel __label310 marker14
  485:  setaddr __tmp264 __label311
  486:  jump __label332 always 0 0
        gotolabel __label311 marker14
  487:  setaddr __tmp264 __label312
  488:  jump __label332 always 0 0
        gotolabel __label312 marker14
  489:  setaddr __tmp264 __label313
  490:  jump __label332 always 0 0
        gotolabel __label313 marker14
  491:  setaddr __tmp264 __label314
        label __label332
  492:  jump __label334 greaterThanEq 0 __fn50__bestDif
  493:  set __fn50__bestDif 0
  494:  set __fn50__best 5
  495:  set __fn50__count 1
  496:  jump __label335 always 0 0
        label __label334
  497:  jump __label336 greaterThan 0 __fn50__bestDif
  498:  op add __fn50__best __fn50__best 5
  499:  op add __fn50__count __fn50__count 1
        label __label336
        label __label335
  500:  goto __tmp264 marker14
        gotolabel __label314 marker14
  501:  op div __tmp263 __fn50__best __fn50__count
  502:  assertequals 5 __tmp263 "median(5,5,5,5,5,5)"
  503:  set __fn53__bestDif 10000000000
  504:  set __fn53__best null
  505:  set __fn53__count 1
  506:  setaddr __tmp290 __label345
  507:  set __fn53__i 1
  508:  jump __label343 always 0 0
        gotolabel __label345 marker16
  509:  setaddr __tmp290 __label346
  510:  set __fn53__i 2
  511:  jump __label343 always 0 0
        gotolabel __label346 marker16
  512:  setaddr __tmp290 __label347
  513:  set __fn53__i 3
  514:  jump __label343 always 0 0
        gotolabel __label347 marker16
  515:  setaddr __tmp290 __label348
  516:  set __fn53__i 4
  517:  jump __label343 always 0 0
        gotolabel __label348 marker16
  518:  setaddr __tmp290 __label349
  519:  set __fn53__i 5
  520:  jump __label343 always 0 0
        gotolabel __label349 marker16
  521:  setaddr __tmp290 __label350
  522:  set __fn53__i 6
  523:  jump __label343 always 0 0
        gotolabel __label350 marker16
  524:  setaddr __tmp290 __label351
  525:  set __fn53__i 7
  526:  jump __label343 always 0 0
        gotolabel __label351 marker16
  527:  setaddr __tmp290 __label352
  528:  set __fn53__i 8
  529:  jump __label343 always 0 0
        gotolabel __label352 marker16
  530:  setaddr __tmp290 __label353
  531:  set __fn53__i 9
        label __label343
  532:  set __fn54__gt 0
  533:  set __fn54__lt 0
  534:  jump __label688 greaterThanEq 1 __fn53__i
  535:  set __fn54__lt 1
  536:  jump __label691 always 0 0
        label __label688
  537:  jump __label689 lessThanEq 1 __fn53__i
  538:  set __fn54__gt 1
        label __label689
        label __label691
  539:  jump __label696 greaterThanEq 2 __fn53__i
  540:  op add __fn54__lt __fn54__lt 1
  541:  jump __label699 always 0 0
        label __label696
  542:  jump __label697 lessThanEq 2 __fn53__i
  543:  op add __fn54__gt __fn54__gt 1
        label __label697
        label __label699
  544:  jump __label704 greaterThanEq 3 __fn53__i
  545:  op add __fn54__lt __fn54__lt 1
  546:  jump __label707 always 0 0
        label __label704
  547:  jump __label705 lessThanEq 3 __fn53__i
  548:  op add __fn54__gt __fn54__gt 1
        label __label705
        label __label707
  549:  jump __label712 greaterThanEq 4 __fn53__i
  550:  op add __fn54__lt __fn54__lt 1
  551:  jump __label715 always 0 0
        label __label712
  552:  jump __label713 lessThanEq 4 __fn53__i
  553:  op add __fn54__gt __fn54__gt 1
        label __label713
        label __label715
  554:  jump __label720 greaterThanEq 5 __fn53__i
  555:  op add __fn54__lt __fn54__lt 1
  556:  jump __label723 always 0 0
        label __label720
  557:  jump __label721 lessThanEq 5 __fn53__i
  558:  op add __fn54__gt __fn54__gt 1
        label __label721
        label __label723
  559:  jump __label728 greaterThanEq 6 __fn53__i
  560:  op add __fn54__lt __fn54__lt 1
  561:  jump __label731 always 0 0
        label __label728
  562:  jump __label729 lessThanEq 6 __fn53__i
  563:  op add __fn54__gt __fn54__gt 1
        label __label729
        label __label731
  564:  jump __label736 greaterThanEq 7 __fn53__i
  565:  op add __fn54__lt __fn54__lt 1
  566:  jump __label739 always 0 0
        label __label736
  567:  jump __label737 lessThanEq 7 __fn53__i
  568:  op add __fn54__gt __fn54__gt 1
        label __label737
        label __label739
  569:  jump __label744 greaterThanEq 8 __fn53__i
  570:  op add __fn54__lt __fn54__lt 1
  571:  jump __label747 always 0 0
        label __label744
  572:  jump __label745 lessThanEq 8 __fn53__i
  573:  op add __fn54__gt __fn54__gt 1
        label __label745
        label __label747
  574:  jump __label752 greaterThanEq 9 __fn53__i
  575:  op add __fn54__lt __fn54__lt 1
  576:  jump __label755 always 0 0
        label __label752
  577:  jump __label753 lessThanEq 9 __fn53__i
  578:  op add __fn54__gt __fn54__gt 1
        label __label753
        label __label755
  579:  op sub __tmp299 __fn54__gt __fn54__lt
  580:  op abs __fn54__dif __tmp299 0
  581:  op add __tmp301 __fn54__gt __fn54__lt
  582:  jump __label372 lessThan __tmp301 8
  583:  op equal __tmp304 __fn54__gt __fn54__lt
  584:  jump __label373 always 0 0
        label __label372
  585:  set __tmp304 false
        label __label373
  586:  jump __label374 equal __tmp304 false
  587:  set __tmp289 __fn53__i
  588:  jump __label341 always 0 0
        label __label374
  589:  jump __label376 greaterThanEq __fn54__dif __fn53__bestDif
  590:  set __fn53__bestDif __fn54__dif
  591:  set __fn53__best __fn53__i
  592:  set __fn53__count 1
  593:  jump __label377 always 0 0
        label __label376
  594:  jump __label378 greaterThan __fn54__dif __fn53__bestDif
  595:  op add __fn53__best __fn53__best __fn53__i
  596:  op add __fn53__count __fn53__count 1
        label __label378
        label __label377
  597:  goto __tmp290 marker16
        gotolabel __label353 marker16
  598:  op div __tmp289 __fn53__best __fn53__count
        label __label341
  599:  assertequals 5 __tmp289 "median(1,2,3,4,5,6,7,8,9)"
  600:  set __fn56__bestDif 10000000000
  601:  set __fn56__best null
  602:  set __fn56__count 1
  603:  setaddr __tmp316 __label387
  604:  set __fn56__i 9
  605:  jump __label385 always 0 0
        gotolabel __label387 marker18
  606:  setaddr __tmp316 __label388
  607:  set __fn56__i 8
  608:  jump __label385 always 0 0
        gotolabel __label388 marker18
  609:  setaddr __tmp316 __label389
  610:  set __fn56__i 7
  611:  jump __label385 always 0 0
        gotolabel __label389 marker18
  612:  setaddr __tmp316 __label390
  613:  set __fn56__i 6
  614:  jump __label385 always 0 0
        gotolabel __label390 marker18
  615:  setaddr __tmp316 __label391
  616:  set __fn56__i 5
  617:  jump __label385 always 0 0
        gotolabel __label391 marker18
  618:  setaddr __tmp316 __label392
  619:  set __fn56__i 4
  620:  jump __label385 always 0 0
        gotolabel __label392 marker18
  621:  setaddr __tmp316 __label393
  622:  set __fn56__i 3
  623:  jump __label385 always 0 0
        gotolabel __label393 marker18
  624:  setaddr __tmp316 __label394
  625:  set __fn56__i 2
  626:  jump __label385 always 0 0
        gotolabel __label394 marker18
  627:  setaddr __tmp316 __label395
  628:  set __fn56__i 1
        label __label385
  629:  set __fn57__gt 0
  630:  set __fn57__lt 0
  631:  setaddr __tmp318 __label401
  632:  set __fn57__i 9
  633:  jump __label399 always 0 0
        gotolabel __label401 marker19
  634:  setaddr __tmp318 __label402
  635:  set __fn57__i 8
  636:  jump __label399 always 0 0
        gotolabel __label402 marker19
  637:  setaddr __tmp318 __label403
  638:  set __fn57__i 7
  639:  jump __label399 always 0 0
        gotolabel __label403 marker19
  640:  setaddr __tmp318 __label404
  641:  set __fn57__i 6
  642:  jump __label399 always 0 0
        gotolabel __label404 marker19
  643:  setaddr __tmp318 __label405
  644:  set __fn57__i 5
  645:  jump __label399 always 0 0
        gotolabel __label405 marker19
  646:  setaddr __tmp318 __label406
  647:  set __fn57__i 4
  648:  jump __label399 always 0 0
        gotolabel __label406 marker19
  649:  setaddr __tmp318 __label407
  650:  set __fn57__i 3
  651:  jump __label399 always 0 0
        gotolabel __label407 marker19
  652:  setaddr __tmp318 __label408
  653:  set __fn57__i 2
  654:  jump __label399 always 0 0
        gotolabel __label408 marker19
  655:  setaddr __tmp318 __label409
  656:  set __fn57__i 1
        label __label399
  657:  jump __label410 greaterThanEq __fn57__i __fn56__i
  658:  op add __fn57__lt __fn57__lt 1
  659:  jump __label411 always 0 0
        label __label410
  660:  jump __label412 lessThanEq __fn57__i __fn56__i
  661:  op add __fn57__gt __fn57__gt 1
        label __label412
        label __label411
  662:  goto __tmp318 marker19
        gotolabel __label409 marker19
  663:  op sub __tmp325 __fn57__gt __fn57__lt
  664:  op abs __fn57__dif __tmp325 0
  665:  op add __tmp327 __fn57__gt __fn57__lt
  666:  jump __label414 lessThan __tmp327 8
  667:  op equal __tmp330 __fn57__gt __fn57__lt
  668:  jump __label415 always 0 0
        label __label414
  669:  set __tmp330 false
        label __label415
  670:  jump __label416 equal __tmp330 false
  671:  set __tmp315 __fn56__i
  672:  jump __label383 always 0 0
        label __label416
  673:  jump __label418 greaterThanEq __fn57__dif __fn56__bestDif
  674:  set __fn56__bestDif __fn57__dif
  675:  set __fn56__best __fn56__i
  676:  set __fn56__count 1
  677:  jump __label419 always 0 0
        label __label418
  678:  jump __label420 greaterThan __fn57__dif __fn56__bestDif
  679:  op add __fn56__best __fn56__best __fn56__i
  680:  op add __fn56__count __fn56__count 1
        label __label420
        label __label419
  681:  goto __tmp316 marker18
        gotolabel __label395 marker18
  682:  op div __tmp315 __fn56__best __fn56__count
        label __label383
  683:  assertequals 5 __tmp315 "median(9,8,7,6,5,4,3,2,1)"
  684:  set __fn59__bestDif 10000000000
  685:  set __fn59__best null
  686:  set __fn59__count 1
  687:  setaddr __tmp342 __label429
  688:  set __fn59__i 1
  689:  jump __label427 always 0 0
        gotolabel __label429 marker20
  690:  setaddr __tmp342 __label430
  691:  set __fn59__i 3
  692:  jump __label427 always 0 0
        gotolabel __label430 marker20
  693:  setaddr __tmp342 __label431
  694:  set __fn59__i 5
  695:  jump __label427 always 0 0
        gotolabel __label431 marker20
  696:  setaddr __tmp342 __label432
  697:  set __fn59__i 7
  698:  jump __label427 always 0 0
        gotolabel __label432 marker20
  699:  setaddr __tmp342 __label433
  700:  set __fn59__i 9
  701:  jump __label427 always 0 0
        gotolabel __label433 marker20
  702:  setaddr __tmp342 __label434
  703:  set __fn59__i 2
  704:  jump __label427 always 0 0
        gotolabel __label434 marker20
  705:  setaddr __tmp342 __label435
  706:  set __fn59__i 4
  707:  jump __label427 always 0 0
        gotolabel __label435 marker20
  708:  setaddr __tmp342 __label436
  709:  set __fn59__i 6
  710:  jump __label427 always 0 0
        gotolabel __label436 marker20
  711:  setaddr __tmp342 __label437
  712:  set __fn59__i 8
        label __label427
  713:  set __fn60__gt 0
  714:  set __fn60__lt 0
  715:  setaddr __tmp344 __label443
  716:  set __fn60__i 1
  717:  jump __label441 always 0 0
        gotolabel __label443 marker21
  718:  setaddr __tmp344 __label444
  719:  set __fn60__i 3
  720:  jump __label441 always 0 0
        gotolabel __label444 marker21
  721:  setaddr __tmp344 __label445
  722:  set __fn60__i 5
  723:  jump __label441 always 0 0
        gotolabel __label445 marker21
  724:  setaddr __tmp344 __label446
  725:  set __fn60__i 7
  726:  jump __label441 always 0 0
        gotolabel __label446 marker21
  727:  setaddr __tmp344 __label447
  728:  set __fn60__i 9
  729:  jump __label441 always 0 0
        gotolabel __label447 marker21
  730:  setaddr __tmp344 __label448
  731:  set __fn60__i 2
  732:  jump __label441 always 0 0
        gotolabel __label448 marker21
  733:  setaddr __tmp344 __label449
  734:  set __fn60__i 4
  735:  jump __label441 always 0 0
        gotolabel __label449 marker21
  736:  setaddr __tmp344 __label450
  737:  set __fn60__i 6
  738:  jump __label441 always 0 0
        gotolabel __label450 marker21
  739:  setaddr __tmp344 __label451
  740:  set __fn60__i 8
        label __label441
  741:  jump __label452 greaterThanEq __fn60__i __fn59__i
  742:  op add __fn60__lt __fn60__lt 1
  743:  jump __label453 always 0 0
        label __label452
  744:  jump __label454 lessThanEq __fn60__i __fn59__i
  745:  op add __fn60__gt __fn60__gt 1
        label __label454
        label __label453
  746:  goto __tmp344 marker21
        gotolabel __label451 marker21
  747:  op sub __tmp351 __fn60__gt __fn60__lt
  748:  op abs __fn60__dif __tmp351 0
  749:  op add __tmp353 __fn60__gt __fn60__lt
  750:  jump __label456 lessThan __tmp353 8
  751:  op equal __tmp356 __fn60__gt __fn60__lt
  752:  jump __label457 always 0 0
        label __label456
  753:  set __tmp356 false
        label __label457
  754:  jump __label458 equal __tmp356 false
  755:  set __tmp341 __fn59__i
  756:  jump __label425 always 0 0
        label __label458
  757:  jump __label460 greaterThanEq __fn60__dif __fn59__bestDif
  758:  set __fn59__bestDif __fn60__dif
  759:  set __fn59__best __fn59__i
  760:  set __fn59__count 1
  761:  jump __label461 always 0 0
        label __label460
  762:  jump __label462 greaterThan __fn60__dif __fn59__bestDif
  763:  op add __fn59__best __fn59__best __fn59__i
  764:  op add __fn59__count __fn59__count 1
        label __label462
        label __label461
  765:  goto __tmp342 marker20
        gotolabel __label437 marker20
  766:  op div __tmp341 __fn59__best __fn59__count
        label __label425
  767:  assertequals 5 __tmp341 "median(1,3,5,7,9,2,4,6,8)"
  768:  set __fn62__bestDif 10000000000
  769:  set __fn62__best null
  770:  set __fn62__count 1
  771:  setaddr __tmp368 __label471
  772:  set __fn62__i 7
  773:  jump __label469 always 0 0
        gotolabel __label471 marker22
  774:  setaddr __tmp368 __label472
  775:  set __fn62__i 4
  776:  jump __label469 always 0 0
        gotolabel __label472 marker22
  777:  setaddr __tmp368 __label473
  778:  set __fn62__i 2
  779:  jump __label469 always 0 0
        gotolabel __label473 marker22
  780:  setaddr __tmp368 __label474
  781:  set __fn62__i 8
  782:  jump __label469 always 0 0
        gotolabel __label474 marker22
  783:  setaddr __tmp368 __label475
  784:  set __fn62__i 1
  785:  jump __label469 always 0 0
        gotolabel __label475 marker22
  786:  setaddr __tmp368 __label476
  787:  set __fn62__i 5
  788:  jump __label469 always 0 0
        gotolabel __label476 marker22
  789:  setaddr __tmp368 __label477
  790:  set __fn62__i 6
  791:  jump __label469 always 0 0
        gotolabel __label477 marker22
  792:  setaddr __tmp368 __label478
  793:  set __fn62__i 9
  794:  jump __label469 always 0 0
        gotolabel __label478 marker22
  795:  setaddr __tmp368 __label479
  796:  set __fn62__i 3
        label __label469
  797:  set __fn63__gt 0
  798:  set __fn63__lt 0
  799:  setaddr __tmp370 __label485
  800:  set __fn63__i 7
  801:  jump __label483 always 0 0
        gotolabel __label485 marker23
  802:  setaddr __tmp370 __label486
  803:  set __fn63__i 4
  804:  jump __label483 always 0 0
        gotolabel __label486 marker23
  805:  setaddr __tmp370 __label487
  806:  set __fn63__i 2
  807:  jump __label483 always 0 0
        gotolabel __label487 marker23
  808:  setaddr __tmp370 __label488
  809:  set __fn63__i 8
  810:  jump __label483 always 0 0
        gotolabel __label488 marker23
  811:  setaddr __tmp370 __label489
  812:  set __fn63__i 1
  813:  jump __label483 always 0 0
        gotolabel __label489 marker23
  814:  setaddr __tmp370 __label490
  815:  set __fn63__i 5
  816:  jump __label483 always 0 0
        gotolabel __label490 marker23
  817:  setaddr __tmp370 __label491
  818:  set __fn63__i 6
  819:  jump __label483 always 0 0
        gotolabel __label491 marker23
  820:  setaddr __tmp370 __label492
  821:  set __fn63__i 9
  822:  jump __label483 always 0 0
        gotolabel __label492 marker23
  823:  setaddr __tmp370 __label493
  824:  set __fn63__i 3
        label __label483
  825:  jump __label494 greaterThanEq __fn63__i __fn62__i
  826:  op add __fn63__lt __fn63__lt 1
  827:  jump __label495 always 0 0
        label __label494
  828:  jump __label496 lessThanEq __fn63__i __fn62__i
  829:  op add __fn63__gt __fn63__gt 1
        label __label496
        label __label495
  830:  goto __tmp370 marker23
        gotolabel __label493 marker23
  831:  op sub __tmp377 __fn63__gt __fn63__lt
  832:  op abs __fn63__dif __tmp377 0
  833:  op add __tmp379 __fn63__gt __fn63__lt
  834:  jump __label498 lessThan __tmp379 8
  835:  op equal __tmp382 __fn63__gt __fn63__lt
  836:  jump __label499 always 0 0
        label __label498
  837:  set __tmp382 false
        label __label499
  838:  jump __label500 equal __tmp382 false
  839:  set __tmp367 __fn62__i
  840:  jump __label467 always 0 0
        label __label500
  841:  jump __label502 greaterThanEq __fn63__dif __fn62__bestDif
  842:  set __fn62__bestDif __fn63__dif
  843:  set __fn62__best __fn62__i
  844:  set __fn62__count 1
  845:  jump __label503 always 0 0
        label __label502
  846:  jump __label504 greaterThan __fn63__dif __fn62__bestDif
  847:  op add __fn62__best __fn62__best __fn62__i
  848:  op add __fn62__count __fn62__count 1
        label __label504
        label __label503
  849:  goto __tmp368 marker22
        gotolabel __label479 marker22
  850:  op div __tmp367 __fn62__best __fn62__count
        label __label467
  851:  assertequals 5 __tmp367 "median(7,4,2,8,1,5,6,9,3)"
  852:  set __fn65__bestDif 10000000000
  853:  set __fn65__best null
  854:  set __fn65__count 1
  855:  setaddr __tmp394 __label513
  856:  set __fn65__i 1
  857:  jump __label511 always 0 0
        gotolabel __label513 marker24
  858:  setaddr __tmp394 __label514
  859:  set __fn65__i 1
  860:  jump __label511 always 0 0
        gotolabel __label514 marker24
  861:  setaddr __tmp394 __label515
  862:  set __fn65__i 1
  863:  jump __label511 always 0 0
        gotolabel __label515 marker24
  864:  setaddr __tmp394 __label516
  865:  set __fn65__i 1
  866:  jump __label511 always 0 0
        gotolabel __label516 marker24
  867:  setaddr __tmp394 __label517
  868:  set __fn65__i 9
  869:  jump __label511 always 0 0
        gotolabel __label517 marker24
  870:  setaddr __tmp394 __label518
  871:  set __fn65__i 9
  872:  jump __label511 always 0 0
        gotolabel __label518 marker24
  873:  setaddr __tmp394 __label519
  874:  set __fn65__i 9
  875:  jump __label511 always 0 0
        gotolabel __label519 marker24
  876:  setaddr __tmp394 __label520
  877:  set __fn65__i 9
  878:  jump __label511 always 0 0
        gotolabel __label520 marker24
  879:  setaddr __tmp394 __label521
  880:  set __fn65__i 5
        label __label511
  881:  set __fn66__gt 0
  882:  set __fn66__lt 0
  883:  setaddr __tmp396 __label527
  884:  set __fn66__i 1
  885:  jump __label525 always 0 0
        gotolabel __label527 marker25
  886:  setaddr __tmp396 __label528
  887:  set __fn66__i 1
  888:  jump __label525 always 0 0
        gotolabel __label528 marker25
  889:  setaddr __tmp396 __label529
  890:  set __fn66__i 1
  891:  jump __label525 always 0 0
        gotolabel __label529 marker25
  892:  setaddr __tmp396 __label530
  893:  set __fn66__i 1
  894:  jump __label525 always 0 0
        gotolabel __label530 marker25
  895:  setaddr __tmp396 __label531
  896:  set __fn66__i 9
  897:  jump __label525 always 0 0
        gotolabel __label531 marker25
  898:  setaddr __tmp396 __label532
  899:  set __fn66__i 9
  900:  jump __label525 always 0 0
        gotolabel __label532 marker25
  901:  setaddr __tmp396 __label533
  902:  set __fn66__i 9
  903:  jump __label525 always 0 0
        gotolabel __label533 marker25
  904:  setaddr __tmp396 __label534
  905:  set __fn66__i 9
  906:  jump __label525 always 0 0
        gotolabel __label534 marker25
  907:  setaddr __tmp396 __label535
  908:  set __fn66__i 5
        label __label525
  909:  jump __label536 greaterThanEq __fn66__i __fn65__i
  910:  op add __fn66__lt __fn66__lt 1
  911:  jump __label537 always 0 0
        label __label536
  912:  jump __label538 lessThanEq __fn66__i __fn65__i
  913:  op add __fn66__gt __fn66__gt 1
        label __label538
        label __label537
  914:  goto __tmp396 marker25
        gotolabel __label535 marker25
  915:  op sub __tmp403 __fn66__gt __fn66__lt
  916:  op abs __fn66__dif __tmp403 0
  917:  op add __tmp405 __fn66__gt __fn66__lt
  918:  jump __label540 lessThan __tmp405 8
  919:  op equal __tmp408 __fn66__gt __fn66__lt
  920:  jump __label541 always 0 0
        label __label540
  921:  set __tmp408 false
        label __label541
  922:  jump __label542 equal __tmp408 false
  923:  set __tmp393 __fn65__i
  924:  jump __label509 always 0 0
        label __label542
  925:  jump __label544 greaterThanEq __fn66__dif __fn65__bestDif
  926:  set __fn65__bestDif __fn66__dif
  927:  set __fn65__best __fn65__i
  928:  set __fn65__count 1
  929:  jump __label545 always 0 0
        label __label544
  930:  jump __label546 greaterThan __fn66__dif __fn65__bestDif
  931:  op add __fn65__best __fn65__best __fn65__i
  932:  op add __fn65__count __fn65__count 1
        label __label546
        label __label545
  933:  goto __tmp394 marker24
        gotolabel __label521 marker24
  934:  op div __tmp393 __fn65__best __fn65__count
        label __label509
  935:  assertequals 5 __tmp393 "median(1,1,1,1,9,9,9,9,5)"
  936:  stop
  937:  end
        label __label0
  938:  jump __label549 notEqual __fn0__x 0
  939:  set __fn0retval 0
  940:  jump __label550 always 0 0
        label __label549
  941:  jump __label551 greaterThanEq __fn0__x 0
  942:  set __fn0retval -1
  943:  jump __label552 always 0 0
        label __label551
  944:  set __fn0retval 1
        label __label552
        label __label550
  945:  goto __fn0retaddr __fn0
  946:  end
        label __label1
  947:  op max __fn1__y2 __fn1__x1 __fn1__x2
  948:  op min __fn1__y3 __fn1__x3 __fn1__x4
  949:  jump __label554 greaterThan __fn1__y2 __fn1__y3
  950:  op add __tmp426 __fn1__y2 __fn1__y3
  951:  op div __fn1retval __tmp426 2
  952:  jump __label555 always 0 0
        label __label554
  953:  op min __fn1__y1 __fn1__x1 __fn1__x2
  954:  op max __fn1__y4 __fn1__x3 __fn1__x4
  955:  jump __label556 lessThan __fn1__y1 __fn1__y4
  956:  op add __tmp432 __fn1__y1 __fn1__y4
  957:  op div __fn1retval __tmp432 2
  958:  jump __label557 always 0 0
        label __label556
  959:  op max __tmp434 __fn1__y1 __fn1__y3
  960:  op min __tmp435 __fn1__y2 __fn1__y4
  961:  op add __tmp436 __tmp434 __tmp435
  962:  op div __fn1retval __tmp436 2
        label __label557
        label __label555
  963:  goto __fn1retaddr __fn1
  964:  end
        label __label2
  965:  op min __fn2__y1 __fn2__x1 __fn2__x2
  966:  op max __fn2__y2 __fn2__x1 __fn2__x2
  967:  op min __fn2__y4 __fn2__x4 __fn2__x5
  968:  op max __fn2__y5 __fn2__x4 __fn2__x5
  969:  jump __label559 greaterThanEq __fn2__y4 __fn2__y1
  970:  set __fn2__y4 __fn2__y1
  971:  set __fn68__t __fn2__y2
  972:  set __fn2__y2 __fn2__y5
  973:  set __fn2__y5 __fn68__t
        label __label559
  974:  jump __label565 lessThanEq __fn2__x3 __fn2__y2
  975:  jump __label567 greaterThanEq __fn2__y2 __fn2__y4
  976:  op min __fn2retval __fn2__x3 __fn2__y4
  977:  jump __label566 always 0 0
        label __label567
  978:  op min __fn2retval __fn2__y2 __fn2__y5
  979:  jump __label566 always 0 0
        label __label565
  980:  jump __label569 lessThanEq __fn2__x3 __fn2__y4
  981:  op min __fn2retval __fn2__x3 __fn2__y5
  982:  jump __label570 always 0 0
        label __label569
  983:  op min __fn2retval __fn2__y2 __fn2__y4
        label __label570
        label __label566
  984:  goto __fn2retaddr __fn2
  985:  end


stop instruction encountered, dumping variable values:
@counter: 937.0
__fn0__x: -5.0
__fn0retaddr: 24.0
__fn0retval: -1.0
__fn19__result: 0.0
__fn1__x1: 6.0
__fn1__x2: 2.0
__fn1__x3: 8.0
__fn1__x4: 4.0
__fn1__y1: 2.0
__fn1__y2: 6.0
__fn1__y3: 4.0
__fn1__y4: 8.0
__fn1retaddr: 80.0
__fn1retval: 5.0
__fn20__result: 1.0
__fn2__x1: 5.0
__fn2__x2: 5.0
__fn2__x3: 5.0
__fn2__x4: 5.0
__fn2__x5: 5.0
__fn2__y1: 5.0
__fn2__y2: 5.0
__fn2__y4: 5.0
__fn2__y5: 5.0
__fn2retaddr: 122.0
__fn2retval: 5.0
__fn32__best: 6.0
__fn32__bestDif: 0.0
__fn32__count: 6.0
__fn35__best: 5.0
__fn35__bestDif: 1.0
__fn35__count: 5.0
__fn35__i: 5.0
__fn36__dif: 5.0
__fn36__gt: 0.0
__fn36__i: 5.0
__fn36__lt: 5.0
__fn38__best: 4.0
__fn38__bestDif: 2.0
__fn38__count: 4.0
__fn38__i: 5.0
__fn39__dif: 4.0
__fn39__gt: 0.0
__fn39__i: 5.0
__fn39__lt: 4.0
__fn41__best: 18.0
__fn41__bestDif: 3.0
__fn41__count: 6.0
__fn41__i: 5.0
__fn42__dif: 3.0
__fn42__gt: 0.0
__fn42__i: 5.0
__fn42__lt: 3.0
__fn44__best: 20.0
__fn44__bestDif: 2.0
__fn44__count: 4.0
__fn44__i: 5.0
__fn45__dif: 2.0
__fn45__gt: 0.0
__fn45__i: 5.0
__fn45__lt: 2.0
__fn47__best: 25.0
__fn47__bestDif: 1.0
__fn47__count: 5.0
__fn47__i: 5.0
__fn48__dif: 1.0
__fn48__gt: 0.0
__fn48__i: 5.0
__fn48__lt: 1.0
__fn50__best: 30.0
__fn50__bestDif: 0.0
__fn50__count: 6.0
__fn53__best: 4.0
__fn53__bestDif: 2.0
__fn53__count: 1.0
__fn53__i: 5.0
__fn54__dif: 0.0
__fn54__gt: 4.0
__fn54__lt: 4.0
__fn56__best: 6.0
__fn56__bestDif: 2.0
__fn56__count: 1.0
__fn56__i: 5.0
__fn57__dif: 0.0
__fn57__gt: 4.0
__fn57__i: 1.0
__fn57__lt: 4.0
__fn59__best: 3.0
__fn59__bestDif: 4.0
__fn59__count: 1.0
__fn59__i: 5.0
__fn60__dif: 0.0
__fn60__gt: 4.0
__fn60__i: 8.0
__fn60__lt: 4.0
__fn62__best: 4.0
__fn62__bestDif: 2.0
__fn62__count: 1.0
__fn62__i: 5.0
__fn63__dif: 0.0
__fn63__gt: 4.0
__fn63__i: 3.0
__fn63__lt: 4.0
__fn65__best: 40.0
__fn65__bestDif: 5.0
__fn65__count: 8.0
__fn65__i: 5.0
__fn66__dif: 0.0
__fn66__gt: 4.0
__fn66__i: 5.0
__fn66__lt: 4.0
__fn68__t: 5.0
__tmp107: 1.0
__tmp108: 146.0
__tmp133: 1.0
__tmp134: 212.0
__tmp136: 193.0
__tmp143: -5.0
__tmp145: 5.0
__tmp148: 0.0
__tmp159: 1.0
__tmp160: 278.0
__tmp162: 259.0
__tmp169: -4.0
__tmp171: 4.0
__tmp174: 0.0
__tmp185: 3.0
__tmp186: 344.0
__tmp188: 325.0
__tmp195: -3.0
__tmp197: 3.0
__tmp200: 0.0
__tmp211: 5.0
__tmp212: 410.0
__tmp214: 391.0
__tmp221: -2.0
__tmp223: 2.0
__tmp226: 0.0
__tmp237: 5.0
__tmp238: 476.0
__tmp240: 457.0
__tmp247: -1.0
__tmp249: 1.0
__tmp252: 0.0
__tmp263: 5.0
__tmp264: 501.0
__tmp289: 5.0
__tmp290: 521.0
__tmp299: 0.0
__tmp301: 8.0
__tmp304: 1.0
__tmp315: 5.0
__tmp316: 618.0
__tmp318: 663.0
__tmp325: 0.0
__tmp327: 8.0
__tmp330: 1.0
__tmp341: 5.0
__tmp342: 696.0
__tmp344: 747.0
__tmp351: 0.0
__tmp353: 8.0
__tmp356: 1.0
__tmp367: 5.0
__tmp368: 789.0
__tmp370: 831.0
__tmp377: 0.0
__tmp379: 8.0
__tmp382: 1.0
__tmp393: 5.0
__tmp394: 934.0
__tmp396: 915.0
__tmp403: 0.0
__tmp405: 8.0
__tmp408: 1.0
__tmp426: 10.0
__tmp432: 10.0
__tmp434: 4.0
__tmp435: 6.0
__tmp436: 10.0