jump 0 equal message1 null
set :findLinkedBlocks.0:message message1
set :display null
set :message null
set :switch null
set :memory null
print "Example program.\nTrying to locate linked blocks"
set :findLinkedBlocks.0:n @links
jump 34 lessThanEq :findLinkedBlocks.0:n 0
op sub :findLinkedBlocks.0:n :findLinkedBlocks.0:n 1
getlink :findLinkedBlocks.0:block :findLinkedBlocks.0:n
print "\nFound: "
print :findLinkedBlocks.0:block
sensor :findLinkedBlocks.0:type :findLinkedBlocks.0:block @type
set :findLinkedBlocks.0:variable :display
jump 17 notEqual @large-logic-display :findLinkedBlocks.0:type
set :findLinkedBlocks.0:variable :findLinkedBlocks.0:block
set :display :findLinkedBlocks.0:variable
set :findLinkedBlocks.0:variable :message
jump 22 notEqual @message :findLinkedBlocks.0:type
set :findLinkedBlocks.0:variable :findLinkedBlocks.0:block
set :findLinkedBlocks.0:message :findLinkedBlocks.0:block
set :message :findLinkedBlocks.0:variable
set :findLinkedBlocks.0:variable :switch
jump 26 notEqual @switch :findLinkedBlocks.0:type
set :findLinkedBlocks.0:variable :findLinkedBlocks.0:block
set :switch :findLinkedBlocks.0:variable
set :findLinkedBlocks.0:variable :memory
jump 30 notEqual @memory-bank :findLinkedBlocks.0:type
set :findLinkedBlocks.0:variable :findLinkedBlocks.0:block
jump 32 notEqual @memory-cell :findLinkedBlocks.0:type
set :findLinkedBlocks.0:variable :findLinkedBlocks.0:block
set :memory :findLinkedBlocks.0:variable
jump 9 greaterThan :findLinkedBlocks.0:n 0
print "\nDisplay: {0}\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nMemory: "
format :display
op and :findLinkedBlocks.0:foundAll 1 :display
format :message
format :switch
format :memory
op and :findLinkedBlocks.0:foundAll :findLinkedBlocks.0:foundAll :memory
print :memory
op and :findLinkedBlocks.0:foundAll :findLinkedBlocks.0:foundAll :memory
printflush :findLinkedBlocks.0:message
jump 2 equal :findLinkedBlocks.0:foundAll false
assertequals :message message1 "Located message1 block"
