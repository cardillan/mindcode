set p 0
assertflush
print "xxxxx"
assertprints "xxxxx" "Array fill"
set .c*0 p
op add *tmp4 p 1
set .b*1 *tmp4
set .c*1 *tmp4
op add *tmp4 p 2
set .b*2 *tmp4
set .c*2 *tmp4
op add *tmp4 p 3
set .b*3 *tmp4
set .c*3 *tmp4
op add *tmp4 p 4
set .b*4 *tmp4
set .c*4 *tmp4
op add *tmp4 p 5
set .b*5 *tmp4
set .c*5 *tmp4
op add *tmp4 p 6
set .b*6 *tmp4
set .c*6 *tmp4
op add *tmp4 p 7
set .b*7 *tmp4
set .c*7 *tmp4
op add *tmp4 p 8
set .b*8 *tmp4
set .c*8 *tmp4
op add *tmp4 p 9
set .c*9 *tmp4
set .b*0 *tmp4
set .b*9 p
set :reverse:t .b*1
set .b*1 .b*8
set .b*8 :reverse:t
set :reverse:t .b*2
set .b*2 .b*7
set .b*7 :reverse:t
set :reverse:t .b*3
set .b*3 .b*6
set .b*6 :reverse:t
set :reverse:t .b*4
set *tmp14 .b*5
set .b*4 .b*5
set .b*5 :reverse:t
assertflush
print *tmp4
print .b*1
print .b*2
print .b*3
print *tmp14
print :reverse:t
print .b*6
print .b*7
print .b*8
print p
assertprints "9876543210" "Array reverse"
set :bubblesort:flag false
set :bubblesort:a .b*0
op greaterThan *tmp19 .b*0 .b*1
jump 66 equal *tmp19 false
set .b*0 .b*1
set .b*1 :bubblesort:a
set :bubblesort:flag true
jump 68 always 0 0
set :bubblesort:a .b*1
jump 68 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*2
jump 74 equal *tmp19 false
set .b*1 .b*2
set .b*2 :bubblesort:a
set :bubblesort:flag true
jump 76 always 0 0
set :bubblesort:a .b*2
jump 76 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*3
jump 82 equal *tmp19 false
set .b*2 .b*3
set .b*3 :bubblesort:a
set :bubblesort:flag true
jump 84 always 0 0
set :bubblesort:a .b*3
jump 84 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*4
jump 90 equal *tmp19 false
set .b*3 .b*4
set .b*4 :bubblesort:a
set :bubblesort:flag true
jump 92 always 0 0
set :bubblesort:a .b*4
jump 92 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*5
jump 98 equal *tmp19 false
set .b*4 .b*5
set .b*5 :bubblesort:a
set :bubblesort:flag true
jump 100 always 0 0
set :bubblesort:a .b*5
jump 100 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*6
jump 106 equal *tmp19 false
set .b*5 .b*6
set .b*6 :bubblesort:a
set :bubblesort:flag true
jump 108 always 0 0
set :bubblesort:a .b*6
jump 108 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*7
jump 114 equal *tmp19 false
set .b*6 .b*7
set .b*7 :bubblesort:a
set :bubblesort:flag true
jump 116 always 0 0
set :bubblesort:a .b*7
jump 116 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*8
jump 122 equal *tmp19 false
set .b*7 .b*8
set .b*8 :bubblesort:a
set :bubblesort:flag true
jump 124 always 0 0
set :bubblesort:a .b*8
jump 124 always 0 0
op greaterThan *tmp19 :bubblesort:a .b*9
jump 129 equal *tmp19 false
set .b*8 .b*9
set .b*9 :bubblesort:a
set :bubblesort:flag true
jump 201 equal :bubblesort:flag false
set :bubblesort:a .b*9
op lessThan *tmp32 .b*9 .b*8
jump 137 equal *tmp32 false
set .b*9 .b*8
set .b*8 :bubblesort:a
set :bubblesort:flag true
jump 139 always 0 0
set :bubblesort:a .b*8
jump 139 always 0 0
op lessThan *tmp32 :bubblesort:a .b*7
jump 145 equal *tmp32 false
set .b*8 .b*7
set .b*7 :bubblesort:a
set :bubblesort:flag true
jump 147 always 0 0
set :bubblesort:a .b*7
jump 147 always 0 0
op lessThan *tmp32 :bubblesort:a .b*6
jump 153 equal *tmp32 false
set .b*7 .b*6
set .b*6 :bubblesort:a
set :bubblesort:flag true
jump 155 always 0 0
set :bubblesort:a .b*6
jump 155 always 0 0
op lessThan *tmp32 :bubblesort:a .b*5
jump 161 equal *tmp32 false
set .b*6 .b*5
set .b*5 :bubblesort:a
set :bubblesort:flag true
jump 163 always 0 0
set :bubblesort:a .b*5
jump 163 always 0 0
op lessThan *tmp32 :bubblesort:a .b*4
jump 169 equal *tmp32 false
set .b*5 .b*4
set .b*4 :bubblesort:a
set :bubblesort:flag true
jump 171 always 0 0
set :bubblesort:a .b*4
jump 171 always 0 0
op lessThan *tmp32 :bubblesort:a .b*3
jump 177 equal *tmp32 false
set .b*4 .b*3
set .b*3 :bubblesort:a
set :bubblesort:flag true
jump 179 always 0 0
set :bubblesort:a .b*3
jump 179 always 0 0
op lessThan *tmp32 :bubblesort:a .b*2
jump 185 equal *tmp32 false
set .b*3 .b*2
set .b*2 :bubblesort:a
set :bubblesort:flag true
jump 187 always 0 0
set :bubblesort:a .b*2
jump 187 always 0 0
op lessThan *tmp32 :bubblesort:a .b*1
jump 193 equal *tmp32 false
set .b*2 .b*1
set .b*1 :bubblesort:a
set :bubblesort:flag true
jump 195 always 0 0
set :bubblesort:a .b*1
jump 195 always 0 0
op lessThan *tmp32 :bubblesort:a .b*0
jump 200 equal *tmp32 false
set .b*1 .b*0
set .b*0 :bubblesort:a
set :bubblesort:flag true
jump 58 notEqual :bubblesort:flag false
assertflush
print .b*0
print .b*1
print .b*2
print .b*3
print .b*4
print .b*5
print .b*6
print .b*7
print .b*8
print .b*9
assertprints "0123456789" "Array sort 1"
set :bubblesort.1:flag false
set :bubblesort.1:a .b*0
op lessThan *tmp43 .b*0 .b*1
jump 224 equal *tmp43 false
set .b*0 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v .c*0
set .c*0 .c*1
set .c*1 :bubblesort.1:v
set :bubblesort.1:flag true
jump 225 always 0 0
set :bubblesort.1:a .b*1
op lessThan *tmp43 :bubblesort.1:a .b*2
jump 234 equal *tmp43 false
set .b*1 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v .c*1
set .c*1 .c*2
set .c*2 :bubblesort.1:v
set :bubblesort.1:flag true
jump 235 always 0 0
set :bubblesort.1:a .b*2
op lessThan *tmp43 :bubblesort.1:a .b*3
jump 244 equal *tmp43 false
set .b*2 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v .c*2
set .c*2 .c*3
set .c*3 :bubblesort.1:v
set :bubblesort.1:flag true
jump 245 always 0 0
set :bubblesort.1:a .b*3
op lessThan *tmp43 :bubblesort.1:a .b*4
jump 254 equal *tmp43 false
set .b*3 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v .c*3
set .c*3 .c*4
set .c*4 :bubblesort.1:v
set :bubblesort.1:flag true
jump 255 always 0 0
set :bubblesort.1:a .b*4
op lessThan *tmp43 :bubblesort.1:a .b*5
jump 264 equal *tmp43 false
set .b*4 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v .c*4
set .c*4 .c*5
set .c*5 :bubblesort.1:v
set :bubblesort.1:flag true
jump 265 always 0 0
set :bubblesort.1:a .b*5
op lessThan *tmp43 :bubblesort.1:a .b*6
jump 274 equal *tmp43 false
set .b*5 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v .c*5
set .c*5 .c*6
set .c*6 :bubblesort.1:v
set :bubblesort.1:flag true
jump 275 always 0 0
set :bubblesort.1:a .b*6
op lessThan *tmp43 :bubblesort.1:a .b*7
jump 284 equal *tmp43 false
set .b*6 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v .c*6
set .c*6 .c*7
set .c*7 :bubblesort.1:v
set :bubblesort.1:flag true
jump 285 always 0 0
set :bubblesort.1:a .b*7
op lessThan *tmp43 :bubblesort.1:a .b*8
jump 294 equal *tmp43 false
set .b*7 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v .c*7
set .c*7 .c*8
set .c*8 :bubblesort.1:v
set :bubblesort.1:flag true
jump 295 always 0 0
set :bubblesort.1:a .b*8
op lessThan *tmp43 :bubblesort.1:a .b*9
jump 303 equal *tmp43 false
set .b*8 .b*9
set .b*9 :bubblesort.1:a
set :bubblesort.1:v .c*8
set .c*8 .c*9
set .c*9 :bubblesort.1:v
set :bubblesort.1:flag true
jump 394 equal :bubblesort.1:flag false
set :bubblesort.1:a .b*9
op greaterThan *tmp66 .b*9 .b*8
jump 314 equal *tmp66 false
set .b*9 .b*8
set .b*8 :bubblesort.1:a
set :bubblesort.1:v.1 .c*9
set .c*9 .c*8
set .c*8 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 315 always 0 0
set :bubblesort.1:a .b*8
op greaterThan *tmp66 :bubblesort.1:a .b*7
jump 324 equal *tmp66 false
set .b*8 .b*7
set .b*7 :bubblesort.1:a
set :bubblesort.1:v.1 .c*8
set .c*8 .c*7
set .c*7 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 325 always 0 0
set :bubblesort.1:a .b*7
op greaterThan *tmp66 :bubblesort.1:a .b*6
jump 334 equal *tmp66 false
set .b*7 .b*6
set .b*6 :bubblesort.1:a
set :bubblesort.1:v.1 .c*7
set .c*7 .c*6
set .c*6 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 335 always 0 0
set :bubblesort.1:a .b*6
op greaterThan *tmp66 :bubblesort.1:a .b*5
jump 344 equal *tmp66 false
set .b*6 .b*5
set .b*5 :bubblesort.1:a
set :bubblesort.1:v.1 .c*6
set .c*6 .c*5
set .c*5 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 345 always 0 0
set :bubblesort.1:a .b*5
op greaterThan *tmp66 :bubblesort.1:a .b*4
jump 354 equal *tmp66 false
set .b*5 .b*4
set .b*4 :bubblesort.1:a
set :bubblesort.1:v.1 .c*5
set .c*5 .c*4
set .c*4 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 355 always 0 0
set :bubblesort.1:a .b*4
op greaterThan *tmp66 :bubblesort.1:a .b*3
jump 364 equal *tmp66 false
set .b*4 .b*3
set .b*3 :bubblesort.1:a
set :bubblesort.1:v.1 .c*4
set .c*4 .c*3
set .c*3 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 365 always 0 0
set :bubblesort.1:a .b*3
op greaterThan *tmp66 :bubblesort.1:a .b*2
jump 374 equal *tmp66 false
set .b*3 .b*2
set .b*2 :bubblesort.1:a
set :bubblesort.1:v.1 .c*3
set .c*3 .c*2
set .c*2 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 375 always 0 0
set :bubblesort.1:a .b*2
op greaterThan *tmp66 :bubblesort.1:a .b*1
jump 384 equal *tmp66 false
set .b*2 .b*1
set .b*1 :bubblesort.1:a
set :bubblesort.1:v.1 .c*2
set .c*2 .c*1
set .c*1 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 385 always 0 0
set :bubblesort.1:a .b*1
op greaterThan *tmp66 :bubblesort.1:a .b*0
jump 393 equal *tmp66 false
set .b*1 .b*0
set .b*0 :bubblesort.1:a
set :bubblesort.1:v.1 .c*1
set .c*1 .c*0
set .c*0 :bubblesort.1:v.1
set :bubblesort.1:flag true
jump 213 notEqual :bubblesort.1:flag false
assertflush
print .c*0
print .c*1
print .c*2
print .c*3
print .c*4
print .c*5
print .c*6
print .c*7
print .c*8
print .c*9
assertprints "9876543210" "Array sort 2"
