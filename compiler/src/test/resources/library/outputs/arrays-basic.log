   379 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination (9 iterations).
    12 instructions eliminated by Dead Code Elimination (4 iterations).
     2 instructions eliminated by Jump Normalization (8 iterations).
     4 instructions eliminated by Jump Optimization (2 passes, 8 iterations).
     9 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
   842 instructions eliminated by Expression Optimization (2 passes, 6 iterations).
   128 instructions eliminated by Data Flow Optimization (9 passes, 46 iterations).
     7 instructions eliminated by Loop Optimization (6 iterations).
     7 loops improved by Loop Optimization.
   988 instructions added by Loop Unrolling (27 iterations).
     5 loops unrolled by Loop Unrolling.
   281 instructions added by Array Optimization (27 iterations).
    69 jump tables inlined by Array Optimization.
     2 instructions eliminated by Jump Straightening (8 iterations).
   106 instructions updated by Jump Threading.
    18 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   530 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 703):
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
  * Inline compact jump table of array 'a'                       size    -3, benefit       55.0, efficiency   Infinity (-3 instructions)
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'a' write access at *arrays:24:9                      size    +7, benefit       55.0, efficiency      7.857
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:23:5                                  size    -3, benefit      250.0, efficiency   Infinity
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 706):
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
  * Unroll loop at *arrays:23:5                                  size   -10, benefit      250.0, efficiency   Infinity (+45 instructions)
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 661):
  * Promote compact array 'a'                                    size    -5, benefit        5.0, efficiency   Infinity (-5 instructions)
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 666):
  * Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542 (+24 instructions)
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 642):
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
  * Inline compact jump table of array 'b'                       size    -3, benefit       52.5, efficiency   Infinity (-3 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 645):
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
  * Unroll loop at line 12:5                                     size    -1, benefit      500.0, efficiency   Infinity (+249 instructions)
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 396):
  * Promote compact array 'b'                                    size   -30, benefit     5110.0, efficiency   Infinity (-10 instructions)
    Promote compact array 'c'                                    size    +2, benefit     2510.0, efficiency   1255.000
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +268, benefit     7781.0, efficiency     29.034
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 406):
  * Promote compact array 'c'                                    size    +2, benefit     2510.0, efficiency   1255.000 (+2 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +268, benefit     7781.0, efficiency     29.034
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 404):
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
    Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 257):
    Inline read jump table of array 'b'                          size  +218, benefit     4515.0, efficiency     20.711
  ! Inline write jump table of array 'b'                         size  +422, benefit     4515.0, efficiency     10.699
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
    Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 110):
  ! Inline read jump table of array 'b'                          size  +354, benefit     3675.0, efficiency     10.381
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206 (+17 instructions)
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
  ! Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 93):
  ! Inline read jump table of array 'b'                          size  +337, benefit     2362.5, efficiency      7.010
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206 (+17 instructions)
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313
  ! Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 76):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  * Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688 (+48 instructions)
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313
  ! Unroll loop at *arrays:127:9                                 size  +160, benefit    11250.0, efficiency     70.313

Pass 1: speed optimization selection (cost limit 28):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  * Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +279, benefit    11250.0, efficiency     40.323
  ! Unroll loop at *arrays:127:9                                 size  +279, benefit    11250.0, efficiency     40.323

Pass 1: speed optimization selection (cost limit 11):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
  ! Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:127:9                                 size  +279, benefit    11250.0, efficiency     40.323

Pass 2: speed optimization selection (cost limit 483):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +65, benefit     2073.8, efficiency     31.904
  * Inline write jump table of array 'c'                         size   +48, benefit     2625.0, efficiency     54.688 (+48 instructions)
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:109:9                                 size  +399, benefit    11250.0, efficiency     28.195
    Unroll loop at *arrays:127:9                                 size  +263, benefit    11250.0, efficiency     42.776

Pass 2: speed optimization selection (cost limit 435):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +65, benefit     2073.8, efficiency     31.904
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +518, benefit    11250.0, efficiency     21.718
    Unroll loop at *arrays:127:9                                 size  +382, benefit    11250.0, efficiency     29.450

Pass 2: speed optimization selection (cost limit 418):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +48, benefit     1417.5, efficiency     29.531
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
    Unroll loop at *arrays:127:9                                 size  +382, benefit    11250.0, efficiency     29.450

Pass 2: speed optimization selection (cost limit 401):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +31, benefit      761.3, efficiency     24.556
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +518, benefit    11250.0, efficiency     21.718

Pass 2: speed optimization selection (cost limit 384):
  * Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500 (+14 instructions)
    Inline write jump table of array 'b'                         size   +14, benefit      105.0, efficiency      7.500
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 2: speed optimization selection (cost limit 370):
  * Inline write jump table of array 'b'                         size   +14, benefit      105.0, efficiency      7.500 (+14 instructions)
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Unroll loop at *arrays:39:5                                  size   +86, benefit      250.0, efficiency      2.907
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 2: speed optimization selection (cost limit 356):
  * Unroll loop at *arrays:39:5                                  size  +137, benefit      250.0, efficiency      1.825 (+332 instructions)
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 3: speed optimization selection (cost limit 433):
  ! Unroll loop at *arrays:109:9                                 size  +493, benefit    11250.0, efficiency     22.819
  ! Unroll loop at *arrays:127:9                                 size  +493, benefit    11250.0, efficiency     22.819

Pass 4: speed optimization selection (cost limit 433):
  ! Unroll loop at *arrays:109:9                                 size  +493, benefit    11250.0, efficiency     22.819
  ! Unroll loop at *arrays:127:9                                 size  +493, benefit    11250.0, efficiency     22.819

Final code before resolving virtual instructions:

    0:  set p 0
    1:  assertflush
    2:  print "xxxxx"
    3:  assertprints "xxxxx" "Array fill"
    4:  set .c*0 p
    5:  op add *tmp4 p 1
    6:  set .b*1 *tmp4
    7:  set .c*1 *tmp4
    8:  op add *tmp4 p 2
    9:  set .b*2 *tmp4
   10:  set .c*2 *tmp4
   11:  op add *tmp4 p 3
   12:  set .b*3 *tmp4
   13:  set .c*3 *tmp4
   14:  op add *tmp4 p 4
   15:  set .b*4 *tmp4
   16:  set .c*4 *tmp4
   17:  op add *tmp4 p 5
   18:  set .b*5 *tmp4
   19:  set .c*5 *tmp4
   20:  op add *tmp4 p 6
   21:  set .b*6 *tmp4
   22:  set .c*6 *tmp4
   23:  op add *tmp4 p 7
   24:  set .b*7 *tmp4
   25:  set .c*7 *tmp4
   26:  op add *tmp4 p 8
   27:  set .b*8 *tmp4
   28:  set .c*8 *tmp4
   29:  op add *tmp4 p 9
   30:  set .c*9 *tmp4
   31:  set .b*0 *tmp4
   32:  set .b*9 p
   33:  set :reverse:t .b*1
   34:  set .b*1 .b*8
   35:  set .b*8 :reverse:t
   36:  set :reverse:t .b*2
   37:  set .b*2 .b*7
   38:  set .b*7 :reverse:t
   39:  set :reverse:t .b*3
   40:  set .b*3 .b*6
   41:  set .b*6 :reverse:t
   42:  set :reverse:t .b*4
   43:  set *tmp14 .b*5
   44:  set .b*4 .b*5
   45:  set .b*5 :reverse:t
   46:  assertflush
   47:  print *tmp4
   48:  print .b*1
   49:  print .b*2
   50:  print .b*3
   51:  print *tmp14
   52:  print :reverse:t
   53:  print .b*6
   54:  print .b*7
   55:  print .b*8
   56:  print p
   57:  assertprints "9876543210" "Array reverse"
        label *label12
   58:  set :bubblesort:flag false
   59:  set :bubblesort:a .b*0
   60:  op greaterThan *tmp19 .b*0 .b*1
   61:  jump *label94 equal *tmp19 false
   62:  set .b*0 .b*1
   63:  set .b*1 :bubblesort:a
   64:  set :bubblesort:flag true
   65:  jump *label98 always 0 0
        label *label94
   66:  set :bubblesort:a .b*1
   67:  jump *label98 always 0 0
        label *label98
   68:  op greaterThan *tmp19 :bubblesort:a .b*2
   69:  jump *label100 equal *tmp19 false
   70:  set .b*1 .b*2
   71:  set .b*2 :bubblesort:a
   72:  set :bubblesort:flag true
   73:  jump *label104 always 0 0
        label *label100
   74:  set :bubblesort:a .b*2
   75:  jump *label104 always 0 0
        label *label104
   76:  op greaterThan *tmp19 :bubblesort:a .b*3
   77:  jump *label106 equal *tmp19 false
   78:  set .b*2 .b*3
   79:  set .b*3 :bubblesort:a
   80:  set :bubblesort:flag true
   81:  jump *label110 always 0 0
        label *label106
   82:  set :bubblesort:a .b*3
   83:  jump *label110 always 0 0
        label *label110
   84:  op greaterThan *tmp19 :bubblesort:a .b*4
   85:  jump *label112 equal *tmp19 false
   86:  set .b*3 .b*4
   87:  set .b*4 :bubblesort:a
   88:  set :bubblesort:flag true
   89:  jump *label116 always 0 0
        label *label112
   90:  set :bubblesort:a .b*4
   91:  jump *label116 always 0 0
        label *label116
   92:  op greaterThan *tmp19 :bubblesort:a .b*5
   93:  jump *label118 equal *tmp19 false
   94:  set .b*4 .b*5
   95:  set .b*5 :bubblesort:a
   96:  set :bubblesort:flag true
   97:  jump *label122 always 0 0
        label *label118
   98:  set :bubblesort:a .b*5
   99:  jump *label122 always 0 0
        label *label122
  100:  op greaterThan *tmp19 :bubblesort:a .b*6
  101:  jump *label124 equal *tmp19 false
  102:  set .b*5 .b*6
  103:  set .b*6 :bubblesort:a
  104:  set :bubblesort:flag true
  105:  jump *label128 always 0 0
        label *label124
  106:  set :bubblesort:a .b*6
  107:  jump *label128 always 0 0
        label *label128
  108:  op greaterThan *tmp19 :bubblesort:a .b*7
  109:  jump *label130 equal *tmp19 false
  110:  set .b*6 .b*7
  111:  set .b*7 :bubblesort:a
  112:  set :bubblesort:flag true
  113:  jump *label134 always 0 0
        label *label130
  114:  set :bubblesort:a .b*7
  115:  jump *label134 always 0 0
        label *label134
  116:  op greaterThan *tmp19 :bubblesort:a .b*8
  117:  jump *label136 equal *tmp19 false
  118:  set .b*7 .b*8
  119:  set .b*8 :bubblesort:a
  120:  set :bubblesort:flag true
  121:  jump *label140 always 0 0
        label *label136
  122:  set :bubblesort:a .b*8
  123:  jump *label140 always 0 0
        label *label140
  124:  op greaterThan *tmp19 :bubblesort:a .b*9
  125:  jump *label142 equal *tmp19 false
  126:  set .b*8 .b*9
  127:  set .b*9 :bubblesort:a
  128:  set :bubblesort:flag true
        label *label142
  129:  jump *label11 equal :bubblesort:flag false
  130:  set :bubblesort:a .b*9
  131:  op lessThan *tmp32 .b*9 .b*8
  132:  jump *label149 equal *tmp32 false
  133:  set .b*9 .b*8
  134:  set .b*8 :bubblesort:a
  135:  set :bubblesort:flag true
  136:  jump *label153 always 0 0
        label *label149
  137:  set :bubblesort:a .b*8
  138:  jump *label153 always 0 0
        label *label153
  139:  op lessThan *tmp32 :bubblesort:a .b*7
  140:  jump *label155 equal *tmp32 false
  141:  set .b*8 .b*7
  142:  set .b*7 :bubblesort:a
  143:  set :bubblesort:flag true
  144:  jump *label159 always 0 0
        label *label155
  145:  set :bubblesort:a .b*7
  146:  jump *label159 always 0 0
        label *label159
  147:  op lessThan *tmp32 :bubblesort:a .b*6
  148:  jump *label161 equal *tmp32 false
  149:  set .b*7 .b*6
  150:  set .b*6 :bubblesort:a
  151:  set :bubblesort:flag true
  152:  jump *label165 always 0 0
        label *label161
  153:  set :bubblesort:a .b*6
  154:  jump *label165 always 0 0
        label *label165
  155:  op lessThan *tmp32 :bubblesort:a .b*5
  156:  jump *label167 equal *tmp32 false
  157:  set .b*6 .b*5
  158:  set .b*5 :bubblesort:a
  159:  set :bubblesort:flag true
  160:  jump *label171 always 0 0
        label *label167
  161:  set :bubblesort:a .b*5
  162:  jump *label171 always 0 0
        label *label171
  163:  op lessThan *tmp32 :bubblesort:a .b*4
  164:  jump *label173 equal *tmp32 false
  165:  set .b*5 .b*4
  166:  set .b*4 :bubblesort:a
  167:  set :bubblesort:flag true
  168:  jump *label177 always 0 0
        label *label173
  169:  set :bubblesort:a .b*4
  170:  jump *label177 always 0 0
        label *label177
  171:  op lessThan *tmp32 :bubblesort:a .b*3
  172:  jump *label179 equal *tmp32 false
  173:  set .b*4 .b*3
  174:  set .b*3 :bubblesort:a
  175:  set :bubblesort:flag true
  176:  jump *label183 always 0 0
        label *label179
  177:  set :bubblesort:a .b*3
  178:  jump *label183 always 0 0
        label *label183
  179:  op lessThan *tmp32 :bubblesort:a .b*2
  180:  jump *label185 equal *tmp32 false
  181:  set .b*3 .b*2
  182:  set .b*2 :bubblesort:a
  183:  set :bubblesort:flag true
  184:  jump *label189 always 0 0
        label *label185
  185:  set :bubblesort:a .b*2
  186:  jump *label189 always 0 0
        label *label189
  187:  op lessThan *tmp32 :bubblesort:a .b*1
  188:  jump *label191 equal *tmp32 false
  189:  set .b*2 .b*1
  190:  set .b*1 :bubblesort:a
  191:  set :bubblesort:flag true
  192:  jump *label195 always 0 0
        label *label191
  193:  set :bubblesort:a .b*1
  194:  jump *label195 always 0 0
        label *label195
  195:  op lessThan *tmp32 :bubblesort:a .b*0
  196:  jump *label197 equal *tmp32 false
  197:  set .b*1 .b*0
  198:  set .b*0 :bubblesort:a
  199:  set :bubblesort:flag true
        label *label197
  200:  jump *label12 notEqual :bubblesort:flag false
        label *label11
  201:  assertflush
  202:  print .b*0
  203:  print .b*1
  204:  print .b*2
  205:  print .b*3
  206:  print .b*4
  207:  print .b*5
  208:  print .b*6
  209:  print .b*7
  210:  print .b*8
  211:  print .b*9
  212:  assertprints "0123456789" "Array sort 1"
        label *label32
  213:  set :bubblesort.1:flag false
  214:  set :bubblesort.1:a .b*0
  215:  set :bubblesort.1:i 1
        label *label56
  216:  op mul *tmp85 :bubblesort.1:i 2
  217:  multijump *label212 *tmp85 0
        multilabel *label212
  218:  set :bubblesort.1:b .b*0
  219:  jump *label211 always 0 0
        multilabel *label213
  220:  set :bubblesort.1:b .b*1
  221:  jump *label211 always 0 0
        multilabel *label214
  222:  set :bubblesort.1:b .b*2
  223:  jump *label211 always 0 0
        multilabel *label215
  224:  set :bubblesort.1:b .b*3
  225:  jump *label211 always 0 0
        multilabel *label216
  226:  set :bubblesort.1:b .b*4
  227:  jump *label211 always 0 0
        multilabel *label217
  228:  set :bubblesort.1:b .b*5
  229:  jump *label211 always 0 0
        multilabel *label218
  230:  set :bubblesort.1:b .b*6
  231:  jump *label211 always 0 0
        multilabel *label219
  232:  set :bubblesort.1:b .b*7
  233:  jump *label211 always 0 0
        multilabel *label220
  234:  set :bubblesort.1:b .b*8
  235:  jump *label211 always 0 0
        multilabel *label221
  236:  set :bubblesort.1:b .b*9
        label *label211
  237:  jump *label40 greaterThanEq :bubblesort.1:a :bubblesort.1:b
  238:  op sub *tmp47 :bubblesort.1:i 1
  239:  op mul *tmp86 *tmp47 2
  240:  multijump *label223 *tmp86 0
        multilabel *label223
  241:  set .b*0 :bubblesort.1:b
  242:  multijump *label234 *tmp85 0
        multilabel *label224
  243:  set .b*1 :bubblesort.1:b
  244:  multijump *label234 *tmp85 0
        multilabel *label225
  245:  set .b*2 :bubblesort.1:b
  246:  multijump *label234 *tmp85 0
        multilabel *label226
  247:  set .b*3 :bubblesort.1:b
  248:  multijump *label234 *tmp85 0
        multilabel *label227
  249:  set .b*4 :bubblesort.1:b
  250:  multijump *label234 *tmp85 0
        multilabel *label228
  251:  set .b*5 :bubblesort.1:b
  252:  multijump *label234 *tmp85 0
        multilabel *label229
  253:  set .b*6 :bubblesort.1:b
  254:  multijump *label234 *tmp85 0
        multilabel *label230
  255:  set .b*7 :bubblesort.1:b
  256:  multijump *label234 *tmp85 0
        multilabel *label231
  257:  set .b*8 :bubblesort.1:b
  258:  multijump *label234 *tmp85 0
        multilabel *label232
  259:  set .b*9 :bubblesort.1:b
  260:  multijump *label234 *tmp85 0
        multilabel *label234
  261:  set .b*0 :bubblesort.1:a
  262:  multijump *label245 *tmp86 0
        multilabel *label235
  263:  set .b*1 :bubblesort.1:a
  264:  multijump *label245 *tmp86 0
        multilabel *label236
  265:  set .b*2 :bubblesort.1:a
  266:  multijump *label245 *tmp86 0
        multilabel *label237
  267:  set .b*3 :bubblesort.1:a
  268:  multijump *label245 *tmp86 0
        multilabel *label238
  269:  set .b*4 :bubblesort.1:a
  270:  multijump *label245 *tmp86 0
        multilabel *label239
  271:  set .b*5 :bubblesort.1:a
  272:  multijump *label245 *tmp86 0
        multilabel *label240
  273:  set .b*6 :bubblesort.1:a
  274:  multijump *label245 *tmp86 0
        multilabel *label241
  275:  set .b*7 :bubblesort.1:a
  276:  multijump *label245 *tmp86 0
        multilabel *label242
  277:  set .b*8 :bubblesort.1:a
  278:  multijump *label245 *tmp86 0
        multilabel *label243
  279:  set .b*9 :bubblesort.1:a
  280:  multijump *label245 *tmp86 0
        multilabel *label245
  281:  set :bubblesort.1:v .c*0
  282:  multijump *label256 *tmp85 0
        multilabel *label246
  283:  set :bubblesort.1:v .c*1
  284:  multijump *label256 *tmp85 0
        multilabel *label247
  285:  set :bubblesort.1:v .c*2
  286:  multijump *label256 *tmp85 0
        multilabel *label248
  287:  set :bubblesort.1:v .c*3
  288:  multijump *label256 *tmp85 0
        multilabel *label249
  289:  set :bubblesort.1:v .c*4
  290:  multijump *label256 *tmp85 0
        multilabel *label250
  291:  set :bubblesort.1:v .c*5
  292:  multijump *label256 *tmp85 0
        multilabel *label251
  293:  set :bubblesort.1:v .c*6
  294:  multijump *label256 *tmp85 0
        multilabel *label252
  295:  set :bubblesort.1:v .c*7
  296:  multijump *label256 *tmp85 0
        multilabel *label253
  297:  set :bubblesort.1:v .c*8
  298:  multijump *label256 *tmp85 0
        multilabel *label254
  299:  set :bubblesort.1:v .c*9
  300:  multijump *label256 *tmp85 0
        multilabel *label256
  301:  set *tmp59 .c*0
  302:  multijump *label267 *tmp86 0
        multilabel *label257
  303:  set *tmp59 .c*1
  304:  multijump *label267 *tmp86 0
        multilabel *label258
  305:  set *tmp59 .c*2
  306:  multijump *label267 *tmp86 0
        multilabel *label259
  307:  set *tmp59 .c*3
  308:  multijump *label267 *tmp86 0
        multilabel *label260
  309:  set *tmp59 .c*4
  310:  multijump *label267 *tmp86 0
        multilabel *label261
  311:  set *tmp59 .c*5
  312:  multijump *label267 *tmp86 0
        multilabel *label262
  313:  set *tmp59 .c*6
  314:  multijump *label267 *tmp86 0
        multilabel *label263
  315:  set *tmp59 .c*7
  316:  multijump *label267 *tmp86 0
        multilabel *label264
  317:  set *tmp59 .c*8
  318:  multijump *label267 *tmp86 0
        multilabel *label265
  319:  set *tmp59 .c*9
  320:  multijump *label267 *tmp86 0
        multilabel *label267
  321:  set .c*0 *tmp59
  322:  multijump *label278 *tmp85 0
        multilabel *label268
  323:  set .c*1 *tmp59
  324:  multijump *label278 *tmp85 0
        multilabel *label269
  325:  set .c*2 *tmp59
  326:  multijump *label278 *tmp85 0
        multilabel *label270
  327:  set .c*3 *tmp59
  328:  multijump *label278 *tmp85 0
        multilabel *label271
  329:  set .c*4 *tmp59
  330:  multijump *label278 *tmp85 0
        multilabel *label272
  331:  set .c*5 *tmp59
  332:  multijump *label278 *tmp85 0
        multilabel *label273
  333:  set .c*6 *tmp59
  334:  multijump *label278 *tmp85 0
        multilabel *label274
  335:  set .c*7 *tmp59
  336:  multijump *label278 *tmp85 0
        multilabel *label275
  337:  set .c*8 *tmp59
  338:  multijump *label278 *tmp85 0
        multilabel *label276
  339:  set .c*9 *tmp59
  340:  multijump *label278 *tmp85 0
        multilabel *label278
  341:  set .c*0 :bubblesort.1:v
  342:  jump *label277 always 0 0
        multilabel *label279
  343:  set .c*1 :bubblesort.1:v
  344:  jump *label277 always 0 0
        multilabel *label280
  345:  set .c*2 :bubblesort.1:v
  346:  jump *label277 always 0 0
        multilabel *label281
  347:  set .c*3 :bubblesort.1:v
  348:  jump *label277 always 0 0
        multilabel *label282
  349:  set .c*4 :bubblesort.1:v
  350:  jump *label277 always 0 0
        multilabel *label283
  351:  set .c*5 :bubblesort.1:v
  352:  jump *label277 always 0 0
        multilabel *label284
  353:  set .c*6 :bubblesort.1:v
  354:  jump *label277 always 0 0
        multilabel *label285
  355:  set .c*7 :bubblesort.1:v
  356:  jump *label277 always 0 0
        multilabel *label286
  357:  set .c*8 :bubblesort.1:v
  358:  jump *label277 always 0 0
        multilabel *label287
  359:  set .c*9 :bubblesort.1:v
        label *label277
  360:  set :bubblesort.1:flag true
  361:  jump *label41 always 0 0
        label *label40
  362:  set :bubblesort.1:a :bubblesort.1:b
        label *label41
  363:  op add :bubblesort.1:i :bubblesort.1:i 1
  364:  jump *label56 lessThan :bubblesort.1:i 10
  365:  jump *label31 equal :bubblesort.1:flag false
  366:  set :bubblesort.1:a .b*9
  367:  op sub :bubblesort.1:i.1 9 1
        label *label57
  368:  op mul *tmp92 :bubblesort.1:i.1 2
  369:  multijump *label289 *tmp92 0
        multilabel *label289
  370:  set :bubblesort.1:b.1 .b*0
  371:  jump *label288 always 0 0
        multilabel *label290
  372:  set :bubblesort.1:b.1 .b*1
  373:  jump *label288 always 0 0
        multilabel *label291
  374:  set :bubblesort.1:b.1 .b*2
  375:  jump *label288 always 0 0
        multilabel *label292
  376:  set :bubblesort.1:b.1 .b*3
  377:  jump *label288 always 0 0
        multilabel *label293
  378:  set :bubblesort.1:b.1 .b*4
  379:  jump *label288 always 0 0
        multilabel *label294
  380:  set :bubblesort.1:b.1 .b*5
  381:  jump *label288 always 0 0
        multilabel *label295
  382:  set :bubblesort.1:b.1 .b*6
  383:  jump *label288 always 0 0
        multilabel *label296
  384:  set :bubblesort.1:b.1 .b*7
  385:  jump *label288 always 0 0
        multilabel *label297
  386:  set :bubblesort.1:b.1 .b*8
  387:  jump *label288 always 0 0
        multilabel *label298
  388:  set :bubblesort.1:b.1 .b*9
        label *label288
  389:  jump *label49 lessThanEq :bubblesort.1:a :bubblesort.1:b.1
  390:  op add *tmp70 :bubblesort.1:i.1 1
  391:  op mul *tmp93 *tmp70 2
  392:  multijump *label300 *tmp93 0
        multilabel *label300
  393:  set .b*0 :bubblesort.1:b.1
  394:  multijump *label311 *tmp92 0
        multilabel *label301
  395:  set .b*1 :bubblesort.1:b.1
  396:  multijump *label311 *tmp92 0
        multilabel *label302
  397:  set .b*2 :bubblesort.1:b.1
  398:  multijump *label311 *tmp92 0
        multilabel *label303
  399:  set .b*3 :bubblesort.1:b.1
  400:  multijump *label311 *tmp92 0
        multilabel *label304
  401:  set .b*4 :bubblesort.1:b.1
  402:  multijump *label311 *tmp92 0
        multilabel *label305
  403:  set .b*5 :bubblesort.1:b.1
  404:  multijump *label311 *tmp92 0
        multilabel *label306
  405:  set .b*6 :bubblesort.1:b.1
  406:  multijump *label311 *tmp92 0
        multilabel *label307
  407:  set .b*7 :bubblesort.1:b.1
  408:  multijump *label311 *tmp92 0
        multilabel *label308
  409:  set .b*8 :bubblesort.1:b.1
  410:  multijump *label311 *tmp92 0
        multilabel *label309
  411:  set .b*9 :bubblesort.1:b.1
  412:  multijump *label311 *tmp92 0
        multilabel *label311
  413:  set .b*0 :bubblesort.1:a
  414:  multijump *label322 *tmp93 0
        multilabel *label312
  415:  set .b*1 :bubblesort.1:a
  416:  multijump *label322 *tmp93 0
        multilabel *label313
  417:  set .b*2 :bubblesort.1:a
  418:  multijump *label322 *tmp93 0
        multilabel *label314
  419:  set .b*3 :bubblesort.1:a
  420:  multijump *label322 *tmp93 0
        multilabel *label315
  421:  set .b*4 :bubblesort.1:a
  422:  multijump *label322 *tmp93 0
        multilabel *label316
  423:  set .b*5 :bubblesort.1:a
  424:  multijump *label322 *tmp93 0
        multilabel *label317
  425:  set .b*6 :bubblesort.1:a
  426:  multijump *label322 *tmp93 0
        multilabel *label318
  427:  set .b*7 :bubblesort.1:a
  428:  multijump *label322 *tmp93 0
        multilabel *label319
  429:  set .b*8 :bubblesort.1:a
  430:  multijump *label322 *tmp93 0
        multilabel *label320
  431:  set .b*9 :bubblesort.1:a
  432:  multijump *label322 *tmp93 0
        multilabel *label322
  433:  set :bubblesort.1:v.1 .c*0
  434:  multijump *label333 *tmp92 0
        multilabel *label323
  435:  set :bubblesort.1:v.1 .c*1
  436:  multijump *label333 *tmp92 0
        multilabel *label324
  437:  set :bubblesort.1:v.1 .c*2
  438:  multijump *label333 *tmp92 0
        multilabel *label325
  439:  set :bubblesort.1:v.1 .c*3
  440:  multijump *label333 *tmp92 0
        multilabel *label326
  441:  set :bubblesort.1:v.1 .c*4
  442:  multijump *label333 *tmp92 0
        multilabel *label327
  443:  set :bubblesort.1:v.1 .c*5
  444:  multijump *label333 *tmp92 0
        multilabel *label328
  445:  set :bubblesort.1:v.1 .c*6
  446:  multijump *label333 *tmp92 0
        multilabel *label329
  447:  set :bubblesort.1:v.1 .c*7
  448:  multijump *label333 *tmp92 0
        multilabel *label330
  449:  set :bubblesort.1:v.1 .c*8
  450:  multijump *label333 *tmp92 0
        multilabel *label331
  451:  set :bubblesort.1:v.1 .c*9
  452:  multijump *label333 *tmp92 0
        multilabel *label333
  453:  set *tmp82 .c*0
  454:  multijump *label344 *tmp93 0
        multilabel *label334
  455:  set *tmp82 .c*1
  456:  multijump *label344 *tmp93 0
        multilabel *label335
  457:  set *tmp82 .c*2
  458:  multijump *label344 *tmp93 0
        multilabel *label336
  459:  set *tmp82 .c*3
  460:  multijump *label344 *tmp93 0
        multilabel *label337
  461:  set *tmp82 .c*4
  462:  multijump *label344 *tmp93 0
        multilabel *label338
  463:  set *tmp82 .c*5
  464:  multijump *label344 *tmp93 0
        multilabel *label339
  465:  set *tmp82 .c*6
  466:  multijump *label344 *tmp93 0
        multilabel *label340
  467:  set *tmp82 .c*7
  468:  multijump *label344 *tmp93 0
        multilabel *label341
  469:  set *tmp82 .c*8
  470:  multijump *label344 *tmp93 0
        multilabel *label342
  471:  set *tmp82 .c*9
  472:  multijump *label344 *tmp93 0
        multilabel *label344
  473:  set .c*0 *tmp82
  474:  multijump *label355 *tmp92 0
        multilabel *label345
  475:  set .c*1 *tmp82
  476:  multijump *label355 *tmp92 0
        multilabel *label346
  477:  set .c*2 *tmp82
  478:  multijump *label355 *tmp92 0
        multilabel *label347
  479:  set .c*3 *tmp82
  480:  multijump *label355 *tmp92 0
        multilabel *label348
  481:  set .c*4 *tmp82
  482:  multijump *label355 *tmp92 0
        multilabel *label349
  483:  set .c*5 *tmp82
  484:  multijump *label355 *tmp92 0
        multilabel *label350
  485:  set .c*6 *tmp82
  486:  multijump *label355 *tmp92 0
        multilabel *label351
  487:  set .c*7 *tmp82
  488:  multijump *label355 *tmp92 0
        multilabel *label352
  489:  set .c*8 *tmp82
  490:  multijump *label355 *tmp92 0
        multilabel *label353
  491:  set .c*9 *tmp82
  492:  multijump *label355 *tmp92 0
        multilabel *label355
  493:  set .c*0 :bubblesort.1:v.1
  494:  jump *label354 always 0 0
        multilabel *label356
  495:  set .c*1 :bubblesort.1:v.1
  496:  jump *label354 always 0 0
        multilabel *label357
  497:  set .c*2 :bubblesort.1:v.1
  498:  jump *label354 always 0 0
        multilabel *label358
  499:  set .c*3 :bubblesort.1:v.1
  500:  jump *label354 always 0 0
        multilabel *label359
  501:  set .c*4 :bubblesort.1:v.1
  502:  jump *label354 always 0 0
        multilabel *label360
  503:  set .c*5 :bubblesort.1:v.1
  504:  jump *label354 always 0 0
        multilabel *label361
  505:  set .c*6 :bubblesort.1:v.1
  506:  jump *label354 always 0 0
        multilabel *label362
  507:  set .c*7 :bubblesort.1:v.1
  508:  jump *label354 always 0 0
        multilabel *label363
  509:  set .c*8 :bubblesort.1:v.1
  510:  jump *label354 always 0 0
        multilabel *label364
  511:  set .c*9 :bubblesort.1:v.1
        label *label354
  512:  set :bubblesort.1:flag true
  513:  jump *label50 always 0 0
        label *label49
  514:  set :bubblesort.1:a :bubblesort.1:b.1
        label *label50
  515:  op sub :bubblesort.1:i.1 :bubblesort.1:i.1 1
  516:  jump *label57 greaterThanEq :bubblesort.1:i.1 0
  517:  jump *label32 notEqual :bubblesort.1:flag false
        label *label31
  518:  assertflush
  519:  print .c*0
  520:  print .c*1
  521:  print .c*2
  522:  print .c*3
  523:  print .c*4
  524:  print .c*5
  525:  print .c*6
  526:  print .c*7
  527:  print .c*8
  528:  print .c*9
  529:  assertprints "9876543210" "Array sort 2"
