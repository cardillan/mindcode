   392 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination (8 iterations).
    12 instructions eliminated by Dead Code Elimination (4 iterations).
    10 instructions eliminated by Jump Normalization (7 iterations).
    11 instructions eliminated by Jump Optimization (3 passes, 7 iterations).
    19 instructions eliminated by Single Step Elimination (4 passes, 11 iterations).
  1747 instructions eliminated by Expression Optimization (3 passes, 5 iterations).
   194 instructions eliminated by Data Flow Optimization (11 passes, 43 iterations).
     7 instructions eliminated by Loop Optimization (5 iterations).
     7 loops improved by Loop Optimization.
  2016 instructions added by Loop Unrolling (19 iterations).
     7 loops unrolled by Loop Unrolling.
     9 jump tables inlined by Array Optimization.
     2 instructions eliminated by Jump Straightening (7 iterations).
    16 instructions updated by Jump Threading.
    18 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   397 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 690):
    Unroll loop at *arrays:23:5                                  size    -2, benefit      250.0, efficiency   Infinity
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
  * Inline write jump table of array 'a'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'a' write access at *arrays:24:9                      size    +7, benefit       50.0, efficiency      7.143
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 693):
  * Unroll loop at *arrays:23:5                                  size    -9, benefit      250.0, efficiency   Infinity (+41 instructions)
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 652):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 505):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Inline read jump table of array 'b'                          size  +218, benefit     4300.0, efficiency     19.725
    Inline write jump table of array 'b'                         size  +439, benefit     4350.0, efficiency      9.909
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 358):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Inline read jump table of array 'b'                          size  +354, benefit     3500.0, efficiency      9.887
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 341):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Inline read jump table of array 'b'                          size  +337, benefit     2250.0, efficiency      6.677
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 324):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313 (+411 instructions)
    Unroll loop at *arrays:127:9                                 size  +160, benefit    11250.0, efficiency     70.313
    Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:127:9                                 size  +160, benefit    11250.0, efficiency     70.313
  ! Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline read jump table of array 'c'                          size  +320, benefit     1700.0, efficiency      5.313
  ! Inline write jump table of array 'c'                         size  +337, benefit     1750.0, efficiency      5.193
  ! Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:113:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:115:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:116:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 531):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:127:9                                 size  +144, benefit    11250.0, efficiency     78.125
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
  * Inline read jump table of array 'c'                          size   +14, benefit     1250.0, efficiency     89.286 (+14 instructions)
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 517):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:127:9                                 size  +263, benefit    11250.0, efficiency     42.776 (+667 instructions)
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
  ! Inline write jump table of array 'b'                         size  +337, benefit      600.0, efficiency      1.780
  ! Inline write jump table of array 'c'                         size  +303, benefit      500.0, efficiency      1.650
  ! Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit       25.0, efficiency      1.471

Pass 3: speed optimization selection (cost limit 525):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
  * Inline write jump table of array 'c'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 528):
  * Unroll loop at line 12:5                                     size    +1, benefit      500.0, efficiency    500.000 (+231 instructions)
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 297):
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143 (+14 instructions)
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 283):
    Unroll loop at *arrays:39:5                                  size   +86, benefit      250.0, efficiency      2.907
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  * Inline 'b' write access at *arrays:42:9                      size   +17, benefit       50.0, efficiency      2.941 (+17 instructions)
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 266):
  * Unroll loop at *arrays:39:5                                  size   +69, benefit      250.0, efficiency      3.623 (+264 instructions)
    Inline write jump table of array 'b'                         size  +167, benefit       70.0, efficiency      0.419
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 2):
  ! Inline write jump table of array 'b'                         size  +235, benefit       30.0, efficiency      0.128
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit        2.0, efficiency      0.118

Final code before resolving virtual instructions:

    0:  set p 0
    1:  assertflush
    2:  print "xxxxx"
    3:  assertprints "xxxxx" "Array fill"
    4:  set .c*0 p
    5:  op add *tmp4 p 1
    6:  set .b*1 *tmp4
    7:  set .c*1 *tmp4
    8:  op add *tmp4 p 2
    9:  set .b*2 *tmp4
   10:  set .c*2 *tmp4
   11:  op add *tmp4 p 3
   12:  set .b*3 *tmp4
   13:  set .c*3 *tmp4
   14:  op add *tmp4 p 4
   15:  set .b*4 *tmp4
   16:  set .c*4 *tmp4
   17:  op add *tmp4 p 5
   18:  set .b*5 *tmp4
   19:  set .c*5 *tmp4
   20:  op add *tmp4 p 6
   21:  set .b*6 *tmp4
   22:  set .c*6 *tmp4
   23:  op add *tmp4 p 7
   24:  set .b*7 *tmp4
   25:  set .c*7 *tmp4
   26:  op add *tmp4 p 8
   27:  set .b*8 *tmp4
   28:  set .c*8 *tmp4
   29:  op add *tmp4 p 9
   30:  set .c*9 *tmp4
   31:  set .b*0 *tmp4
   32:  set .b*9 p
   33:  set :reverse:t .b*1
   34:  set .b*1 .b*8
   35:  set .b*8 :reverse:t
   36:  set :reverse:t .b*2
   37:  set .b*2 .b*7
   38:  set .b*7 :reverse:t
   39:  set :reverse:t .b*3
   40:  set .b*3 .b*6
   41:  set .b*6 :reverse:t
   42:  set :reverse:t .b*4
   43:  set *tmp14 .b*5
   44:  set .b*4 .b*5
   45:  set .b*5 :reverse:t
   46:  assertflush
   47:  print *tmp4
   48:  print .b*1
   49:  print .b*2
   50:  print .b*3
   51:  print *tmp14
   52:  print :reverse:t
   53:  print .b*6
   54:  print .b*7
   55:  print .b*8
   56:  print p
   57:  assertprints "9876543210" "Array reverse"
        label *label12
   58:  set :bubblesort:flag false
   59:  set :bubblesort:a .b*0
   60:  op greaterThan *tmp19 .b*0 .b*1
   61:  jump *label73 equal *tmp19 false
   62:  set .b*0 .b*1
   63:  set .b*1 :bubblesort:a
   64:  set :bubblesort:flag true
   65:  jump *label77 always 0 0
        label *label73
   66:  set :bubblesort:a .b*1
   67:  jump *label77 always 0 0
        label *label77
   68:  op greaterThan *tmp19 :bubblesort:a .b*2
   69:  jump *label79 equal *tmp19 false
   70:  set .b*1 .b*2
   71:  set .b*2 :bubblesort:a
   72:  set :bubblesort:flag true
   73:  jump *label83 always 0 0
        label *label79
   74:  set :bubblesort:a .b*2
   75:  jump *label83 always 0 0
        label *label83
   76:  op greaterThan *tmp19 :bubblesort:a .b*3
   77:  jump *label85 equal *tmp19 false
   78:  set .b*2 .b*3
   79:  set .b*3 :bubblesort:a
   80:  set :bubblesort:flag true
   81:  jump *label89 always 0 0
        label *label85
   82:  set :bubblesort:a .b*3
   83:  jump *label89 always 0 0
        label *label89
   84:  op greaterThan *tmp19 :bubblesort:a .b*4
   85:  jump *label91 equal *tmp19 false
   86:  set .b*3 .b*4
   87:  set .b*4 :bubblesort:a
   88:  set :bubblesort:flag true
   89:  jump *label95 always 0 0
        label *label91
   90:  set :bubblesort:a .b*4
   91:  jump *label95 always 0 0
        label *label95
   92:  op greaterThan *tmp19 :bubblesort:a .b*5
   93:  jump *label97 equal *tmp19 false
   94:  set .b*4 .b*5
   95:  set .b*5 :bubblesort:a
   96:  set :bubblesort:flag true
   97:  jump *label101 always 0 0
        label *label97
   98:  set :bubblesort:a .b*5
   99:  jump *label101 always 0 0
        label *label101
  100:  op greaterThan *tmp19 :bubblesort:a .b*6
  101:  jump *label103 equal *tmp19 false
  102:  set .b*5 .b*6
  103:  set .b*6 :bubblesort:a
  104:  set :bubblesort:flag true
  105:  jump *label107 always 0 0
        label *label103
  106:  set :bubblesort:a .b*6
  107:  jump *label107 always 0 0
        label *label107
  108:  op greaterThan *tmp19 :bubblesort:a .b*7
  109:  jump *label109 equal *tmp19 false
  110:  set .b*6 .b*7
  111:  set .b*7 :bubblesort:a
  112:  set :bubblesort:flag true
  113:  jump *label113 always 0 0
        label *label109
  114:  set :bubblesort:a .b*7
  115:  jump *label113 always 0 0
        label *label113
  116:  op greaterThan *tmp19 :bubblesort:a .b*8
  117:  jump *label115 equal *tmp19 false
  118:  set .b*7 .b*8
  119:  set .b*8 :bubblesort:a
  120:  set :bubblesort:flag true
  121:  jump *label119 always 0 0
        label *label115
  122:  set :bubblesort:a .b*8
  123:  jump *label119 always 0 0
        label *label119
  124:  op greaterThan *tmp19 :bubblesort:a .b*9
  125:  jump *label121 equal *tmp19 false
  126:  set .b*8 .b*9
  127:  set .b*9 :bubblesort:a
  128:  set :bubblesort:flag true
        label *label121
  129:  jump *label11 equal :bubblesort:flag false
  130:  set :bubblesort:a .b*9
  131:  op lessThan *tmp32 .b*9 .b*8
  132:  jump *label128 equal *tmp32 false
  133:  set .b*9 .b*8
  134:  set .b*8 :bubblesort:a
  135:  set :bubblesort:flag true
  136:  jump *label132 always 0 0
        label *label128
  137:  set :bubblesort:a .b*8
  138:  jump *label132 always 0 0
        label *label132
  139:  op lessThan *tmp32 :bubblesort:a .b*7
  140:  jump *label134 equal *tmp32 false
  141:  set .b*8 .b*7
  142:  set .b*7 :bubblesort:a
  143:  set :bubblesort:flag true
  144:  jump *label138 always 0 0
        label *label134
  145:  set :bubblesort:a .b*7
  146:  jump *label138 always 0 0
        label *label138
  147:  op lessThan *tmp32 :bubblesort:a .b*6
  148:  jump *label140 equal *tmp32 false
  149:  set .b*7 .b*6
  150:  set .b*6 :bubblesort:a
  151:  set :bubblesort:flag true
  152:  jump *label144 always 0 0
        label *label140
  153:  set :bubblesort:a .b*6
  154:  jump *label144 always 0 0
        label *label144
  155:  op lessThan *tmp32 :bubblesort:a .b*5
  156:  jump *label146 equal *tmp32 false
  157:  set .b*6 .b*5
  158:  set .b*5 :bubblesort:a
  159:  set :bubblesort:flag true
  160:  jump *label150 always 0 0
        label *label146
  161:  set :bubblesort:a .b*5
  162:  jump *label150 always 0 0
        label *label150
  163:  op lessThan *tmp32 :bubblesort:a .b*4
  164:  jump *label152 equal *tmp32 false
  165:  set .b*5 .b*4
  166:  set .b*4 :bubblesort:a
  167:  set :bubblesort:flag true
  168:  jump *label156 always 0 0
        label *label152
  169:  set :bubblesort:a .b*4
  170:  jump *label156 always 0 0
        label *label156
  171:  op lessThan *tmp32 :bubblesort:a .b*3
  172:  jump *label158 equal *tmp32 false
  173:  set .b*4 .b*3
  174:  set .b*3 :bubblesort:a
  175:  set :bubblesort:flag true
  176:  jump *label162 always 0 0
        label *label158
  177:  set :bubblesort:a .b*3
  178:  jump *label162 always 0 0
        label *label162
  179:  op lessThan *tmp32 :bubblesort:a .b*2
  180:  jump *label164 equal *tmp32 false
  181:  set .b*3 .b*2
  182:  set .b*2 :bubblesort:a
  183:  set :bubblesort:flag true
  184:  jump *label168 always 0 0
        label *label164
  185:  set :bubblesort:a .b*2
  186:  jump *label168 always 0 0
        label *label168
  187:  op lessThan *tmp32 :bubblesort:a .b*1
  188:  jump *label170 equal *tmp32 false
  189:  set .b*2 .b*1
  190:  set .b*1 :bubblesort:a
  191:  set :bubblesort:flag true
  192:  jump *label174 always 0 0
        label *label170
  193:  set :bubblesort:a .b*1
  194:  jump *label174 always 0 0
        label *label174
  195:  op lessThan *tmp32 :bubblesort:a .b*0
  196:  jump *label176 equal *tmp32 false
  197:  set .b*1 .b*0
  198:  set .b*0 :bubblesort:a
  199:  set :bubblesort:flag true
        label *label176
  200:  jump *label12 notEqual :bubblesort:flag false
        label *label11
  201:  assertflush
  202:  print .b*0
  203:  print .b*1
  204:  print .b*2
  205:  print .b*3
  206:  print .b*4
  207:  print .b*5
  208:  print .b*6
  209:  print .b*7
  210:  print .b*8
  211:  print .b*9
  212:  assertprints "0123456789" "Array sort 1"
        label *label32
  213:  set :bubblesort.1:flag false
  214:  set :bubblesort.1:a .b*0
  215:  op lessThan *tmp43 .b*0 .b*1
  216:  jump *label183 equal *tmp43 false
  217:  set .b*0 .b*1
  218:  set .b*1 :bubblesort.1:a
  219:  set :bubblesort.1:v .c*0
  220:  set .c*0 .c*1
  221:  set .c*1 :bubblesort.1:v
  222:  set :bubblesort.1:flag true
  223:  jump *label184 always 0 0
        label *label183
  224:  set :bubblesort.1:a .b*1
        label *label184
  225:  op lessThan *tmp43 :bubblesort.1:a .b*2
  226:  jump *label189 equal *tmp43 false
  227:  set .b*1 .b*2
  228:  set .b*2 :bubblesort.1:a
  229:  set :bubblesort.1:v .c*1
  230:  set .c*1 .c*2
  231:  set .c*2 :bubblesort.1:v
  232:  set :bubblesort.1:flag true
  233:  jump *label190 always 0 0
        label *label189
  234:  set :bubblesort.1:a .b*2
        label *label190
  235:  op lessThan *tmp43 :bubblesort.1:a .b*3
  236:  jump *label195 equal *tmp43 false
  237:  set .b*2 .b*3
  238:  set .b*3 :bubblesort.1:a
  239:  set :bubblesort.1:v .c*2
  240:  set .c*2 .c*3
  241:  set .c*3 :bubblesort.1:v
  242:  set :bubblesort.1:flag true
  243:  jump *label196 always 0 0
        label *label195
  244:  set :bubblesort.1:a .b*3
        label *label196
  245:  op lessThan *tmp43 :bubblesort.1:a .b*4
  246:  jump *label201 equal *tmp43 false
  247:  set .b*3 .b*4
  248:  set .b*4 :bubblesort.1:a
  249:  set :bubblesort.1:v .c*3
  250:  set .c*3 .c*4
  251:  set .c*4 :bubblesort.1:v
  252:  set :bubblesort.1:flag true
  253:  jump *label202 always 0 0
        label *label201
  254:  set :bubblesort.1:a .b*4
        label *label202
  255:  op lessThan *tmp43 :bubblesort.1:a .b*5
  256:  jump *label207 equal *tmp43 false
  257:  set .b*4 .b*5
  258:  set .b*5 :bubblesort.1:a
  259:  set :bubblesort.1:v .c*4
  260:  set .c*4 .c*5
  261:  set .c*5 :bubblesort.1:v
  262:  set :bubblesort.1:flag true
  263:  jump *label208 always 0 0
        label *label207
  264:  set :bubblesort.1:a .b*5
        label *label208
  265:  op lessThan *tmp43 :bubblesort.1:a .b*6
  266:  jump *label213 equal *tmp43 false
  267:  set .b*5 .b*6
  268:  set .b*6 :bubblesort.1:a
  269:  set :bubblesort.1:v .c*5
  270:  set .c*5 .c*6
  271:  set .c*6 :bubblesort.1:v
  272:  set :bubblesort.1:flag true
  273:  jump *label214 always 0 0
        label *label213
  274:  set :bubblesort.1:a .b*6
        label *label214
  275:  op lessThan *tmp43 :bubblesort.1:a .b*7
  276:  jump *label219 equal *tmp43 false
  277:  set .b*6 .b*7
  278:  set .b*7 :bubblesort.1:a
  279:  set :bubblesort.1:v .c*6
  280:  set .c*6 .c*7
  281:  set .c*7 :bubblesort.1:v
  282:  set :bubblesort.1:flag true
  283:  jump *label220 always 0 0
        label *label219
  284:  set :bubblesort.1:a .b*7
        label *label220
  285:  op lessThan *tmp43 :bubblesort.1:a .b*8
  286:  jump *label225 equal *tmp43 false
  287:  set .b*7 .b*8
  288:  set .b*8 :bubblesort.1:a
  289:  set :bubblesort.1:v .c*7
  290:  set .c*7 .c*8
  291:  set .c*8 :bubblesort.1:v
  292:  set :bubblesort.1:flag true
  293:  jump *label226 always 0 0
        label *label225
  294:  set :bubblesort.1:a .b*8
        label *label226
  295:  op lessThan *tmp43 :bubblesort.1:a .b*9
  296:  jump *label231 equal *tmp43 false
  297:  set .b*8 .b*9
  298:  set .b*9 :bubblesort.1:a
  299:  set :bubblesort.1:v .c*8
  300:  set .c*8 .c*9
  301:  set .c*9 :bubblesort.1:v
  302:  set :bubblesort.1:flag true
        label *label231
  303:  jump *label31 equal :bubblesort.1:flag false
  304:  set :bubblesort.1:a .b*9
  305:  jump *label238 lessThanEq .b*9 .b*8
  306:  set .b*9 .b*8
  307:  set .b*8 :bubblesort.1:a
  308:  set :bubblesort.1:v.1 .c*9
  309:  set .c*9 .c*8
  310:  set .c*8 :bubblesort.1:v.1
  311:  set :bubblesort.1:flag true
  312:  jump *label239 always 0 0
        label *label238
  313:  set :bubblesort.1:a .b*8
        label *label239
  314:  jump *label244 lessThanEq :bubblesort.1:a .b*7
  315:  set .b*8 .b*7
  316:  set .b*7 :bubblesort.1:a
  317:  set :bubblesort.1:v.1 .c*8
  318:  set .c*8 .c*7
  319:  set .c*7 :bubblesort.1:v.1
  320:  set :bubblesort.1:flag true
  321:  jump *label245 always 0 0
        label *label244
  322:  set :bubblesort.1:a .b*7
        label *label245
  323:  jump *label250 lessThanEq :bubblesort.1:a .b*6
  324:  set .b*7 .b*6
  325:  set .b*6 :bubblesort.1:a
  326:  set :bubblesort.1:v.1 .c*7
  327:  set .c*7 .c*6
  328:  set .c*6 :bubblesort.1:v.1
  329:  set :bubblesort.1:flag true
  330:  jump *label251 always 0 0
        label *label250
  331:  set :bubblesort.1:a .b*6
        label *label251
  332:  jump *label256 lessThanEq :bubblesort.1:a .b*5
  333:  set .b*6 .b*5
  334:  set .b*5 :bubblesort.1:a
  335:  set :bubblesort.1:v.1 .c*6
  336:  set .c*6 .c*5
  337:  set .c*5 :bubblesort.1:v.1
  338:  set :bubblesort.1:flag true
  339:  jump *label257 always 0 0
        label *label256
  340:  set :bubblesort.1:a .b*5
        label *label257
  341:  jump *label262 lessThanEq :bubblesort.1:a .b*4
  342:  set .b*5 .b*4
  343:  set .b*4 :bubblesort.1:a
  344:  set :bubblesort.1:v.1 .c*5
  345:  set .c*5 .c*4
  346:  set .c*4 :bubblesort.1:v.1
  347:  set :bubblesort.1:flag true
  348:  jump *label263 always 0 0
        label *label262
  349:  set :bubblesort.1:a .b*4
        label *label263
  350:  jump *label268 lessThanEq :bubblesort.1:a .b*3
  351:  set .b*4 .b*3
  352:  set .b*3 :bubblesort.1:a
  353:  set :bubblesort.1:v.1 .c*4
  354:  set .c*4 .c*3
  355:  set .c*3 :bubblesort.1:v.1
  356:  set :bubblesort.1:flag true
  357:  jump *label269 always 0 0
        label *label268
  358:  set :bubblesort.1:a .b*3
        label *label269
  359:  jump *label274 lessThanEq :bubblesort.1:a .b*2
  360:  set .b*3 .b*2
  361:  set .b*2 :bubblesort.1:a
  362:  set :bubblesort.1:v.1 .c*3
  363:  set .c*3 .c*2
  364:  set .c*2 :bubblesort.1:v.1
  365:  set :bubblesort.1:flag true
  366:  jump *label275 always 0 0
        label *label274
  367:  set :bubblesort.1:a .b*2
        label *label275
  368:  jump *label280 lessThanEq :bubblesort.1:a .b*1
  369:  set .b*2 .b*1
  370:  set .b*1 :bubblesort.1:a
  371:  set :bubblesort.1:v.1 .c*2
  372:  set .c*2 .c*1
  373:  set .c*1 :bubblesort.1:v.1
  374:  set :bubblesort.1:flag true
  375:  jump *label281 always 0 0
        label *label280
  376:  set :bubblesort.1:a .b*1
        label *label281
  377:  jump *label286 lessThanEq :bubblesort.1:a .b*0
  378:  set .b*1 .b*0
  379:  set .b*0 :bubblesort.1:a
  380:  set :bubblesort.1:v.1 .c*1
  381:  set .c*1 .c*0
  382:  set .c*0 :bubblesort.1:v.1
  383:  set :bubblesort.1:flag true
        label *label286
  384:  jump *label32 notEqual :bubblesort.1:flag false
        label *label31
  385:  assertflush
  386:  print .c*0
  387:  print .c*1
  388:  print .c*2
  389:  print .c*3
  390:  print .c*4
  391:  print .c*5
  392:  print .c*6
  393:  print .c*7
  394:  print .c*8
  395:  print .c*9
  396:  assertprints "9876543210" "Array sort 2"
