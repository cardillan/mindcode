   148 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination (2 iterations).
     6 instructions eliminated by Dead Code Elimination (5 iterations).
     3 instructions eliminated by Jump Normalization (7 iterations).
     4 instructions eliminated by Jump Optimization (7 iterations).
     6 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     7 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
     5 instructions eliminated by If Expression Optimization (2 passes, 7 iterations).
    68 instructions eliminated by Data Flow Optimization (5 passes, 18 iterations).
     1 instructions modified by Loop Optimization (5 iterations).
     1 loops improved by Loop Optimization.
    10 instructions added by Loop Unrolling (8 iterations).
     3 loops unrolled by Loop Unrolling.
    19 instructions eliminated by Print Merging.
    38 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 905):
  * Unroll iteration loop at *blocks:59:9                        size   -39, benefit      975.0, efficiency   Infinity (-11 instructions)
    Unroll iteration loop at *blocks:68:13                       size   -24, benefit    24375.0, efficiency   Infinity
    Unroll iteration loop at *blocks:77:9                        size    -4, benefit      975.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 916):
  * Unroll iteration loop at *blocks:68:13                       size   -24, benefit    24375.0, efficiency   Infinity (-4 instructions)
    Unroll iteration loop at *blocks:77:9                        size    -4, benefit      975.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 920):
  * Unroll iteration loop at *blocks:77:9                        size    -4, benefit      975.0, efficiency   Infinity (-3 instructions)

Final code before resolving virtual instructions:

    0:  set :findLinkedBlocks:message message1
        label *label1
    1:  set :display null
    2:  set :message null
    3:  set :switch null
    4:  set :memory null
    5:  print "Example program.\nTrying to locate linked blocks"
    6:  set :findLinkedBlocks:n @links
    7:  jump *label14 lessThanEq :findLinkedBlocks:n 0
        label *label37
    8:  op sub :findLinkedBlocks:n :findLinkedBlocks:n 1
    9:  getlink :findLinkedBlocks:block :findLinkedBlocks:n
   10:  print "\nFound: "
   11:  print :findLinkedBlocks:block
   12:  sensor :findLinkedBlocks:type :findLinkedBlocks:block @type
   13:  select :findLinkedBlocks:variable equal @large-logic-display :findLinkedBlocks:type :findLinkedBlocks:block :display
   14:  set :display :findLinkedBlocks:variable
   15:  set :findLinkedBlocks:variable :message
   16:  jump *label66 notEqual @message :findLinkedBlocks:type
   17:  set :findLinkedBlocks:variable :findLinkedBlocks:block
   18:  set :findLinkedBlocks:message :findLinkedBlocks:block
        label *label66
   19:  set :message :findLinkedBlocks:variable
   20:  select :findLinkedBlocks:variable equal @switch :findLinkedBlocks:type :findLinkedBlocks:block :switch
   21:  set :switch :findLinkedBlocks:variable
   22:  select :findLinkedBlocks:variable equal @memory-bank :findLinkedBlocks:type :findLinkedBlocks:block :memory
   23:  select :findLinkedBlocks:variable equal @memory-cell :findLinkedBlocks:type :findLinkedBlocks:block :findLinkedBlocks:variable
   24:  set :memory :findLinkedBlocks:variable
   25:  jump *label37 greaterThan :findLinkedBlocks:n 0
        label *label14
   26:  print "\nDisplay: {0}\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nMemory: "
   27:  format :display
   28:  op and :findLinkedBlocks:foundAll 1 :display
   29:  format :message
   30:  format :switch
   31:  format :memory
   32:  op and :findLinkedBlocks:foundAll :findLinkedBlocks:foundAll :memory
   33:  print :memory
   34:  op and :findLinkedBlocks:foundAll :findLinkedBlocks:foundAll :memory
   35:  printflush :findLinkedBlocks:message
   36:  jump *label1 equal :findLinkedBlocks:foundAll false
   37:  assertequals :message message1 "Located message1 block"
