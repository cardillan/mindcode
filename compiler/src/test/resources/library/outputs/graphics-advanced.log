   162 instructions before optimizations.
     6 instructions eliminated by Temp Variables Elimination.
     5 instructions eliminated by Case Expression Optimization.
    15 instructions eliminated by Dead Code Elimination (3 iterations).
     2 instructions eliminated by Jump Optimization (4 iterations).
     3 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
    24 instructions eliminated by Data Flow Optimization (2 passes, 10 iterations).
     1 instructions added by Function Inlining (4 iterations).
     2 function calls inlined by Function Inlining.
    10 instructions eliminated by Jump Straightening (4 iterations).
    95 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 901):
  * Inline function 'displaySize' defined at *graphics:57:1      cost     5, benefit        7.0, efficiency        1.4 (-1 instructions)
    Inline function call at line 10:38                           cost     6, benefit        3.5, efficiency        0.6
    Inline function call at line 11:38                           cost     6, benefit        3.5, efficiency        0.6

Final code before resolving virtual instructions:

        label *label1
    0:  jump *label1 equal display1 null
        label *label2
    1:  jump *label2 equal display2 null
        label *label3
    2:  jump *label3 equal display3 null
        label *label4
    3:  jump *label4 equal display4 null
        label *label5
    4:  jump *label5 equal display5 null
    5:  sensor :displaySize.0:type display1 @type
    6:  set :displaySize.0*retval 80
    7:  jump *label69 equal :displaySize.0:type @logic-display
    8:  set :displaySize.0*retval null
    9:  jump *label68 notEqual :displaySize.0:type @large-logic-display
   10:  set :displaySize.0*retval 176
        label *label68
        label *label69
   11:  assertequals 176 :displaySize.0*retval "large display size"
   12:  sensor :displaySize.0:type display5 @type
   13:  set :displaySize.0*retval 80
   14:  jump *label74 equal :displaySize.0:type @logic-display
   15:  set :displaySize.0*retval null
   16:  jump *label73 notEqual :displaySize.0:type @large-logic-display
   17:  set :displaySize.0*retval 176
        label *label73
        label *label74
   18:  assertequals 80 :displaySize.0*retval "small display size"
   19:  assertequals 0.2 0.2 "red channel"
   20:  assertequals 0.4 0.4 "green channel"
   21:  assertequals 0.6 0.6 "blue channel"
   22:  assertequals 0.8 0.8 "alpha channel"
   23:  draw rotate 0 0 90 0 0 0
   24:  draw translate 0 -80 0 0 0 0
   25:  draw rotate 0 0 270 0 0 0
   26:  draw translate -80 0 0 0 0 0
   27:  draw rotate 0 0 180 0 0 0
   28:  draw translate -80 -80 0 0 0 0
   29:  draw scale 1 -1 0 0 0 0
   30:  draw translate 0 -80 0 0 0 0
   31:  draw scale -1 1 0 0 0 0
   32:  draw translate -80 0 0 0 0 0
   33:  draw rotate 0 0 90 0 0 0
   34:  draw translate 0 -176 0 0 0 0
   35:  draw rotate 0 0 270 0 0 0
   36:  draw translate -176 0 0 0 0 0
   37:  draw rotate 0 0 180 0 0 0
   38:  draw translate -176 -176 0 0 0 0
   39:  draw scale 1 -1 0 0 0 0
   40:  draw translate 0 -176 0 0 0 0
   41:  draw scale -1 1 0 0 0 0
   42:  draw translate -176 0 0 0 0 0
   43:  sensor *tmp12 display1 @type
   44:  jump *label21 notEqual *tmp12 @logic-display
   45:  draw rotate 0 0 90 0 0 0
   46:  draw translate 0 -80 0 0 0 0
   47:  jump *label20 always 0 0
        label *label21
   48:  jump *label24 notEqual *tmp12 @large-logic-display
   49:  draw rotate 0 0 90 0 0 0
   50:  draw translate 0 -176 0 0 0 0
   51:  jump *label20 always 0 0
        label *label24
   52:  stop
        label *label20
   53:  sensor *tmp15 display2 @type
   54:  jump *label29 notEqual *tmp15 @logic-display
   55:  draw rotate 0 0 270 0 0 0
   56:  draw translate -80 0 0 0 0 0
   57:  jump *label28 always 0 0
        label *label29
   58:  jump *label32 notEqual *tmp15 @large-logic-display
   59:  draw rotate 0 0 270 0 0 0
   60:  draw translate -176 0 0 0 0 0
   61:  jump *label28 always 0 0
        label *label32
   62:  stop
        label *label28
   63:  sensor *tmp18 display3 @type
   64:  jump *label37 notEqual *tmp18 @logic-display
   65:  draw rotate 0 0 180 0 0 0
   66:  draw translate -80 -80 0 0 0 0
   67:  jump *label36 always 0 0
        label *label37
   68:  jump *label40 notEqual *tmp18 @large-logic-display
   69:  draw rotate 0 0 180 0 0 0
   70:  draw translate -176 -176 0 0 0 0
   71:  jump *label36 always 0 0
        label *label40
   72:  stop
        label *label36
   73:  sensor *tmp21 display4 @type
   74:  jump *label45 notEqual *tmp21 @logic-display
   75:  draw scale 1 -1 0 0 0 0
   76:  draw translate 0 -80 0 0 0 0
   77:  jump *label44 always 0 0
        label *label45
   78:  jump *label48 notEqual *tmp21 @large-logic-display
   79:  draw scale 1 -1 0 0 0 0
   80:  draw translate 0 -176 0 0 0 0
   81:  jump *label44 always 0 0
        label *label48
   82:  stop
        label *label44
   83:  sensor *tmp24 display5 @type
   84:  jump *label53 notEqual *tmp24 @logic-display
   85:  draw scale -1 1 0 0 0 0
   86:  draw translate -80 0 0 0 0 0
   87:  jump *label52 always 0 0
        label *label53
   88:  jump *label56 notEqual *tmp24 @large-logic-display
   89:  draw scale -1 1 0 0 0 0
   90:  draw translate -176 0 0 0 0 0
   91:  jump *label52 always 0 0
        label *label56
   92:  stop
        label *label52
   93:  draw scale 2.2 2.2 0 0 0 0
   94:  draw scale 0.45454545454545453 0.45454545454545453 0 0 0 0
