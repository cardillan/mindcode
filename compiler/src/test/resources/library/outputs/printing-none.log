
Final code before resolving virtual instructions:

    0:  assertflush
    1:  set :printLines:line 1
    2:  setaddr *tmp0 *label12
    3:  jump *label9 always 0 0
        multilabel *label12
    4:  set :printLines:line 2
    5:  setaddr *tmp0 *label13
    6:  jump *label9 always 0 0
        multilabel *label13
    7:  set :printLines:line 3
    8:  setaddr *tmp0 *label14
        label *label9
    9:  print :printLines:line
   10:  print "\n"
        label *label10
   11:  multijump *tmp0 0 0
        multilabel *label14
        label *label11
        label *label8
   12:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
   13:  assertflush
   14:  set :printNumber:number null
   15:  setaddr :printNumber*retaddr *label15
   16:  call *label3 *invalid :printNumber*retval
        label *label15
   17:  assertprints "0" "printNumber(null)"
   18:  assertflush
   19:  set :printNumber:number 1
   20:  setaddr :printNumber*retaddr *label16
   21:  call *label3 *invalid :printNumber*retval
        label *label16
   22:  assertprints "1" "printNumber(1)"
   23:  assertflush
   24:  set :printNumber:number 1.5
   25:  setaddr :printNumber*retaddr *label17
   26:  call *label3 *invalid :printNumber*retval
        label *label17
   27:  assertprints "1" "printNumber(1.5)"
   28:  assertflush
   29:  set :printNumber:number -1.5
   30:  setaddr :printNumber*retaddr *label18
   31:  call *label3 *invalid :printNumber*retval
        label *label18
   32:  assertprints "-1" "printNumber(-1.5)"
   33:  assertflush
   34:  set :printNumber:number 1234567
   35:  setaddr :printNumber*retaddr *label19
   36:  call *label3 *invalid :printNumber*retval
        label *label19
   37:  assertprints "1,234,567" "printNumber(1234567)"
   38:  assertflush
   39:  set :printNumber:number -1234567
   40:  setaddr :printNumber*retaddr *label20
   41:  call *label3 *invalid :printNumber*retval
        label *label20
   42:  assertprints "-1,234,567" "printNumber(-1234567)"
   43:  assertflush
   44:  set :printNumber:number 9009099999
   45:  setaddr :printNumber*retaddr *label21
   46:  call *label3 *invalid :printNumber*retval
        label *label21
   47:  assertprints "9,009,099,999" "printNumber(9009099999)"
   48:  assertflush
   49:  set :printBinaryNumber:number 0b1001
   50:  set :printBinaryNumber:digits 0
   51:  setaddr :printBinaryNumber*retaddr *label22
   52:  call *label4 *invalid :printBinaryNumber*retval
        label *label22
   53:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   54:  assertflush
   55:  set :printBinaryNumber:number 0b1010
   56:  set :printBinaryNumber:digits 6
   57:  setaddr :printBinaryNumber*retaddr *label23
   58:  call *label4 *invalid :printBinaryNumber*retval
        label *label23
   59:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   60:  assertflush
   61:  set :printBinaryNumber:number -0b1010
   62:  set :printBinaryNumber:digits 6
   63:  setaddr :printBinaryNumber*retaddr *label24
   64:  call *label4 *invalid :printBinaryNumber*retval
        label *label24
   65:  assertprints "-0b001010" "printBinaryNumber(-0b1010, 6)"
   66:  assertflush
   67:  set :printHexNumber:number 0xABCDEF
   68:  set :printHexNumber:digits 0
   69:  setaddr :printHexNumber*retaddr *label25
   70:  call *label5 *invalid :printHexNumber*retval
        label *label25
   71:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
   72:  assertflush
   73:  set :printHexNumber:number 0x1234567890
   74:  set :printHexNumber:digits 0
   75:  setaddr :printHexNumber*retaddr *label26
   76:  call *label5 *invalid :printHexNumber*retval
        label *label26
   77:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
   78:  assertflush
   79:  set :printHexNumber:number 0xAABBCC
   80:  set :printHexNumber:digits 8
   81:  setaddr :printHexNumber*retaddr *label27
   82:  call *label5 *invalid :printHexNumber*retval
        label *label27
   83:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
   84:  assertflush
   85:  set :printHexNumber:number -0xaabbcc
   86:  set :printHexNumber:digits 8
   87:  setaddr :printHexNumber*retaddr *label28
   88:  call *label5 *invalid :printHexNumber*retval
        label *label28
   89:  assertprints "-0x00AABBCC" "printHexNumber(-0xAABBCC, 8)"
   90:  assertflush
   91:  set :printExactFast:n null
   92:  setaddr :printExactFast*retaddr *label29
   93:  call *label6 *invalid :printExactFast*retval
        label *label29
   94:  assertprints "null" "printExactFast(null)"
   95:  assertflush
   96:  set :printExactFast:n 0
   97:  setaddr :printExactFast*retaddr *label30
   98:  call *label6 *invalid :printExactFast*retval
        label *label30
   99:  assertprints "0" "printExactFast(0)"
  100:  assertflush
  101:  set :printExactFast:n 1
  102:  setaddr :printExactFast*retaddr *label31
  103:  call *label6 *invalid :printExactFast*retval
        label *label31
  104:  assertprints "1" "printExactFast(1)"
  105:  assertflush
  106:  set :printExactFast:n 1.0000001
  107:  setaddr :printExactFast*retaddr *label32
  108:  call *label6 *invalid :printExactFast*retval
        label *label32
  109:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  110:  assertflush
  111:  set :printExactFast:n 3.00000007
  112:  setaddr :printExactFast*retaddr *label33
  113:  call *label6 *invalid :printExactFast*retval
        label *label33
  114:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  115:  assertflush
  116:  set :printExactFast:n 3E50
  117:  setaddr :printExactFast*retaddr *label34
  118:  call *label6 *invalid :printExactFast*retval
        label *label34
  119:  assertprints "3E50" "printExactFast(3e50)"
  120:  assertflush
  121:  set :printExactFast:n 1.0123456789
  122:  setaddr :printExactFast*retaddr *label35
  123:  call *label6 *invalid :printExactFast*retval
        label *label35
  124:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  125:  assertflush
  126:  set :printExactFast:n 10000001E13
  127:  setaddr :printExactFast*retaddr *label36
  128:  call *label6 *invalid :printExactFast*retval
        label *label36
  129:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  130:  assertflush
  131:  set :printExactFast:n 12345E-54
  132:  setaddr :printExactFast*retaddr *label37
  133:  call *label6 *invalid :printExactFast*retval
        label *label37
  134:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  135:  assertflush
  136:  set :printExactFast:n -12345E-54
  137:  setaddr :printExactFast*retaddr *label38
  138:  call *label6 *invalid :printExactFast*retval
        label *label38
  139:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  140:  assertflush
  141:  set :printExactSlow:n null
  142:  setaddr :printExactSlow*retaddr *label39
  143:  call *label7 *invalid :printExactSlow*retval
        label *label39
  144:  assertprints "null" "printExactSlow(null)"
  145:  assertflush
  146:  set :printExactSlow:n 0
  147:  setaddr :printExactSlow*retaddr *label40
  148:  call *label7 *invalid :printExactSlow*retval
        label *label40
  149:  assertprints "0" "printExactSlow(0)"
  150:  assertflush
  151:  set :printExactSlow:n 1
  152:  setaddr :printExactSlow*retaddr *label41
  153:  call *label7 *invalid :printExactSlow*retval
        label *label41
  154:  assertprints "1.000000000000000" "printExactSlow(1)"
  155:  assertflush
  156:  set :printExactSlow:n 1.0000001
  157:  setaddr :printExactSlow*retaddr *label42
  158:  call *label7 *invalid :printExactSlow*retval
        label *label42
  159:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  160:  assertflush
  161:  set :printExactSlow:n 3.00000007
  162:  setaddr :printExactSlow*retaddr *label43
  163:  call *label7 *invalid :printExactSlow*retval
        label *label43
  164:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  165:  assertflush
  166:  set :printExactSlow:n 3E50
  167:  setaddr :printExactSlow*retaddr *label44
  168:  call *label7 *invalid :printExactSlow*retval
        label *label44
  169:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  170:  assertflush
  171:  set :printExactSlow:n 1.0123456789
  172:  setaddr :printExactSlow*retaddr *label45
  173:  call *label7 *invalid :printExactSlow*retval
        label *label45
  174:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  175:  assertflush
  176:  set :printExactSlow:n 10000001E13
  177:  setaddr :printExactSlow*retaddr *label46
  178:  call *label7 *invalid :printExactSlow*retval
        label *label46
  179:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  180:  assertflush
  181:  set :printExactSlow:n 12345E-54
  182:  setaddr :printExactSlow*retaddr *label47
  183:  call *label7 *invalid :printExactSlow*retval
        label *label47
  184:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  185:  assertflush
  186:  set :printExactSlow:n -12345E-54
  187:  setaddr :printExactSlow*retaddr *label48
  188:  call *label7 *invalid :printExactSlow*retval
        label *label48
  189:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  190:  assertflush
  191:  set :printExactBinary:n -1035087118336
  192:  op shr *tmp2 :printExactBinary:n 32
  193:  set :printExactBinary:t *tmp2
  194:  setaddr *tmp1 *label53
  195:  jump *label50 always 0 0
        multilabel *label53
  196:  op and *tmp3 :printExactBinary:n 0xFFFFFFFF
  197:  set :printExactBinary:t *tmp3
  198:  setaddr *tmp1 *label54
        label *label50
  199:  op sub :printExactBinary:i 32 1
        label *label55
  200:  jump *label57 lessThan :printExactBinary:i 0
  201:  op shr *tmp4 :printExactBinary:t :printExactBinary:i
  202:  op and *tmp5 *tmp4 1
  203:  print *tmp5
        label *label56
  204:  op sub :printExactBinary:i :printExactBinary:i 1
  205:  jump *label55 always 0 0
        label *label57
        label *label51
  206:  multijump *tmp1 0 0
        multilabel *label54
        label *label52
        label *label49
  207:  assertprints "1111111111111111111111110000111100000000000000000000000000000000" "printExactBinary(0xFFFFFF0F << 32)"
  208:  assertflush
  209:  set :printExactHex:n -1035087118336
  210:  op shr *tmp7 :printExactHex:n 32
  211:  set :printExactHex:t *tmp7
  212:  setaddr *tmp6 *label62
  213:  jump *label59 always 0 0
        multilabel *label62
  214:  op and *tmp8 :printExactHex:n 0xFFFFFFFF
  215:  set :printExactHex:t *tmp8
  216:  setaddr *tmp6 *label63
        label *label59
  217:  op sub :printExactHex:i 8 1
        label *label64
  218:  jump *label66 lessThan :printExactHex:i 0
  219:  op mul *tmp9 4 :printExactHex:i
  220:  op shr *tmp10 :printExactHex:t *tmp9
  221:  op and *tmp11 *tmp10 0xF
  222:  set :printExactHex:digit *tmp11
  223:  read *tmp12 "0123456789ABCDEF" :printExactHex:digit
  224:  printchar *tmp12
        label *label65
  225:  op sub :printExactHex:i :printExactHex:i 1
  226:  jump *label64 always 0 0
        label *label66
        label *label60
  227:  multijump *tmp6 0 0
        multilabel *label63
        label *label61
        label *label58
  228:  assertprints "FFFFFF0F00000000" "printExactHex(0xFFFFFF0F << 32)"
  229:  stop
  230:  end
        label *label3
  231:  print "{2}"
  232:  set :formatNumber:number :printNumber:number
  233:  op abs *tmp13 :formatNumber:number 0
  234:  op floor *tmp14 *tmp13 0
  235:  set :formatNumber:n *tmp14
  236:  op lessThan *tmp15 :formatNumber:number 0
  237:  jump *label69 equal *tmp15 false
  238:  format "-{2}"
  239:  set *tmp16 "-{2}"
  240:  jump *label70 always 0 0
        label *label69
  241:  set *tmp16 null
        label *label70
        label *label71
  242:  op greaterThan *tmp17 :formatNumber:n 999
  243:  jump *label73 equal *tmp17 false
  244:  op mod *tmp18 :formatNumber:n 1000
  245:  set :formatNumber:mod *tmp18
  246:  op greaterThanEq *tmp19 :formatNumber:mod 100
  247:  jump *label74 equal *tmp19 false
  248:  set *tmp20 "{2},{1}"
  249:  jump *label75 always 0 0
        label *label74
  250:  op greaterThanEq *tmp21 :formatNumber:mod 10
  251:  jump *label76 equal *tmp21 false
  252:  set *tmp22 "{2},0{1}"
  253:  jump *label77 always 0 0
        label *label76
  254:  set *tmp22 "{2},00{1}"
        label *label77
  255:  set *tmp20 *tmp22
        label *label75
  256:  format *tmp20
  257:  format :formatNumber:mod
  258:  op idiv :formatNumber:n :formatNumber:n 1000
        label *label72
  259:  jump *label71 always 0 0
        label *label73
  260:  format :formatNumber:n
        label *label68
        label *label67
  261:  return :printNumber*retaddr
  262:  end
        label *label4
  263:  print "{2}"
  264:  set :formatBinaryNumber:number :printBinaryNumber:number
  265:  set :formatBinaryNumber:digits :printBinaryNumber:digits
  266:  op lessThan *tmp23 :formatBinaryNumber:number 0
  267:  jump *label80 equal *tmp23 false
  268:  format "-{2}"
  269:  op abs *tmp25 :formatBinaryNumber:number 0
  270:  set :formatBinaryNumber:number *tmp25
  271:  set *tmp24 :formatBinaryNumber:number
  272:  jump *label81 always 0 0
        label *label80
  273:  set *tmp24 null
        label *label81
  274:  op floor *tmp26 :formatBinaryNumber:number 0
  275:  set :formatBinaryNumber:n *tmp26
        label *label82
  276:  op and *tmp27 :formatBinaryNumber:n 1
  277:  format "{2}{1}"
  278:  format *tmp27
  279:  op shr :formatBinaryNumber:n :formatBinaryNumber:n 1
  280:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
        label *label83
  281:  op greaterThan *tmp28 :formatBinaryNumber:n 0
  282:  jump *label82 notEqual *tmp28 false
        label *label84
        label *label85
  283:  op greaterThan *tmp29 :formatBinaryNumber:digits 0
  284:  jump *label87 equal *tmp29 false
  285:  format "{2}0"
  286:  set *tmp30 :formatBinaryNumber:digits
  287:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
        label *label86
  288:  jump *label85 always 0 0
        label *label87
  289:  format "0b"
        label *label79
        label *label78
  290:  return :printBinaryNumber*retaddr
  291:  end
        label *label5
  292:  print "{2}"
  293:  set :formatHexNumber:number :printHexNumber:number
  294:  set :formatHexNumber:digits :printHexNumber:digits
  295:  op lessThan *tmp31 :formatHexNumber:number 0
  296:  jump *label90 equal *tmp31 false
  297:  format "-{2}"
  298:  op abs *tmp33 :formatHexNumber:number 0
  299:  set :formatHexNumber:number *tmp33
  300:  set *tmp32 :formatHexNumber:number
  301:  jump *label91 always 0 0
        label *label90
  302:  set *tmp32 null
        label *label91
  303:  op floor *tmp34 :formatHexNumber:number 0
  304:  set :formatHexNumber:n *tmp34
        label *label92
  305:  op mod *tmp35 :formatHexNumber:n 16
  306:  set :formatHexNumber:digit *tmp35
  307:  set *tmp37 :formatHexNumber:digit
  308:  jump *label98 lessThan *tmp37 0
  309:  jump *label97 lessThanEq *tmp37 9
        label *label98
  310:  jump *label96 always 0 0
        label *label97
  311:  format "{2}{1}"
  312:  format :formatHexNumber:digit
  313:  set *tmp36 :formatHexNumber:digit
  314:  jump *label95 always 0 0
        label *label96
  315:  jump *label100 equal *tmp37 10
  316:  jump *label99 always 0 0
        label *label100
  317:  format "{2}A"
  318:  set *tmp36 "{2}A"
  319:  jump *label95 always 0 0
        label *label99
  320:  jump *label102 equal *tmp37 11
  321:  jump *label101 always 0 0
        label *label102
  322:  format "{2}B"
  323:  set *tmp36 "{2}B"
  324:  jump *label95 always 0 0
        label *label101
  325:  jump *label104 equal *tmp37 12
  326:  jump *label103 always 0 0
        label *label104
  327:  format "{2}C"
  328:  set *tmp36 "{2}C"
  329:  jump *label95 always 0 0
        label *label103
  330:  jump *label106 equal *tmp37 13
  331:  jump *label105 always 0 0
        label *label106
  332:  format "{2}D"
  333:  set *tmp36 "{2}D"
  334:  jump *label95 always 0 0
        label *label105
  335:  jump *label108 equal *tmp37 14
  336:  jump *label107 always 0 0
        label *label108
  337:  format "{2}E"
  338:  set *tmp36 "{2}E"
  339:  jump *label95 always 0 0
        label *label107
  340:  jump *label110 equal *tmp37 15
  341:  jump *label109 always 0 0
        label *label110
  342:  format "{2}F"
  343:  set *tmp36 "{2}F"
  344:  jump *label95 always 0 0
        label *label109
  345:  set *tmp36 null
        label *label95
  346:  op shr :formatHexNumber:n :formatHexNumber:n 4
  347:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
        label *label93
  348:  op greaterThan *tmp38 :formatHexNumber:n 0
  349:  jump *label92 notEqual *tmp38 false
        label *label94
        label *label111
  350:  op greaterThan *tmp39 :formatHexNumber:digits 0
  351:  jump *label113 equal *tmp39 false
  352:  format "{2}0"
  353:  set *tmp40 :formatHexNumber:digits
  354:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
        label *label112
  355:  jump *label111 always 0 0
        label *label113
  356:  format "0x"
        label *label89
        label *label88
  357:  return :printHexNumber*retaddr
  358:  end
        label *label6
  359:  set :isZero:x :printExactFast:n
  360:  op abs *tmp42 :isZero:x 0
  361:  op lessThanEq *tmp43 *tmp42 0
  362:  set *tmp41 *tmp43
        label *label115
  363:  jump *label116 equal *tmp41 false
  364:  print :printExactFast:n
  365:  set *tmp44 :printExactFast:n
  366:  jump *label117 always 0 0
        label *label116
  367:  op lessThan *tmp45 :printExactFast:n 0
  368:  jump *label118 equal *tmp45 false
  369:  print "-"
  370:  op abs *tmp47 :printExactFast:n 0
  371:  set :printExactFast:n *tmp47
  372:  set *tmp46 :printExactFast:n
  373:  jump *label119 always 0 0
        label *label118
  374:  set *tmp46 null
        label *label119
  375:  op log10 *tmp48 :printExactFast:n 0
  376:  op floor *tmp49 *tmp48 0
  377:  set :printExactFast:exp *tmp49
  378:  op sub *tmp50 0 :printExactFast:exp
  379:  op pow *tmp51 10 *tmp50
  380:  op mul *tmp52 :printExactFast:n *tmp51
  381:  set :printExactFast:base *tmp52
  382:  set :round:x :printExactFast:base
  383:  op add *tmp54 :round:x 0.5
  384:  op floor *tmp55 *tmp54 0
  385:  set *tmp53 *tmp55
        label *label120
  386:  op sub *tmp56 :printExactFast:base *tmp53
  387:  op abs *tmp57 *tmp56 0
  388:  set :printExactFast:cmp *tmp57
  389:  op lessThanEq *tmp58 :printExactFast:cmp 0
  390:  jump *label121 equal *tmp58 false
  391:  print :printExactFast:base
  392:  set *tmp59 :printExactFast:base
  393:  jump *label122 always 0 0
        label *label121
  394:  op greaterThan *tmp60 :printExactFast:cmp 0.00001
  395:  jump *label123 equal *tmp60 false
  396:  print :printExactFast:base
  397:  set *tmp61 :printExactFast:base
  398:  jump *label124 always 0 0
        label *label123
  399:  op floor *tmp62 :printExactFast:base 0
  400:  print *tmp62
  401:  print "."
  402:  set :printExactFast:digit 1
        label *label125
  403:  jump *label127 greaterThan :printExactFast:digit 3
  404:  set :frac:x :printExactFast:base
  405:  op mod *tmp64 :frac:x 1
  406:  set *tmp63 *tmp64
        label *label128
  407:  op mul *tmp65 *tmp63 100000
  408:  set :printExactFast:base *tmp65
  409:  op floor *tmp66 :printExactFast:base 0
  410:  set :printExactFast:t *tmp66
  411:  op lessThan *tmp67 :printExactFast:t 100
  412:  jump *label129 equal *tmp67 false
  413:  op lessThan *tmp69 :printExactFast:t 10
  414:  jump *label131 equal *tmp69 false
  415:  print "0000"
  416:  set *tmp70 "0000"
  417:  jump *label132 always 0 0
        label *label131
  418:  print "000"
  419:  set *tmp70 "000"
        label *label132
  420:  set *tmp68 *tmp70
  421:  jump *label130 always 0 0
        label *label129
  422:  op lessThan *tmp71 :printExactFast:t 1000
  423:  jump *label133 equal *tmp71 false
  424:  print "00"
  425:  set *tmp72 "00"
  426:  jump *label134 always 0 0
        label *label133
  427:  op lessThan *tmp73 :printExactFast:t 10000
  428:  jump *label135 equal *tmp73 false
  429:  print "0"
  430:  set *tmp74 "0"
  431:  jump *label136 always 0 0
        label *label135
  432:  set *tmp74 null
        label *label136
  433:  set *tmp72 *tmp74
        label *label134
  434:  set *tmp68 *tmp72
        label *label130
  435:  print :printExactFast:t
        label *label126
  436:  op add :printExactFast:digit :printExactFast:digit 1
  437:  jump *label125 always 0 0
        label *label127
  438:  set *tmp61 null
        label *label124
  439:  set *tmp59 *tmp61
        label *label122
  440:  op notEqual *tmp75 :printExactFast:exp 0
  441:  jump *label137 equal *tmp75 false
  442:  print "E"
  443:  print :printExactFast:exp
  444:  set *tmp76 :printExactFast:exp
  445:  jump *label138 always 0 0
        label *label137
  446:  set *tmp76 null
        label *label138
  447:  set *tmp44 *tmp76
        label *label117
        label *label114
  448:  return :printExactFast*retaddr
  449:  end
        label *label7
  450:  set :isZero.1:x :printExactSlow:n
  451:  op abs *tmp78 :isZero.1:x 0
  452:  op lessThanEq *tmp79 *tmp78 0
  453:  set *tmp77 *tmp79
        label *label140
  454:  jump *label141 equal *tmp77 false
  455:  print :printExactSlow:n
  456:  set *tmp80 :printExactSlow:n
  457:  jump *label142 always 0 0
        label *label141
  458:  op lessThan *tmp81 :printExactSlow:n 0
  459:  jump *label143 equal *tmp81 false
  460:  print "-"
  461:  op abs *tmp83 :printExactSlow:n 0
  462:  set :printExactSlow:n *tmp83
  463:  set *tmp82 :printExactSlow:n
  464:  jump *label144 always 0 0
        label *label143
  465:  set *tmp82 null
        label *label144
  466:  op log10 *tmp84 :printExactSlow:n 0
  467:  op floor *tmp85 *tmp84 0
  468:  set :printExactSlow:exp *tmp85
  469:  op sub *tmp86 0 :printExactSlow:exp
  470:  op pow *tmp87 10 *tmp86
  471:  op mul *tmp88 :printExactSlow:n *tmp87
  472:  set :printExactSlow:base *tmp88
  473:  op floor *tmp89 :printExactSlow:base 0
  474:  print *tmp89
  475:  print "."
  476:  set :printExactSlow:digit 1
        label *label145
  477:  jump *label147 greaterThan :printExactSlow:digit 15
  478:  set :frac.1:x :printExactSlow:base
  479:  op mod *tmp91 :frac.1:x 1
  480:  set *tmp90 *tmp91
        label *label148
  481:  op mul *tmp92 *tmp90 10
  482:  set :printExactSlow:base *tmp92
  483:  op floor *tmp93 :printExactSlow:base 0
  484:  print *tmp93
        label *label146
  485:  op add :printExactSlow:digit :printExactSlow:digit 1
  486:  jump *label145 always 0 0
        label *label147
  487:  op notEqual *tmp94 :printExactSlow:exp 0
  488:  jump *label149 equal *tmp94 false
  489:  print "E"
  490:  print :printExactSlow:exp
  491:  set *tmp95 :printExactSlow:exp
  492:  jump *label150 always 0 0
        label *label149
  493:  set *tmp95 null
        label *label150
  494:  set *tmp80 *tmp95
        label *label142
        label *label139
  495:  return :printExactSlow*retaddr
  496:  end


stop instruction encountered, dumping variable values:
*tmp0: 12.0
*tmp1: 207.0
*tmp10: 0.0
*tmp11: 0.0
*tmp12: 48.0
*tmp13: 9.009099999E9
*tmp14: 9.009099999E9
*tmp15: 0.0
*tmp16: null
*tmp17: 0.0
*tmp18: 9.0
*tmp19: 0.0
*tmp2: -241.0
*tmp20: {2},00{1}
*tmp21: 0.0
*tmp22: {2},00{1}
*tmp23: 1.0
*tmp24: 10.0
*tmp25: 10.0
*tmp26: 10.0
*tmp27: 1.0
*tmp28: 0.0
*tmp29: 0.0
*tmp3: 0.0
*tmp30: 1.0
*tmp31: 1.0
*tmp32: 1.1189196E7
*tmp33: 1.1189196E7
*tmp34: 1.1189196E7
*tmp35: 10.0
*tmp36: {2}A
*tmp37: 10.0
*tmp38: 0.0
*tmp39: 0.0
*tmp4: 0.0
*tmp40: 1.0
*tmp41: 0.0
*tmp42: 1.2345E-50
*tmp43: 0.0
*tmp44: -50.0
*tmp45: 1.0
*tmp46: 1.2345E-50
*tmp47: 1.2345E-50
*tmp48: -49.90850890573205
*tmp49: -50.0
*tmp5: 0.0
*tmp50: 50.0
*tmp51: 1.0E50
*tmp52: 1.2345000000000002
*tmp53: 1.0
*tmp54: 1.7345000000000002
*tmp55: 1.0
*tmp56: 0.23450000000000015
*tmp57: 0.23450000000000015
*tmp58: 0.0
*tmp59: 1.2345000000000002
*tmp6: 228.0
*tmp60: 1.0
*tmp61: 1.2345000000000002
*tmp62: 1.0
*tmp63: 0.9999983634211276
*tmp64: 0.9999983634211276
*tmp65: 99999.83634211276
*tmp66: 99999.0
*tmp67: 0.0
*tmp68: null
*tmp69: 1.0
*tmp7: -241.0
*tmp70: 0000
*tmp71: 0.0
*tmp72: null
*tmp73: 0.0
*tmp74: null
*tmp75: 1.0
*tmp76: -50.0
*tmp77: 0.0
*tmp78: 1.2345E-50
*tmp79: 0.0
*tmp8: 0.0
*tmp80: -50.0
*tmp81: 1.0
*tmp82: 1.2345E-50
*tmp83: 1.2345E-50
*tmp84: -49.90850890573205
*tmp85: -50.0
*tmp86: 50.0
*tmp87: 1.0E50
*tmp88: 1.2345000000000002
*tmp89: 1.0
*tmp9: 0.0
*tmp90: 0.015276668818842154
*tmp91: 0.015276668818842154
*tmp92: 0.15276668818842154
*tmp93: 0.0
*tmp94: 1.0
*tmp95: -50.0
:formatBinaryNumber:digits: 0.0
:formatBinaryNumber:n: 0.0
:formatBinaryNumber:number: 10.0
:formatHexNumber:digit: 10.0
:formatHexNumber:digits: 0.0
:formatHexNumber:n: 0.0
:formatHexNumber:number: 1.1189196E7
:formatNumber:mod: 9.0
:formatNumber:n: 9.0
:formatNumber:number: 9.009099999E9
:frac.1:x: 0.015276668818842154
:frac:x: 999.9999983634211
:isZero.1:x: -1.2345E-50
:isZero:x: -1.2345E-50
:printBinaryNumber*retaddr: 65.0
:printBinaryNumber:digits: 6.0
:printBinaryNumber:number: -10.0
:printExactBinary:i: -1.0
:printExactBinary:n: -1.035087118336E12
:printExactBinary:t: 0.0
:printExactFast*retaddr: 139.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:digit: 4.0
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactHex:digit: 0.0
:printExactHex:i: -1.0
:printExactHex:n: -1.035087118336E12
:printExactHex:t: 0.0
:printExactSlow*retaddr: 189.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:digit: 16.0
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
:printHexNumber*retaddr: 89.0
:printHexNumber:digits: 8.0
:printHexNumber:number: -1.1189196E7
:printLines:line: 3.0
:printNumber*retaddr: 47.0
:printNumber:number: 9.009099999E9
:round:x: 1.2345000000000002
@counter: 230.0