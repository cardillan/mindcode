
Final code before resolving virtual instructions:

    0:  assertflush
    1:  set :printLines:line 1
    2:  setaddr *tmp0 *label12
    3:  jump *label9 always 0 0
        multilabel *label12
    4:  set :printLines:line 2
    5:  setaddr *tmp0 *label13
    6:  jump *label9 always 0 0
        multilabel *label13
    7:  set :printLines:line 3
    8:  setaddr *tmp0 *label14
        label *label9
    9:  print :printLines:line
   10:  print "\n"
        label *label10
   11:  multijump *tmp0 0 0
        multilabel *label14
        label *label11
        label *label8
   12:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
   13:  assertflush
   14:  set :printNumber:number null
   15:  setaddr :printNumber*retaddr *label15
   16:  call *label3 *invalid :printNumber*retval
        label *label15
   17:  assertprints "0" "printNumber(null)"
   18:  assertflush
   19:  set :printNumber:number 1
   20:  setaddr :printNumber*retaddr *label16
   21:  call *label3 *invalid :printNumber*retval
        label *label16
   22:  assertprints "1" "printNumber(1)"
   23:  assertflush
   24:  set :printNumber:number 1.5
   25:  setaddr :printNumber*retaddr *label17
   26:  call *label3 *invalid :printNumber*retval
        label *label17
   27:  assertprints "1" "printNumber(1.5)"
   28:  assertflush
   29:  set :printNumber:number -1.5
   30:  setaddr :printNumber*retaddr *label18
   31:  call *label3 *invalid :printNumber*retval
        label *label18
   32:  assertprints "-1" "printNumber(-1.5)"
   33:  assertflush
   34:  set :printNumber:number 1234567
   35:  setaddr :printNumber*retaddr *label19
   36:  call *label3 *invalid :printNumber*retval
        label *label19
   37:  assertprints "1,234,567" "printNumber(1234567)"
   38:  assertflush
   39:  set :printNumber:number -1234567
   40:  setaddr :printNumber*retaddr *label20
   41:  call *label3 *invalid :printNumber*retval
        label *label20
   42:  assertprints "-1,234,567" "printNumber(-1234567)"
   43:  assertflush
   44:  set :printNumber:number 9009099
   45:  setaddr :printNumber*retaddr *label21
   46:  call *label3 *invalid :printNumber*retval
        label *label21
   47:  assertprints "9,009,099" "printNumber(9009099)"
   48:  assertflush
   49:  set :printBinaryNumber:number 0b1001
   50:  set :printBinaryNumber:digits 0
   51:  setaddr :printBinaryNumber*retaddr *label22
   52:  call *label4 *invalid :printBinaryNumber*retval
        label *label22
   53:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   54:  assertflush
   55:  set :printBinaryNumber:number 0b1010
   56:  set :printBinaryNumber:digits 6
   57:  setaddr :printBinaryNumber*retaddr *label23
   58:  call *label4 *invalid :printBinaryNumber*retval
        label *label23
   59:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   60:  assertflush
   61:  set :printHexNumber:number 0xABCDEF
   62:  set :printHexNumber:digits 0
   63:  setaddr :printHexNumber*retaddr *label24
   64:  call *label5 *invalid :printHexNumber*retval
        label *label24
   65:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
   66:  assertflush
   67:  set :printHexNumber:number 0x1234567890
   68:  set :printHexNumber:digits 0
   69:  setaddr :printHexNumber*retaddr *label25
   70:  call *label5 *invalid :printHexNumber*retval
        label *label25
   71:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
   72:  assertflush
   73:  set :printHexNumber:number 0xAABBCC
   74:  set :printHexNumber:digits 8
   75:  setaddr :printHexNumber*retaddr *label26
   76:  call *label5 *invalid :printHexNumber*retval
        label *label26
   77:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
   78:  assertflush
   79:  set :printExactFast:n null
   80:  setaddr :printExactFast*retaddr *label27
   81:  call *label6 *invalid :printExactFast*retval
        label *label27
   82:  assertprints "null" "printExactFast(null)"
   83:  assertflush
   84:  set :printExactFast:n 0
   85:  setaddr :printExactFast*retaddr *label28
   86:  call *label6 *invalid :printExactFast*retval
        label *label28
   87:  assertprints "0" "printExactFast(0)"
   88:  assertflush
   89:  set :printExactFast:n 1
   90:  setaddr :printExactFast*retaddr *label29
   91:  call *label6 *invalid :printExactFast*retval
        label *label29
   92:  assertprints "1" "printExactFast(1)"
   93:  assertflush
   94:  set :printExactFast:n 1.0000001
   95:  setaddr :printExactFast*retaddr *label30
   96:  call *label6 *invalid :printExactFast*retval
        label *label30
   97:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   98:  assertflush
   99:  set :printExactFast:n 3.00000007
  100:  setaddr :printExactFast*retaddr *label31
  101:  call *label6 *invalid :printExactFast*retval
        label *label31
  102:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  103:  assertflush
  104:  set :printExactFast:n 3E50
  105:  setaddr :printExactFast*retaddr *label32
  106:  call *label6 *invalid :printExactFast*retval
        label *label32
  107:  assertprints "3E50" "printExactFast(3e50)"
  108:  assertflush
  109:  set :printExactFast:n 1.0123456789
  110:  setaddr :printExactFast*retaddr *label33
  111:  call *label6 *invalid :printExactFast*retval
        label *label33
  112:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  113:  assertflush
  114:  set :printExactFast:n 10000001E13
  115:  setaddr :printExactFast*retaddr *label34
  116:  call *label6 *invalid :printExactFast*retval
        label *label34
  117:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  118:  assertflush
  119:  set :printExactFast:n 12345E-54
  120:  setaddr :printExactFast*retaddr *label35
  121:  call *label6 *invalid :printExactFast*retval
        label *label35
  122:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  123:  assertflush
  124:  set :printExactFast:n -12345E-54
  125:  setaddr :printExactFast*retaddr *label36
  126:  call *label6 *invalid :printExactFast*retval
        label *label36
  127:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  128:  assertflush
  129:  set :printExactSlow:n null
  130:  setaddr :printExactSlow*retaddr *label37
  131:  call *label7 *invalid :printExactSlow*retval
        label *label37
  132:  assertprints "null" "printExactSlow(null)"
  133:  assertflush
  134:  set :printExactSlow:n 0
  135:  setaddr :printExactSlow*retaddr *label38
  136:  call *label7 *invalid :printExactSlow*retval
        label *label38
  137:  assertprints "0" "printExactSlow(0)"
  138:  assertflush
  139:  set :printExactSlow:n 1
  140:  setaddr :printExactSlow*retaddr *label39
  141:  call *label7 *invalid :printExactSlow*retval
        label *label39
  142:  assertprints "1.000000000000000" "printExactSlow(1)"
  143:  assertflush
  144:  set :printExactSlow:n 1.0000001
  145:  setaddr :printExactSlow*retaddr *label40
  146:  call *label7 *invalid :printExactSlow*retval
        label *label40
  147:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  148:  assertflush
  149:  set :printExactSlow:n 3.00000007
  150:  setaddr :printExactSlow*retaddr *label41
  151:  call *label7 *invalid :printExactSlow*retval
        label *label41
  152:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  153:  assertflush
  154:  set :printExactSlow:n 3E50
  155:  setaddr :printExactSlow*retaddr *label42
  156:  call *label7 *invalid :printExactSlow*retval
        label *label42
  157:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  158:  assertflush
  159:  set :printExactSlow:n 1.0123456789
  160:  setaddr :printExactSlow*retaddr *label43
  161:  call *label7 *invalid :printExactSlow*retval
        label *label43
  162:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  163:  assertflush
  164:  set :printExactSlow:n 10000001E13
  165:  setaddr :printExactSlow*retaddr *label44
  166:  call *label7 *invalid :printExactSlow*retval
        label *label44
  167:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  168:  assertflush
  169:  set :printExactSlow:n 12345E-54
  170:  setaddr :printExactSlow*retaddr *label45
  171:  call *label7 *invalid :printExactSlow*retval
        label *label45
  172:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  173:  assertflush
  174:  set :printExactSlow:n -12345E-54
  175:  setaddr :printExactSlow*retaddr *label46
  176:  call *label7 *invalid :printExactSlow*retval
        label *label46
  177:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  178:  stop
  179:  end
        label *label3
  180:  print "{2}"
  181:  set :formatNumber:number :printNumber:number
  182:  op abs *tmp1 :formatNumber:number 0
  183:  op floor *tmp2 *tmp1 0
  184:  set :formatNumber:n *tmp2
  185:  op lessThan *tmp3 :formatNumber:number 0
  186:  jump *label49 equal *tmp3 false
  187:  format "-{2}"
  188:  set *tmp4 "-{2}"
  189:  jump *label50 always 0 0
        label *label49
  190:  set *tmp4 null
        label *label50
        label *label51
  191:  op greaterThan *tmp5 :formatNumber:n 999
  192:  jump *label53 equal *tmp5 false
  193:  op mod *tmp6 :formatNumber:n 1000
  194:  set :formatNumber:mod *tmp6
  195:  op lessThan *tmp7 :formatNumber:mod 10
  196:  jump *label54 equal *tmp7 false
  197:  set *tmp8 "{2},00{1}"
  198:  jump *label55 always 0 0
        label *label54
  199:  op lessThan *tmp9 :formatNumber:mod 100
  200:  jump *label56 equal *tmp9 false
  201:  set *tmp10 "{2},0{1}"
  202:  jump *label57 always 0 0
        label *label56
  203:  set *tmp10 "{2},{1}"
        label *label57
  204:  set *tmp8 *tmp10
        label *label55
  205:  format *tmp8
  206:  format :formatNumber:mod
  207:  op idiv :formatNumber:n :formatNumber:n 1000
        label *label52
  208:  jump *label51 always 0 0
        label *label53
  209:  format :formatNumber:n
        label *label48
        label *label47
  210:  return :printNumber*retaddr
  211:  end
        label *label4
  212:  print "{2}"
  213:  set :formatBinaryNumber:number :printBinaryNumber:number
  214:  set :formatBinaryNumber:digits :printBinaryNumber:digits
  215:  op floor *tmp11 :formatBinaryNumber:number 0
  216:  set :formatBinaryNumber:n *tmp11
        label *label60
  217:  op and *tmp12 :formatBinaryNumber:n 1
  218:  format "{2}{1}"
  219:  format *tmp12
  220:  op shr :formatBinaryNumber:n :formatBinaryNumber:n 1
  221:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
        label *label61
  222:  op greaterThan *tmp13 :formatBinaryNumber:n 0
  223:  jump *label60 notEqual *tmp13 false
        label *label62
        label *label63
  224:  op greaterThan *tmp14 :formatBinaryNumber:digits 0
  225:  jump *label65 equal *tmp14 false
  226:  format "{2}0"
  227:  set *tmp15 :formatBinaryNumber:digits
  228:  op sub :formatBinaryNumber:digits :formatBinaryNumber:digits 1
        label *label64
  229:  jump *label63 always 0 0
        label *label65
  230:  format "0b"
        label *label59
        label *label58
  231:  return :printBinaryNumber*retaddr
  232:  end
        label *label5
  233:  print "{2}"
  234:  set :formatHexNumber:number :printHexNumber:number
  235:  set :formatHexNumber:digits :printHexNumber:digits
  236:  op floor *tmp16 :formatHexNumber:number 0
  237:  set :formatHexNumber:n *tmp16
        label *label68
  238:  op mod *tmp17 :formatHexNumber:n 16
  239:  set :formatHexNumber:digit *tmp17
  240:  set *tmp19 :formatHexNumber:digit
  241:  jump *label74 lessThan *tmp19 0
  242:  jump *label73 lessThanEq *tmp19 9
        label *label74
  243:  jump *label72 always 0 0
        label *label73
  244:  format "{2}{1}"
  245:  format :formatHexNumber:digit
  246:  set *tmp18 :formatHexNumber:digit
  247:  jump *label71 always 0 0
        label *label72
  248:  jump *label76 equal *tmp19 10
  249:  jump *label75 always 0 0
        label *label76
  250:  format "{2}A"
  251:  set *tmp18 "{2}A"
  252:  jump *label71 always 0 0
        label *label75
  253:  jump *label78 equal *tmp19 11
  254:  jump *label77 always 0 0
        label *label78
  255:  format "{2}B"
  256:  set *tmp18 "{2}B"
  257:  jump *label71 always 0 0
        label *label77
  258:  jump *label80 equal *tmp19 12
  259:  jump *label79 always 0 0
        label *label80
  260:  format "{2}C"
  261:  set *tmp18 "{2}C"
  262:  jump *label71 always 0 0
        label *label79
  263:  jump *label82 equal *tmp19 13
  264:  jump *label81 always 0 0
        label *label82
  265:  format "{2}D"
  266:  set *tmp18 "{2}D"
  267:  jump *label71 always 0 0
        label *label81
  268:  jump *label84 equal *tmp19 14
  269:  jump *label83 always 0 0
        label *label84
  270:  format "{2}E"
  271:  set *tmp18 "{2}E"
  272:  jump *label71 always 0 0
        label *label83
  273:  jump *label86 equal *tmp19 15
  274:  jump *label85 always 0 0
        label *label86
  275:  format "{2}F"
  276:  set *tmp18 "{2}F"
  277:  jump *label71 always 0 0
        label *label85
  278:  set *tmp18 null
        label *label71
  279:  op shr :formatHexNumber:n :formatHexNumber:n 4
  280:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
        label *label69
  281:  op greaterThan *tmp20 :formatHexNumber:n 0
  282:  jump *label68 notEqual *tmp20 false
        label *label70
        label *label87
  283:  op greaterThan *tmp21 :formatHexNumber:digits 0
  284:  jump *label89 equal *tmp21 false
  285:  format "{2}0"
  286:  set *tmp22 :formatHexNumber:digits
  287:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
        label *label88
  288:  jump *label87 always 0 0
        label *label89
  289:  format "0x"
        label *label67
        label *label66
  290:  return :printHexNumber*retaddr
  291:  end
        label *label6
  292:  set :isZero:x :printExactFast:n
  293:  op abs *tmp24 :isZero:x 0
  294:  op lessThanEq *tmp25 *tmp24 0
  295:  set *tmp23 *tmp25
        label *label91
  296:  jump *label92 equal *tmp23 false
  297:  print :printExactFast:n
  298:  set *tmp26 :printExactFast:n
  299:  jump *label93 always 0 0
        label *label92
  300:  op lessThan *tmp27 :printExactFast:n 0
  301:  jump *label94 equal *tmp27 false
  302:  print "-"
  303:  op abs *tmp29 :printExactFast:n 0
  304:  set :printExactFast:n *tmp29
  305:  set *tmp28 :printExactFast:n
  306:  jump *label95 always 0 0
        label *label94
  307:  set *tmp28 null
        label *label95
  308:  op log10 *tmp30 :printExactFast:n 0
  309:  op floor *tmp31 *tmp30 0
  310:  set :printExactFast:exp *tmp31
  311:  op sub *tmp32 0 :printExactFast:exp
  312:  op pow *tmp33 10 *tmp32
  313:  op mul *tmp34 :printExactFast:n *tmp33
  314:  set :printExactFast:base *tmp34
  315:  set :round:x :printExactFast:base
  316:  op add *tmp36 :round:x 0.5
  317:  op floor *tmp37 *tmp36 0
  318:  set *tmp35 *tmp37
        label *label96
  319:  op sub *tmp38 :printExactFast:base *tmp35
  320:  op abs *tmp39 *tmp38 0
  321:  set :printExactFast:cmp *tmp39
  322:  op lessThanEq *tmp40 :printExactFast:cmp 0
  323:  jump *label97 equal *tmp40 false
  324:  print :printExactFast:base
  325:  set *tmp41 :printExactFast:base
  326:  jump *label98 always 0 0
        label *label97
  327:  op greaterThan *tmp42 :printExactFast:cmp 0.00001
  328:  jump *label99 equal *tmp42 false
  329:  print :printExactFast:base
  330:  set *tmp43 :printExactFast:base
  331:  jump *label100 always 0 0
        label *label99
  332:  op floor *tmp44 :printExactFast:base 0
  333:  print *tmp44
  334:  print "."
  335:  set :printExactFast:digit 1
        label *label101
  336:  jump *label103 greaterThan :printExactFast:digit 3
  337:  set :frac:x :printExactFast:base
  338:  op mod *tmp46 :frac:x 1
  339:  set *tmp45 *tmp46
        label *label104
  340:  op mul *tmp47 *tmp45 100000
  341:  set :printExactFast:base *tmp47
  342:  op floor *tmp48 :printExactFast:base 0
  343:  set :printExactFast:t *tmp48
  344:  op lessThan *tmp49 :printExactFast:t 10
  345:  jump *label105 equal *tmp49 false
  346:  print "0000"
  347:  set *tmp50 "0000"
  348:  jump *label106 always 0 0
        label *label105
  349:  op lessThan *tmp51 :printExactFast:t 100
  350:  jump *label107 equal *tmp51 false
  351:  print "000"
  352:  set *tmp52 "000"
  353:  jump *label108 always 0 0
        label *label107
  354:  op lessThan *tmp53 :printExactFast:t 1000
  355:  jump *label109 equal *tmp53 false
  356:  print "00"
  357:  set *tmp54 "00"
  358:  jump *label110 always 0 0
        label *label109
  359:  op lessThan *tmp55 :printExactFast:t 10000
  360:  jump *label111 equal *tmp55 false
  361:  print "0"
  362:  set *tmp56 "0"
  363:  jump *label112 always 0 0
        label *label111
  364:  set *tmp56 null
        label *label112
  365:  set *tmp54 *tmp56
        label *label110
  366:  set *tmp52 *tmp54
        label *label108
  367:  set *tmp50 *tmp52
        label *label106
  368:  print :printExactFast:t
        label *label102
  369:  op add :printExactFast:digit :printExactFast:digit 1
  370:  jump *label101 always 0 0
        label *label103
  371:  set *tmp43 null
        label *label100
  372:  set *tmp41 *tmp43
        label *label98
  373:  op notEqual *tmp57 :printExactFast:exp 0
  374:  jump *label113 equal *tmp57 false
  375:  print "E"
  376:  print :printExactFast:exp
  377:  set *tmp58 :printExactFast:exp
  378:  jump *label114 always 0 0
        label *label113
  379:  set *tmp58 null
        label *label114
  380:  set *tmp26 *tmp58
        label *label93
        label *label90
  381:  return :printExactFast*retaddr
  382:  end
        label *label7
  383:  set :isZero.1:x :printExactSlow:n
  384:  op abs *tmp60 :isZero.1:x 0
  385:  op lessThanEq *tmp61 *tmp60 0
  386:  set *tmp59 *tmp61
        label *label116
  387:  jump *label117 equal *tmp59 false
  388:  print :printExactSlow:n
  389:  set *tmp62 :printExactSlow:n
  390:  jump *label118 always 0 0
        label *label117
  391:  op lessThan *tmp63 :printExactSlow:n 0
  392:  jump *label119 equal *tmp63 false
  393:  print "-"
  394:  op abs *tmp65 :printExactSlow:n 0
  395:  set :printExactSlow:n *tmp65
  396:  set *tmp64 :printExactSlow:n
  397:  jump *label120 always 0 0
        label *label119
  398:  set *tmp64 null
        label *label120
  399:  op log10 *tmp66 :printExactSlow:n 0
  400:  op floor *tmp67 *tmp66 0
  401:  set :printExactSlow:exp *tmp67
  402:  op sub *tmp68 0 :printExactSlow:exp
  403:  op pow *tmp69 10 *tmp68
  404:  op mul *tmp70 :printExactSlow:n *tmp69
  405:  set :printExactSlow:base *tmp70
  406:  op floor *tmp71 :printExactSlow:base 0
  407:  print *tmp71
  408:  print "."
  409:  set :printExactSlow:digit 1
        label *label121
  410:  jump *label123 greaterThan :printExactSlow:digit 15
  411:  set :frac.1:x :printExactSlow:base
  412:  op mod *tmp73 :frac.1:x 1
  413:  set *tmp72 *tmp73
        label *label124
  414:  op mul *tmp74 *tmp72 10
  415:  set :printExactSlow:base *tmp74
  416:  op floor *tmp75 :printExactSlow:base 0
  417:  print *tmp75
        label *label122
  418:  op add :printExactSlow:digit :printExactSlow:digit 1
  419:  jump *label121 always 0 0
        label *label123
  420:  op notEqual *tmp76 :printExactSlow:exp 0
  421:  jump *label125 equal *tmp76 false
  422:  print "E"
  423:  print :printExactSlow:exp
  424:  set *tmp77 :printExactSlow:exp
  425:  jump *label126 always 0 0
        label *label125
  426:  set *tmp77 null
        label *label126
  427:  set *tmp62 *tmp77
        label *label118
        label *label115
  428:  return :printExactSlow*retaddr
  429:  end


stop instruction encountered, dumping variable values:
*tmp0: 12.0
*tmp1: 9009099.0
*tmp10: {2},0{1}
*tmp11: 10.0
*tmp12: 1.0
*tmp13: 0.0
*tmp14: 0.0
*tmp15: 1.0
*tmp16: 1.1189196E7
*tmp17: 10.0
*tmp18: {2}A
*tmp19: 10.0
*tmp2: 9009099.0
*tmp20: 0.0
*tmp21: 0.0
*tmp22: 1.0
*tmp23: 0.0
*tmp24: 1.2345E-50
*tmp25: 0.0
*tmp26: -50.0
*tmp27: 1.0
*tmp28: 1.2345E-50
*tmp29: 1.2345E-50
*tmp3: 0.0
*tmp30: -49.90850890573205
*tmp31: -50.0
*tmp32: 50.0
*tmp33: 1.0E50
*tmp34: 1.2345000000000002
*tmp35: 1.0
*tmp36: 1.7345000000000002
*tmp37: 1.0
*tmp38: 0.23450000000000015
*tmp39: 0.23450000000000015
*tmp4: null
*tmp40: 0.0
*tmp41: 1.2345000000000002
*tmp42: 1.0
*tmp43: 1.2345000000000002
*tmp44: 1.0
*tmp45: 0.9999983634211276
*tmp46: 0.9999983634211276
*tmp47: 99999.83634211276
*tmp48: 99999.0
*tmp49: 0.0
*tmp5: 0.0
*tmp50: null
*tmp51: 0.0
*tmp52: null
*tmp53: 0.0
*tmp54: null
*tmp55: 0.0
*tmp56: null
*tmp57: 1.0
*tmp58: -50.0
*tmp59: 0.0
*tmp6: 9.0
*tmp60: 1.2345E-50
*tmp61: 0.0
*tmp62: -50.0
*tmp63: 1.0
*tmp64: 1.2345E-50
*tmp65: 1.2345E-50
*tmp66: -49.90850890573205
*tmp67: -50.0
*tmp68: 50.0
*tmp69: 1.0E50
*tmp7: 1.0
*tmp70: 1.2345000000000002
*tmp71: 1.0
*tmp72: 0.015276668818842154
*tmp73: 0.015276668818842154
*tmp74: 0.15276668818842154
*tmp75: 0.0
*tmp76: 1.0
*tmp77: -50.0
*tmp8: {2},00{1}
*tmp9: 1.0
:formatBinaryNumber:digits: 0.0
:formatBinaryNumber:n: 0.0
:formatBinaryNumber:number: 10.0
:formatHexNumber:digit: 10.0
:formatHexNumber:digits: 0.0
:formatHexNumber:n: 0.0
:formatHexNumber:number: 1.1189196E7
:formatNumber:mod: 9.0
:formatNumber:n: 9.0
:formatNumber:number: 9009099.0
:frac.1:x: 0.015276668818842154
:frac:x: 999.9999983634211
:isZero.1:x: -1.2345E-50
:isZero:x: -1.2345E-50
:printBinaryNumber*retaddr: 59.0
:printBinaryNumber:digits: 6.0
:printBinaryNumber:number: 10.0
:printExactFast*retaddr: 127.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:digit: 4.0
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactSlow*retaddr: 177.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:digit: 16.0
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
:printHexNumber*retaddr: 77.0
:printHexNumber:digits: 8.0
:printHexNumber:number: 1.1189196E7
:printLines:line: 3.0
:printNumber*retaddr: 47.0
:printNumber:number: 9009099.0
:round:x: 1.2345000000000002
@counter: 179.0