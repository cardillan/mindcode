
Final code before resolving virtual instructions:

    0:  assertflush
    1:  set :printNumber.0:number null
    2:  setaddr :printNumber.0*retaddr *label8
    3:  call *label3 *invalid :printNumber.0*retval
        label *label8
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  set :printNumber.0:number 1
    7:  setaddr :printNumber.0*retaddr *label9
    8:  call *label3 *invalid :printNumber.0*retval
        label *label9
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  set :printNumber.0:number 1.5
   12:  setaddr :printNumber.0*retaddr *label10
   13:  call *label3 *invalid :printNumber.0*retval
        label *label10
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  set :printNumber.0:number -1.5
   17:  setaddr :printNumber.0*retaddr *label11
   18:  call *label3 *invalid :printNumber.0*retval
        label *label11
   19:  assertprints "-1" "printNumber(-1.5)"
   20:  assertflush
   21:  set :printNumber.0:number 1234567
   22:  setaddr :printNumber.0*retaddr *label12
   23:  call *label3 *invalid :printNumber.0*retval
        label *label12
   24:  assertprints "1,234,567" "printNumber(1234567)"
   25:  assertflush
   26:  set :printNumber.0:number -1234567
   27:  setaddr :printNumber.0*retaddr *label13
   28:  call *label3 *invalid :printNumber.0*retval
        label *label13
   29:  assertprints "-1,234,567" "printNumber(-1234567)"
   30:  assertflush
   31:  set :printNumber.0:number 9009099
   32:  setaddr :printNumber.0*retaddr *label14
   33:  call *label3 *invalid :printNumber.0*retval
        label *label14
   34:  assertprints "9,009,099" "printNumber(9009099)"
   35:  assertflush
   36:  set :printBinaryNumber.0:number 0b1001
   37:  set :printBinaryNumber.0:digits 0
   38:  setaddr :printBinaryNumber.0*retaddr *label15
   39:  call *label4 *invalid :printBinaryNumber.0*retval
        label *label15
   40:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   41:  assertflush
   42:  set :printBinaryNumber.0:number 0b1010
   43:  set :printBinaryNumber.0:digits 6
   44:  setaddr :printBinaryNumber.0*retaddr *label16
   45:  call *label4 *invalid :printBinaryNumber.0*retval
        label *label16
   46:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   47:  assertflush
   48:  set :printHexNumber.0:number 0xABCDEF
   49:  set :printHexNumber.0:digits 0
   50:  setaddr :printHexNumber.0*retaddr *label17
   51:  call *label5 *invalid :printHexNumber.0*retval
        label *label17
   52:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
   53:  assertflush
   54:  set :printHexNumber.0:number 0x1234567890
   55:  set :printHexNumber.0:digits 0
   56:  setaddr :printHexNumber.0*retaddr *label18
   57:  call *label5 *invalid :printHexNumber.0*retval
        label *label18
   58:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
   59:  assertflush
   60:  set :printHexNumber.0:number 0xAABBCC
   61:  set :printHexNumber.0:digits 8
   62:  setaddr :printHexNumber.0*retaddr *label19
   63:  call *label5 *invalid :printHexNumber.0*retval
        label *label19
   64:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
   65:  assertflush
   66:  set :printExactFast.0:n null
   67:  setaddr :printExactFast.0*retaddr *label20
   68:  call *label6 *invalid :printExactFast.0*retval
        label *label20
   69:  assertprints "null" "printExactFast(null)"
   70:  assertflush
   71:  set :printExactFast.0:n 0
   72:  setaddr :printExactFast.0*retaddr *label21
   73:  call *label6 *invalid :printExactFast.0*retval
        label *label21
   74:  assertprints "0" "printExactFast(0)"
   75:  assertflush
   76:  set :printExactFast.0:n 1
   77:  setaddr :printExactFast.0*retaddr *label22
   78:  call *label6 *invalid :printExactFast.0*retval
        label *label22
   79:  assertprints "1" "printExactFast(1)"
   80:  assertflush
   81:  set :printExactFast.0:n 1.0000001
   82:  setaddr :printExactFast.0*retaddr *label23
   83:  call *label6 *invalid :printExactFast.0*retval
        label *label23
   84:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   85:  assertflush
   86:  set :printExactFast.0:n 3.00000007
   87:  setaddr :printExactFast.0*retaddr *label24
   88:  call *label6 *invalid :printExactFast.0*retval
        label *label24
   89:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
   90:  assertflush
   91:  set :printExactFast.0:n 3E50
   92:  setaddr :printExactFast.0*retaddr *label25
   93:  call *label6 *invalid :printExactFast.0*retval
        label *label25
   94:  assertprints "3E50" "printExactFast(3e50)"
   95:  assertflush
   96:  set :printExactFast.0:n 1.0123456789
   97:  setaddr :printExactFast.0*retaddr *label26
   98:  call *label6 *invalid :printExactFast.0*retval
        label *label26
   99:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  100:  assertflush
  101:  set :printExactFast.0:n 10000001E13
  102:  setaddr :printExactFast.0*retaddr *label27
  103:  call *label6 *invalid :printExactFast.0*retval
        label *label27
  104:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  105:  assertflush
  106:  set :printExactFast.0:n 12345E-54
  107:  setaddr :printExactFast.0*retaddr *label28
  108:  call *label6 *invalid :printExactFast.0*retval
        label *label28
  109:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  110:  assertflush
  111:  set :printExactFast.0:n -12345E-54
  112:  setaddr :printExactFast.0*retaddr *label29
  113:  call *label6 *invalid :printExactFast.0*retval
        label *label29
  114:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  115:  assertflush
  116:  set :printExactSlow.0:n null
  117:  setaddr :printExactSlow.0*retaddr *label30
  118:  call *label7 *invalid :printExactSlow.0*retval
        label *label30
  119:  assertprints "null" "printExactSlow(null)"
  120:  assertflush
  121:  set :printExactSlow.0:n 0
  122:  setaddr :printExactSlow.0*retaddr *label31
  123:  call *label7 *invalid :printExactSlow.0*retval
        label *label31
  124:  assertprints "0" "printExactSlow(0)"
  125:  assertflush
  126:  set :printExactSlow.0:n 1
  127:  setaddr :printExactSlow.0*retaddr *label32
  128:  call *label7 *invalid :printExactSlow.0*retval
        label *label32
  129:  assertprints "1.000000000000000" "printExactSlow(1)"
  130:  assertflush
  131:  set :printExactSlow.0:n 1.0000001
  132:  setaddr :printExactSlow.0*retaddr *label33
  133:  call *label7 *invalid :printExactSlow.0*retval
        label *label33
  134:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  135:  assertflush
  136:  set :printExactSlow.0:n 3.00000007
  137:  setaddr :printExactSlow.0*retaddr *label34
  138:  call *label7 *invalid :printExactSlow.0*retval
        label *label34
  139:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  140:  assertflush
  141:  set :printExactSlow.0:n 3E50
  142:  setaddr :printExactSlow.0*retaddr *label35
  143:  call *label7 *invalid :printExactSlow.0*retval
        label *label35
  144:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  145:  assertflush
  146:  set :printExactSlow.0:n 1.0123456789
  147:  setaddr :printExactSlow.0*retaddr *label36
  148:  call *label7 *invalid :printExactSlow.0*retval
        label *label36
  149:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  150:  assertflush
  151:  set :printExactSlow.0:n 10000001E13
  152:  setaddr :printExactSlow.0*retaddr *label37
  153:  call *label7 *invalid :printExactSlow.0*retval
        label *label37
  154:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  155:  assertflush
  156:  set :printExactSlow.0:n 12345E-54
  157:  setaddr :printExactSlow.0*retaddr *label38
  158:  call *label7 *invalid :printExactSlow.0*retval
        label *label38
  159:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  160:  assertflush
  161:  set :printExactSlow.0:n -12345E-54
  162:  setaddr :printExactSlow.0*retaddr *label39
  163:  call *label7 *invalid :printExactSlow.0*retval
        label *label39
  164:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  165:  stop
  166:  end
        label *label3
  167:  print "{2}"
  168:  set :formatNumber.0:number :printNumber.0:number
  169:  op abs *tmp0 :formatNumber.0:number 0
  170:  op floor *tmp1 *tmp0 0
  171:  set :formatNumber.0:n *tmp1
  172:  op lessThan *tmp2 :formatNumber.0:number 0
  173:  jump *label42 equal *tmp2 false
  174:  format "-{2}"
  175:  set *tmp3 "-{2}"
  176:  jump *label43 always 0 0
        label *label42
  177:  set *tmp3 null
        label *label43
        label *label44
  178:  op greaterThan *tmp4 :formatNumber.0:n 999
  179:  jump *label46 equal *tmp4 false
  180:  op mod *tmp5 :formatNumber.0:n 1000
  181:  set :formatNumber.0:mod *tmp5
  182:  op lessThan *tmp6 :formatNumber.0:mod 10
  183:  jump *label47 equal *tmp6 false
  184:  set *tmp7 "{2},00{1}"
  185:  jump *label48 always 0 0
        label *label47
  186:  op lessThan *tmp8 :formatNumber.0:mod 100
  187:  jump *label49 equal *tmp8 false
  188:  set *tmp9 "{2},0{1}"
  189:  jump *label50 always 0 0
        label *label49
  190:  set *tmp9 "{2},{1}"
        label *label50
  191:  set *tmp7 *tmp9
        label *label48
  192:  format *tmp7
  193:  format :formatNumber.0:mod
  194:  op idiv :formatNumber.0:n :formatNumber.0:n 1000
        label *label45
  195:  jump *label44 always 0 0
        label *label46
  196:  format :formatNumber.0:n
        label *label41
        label *label40
  197:  return :printNumber.0*retaddr
  198:  end
        label *label4
  199:  print "{2}"
  200:  set :formatBinaryNumber.0:number :printBinaryNumber.0:number
  201:  set :formatBinaryNumber.0:digits :printBinaryNumber.0:digits
  202:  op floor *tmp10 :formatBinaryNumber.0:number 0
  203:  set :formatBinaryNumber.0:n *tmp10
        label *label53
  204:  op and *tmp11 :formatBinaryNumber.0:n 1
  205:  format "{2}{1}"
  206:  format *tmp11
  207:  op shr :formatBinaryNumber.0:n :formatBinaryNumber.0:n 1
  208:  op sub :formatBinaryNumber.0:digits :formatBinaryNumber.0:digits 1
        label *label54
  209:  op greaterThan *tmp12 :formatBinaryNumber.0:n 0
  210:  jump *label53 notEqual *tmp12 false
        label *label55
        label *label56
  211:  op greaterThan *tmp13 :formatBinaryNumber.0:digits 0
  212:  jump *label58 equal *tmp13 false
  213:  format "{2}0"
  214:  set *tmp14 :formatBinaryNumber.0:digits
  215:  op sub :formatBinaryNumber.0:digits :formatBinaryNumber.0:digits 1
        label *label57
  216:  jump *label56 always 0 0
        label *label58
  217:  format "0b"
        label *label52
        label *label51
  218:  return :printBinaryNumber.0*retaddr
  219:  end
        label *label5
  220:  print "{2}"
  221:  set :formatHexNumber.0:number :printHexNumber.0:number
  222:  set :formatHexNumber.0:digits :printHexNumber.0:digits
  223:  op floor *tmp15 :formatHexNumber.0:number 0
  224:  set :formatHexNumber.0:n *tmp15
        label *label61
  225:  op mod *tmp16 :formatHexNumber.0:n 16
  226:  set :formatHexNumber.0:digit *tmp16
  227:  set *tmp18 :formatHexNumber.0:digit
  228:  jump *label67 lessThan *tmp18 0
  229:  jump *label66 lessThanEq *tmp18 9
        label *label67
  230:  jump *label65 always 0 0
        label *label66
  231:  format "{2}{1}"
  232:  format :formatHexNumber.0:digit
  233:  set *tmp17 :formatHexNumber.0:digit
  234:  jump *label64 always 0 0
        label *label65
  235:  jump *label69 equal *tmp18 10
  236:  jump *label68 always 0 0
        label *label69
  237:  format "{2}A"
  238:  set *tmp17 "{2}A"
  239:  jump *label64 always 0 0
        label *label68
  240:  jump *label71 equal *tmp18 11
  241:  jump *label70 always 0 0
        label *label71
  242:  format "{2}B"
  243:  set *tmp17 "{2}B"
  244:  jump *label64 always 0 0
        label *label70
  245:  jump *label73 equal *tmp18 12
  246:  jump *label72 always 0 0
        label *label73
  247:  format "{2}C"
  248:  set *tmp17 "{2}C"
  249:  jump *label64 always 0 0
        label *label72
  250:  jump *label75 equal *tmp18 13
  251:  jump *label74 always 0 0
        label *label75
  252:  format "{2}D"
  253:  set *tmp17 "{2}D"
  254:  jump *label64 always 0 0
        label *label74
  255:  jump *label77 equal *tmp18 14
  256:  jump *label76 always 0 0
        label *label77
  257:  format "{2}E"
  258:  set *tmp17 "{2}E"
  259:  jump *label64 always 0 0
        label *label76
  260:  jump *label79 equal *tmp18 15
  261:  jump *label78 always 0 0
        label *label79
  262:  format "{2}F"
  263:  set *tmp17 "{2}F"
  264:  jump *label64 always 0 0
        label *label78
  265:  set *tmp17 null
        label *label64
  266:  op shr :formatHexNumber.0:n :formatHexNumber.0:n 4
  267:  op sub :formatHexNumber.0:digits :formatHexNumber.0:digits 1
        label *label62
  268:  op greaterThan *tmp19 :formatHexNumber.0:n 0
  269:  jump *label61 notEqual *tmp19 false
        label *label63
        label *label80
  270:  op greaterThan *tmp20 :formatHexNumber.0:digits 0
  271:  jump *label82 equal *tmp20 false
  272:  format "{2}0"
  273:  set *tmp21 :formatHexNumber.0:digits
  274:  op sub :formatHexNumber.0:digits :formatHexNumber.0:digits 1
        label *label81
  275:  jump *label80 always 0 0
        label *label82
  276:  format "0x"
        label *label60
        label *label59
  277:  return :printHexNumber.0*retaddr
  278:  end
        label *label6
  279:  set :isZero.0:x :printExactFast.0:n
  280:  op abs *tmp23 :isZero.0:x 0
  281:  op lessThanEq *tmp24 *tmp23 0
  282:  set *tmp22 *tmp24
        label *label84
  283:  jump *label85 equal *tmp22 false
  284:  print :printExactFast.0:n
  285:  set *tmp25 :printExactFast.0:n
  286:  jump *label86 always 0 0
        label *label85
  287:  op lessThan *tmp26 :printExactFast.0:n 0
  288:  jump *label87 equal *tmp26 false
  289:  print "-"
  290:  op abs *tmp28 :printExactFast.0:n 0
  291:  set :printExactFast.0:n *tmp28
  292:  set *tmp27 :printExactFast.0:n
  293:  jump *label88 always 0 0
        label *label87
  294:  set *tmp27 null
        label *label88
  295:  op log10 *tmp29 :printExactFast.0:n 0
  296:  op floor *tmp30 *tmp29 0
  297:  set :printExactFast.0:exp *tmp30
  298:  op sub *tmp31 0 :printExactFast.0:exp
  299:  op pow *tmp32 10 *tmp31
  300:  op mul *tmp33 :printExactFast.0:n *tmp32
  301:  set :printExactFast.0:base *tmp33
  302:  set :round.0:x :printExactFast.0:base
  303:  op add *tmp35 :round.0:x 0.5
  304:  op floor *tmp36 *tmp35 0
  305:  set *tmp34 *tmp36
        label *label89
  306:  op sub *tmp37 :printExactFast.0:base *tmp34
  307:  op abs *tmp38 *tmp37 0
  308:  set :printExactFast.0:cmp *tmp38
  309:  op lessThanEq *tmp39 :printExactFast.0:cmp 0
  310:  jump *label90 equal *tmp39 false
  311:  print :printExactFast.0:base
  312:  set *tmp40 :printExactFast.0:base
  313:  jump *label91 always 0 0
        label *label90
  314:  op greaterThan *tmp41 :printExactFast.0:cmp 0.00001
  315:  jump *label92 equal *tmp41 false
  316:  print :printExactFast.0:base
  317:  set *tmp42 :printExactFast.0:base
  318:  jump *label93 always 0 0
        label *label92
  319:  op floor *tmp43 :printExactFast.0:base 0
  320:  print *tmp43
  321:  print "."
  322:  set :printExactFast.0:digit 1
        label *label94
  323:  jump *label96 greaterThan :printExactFast.0:digit 3
  324:  set :frac.0:x :printExactFast.0:base
  325:  op mod *tmp45 :frac.0:x 1
  326:  set *tmp44 *tmp45
        label *label97
  327:  op mul *tmp46 *tmp44 100000
  328:  set :printExactFast.0:base *tmp46
  329:  op floor *tmp47 :printExactFast.0:base 0
  330:  set :printExactFast.0:t *tmp47
  331:  op lessThan *tmp48 :printExactFast.0:t 10
  332:  jump *label98 equal *tmp48 false
  333:  print "0000"
  334:  set *tmp49 "0000"
  335:  jump *label99 always 0 0
        label *label98
  336:  op lessThan *tmp50 :printExactFast.0:t 100
  337:  jump *label100 equal *tmp50 false
  338:  print "000"
  339:  set *tmp51 "000"
  340:  jump *label101 always 0 0
        label *label100
  341:  op lessThan *tmp52 :printExactFast.0:t 1000
  342:  jump *label102 equal *tmp52 false
  343:  print "00"
  344:  set *tmp53 "00"
  345:  jump *label103 always 0 0
        label *label102
  346:  op lessThan *tmp54 :printExactFast.0:t 10000
  347:  jump *label104 equal *tmp54 false
  348:  print "0"
  349:  set *tmp55 "0"
  350:  jump *label105 always 0 0
        label *label104
  351:  set *tmp55 null
        label *label105
  352:  set *tmp53 *tmp55
        label *label103
  353:  set *tmp51 *tmp53
        label *label101
  354:  set *tmp49 *tmp51
        label *label99
  355:  print :printExactFast.0:t
        label *label95
  356:  op add :printExactFast.0:digit :printExactFast.0:digit 1
  357:  jump *label94 always 0 0
        label *label96
  358:  set *tmp42 null
        label *label93
  359:  set *tmp40 *tmp42
        label *label91
  360:  op notEqual *tmp56 :printExactFast.0:exp 0
  361:  jump *label106 equal *tmp56 false
  362:  print "E"
  363:  print :printExactFast.0:exp
  364:  set *tmp57 :printExactFast.0:exp
  365:  jump *label107 always 0 0
        label *label106
  366:  set *tmp57 null
        label *label107
  367:  set *tmp25 *tmp57
        label *label86
        label *label83
  368:  return :printExactFast.0*retaddr
  369:  end
        label *label7
  370:  set :isZero.1:x :printExactSlow.0:n
  371:  op abs *tmp59 :isZero.1:x 0
  372:  op lessThanEq *tmp60 *tmp59 0
  373:  set *tmp58 *tmp60
        label *label109
  374:  jump *label110 equal *tmp58 false
  375:  print :printExactSlow.0:n
  376:  set *tmp61 :printExactSlow.0:n
  377:  jump *label111 always 0 0
        label *label110
  378:  op lessThan *tmp62 :printExactSlow.0:n 0
  379:  jump *label112 equal *tmp62 false
  380:  print "-"
  381:  op abs *tmp64 :printExactSlow.0:n 0
  382:  set :printExactSlow.0:n *tmp64
  383:  set *tmp63 :printExactSlow.0:n
  384:  jump *label113 always 0 0
        label *label112
  385:  set *tmp63 null
        label *label113
  386:  op log10 *tmp65 :printExactSlow.0:n 0
  387:  op floor *tmp66 *tmp65 0
  388:  set :printExactSlow.0:exp *tmp66
  389:  op sub *tmp67 0 :printExactSlow.0:exp
  390:  op pow *tmp68 10 *tmp67
  391:  op mul *tmp69 :printExactSlow.0:n *tmp68
  392:  set :printExactSlow.0:base *tmp69
  393:  op floor *tmp70 :printExactSlow.0:base 0
  394:  print *tmp70
  395:  print "."
  396:  set :printExactSlow.0:digit 1
        label *label114
  397:  jump *label116 greaterThan :printExactSlow.0:digit 15
  398:  set :frac.1:x :printExactSlow.0:base
  399:  op mod *tmp72 :frac.1:x 1
  400:  set *tmp71 *tmp72
        label *label117
  401:  op mul *tmp73 *tmp71 10
  402:  set :printExactSlow.0:base *tmp73
  403:  op floor *tmp74 :printExactSlow.0:base 0
  404:  print *tmp74
        label *label115
  405:  op add :printExactSlow.0:digit :printExactSlow.0:digit 1
  406:  jump *label114 always 0 0
        label *label116
  407:  op notEqual *tmp75 :printExactSlow.0:exp 0
  408:  jump *label118 equal *tmp75 false
  409:  print "E"
  410:  print :printExactSlow.0:exp
  411:  set *tmp76 :printExactSlow.0:exp
  412:  jump *label119 always 0 0
        label *label118
  413:  set *tmp76 null
        label *label119
  414:  set *tmp61 *tmp76
        label *label111
        label *label108
  415:  return :printExactSlow.0*retaddr
  416:  end


stop instruction encountered, dumping variable values:
*tmp0: 9009099.0
*tmp1: 9009099.0
*tmp10: 10.0
*tmp11: 1.0
*tmp12: 0.0
*tmp13: 0.0
*tmp14: 1.0
*tmp15: 1.1189196E7
*tmp16: 10.0
*tmp17: {2}A
*tmp18: 10.0
*tmp19: 0.0
*tmp2: 0.0
*tmp20: 0.0
*tmp21: 1.0
*tmp22: 0.0
*tmp23: 1.2345E-50
*tmp24: 0.0
*tmp25: -50.0
*tmp26: 1.0
*tmp27: 1.2345E-50
*tmp28: 1.2345E-50
*tmp29: -49.90850890573205
*tmp3: null
*tmp30: -50.0
*tmp31: 50.0
*tmp32: 1.0E50
*tmp33: 1.2345000000000002
*tmp34: 1.0
*tmp35: 1.7345000000000002
*tmp36: 1.0
*tmp37: 0.23450000000000015
*tmp38: 0.23450000000000015
*tmp39: 0.0
*tmp4: 0.0
*tmp40: 1.2345000000000002
*tmp41: 1.0
*tmp42: 1.2345000000000002
*tmp43: 1.0
*tmp44: 0.9999983634211276
*tmp45: 0.9999983634211276
*tmp46: 99999.83634211276
*tmp47: 99999.0
*tmp48: 0.0
*tmp49: null
*tmp5: 9.0
*tmp50: 0.0
*tmp51: null
*tmp52: 0.0
*tmp53: null
*tmp54: 0.0
*tmp55: null
*tmp56: 1.0
*tmp57: -50.0
*tmp58: 0.0
*tmp59: 1.2345E-50
*tmp6: 1.0
*tmp60: 0.0
*tmp61: -50.0
*tmp62: 1.0
*tmp63: 1.2345E-50
*tmp64: 1.2345E-50
*tmp65: -49.90850890573205
*tmp66: -50.0
*tmp67: 50.0
*tmp68: 1.0E50
*tmp69: 1.2345000000000002
*tmp7: {2},00{1}
*tmp70: 1.0
*tmp71: 0.015276668818842154
*tmp72: 0.015276668818842154
*tmp73: 0.15276668818842154
*tmp74: 0.0
*tmp75: 1.0
*tmp76: -50.0
*tmp8: 1.0
*tmp9: {2},0{1}
:formatBinaryNumber.0:digits: 0.0
:formatBinaryNumber.0:n: 0.0
:formatBinaryNumber.0:number: 10.0
:formatHexNumber.0:digit: 10.0
:formatHexNumber.0:digits: 0.0
:formatHexNumber.0:n: 0.0
:formatHexNumber.0:number: 1.1189196E7
:formatNumber.0:mod: 9.0
:formatNumber.0:n: 9.0
:formatNumber.0:number: 9009099.0
:frac.0:x: 999.9999983634211
:frac.1:x: 0.015276668818842154
:isZero.0:x: -1.2345E-50
:isZero.1:x: -1.2345E-50
:printBinaryNumber.0*retaddr: 46.0
:printBinaryNumber.0:digits: 6.0
:printBinaryNumber.0:number: 10.0
:printExactFast.0*retaddr: 114.0
:printExactFast.0:base: 1.2345000000000002
:printExactFast.0:cmp: 0.23450000000000015
:printExactFast.0:digit: 4.0
:printExactFast.0:exp: -50.0
:printExactFast.0:n: 1.2345E-50
:printExactFast.0:t: 99999.0
:printExactSlow.0*retaddr: 164.0
:printExactSlow.0:base: 0.15276668818842154
:printExactSlow.0:digit: 16.0
:printExactSlow.0:exp: -50.0
:printExactSlow.0:n: 1.2345E-50
:printHexNumber.0*retaddr: 64.0
:printHexNumber.0:digits: 8.0
:printHexNumber.0:number: 1.1189196E7
:printNumber.0*retaddr: 34.0
:printNumber.0:number: 9009099.0
:round.0:x: 1.2345000000000002
@counter: 166.0