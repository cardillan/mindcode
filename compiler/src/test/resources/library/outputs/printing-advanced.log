Main file: number of reported ambiguities: 4
Active optimizations:
    case-expression-optimization = advanced,
    case-switching = advanced,
    data-flow-optimization = advanced,
    dead-code-elimination = advanced,
    expression-optimization = advanced,
    function-inlining = advanced,
    if-expression-optimization = advanced,
    jump-normalization = advanced,
    jump-optimization = advanced,
    jump-straightening = advanced,
    jump-threading = advanced,
    loop-hoisting = advanced,
    loop-optimization = advanced,
    loop-unrolling = advanced,
    print-merging = advanced,
    return-optimization = advanced,
    single-step-elimination = advanced,
    stack-optimization = advanced,
    temp-variables-elimination = advanced,
    unreachable-code-elimination = advanced

   307 instructions before optimizations.
    18 instructions eliminated by Temp Variables Elimination.
    26 instructions eliminated by Dead Code Elimination (6 iterations).
    29 instructions eliminated by Jump Normalization (4 iterations).
    16 instructions eliminated by Jump Optimization (4 iterations).
    56 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   191 instructions eliminated by Data Flow Optimization (14 passes, 44 iterations).
     2 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   124 instructions added by Loop Unrolling (16 iterations).
     5 loops unrolled by Loop Unrolling.
   803 instructions added by Function Inlining (16 iterations).
    18 function calls inlined by Function Inlining.
    35 instructions updated by JumpThreading.
   660 instructions eliminated by Unreachable Code Elimination.
    29 instructions eliminated by Print Merging.
   205 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 769):
    Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9
  * Loop Unrolling: unroll loop at line 153                      cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
    Function Inlining: inline function printExactSlow            cost   215, benefit       35.0, efficiency        0.2
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 11           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 12           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 13           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 14           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 15           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 16           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 17           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 18           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 19           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 20           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 21           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 22           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 23           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 24           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 25           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 26           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 27           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 28           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 29           cost    24, benefit        3.5, efficiency        0.1

Pass 1: speed optimization selection (cost limit 716):
  * Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
    Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 11           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 12           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 13           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 14           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 15           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 16           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 17           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 18           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 19           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 689):
  * Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
    Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 611):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-1 instructions)
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 612):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-1 instructions)
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 613):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-1 instructions)
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 614):
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0 (+70 instructions)
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 544):
  ! Function Inlining: inline function printExactFast            cost   575, benefit       31.5, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0 (+69 instructions)
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 475):
  ! Function Inlining: inline function printExactFast            cost   503, benefit       28.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0 (+69 instructions)
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 406):
  ! Function Inlining: inline function printExactFast            cost   431, benefit       24.5, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0 (+53 instructions)
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 353):
  ! Function Inlining: inline function printExactFast            cost   359, benefit       21.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0 (+50 instructions)
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 303):
  * Function Inlining: inline function printExactFast            cost   287, benefit       17.5, efficiency        0.1 (+201 instructions)
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 102):
  * Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0 (+75 instructions)
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 27):
  ! Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 66):
  ! Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 3: speed optimization selection (cost limit 66):
  ! Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor __fn6__n 0 0
    3:  format __fn6__n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor __fn6__n 1 0
    8:  format __fn6__n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor __fn6__n 1.5 0
   13:  format __fn6__n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor __fn6__n 1.5 0
   18:  format "-{2}"
   19:  format __fn6__n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  format "{2},{1}"
   24:  format 567
   25:  format "{2},{1}"
   26:  format 234
   27:  format 1
   28:  assertprints "1,234,567" "printNumber(1234567)"
   29:  assertflush
   30:  print "{2}"
   31:  format "-{2}"
   32:  format "{2},{1}"
   33:  format 567
   34:  format "{2},{1}"
   35:  format 234
   36:  format 1
   37:  assertprints "-1,234,567" "printNumber(-1234567)"
   38:  assertflush
   39:  print "{2}"
   40:  format "{2},0{1}"
   41:  format 99
   42:  format "{2},00{1}"
   43:  format 9
   44:  format 9
   45:  assertprints "9,009,099" "printNumber(9009099)"
   46:  assertflush
   47:  print null
   48:  assertprints "null" "printExactFast(null)"
   49:  assertflush
   50:  print 0
   51:  assertprints "0" "printExactFast(0)"
   52:  assertflush
   53:  print 1
   54:  assertprints "1" "printExactFast(1)"
   55:  assertflush
   56:  print "1.000000100000000"
   57:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   58:  assertflush
   59:  print "3.000000070000000"
   60:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
   61:  assertflush
   62:  print "3E50"
   63:  assertprints "3E50" "printExactFast(3e50)"
   64:  assertflush
   65:  print 1.0123456789
   66:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
   67:  assertflush
   68:  print "1.000000099999999E20"
   69:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
   70:  assertflush
   71:  print "1.2345000000000002E-50"
   72:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
   73:  assertflush
   74:  print "-1.2345000000000002E-50"
   75:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
   76:  assertflush
   77:  op abs __tmp48 null 0
   78:  print null
   79:  assertprints "null" "printExactSlow(null)"
   80:  assertflush
   81:  set __fn5__n 0
   82:  setaddr __fn5retaddr __label24
   83:  call __label5 __fn5retval
        gotolabel __label24 __fn5
   84:  assertprints "0" "printExactSlow(0)"
   85:  assertflush
   86:  set __fn5__n 1
   87:  setaddr __fn5retaddr __label25
   88:  call __label5 __fn5retval
        gotolabel __label25 __fn5
   89:  assertprints "1.000000000000000" "printExactSlow(1)"
   90:  assertflush
   91:  set __fn5__n 1.0000001
   92:  setaddr __fn5retaddr __label26
   93:  call __label5 __fn5retval
        gotolabel __label26 __fn5
   94:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
   95:  assertflush
   96:  set __fn5__n 3.00000007
   97:  setaddr __fn5retaddr __label27
   98:  call __label5 __fn5retval
        gotolabel __label27 __fn5
   99:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  100:  assertflush
  101:  set __fn5__n 3E50
  102:  setaddr __fn5retaddr __label28
  103:  call __label5 __fn5retval
        gotolabel __label28 __fn5
  104:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  105:  assertflush
  106:  set __fn5__n 1.0123456789
  107:  setaddr __fn5retaddr __label29
  108:  call __label5 __fn5retval
        gotolabel __label29 __fn5
  109:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  110:  assertflush
  111:  set __fn5__n 10000000999999999E4
  112:  setaddr __fn5retaddr __label30
  113:  call __label5 __fn5retval
        gotolabel __label30 __fn5
  114:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  115:  assertflush
  116:  set __fn5__n 12345E-54
  117:  setaddr __fn5retaddr __label31
  118:  call __label5 __fn5retval
        gotolabel __label31 __fn5
  119:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  120:  assertflush
  121:  set __fn5__n -12345E-54
  122:  setaddr __fn5retaddr __label32
  123:  call __label5 __fn5retval
        gotolabel __label32 __fn5
  124:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  125:  end
        label __label5
  126:  op abs __tmp48 __fn5__n 0
  127:  jump __label76 greaterThan __tmp48 0
  128:  print __fn5__n
  129:  goto __fn5retaddr __fn5
        label __label76
  130:  jump __label78 greaterThanEq __fn5__n 0
  131:  print "-"
  132:  op abs __fn5__n __fn5__n 0
        label __label78
  133:  op log10 __tmp54 __fn5__n 0
  134:  op floor __fn5__exp __tmp54 0
  135:  op mul __tmp56 -1 __fn5__exp
  136:  op pow __tmp57 10 __tmp56
  137:  op mul __fn5__base __fn5__n __tmp57
  138:  op floor __tmp59 __fn5__base 0
  139:  print __tmp59
  140:  print "."
  141:  op mod __tmp60 __fn5__base 1
  142:  op mul __fn5__base __tmp60 10
  143:  op floor __tmp63 __fn5__base 0
  144:  print __tmp63
  145:  op mod __tmp60 __fn5__base 1
  146:  op mul __fn5__base __tmp60 10
  147:  op floor __tmp63 __fn5__base 0
  148:  print __tmp63
  149:  op mod __tmp60 __fn5__base 1
  150:  op mul __fn5__base __tmp60 10
  151:  op floor __tmp63 __fn5__base 0
  152:  print __tmp63
  153:  op mod __tmp60 __fn5__base 1
  154:  op mul __fn5__base __tmp60 10
  155:  op floor __tmp63 __fn5__base 0
  156:  print __tmp63
  157:  op mod __tmp60 __fn5__base 1
  158:  op mul __fn5__base __tmp60 10
  159:  op floor __tmp63 __fn5__base 0
  160:  print __tmp63
  161:  op mod __tmp60 __fn5__base 1
  162:  op mul __fn5__base __tmp60 10
  163:  op floor __tmp63 __fn5__base 0
  164:  print __tmp63
  165:  op mod __tmp60 __fn5__base 1
  166:  op mul __fn5__base __tmp60 10
  167:  op floor __tmp63 __fn5__base 0
  168:  print __tmp63
  169:  op mod __tmp60 __fn5__base 1
  170:  op mul __fn5__base __tmp60 10
  171:  op floor __tmp63 __fn5__base 0
  172:  print __tmp63
  173:  op mod __tmp60 __fn5__base 1
  174:  op mul __fn5__base __tmp60 10
  175:  op floor __tmp63 __fn5__base 0
  176:  print __tmp63
  177:  op mod __tmp60 __fn5__base 1
  178:  op mul __fn5__base __tmp60 10
  179:  op floor __tmp63 __fn5__base 0
  180:  print __tmp63
  181:  op mod __tmp60 __fn5__base 1
  182:  op mul __fn5__base __tmp60 10
  183:  op floor __tmp63 __fn5__base 0
  184:  print __tmp63
  185:  op mod __tmp60 __fn5__base 1
  186:  op mul __fn5__base __tmp60 10
  187:  op floor __tmp63 __fn5__base 0
  188:  print __tmp63
  189:  op mod __tmp60 __fn5__base 1
  190:  op mul __fn5__base __tmp60 10
  191:  op floor __tmp63 __fn5__base 0
  192:  print __tmp63
  193:  op mod __tmp60 __fn5__base 1
  194:  op mul __fn5__base __tmp60 10
  195:  op floor __tmp63 __fn5__base 0
  196:  print __tmp63
  197:  op mod __tmp60 __fn5__base 1
  198:  op mul __fn5__base __tmp60 10
  199:  op floor __tmp63 __fn5__base 0
  200:  print __tmp63
  201:  jump __label85 equal __fn5__exp 0
  202:  print "E"
  203:  print __fn5__exp
        label __label85
  204:  goto __fn5retaddr __fn5
