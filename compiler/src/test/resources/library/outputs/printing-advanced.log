   497 instructions before optimizations.
    27 instructions eliminated by Temp Variables Elimination (7 iterations).
     1 instructions eliminated by Case Expression Optimization.
    40 instructions eliminated by Dead Code Elimination (6 iterations).
    65 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    22 instructions eliminated by Jump Optimization (6 iterations).
    42 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
   289 instructions eliminated by Data Flow Optimization (23 passes, 75 iterations).
     4 instructions eliminated by Loop Optimization (4 iterations).
     7 loops improved by Loop Optimization.
   623 instructions added by Loop Unrolling (27 iterations).
    17 loops unrolled by Loop Unrolling.
   298 instructions added by Function Inlining (27 iterations).
    15 function calls inlined by Function Inlining.
     2 case expressions converted to switched jumps Case Switching.
     6 instructions eliminated by Jump Straightening (6 iterations).
   141 instructions updated by Jump Threading.
   335 instructions eliminated by Unreachable Code Elimination (2 iterations).
     5 instructions eliminated by Print Merging.
   580 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 625):
  * Unroll iteration loop at *printing:22:5                      size    -5, benefit       11.0, efficiency   Infinity (-5 instructions)
    Unroll iteration loop at *printing:343:5                     size    +5, benefit        7.0, efficiency      1.400
    Unroll loop at *printing:344:9                               size   +90, benefit    40000.0, efficiency    444.444
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 630):
    Unroll iteration loop at *printing:343:5                     size    +5, benefit        7.0, efficiency      1.400
  * Unroll loop at *printing:344:9                               size   +90, benefit    40000.0, efficiency    444.444 (+90 instructions)
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 540):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
  * Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500 (+24 instructions)
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 516):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
  * Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755 (+53 instructions)
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 463):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944 (+27 instructions)
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 436):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
  * Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364 (+17 instructions)
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 419):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 418):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 417):
  * Unroll loop at *printing:112:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 420):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 419):
  * Unroll loop at *printing:112:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 422):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printNumber' defined at *printing:77:1      size  +101, benefit       24.5, efficiency      0.243 (+78 instructions)
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 7:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 8:19                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 9:20                            size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 10:27                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 11:28                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 12:31                           size   +17, benefit        3.5, efficiency      0.206
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 344):
  * Unroll loop at *printing:48:5                                size    +6, benefit      100.0, efficiency     16.667 (+3 instructions)
    Unroll loop at *printing:48:5                                size    +6, benefit      100.0, efficiency     16.667
    Unroll loop at *printing:48:5                                size   +15, benefit      150.0, efficiency     10.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 341):
  * Unroll loop at *printing:48:5                                size    +6, benefit      100.0, efficiency     16.667 (+3 instructions)
    Unroll loop at *printing:48:5                                size   +15, benefit      150.0, efficiency     10.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 338):
  * Unroll loop at *printing:48:5                                size   +15, benefit      150.0, efficiency     10.000 (+11 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 327):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142 (+93 instructions)
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 234):
  * Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 124):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 14):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:184:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 17):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  * Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 17):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  * Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)

Pass 1: speed optimization selection (cost limit 17):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 78):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  * Unroll iteration loop at *printing:368:5                     size   +55, benefit        7.0, efficiency      0.127 (-5 instructions)
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 83):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  * Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049 (+50 instructions)
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 33):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 47):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 4: speed optimization selection (cost limit 47):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "1\n2\n3\n"
    2:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
    3:  assertflush
    4:  print "{2}"
    5:  op floor :formatNumber:n 0 0
    6:  format :formatNumber:n
    7:  assertprints "0" "printNumber(null)"
    8:  assertflush
    9:  print "{2}"
   10:  op floor :formatNumber:n 1 0
   11:  format :formatNumber:n
   12:  assertprints "1" "printNumber(1)"
   13:  assertflush
   14:  print "{2}"
   15:  op floor :formatNumber:n 1.5 0
   16:  format :formatNumber:n
   17:  assertprints "1" "printNumber(1.5)"
   18:  assertflush
   19:  print "{2}"
   20:  op floor :formatNumber:n 1.5 0
   21:  format "-{2}"
   22:  format :formatNumber:n
   23:  assertprints "-1" "printNumber(-1.5)"
   24:  assertflush
   25:  print "{2}"
   26:  format "{2},{1}"
   27:  format 567
   28:  format "{2},{1}"
   29:  format 234
   30:  format 1
   31:  assertprints "1,234,567" "printNumber(1234567)"
   32:  assertflush
   33:  print "{2}"
   34:  format "-{2}"
   35:  format "{2},{1}"
   36:  format 567
   37:  format "{2},{1}"
   38:  format 234
   39:  format 1
   40:  assertprints "-1,234,567" "printNumber(-1234567)"
   41:  assertflush
   42:  print "{2}"
   43:  format "{2},{1}"
   44:  format 999
   45:  format "{2},0{1}"
   46:  format 99
   47:  format "{2},00{1}"
   48:  format 9
   49:  format 9
   50:  assertprints "9,009,099,999" "printNumber(9009099999)"
   51:  assertflush
   52:  print "{2}"
   53:  format "{2}{1}"
   54:  format 1
   55:  format "{2}{1}"
   56:  format 0
   57:  format "{2}{1}"
   58:  format 0
   59:  format "{2}{1}"
   60:  format 1
   61:  format "0b"
   62:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   63:  assertflush
   64:  print "{2}"
   65:  format "{2}{1}"
   66:  format 0
   67:  format "{2}{1}"
   68:  format 1
   69:  format "{2}{1}"
   70:  format 0
   71:  format "{2}{1}"
   72:  format 1
   73:  format "{2}0"
   74:  format "{2}0"
   75:  format "0b"
   76:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   77:  assertflush
   78:  print "{2}"
   79:  format "-{2}"
   80:  format "{2}{1}"
   81:  format 0
   82:  format "{2}{1}"
   83:  format 1
   84:  format "{2}{1}"
   85:  format 0
   86:  format "{2}{1}"
   87:  format 1
   88:  format "{2}0"
   89:  format "{2}0"
   90:  format "0b"
   91:  assertprints "-0b001010" "printBinaryNumber(-0b1010, 6)"
   92:  assertflush
   93:  print "{2}"
   94:  format "{2}F"
   95:  format "{2}E"
   96:  format "{2}D"
   97:  format "{2}C"
   98:  format "{2}B"
   99:  format "{2}A"
  100:  format "0x"
  101:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
  102:  assertflush
  103:  print "{2}"
  104:  set :formatHexNumber:digits 0
  105:  op floor :formatHexNumber:n 0x1234567890 0
        label *label570
  106:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  107:  jump *label873 greaterThanEq :formatHexNumber:digit 10
  108:  jump *label872 lessThan :formatHexNumber:digit 0
  109:  format "{2}{1}"
  110:  format :formatHexNumber:digit
  111:  jump *label586 always 0 0
        label *label873
  112:  jump *label874 greaterThanEq :formatHexNumber:digit 13
  113:  jump *label574 lessThan :formatHexNumber:digit 11
  114:  jump *label578 greaterThanEq :formatHexNumber:digit 12
  115:  format "{2}B"
  116:  jump *label586 always 0 0
        label *label874
  117:  jump *label875 greaterThanEq :formatHexNumber:digit 15
  118:  jump *label582 greaterThanEq :formatHexNumber:digit 14
  119:  format "{2}D"
  120:  jump *label586 always 0 0
        label *label875
  121:  jump *label584 lessThan :formatHexNumber:digit 16
  122:  jump *label872 always 0 0
        label *label574
  123:  format "{2}A"
  124:  jump *label586 always 0 0
        label *label578
  125:  format "{2}C"
  126:  jump *label586 always 0 0
        label *label582
  127:  format "{2}E"
  128:  jump *label586 always 0 0
        label *label584
  129:  format "{2}F"
        label *label872
        label *label586
  130:  op shr :formatHexNumber:n :formatHexNumber:n 4
  131:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  132:  jump *label570 greaterThan :formatHexNumber:n 0
  133:  jump *label592 lessThanEq :formatHexNumber:digits 0
        label *label590
  134:  format "{2}0"
  135:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  136:  jump *label590 greaterThan :formatHexNumber:digits 0
        label *label592
  137:  format "0x"
  138:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  139:  assertflush
  140:  print "{2}"
  141:  format "{2}C"
  142:  format "{2}C"
  143:  format "{2}B"
  144:  format "{2}B"
  145:  format "{2}A"
  146:  format "{2}A"
  147:  format "{2}0"
  148:  format "{2}0"
  149:  format "0x"
  150:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  151:  assertflush
  152:  print "{2}"
  153:  set :formatHexNumber:digits 8
  154:  format "-{2}"
  155:  op floor :formatHexNumber:n 11189196 0
        label *label626
  156:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  157:  jump *label877 greaterThanEq :formatHexNumber:digit 10
  158:  jump *label876 lessThan :formatHexNumber:digit 0
  159:  format "{2}{1}"
  160:  format :formatHexNumber:digit
  161:  jump *label642 always 0 0
        label *label877
  162:  jump *label878 greaterThanEq :formatHexNumber:digit 13
  163:  jump *label630 lessThan :formatHexNumber:digit 11
  164:  jump *label634 greaterThanEq :formatHexNumber:digit 12
  165:  format "{2}B"
  166:  jump *label642 always 0 0
        label *label878
  167:  jump *label879 greaterThanEq :formatHexNumber:digit 15
  168:  jump *label638 greaterThanEq :formatHexNumber:digit 14
  169:  format "{2}D"
  170:  jump *label642 always 0 0
        label *label879
  171:  jump *label640 lessThan :formatHexNumber:digit 16
  172:  jump *label876 always 0 0
        label *label630
  173:  format "{2}A"
  174:  jump *label642 always 0 0
        label *label634
  175:  format "{2}C"
  176:  jump *label642 always 0 0
        label *label638
  177:  format "{2}E"
  178:  jump *label642 always 0 0
        label *label640
  179:  format "{2}F"
        label *label876
        label *label642
  180:  op shr :formatHexNumber:n :formatHexNumber:n 4
  181:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  182:  jump *label626 greaterThan :formatHexNumber:n 0
  183:  jump *label648 lessThanEq :formatHexNumber:digits 0
        label *label646
  184:  format "{2}0"
  185:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  186:  jump *label646 greaterThan :formatHexNumber:digits 0
        label *label648
  187:  format "0x"
  188:  assertprints "-0x00AABBCC" "printHexNumber(-0xAABBCC, 8)"
  189:  assertflush
  190:  op abs *tmp42 null 0
  191:  print null
  192:  assertprints "null" "printExactFast(null)"
  193:  assertflush
  194:  set :printExactFast:n 0
  195:  setaddr :printExactFast*retaddr *label30
  196:  call *label6 *invalid :printExactFast*retval
        label *label30
  197:  assertprints "0" "printExactFast(0)"
  198:  assertflush
  199:  set :printExactFast:n 1
  200:  setaddr :printExactFast*retaddr *label31
  201:  call *label6 *invalid :printExactFast*retval
        label *label31
  202:  assertprints "1" "printExactFast(1)"
  203:  assertflush
  204:  set :printExactFast:n 1.0000001
  205:  setaddr :printExactFast*retaddr *label32
  206:  call *label6 *invalid :printExactFast*retval
        label *label32
  207:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  208:  assertflush
  209:  set :printExactFast:n 3.00000007
  210:  setaddr :printExactFast*retaddr *label33
  211:  call *label6 *invalid :printExactFast*retval
        label *label33
  212:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  213:  assertflush
  214:  set :printExactFast:n 3E50
  215:  setaddr :printExactFast*retaddr *label34
  216:  call *label6 *invalid :printExactFast*retval
        label *label34
  217:  assertprints "3E50" "printExactFast(3e50)"
  218:  assertflush
  219:  set :printExactFast:n 1.0123456789
  220:  setaddr :printExactFast*retaddr *label35
  221:  call *label6 *invalid :printExactFast*retval
        label *label35
  222:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  223:  assertflush
  224:  set :printExactFast:n 10000001E13
  225:  setaddr :printExactFast*retaddr *label36
  226:  call *label6 *invalid :printExactFast*retval
        label *label36
  227:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  228:  assertflush
  229:  set :printExactFast:n 12345E-54
  230:  setaddr :printExactFast*retaddr *label37
  231:  call *label6 *invalid :printExactFast*retval
        label *label37
  232:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  233:  assertflush
  234:  set :printExactFast:n -12345E-54
  235:  setaddr :printExactFast*retaddr *label38
  236:  call *label6 *invalid :printExactFast*retval
        label *label38
  237:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  238:  assertflush
  239:  set :printExactSlow:n null
  240:  setaddr :printExactSlow*retaddr *label39
  241:  call *label7 *invalid :printExactSlow*retval
        label *label39
  242:  assertprints "null" "printExactSlow(null)"
  243:  assertflush
  244:  set :printExactSlow:n 0
  245:  setaddr :printExactSlow*retaddr *label40
  246:  call *label7 *invalid :printExactSlow*retval
        label *label40
  247:  assertprints "0" "printExactSlow(0)"
  248:  assertflush
  249:  set :printExactSlow:n 1
  250:  setaddr :printExactSlow*retaddr *label41
  251:  call *label7 *invalid :printExactSlow*retval
        label *label41
  252:  assertprints "1.000000000000000" "printExactSlow(1)"
  253:  assertflush
  254:  set :printExactSlow:n 1.0000001
  255:  setaddr :printExactSlow*retaddr *label42
  256:  call *label7 *invalid :printExactSlow*retval
        label *label42
  257:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  258:  assertflush
  259:  set :printExactSlow:n 3.00000007
  260:  setaddr :printExactSlow*retaddr *label43
  261:  call *label7 *invalid :printExactSlow*retval
        label *label43
  262:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  263:  assertflush
  264:  set :printExactSlow:n 3E50
  265:  setaddr :printExactSlow*retaddr *label44
  266:  call *label7 *invalid :printExactSlow*retval
        label *label44
  267:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  268:  assertflush
  269:  set :printExactSlow:n 1.0123456789
  270:  setaddr :printExactSlow*retaddr *label45
  271:  call *label7 *invalid :printExactSlow*retval
        label *label45
  272:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  273:  assertflush
  274:  set :printExactSlow:n 10000001E13
  275:  setaddr :printExactSlow*retaddr *label46
  276:  call *label7 *invalid :printExactSlow*retval
        label *label46
  277:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  278:  assertflush
  279:  set :printExactSlow:n 12345E-54
  280:  setaddr :printExactSlow*retaddr *label47
  281:  call *label7 *invalid :printExactSlow*retval
        label *label47
  282:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  283:  assertflush
  284:  set :printExactSlow:n -12345E-54
  285:  setaddr :printExactSlow*retaddr *label48
  286:  call *label7 *invalid :printExactSlow*retval
        label *label48
  287:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  288:  assertflush
  289:  op shr :printExactBinary:t -1035087118336 32
  290:  setaddr *tmp1 *label53
  291:  jump *label50 always 0 0
        multilabel *label53
  292:  op and :printExactBinary:t -1035087118336 0xFFFFFFFF
  293:  setaddr *tmp1 *label54
        label *label50
  294:  op shr *tmp4 :printExactBinary:t 31
  295:  op and *tmp5 *tmp4 1
  296:  print *tmp5
  297:  op shr *tmp4 :printExactBinary:t 30
  298:  op and *tmp5 *tmp4 1
  299:  print *tmp5
  300:  op shr *tmp4 :printExactBinary:t 29
  301:  op and *tmp5 *tmp4 1
  302:  print *tmp5
  303:  op shr *tmp4 :printExactBinary:t 28
  304:  op and *tmp5 *tmp4 1
  305:  print *tmp5
  306:  op shr *tmp4 :printExactBinary:t 27
  307:  op and *tmp5 *tmp4 1
  308:  print *tmp5
  309:  op shr *tmp4 :printExactBinary:t 26
  310:  op and *tmp5 *tmp4 1
  311:  print *tmp5
  312:  op shr *tmp4 :printExactBinary:t 25
  313:  op and *tmp5 *tmp4 1
  314:  print *tmp5
  315:  op shr *tmp4 :printExactBinary:t 24
  316:  op and *tmp5 *tmp4 1
  317:  print *tmp5
  318:  op shr *tmp4 :printExactBinary:t 23
  319:  op and *tmp5 *tmp4 1
  320:  print *tmp5
  321:  op shr *tmp4 :printExactBinary:t 22
  322:  op and *tmp5 *tmp4 1
  323:  print *tmp5
  324:  op shr *tmp4 :printExactBinary:t 21
  325:  op and *tmp5 *tmp4 1
  326:  print *tmp5
  327:  op shr *tmp4 :printExactBinary:t 20
  328:  op and *tmp5 *tmp4 1
  329:  print *tmp5
  330:  op shr *tmp4 :printExactBinary:t 19
  331:  op and *tmp5 *tmp4 1
  332:  print *tmp5
  333:  op shr *tmp4 :printExactBinary:t 18
  334:  op and *tmp5 *tmp4 1
  335:  print *tmp5
  336:  op shr *tmp4 :printExactBinary:t 17
  337:  op and *tmp5 *tmp4 1
  338:  print *tmp5
  339:  op shr *tmp4 :printExactBinary:t 16
  340:  op and *tmp5 *tmp4 1
  341:  print *tmp5
  342:  op shr *tmp4 :printExactBinary:t 15
  343:  op and *tmp5 *tmp4 1
  344:  print *tmp5
  345:  op shr *tmp4 :printExactBinary:t 14
  346:  op and *tmp5 *tmp4 1
  347:  print *tmp5
  348:  op shr *tmp4 :printExactBinary:t 13
  349:  op and *tmp5 *tmp4 1
  350:  print *tmp5
  351:  op shr *tmp4 :printExactBinary:t 12
  352:  op and *tmp5 *tmp4 1
  353:  print *tmp5
  354:  op shr *tmp4 :printExactBinary:t 11
  355:  op and *tmp5 *tmp4 1
  356:  print *tmp5
  357:  op shr *tmp4 :printExactBinary:t 10
  358:  op and *tmp5 *tmp4 1
  359:  print *tmp5
  360:  op shr *tmp4 :printExactBinary:t 9
  361:  op and *tmp5 *tmp4 1
  362:  print *tmp5
  363:  op shr *tmp4 :printExactBinary:t 8
  364:  op and *tmp5 *tmp4 1
  365:  print *tmp5
  366:  op shr *tmp4 :printExactBinary:t 7
  367:  op and *tmp5 *tmp4 1
  368:  print *tmp5
  369:  op shr *tmp4 :printExactBinary:t 6
  370:  op and *tmp5 *tmp4 1
  371:  print *tmp5
  372:  op shr *tmp4 :printExactBinary:t 5
  373:  op and *tmp5 *tmp4 1
  374:  print *tmp5
  375:  op shr *tmp4 :printExactBinary:t 4
  376:  op and *tmp5 *tmp4 1
  377:  print *tmp5
  378:  op shr *tmp4 :printExactBinary:t 3
  379:  op and *tmp5 *tmp4 1
  380:  print *tmp5
  381:  op shr *tmp4 :printExactBinary:t 2
  382:  op and *tmp5 *tmp4 1
  383:  print *tmp5
  384:  op shr *tmp4 :printExactBinary:t 1
  385:  op and *tmp5 *tmp4 1
  386:  print *tmp5
  387:  op and *tmp5 :printExactBinary:t 1
  388:  print *tmp5
  389:  multijump *tmp1 0 0
        multilabel *label54
  390:  assertprints "1111111111111111111111110000111100000000000000000000000000000000" "printExactBinary(0xFFFFFF0F << 32)"
  391:  assertflush
  392:  read *tmp12 "0123456789ABCDEF" 15
  393:  printchar *tmp12
  394:  read *tmp12 "0123456789ABCDEF" 15
  395:  printchar *tmp12
  396:  read *tmp12 "0123456789ABCDEF" 15
  397:  printchar *tmp12
  398:  read *tmp12 "0123456789ABCDEF" 15
  399:  printchar *tmp12
  400:  read *tmp12 "0123456789ABCDEF" 15
  401:  printchar *tmp12
  402:  read *tmp12 "0123456789ABCDEF" 15
  403:  printchar *tmp12
  404:  read *tmp12 "0123456789ABCDEF" 0
  405:  printchar *tmp12
  406:  read *tmp12 "0123456789ABCDEF" 15
  407:  printchar *tmp12
  408:  read *tmp12 "0123456789ABCDEF" 0
  409:  printchar *tmp12
  410:  read *tmp12 "0123456789ABCDEF" 0
  411:  printchar *tmp12
  412:  read *tmp12 "0123456789ABCDEF" 0
  413:  printchar *tmp12
  414:  read *tmp12 "0123456789ABCDEF" 0
  415:  printchar *tmp12
  416:  read *tmp12 "0123456789ABCDEF" 0
  417:  printchar *tmp12
  418:  read *tmp12 "0123456789ABCDEF" 0
  419:  printchar *tmp12
  420:  read *tmp12 "0123456789ABCDEF" 0
  421:  printchar *tmp12
  422:  read *tmp12 "0123456789ABCDEF" 0
  423:  printchar *tmp12
  424:  assertprints "FFFFFF0F00000000" "printExactHex(0xFFFFFF0F << 32)"
  425:  stop
  426:  end
        label *label6
  427:  op abs *tmp42 :printExactFast:n 0
  428:  jump *label116 greaterThan *tmp42 0
  429:  print :printExactFast:n
  430:  return :printExactFast*retaddr
        label *label116
  431:  jump *label118 greaterThanEq :printExactFast:n 0
  432:  print "-"
  433:  op abs :printExactFast:n :printExactFast:n 0
        label *label118
  434:  op log10 *tmp48 :printExactFast:n 0
  435:  op floor :printExactFast:exp *tmp48 0
  436:  op sub *tmp50 0 :printExactFast:exp
  437:  op pow *tmp51 10 *tmp50
  438:  op mul :printExactFast:base :printExactFast:n *tmp51
  439:  op add *tmp54 :printExactFast:base 0.5
  440:  op floor *tmp53 *tmp54 0
  441:  op sub *tmp56 :printExactFast:base *tmp53
  442:  op abs :printExactFast:cmp *tmp56 0
  443:  jump *label121 greaterThan :printExactFast:cmp 0
  444:  print :printExactFast:base
  445:  jump *label122 always 0 0
        label *label121
  446:  jump *label123 lessThanEq :printExactFast:cmp 0.00001
  447:  print :printExactFast:base
  448:  jump *label124 always 0 0
        label *label123
  449:  op floor *tmp62 :printExactFast:base 0
  450:  print *tmp62
  451:  print "."
  452:  op mod *tmp63 :printExactFast:base 1
  453:  op mul :printExactFast:base *tmp63 100000
  454:  op floor :printExactFast:t :printExactFast:base 0
  455:  jump *label304 greaterThanEq :printExactFast:t 100
  456:  jump *label302 greaterThanEq :printExactFast:t 10
  457:  print "0000"
  458:  jump *label309 always 0 0
        label *label302
  459:  print "000"
  460:  jump *label309 always 0 0
        label *label304
  461:  jump *label305 greaterThanEq :printExactFast:t 1000
  462:  print "00"
  463:  jump *label308 always 0 0
        label *label305
  464:  jump *label306 greaterThanEq :printExactFast:t 10000
  465:  print "0"
        label *label306
        label *label308
        label *label309
  466:  print :printExactFast:t
  467:  op mod *tmp63 :printExactFast:base 1
  468:  op mul :printExactFast:base *tmp63 100000
  469:  op floor :printExactFast:t :printExactFast:base 0
  470:  jump *label315 greaterThanEq :printExactFast:t 100
  471:  jump *label313 greaterThanEq :printExactFast:t 10
  472:  print "0000"
  473:  jump *label320 always 0 0
        label *label313
  474:  print "000"
  475:  jump *label320 always 0 0
        label *label315
  476:  jump *label316 greaterThanEq :printExactFast:t 1000
  477:  print "00"
  478:  jump *label319 always 0 0
        label *label316
  479:  jump *label317 greaterThanEq :printExactFast:t 10000
  480:  print "0"
        label *label317
        label *label319
        label *label320
  481:  print :printExactFast:t
  482:  op mod *tmp63 :printExactFast:base 1
  483:  op mul :printExactFast:base *tmp63 100000
  484:  op floor :printExactFast:t :printExactFast:base 0
  485:  jump *label326 greaterThanEq :printExactFast:t 100
  486:  jump *label324 greaterThanEq :printExactFast:t 10
  487:  print "0000"
  488:  jump *label331 always 0 0
        label *label324
  489:  print "000"
  490:  jump *label331 always 0 0
        label *label326
  491:  jump *label327 greaterThanEq :printExactFast:t 1000
  492:  print "00"
  493:  jump *label330 always 0 0
        label *label327
  494:  jump *label328 greaterThanEq :printExactFast:t 10000
  495:  print "0"
        label *label328
        label *label330
        label *label331
  496:  print :printExactFast:t
        label *label124
        label *label122
  497:  jump *label137 equal :printExactFast:exp 0
  498:  print "E"
  499:  print :printExactFast:exp
        label *label137
  500:  return :printExactFast*retaddr
        label *label7
  501:  op abs *tmp78 :printExactSlow:n 0
  502:  jump *label141 greaterThan *tmp78 0
  503:  print :printExactSlow:n
  504:  return :printExactSlow*retaddr
        label *label141
  505:  jump *label143 greaterThanEq :printExactSlow:n 0
  506:  print "-"
  507:  op abs :printExactSlow:n :printExactSlow:n 0
        label *label143
  508:  op log10 *tmp84 :printExactSlow:n 0
  509:  op floor :printExactSlow:exp *tmp84 0
  510:  op sub *tmp86 0 :printExactSlow:exp
  511:  op pow *tmp87 10 *tmp86
  512:  op mul :printExactSlow:base :printExactSlow:n *tmp87
  513:  op floor *tmp89 :printExactSlow:base 0
  514:  print *tmp89
  515:  print "."
  516:  op mod *tmp90 :printExactSlow:base 1
  517:  op mul :printExactSlow:base *tmp90 10
  518:  op floor *tmp93 :printExactSlow:base 0
  519:  print *tmp93
  520:  op mod *tmp90 :printExactSlow:base 1
  521:  op mul :printExactSlow:base *tmp90 10
  522:  op floor *tmp93 :printExactSlow:base 0
  523:  print *tmp93
  524:  op mod *tmp90 :printExactSlow:base 1
  525:  op mul :printExactSlow:base *tmp90 10
  526:  op floor *tmp93 :printExactSlow:base 0
  527:  print *tmp93
  528:  op mod *tmp90 :printExactSlow:base 1
  529:  op mul :printExactSlow:base *tmp90 10
  530:  op floor *tmp93 :printExactSlow:base 0
  531:  print *tmp93
  532:  op mod *tmp90 :printExactSlow:base 1
  533:  op mul :printExactSlow:base *tmp90 10
  534:  op floor *tmp93 :printExactSlow:base 0
  535:  print *tmp93
  536:  op mod *tmp90 :printExactSlow:base 1
  537:  op mul :printExactSlow:base *tmp90 10
  538:  op floor *tmp93 :printExactSlow:base 0
  539:  print *tmp93
  540:  op mod *tmp90 :printExactSlow:base 1
  541:  op mul :printExactSlow:base *tmp90 10
  542:  op floor *tmp93 :printExactSlow:base 0
  543:  print *tmp93
  544:  op mod *tmp90 :printExactSlow:base 1
  545:  op mul :printExactSlow:base *tmp90 10
  546:  op floor *tmp93 :printExactSlow:base 0
  547:  print *tmp93
  548:  op mod *tmp90 :printExactSlow:base 1
  549:  op mul :printExactSlow:base *tmp90 10
  550:  op floor *tmp93 :printExactSlow:base 0
  551:  print *tmp93
  552:  op mod *tmp90 :printExactSlow:base 1
  553:  op mul :printExactSlow:base *tmp90 10
  554:  op floor *tmp93 :printExactSlow:base 0
  555:  print *tmp93
  556:  op mod *tmp90 :printExactSlow:base 1
  557:  op mul :printExactSlow:base *tmp90 10
  558:  op floor *tmp93 :printExactSlow:base 0
  559:  print *tmp93
  560:  op mod *tmp90 :printExactSlow:base 1
  561:  op mul :printExactSlow:base *tmp90 10
  562:  op floor *tmp93 :printExactSlow:base 0
  563:  print *tmp93
  564:  op mod *tmp90 :printExactSlow:base 1
  565:  op mul :printExactSlow:base *tmp90 10
  566:  op floor *tmp93 :printExactSlow:base 0
  567:  print *tmp93
  568:  op mod *tmp90 :printExactSlow:base 1
  569:  op mul :printExactSlow:base *tmp90 10
  570:  op floor *tmp93 :printExactSlow:base 0
  571:  print *tmp93
  572:  op mod *tmp90 :printExactSlow:base 1
  573:  op mul :printExactSlow:base *tmp90 10
  574:  op floor *tmp93 :printExactSlow:base 0
  575:  print *tmp93
  576:  jump *label149 equal :printExactSlow:exp 0
  577:  print "E"
  578:  print :printExactSlow:exp
        label *label149
  579:  return :printExactSlow*retaddr


stop instruction encountered, dumping variable values:
*tmp1: 390.0
*tmp12: 48.0
*tmp4: 0.0
*tmp42: 1.2345E-50
*tmp48: -49.90850890573205
*tmp5: 0.0
*tmp50: 50.0
*tmp51: 1.0E50
*tmp53: 1.0
*tmp54: 1.7345000000000002
*tmp56: 0.23450000000000015
*tmp62: 1.0
*tmp63: 0.9999983634211276
*tmp78: 1.2345E-50
*tmp84: -49.90850890573205
*tmp86: 50.0
*tmp87: 1.0E50
*tmp89: 1.0
*tmp90: 0.015276668818842154
*tmp93: 0.0
:formatHexNumber:digit: 10.0
:formatHexNumber:digits: 0.0
:formatHexNumber:n: 0.0
:formatNumber:n: 1.0
:printExactBinary:t: 0.0
:printExactFast*retaddr: 237.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactSlow*retaddr: 287.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
@counter: 426.0