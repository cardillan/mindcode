Main file: number of reported ambiguities: 5
Active optimizations:
    case-expression-optimization = advanced,
    case-switching = advanced,
    data-flow-optimization = advanced,
    dead-code-elimination = advanced,
    expression-optimization = advanced,
    function-inlining = advanced,
    if-expression-optimization = advanced,
    jump-normalization = advanced,
    jump-optimization = advanced,
    jump-straightening = advanced,
    jump-threading = advanced,
    loop-hoisting = advanced,
    loop-optimization = advanced,
    loop-unrolling = advanced,
    print-merging = advanced,
    return-optimization = advanced,
    single-step-elimination = advanced,
    stack-optimization = advanced,
    temp-variables-elimination = advanced,
    unreachable-code-elimination = advanced

   308 instructions before optimizations.
    18 instructions eliminated by Temp Variables Elimination.
    26 instructions eliminated by Dead Code Elimination (6 iterations).
   124 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    16 instructions eliminated by Jump Optimization (5 iterations).
    79 instructions eliminated by Single Step Elimination (4 passes, 11 iterations).
     2 instructions modified by Expression Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
   849 instructions eliminated by Data Flow Optimization (19 passes, 58 iterations).
     2 instructions eliminated by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
   124 instructions added by Loop Unrolling (21 iterations).
     5 loops unrolled by Loop Unrolling.
  1407 instructions added by Function Inlining (21 iterations).
    27 function calls inlined by Function Inlining.
    55 instructions updated by JumpThreading.
   450 instructions eliminated by Unreachable Code Elimination.
   166 instructions eliminated by Print Merging.
   107 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 768):
    Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9
  * Loop Unrolling: unroll loop at line 153                      cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
    Function Inlining: inline function printExactSlow            cost   215, benefit       35.0, efficiency        0.2
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 11           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 12           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 13           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 14           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 15           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 16           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 17           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 18           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 19           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 20           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 21           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 22           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 23           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 24           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 25           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 26           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 27           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 28           cost    24, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 29           cost    24, benefit        3.5, efficiency        0.1

Pass 1: speed optimization selection (cost limit 715):
  * Loop Unrolling: unroll loop at line 108                      cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2
    Function Inlining: inline function printExactFast            cost   404, benefit       35.0, efficiency        0.1
    Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 11           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 12           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 13           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 14           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 15           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 16           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 17           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 18           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 19           cost    45, benefit        3.5, efficiency        0.1
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 688):
  * Function Inlining: inline function printNumber               cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
    Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 3            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 4            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 5            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 6            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 7            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 8            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 9            cost    17, benefit        3.5, efficiency        0.2
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 610):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-3 instructions)
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 613):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-3 instructions)
    Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 616):
  * Loop Unrolling: unroll loop at line 30                       cost     6, benefit      100.0, efficiency       16.7 (-3 instructions)
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 619):
  ! Function Inlining: inline function printExactFast            cost   647, benefit       35.0, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 10           cost    72, benefit        3.5, efficiency        0.0 (+50 instructions)
    Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 569):
  ! Function Inlining: inline function printExactFast            cost   575, benefit       31.5, efficiency        0.1
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 11           cost    72, benefit        3.5, efficiency        0.0 (+49 instructions)
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 520):
  * Function Inlining: inline function printExactFast            cost   503, benefit       28.0, efficiency        0.1 (+316 instructions)
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
    Function Inlining: inline function call at line 12           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 13           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 14           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 15           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 16           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 17           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 18           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 19           cost    72, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 204):
  ! Function Inlining: inline function printExactSlow            cost   692, benefit       35.0, efficiency        0.1
  * Function Inlining: inline function call at line 20           cost    77, benefit        3.5, efficiency        0.0 (+23 instructions)
    Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 181):
  ! Function Inlining: inline function printExactSlow            cost   615, benefit       31.5, efficiency        0.1
  * Function Inlining: inline function call at line 21           cost    77, benefit        3.5, efficiency        0.0 (+22 instructions)
    Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 159):
  ! Function Inlining: inline function printExactSlow            cost   538, benefit       28.0, efficiency        0.1
  * Function Inlining: inline function call at line 22           cost    77, benefit        3.5, efficiency        0.0 (+30 instructions)
    Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 129):
  ! Function Inlining: inline function printExactSlow            cost   461, benefit       24.5, efficiency        0.1
  * Function Inlining: inline function call at line 23           cost    77, benefit        3.5, efficiency        0.0 (+22 instructions)
    Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 107):
  ! Function Inlining: inline function printExactSlow            cost   384, benefit       21.0, efficiency        0.1
  * Function Inlining: inline function call at line 24           cost    77, benefit        3.5, efficiency        0.0 (+22 instructions)
    Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 85):
  ! Function Inlining: inline function printExactSlow            cost   307, benefit       17.5, efficiency        0.1
  * Function Inlining: inline function call at line 25           cost    77, benefit        3.5, efficiency        0.0 (+22 instructions)
    Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 63):
  ! Function Inlining: inline function printExactSlow            cost   230, benefit       14.0, efficiency        0.1
  ! Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
  ! Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 214):
  ! Function Inlining: inline function printExactSlow            cost   230, benefit       14.0, efficiency        0.1
  * Function Inlining: inline function call at line 26           cost    77, benefit        3.5, efficiency        0.0 (+22 instructions)
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 192):
  * Function Inlining: inline function printExactSlow            cost   153, benefit       10.5, efficiency        0.1 (-23 instructions)
    Function Inlining: inline function call at line 27           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 28           cost    77, benefit        3.5, efficiency        0.0
    Function Inlining: inline function call at line 29           cost    77, benefit        3.5, efficiency        0.0

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor __fn6__n 0 0
    3:  format __fn6__n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor __fn6__n 1 0
    8:  format __fn6__n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor __fn6__n 1.5 0
   13:  format __fn6__n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor __fn6__n 1.5 0
   18:  format "-{2}"
   19:  format __fn6__n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  format "{2},{1}"
   24:  format 567
   25:  format "{2},{1}"
   26:  format 234
   27:  format 1
   28:  assertprints "1,234,567" "printNumber(1234567)"
   29:  assertflush
   30:  print "{2}"
   31:  format "-{2}"
   32:  format "{2},{1}"
   33:  format 567
   34:  format "{2},{1}"
   35:  format 234
   36:  format 1
   37:  assertprints "-1,234,567" "printNumber(-1234567)"
   38:  assertflush
   39:  print "{2}"
   40:  format "{2},0{1}"
   41:  format 99
   42:  format "{2},00{1}"
   43:  format 9
   44:  format 9
   45:  assertprints "9,009,099" "printNumber(9009099)"
   46:  assertflush
   47:  print null
   48:  assertprints "null" "printExactFast(null)"
   49:  assertflush
   50:  print 0
   51:  assertprints "0" "printExactFast(0)"
   52:  assertflush
   53:  print 1
   54:  assertprints "1" "printExactFast(1)"
   55:  assertflush
   56:  print "1.000000100000000"
   57:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
   58:  assertflush
   59:  print "3.000000070000000"
   60:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
   61:  assertflush
   62:  print "3E50"
   63:  assertprints "3E50" "printExactFast(3e50)"
   64:  assertflush
   65:  print 1.0123456789
   66:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
   67:  assertflush
   68:  print "1.000000099999999E20"
   69:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
   70:  assertflush
   71:  print "1.2345000000000002E-50"
   72:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
   73:  assertflush
   74:  print "-1.2345000000000002E-50"
   75:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
   76:  assertflush
   77:  print null
   78:  assertprints "null" "printExactSlow(null)"
   79:  assertflush
   80:  print 0
   81:  assertprints "0" "printExactSlow(0)"
   82:  assertflush
   83:  print "1.000000000000000"
   84:  assertprints "1.000000000000000" "printExactSlow(1)"
   85:  assertflush
   86:  print "1.000000100000000"
   87:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
   88:  assertflush
   89:  print "3.000000070000000"
   90:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
   91:  assertflush
   92:  print "3.000000000000000E50"
   93:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
   94:  assertflush
   95:  print "1.012345678900000"
   96:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
   97:  assertflush
   98:  print "1.000000099999999E20"
   99:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  100:  assertflush
  101:  print "1.234500000000000E-50"
  102:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  103:  assertflush
  104:  print "-1.234500000000000E-50"
  105:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  106:  stop


stop instruction encountered, dumping variable values:
@counter: 107.0
__fn6__n: 1.0