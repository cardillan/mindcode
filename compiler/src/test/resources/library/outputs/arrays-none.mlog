set p 0
set :fill:value "x"
set :fill:i 0
jump 11 greaterThanEq :fill:i 5
set *tmp0 :fill:i
set .a*ret 8
set .a*ind *tmp0
read @counter "ĮİĲĮİ" *tmp0
write :fill:value @this .a*elem
op add :fill:i :fill:i 1
jump 3 always 0 0
assertflush
print .a*0
print .a*1
print .a*2
print .a*3
print .a*4
assertprints "xxxxx" "Array fill"
set :i 0
jump 34 greaterThanEq :i 10
set *tmp2 :i
op add *tmp4 p :i
set .b*ret 25
set .b*ind *tmp2
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp2
write *tmp4 @this .b*elem
set *tmp5 :i
op add *tmp7 p :i
set .c*ret 31
set .c*ind *tmp5
read @counter "ŀłńņňŀłńņň" *tmp5
write *tmp7 @this .c*elem
op add :i :i 1
jump 19 always 0 0
set :reverse:i 0
jump 61 greaterThanEq :reverse:i 5
op sub *tmp8 9 :reverse:i
set :reverse:j *tmp8
set *tmp9 :reverse:i
set .b*ret 42
set .b*ind *tmp9
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp9
read *tmp10 @this .b*elem
set :reverse:t *tmp10
set *tmp11 :reverse:i
set *tmp13 :reverse:j
set .b*ret 49
set .b*ind *tmp13
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp13
read *tmp14 @this .b*elem
set .b*ret 53
set .b*ind *tmp11
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp11
write *tmp14 @this .b*elem
set *tmp15 :reverse:j
set .b*ret 58
set .b*ind *tmp15
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp15
write :reverse:t @this .b*elem
op add :reverse:i :reverse:i 1
jump 35 always 0 0
assertflush
print .b*0
print .b*1
print .b*2
print .b*3
print .b*4
print .b*5
print .b*6
print .b*7
print .b*8
print .b*9
assertprints "9876543210" "Array reverse"
set :bubblesort:maxToMin false
set :bubblesort:flag false
set :bubblesort:a .b*0
set :bubblesort:i 1
jump 110 greaterThanEq :bubblesort:i 10
set *tmp17 :bubblesort:i
set .b*ret 82
set .b*ind *tmp17
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp17
read *tmp18 @this .b*elem
set :bubblesort:b *tmp18
jump 88 equal :bubblesort:maxToMin false
op lessThan *tmp20 :bubblesort:a :bubblesort:b
set *tmp19 *tmp20
jump 90 always 0 0
op greaterThan *tmp21 :bubblesort:a :bubblesort:b
set *tmp19 *tmp21
set :bubblesort:condition *tmp19
jump 106 equal :bubblesort:condition false
op sub *tmp23 :bubblesort:i 1
set *tmp24 *tmp23
set .b*ret 97
set .b*ind *tmp24
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp24
write :bubblesort:b @this .b*elem
set *tmp26 :bubblesort:i
set .b*ret 102
set .b*ind *tmp26
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp26
write :bubblesort:a @this .b*elem
set :bubblesort:flag true
set *tmp22 :bubblesort:flag
jump 108 always 0 0
set :bubblesort:a :bubblesort:b
set *tmp22 :bubblesort:a
op add :bubblesort:i :bubblesort:i 1
jump 77 always 0 0
op equal *tmp28 :bubblesort:flag false
jump 115 equal *tmp28 false
jump 152 always 0 0
set *tmp29 null
jump 116 always 0 0
set *tmp29 null
set :bubblesort:a .b*9
op sub :bubblesort:i.1 9 1
jump 151 lessThan :bubblesort:i.1 0
set *tmp30 :bubblesort:i.1
set .b*ret 123
set .b*ind *tmp30
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp30
read *tmp31 @this .b*elem
set :bubblesort:b.1 *tmp31
jump 129 equal :bubblesort:maxToMin false
op greaterThan *tmp33 :bubblesort:a :bubblesort:b.1
set *tmp32 *tmp33
jump 131 always 0 0
op lessThan *tmp34 :bubblesort:a :bubblesort:b.1
set *tmp32 *tmp34
set :bubblesort:condition.1 *tmp32
jump 147 equal :bubblesort:condition.1 false
op add *tmp36 :bubblesort:i.1 1
set *tmp37 *tmp36
set .b*ret 138
set .b*ind *tmp37
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp37
write :bubblesort:b.1 @this .b*elem
set *tmp39 :bubblesort:i.1
set .b*ret 143
set .b*ind *tmp39
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp39
write :bubblesort:a @this .b*elem
set :bubblesort:flag true
set *tmp35 :bubblesort:flag
jump 149 always 0 0
set :bubblesort:a :bubblesort:b.1
set *tmp35 :bubblesort:a
op sub :bubblesort:i.1 :bubblesort:i.1 1
jump 118 always 0 0
jump 74 notEqual :bubblesort:flag false
assertflush
print .b*0
print .b*1
print .b*2
print .b*3
print .b*4
print .b*5
print .b*6
print .b*7
print .b*8
print .b*9
assertprints "0123456789" "Array sort 1"
set :bubblesort.1:maxToMin true
set :bubblesort.1:flag false
set :bubblesort.1:a .b*0
set :bubblesort.1:i 1
jump 224 greaterThanEq :bubblesort.1:i 10
set *tmp41 :bubblesort.1:i
set .b*ret 173
set .b*ind *tmp41
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp41
read *tmp42 @this .b*elem
set :bubblesort.1:b *tmp42
jump 179 equal :bubblesort.1:maxToMin false
op lessThan *tmp44 :bubblesort.1:a :bubblesort.1:b
set *tmp43 *tmp44
jump 181 always 0 0
op greaterThan *tmp45 :bubblesort.1:a :bubblesort.1:b
set *tmp43 *tmp45
set :bubblesort.1:condition *tmp43
jump 220 equal :bubblesort.1:condition false
op sub *tmp47 :bubblesort.1:i 1
set *tmp48 *tmp47
set .b*ret 188
set .b*ind *tmp48
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp48
write :bubblesort.1:b @this .b*elem
set *tmp50 :bubblesort.1:i
set .b*ret 193
set .b*ind *tmp50
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp50
write :bubblesort.1:a @this .b*elem
op sub *tmp52 :bubblesort.1:i 1
set *tmp53 *tmp52
set .c*ret 199
set .c*ind *tmp53
read @counter "ŀłńņňŀłńņň" *tmp53
read *tmp54 @this .c*elem
set :bubblesort.1:v *tmp54
op sub *tmp55 :bubblesort.1:i 1
set *tmp56 *tmp55
set *tmp58 :bubblesort.1:i
set .c*ret 207
set .c*ind *tmp58
read @counter "ŀłńņňŀłńņň" *tmp58
read *tmp59 @this .c*elem
set .c*ret 211
set .c*ind *tmp56
read @counter "ŀłńņňŀłńņň" *tmp56
write *tmp59 @this .c*elem
set *tmp60 :bubblesort.1:i
set .c*ret 216
set .c*ind *tmp60
read @counter "ŀłńņňŀłńņň" *tmp60
write :bubblesort.1:v @this .c*elem
set :bubblesort.1:flag true
set *tmp46 :bubblesort.1:flag
jump 222 always 0 0
set :bubblesort.1:a :bubblesort.1:b
set *tmp46 :bubblesort.1:a
op add :bubblesort.1:i :bubblesort.1:i 1
jump 168 always 0 0
op equal *tmp62 :bubblesort.1:flag false
jump 229 equal *tmp62 false
jump 289 always 0 0
set *tmp63 null
jump 230 always 0 0
set *tmp63 null
set :bubblesort.1:a .b*9
op sub :bubblesort.1:i.1 9 1
jump 288 lessThan :bubblesort.1:i.1 0
set *tmp64 :bubblesort.1:i.1
set .b*ret 237
set .b*ind *tmp64
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp64
read *tmp65 @this .b*elem
set :bubblesort.1:b.1 *tmp65
jump 243 equal :bubblesort.1:maxToMin false
op greaterThan *tmp67 :bubblesort.1:a :bubblesort.1:b.1
set *tmp66 *tmp67
jump 245 always 0 0
op lessThan *tmp68 :bubblesort.1:a :bubblesort.1:b.1
set *tmp66 *tmp68
set :bubblesort.1:condition.1 *tmp66
jump 284 equal :bubblesort.1:condition.1 false
op add *tmp70 :bubblesort.1:i.1 1
set *tmp71 *tmp70
set .b*ret 252
set .b*ind *tmp71
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp71
write :bubblesort.1:b.1 @this .b*elem
set *tmp73 :bubblesort.1:i.1
set .b*ret 257
set .b*ind *tmp73
read @counter "ĵķĹĻĽĵķĹĻĽ" *tmp73
write :bubblesort.1:a @this .b*elem
op add *tmp75 :bubblesort.1:i.1 1
set *tmp76 *tmp75
set .c*ret 263
set .c*ind *tmp76
read @counter "ŀłńņňŀłńņň" *tmp76
read *tmp77 @this .c*elem
set :bubblesort.1:v.1 *tmp77
op add *tmp78 :bubblesort.1:i.1 1
set *tmp79 *tmp78
set *tmp81 :bubblesort.1:i.1
set .c*ret 271
set .c*ind *tmp81
read @counter "ŀłńņňŀłńņň" *tmp81
read *tmp82 @this .c*elem
set .c*ret 275
set .c*ind *tmp79
read @counter "ŀłńņňŀłńņň" *tmp79
write *tmp82 @this .c*elem
set *tmp83 :bubblesort.1:i.1
set .c*ret 280
set .c*ind *tmp83
read @counter "ŀłńņňŀłńņň" *tmp83
write :bubblesort.1:v.1 @this .c*elem
set :bubblesort.1:flag true
set *tmp69 :bubblesort.1:flag
jump 286 always 0 0
set :bubblesort.1:a :bubblesort.1:b.1
set *tmp69 :bubblesort.1:a
op sub :bubblesort.1:i.1 :bubblesort.1:i.1 1
jump 232 always 0 0
jump 165 notEqual :bubblesort.1:flag false
assertflush
print .c*0
print .c*1
print .c*2
print .c*3
print .c*4
print .c*5
print .c*6
print .c*7
print .c*8
print .c*9
assertprints "9876543210" "Array sort 2"
end
select .a*elem lessThan .a*ind 3 ".a*0" ".a*3"
set @counter .a*ret
select .a*elem lessThan .a*ind 3 ".a*1" ".a*4"
set @counter .a*ret
set .a*elem ".a*2"
set @counter .a*ret
end
select .b*elem lessThan .b*ind 5 ".b*0" ".b*5"
set @counter .b*ret
select .b*elem lessThan .b*ind 5 ".b*1" ".b*6"
set @counter .b*ret
select .b*elem lessThan .b*ind 5 ".b*2" ".b*7"
set @counter .b*ret
select .b*elem lessThan .b*ind 5 ".b*3" ".b*8"
set @counter .b*ret
select .b*elem lessThan .b*ind 5 ".b*4" ".b*9"
set @counter .b*ret
end
select .c*elem lessThan .c*ind 5 ".c*0" ".c*5"
set @counter .c*ret
select .c*elem lessThan .c*ind 5 ".c*1" ".c*6"
set @counter .c*ret
select .c*elem lessThan .c*ind 5 ".c*2" ".c*7"
set @counter .c*ret
select .c*elem lessThan .c*ind 5 ".c*3" ".c*8"
set @counter .c*ret
select .c*elem lessThan .c*ind 5 ".c*4" ".c*9"
set @counter .c*ret
print "Compiled by Mindcode - github.com/cardillan/mindcode"
