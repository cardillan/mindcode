  1540 instructions before optimizations.
    71 instructions eliminated by Temp Variables Elimination (9 iterations).
   124 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions modified by Jump Normalization (8 iterations).
    66 instructions eliminated by Jump Optimization (8 iterations).
    41 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
    12 instructions modified by Expression Optimization (3 passes, 6 iterations).
    47 instructions eliminated by If Expression Optimization (4 passes, 14 iterations).
   283 instructions eliminated by Data Flow Optimization (12 passes, 41 iterations).
    84 instructions added by Loop Unrolling (16 iterations).
    10 loops unrolled by Loop Unrolling.
    30 instructions updated by Jump Threading.
     4 instructions eliminated by Unreachable Code Elimination (2 iterations).
   988 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 3):
    Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
  * Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
    Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 16):
    Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
  * Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 29):
  * Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity (-8 instructions)
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 37):
  * Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity (-9 instructions)
    Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
    Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 46):
    Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
    Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 33):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +532, benefit       35.0, efficiency      0.066
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 20):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 7):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  * Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143 (+7 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +265, benefit       23.0, efficiency      0.087
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 2: speed optimization selection (cost limit 10):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +253, benefit       23.0, efficiency      0.091
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+5 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 2: speed optimization selection (cost limit 5):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 3: speed optimization selection (cost limit 7):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  * Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143 (+5 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 3: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +265, benefit       23.0, efficiency      0.087
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 4: speed optimization selection (cost limit 4):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +253, benefit       23.0, efficiency      0.091
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 5: speed optimization selection (cost limit 6):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 6: speed optimization selection (cost limit 6):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Final code before resolving virtual instructions:

    0:  assertequals 5 5 "distance(1,1,4,5)"
    1:  assertequals 5 5 "distance(-1,-1,-4,-5)"
    2:  assertequals 2 2 "round(1.5)"
    3:  assertequals 2 2 "round(1.7)"
    4:  assertequals 2 2 "round(2.1)"
    5:  assertequals 3 3 "round(2.5)"
    6:  assertequals -3 -3 "round(-3.5)"
    7:  assertequals 0.5 0.5 "frac(3.5)"
    8:  assertequals -0.5 -0.5 "frac(-1.5)"
    9:  assertequals 0 0 "signInexact(0)"
   10:  assertequals 0 0 "signInexact(1e-7)"
   11:  assertequals 1 1 "signInexact(1e-5)"
   12:  assertequals -1 -1 "sign(-5)"
   13:  assertequals 0 0 "sign(0)"
   14:  assertequals 1 1 "sign(1e-7)"
   15:  assertequals -1 -1 "sign(-1e-7)"
   16:  assertequals true true "isZero(0)"
   17:  assertequals false false "isZero(1e-50)"
   18:  assertequals false false "isZero(-1e-50)"
   19:  assertequals false false "isZero(0.01,0.01)"
   20:  op add :nullToZero:result null 0
   21:  assertequals 0 :nullToZero:result "nullToZero(null)"
   22:  op add :nullToZero.1:result 1 0
   23:  assertequals 1 :nullToZero.1:result "nullToZero(1)"
   24:  assertequals 0 false "boolean(0)"
   25:  assertequals 1 true "boolean(100)"
   26:  assertequals 1 true "boolean(-100)"
   27:  assertequals 1 true "boolean(-0.001)"
   28:  assertequals 0 false "boolean(0.0000001)"
   29:  op or :integer:result 0.9 0
   30:  assertequals 0 :integer:result "integer(0.9)"
   31:  op or :integer.1:result -5.9 0
   32:  assertequals -5 :integer.1:result "integer(-5.9)"
   33:  op or :integer.2:result 100 0
   34:  assertequals 100 :integer.2:result "integer(100)"
   35:  assertequals 1 1 "sum(1)"
   36:  assertequals 10 10 "sum(1,2,3,4)"
   37:  assertequals 1 1 "avg(1)"
   38:  assertequals 2.5 2.5 "avg(1,2,3,4)"
   39:  assertequals 2 2 "logn(25, 5)"
   40:  assertequals 4 4 "logn(10000, 10)"
   41:  assertequals 4 4 "log2(16)"
   42:  assertequals 30 30 "log2(1 << 30)"
   43:  assertequals 1 1 "lerp(1, 10, 0)"
   44:  assertequals 10 10 "lerp(1, 10, 1)"
   45:  assertequals 5.5 5.5 "lerp(1, 10, 0.5)"
   46:  assertequals 1 1 "median(1)"
   47:  assertequals 3 3 "median(2,4)"
   48:  assertequals 3 3 "median(1,3,5)"
   49:  assertequals 1 1 "median(1,1,1)"
   50:  assertequals 1 1 "median(1,1,3)"
   51:  assertequals 3 3 "median(1,3,3)"
   52:  set :median:x1 2
   53:  set :median:x2 4
   54:  set :median:x3 6
   55:  set :median:x4 8
   56:  setaddr :median*retaddr *label30
   57:  call *label1 *invalid :median*retval
        label *label30
   58:  assertequals 5 :median*retval "median(2,4,6,8)"
   59:  set :median:x1 8
   60:  set :median:x2 6
   61:  set :median:x3 4
   62:  set :median:x4 2
   63:  setaddr :median*retaddr *label31
   64:  call *label1 *invalid :median*retval
        label *label31
   65:  assertequals 5 :median*retval "median(8,6,4,2)"
   66:  set :median:x1 4
   67:  set :median:x2 8
   68:  set :median:x3 2
   69:  set :median:x4 6
   70:  setaddr :median*retaddr *label32
   71:  call *label1 *invalid :median*retval
        label *label32
   72:  assertequals 5 :median*retval "median(4,8,2,6)"
   73:  set :median:x1 2
   74:  set :median:x2 6
   75:  set :median:x3 4
   76:  set :median:x4 8
   77:  setaddr :median*retaddr *label33
   78:  call *label1 *invalid :median*retval
        label *label33
   79:  assertequals 5 :median*retval "median(2,6,4,8)"
   80:  set :median:x1 6
   81:  set :median:x2 2
   82:  set :median:x3 8
   83:  set :median:x4 4
   84:  setaddr :median*retaddr *label34
   85:  call *label1 *invalid :median*retval
        label *label34
   86:  assertequals 5 :median*retval "median(6,2,8,4)"
   87:  set :median.1:x1 1
   88:  set :median.1:x2 2
   89:  set :median.1:x3 3
   90:  set :median.1:x4 4
   91:  set :median.1:x5 5
   92:  setaddr :median.1*retaddr *label35
   93:  call *label2 *invalid :median.1*retval
        label *label35
   94:  assertequals 3 :median.1*retval "median(1,2,3,4,5)"
   95:  set :median.1:x1 5
   96:  set :median.1:x2 4
   97:  set :median.1:x4 2
   98:  set :median.1:x5 1
   99:  setaddr :median.1*retaddr *label36
  100:  call *label2 *invalid :median.1*retval
        label *label36
  101:  assertequals 3 :median.1*retval "median(5,4,3,2,1)"
  102:  set :median.1:x1 1
  103:  set :median.1:x2 1
  104:  set :median.1:x3 1
  105:  set :median.1:x4 1
  106:  setaddr :median.1*retaddr *label37
  107:  call *label2 *invalid :median.1*retval
        label *label37
  108:  assertequals 1 :median.1*retval "median(1,1,1,1,1)"
  109:  set :median.1:x5 5
  110:  setaddr :median.1*retaddr *label38
  111:  call *label2 *invalid :median.1*retval
        label *label38
  112:  assertequals 1 :median.1*retval "median(1,1,1,1,5)"
  113:  set :median.1:x4 5
  114:  setaddr :median.1*retaddr *label39
  115:  call *label2 *invalid :median.1*retval
        label *label39
  116:  assertequals 1 :median.1*retval "median(1,1,1,5,5)"
  117:  set :median.1:x3 5
  118:  setaddr :median.1*retaddr *label40
  119:  call *label2 *invalid :median.1*retval
        label *label40
  120:  assertequals 5 :median.1*retval "median(1,1,5,5,5)"
  121:  set :median.1:x2 5
  122:  setaddr :median.1*retaddr *label41
  123:  call *label2 *invalid :median.1*retval
        label *label41
  124:  assertequals 5 :median.1*retval "median(1,5,5,5,5)"
  125:  set :median.1:x1 5
  126:  setaddr :median.1*retaddr *label42
  127:  call *label2 *invalid :median.1*retval
        label *label42
  128:  assertequals 5 :median.1*retval "median(5,5,5,5,5)"
  129:  set :_median:bestDif 10000000000
  130:  set :_median:best null
  131:  set :_median:count 1
  132:  setaddr *tmp66 *label48
  133:  jump *label70 always 0 0
        multilabel *label48
  134:  setaddr *tmp66 *label49
  135:  jump *label70 always 0 0
        multilabel *label49
  136:  setaddr *tmp66 *label50
  137:  jump *label70 always 0 0
        multilabel *label50
  138:  setaddr *tmp66 *label51
  139:  jump *label70 always 0 0
        multilabel *label51
  140:  setaddr *tmp66 *label52
  141:  jump *label70 always 0 0
        multilabel *label52
  142:  setaddr *tmp66 *label53
        label *label70
  143:  jump *label72 greaterThanEq 0 :_median:bestDif
  144:  set :_median:bestDif 0
  145:  set :_median:best 1
  146:  set :_median:count 1
  147:  multijump *tmp66 0 0
        label *label72
  148:  jump *label74 greaterThan 0 :_median:bestDif
  149:  op add :_median:best :_median:best 1
  150:  op add :_median:count :_median:count 1
        label *label74
  151:  multijump *tmp66 0 0
        multilabel *label53
  152:  op div *tmp65 :_median:best :_median:count
  153:  assertequals 1 *tmp65 "median(1,1,1,1,1,1)"
  154:  set :_median.1:bestDif 10000000000
  155:  set :_median.1:best null
  156:  set :_median.1:count 1
  157:  set :_median.1:i 1
  158:  setaddr *tmp88 *label81
  159:  jump *label78 always 0 0
        multilabel *label81
  160:  set :_median.1:i 1
  161:  setaddr *tmp88 *label82
  162:  jump *label78 always 0 0
        multilabel *label82
  163:  set :_median.1:i 1
  164:  setaddr *tmp88 *label83
  165:  jump *label78 always 0 0
        multilabel *label83
  166:  set :_median.1:i 1
  167:  setaddr *tmp88 *label84
  168:  jump *label78 always 0 0
        multilabel *label84
  169:  set :_median.1:i 1
  170:  setaddr *tmp88 *label85
  171:  jump *label78 always 0 0
        multilabel *label85
  172:  set :_median.1:i 5
  173:  setaddr *tmp88 *label86
        label *label78
  174:  select *tmp654 greaterThan 1 :_median.1:i 1 0
  175:  select :_isMedian.1:lt lessThan 1 :_median.1:i 1 0
  176:  select :_isMedian.1:gt lessThan 1 :_median.1:i 0 *tmp654
  177:  jump *label781 greaterThanEq 1 :_median.1:i
  178:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  179:  jump *label784 always 0 0
        label *label781
  180:  jump *label782 lessThanEq 1 :_median.1:i
  181:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label782
        label *label784
  182:  jump *label789 greaterThanEq 1 :_median.1:i
  183:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  184:  jump *label792 always 0 0
        label *label789
  185:  jump *label790 lessThanEq 1 :_median.1:i
  186:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label790
        label *label792
  187:  jump *label797 greaterThanEq 1 :_median.1:i
  188:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  189:  jump *label800 always 0 0
        label *label797
  190:  jump *label798 lessThanEq 1 :_median.1:i
  191:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label798
        label *label800
  192:  jump *label805 greaterThanEq 1 :_median.1:i
  193:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  194:  jump *label808 always 0 0
        label *label805
  195:  jump *label806 lessThanEq 1 :_median.1:i
  196:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label806
        label *label808
  197:  jump *label813 greaterThanEq 5 :_median.1:i
  198:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  199:  jump *label816 always 0 0
        label *label813
  200:  jump *label814 lessThanEq 5 :_median.1:i
  201:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label814
        label *label816
  202:  op sub *tmp95 :_isMedian.1:gt :_isMedian.1:lt
  203:  op abs :_isMedian.1:dif *tmp95 0
  204:  op add *tmp97 :_isMedian.1:gt :_isMedian.1:lt
  205:  op equal *tmp366 :_isMedian.1:gt :_isMedian.1:lt
  206:  select *tmp100 greaterThanEq *tmp97 5 *tmp366 false
  207:  jump *label103 equal *tmp100 false
  208:  set *tmp87 :_median.1:i
  209:  jump *label77 always 0 0
        label *label103
  210:  jump *label105 greaterThanEq :_isMedian.1:dif :_median.1:bestDif
  211:  set :_median.1:bestDif :_isMedian.1:dif
  212:  set :_median.1:best :_median.1:i
  213:  set :_median.1:count 1
  214:  multijump *tmp88 0 0
        label *label105
  215:  jump *label107 greaterThan :_isMedian.1:dif :_median.1:bestDif
  216:  op add :_median.1:best :_median.1:best :_median.1:i
  217:  op add :_median.1:count :_median.1:count 1
        label *label107
  218:  multijump *tmp88 0 0
        multilabel *label86
  219:  op div *tmp87 :_median.1:best :_median.1:count
        label *label77
  220:  assertequals 1 *tmp87 "median(1,1,1,1,1,5)"
  221:  set :_median.2:bestDif 10000000000
  222:  set :_median.2:best null
  223:  set :_median.2:count 1
  224:  set :_median.2:i 1
  225:  setaddr *tmp110 *label114
  226:  jump *label111 always 0 0
        multilabel *label114
  227:  set :_median.2:i 1
  228:  setaddr *tmp110 *label115
  229:  jump *label111 always 0 0
        multilabel *label115
  230:  set :_median.2:i 1
  231:  setaddr *tmp110 *label116
  232:  jump *label111 always 0 0
        multilabel *label116
  233:  set :_median.2:i 1
  234:  setaddr *tmp110 *label117
  235:  jump *label111 always 0 0
        multilabel *label117
  236:  set :_median.2:i 5
  237:  setaddr *tmp110 *label118
  238:  jump *label111 always 0 0
        multilabel *label118
  239:  set :_median.2:i 5
  240:  setaddr *tmp110 *label119
        label *label111
  241:  select *tmp1371 greaterThan 1 :_median.2:i 1 0
  242:  select :_isMedian.2:lt lessThan 1 :_median.2:i 1 0
  243:  select :_isMedian.2:gt lessThan 1 :_median.2:i 0 *tmp1371
  244:  jump *label903 greaterThanEq 1 :_median.2:i
  245:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  246:  jump *label906 always 0 0
        label *label903
  247:  jump *label904 lessThanEq 1 :_median.2:i
  248:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label904
        label *label906
  249:  jump *label911 greaterThanEq 1 :_median.2:i
  250:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  251:  jump *label914 always 0 0
        label *label911
  252:  jump *label912 lessThanEq 1 :_median.2:i
  253:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label912
        label *label914
  254:  jump *label919 greaterThanEq 1 :_median.2:i
  255:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  256:  jump *label922 always 0 0
        label *label919
  257:  jump *label920 lessThanEq 1 :_median.2:i
  258:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label920
        label *label922
  259:  jump *label927 greaterThanEq 5 :_median.2:i
  260:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  261:  jump *label930 always 0 0
        label *label927
  262:  jump *label928 lessThanEq 5 :_median.2:i
  263:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label928
        label *label930
  264:  jump *label935 greaterThanEq 5 :_median.2:i
  265:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  266:  jump *label938 always 0 0
        label *label935
  267:  jump *label936 lessThanEq 5 :_median.2:i
  268:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label936
        label *label938
  269:  op sub *tmp117 :_isMedian.2:gt :_isMedian.2:lt
  270:  op abs :_isMedian.2:dif *tmp117 0
  271:  op add *tmp119 :_isMedian.2:gt :_isMedian.2:lt
  272:  op equal *tmp371 :_isMedian.2:gt :_isMedian.2:lt
  273:  select *tmp122 greaterThanEq *tmp119 5 *tmp371 false
  274:  jump *label136 equal *tmp122 false
  275:  set *tmp109 :_median.2:i
  276:  jump *label110 always 0 0
        label *label136
  277:  jump *label138 greaterThanEq :_isMedian.2:dif :_median.2:bestDif
  278:  set :_median.2:bestDif :_isMedian.2:dif
  279:  set :_median.2:best :_median.2:i
  280:  set :_median.2:count 1
  281:  multijump *tmp110 0 0
        label *label138
  282:  jump *label140 greaterThan :_isMedian.2:dif :_median.2:bestDif
  283:  op add :_median.2:best :_median.2:best :_median.2:i
  284:  op add :_median.2:count :_median.2:count 1
        label *label140
  285:  multijump *tmp110 0 0
        multilabel *label119
  286:  op div *tmp109 :_median.2:best :_median.2:count
        label *label110
  287:  assertequals 1 *tmp109 "median(1,1,1,1,5,5)"
  288:  set :_median.3:bestDif 10000000000
  289:  set :_median.3:best null
  290:  set :_median.3:count 1
  291:  set :_median.3:i 1
  292:  setaddr *tmp132 *label147
  293:  jump *label144 always 0 0
        multilabel *label147
  294:  set :_median.3:i 1
  295:  setaddr *tmp132 *label148
  296:  jump *label144 always 0 0
        multilabel *label148
  297:  set :_median.3:i 1
  298:  setaddr *tmp132 *label149
  299:  jump *label144 always 0 0
        multilabel *label149
  300:  set :_median.3:i 5
  301:  setaddr *tmp132 *label150
  302:  jump *label144 always 0 0
        multilabel *label150
  303:  set :_median.3:i 5
  304:  setaddr *tmp132 *label151
  305:  jump *label144 always 0 0
        multilabel *label151
  306:  set :_median.3:i 5
  307:  setaddr *tmp132 *label152
        label *label144
  308:  set :_isMedian.3:lt 0
  309:  set :_isMedian.3:gt 0
  310:  set :_isMedian.3:i 1
  311:  setaddr *tmp134 *label157
  312:  jump *label154 always 0 0
        multilabel *label157
  313:  set :_isMedian.3:i 1
  314:  setaddr *tmp134 *label158
  315:  jump *label154 always 0 0
        multilabel *label158
  316:  set :_isMedian.3:i 1
  317:  setaddr *tmp134 *label159
  318:  jump *label154 always 0 0
        multilabel *label159
  319:  set :_isMedian.3:i 5
  320:  setaddr *tmp134 *label160
  321:  jump *label154 always 0 0
        multilabel *label160
  322:  set :_isMedian.3:i 5
  323:  setaddr *tmp134 *label161
  324:  jump *label154 always 0 0
        multilabel *label161
  325:  set :_isMedian.3:i 5
  326:  setaddr *tmp134 *label162
        label *label154
  327:  jump *label163 greaterThanEq :_isMedian.3:i :_median.3:i
  328:  op add :_isMedian.3:lt :_isMedian.3:lt 1
  329:  multijump *tmp134 0 0
        label *label163
  330:  jump *label165 lessThanEq :_isMedian.3:i :_median.3:i
  331:  op add :_isMedian.3:gt :_isMedian.3:gt 1
        label *label165
  332:  multijump *tmp134 0 0
        multilabel *label162
  333:  op sub *tmp139 :_isMedian.3:gt :_isMedian.3:lt
  334:  op abs :_isMedian.3:dif *tmp139 0
  335:  op add *tmp141 :_isMedian.3:gt :_isMedian.3:lt
  336:  op equal *tmp376 :_isMedian.3:gt :_isMedian.3:lt
  337:  select *tmp144 greaterThanEq *tmp141 5 *tmp376 false
  338:  jump *label169 equal *tmp144 false
  339:  set *tmp131 :_median.3:i
  340:  jump *label143 always 0 0
        label *label169
  341:  jump *label171 greaterThanEq :_isMedian.3:dif :_median.3:bestDif
  342:  set :_median.3:bestDif :_isMedian.3:dif
  343:  set :_median.3:best :_median.3:i
  344:  set :_median.3:count 1
  345:  multijump *tmp132 0 0
        label *label171
  346:  jump *label173 greaterThan :_isMedian.3:dif :_median.3:bestDif
  347:  op add :_median.3:best :_median.3:best :_median.3:i
  348:  op add :_median.3:count :_median.3:count 1
        label *label173
  349:  multijump *tmp132 0 0
        multilabel *label152
  350:  op div *tmp131 :_median.3:best :_median.3:count
        label *label143
  351:  assertequals 3 *tmp131 "median(1,1,1,5,5,5)"
  352:  set :_median.4:bestDif 10000000000
  353:  set :_median.4:best null
  354:  set :_median.4:count 1
  355:  set :_median.4:i 1
  356:  setaddr *tmp154 *label180
  357:  jump *label177 always 0 0
        multilabel *label180
  358:  set :_median.4:i 1
  359:  setaddr *tmp154 *label181
  360:  jump *label177 always 0 0
        multilabel *label181
  361:  set :_median.4:i 5
  362:  setaddr *tmp154 *label182
  363:  jump *label177 always 0 0
        multilabel *label182
  364:  set :_median.4:i 5
  365:  setaddr *tmp154 *label183
  366:  jump *label177 always 0 0
        multilabel *label183
  367:  set :_median.4:i 5
  368:  setaddr *tmp154 *label184
  369:  jump *label177 always 0 0
        multilabel *label184
  370:  set :_median.4:i 5
  371:  setaddr *tmp154 *label185
        label *label177
  372:  set :_isMedian.4:lt 0
  373:  set :_isMedian.4:gt 0
  374:  set :_isMedian.4:i 1
  375:  setaddr *tmp156 *label190
  376:  jump *label187 always 0 0
        multilabel *label190
  377:  set :_isMedian.4:i 1
  378:  setaddr *tmp156 *label191
  379:  jump *label187 always 0 0
        multilabel *label191
  380:  set :_isMedian.4:i 5
  381:  setaddr *tmp156 *label192
  382:  jump *label187 always 0 0
        multilabel *label192
  383:  set :_isMedian.4:i 5
  384:  setaddr *tmp156 *label193
  385:  jump *label187 always 0 0
        multilabel *label193
  386:  set :_isMedian.4:i 5
  387:  setaddr *tmp156 *label194
  388:  jump *label187 always 0 0
        multilabel *label194
  389:  set :_isMedian.4:i 5
  390:  setaddr *tmp156 *label195
        label *label187
  391:  jump *label196 greaterThanEq :_isMedian.4:i :_median.4:i
  392:  op add :_isMedian.4:lt :_isMedian.4:lt 1
  393:  multijump *tmp156 0 0
        label *label196
  394:  jump *label198 lessThanEq :_isMedian.4:i :_median.4:i
  395:  op add :_isMedian.4:gt :_isMedian.4:gt 1
        label *label198
  396:  multijump *tmp156 0 0
        multilabel *label195
  397:  op sub *tmp161 :_isMedian.4:gt :_isMedian.4:lt
  398:  op abs :_isMedian.4:dif *tmp161 0
  399:  op add *tmp163 :_isMedian.4:gt :_isMedian.4:lt
  400:  op equal *tmp381 :_isMedian.4:gt :_isMedian.4:lt
  401:  select *tmp166 greaterThanEq *tmp163 5 *tmp381 false
  402:  jump *label202 equal *tmp166 false
  403:  set *tmp153 :_median.4:i
  404:  jump *label176 always 0 0
        label *label202
  405:  jump *label204 greaterThanEq :_isMedian.4:dif :_median.4:bestDif
  406:  set :_median.4:bestDif :_isMedian.4:dif
  407:  set :_median.4:best :_median.4:i
  408:  set :_median.4:count 1
  409:  multijump *tmp154 0 0
        label *label204
  410:  jump *label206 greaterThan :_isMedian.4:dif :_median.4:bestDif
  411:  op add :_median.4:best :_median.4:best :_median.4:i
  412:  op add :_median.4:count :_median.4:count 1
        label *label206
  413:  multijump *tmp154 0 0
        multilabel *label185
  414:  op div *tmp153 :_median.4:best :_median.4:count
        label *label176
  415:  assertequals 5 *tmp153 "median(1,1,5,5,5,5)"
  416:  set :_median.5:bestDif 10000000000
  417:  set :_median.5:best null
  418:  set :_median.5:count 1
  419:  set :_median.5:i 1
  420:  setaddr *tmp176 *label213
  421:  jump *label210 always 0 0
        multilabel *label213
  422:  set :_median.5:i 5
  423:  setaddr *tmp176 *label214
  424:  jump *label210 always 0 0
        multilabel *label214
  425:  set :_median.5:i 5
  426:  setaddr *tmp176 *label215
  427:  jump *label210 always 0 0
        multilabel *label215
  428:  set :_median.5:i 5
  429:  setaddr *tmp176 *label216
  430:  jump *label210 always 0 0
        multilabel *label216
  431:  set :_median.5:i 5
  432:  setaddr *tmp176 *label217
  433:  jump *label210 always 0 0
        multilabel *label217
  434:  set :_median.5:i 5
  435:  setaddr *tmp176 *label218
        label *label210
  436:  set :_isMedian.5:lt 0
  437:  set :_isMedian.5:gt 0
  438:  set :_isMedian.5:i 1
  439:  setaddr *tmp178 *label223
  440:  jump *label220 always 0 0
        multilabel *label223
  441:  set :_isMedian.5:i 5
  442:  setaddr *tmp178 *label224
  443:  jump *label220 always 0 0
        multilabel *label224
  444:  set :_isMedian.5:i 5
  445:  setaddr *tmp178 *label225
  446:  jump *label220 always 0 0
        multilabel *label225
  447:  set :_isMedian.5:i 5
  448:  setaddr *tmp178 *label226
  449:  jump *label220 always 0 0
        multilabel *label226
  450:  set :_isMedian.5:i 5
  451:  setaddr *tmp178 *label227
  452:  jump *label220 always 0 0
        multilabel *label227
  453:  set :_isMedian.5:i 5
  454:  setaddr *tmp178 *label228
        label *label220
  455:  jump *label229 greaterThanEq :_isMedian.5:i :_median.5:i
  456:  op add :_isMedian.5:lt :_isMedian.5:lt 1
  457:  multijump *tmp178 0 0
        label *label229
  458:  jump *label231 lessThanEq :_isMedian.5:i :_median.5:i
  459:  op add :_isMedian.5:gt :_isMedian.5:gt 1
        label *label231
  460:  multijump *tmp178 0 0
        multilabel *label228
  461:  op sub *tmp183 :_isMedian.5:gt :_isMedian.5:lt
  462:  op abs :_isMedian.5:dif *tmp183 0
  463:  op add *tmp185 :_isMedian.5:gt :_isMedian.5:lt
  464:  op equal *tmp386 :_isMedian.5:gt :_isMedian.5:lt
  465:  select *tmp188 greaterThanEq *tmp185 5 *tmp386 false
  466:  jump *label235 equal *tmp188 false
  467:  set *tmp175 :_median.5:i
  468:  jump *label209 always 0 0
        label *label235
  469:  jump *label237 greaterThanEq :_isMedian.5:dif :_median.5:bestDif
  470:  set :_median.5:bestDif :_isMedian.5:dif
  471:  set :_median.5:best :_median.5:i
  472:  set :_median.5:count 1
  473:  multijump *tmp176 0 0
        label *label237
  474:  jump *label239 greaterThan :_isMedian.5:dif :_median.5:bestDif
  475:  op add :_median.5:best :_median.5:best :_median.5:i
  476:  op add :_median.5:count :_median.5:count 1
        label *label239
  477:  multijump *tmp176 0 0
        multilabel *label218
  478:  op div *tmp175 :_median.5:best :_median.5:count
        label *label209
  479:  assertequals 5 *tmp175 "median(1,5,5,5,5,5)"
  480:  set :_median.6:bestDif 10000000000
  481:  set :_median.6:best null
  482:  set :_median.6:count 1
  483:  setaddr *tmp198 *label246
  484:  jump *label268 always 0 0
        multilabel *label246
  485:  setaddr *tmp198 *label247
  486:  jump *label268 always 0 0
        multilabel *label247
  487:  setaddr *tmp198 *label248
  488:  jump *label268 always 0 0
        multilabel *label248
  489:  setaddr *tmp198 *label249
  490:  jump *label268 always 0 0
        multilabel *label249
  491:  setaddr *tmp198 *label250
  492:  jump *label268 always 0 0
        multilabel *label250
  493:  setaddr *tmp198 *label251
        label *label268
  494:  jump *label270 greaterThanEq 0 :_median.6:bestDif
  495:  set :_median.6:bestDif 0
  496:  set :_median.6:best 5
  497:  set :_median.6:count 1
  498:  multijump *tmp198 0 0
        label *label270
  499:  jump *label272 greaterThan 0 :_median.6:bestDif
  500:  op add :_median.6:best :_median.6:best 5
  501:  op add :_median.6:count :_median.6:count 1
        label *label272
  502:  multijump *tmp198 0 0
        multilabel *label251
  503:  op div *tmp197 :_median.6:best :_median.6:count
  504:  assertequals 5 *tmp197 "median(5,5,5,5,5,5)"
  505:  set :_median.7:bestDif 10000000000
  506:  set :_median.7:best null
  507:  set :_median.7:count 1
  508:  set :_median.7:i 1
  509:  setaddr *tmp220 *label279
  510:  jump *label276 always 0 0
        multilabel *label279
  511:  set :_median.7:i 2
  512:  setaddr *tmp220 *label280
  513:  jump *label276 always 0 0
        multilabel *label280
  514:  set :_median.7:i 3
  515:  setaddr *tmp220 *label281
  516:  jump *label276 always 0 0
        multilabel *label281
  517:  set :_median.7:i 4
  518:  setaddr *tmp220 *label282
  519:  jump *label276 always 0 0
        multilabel *label282
  520:  set :_median.7:i 5
  521:  setaddr *tmp220 *label283
  522:  jump *label276 always 0 0
        multilabel *label283
  523:  set :_median.7:i 6
  524:  setaddr *tmp220 *label284
  525:  jump *label276 always 0 0
        multilabel *label284
  526:  set :_median.7:i 7
  527:  setaddr *tmp220 *label285
  528:  jump *label276 always 0 0
        multilabel *label285
  529:  set :_median.7:i 8
  530:  setaddr *tmp220 *label286
  531:  jump *label276 always 0 0
        multilabel *label286
  532:  set :_median.7:i 9
  533:  setaddr *tmp220 *label287
        label *label276
  534:  select *tmp685 greaterThan 1 :_median.7:i 1 0
  535:  select :_isMedian.7:lt lessThan 1 :_median.7:i 1 0
  536:  select :_isMedian.7:gt lessThan 1 :_median.7:i 0 *tmp685
  537:  jump *label562 greaterThanEq 2 :_median.7:i
  538:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  539:  jump *label565 always 0 0
        label *label562
  540:  jump *label563 lessThanEq 2 :_median.7:i
  541:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label563
        label *label565
  542:  jump *label570 greaterThanEq 3 :_median.7:i
  543:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  544:  jump *label573 always 0 0
        label *label570
  545:  jump *label571 lessThanEq 3 :_median.7:i
  546:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label571
        label *label573
  547:  jump *label578 greaterThanEq 4 :_median.7:i
  548:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  549:  jump *label581 always 0 0
        label *label578
  550:  jump *label579 lessThanEq 4 :_median.7:i
  551:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label579
        label *label581
  552:  jump *label586 greaterThanEq 5 :_median.7:i
  553:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  554:  jump *label589 always 0 0
        label *label586
  555:  jump *label587 lessThanEq 5 :_median.7:i
  556:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label587
        label *label589
  557:  jump *label594 greaterThanEq 6 :_median.7:i
  558:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  559:  jump *label597 always 0 0
        label *label594
  560:  jump *label595 lessThanEq 6 :_median.7:i
  561:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label595
        label *label597
  562:  jump *label602 greaterThanEq 7 :_median.7:i
  563:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  564:  jump *label605 always 0 0
        label *label602
  565:  jump *label603 lessThanEq 7 :_median.7:i
  566:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label603
        label *label605
  567:  jump *label610 greaterThanEq 8 :_median.7:i
  568:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  569:  jump *label613 always 0 0
        label *label610
  570:  jump *label611 lessThanEq 8 :_median.7:i
  571:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label611
        label *label613
  572:  jump *label618 greaterThanEq 9 :_median.7:i
  573:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  574:  jump *label621 always 0 0
        label *label618
  575:  jump *label619 lessThanEq 9 :_median.7:i
  576:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label619
        label *label621
  577:  op sub *tmp227 :_isMedian.7:gt :_isMedian.7:lt
  578:  op abs :_isMedian.7:dif *tmp227 0
  579:  op add *tmp229 :_isMedian.7:gt :_isMedian.7:lt
  580:  op equal *tmp393 :_isMedian.7:gt :_isMedian.7:lt
  581:  select *tmp232 greaterThanEq *tmp229 8 *tmp393 false
  582:  jump *label307 equal *tmp232 false
  583:  set *tmp219 :_median.7:i
  584:  jump *label275 always 0 0
        label *label307
  585:  jump *label309 greaterThanEq :_isMedian.7:dif :_median.7:bestDif
  586:  set :_median.7:bestDif :_isMedian.7:dif
  587:  set :_median.7:best :_median.7:i
  588:  set :_median.7:count 1
  589:  multijump *tmp220 0 0
        label *label309
  590:  jump *label311 greaterThan :_isMedian.7:dif :_median.7:bestDif
  591:  op add :_median.7:best :_median.7:best :_median.7:i
  592:  op add :_median.7:count :_median.7:count 1
        label *label311
  593:  multijump *tmp220 0 0
        multilabel *label287
  594:  op div *tmp219 :_median.7:best :_median.7:count
        label *label275
  595:  assertequals 5 *tmp219 "median(1,2,3,4,5,6,7,8,9)"
  596:  set :_median.8:bestDif 10000000000
  597:  set :_median.8:best null
  598:  set :_median.8:count 1
  599:  set :_median.8:i 9
  600:  setaddr *tmp242 *label318
  601:  jump *label315 always 0 0
        multilabel *label318
  602:  set :_median.8:i 8
  603:  setaddr *tmp242 *label319
  604:  jump *label315 always 0 0
        multilabel *label319
  605:  set :_median.8:i 7
  606:  setaddr *tmp242 *label320
  607:  jump *label315 always 0 0
        multilabel *label320
  608:  set :_median.8:i 6
  609:  setaddr *tmp242 *label321
  610:  jump *label315 always 0 0
        multilabel *label321
  611:  set :_median.8:i 5
  612:  setaddr *tmp242 *label322
  613:  jump *label315 always 0 0
        multilabel *label322
  614:  set :_median.8:i 4
  615:  setaddr *tmp242 *label323
  616:  jump *label315 always 0 0
        multilabel *label323
  617:  set :_median.8:i 3
  618:  setaddr *tmp242 *label324
  619:  jump *label315 always 0 0
        multilabel *label324
  620:  set :_median.8:i 2
  621:  setaddr *tmp242 *label325
  622:  jump *label315 always 0 0
        multilabel *label325
  623:  set :_median.8:i 1
  624:  setaddr *tmp242 *label326
        label *label315
  625:  select *tmp704 greaterThan 9 :_median.8:i 1 0
  626:  select :_isMedian.8:lt lessThan 9 :_median.8:i 1 0
  627:  select :_isMedian.8:gt lessThan 9 :_median.8:i 0 *tmp704
  628:  jump *label635 greaterThanEq 8 :_median.8:i
  629:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  630:  jump *label638 always 0 0
        label *label635
  631:  jump *label636 lessThanEq 8 :_median.8:i
  632:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label636
        label *label638
  633:  jump *label643 greaterThanEq 7 :_median.8:i
  634:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  635:  jump *label646 always 0 0
        label *label643
  636:  jump *label644 lessThanEq 7 :_median.8:i
  637:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label644
        label *label646
  638:  jump *label651 greaterThanEq 6 :_median.8:i
  639:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  640:  jump *label654 always 0 0
        label *label651
  641:  jump *label652 lessThanEq 6 :_median.8:i
  642:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label652
        label *label654
  643:  jump *label659 greaterThanEq 5 :_median.8:i
  644:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  645:  jump *label662 always 0 0
        label *label659
  646:  jump *label660 lessThanEq 5 :_median.8:i
  647:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label660
        label *label662
  648:  jump *label667 greaterThanEq 4 :_median.8:i
  649:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  650:  jump *label670 always 0 0
        label *label667
  651:  jump *label668 lessThanEq 4 :_median.8:i
  652:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label668
        label *label670
  653:  jump *label675 greaterThanEq 3 :_median.8:i
  654:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  655:  jump *label678 always 0 0
        label *label675
  656:  jump *label676 lessThanEq 3 :_median.8:i
  657:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label676
        label *label678
  658:  jump *label683 greaterThanEq 2 :_median.8:i
  659:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  660:  jump *label686 always 0 0
        label *label683
  661:  jump *label684 lessThanEq 2 :_median.8:i
  662:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label684
        label *label686
  663:  jump *label691 greaterThanEq 1 :_median.8:i
  664:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  665:  jump *label694 always 0 0
        label *label691
  666:  jump *label692 lessThanEq 1 :_median.8:i
  667:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label692
        label *label694
  668:  op sub *tmp249 :_isMedian.8:gt :_isMedian.8:lt
  669:  op abs :_isMedian.8:dif *tmp249 0
  670:  op add *tmp251 :_isMedian.8:gt :_isMedian.8:lt
  671:  op equal *tmp398 :_isMedian.8:gt :_isMedian.8:lt
  672:  select *tmp254 greaterThanEq *tmp251 8 *tmp398 false
  673:  jump *label346 equal *tmp254 false
  674:  set *tmp241 :_median.8:i
  675:  jump *label314 always 0 0
        label *label346
  676:  jump *label348 greaterThanEq :_isMedian.8:dif :_median.8:bestDif
  677:  set :_median.8:bestDif :_isMedian.8:dif
  678:  set :_median.8:best :_median.8:i
  679:  set :_median.8:count 1
  680:  multijump *tmp242 0 0
        label *label348
  681:  jump *label350 greaterThan :_isMedian.8:dif :_median.8:bestDif
  682:  op add :_median.8:best :_median.8:best :_median.8:i
  683:  op add :_median.8:count :_median.8:count 1
        label *label350
  684:  multijump *tmp242 0 0
        multilabel *label326
  685:  op div *tmp241 :_median.8:best :_median.8:count
        label *label314
  686:  assertequals 5 *tmp241 "median(9,8,7,6,5,4,3,2,1)"
  687:  set :_median.9:bestDif 10000000000
  688:  set :_median.9:best null
  689:  set :_median.9:count 1
  690:  set :_median.9:i 1
  691:  setaddr *tmp264 *label357
  692:  jump *label354 always 0 0
        multilabel *label357
  693:  set :_median.9:i 3
  694:  setaddr *tmp264 *label358
  695:  jump *label354 always 0 0
        multilabel *label358
  696:  set :_median.9:i 5
  697:  setaddr *tmp264 *label359
  698:  jump *label354 always 0 0
        multilabel *label359
  699:  set :_median.9:i 7
  700:  setaddr *tmp264 *label360
  701:  jump *label354 always 0 0
        multilabel *label360
  702:  set :_median.9:i 9
  703:  setaddr *tmp264 *label361
  704:  jump *label354 always 0 0
        multilabel *label361
  705:  set :_median.9:i 2
  706:  setaddr *tmp264 *label362
  707:  jump *label354 always 0 0
        multilabel *label362
  708:  set :_median.9:i 4
  709:  setaddr *tmp264 *label363
  710:  jump *label354 always 0 0
        multilabel *label363
  711:  set :_median.9:i 6
  712:  setaddr *tmp264 *label364
  713:  jump *label354 always 0 0
        multilabel *label364
  714:  set :_median.9:i 8
  715:  setaddr *tmp264 *label365
        label *label354
  716:  select *tmp723 greaterThan 1 :_median.9:i 1 0
  717:  select :_isMedian.9:lt lessThan 1 :_median.9:i 1 0
  718:  select :_isMedian.9:gt lessThan 1 :_median.9:i 0 *tmp723
  719:  jump *label708 greaterThanEq 3 :_median.9:i
  720:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  721:  jump *label711 always 0 0
        label *label708
  722:  jump *label709 lessThanEq 3 :_median.9:i
  723:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label709
        label *label711
  724:  jump *label716 greaterThanEq 5 :_median.9:i
  725:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  726:  jump *label719 always 0 0
        label *label716
  727:  jump *label717 lessThanEq 5 :_median.9:i
  728:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label717
        label *label719
  729:  jump *label724 greaterThanEq 7 :_median.9:i
  730:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  731:  jump *label727 always 0 0
        label *label724
  732:  jump *label725 lessThanEq 7 :_median.9:i
  733:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label725
        label *label727
  734:  jump *label732 greaterThanEq 9 :_median.9:i
  735:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  736:  jump *label735 always 0 0
        label *label732
  737:  jump *label733 lessThanEq 9 :_median.9:i
  738:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label733
        label *label735
  739:  jump *label740 greaterThanEq 2 :_median.9:i
  740:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  741:  jump *label743 always 0 0
        label *label740
  742:  jump *label741 lessThanEq 2 :_median.9:i
  743:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label741
        label *label743
  744:  jump *label748 greaterThanEq 4 :_median.9:i
  745:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  746:  jump *label751 always 0 0
        label *label748
  747:  jump *label749 lessThanEq 4 :_median.9:i
  748:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label749
        label *label751
  749:  jump *label756 greaterThanEq 6 :_median.9:i
  750:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  751:  jump *label759 always 0 0
        label *label756
  752:  jump *label757 lessThanEq 6 :_median.9:i
  753:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label757
        label *label759
  754:  jump *label764 greaterThanEq 8 :_median.9:i
  755:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  756:  jump *label767 always 0 0
        label *label764
  757:  jump *label765 lessThanEq 8 :_median.9:i
  758:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label765
        label *label767
  759:  op sub *tmp271 :_isMedian.9:gt :_isMedian.9:lt
  760:  op abs :_isMedian.9:dif *tmp271 0
  761:  op add *tmp273 :_isMedian.9:gt :_isMedian.9:lt
  762:  op equal *tmp403 :_isMedian.9:gt :_isMedian.9:lt
  763:  select *tmp276 greaterThanEq *tmp273 8 *tmp403 false
  764:  jump *label385 equal *tmp276 false
  765:  set *tmp263 :_median.9:i
  766:  jump *label353 always 0 0
        label *label385
  767:  jump *label387 greaterThanEq :_isMedian.9:dif :_median.9:bestDif
  768:  set :_median.9:bestDif :_isMedian.9:dif
  769:  set :_median.9:best :_median.9:i
  770:  set :_median.9:count 1
  771:  multijump *tmp264 0 0
        label *label387
  772:  jump *label389 greaterThan :_isMedian.9:dif :_median.9:bestDif
  773:  op add :_median.9:best :_median.9:best :_median.9:i
  774:  op add :_median.9:count :_median.9:count 1
        label *label389
  775:  multijump *tmp264 0 0
        multilabel *label365
  776:  op div *tmp263 :_median.9:best :_median.9:count
        label *label353
  777:  assertequals 5 *tmp263 "median(1,3,5,7,9,2,4,6,8)"
  778:  set :_median.10:bestDif 10000000000
  779:  set :_median.10:best null
  780:  set :_median.10:count 1
  781:  set :_median.10:i 7
  782:  setaddr *tmp286 *label396
  783:  jump *label393 always 0 0
        multilabel *label396
  784:  set :_median.10:i 4
  785:  setaddr *tmp286 *label397
  786:  jump *label393 always 0 0
        multilabel *label397
  787:  set :_median.10:i 2
  788:  setaddr *tmp286 *label398
  789:  jump *label393 always 0 0
        multilabel *label398
  790:  set :_median.10:i 8
  791:  setaddr *tmp286 *label399
  792:  jump *label393 always 0 0
        multilabel *label399
  793:  set :_median.10:i 1
  794:  setaddr *tmp286 *label400
  795:  jump *label393 always 0 0
        multilabel *label400
  796:  set :_median.10:i 5
  797:  setaddr *tmp286 *label401
  798:  jump *label393 always 0 0
        multilabel *label401
  799:  set :_median.10:i 6
  800:  setaddr *tmp286 *label402
  801:  jump *label393 always 0 0
        multilabel *label402
  802:  set :_median.10:i 9
  803:  setaddr *tmp286 *label403
  804:  jump *label393 always 0 0
        multilabel *label403
  805:  set :_median.10:i 3
  806:  setaddr *tmp286 *label404
        label *label393
  807:  select *tmp1074 greaterThan 7 :_median.10:i 1 0
  808:  select :_isMedian.10:lt lessThan 7 :_median.10:i 1 0
  809:  select :_isMedian.10:gt lessThan 7 :_median.10:i 0 *tmp1074
  810:  jump *label830 greaterThanEq 4 :_median.10:i
  811:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  812:  jump *label833 always 0 0
        label *label830
  813:  jump *label831 lessThanEq 4 :_median.10:i
  814:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label831
        label *label833
  815:  jump *label838 greaterThanEq 2 :_median.10:i
  816:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  817:  jump *label841 always 0 0
        label *label838
  818:  jump *label839 lessThanEq 2 :_median.10:i
  819:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label839
        label *label841
  820:  jump *label846 greaterThanEq 8 :_median.10:i
  821:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  822:  jump *label849 always 0 0
        label *label846
  823:  jump *label847 lessThanEq 8 :_median.10:i
  824:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label847
        label *label849
  825:  jump *label854 greaterThanEq 1 :_median.10:i
  826:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  827:  jump *label857 always 0 0
        label *label854
  828:  jump *label855 lessThanEq 1 :_median.10:i
  829:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label855
        label *label857
  830:  jump *label862 greaterThanEq 5 :_median.10:i
  831:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  832:  jump *label865 always 0 0
        label *label862
  833:  jump *label863 lessThanEq 5 :_median.10:i
  834:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label863
        label *label865
  835:  jump *label870 greaterThanEq 6 :_median.10:i
  836:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  837:  jump *label873 always 0 0
        label *label870
  838:  jump *label871 lessThanEq 6 :_median.10:i
  839:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label871
        label *label873
  840:  jump *label878 greaterThanEq 9 :_median.10:i
  841:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  842:  jump *label881 always 0 0
        label *label878
  843:  jump *label879 lessThanEq 9 :_median.10:i
  844:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label879
        label *label881
  845:  jump *label886 greaterThanEq 3 :_median.10:i
  846:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  847:  jump *label889 always 0 0
        label *label886
  848:  jump *label887 lessThanEq 3 :_median.10:i
  849:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label887
        label *label889
  850:  op sub *tmp293 :_isMedian.10:gt :_isMedian.10:lt
  851:  op abs :_isMedian.10:dif *tmp293 0
  852:  op add *tmp295 :_isMedian.10:gt :_isMedian.10:lt
  853:  op equal *tmp408 :_isMedian.10:gt :_isMedian.10:lt
  854:  select *tmp298 greaterThanEq *tmp295 8 *tmp408 false
  855:  jump *label424 equal *tmp298 false
  856:  set *tmp285 :_median.10:i
  857:  jump *label392 always 0 0
        label *label424
  858:  jump *label426 greaterThanEq :_isMedian.10:dif :_median.10:bestDif
  859:  set :_median.10:bestDif :_isMedian.10:dif
  860:  set :_median.10:best :_median.10:i
  861:  set :_median.10:count 1
  862:  multijump *tmp286 0 0
        label *label426
  863:  jump *label428 greaterThan :_isMedian.10:dif :_median.10:bestDif
  864:  op add :_median.10:best :_median.10:best :_median.10:i
  865:  op add :_median.10:count :_median.10:count 1
        label *label428
  866:  multijump *tmp286 0 0
        multilabel *label404
  867:  op div *tmp285 :_median.10:best :_median.10:count
        label *label392
  868:  assertequals 5 *tmp285 "median(7,4,2,8,1,5,6,9,3)"
  869:  set :_median.11:bestDif 10000000000
  870:  set :_median.11:best null
  871:  set :_median.11:count 1
  872:  set :_median.11:i 1
  873:  setaddr *tmp308 *label435
  874:  jump *label432 always 0 0
        multilabel *label435
  875:  set :_median.11:i 1
  876:  setaddr *tmp308 *label436
  877:  jump *label432 always 0 0
        multilabel *label436
  878:  set :_median.11:i 1
  879:  setaddr *tmp308 *label437
  880:  jump *label432 always 0 0
        multilabel *label437
  881:  set :_median.11:i 1
  882:  setaddr *tmp308 *label438
  883:  jump *label432 always 0 0
        multilabel *label438
  884:  set :_median.11:i 9
  885:  setaddr *tmp308 *label439
  886:  jump *label432 always 0 0
        multilabel *label439
  887:  set :_median.11:i 9
  888:  setaddr *tmp308 *label440
  889:  jump *label432 always 0 0
        multilabel *label440
  890:  set :_median.11:i 9
  891:  setaddr *tmp308 *label441
  892:  jump *label432 always 0 0
        multilabel *label441
  893:  set :_median.11:i 9
  894:  setaddr *tmp308 *label442
  895:  jump *label432 always 0 0
        multilabel *label442
  896:  set :_median.11:i 5
  897:  setaddr *tmp308 *label443
        label *label432
  898:  set :_isMedian.11:lt 0
  899:  set :_isMedian.11:gt 0
  900:  set :_isMedian.11:i 1
  901:  setaddr *tmp310 *label448
  902:  jump *label445 always 0 0
        multilabel *label448
  903:  set :_isMedian.11:i 1
  904:  setaddr *tmp310 *label449
  905:  jump *label445 always 0 0
        multilabel *label449
  906:  set :_isMedian.11:i 1
  907:  setaddr *tmp310 *label450
  908:  jump *label445 always 0 0
        multilabel *label450
  909:  set :_isMedian.11:i 1
  910:  setaddr *tmp310 *label451
  911:  jump *label445 always 0 0
        multilabel *label451
  912:  set :_isMedian.11:i 9
  913:  setaddr *tmp310 *label452
  914:  jump *label445 always 0 0
        multilabel *label452
  915:  set :_isMedian.11:i 9
  916:  setaddr *tmp310 *label453
  917:  jump *label445 always 0 0
        multilabel *label453
  918:  set :_isMedian.11:i 9
  919:  setaddr *tmp310 *label454
  920:  jump *label445 always 0 0
        multilabel *label454
  921:  set :_isMedian.11:i 9
  922:  setaddr *tmp310 *label455
  923:  jump *label445 always 0 0
        multilabel *label455
  924:  set :_isMedian.11:i 5
  925:  setaddr *tmp310 *label456
        label *label445
  926:  jump *label457 greaterThanEq :_isMedian.11:i :_median.11:i
  927:  op add :_isMedian.11:lt :_isMedian.11:lt 1
  928:  multijump *tmp310 0 0
        label *label457
  929:  jump *label459 lessThanEq :_isMedian.11:i :_median.11:i
  930:  op add :_isMedian.11:gt :_isMedian.11:gt 1
        label *label459
  931:  multijump *tmp310 0 0
        multilabel *label456
  932:  op sub *tmp315 :_isMedian.11:gt :_isMedian.11:lt
  933:  op abs :_isMedian.11:dif *tmp315 0
  934:  op add *tmp317 :_isMedian.11:gt :_isMedian.11:lt
  935:  op equal *tmp413 :_isMedian.11:gt :_isMedian.11:lt
  936:  select *tmp320 greaterThanEq *tmp317 8 *tmp413 false
  937:  jump *label463 equal *tmp320 false
  938:  set *tmp307 :_median.11:i
  939:  jump *label431 always 0 0
        label *label463
  940:  jump *label465 greaterThanEq :_isMedian.11:dif :_median.11:bestDif
  941:  set :_median.11:bestDif :_isMedian.11:dif
  942:  set :_median.11:best :_median.11:i
  943:  set :_median.11:count 1
  944:  multijump *tmp308 0 0
        label *label465
  945:  jump *label467 greaterThan :_isMedian.11:dif :_median.11:bestDif
  946:  op add :_median.11:best :_median.11:best :_median.11:i
  947:  op add :_median.11:count :_median.11:count 1
        label *label467
  948:  multijump *tmp308 0 0
        multilabel *label443
  949:  op div *tmp307 :_median.11:best :_median.11:count
        label *label431
  950:  assertequals 5 *tmp307 "median(1,1,1,1,9,9,9,9,5)"
  951:  stop
  952:  end
        label *label1
  953:  op max :median:y2 :median:x1 :median:x2
  954:  op min :median:y3 :median:x3 :median:x4
  955:  jump *label470 greaterThan :median:y2 :median:y3
  956:  op add *tmp332 :median:y2 :median:y3
  957:  op div :median*retval *tmp332 2
  958:  return :median*retaddr
        label *label470
  959:  op min :median:y1 :median:x1 :median:x2
  960:  op max :median:y4 :median:x3 :median:x4
  961:  jump *label472 lessThan :median:y1 :median:y4
  962:  op add *tmp338 :median:y1 :median:y4
  963:  op div :median*retval *tmp338 2
  964:  return :median*retaddr
        label *label472
  965:  op max *tmp340 :median:y1 :median:y3
  966:  op min *tmp341 :median:y2 :median:y4
  967:  op add *tmp342 *tmp340 *tmp341
  968:  op div :median*retval *tmp342 2
  969:  return :median*retaddr
        label *label2
  970:  op min :median.1:y1 :median.1:x1 :median.1:x2
  971:  op max :median.1:y2 :median.1:x1 :median.1:x2
  972:  op min :median.1:y4 :median.1:x4 :median.1:x5
  973:  op max :median.1:y5 :median.1:x4 :median.1:x5
  974:  jump *label475 greaterThanEq :median.1:y4 :median.1:y1
  975:  set :median.1:y4 :median.1:y1
  976:  set :_swap.1:t :median.1:y2
  977:  set :median.1:y2 :median.1:y5
  978:  set :median.1:y5 :_swap.1:t
        label *label475
  979:  jump *label479 lessThanEq :median.1:x3 :median.1:y2
  980:  op min :median.1*retval :median.1:y2 :median.1:y5
  981:  jump *label480 greaterThanEq :median.1:y2 :median.1:y4
  982:  op min :median.1*retval :median.1:x3 :median.1:y4
  983:  return :median.1*retaddr
        label *label479
  984:  op min :median.1*retval :median.1:y2 :median.1:y4
  985:  jump *label484 lessThanEq :median.1:x3 :median.1:y4
  986:  op min :median.1*retval :median.1:x3 :median.1:y5
        label *label484
        label *label480
  987:  return :median.1*retaddr


stop instruction encountered, dumping variable values:
*tmp100: 0.0
*tmp1074: 1.0
*tmp109: 1.0
*tmp110: 286.0
*tmp117: -4.0
*tmp119: 4.0
*tmp122: 0.0
*tmp131: 3.0
*tmp132: 350.0
*tmp134: 333.0
*tmp1371: 0.0
*tmp139: -3.0
*tmp141: 3.0
*tmp144: 0.0
*tmp153: 5.0
*tmp154: 414.0
*tmp156: 397.0
*tmp161: -2.0
*tmp163: 2.0
*tmp166: 0.0
*tmp175: 5.0
*tmp176: 478.0
*tmp178: 461.0
*tmp183: -1.0
*tmp185: 1.0
*tmp188: 0.0
*tmp197: 5.0
*tmp198: 503.0
*tmp219: 5.0
*tmp220: 523.0
*tmp227: 0.0
*tmp229: 8.0
*tmp232: 1.0
*tmp241: 5.0
*tmp242: 614.0
*tmp249: 0.0
*tmp251: 8.0
*tmp254: 1.0
*tmp263: 5.0
*tmp264: 699.0
*tmp271: 0.0
*tmp273: 8.0
*tmp276: 1.0
*tmp285: 5.0
*tmp286: 799.0
*tmp293: 0.0
*tmp295: 8.0
*tmp298: 1.0
*tmp307: 5.0
*tmp308: 949.0
*tmp310: 932.0
*tmp315: 0.0
*tmp317: 8.0
*tmp320: 1.0
*tmp332: 10.0
*tmp338: 10.0
*tmp340: 4.0
*tmp341: 6.0
*tmp342: 10.0
*tmp366: 0.0
*tmp371: 0.0
*tmp376: 0.0
*tmp381: 0.0
*tmp386: 0.0
*tmp393: 1.0
*tmp398: 1.0
*tmp403: 1.0
*tmp408: 1.0
*tmp413: 1.0
*tmp65: 1.0
*tmp654: 0.0
*tmp66: 152.0
*tmp685: 0.0
*tmp704: 1.0
*tmp723: 0.0
*tmp87: 1.0
*tmp88: 219.0
*tmp95: -5.0
*tmp97: 5.0
:_isMedian.10:dif: 0.0
:_isMedian.10:gt: 4.0
:_isMedian.10:lt: 4.0
:_isMedian.11:dif: 0.0
:_isMedian.11:gt: 4.0
:_isMedian.11:i: 5.0
:_isMedian.11:lt: 4.0
:_isMedian.1:dif: 5.0
:_isMedian.1:gt: 0.0
:_isMedian.1:lt: 5.0
:_isMedian.2:dif: 4.0
:_isMedian.2:gt: 0.0
:_isMedian.2:lt: 4.0
:_isMedian.3:dif: 3.0
:_isMedian.3:gt: 0.0
:_isMedian.3:i: 5.0
:_isMedian.3:lt: 3.0
:_isMedian.4:dif: 2.0
:_isMedian.4:gt: 0.0
:_isMedian.4:i: 5.0
:_isMedian.4:lt: 2.0
:_isMedian.5:dif: 1.0
:_isMedian.5:gt: 0.0
:_isMedian.5:i: 5.0
:_isMedian.5:lt: 1.0
:_isMedian.7:dif: 0.0
:_isMedian.7:gt: 4.0
:_isMedian.7:lt: 4.0
:_isMedian.8:dif: 0.0
:_isMedian.8:gt: 4.0
:_isMedian.8:lt: 4.0
:_isMedian.9:dif: 0.0
:_isMedian.9:gt: 4.0
:_isMedian.9:lt: 4.0
:_median.10:best: 4.0
:_median.10:bestDif: 2.0
:_median.10:count: 1.0
:_median.10:i: 5.0
:_median.11:best: 40.0
:_median.11:bestDif: 5.0
:_median.11:count: 8.0
:_median.11:i: 5.0
:_median.1:best: 5.0
:_median.1:bestDif: 1.0
:_median.1:count: 5.0
:_median.1:i: 5.0
:_median.2:best: 4.0
:_median.2:bestDif: 2.0
:_median.2:count: 4.0
:_median.2:i: 5.0
:_median.3:best: 18.0
:_median.3:bestDif: 3.0
:_median.3:count: 6.0
:_median.3:i: 5.0
:_median.4:best: 20.0
:_median.4:bestDif: 2.0
:_median.4:count: 4.0
:_median.4:i: 5.0
:_median.5:best: 25.0
:_median.5:bestDif: 1.0
:_median.5:count: 5.0
:_median.5:i: 5.0
:_median.6:best: 30.0
:_median.6:bestDif: 0.0
:_median.6:count: 6.0
:_median.7:best: 4.0
:_median.7:bestDif: 2.0
:_median.7:count: 1.0
:_median.7:i: 5.0
:_median.8:best: 6.0
:_median.8:bestDif: 2.0
:_median.8:count: 1.0
:_median.8:i: 5.0
:_median.9:best: 3.0
:_median.9:bestDif: 4.0
:_median.9:count: 1.0
:_median.9:i: 5.0
:_median:best: 6.0
:_median:bestDif: 0.0
:_median:count: 6.0
:_swap.1:t: 5.0
:integer.1:result: -5.0
:integer.2:result: 100.0
:integer:result: 0.0
:median*retaddr: 86.0
:median*retval: 5.0
:median.1*retaddr: 128.0
:median.1*retval: 5.0
:median.1:x1: 5.0
:median.1:x2: 5.0
:median.1:x3: 5.0
:median.1:x4: 5.0
:median.1:x5: 5.0
:median.1:y1: 5.0
:median.1:y2: 5.0
:median.1:y4: 5.0
:median.1:y5: 5.0
:median:x1: 6.0
:median:x2: 2.0
:median:x3: 8.0
:median:x4: 4.0
:median:y1: 2.0
:median:y2: 6.0
:median:y3: 4.0
:median:y4: 8.0
:nullToZero.1:result: 1.0
:nullToZero:result: 0.0
@counter: 952.0