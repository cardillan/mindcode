  1654 instructions before optimizations.
    91 instructions eliminated by Temp Variables Elimination (10 iterations).
   124 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions modified by Jump Normalization (9 iterations).
    68 instructions eliminated by Jump Optimization (9 iterations).
    41 instructions eliminated by Single Step Elimination (3 passes, 12 iterations).
    18 instructions modified by Expression Optimization (3 passes, 7 iterations).
    53 instructions eliminated by If Expression Optimization (4 passes, 15 iterations).
   367 instructions eliminated by Data Flow Optimization (15 passes, 50 iterations).
    84 instructions added by Loop Unrolling (18 iterations).
    10 loops unrolled by Loop Unrolling.
     2 instructions eliminated by Function Inlining (18 iterations).
     3 function calls inlined by Function Inlining.
    30 instructions updated by Jump Threading.
     4 instructions eliminated by Unreachable Code Elimination (2 iterations).
   988 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
    Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
  * Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
    Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
  ! Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
  ! Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 2):
    Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +115, benefit       23.0, efficiency      0.200
  * Unroll iteration loop at *math:259:5                         size   -23, benefit      575.0, efficiency   Infinity (-13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 15):
  * Unroll iteration loop at *math:121:5                         size    -5, benefit        7.0, efficiency   Infinity (-8 instructions)
    Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
    Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 23):
  * Unroll iteration loop at *math:133:5                         size    -5, benefit        7.0, efficiency   Infinity (-9 instructions)
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
    Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 32):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
    Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 19):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
    Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
    Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 6):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  * Inline function 'signInexact' defined at *math:47:1          size    +3, benefit       10.5, efficiency      3.500 (-8 instructions)
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
    Inline function call at line 14:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 15:17                           size    +2, benefit        3.5, efficiency      1.750
    Inline function call at line 16:17                           size    +2, benefit        3.5, efficiency      1.750
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 14):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+13 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 1: speed optimization selection (cost limit 1):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +125, benefit       44.0, efficiency      0.352
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 58:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 59:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 60:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 61:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 62:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 63:17                           size   +18, benefit        5.5, efficiency      0.306
  ! Inline function call at line 64:17                           size   +18, benefit        5.5, efficiency      0.306

Pass 2: speed optimization selection (cost limit 15):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +514, benefit       35.0, efficiency      0.068
  ! Unroll iteration loop at *math:241:5                         size  +514, benefit       35.0, efficiency      0.068
  ! Unroll iteration loop at *math:241:5                         size  +514, benefit       35.0, efficiency      0.068
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  * Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500 (+7 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
    Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
    Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
    Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 2: speed optimization selection (cost limit 8):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  * Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143 (+7 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 2: speed optimization selection (cost limit 1):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +265, benefit       23.0, efficiency      0.087
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 3: speed optimization selection (cost limit 5):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +253, benefit       23.0, efficiency      0.091
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 4: speed optimization selection (cost limit 9):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  * Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143 (+7 instructions)
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
    Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 4: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +265, benefit       23.0, efficiency      0.087
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 5: speed optimization selection (cost limit 4):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +253, benefit       23.0, efficiency      0.091
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 6: speed optimization selection (cost limit 6):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Pass 7: speed optimization selection (cost limit 6):
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +241, benefit       23.0, efficiency      0.095
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size  +223, benefit       23.0, efficiency      0.103
  ! Unroll iteration loop at *math:259:5                         size    +7, benefit      575.0, efficiency     82.143
  ! Unroll iteration loop at *math:241:5                         size   +37, benefit       23.0, efficiency      0.622
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +496, benefit       35.0, efficiency      0.071
  ! Unroll iteration loop at *math:241:5                         size  +415, benefit       35.0, efficiency      0.084
  ! Unroll iteration loop at *math:259:5                         size   +10, benefit      875.0, efficiency     87.500
  ! Inline function 'median' defined at *math:185:1              size   +59, benefit       25.0, efficiency      0.424
  ! Inline function 'median' defined at *math:202:1              size  +111, benefit       44.0, efficiency      0.396
  ! Inline function call at line 52:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 53:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 54:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 55:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 56:17                           size   +15, benefit        5.0, efficiency      0.333
  ! Inline function call at line 57:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 58:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 59:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 60:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 61:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 62:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 63:17                           size   +16, benefit        5.5, efficiency      0.344
  ! Inline function call at line 64:17                           size   +16, benefit        5.5, efficiency      0.344

Final code before resolving virtual instructions:

    0:  assertequals 5 5 "distance(1,1,4,5)"
    1:  assertequals 5 5 "distance(-1,-1,-4,-5)"
    2:  assertequals 2 2 "round(1.5)"
    3:  assertequals 2 2 "round(1.7)"
    4:  assertequals 2 2 "round(2.1)"
    5:  assertequals 3 3 "round(2.5)"
    6:  assertequals -3 -3 "round(-3.5)"
    7:  assertequals 0.5 0.5 "frac(3.5)"
    8:  assertequals -0.5 -0.5 "frac(-1.5)"
    9:  assertequals 0 0 "signInexact(0)"
   10:  assertequals 0 0 "signInexact(1e-7)"
   11:  assertequals 1 1 "signInexact(1e-5)"
   12:  assertequals -1 -1 "sign(-5)"
   13:  assertequals 0 0 "sign(0)"
   14:  assertequals 1 1 "sign(1e-7)"
   15:  assertequals -1 -1 "sign(-1e-7)"
   16:  assertequals true true "isZero(0)"
   17:  assertequals false false "isZero(1e-50)"
   18:  assertequals false false "isZero(-1e-50)"
   19:  assertequals false false "isZero(0.01,0.01)"
   20:  op add :nullToZero:result null 0
   21:  assertequals 0 :nullToZero:result "nullToZero(null)"
   22:  op add :nullToZero.1:result 1 0
   23:  assertequals 1 :nullToZero.1:result "nullToZero(1)"
   24:  assertequals 0 false "boolean(0)"
   25:  assertequals 1 true "boolean(100)"
   26:  assertequals 1 true "boolean(-100)"
   27:  assertequals 1 true "boolean(-0.001)"
   28:  assertequals 0 false "boolean(0.0000001)"
   29:  op or :integer:result 0.9 0
   30:  assertequals 0 :integer:result "integer(0.9)"
   31:  op or :integer.1:result -5.9 0
   32:  assertequals -5 :integer.1:result "integer(-5.9)"
   33:  op or :integer.2:result 100 0
   34:  assertequals 100 :integer.2:result "integer(100)"
   35:  assertequals 1 1 "sum(1)"
   36:  assertequals 10 10 "sum(1,2,3,4)"
   37:  assertequals 1 1 "avg(1)"
   38:  assertequals 2.5 2.5 "avg(1,2,3,4)"
   39:  assertequals 2 2 "logn(25, 5)"
   40:  assertequals 4 4 "logn(10000, 10)"
   41:  assertequals 4 4 "log2(16)"
   42:  assertequals 30 30 "log2(1 << 30)"
   43:  assertequals 1 1 "lerp(1, 10, 0)"
   44:  assertequals 10 10 "lerp(1, 10, 1)"
   45:  assertequals 5.5 5.5 "lerp(1, 10, 0.5)"
   46:  assertequals 1 1 "median(1)"
   47:  assertequals 3 3 "median(2,4)"
   48:  assertequals 3 3 "median(1,3,5)"
   49:  assertequals 1 1 "median(1,1,1)"
   50:  assertequals 1 1 "median(1,1,3)"
   51:  assertequals 3 3 "median(1,3,3)"
   52:  set :median:x1 2
   53:  set :median:x2 4
   54:  set :median:x3 6
   55:  set :median:x4 8
   56:  setaddr :median*retaddr *label53
   57:  call *label1 *invalid :median*retval
        label *label53
   58:  assertequals 5 :median*retval "median(2,4,6,8)"
   59:  set :median:x1 8
   60:  set :median:x2 6
   61:  set :median:x3 4
   62:  set :median:x4 2
   63:  setaddr :median*retaddr *label54
   64:  call *label1 *invalid :median*retval
        label *label54
   65:  assertequals 5 :median*retval "median(8,6,4,2)"
   66:  set :median:x1 4
   67:  set :median:x2 8
   68:  set :median:x3 2
   69:  set :median:x4 6
   70:  setaddr :median*retaddr *label55
   71:  call *label1 *invalid :median*retval
        label *label55
   72:  assertequals 5 :median*retval "median(4,8,2,6)"
   73:  set :median:x1 2
   74:  set :median:x2 6
   75:  set :median:x3 4
   76:  set :median:x4 8
   77:  setaddr :median*retaddr *label56
   78:  call *label1 *invalid :median*retval
        label *label56
   79:  assertequals 5 :median*retval "median(2,6,4,8)"
   80:  set :median:x1 6
   81:  set :median:x2 2
   82:  set :median:x3 8
   83:  set :median:x4 4
   84:  setaddr :median*retaddr *label57
   85:  call *label1 *invalid :median*retval
        label *label57
   86:  assertequals 5 :median*retval "median(6,2,8,4)"
   87:  set :median.1:x1 1
   88:  set :median.1:x2 2
   89:  set :median.1:x3 3
   90:  set :median.1:x4 4
   91:  set :median.1:x5 5
   92:  setaddr :median.1*retaddr *label58
   93:  call *label2 *invalid :median.1*retval
        label *label58
   94:  assertequals 3 :median.1*retval "median(1,2,3,4,5)"
   95:  set :median.1:x1 5
   96:  set :median.1:x2 4
   97:  set :median.1:x4 2
   98:  set :median.1:x5 1
   99:  setaddr :median.1*retaddr *label59
  100:  call *label2 *invalid :median.1*retval
        label *label59
  101:  assertequals 3 :median.1*retval "median(5,4,3,2,1)"
  102:  set :median.1:x1 1
  103:  set :median.1:x2 1
  104:  set :median.1:x3 1
  105:  set :median.1:x4 1
  106:  setaddr :median.1*retaddr *label60
  107:  call *label2 *invalid :median.1*retval
        label *label60
  108:  assertequals 1 :median.1*retval "median(1,1,1,1,1)"
  109:  set :median.1:x5 5
  110:  setaddr :median.1*retaddr *label61
  111:  call *label2 *invalid :median.1*retval
        label *label61
  112:  assertequals 1 :median.1*retval "median(1,1,1,1,5)"
  113:  set :median.1:x4 5
  114:  setaddr :median.1*retaddr *label62
  115:  call *label2 *invalid :median.1*retval
        label *label62
  116:  assertequals 1 :median.1*retval "median(1,1,1,5,5)"
  117:  set :median.1:x3 5
  118:  setaddr :median.1*retaddr *label63
  119:  call *label2 *invalid :median.1*retval
        label *label63
  120:  assertequals 5 :median.1*retval "median(1,1,5,5,5)"
  121:  set :median.1:x2 5
  122:  setaddr :median.1*retaddr *label64
  123:  call *label2 *invalid :median.1*retval
        label *label64
  124:  assertequals 5 :median.1*retval "median(1,5,5,5,5)"
  125:  set :median.1:x1 5
  126:  setaddr :median.1*retaddr *label65
  127:  call *label2 *invalid :median.1*retval
        label *label65
  128:  assertequals 5 :median.1*retval "median(5,5,5,5,5)"
  129:  set :_median:bestDif 10000000000
  130:  set :_median:best null
  131:  set :_median:count 1
  132:  setaddr *tmp124 *label71
  133:  jump *label93 always 0 0
        multilabel *label71
  134:  setaddr *tmp124 *label72
  135:  jump *label93 always 0 0
        multilabel *label72
  136:  setaddr *tmp124 *label73
  137:  jump *label93 always 0 0
        multilabel *label73
  138:  setaddr *tmp124 *label74
  139:  jump *label93 always 0 0
        multilabel *label74
  140:  setaddr *tmp124 *label75
  141:  jump *label93 always 0 0
        multilabel *label75
  142:  setaddr *tmp124 *label76
        label *label93
  143:  jump *label95 greaterThanEq 0 :_median:bestDif
  144:  set :_median:bestDif 0
  145:  set :_median:best 1
  146:  set :_median:count 1
  147:  multijump *tmp124 0 0
        label *label95
  148:  jump *label97 greaterThan 0 :_median:bestDif
  149:  op add :_median:best :_median:best 1
  150:  op add :_median:count :_median:count 1
        label *label97
  151:  multijump *tmp124 0 0
        multilabel *label76
  152:  op div *tmp123 :_median:best :_median:count
  153:  assertequals 1 *tmp123 "median(1,1,1,1,1,1)"
  154:  set :_median.1:bestDif 10000000000
  155:  set :_median.1:best null
  156:  set :_median.1:count 1
  157:  set :_median.1:i 1
  158:  setaddr *tmp146 *label104
  159:  jump *label101 always 0 0
        multilabel *label104
  160:  set :_median.1:i 1
  161:  setaddr *tmp146 *label105
  162:  jump *label101 always 0 0
        multilabel *label105
  163:  set :_median.1:i 1
  164:  setaddr *tmp146 *label106
  165:  jump *label101 always 0 0
        multilabel *label106
  166:  set :_median.1:i 1
  167:  setaddr *tmp146 *label107
  168:  jump *label101 always 0 0
        multilabel *label107
  169:  set :_median.1:i 1
  170:  setaddr *tmp146 *label108
  171:  jump *label101 always 0 0
        multilabel *label108
  172:  set :_median.1:i 5
  173:  setaddr *tmp146 *label109
        label *label101
  174:  select *tmp1028 greaterThan 1 :_median.1:i 1 0
  175:  select :_isMedian.1:lt lessThan 1 :_median.1:i 1 0
  176:  select :_isMedian.1:gt lessThan 1 :_median.1:i 0 *tmp1028
  177:  jump *label888 greaterThanEq 1 :_median.1:i
  178:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  179:  jump *label891 always 0 0
        label *label888
  180:  jump *label889 lessThanEq 1 :_median.1:i
  181:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label889
        label *label891
  182:  jump *label896 greaterThanEq 1 :_median.1:i
  183:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  184:  jump *label899 always 0 0
        label *label896
  185:  jump *label897 lessThanEq 1 :_median.1:i
  186:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label897
        label *label899
  187:  jump *label904 greaterThanEq 1 :_median.1:i
  188:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  189:  jump *label907 always 0 0
        label *label904
  190:  jump *label905 lessThanEq 1 :_median.1:i
  191:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label905
        label *label907
  192:  jump *label912 greaterThanEq 1 :_median.1:i
  193:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  194:  jump *label915 always 0 0
        label *label912
  195:  jump *label913 lessThanEq 1 :_median.1:i
  196:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label913
        label *label915
  197:  jump *label920 greaterThanEq 5 :_median.1:i
  198:  op add :_isMedian.1:lt :_isMedian.1:lt 1
  199:  jump *label923 always 0 0
        label *label920
  200:  jump *label921 lessThanEq 5 :_median.1:i
  201:  op add :_isMedian.1:gt :_isMedian.1:gt 1
        label *label921
        label *label923
  202:  op sub *tmp153 :_isMedian.1:gt :_isMedian.1:lt
  203:  op abs :_isMedian.1:dif *tmp153 0
  204:  op add *tmp155 :_isMedian.1:gt :_isMedian.1:lt
  205:  op equal *tmp428 :_isMedian.1:gt :_isMedian.1:lt
  206:  select *tmp158 greaterThanEq *tmp155 5 *tmp428 false
  207:  jump *label126 equal *tmp158 false
  208:  set *tmp145 :_median.1:i
  209:  jump *label100 always 0 0
        label *label126
  210:  jump *label128 greaterThanEq :_isMedian.1:dif :_median.1:bestDif
  211:  set :_median.1:bestDif :_isMedian.1:dif
  212:  set :_median.1:best :_median.1:i
  213:  set :_median.1:count 1
  214:  multijump *tmp146 0 0
        label *label128
  215:  jump *label130 greaterThan :_isMedian.1:dif :_median.1:bestDif
  216:  op add :_median.1:best :_median.1:best :_median.1:i
  217:  op add :_median.1:count :_median.1:count 1
        label *label130
  218:  multijump *tmp146 0 0
        multilabel *label109
  219:  op div *tmp145 :_median.1:best :_median.1:count
        label *label100
  220:  assertequals 1 *tmp145 "median(1,1,1,1,1,5)"
  221:  set :_median.2:bestDif 10000000000
  222:  set :_median.2:best null
  223:  set :_median.2:count 1
  224:  set :_median.2:i 1
  225:  setaddr *tmp168 *label137
  226:  jump *label134 always 0 0
        multilabel *label137
  227:  set :_median.2:i 1
  228:  setaddr *tmp168 *label138
  229:  jump *label134 always 0 0
        multilabel *label138
  230:  set :_median.2:i 1
  231:  setaddr *tmp168 *label139
  232:  jump *label134 always 0 0
        multilabel *label139
  233:  set :_median.2:i 1
  234:  setaddr *tmp168 *label140
  235:  jump *label134 always 0 0
        multilabel *label140
  236:  set :_median.2:i 5
  237:  setaddr *tmp168 *label141
  238:  jump *label134 always 0 0
        multilabel *label141
  239:  set :_median.2:i 5
  240:  setaddr *tmp168 *label142
        label *label134
  241:  select *tmp1530 greaterThan 1 :_median.2:i 1 0
  242:  select :_isMedian.2:lt lessThan 1 :_median.2:i 1 0
  243:  select :_isMedian.2:gt lessThan 1 :_median.2:i 0 *tmp1530
  244:  jump *label937 greaterThanEq 1 :_median.2:i
  245:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  246:  jump *label940 always 0 0
        label *label937
  247:  jump *label938 lessThanEq 1 :_median.2:i
  248:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label938
        label *label940
  249:  jump *label945 greaterThanEq 1 :_median.2:i
  250:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  251:  jump *label948 always 0 0
        label *label945
  252:  jump *label946 lessThanEq 1 :_median.2:i
  253:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label946
        label *label948
  254:  jump *label953 greaterThanEq 1 :_median.2:i
  255:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  256:  jump *label956 always 0 0
        label *label953
  257:  jump *label954 lessThanEq 1 :_median.2:i
  258:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label954
        label *label956
  259:  jump *label961 greaterThanEq 5 :_median.2:i
  260:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  261:  jump *label964 always 0 0
        label *label961
  262:  jump *label962 lessThanEq 5 :_median.2:i
  263:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label962
        label *label964
  264:  jump *label969 greaterThanEq 5 :_median.2:i
  265:  op add :_isMedian.2:lt :_isMedian.2:lt 1
  266:  jump *label972 always 0 0
        label *label969
  267:  jump *label970 lessThanEq 5 :_median.2:i
  268:  op add :_isMedian.2:gt :_isMedian.2:gt 1
        label *label970
        label *label972
  269:  op sub *tmp175 :_isMedian.2:gt :_isMedian.2:lt
  270:  op abs :_isMedian.2:dif *tmp175 0
  271:  op add *tmp177 :_isMedian.2:gt :_isMedian.2:lt
  272:  op equal *tmp433 :_isMedian.2:gt :_isMedian.2:lt
  273:  select *tmp180 greaterThanEq *tmp177 5 *tmp433 false
  274:  jump *label159 equal *tmp180 false
  275:  set *tmp167 :_median.2:i
  276:  jump *label133 always 0 0
        label *label159
  277:  jump *label161 greaterThanEq :_isMedian.2:dif :_median.2:bestDif
  278:  set :_median.2:bestDif :_isMedian.2:dif
  279:  set :_median.2:best :_median.2:i
  280:  set :_median.2:count 1
  281:  multijump *tmp168 0 0
        label *label161
  282:  jump *label163 greaterThan :_isMedian.2:dif :_median.2:bestDif
  283:  op add :_median.2:best :_median.2:best :_median.2:i
  284:  op add :_median.2:count :_median.2:count 1
        label *label163
  285:  multijump *tmp168 0 0
        multilabel *label142
  286:  op div *tmp167 :_median.2:best :_median.2:count
        label *label133
  287:  assertequals 1 *tmp167 "median(1,1,1,1,5,5)"
  288:  set :_median.3:bestDif 10000000000
  289:  set :_median.3:best null
  290:  set :_median.3:count 1
  291:  set :_median.3:i 1
  292:  setaddr *tmp190 *label170
  293:  jump *label167 always 0 0
        multilabel *label170
  294:  set :_median.3:i 1
  295:  setaddr *tmp190 *label171
  296:  jump *label167 always 0 0
        multilabel *label171
  297:  set :_median.3:i 1
  298:  setaddr *tmp190 *label172
  299:  jump *label167 always 0 0
        multilabel *label172
  300:  set :_median.3:i 5
  301:  setaddr *tmp190 *label173
  302:  jump *label167 always 0 0
        multilabel *label173
  303:  set :_median.3:i 5
  304:  setaddr *tmp190 *label174
  305:  jump *label167 always 0 0
        multilabel *label174
  306:  set :_median.3:i 5
  307:  setaddr *tmp190 *label175
        label *label167
  308:  set :_isMedian.3:lt 0
  309:  set :_isMedian.3:gt 0
  310:  set :_isMedian.3:i 1
  311:  setaddr *tmp192 *label180
  312:  jump *label177 always 0 0
        multilabel *label180
  313:  set :_isMedian.3:i 1
  314:  setaddr *tmp192 *label181
  315:  jump *label177 always 0 0
        multilabel *label181
  316:  set :_isMedian.3:i 1
  317:  setaddr *tmp192 *label182
  318:  jump *label177 always 0 0
        multilabel *label182
  319:  set :_isMedian.3:i 5
  320:  setaddr *tmp192 *label183
  321:  jump *label177 always 0 0
        multilabel *label183
  322:  set :_isMedian.3:i 5
  323:  setaddr *tmp192 *label184
  324:  jump *label177 always 0 0
        multilabel *label184
  325:  set :_isMedian.3:i 5
  326:  setaddr *tmp192 *label185
        label *label177
  327:  jump *label186 greaterThanEq :_isMedian.3:i :_median.3:i
  328:  op add :_isMedian.3:lt :_isMedian.3:lt 1
  329:  multijump *tmp192 0 0
        label *label186
  330:  jump *label188 lessThanEq :_isMedian.3:i :_median.3:i
  331:  op add :_isMedian.3:gt :_isMedian.3:gt 1
        label *label188
  332:  multijump *tmp192 0 0
        multilabel *label185
  333:  op sub *tmp197 :_isMedian.3:gt :_isMedian.3:lt
  334:  op abs :_isMedian.3:dif *tmp197 0
  335:  op add *tmp199 :_isMedian.3:gt :_isMedian.3:lt
  336:  op equal *tmp438 :_isMedian.3:gt :_isMedian.3:lt
  337:  select *tmp202 greaterThanEq *tmp199 5 *tmp438 false
  338:  jump *label192 equal *tmp202 false
  339:  set *tmp189 :_median.3:i
  340:  jump *label166 always 0 0
        label *label192
  341:  jump *label194 greaterThanEq :_isMedian.3:dif :_median.3:bestDif
  342:  set :_median.3:bestDif :_isMedian.3:dif
  343:  set :_median.3:best :_median.3:i
  344:  set :_median.3:count 1
  345:  multijump *tmp190 0 0
        label *label194
  346:  jump *label196 greaterThan :_isMedian.3:dif :_median.3:bestDif
  347:  op add :_median.3:best :_median.3:best :_median.3:i
  348:  op add :_median.3:count :_median.3:count 1
        label *label196
  349:  multijump *tmp190 0 0
        multilabel *label175
  350:  op div *tmp189 :_median.3:best :_median.3:count
        label *label166
  351:  assertequals 3 *tmp189 "median(1,1,1,5,5,5)"
  352:  set :_median.4:bestDif 10000000000
  353:  set :_median.4:best null
  354:  set :_median.4:count 1
  355:  set :_median.4:i 1
  356:  setaddr *tmp212 *label203
  357:  jump *label200 always 0 0
        multilabel *label203
  358:  set :_median.4:i 1
  359:  setaddr *tmp212 *label204
  360:  jump *label200 always 0 0
        multilabel *label204
  361:  set :_median.4:i 5
  362:  setaddr *tmp212 *label205
  363:  jump *label200 always 0 0
        multilabel *label205
  364:  set :_median.4:i 5
  365:  setaddr *tmp212 *label206
  366:  jump *label200 always 0 0
        multilabel *label206
  367:  set :_median.4:i 5
  368:  setaddr *tmp212 *label207
  369:  jump *label200 always 0 0
        multilabel *label207
  370:  set :_median.4:i 5
  371:  setaddr *tmp212 *label208
        label *label200
  372:  set :_isMedian.4:lt 0
  373:  set :_isMedian.4:gt 0
  374:  set :_isMedian.4:i 1
  375:  setaddr *tmp214 *label213
  376:  jump *label210 always 0 0
        multilabel *label213
  377:  set :_isMedian.4:i 1
  378:  setaddr *tmp214 *label214
  379:  jump *label210 always 0 0
        multilabel *label214
  380:  set :_isMedian.4:i 5
  381:  setaddr *tmp214 *label215
  382:  jump *label210 always 0 0
        multilabel *label215
  383:  set :_isMedian.4:i 5
  384:  setaddr *tmp214 *label216
  385:  jump *label210 always 0 0
        multilabel *label216
  386:  set :_isMedian.4:i 5
  387:  setaddr *tmp214 *label217
  388:  jump *label210 always 0 0
        multilabel *label217
  389:  set :_isMedian.4:i 5
  390:  setaddr *tmp214 *label218
        label *label210
  391:  jump *label219 greaterThanEq :_isMedian.4:i :_median.4:i
  392:  op add :_isMedian.4:lt :_isMedian.4:lt 1
  393:  multijump *tmp214 0 0
        label *label219
  394:  jump *label221 lessThanEq :_isMedian.4:i :_median.4:i
  395:  op add :_isMedian.4:gt :_isMedian.4:gt 1
        label *label221
  396:  multijump *tmp214 0 0
        multilabel *label218
  397:  op sub *tmp219 :_isMedian.4:gt :_isMedian.4:lt
  398:  op abs :_isMedian.4:dif *tmp219 0
  399:  op add *tmp221 :_isMedian.4:gt :_isMedian.4:lt
  400:  op equal *tmp443 :_isMedian.4:gt :_isMedian.4:lt
  401:  select *tmp224 greaterThanEq *tmp221 5 *tmp443 false
  402:  jump *label225 equal *tmp224 false
  403:  set *tmp211 :_median.4:i
  404:  jump *label199 always 0 0
        label *label225
  405:  jump *label227 greaterThanEq :_isMedian.4:dif :_median.4:bestDif
  406:  set :_median.4:bestDif :_isMedian.4:dif
  407:  set :_median.4:best :_median.4:i
  408:  set :_median.4:count 1
  409:  multijump *tmp212 0 0
        label *label227
  410:  jump *label229 greaterThan :_isMedian.4:dif :_median.4:bestDif
  411:  op add :_median.4:best :_median.4:best :_median.4:i
  412:  op add :_median.4:count :_median.4:count 1
        label *label229
  413:  multijump *tmp212 0 0
        multilabel *label208
  414:  op div *tmp211 :_median.4:best :_median.4:count
        label *label199
  415:  assertequals 5 *tmp211 "median(1,1,5,5,5,5)"
  416:  set :_median.5:bestDif 10000000000
  417:  set :_median.5:best null
  418:  set :_median.5:count 1
  419:  set :_median.5:i 1
  420:  setaddr *tmp234 *label236
  421:  jump *label233 always 0 0
        multilabel *label236
  422:  set :_median.5:i 5
  423:  setaddr *tmp234 *label237
  424:  jump *label233 always 0 0
        multilabel *label237
  425:  set :_median.5:i 5
  426:  setaddr *tmp234 *label238
  427:  jump *label233 always 0 0
        multilabel *label238
  428:  set :_median.5:i 5
  429:  setaddr *tmp234 *label239
  430:  jump *label233 always 0 0
        multilabel *label239
  431:  set :_median.5:i 5
  432:  setaddr *tmp234 *label240
  433:  jump *label233 always 0 0
        multilabel *label240
  434:  set :_median.5:i 5
  435:  setaddr *tmp234 *label241
        label *label233
  436:  set :_isMedian.5:lt 0
  437:  set :_isMedian.5:gt 0
  438:  set :_isMedian.5:i 1
  439:  setaddr *tmp236 *label246
  440:  jump *label243 always 0 0
        multilabel *label246
  441:  set :_isMedian.5:i 5
  442:  setaddr *tmp236 *label247
  443:  jump *label243 always 0 0
        multilabel *label247
  444:  set :_isMedian.5:i 5
  445:  setaddr *tmp236 *label248
  446:  jump *label243 always 0 0
        multilabel *label248
  447:  set :_isMedian.5:i 5
  448:  setaddr *tmp236 *label249
  449:  jump *label243 always 0 0
        multilabel *label249
  450:  set :_isMedian.5:i 5
  451:  setaddr *tmp236 *label250
  452:  jump *label243 always 0 0
        multilabel *label250
  453:  set :_isMedian.5:i 5
  454:  setaddr *tmp236 *label251
        label *label243
  455:  jump *label252 greaterThanEq :_isMedian.5:i :_median.5:i
  456:  op add :_isMedian.5:lt :_isMedian.5:lt 1
  457:  multijump *tmp236 0 0
        label *label252
  458:  jump *label254 lessThanEq :_isMedian.5:i :_median.5:i
  459:  op add :_isMedian.5:gt :_isMedian.5:gt 1
        label *label254
  460:  multijump *tmp236 0 0
        multilabel *label251
  461:  op sub *tmp241 :_isMedian.5:gt :_isMedian.5:lt
  462:  op abs :_isMedian.5:dif *tmp241 0
  463:  op add *tmp243 :_isMedian.5:gt :_isMedian.5:lt
  464:  op equal *tmp448 :_isMedian.5:gt :_isMedian.5:lt
  465:  select *tmp246 greaterThanEq *tmp243 5 *tmp448 false
  466:  jump *label258 equal *tmp246 false
  467:  set *tmp233 :_median.5:i
  468:  jump *label232 always 0 0
        label *label258
  469:  jump *label260 greaterThanEq :_isMedian.5:dif :_median.5:bestDif
  470:  set :_median.5:bestDif :_isMedian.5:dif
  471:  set :_median.5:best :_median.5:i
  472:  set :_median.5:count 1
  473:  multijump *tmp234 0 0
        label *label260
  474:  jump *label262 greaterThan :_isMedian.5:dif :_median.5:bestDif
  475:  op add :_median.5:best :_median.5:best :_median.5:i
  476:  op add :_median.5:count :_median.5:count 1
        label *label262
  477:  multijump *tmp234 0 0
        multilabel *label241
  478:  op div *tmp233 :_median.5:best :_median.5:count
        label *label232
  479:  assertequals 5 *tmp233 "median(1,5,5,5,5,5)"
  480:  set :_median.6:bestDif 10000000000
  481:  set :_median.6:best null
  482:  set :_median.6:count 1
  483:  setaddr *tmp256 *label269
  484:  jump *label291 always 0 0
        multilabel *label269
  485:  setaddr *tmp256 *label270
  486:  jump *label291 always 0 0
        multilabel *label270
  487:  setaddr *tmp256 *label271
  488:  jump *label291 always 0 0
        multilabel *label271
  489:  setaddr *tmp256 *label272
  490:  jump *label291 always 0 0
        multilabel *label272
  491:  setaddr *tmp256 *label273
  492:  jump *label291 always 0 0
        multilabel *label273
  493:  setaddr *tmp256 *label274
        label *label291
  494:  jump *label293 greaterThanEq 0 :_median.6:bestDif
  495:  set :_median.6:bestDif 0
  496:  set :_median.6:best 5
  497:  set :_median.6:count 1
  498:  multijump *tmp256 0 0
        label *label293
  499:  jump *label295 greaterThan 0 :_median.6:bestDif
  500:  op add :_median.6:best :_median.6:best 5
  501:  op add :_median.6:count :_median.6:count 1
        label *label295
  502:  multijump *tmp256 0 0
        multilabel *label274
  503:  op div *tmp255 :_median.6:best :_median.6:count
  504:  assertequals 5 *tmp255 "median(5,5,5,5,5,5)"
  505:  set :_median.7:bestDif 10000000000
  506:  set :_median.7:best null
  507:  set :_median.7:count 1
  508:  set :_median.7:i 1
  509:  setaddr *tmp278 *label302
  510:  jump *label299 always 0 0
        multilabel *label302
  511:  set :_median.7:i 2
  512:  setaddr *tmp278 *label303
  513:  jump *label299 always 0 0
        multilabel *label303
  514:  set :_median.7:i 3
  515:  setaddr *tmp278 *label304
  516:  jump *label299 always 0 0
        multilabel *label304
  517:  set :_median.7:i 4
  518:  setaddr *tmp278 *label305
  519:  jump *label299 always 0 0
        multilabel *label305
  520:  set :_median.7:i 5
  521:  setaddr *tmp278 *label306
  522:  jump *label299 always 0 0
        multilabel *label306
  523:  set :_median.7:i 6
  524:  setaddr *tmp278 *label307
  525:  jump *label299 always 0 0
        multilabel *label307
  526:  set :_median.7:i 7
  527:  setaddr *tmp278 *label308
  528:  jump *label299 always 0 0
        multilabel *label308
  529:  set :_median.7:i 8
  530:  setaddr *tmp278 *label309
  531:  jump *label299 always 0 0
        multilabel *label309
  532:  set :_median.7:i 9
  533:  setaddr *tmp278 *label310
        label *label299
  534:  select *tmp731 greaterThan 1 :_median.7:i 1 0
  535:  select :_isMedian.7:lt lessThan 1 :_median.7:i 1 0
  536:  select :_isMedian.7:gt lessThan 1 :_median.7:i 0 *tmp731
  537:  jump *label590 greaterThanEq 2 :_median.7:i
  538:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  539:  jump *label593 always 0 0
        label *label590
  540:  jump *label591 lessThanEq 2 :_median.7:i
  541:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label591
        label *label593
  542:  jump *label598 greaterThanEq 3 :_median.7:i
  543:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  544:  jump *label601 always 0 0
        label *label598
  545:  jump *label599 lessThanEq 3 :_median.7:i
  546:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label599
        label *label601
  547:  jump *label606 greaterThanEq 4 :_median.7:i
  548:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  549:  jump *label609 always 0 0
        label *label606
  550:  jump *label607 lessThanEq 4 :_median.7:i
  551:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label607
        label *label609
  552:  jump *label614 greaterThanEq 5 :_median.7:i
  553:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  554:  jump *label617 always 0 0
        label *label614
  555:  jump *label615 lessThanEq 5 :_median.7:i
  556:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label615
        label *label617
  557:  jump *label622 greaterThanEq 6 :_median.7:i
  558:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  559:  jump *label625 always 0 0
        label *label622
  560:  jump *label623 lessThanEq 6 :_median.7:i
  561:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label623
        label *label625
  562:  jump *label630 greaterThanEq 7 :_median.7:i
  563:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  564:  jump *label633 always 0 0
        label *label630
  565:  jump *label631 lessThanEq 7 :_median.7:i
  566:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label631
        label *label633
  567:  jump *label638 greaterThanEq 8 :_median.7:i
  568:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  569:  jump *label641 always 0 0
        label *label638
  570:  jump *label639 lessThanEq 8 :_median.7:i
  571:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label639
        label *label641
  572:  jump *label646 greaterThanEq 9 :_median.7:i
  573:  op add :_isMedian.7:lt :_isMedian.7:lt 1
  574:  jump *label649 always 0 0
        label *label646
  575:  jump *label647 lessThanEq 9 :_median.7:i
  576:  op add :_isMedian.7:gt :_isMedian.7:gt 1
        label *label647
        label *label649
  577:  op sub *tmp285 :_isMedian.7:gt :_isMedian.7:lt
  578:  op abs :_isMedian.7:dif *tmp285 0
  579:  op add *tmp287 :_isMedian.7:gt :_isMedian.7:lt
  580:  op equal *tmp455 :_isMedian.7:gt :_isMedian.7:lt
  581:  select *tmp290 greaterThanEq *tmp287 8 *tmp455 false
  582:  jump *label330 equal *tmp290 false
  583:  set *tmp277 :_median.7:i
  584:  jump *label298 always 0 0
        label *label330
  585:  jump *label332 greaterThanEq :_isMedian.7:dif :_median.7:bestDif
  586:  set :_median.7:bestDif :_isMedian.7:dif
  587:  set :_median.7:best :_median.7:i
  588:  set :_median.7:count 1
  589:  multijump *tmp278 0 0
        label *label332
  590:  jump *label334 greaterThan :_isMedian.7:dif :_median.7:bestDif
  591:  op add :_median.7:best :_median.7:best :_median.7:i
  592:  op add :_median.7:count :_median.7:count 1
        label *label334
  593:  multijump *tmp278 0 0
        multilabel *label310
  594:  op div *tmp277 :_median.7:best :_median.7:count
        label *label298
  595:  assertequals 5 *tmp277 "median(1,2,3,4,5,6,7,8,9)"
  596:  set :_median.8:bestDif 10000000000
  597:  set :_median.8:best null
  598:  set :_median.8:count 1
  599:  set :_median.8:i 9
  600:  setaddr *tmp300 *label341
  601:  jump *label338 always 0 0
        multilabel *label341
  602:  set :_median.8:i 8
  603:  setaddr *tmp300 *label342
  604:  jump *label338 always 0 0
        multilabel *label342
  605:  set :_median.8:i 7
  606:  setaddr *tmp300 *label343
  607:  jump *label338 always 0 0
        multilabel *label343
  608:  set :_median.8:i 6
  609:  setaddr *tmp300 *label344
  610:  jump *label338 always 0 0
        multilabel *label344
  611:  set :_median.8:i 5
  612:  setaddr *tmp300 *label345
  613:  jump *label338 always 0 0
        multilabel *label345
  614:  set :_median.8:i 4
  615:  setaddr *tmp300 *label346
  616:  jump *label338 always 0 0
        multilabel *label346
  617:  set :_median.8:i 3
  618:  setaddr *tmp300 *label347
  619:  jump *label338 always 0 0
        multilabel *label347
  620:  set :_median.8:i 2
  621:  setaddr *tmp300 *label348
  622:  jump *label338 always 0 0
        multilabel *label348
  623:  set :_median.8:i 1
  624:  setaddr *tmp300 *label349
        label *label338
  625:  select *tmp750 greaterThan 9 :_median.8:i 1 0
  626:  select :_isMedian.8:lt lessThan 9 :_median.8:i 1 0
  627:  select :_isMedian.8:gt lessThan 9 :_median.8:i 0 *tmp750
  628:  jump *label663 greaterThanEq 8 :_median.8:i
  629:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  630:  jump *label666 always 0 0
        label *label663
  631:  jump *label664 lessThanEq 8 :_median.8:i
  632:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label664
        label *label666
  633:  jump *label671 greaterThanEq 7 :_median.8:i
  634:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  635:  jump *label674 always 0 0
        label *label671
  636:  jump *label672 lessThanEq 7 :_median.8:i
  637:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label672
        label *label674
  638:  jump *label679 greaterThanEq 6 :_median.8:i
  639:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  640:  jump *label682 always 0 0
        label *label679
  641:  jump *label680 lessThanEq 6 :_median.8:i
  642:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label680
        label *label682
  643:  jump *label687 greaterThanEq 5 :_median.8:i
  644:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  645:  jump *label690 always 0 0
        label *label687
  646:  jump *label688 lessThanEq 5 :_median.8:i
  647:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label688
        label *label690
  648:  jump *label695 greaterThanEq 4 :_median.8:i
  649:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  650:  jump *label698 always 0 0
        label *label695
  651:  jump *label696 lessThanEq 4 :_median.8:i
  652:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label696
        label *label698
  653:  jump *label703 greaterThanEq 3 :_median.8:i
  654:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  655:  jump *label706 always 0 0
        label *label703
  656:  jump *label704 lessThanEq 3 :_median.8:i
  657:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label704
        label *label706
  658:  jump *label711 greaterThanEq 2 :_median.8:i
  659:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  660:  jump *label714 always 0 0
        label *label711
  661:  jump *label712 lessThanEq 2 :_median.8:i
  662:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label712
        label *label714
  663:  jump *label719 greaterThanEq 1 :_median.8:i
  664:  op add :_isMedian.8:lt :_isMedian.8:lt 1
  665:  jump *label722 always 0 0
        label *label719
  666:  jump *label720 lessThanEq 1 :_median.8:i
  667:  op add :_isMedian.8:gt :_isMedian.8:gt 1
        label *label720
        label *label722
  668:  op sub *tmp307 :_isMedian.8:gt :_isMedian.8:lt
  669:  op abs :_isMedian.8:dif *tmp307 0
  670:  op add *tmp309 :_isMedian.8:gt :_isMedian.8:lt
  671:  op equal *tmp460 :_isMedian.8:gt :_isMedian.8:lt
  672:  select *tmp312 greaterThanEq *tmp309 8 *tmp460 false
  673:  jump *label369 equal *tmp312 false
  674:  set *tmp299 :_median.8:i
  675:  jump *label337 always 0 0
        label *label369
  676:  jump *label371 greaterThanEq :_isMedian.8:dif :_median.8:bestDif
  677:  set :_median.8:bestDif :_isMedian.8:dif
  678:  set :_median.8:best :_median.8:i
  679:  set :_median.8:count 1
  680:  multijump *tmp300 0 0
        label *label371
  681:  jump *label373 greaterThan :_isMedian.8:dif :_median.8:bestDif
  682:  op add :_median.8:best :_median.8:best :_median.8:i
  683:  op add :_median.8:count :_median.8:count 1
        label *label373
  684:  multijump *tmp300 0 0
        multilabel *label349
  685:  op div *tmp299 :_median.8:best :_median.8:count
        label *label337
  686:  assertequals 5 *tmp299 "median(9,8,7,6,5,4,3,2,1)"
  687:  set :_median.9:bestDif 10000000000
  688:  set :_median.9:best null
  689:  set :_median.9:count 1
  690:  set :_median.9:i 1
  691:  setaddr *tmp322 *label380
  692:  jump *label377 always 0 0
        multilabel *label380
  693:  set :_median.9:i 3
  694:  setaddr *tmp322 *label381
  695:  jump *label377 always 0 0
        multilabel *label381
  696:  set :_median.9:i 5
  697:  setaddr *tmp322 *label382
  698:  jump *label377 always 0 0
        multilabel *label382
  699:  set :_median.9:i 7
  700:  setaddr *tmp322 *label383
  701:  jump *label377 always 0 0
        multilabel *label383
  702:  set :_median.9:i 9
  703:  setaddr *tmp322 *label384
  704:  jump *label377 always 0 0
        multilabel *label384
  705:  set :_median.9:i 2
  706:  setaddr *tmp322 *label385
  707:  jump *label377 always 0 0
        multilabel *label385
  708:  set :_median.9:i 4
  709:  setaddr *tmp322 *label386
  710:  jump *label377 always 0 0
        multilabel *label386
  711:  set :_median.9:i 6
  712:  setaddr *tmp322 *label387
  713:  jump *label377 always 0 0
        multilabel *label387
  714:  set :_median.9:i 8
  715:  setaddr *tmp322 *label388
        label *label377
  716:  select *tmp769 greaterThan 1 :_median.9:i 1 0
  717:  select :_isMedian.9:lt lessThan 1 :_median.9:i 1 0
  718:  select :_isMedian.9:gt lessThan 1 :_median.9:i 0 *tmp769
  719:  jump *label742 greaterThanEq 3 :_median.9:i
  720:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  721:  jump *label745 always 0 0
        label *label742
  722:  jump *label743 lessThanEq 3 :_median.9:i
  723:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label743
        label *label745
  724:  jump *label750 greaterThanEq 5 :_median.9:i
  725:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  726:  jump *label753 always 0 0
        label *label750
  727:  jump *label751 lessThanEq 5 :_median.9:i
  728:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label751
        label *label753
  729:  jump *label758 greaterThanEq 7 :_median.9:i
  730:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  731:  jump *label761 always 0 0
        label *label758
  732:  jump *label759 lessThanEq 7 :_median.9:i
  733:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label759
        label *label761
  734:  jump *label766 greaterThanEq 9 :_median.9:i
  735:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  736:  jump *label769 always 0 0
        label *label766
  737:  jump *label767 lessThanEq 9 :_median.9:i
  738:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label767
        label *label769
  739:  jump *label774 greaterThanEq 2 :_median.9:i
  740:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  741:  jump *label777 always 0 0
        label *label774
  742:  jump *label775 lessThanEq 2 :_median.9:i
  743:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label775
        label *label777
  744:  jump *label782 greaterThanEq 4 :_median.9:i
  745:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  746:  jump *label785 always 0 0
        label *label782
  747:  jump *label783 lessThanEq 4 :_median.9:i
  748:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label783
        label *label785
  749:  jump *label790 greaterThanEq 6 :_median.9:i
  750:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  751:  jump *label793 always 0 0
        label *label790
  752:  jump *label791 lessThanEq 6 :_median.9:i
  753:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label791
        label *label793
  754:  jump *label798 greaterThanEq 8 :_median.9:i
  755:  op add :_isMedian.9:lt :_isMedian.9:lt 1
  756:  jump *label801 always 0 0
        label *label798
  757:  jump *label799 lessThanEq 8 :_median.9:i
  758:  op add :_isMedian.9:gt :_isMedian.9:gt 1
        label *label799
        label *label801
  759:  op sub *tmp329 :_isMedian.9:gt :_isMedian.9:lt
  760:  op abs :_isMedian.9:dif *tmp329 0
  761:  op add *tmp331 :_isMedian.9:gt :_isMedian.9:lt
  762:  op equal *tmp465 :_isMedian.9:gt :_isMedian.9:lt
  763:  select *tmp334 greaterThanEq *tmp331 8 *tmp465 false
  764:  jump *label408 equal *tmp334 false
  765:  set *tmp321 :_median.9:i
  766:  jump *label376 always 0 0
        label *label408
  767:  jump *label410 greaterThanEq :_isMedian.9:dif :_median.9:bestDif
  768:  set :_median.9:bestDif :_isMedian.9:dif
  769:  set :_median.9:best :_median.9:i
  770:  set :_median.9:count 1
  771:  multijump *tmp322 0 0
        label *label410
  772:  jump *label412 greaterThan :_isMedian.9:dif :_median.9:bestDif
  773:  op add :_median.9:best :_median.9:best :_median.9:i
  774:  op add :_median.9:count :_median.9:count 1
        label *label412
  775:  multijump *tmp322 0 0
        multilabel *label388
  776:  op div *tmp321 :_median.9:best :_median.9:count
        label *label376
  777:  assertequals 5 *tmp321 "median(1,3,5,7,9,2,4,6,8)"
  778:  set :_median.10:bestDif 10000000000
  779:  set :_median.10:best null
  780:  set :_median.10:count 1
  781:  set :_median.10:i 7
  782:  setaddr *tmp344 *label419
  783:  jump *label416 always 0 0
        multilabel *label419
  784:  set :_median.10:i 4
  785:  setaddr *tmp344 *label420
  786:  jump *label416 always 0 0
        multilabel *label420
  787:  set :_median.10:i 2
  788:  setaddr *tmp344 *label421
  789:  jump *label416 always 0 0
        multilabel *label421
  790:  set :_median.10:i 8
  791:  setaddr *tmp344 *label422
  792:  jump *label416 always 0 0
        multilabel *label422
  793:  set :_median.10:i 1
  794:  setaddr *tmp344 *label423
  795:  jump *label416 always 0 0
        multilabel *label423
  796:  set :_median.10:i 5
  797:  setaddr *tmp344 *label424
  798:  jump *label416 always 0 0
        multilabel *label424
  799:  set :_median.10:i 6
  800:  setaddr *tmp344 *label425
  801:  jump *label416 always 0 0
        multilabel *label425
  802:  set :_median.10:i 9
  803:  setaddr *tmp344 *label426
  804:  jump *label416 always 0 0
        multilabel *label426
  805:  set :_median.10:i 3
  806:  setaddr *tmp344 *label427
        label *label416
  807:  select *tmp1113 greaterThan 7 :_median.10:i 1 0
  808:  select :_isMedian.10:lt lessThan 7 :_median.10:i 1 0
  809:  select :_isMedian.10:gt lessThan 7 :_median.10:i 0 *tmp1113
  810:  jump *label815 greaterThanEq 4 :_median.10:i
  811:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  812:  jump *label818 always 0 0
        label *label815
  813:  jump *label816 lessThanEq 4 :_median.10:i
  814:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label816
        label *label818
  815:  jump *label823 greaterThanEq 2 :_median.10:i
  816:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  817:  jump *label826 always 0 0
        label *label823
  818:  jump *label824 lessThanEq 2 :_median.10:i
  819:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label824
        label *label826
  820:  jump *label831 greaterThanEq 8 :_median.10:i
  821:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  822:  jump *label834 always 0 0
        label *label831
  823:  jump *label832 lessThanEq 8 :_median.10:i
  824:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label832
        label *label834
  825:  jump *label839 greaterThanEq 1 :_median.10:i
  826:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  827:  jump *label842 always 0 0
        label *label839
  828:  jump *label840 lessThanEq 1 :_median.10:i
  829:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label840
        label *label842
  830:  jump *label847 greaterThanEq 5 :_median.10:i
  831:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  832:  jump *label850 always 0 0
        label *label847
  833:  jump *label848 lessThanEq 5 :_median.10:i
  834:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label848
        label *label850
  835:  jump *label855 greaterThanEq 6 :_median.10:i
  836:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  837:  jump *label858 always 0 0
        label *label855
  838:  jump *label856 lessThanEq 6 :_median.10:i
  839:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label856
        label *label858
  840:  jump *label863 greaterThanEq 9 :_median.10:i
  841:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  842:  jump *label866 always 0 0
        label *label863
  843:  jump *label864 lessThanEq 9 :_median.10:i
  844:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label864
        label *label866
  845:  jump *label871 greaterThanEq 3 :_median.10:i
  846:  op add :_isMedian.10:lt :_isMedian.10:lt 1
  847:  jump *label874 always 0 0
        label *label871
  848:  jump *label872 lessThanEq 3 :_median.10:i
  849:  op add :_isMedian.10:gt :_isMedian.10:gt 1
        label *label872
        label *label874
  850:  op sub *tmp351 :_isMedian.10:gt :_isMedian.10:lt
  851:  op abs :_isMedian.10:dif *tmp351 0
  852:  op add *tmp353 :_isMedian.10:gt :_isMedian.10:lt
  853:  op equal *tmp470 :_isMedian.10:gt :_isMedian.10:lt
  854:  select *tmp356 greaterThanEq *tmp353 8 *tmp470 false
  855:  jump *label447 equal *tmp356 false
  856:  set *tmp343 :_median.10:i
  857:  jump *label415 always 0 0
        label *label447
  858:  jump *label449 greaterThanEq :_isMedian.10:dif :_median.10:bestDif
  859:  set :_median.10:bestDif :_isMedian.10:dif
  860:  set :_median.10:best :_median.10:i
  861:  set :_median.10:count 1
  862:  multijump *tmp344 0 0
        label *label449
  863:  jump *label451 greaterThan :_isMedian.10:dif :_median.10:bestDif
  864:  op add :_median.10:best :_median.10:best :_median.10:i
  865:  op add :_median.10:count :_median.10:count 1
        label *label451
  866:  multijump *tmp344 0 0
        multilabel *label427
  867:  op div *tmp343 :_median.10:best :_median.10:count
        label *label415
  868:  assertequals 5 *tmp343 "median(7,4,2,8,1,5,6,9,3)"
  869:  set :_median.11:bestDif 10000000000
  870:  set :_median.11:best null
  871:  set :_median.11:count 1
  872:  set :_median.11:i 1
  873:  setaddr *tmp366 *label458
  874:  jump *label455 always 0 0
        multilabel *label458
  875:  set :_median.11:i 1
  876:  setaddr *tmp366 *label459
  877:  jump *label455 always 0 0
        multilabel *label459
  878:  set :_median.11:i 1
  879:  setaddr *tmp366 *label460
  880:  jump *label455 always 0 0
        multilabel *label460
  881:  set :_median.11:i 1
  882:  setaddr *tmp366 *label461
  883:  jump *label455 always 0 0
        multilabel *label461
  884:  set :_median.11:i 9
  885:  setaddr *tmp366 *label462
  886:  jump *label455 always 0 0
        multilabel *label462
  887:  set :_median.11:i 9
  888:  setaddr *tmp366 *label463
  889:  jump *label455 always 0 0
        multilabel *label463
  890:  set :_median.11:i 9
  891:  setaddr *tmp366 *label464
  892:  jump *label455 always 0 0
        multilabel *label464
  893:  set :_median.11:i 9
  894:  setaddr *tmp366 *label465
  895:  jump *label455 always 0 0
        multilabel *label465
  896:  set :_median.11:i 5
  897:  setaddr *tmp366 *label466
        label *label455
  898:  set :_isMedian.11:lt 0
  899:  set :_isMedian.11:gt 0
  900:  set :_isMedian.11:i 1
  901:  setaddr *tmp368 *label471
  902:  jump *label468 always 0 0
        multilabel *label471
  903:  set :_isMedian.11:i 1
  904:  setaddr *tmp368 *label472
  905:  jump *label468 always 0 0
        multilabel *label472
  906:  set :_isMedian.11:i 1
  907:  setaddr *tmp368 *label473
  908:  jump *label468 always 0 0
        multilabel *label473
  909:  set :_isMedian.11:i 1
  910:  setaddr *tmp368 *label474
  911:  jump *label468 always 0 0
        multilabel *label474
  912:  set :_isMedian.11:i 9
  913:  setaddr *tmp368 *label475
  914:  jump *label468 always 0 0
        multilabel *label475
  915:  set :_isMedian.11:i 9
  916:  setaddr *tmp368 *label476
  917:  jump *label468 always 0 0
        multilabel *label476
  918:  set :_isMedian.11:i 9
  919:  setaddr *tmp368 *label477
  920:  jump *label468 always 0 0
        multilabel *label477
  921:  set :_isMedian.11:i 9
  922:  setaddr *tmp368 *label478
  923:  jump *label468 always 0 0
        multilabel *label478
  924:  set :_isMedian.11:i 5
  925:  setaddr *tmp368 *label479
        label *label468
  926:  jump *label480 greaterThanEq :_isMedian.11:i :_median.11:i
  927:  op add :_isMedian.11:lt :_isMedian.11:lt 1
  928:  multijump *tmp368 0 0
        label *label480
  929:  jump *label482 lessThanEq :_isMedian.11:i :_median.11:i
  930:  op add :_isMedian.11:gt :_isMedian.11:gt 1
        label *label482
  931:  multijump *tmp368 0 0
        multilabel *label479
  932:  op sub *tmp373 :_isMedian.11:gt :_isMedian.11:lt
  933:  op abs :_isMedian.11:dif *tmp373 0
  934:  op add *tmp375 :_isMedian.11:gt :_isMedian.11:lt
  935:  op equal *tmp475 :_isMedian.11:gt :_isMedian.11:lt
  936:  select *tmp378 greaterThanEq *tmp375 8 *tmp475 false
  937:  jump *label486 equal *tmp378 false
  938:  set *tmp365 :_median.11:i
  939:  jump *label454 always 0 0
        label *label486
  940:  jump *label488 greaterThanEq :_isMedian.11:dif :_median.11:bestDif
  941:  set :_median.11:bestDif :_isMedian.11:dif
  942:  set :_median.11:best :_median.11:i
  943:  set :_median.11:count 1
  944:  multijump *tmp366 0 0
        label *label488
  945:  jump *label490 greaterThan :_isMedian.11:dif :_median.11:bestDif
  946:  op add :_median.11:best :_median.11:best :_median.11:i
  947:  op add :_median.11:count :_median.11:count 1
        label *label490
  948:  multijump *tmp366 0 0
        multilabel *label466
  949:  op div *tmp365 :_median.11:best :_median.11:count
        label *label454
  950:  assertequals 5 *tmp365 "median(1,1,1,1,9,9,9,9,5)"
  951:  stop
  952:  end
        label *label1
  953:  op max :median:y2 :median:x1 :median:x2
  954:  op min :median:y3 :median:x3 :median:x4
  955:  jump *label498 greaterThan :median:y2 :median:y3
  956:  op add *tmp394 :median:y2 :median:y3
  957:  op div :median*retval *tmp394 2
  958:  return :median*retaddr
        label *label498
  959:  op min :median:y1 :median:x1 :median:x2
  960:  op max :median:y4 :median:x3 :median:x4
  961:  jump *label500 lessThan :median:y1 :median:y4
  962:  op add *tmp400 :median:y1 :median:y4
  963:  op div :median*retval *tmp400 2
  964:  return :median*retaddr
        label *label500
  965:  op max *tmp402 :median:y1 :median:y3
  966:  op min *tmp403 :median:y2 :median:y4
  967:  op add *tmp404 *tmp402 *tmp403
  968:  op div :median*retval *tmp404 2
  969:  return :median*retaddr
        label *label2
  970:  op min :median.1:y1 :median.1:x1 :median.1:x2
  971:  op max :median.1:y2 :median.1:x1 :median.1:x2
  972:  op min :median.1:y4 :median.1:x4 :median.1:x5
  973:  op max :median.1:y5 :median.1:x4 :median.1:x5
  974:  jump *label503 greaterThanEq :median.1:y4 :median.1:y1
  975:  set :median.1:y4 :median.1:y1
  976:  set :_swap.1:t :median.1:y2
  977:  set :median.1:y2 :median.1:y5
  978:  set :median.1:y5 :_swap.1:t
        label *label503
  979:  jump *label507 lessThanEq :median.1:x3 :median.1:y2
  980:  op min :median.1*retval :median.1:y2 :median.1:y5
  981:  jump *label508 greaterThanEq :median.1:y2 :median.1:y4
  982:  op min :median.1*retval :median.1:x3 :median.1:y4
  983:  return :median.1*retaddr
        label *label507
  984:  op min :median.1*retval :median.1:y2 :median.1:y4
  985:  jump *label512 lessThanEq :median.1:x3 :median.1:y4
  986:  op min :median.1*retval :median.1:x3 :median.1:y5
        label *label512
        label *label508
  987:  return :median.1*retaddr


stop instruction encountered, dumping variable values:
*tmp1028: 0.0
*tmp1113: 1.0
*tmp123: 1.0
*tmp124: 152.0
*tmp145: 1.0
*tmp146: 219.0
*tmp153: -5.0
*tmp1530: 0.0
*tmp155: 5.0
*tmp158: 0.0
*tmp167: 1.0
*tmp168: 286.0
*tmp175: -4.0
*tmp177: 4.0
*tmp180: 0.0
*tmp189: 3.0
*tmp190: 350.0
*tmp192: 333.0
*tmp197: -3.0
*tmp199: 3.0
*tmp202: 0.0
*tmp211: 5.0
*tmp212: 414.0
*tmp214: 397.0
*tmp219: -2.0
*tmp221: 2.0
*tmp224: 0.0
*tmp233: 5.0
*tmp234: 478.0
*tmp236: 461.0
*tmp241: -1.0
*tmp243: 1.0
*tmp246: 0.0
*tmp255: 5.0
*tmp256: 503.0
*tmp277: 5.0
*tmp278: 523.0
*tmp285: 0.0
*tmp287: 8.0
*tmp290: 1.0
*tmp299: 5.0
*tmp300: 614.0
*tmp307: 0.0
*tmp309: 8.0
*tmp312: 1.0
*tmp321: 5.0
*tmp322: 699.0
*tmp329: 0.0
*tmp331: 8.0
*tmp334: 1.0
*tmp343: 5.0
*tmp344: 799.0
*tmp351: 0.0
*tmp353: 8.0
*tmp356: 1.0
*tmp365: 5.0
*tmp366: 949.0
*tmp368: 932.0
*tmp373: 0.0
*tmp375: 8.0
*tmp378: 1.0
*tmp394: 10.0
*tmp400: 10.0
*tmp402: 4.0
*tmp403: 6.0
*tmp404: 10.0
*tmp428: 0.0
*tmp433: 0.0
*tmp438: 0.0
*tmp443: 0.0
*tmp448: 0.0
*tmp455: 1.0
*tmp460: 1.0
*tmp465: 1.0
*tmp470: 1.0
*tmp475: 1.0
*tmp731: 0.0
*tmp750: 1.0
*tmp769: 0.0
:_isMedian.10:dif: 0.0
:_isMedian.10:gt: 4.0
:_isMedian.10:lt: 4.0
:_isMedian.11:dif: 0.0
:_isMedian.11:gt: 4.0
:_isMedian.11:i: 5.0
:_isMedian.11:lt: 4.0
:_isMedian.1:dif: 5.0
:_isMedian.1:gt: 0.0
:_isMedian.1:lt: 5.0
:_isMedian.2:dif: 4.0
:_isMedian.2:gt: 0.0
:_isMedian.2:lt: 4.0
:_isMedian.3:dif: 3.0
:_isMedian.3:gt: 0.0
:_isMedian.3:i: 5.0
:_isMedian.3:lt: 3.0
:_isMedian.4:dif: 2.0
:_isMedian.4:gt: 0.0
:_isMedian.4:i: 5.0
:_isMedian.4:lt: 2.0
:_isMedian.5:dif: 1.0
:_isMedian.5:gt: 0.0
:_isMedian.5:i: 5.0
:_isMedian.5:lt: 1.0
:_isMedian.7:dif: 0.0
:_isMedian.7:gt: 4.0
:_isMedian.7:lt: 4.0
:_isMedian.8:dif: 0.0
:_isMedian.8:gt: 4.0
:_isMedian.8:lt: 4.0
:_isMedian.9:dif: 0.0
:_isMedian.9:gt: 4.0
:_isMedian.9:lt: 4.0
:_median.10:best: 4.0
:_median.10:bestDif: 2.0
:_median.10:count: 1.0
:_median.10:i: 5.0
:_median.11:best: 40.0
:_median.11:bestDif: 5.0
:_median.11:count: 8.0
:_median.11:i: 5.0
:_median.1:best: 5.0
:_median.1:bestDif: 1.0
:_median.1:count: 5.0
:_median.1:i: 5.0
:_median.2:best: 4.0
:_median.2:bestDif: 2.0
:_median.2:count: 4.0
:_median.2:i: 5.0
:_median.3:best: 18.0
:_median.3:bestDif: 3.0
:_median.3:count: 6.0
:_median.3:i: 5.0
:_median.4:best: 20.0
:_median.4:bestDif: 2.0
:_median.4:count: 4.0
:_median.4:i: 5.0
:_median.5:best: 25.0
:_median.5:bestDif: 1.0
:_median.5:count: 5.0
:_median.5:i: 5.0
:_median.6:best: 30.0
:_median.6:bestDif: 0.0
:_median.6:count: 6.0
:_median.7:best: 4.0
:_median.7:bestDif: 2.0
:_median.7:count: 1.0
:_median.7:i: 5.0
:_median.8:best: 6.0
:_median.8:bestDif: 2.0
:_median.8:count: 1.0
:_median.8:i: 5.0
:_median.9:best: 3.0
:_median.9:bestDif: 4.0
:_median.9:count: 1.0
:_median.9:i: 5.0
:_median:best: 6.0
:_median:bestDif: 0.0
:_median:count: 6.0
:_swap.1:t: 5.0
:integer.1:result: -5.0
:integer.2:result: 100.0
:integer:result: 0.0
:median*retaddr: 86.0
:median*retval: 5.0
:median.1*retaddr: 128.0
:median.1*retval: 5.0
:median.1:x1: 5.0
:median.1:x2: 5.0
:median.1:x3: 5.0
:median.1:x4: 5.0
:median.1:x5: 5.0
:median.1:y1: 5.0
:median.1:y2: 5.0
:median.1:y4: 5.0
:median.1:y5: 5.0
:median:x1: 6.0
:median:x2: 2.0
:median:x3: 8.0
:median:x4: 4.0
:median:y1: 2.0
:median:y2: 6.0
:median:y3: 4.0
:median:y4: 8.0
:nullToZero.1:result: 1.0
:nullToZero:result: 0.0
@counter: 952.0