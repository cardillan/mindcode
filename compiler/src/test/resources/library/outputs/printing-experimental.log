   497 instructions before optimizations.
    27 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
    40 instructions eliminated by Dead Code Elimination (6 iterations).
    73 instructions eliminated by Jump Normalization (3 passes, 7 iterations).
    22 instructions eliminated by Jump Optimization (7 iterations).
    44 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
     9 instructions modified by Expression Optimization (5 iterations).
     7 instructions eliminated by If Expression Optimization (2 passes, 5 iterations).
   340 instructions eliminated by Data Flow Optimization (24 passes, 79 iterations).
     4 instructions eliminated by Loop Optimization (5 iterations).
     7 loops improved by Loop Optimization.
   619 instructions added by Loop Unrolling (29 iterations).
    17 loops unrolled by Loop Unrolling.
   363 instructions added by Function Inlining (29 iterations).
    16 function calls inlined by Function Inlining.
     2 case expressions converted to switched jumps Case Switching.
     6 instructions eliminated by Jump Straightening (7 iterations).
   145 instructions updated by JumpThreading.
   332 instructions eliminated by Unreachable Code Elimination (2 iterations).
     5 instructions eliminated by Print Merging.
   578 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 626):
  * Unroll iteration loop at *printing:23:5                      size    -5, benefit       11.0, efficiency   Infinity (-5 instructions)
    Unroll iteration loop at *printing:344:5                     size    +5, benefit        7.0, efficiency      1.400
    Unroll loop at *printing:345:9                               size   +90, benefit    40000.0, efficiency    444.444
    Unroll iteration loop at *printing:369:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:370:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 631):
    Unroll iteration loop at *printing:344:5                     size    +5, benefit        7.0, efficiency      1.400
  * Unroll loop at *printing:345:9                               size   +90, benefit    40000.0, efficiency    444.444 (+90 instructions)
    Unroll iteration loop at *printing:369:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:370:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 541):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size    +9, benefit        7.0, efficiency      0.778
  * Unroll loop at *printing:370:9                               size   +32, benefit    10000.0, efficiency    312.500 (+24 instructions)
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 517):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944
  * Unroll loop at *printing:317:9                               size   +53, benefit     3750.0, efficiency     70.755 (+53 instructions)
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:304:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 464):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  * Unroll loop at *printing:267:13                              size   +27, benefit      187.5, efficiency      6.944 (+27 instructions)
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:243:1  size  +404, benefit       35.0, efficiency      0.087
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 437):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
  * Inline function 'printBinaryNumber' defined at *printing:141:1 size   +33, benefit       12.0, efficiency      0.364 (+17 instructions)
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 420):
  * Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 419):
  * Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 418):
  * Unroll loop at *printing:113:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 421):
  * Unroll loop at *printing:107:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 420):
  * Unroll loop at *printing:113:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 423):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printNumber' defined at *printing:78:1      size   +95, benefit       24.5, efficiency      0.258 (+72 instructions)
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 7:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 8:19                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 9:20                            size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 10:27                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 11:28                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 12:31                           size   +16, benefit        3.5, efficiency      0.219
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 351):
  * Unroll loop at *printing:49:5                                size    +5, benefit      100.0, efficiency     20.000 (-2 instructions)
    Unroll loop at *printing:49:5                                size    +5, benefit      100.0, efficiency     20.000
    Unroll loop at *printing:49:5                                size   +13, benefit      150.0, efficiency     11.538
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 353):
  * Unroll loop at *printing:49:5                                size    +5, benefit      100.0, efficiency     20.000 (-2 instructions)
    Unroll loop at *printing:49:5                                size   +13, benefit      150.0, efficiency     11.538
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 355):
  * Unroll loop at *printing:49:5                                size   +13, benefit      150.0, efficiency     11.538 (+3 instructions)
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 352):
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printHexNumber' defined at *printing:213:1  size  +113, benefit       16.0, efficiency      0.142 (+93 instructions)
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 259):
  * Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
    Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:304:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 149):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +647, benefit       35.0, efficiency      0.054
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 39):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:185:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
    Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 42):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  * Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 42):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:172:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:172:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  * Convert case at *printing:172:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)

Pass 1: speed optimization selection (cost limit 42):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Unroll iteration loop at *printing:369:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 116):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  * Unroll iteration loop at *printing:369:5                     size   +55, benefit        7.0, efficiency      0.127 (-5 instructions)
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 121):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  * Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049 (+50 instructions)
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 71):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 94):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +575, benefit       31.5, efficiency      0.055
  * Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049 (+49 instructions)
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 45):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +503, benefit       28.0, efficiency      0.056
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 4: speed optimization selection (cost limit 59):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +503, benefit       28.0, efficiency      0.056
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 5: speed optimization selection (cost limit 59):
  ! Unroll loop at *printing:170:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:170:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:344:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function 'printExactFast' defined at *printing:243:1  size  +503, benefit       28.0, efficiency      0.056
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "1\n2\n3\n"
    2:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
    3:  assertflush
    4:  print "{2}"
    5:  op floor :formatNumber:n 0 0
    6:  format :formatNumber:n
    7:  assertprints "0" "printNumber(null)"
    8:  assertflush
    9:  print "{2}"
   10:  op floor :formatNumber:n 1 0
   11:  format :formatNumber:n
   12:  assertprints "1" "printNumber(1)"
   13:  assertflush
   14:  print "{2}"
   15:  op floor :formatNumber:n 1.5 0
   16:  format :formatNumber:n
   17:  assertprints "1" "printNumber(1.5)"
   18:  assertflush
   19:  print "{2}"
   20:  op floor :formatNumber:n 1.5 0
   21:  format "-{2}"
   22:  format :formatNumber:n
   23:  assertprints "-1" "printNumber(-1.5)"
   24:  assertflush
   25:  print "{2}"
   26:  format "{2},{1}"
   27:  format 567
   28:  format "{2},{1}"
   29:  format 234
   30:  format 1
   31:  assertprints "1,234,567" "printNumber(1234567)"
   32:  assertflush
   33:  print "{2}"
   34:  format "-{2}"
   35:  format "{2},{1}"
   36:  format 567
   37:  format "{2},{1}"
   38:  format 234
   39:  format 1
   40:  assertprints "-1,234,567" "printNumber(-1234567)"
   41:  assertflush
   42:  print "{2}"
   43:  format "{2},{1}"
   44:  format 999
   45:  format "{2},0{1}"
   46:  format 99
   47:  format "{2},00{1}"
   48:  format 9
   49:  format 9
   50:  assertprints "9,009,099,999" "printNumber(9009099999)"
   51:  assertflush
   52:  print "{2}"
   53:  format "{2}{1}"
   54:  format 1
   55:  format "{2}{1}"
   56:  format 0
   57:  format "{2}{1}"
   58:  format 0
   59:  format "{2}{1}"
   60:  format 1
   61:  format "0b"
   62:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   63:  assertflush
   64:  print "{2}"
   65:  format "{2}{1}"
   66:  format 0
   67:  format "{2}{1}"
   68:  format 1
   69:  format "{2}{1}"
   70:  format 0
   71:  format "{2}{1}"
   72:  format 1
   73:  format "{2}0"
   74:  format "{2}0"
   75:  format "0b"
   76:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   77:  assertflush
   78:  print "{2}"
   79:  format "-{2}"
   80:  format "{2}{1}"
   81:  format 0
   82:  format "{2}{1}"
   83:  format 1
   84:  format "{2}{1}"
   85:  format 0
   86:  format "{2}{1}"
   87:  format 1
   88:  format "{2}0"
   89:  format "{2}0"
   90:  format "0b"
   91:  assertprints "-0b001010" "printBinaryNumber(-0b1010, 6)"
   92:  assertflush
   93:  print "{2}"
   94:  format "{2}F"
   95:  format "{2}E"
   96:  format "{2}D"
   97:  format "{2}C"
   98:  format "{2}B"
   99:  format "{2}A"
  100:  format "0x"
  101:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
  102:  assertflush
  103:  print "{2}"
  104:  set :formatHexNumber:digits 0
  105:  op floor :formatHexNumber:n 0x1234567890 0
        label *label570
  106:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  107:  jump *label873 greaterThanEq :formatHexNumber:digit 10
  108:  jump *label872 lessThan :formatHexNumber:digit 0
  109:  format "{2}{1}"
  110:  format :formatHexNumber:digit
  111:  jump *label586 always 0 0
        label *label873
  112:  jump *label874 greaterThanEq :formatHexNumber:digit 13
  113:  jump *label574 lessThan :formatHexNumber:digit 11
  114:  jump *label578 greaterThanEq :formatHexNumber:digit 12
  115:  format "{2}B"
  116:  jump *label586 always 0 0
        label *label874
  117:  jump *label875 greaterThanEq :formatHexNumber:digit 15
  118:  jump *label582 greaterThanEq :formatHexNumber:digit 14
  119:  format "{2}D"
  120:  jump *label586 always 0 0
        label *label875
  121:  jump *label584 lessThan :formatHexNumber:digit 16
  122:  jump *label872 always 0 0
        label *label574
  123:  format "{2}A"
  124:  jump *label586 always 0 0
        label *label578
  125:  format "{2}C"
  126:  jump *label586 always 0 0
        label *label582
  127:  format "{2}E"
  128:  jump *label586 always 0 0
        label *label584
  129:  format "{2}F"
        label *label872
        label *label586
  130:  op shr :formatHexNumber:n :formatHexNumber:n 4
  131:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  132:  jump *label570 greaterThan :formatHexNumber:n 0
  133:  jump *label592 lessThanEq :formatHexNumber:digits 0
        label *label590
  134:  format "{2}0"
  135:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  136:  jump *label590 greaterThan :formatHexNumber:digits 0
        label *label592
  137:  format "0x"
  138:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  139:  assertflush
  140:  print "{2}"
  141:  format "{2}C"
  142:  format "{2}C"
  143:  format "{2}B"
  144:  format "{2}B"
  145:  format "{2}A"
  146:  format "{2}A"
  147:  format "{2}0"
  148:  format "{2}0"
  149:  format "0x"
  150:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  151:  assertflush
  152:  print "{2}"
  153:  set :formatHexNumber:digits 8
  154:  format "-{2}"
  155:  op floor :formatHexNumber:n 11189196 0
        label *label626
  156:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  157:  jump *label877 greaterThanEq :formatHexNumber:digit 10
  158:  jump *label876 lessThan :formatHexNumber:digit 0
  159:  format "{2}{1}"
  160:  format :formatHexNumber:digit
  161:  jump *label642 always 0 0
        label *label877
  162:  jump *label878 greaterThanEq :formatHexNumber:digit 13
  163:  jump *label630 lessThan :formatHexNumber:digit 11
  164:  jump *label634 greaterThanEq :formatHexNumber:digit 12
  165:  format "{2}B"
  166:  jump *label642 always 0 0
        label *label878
  167:  jump *label879 greaterThanEq :formatHexNumber:digit 15
  168:  jump *label638 greaterThanEq :formatHexNumber:digit 14
  169:  format "{2}D"
  170:  jump *label642 always 0 0
        label *label879
  171:  jump *label640 lessThan :formatHexNumber:digit 16
  172:  jump *label876 always 0 0
        label *label630
  173:  format "{2}A"
  174:  jump *label642 always 0 0
        label *label634
  175:  format "{2}C"
  176:  jump *label642 always 0 0
        label *label638
  177:  format "{2}E"
  178:  jump *label642 always 0 0
        label *label640
  179:  format "{2}F"
        label *label876
        label *label642
  180:  op shr :formatHexNumber:n :formatHexNumber:n 4
  181:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  182:  jump *label626 greaterThan :formatHexNumber:n 0
  183:  jump *label648 lessThanEq :formatHexNumber:digits 0
        label *label646
  184:  format "{2}0"
  185:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  186:  jump *label646 greaterThan :formatHexNumber:digits 0
        label *label648
  187:  format "0x"
  188:  assertprints "-0x00AABBCC" "printHexNumber(-0xAABBCC, 8)"
  189:  assertflush
  190:  print null
  191:  assertprints "null" "printExactFast(null)"
  192:  assertflush
  193:  op abs *tmp42 0 0
  194:  print 0
  195:  assertprints "0" "printExactFast(0)"
  196:  assertflush
  197:  set :printExactFast:n 1
  198:  setaddr :printExactFast*retaddr *label31
  199:  call *label6 *invalid :printExactFast*retval
        label *label31
  200:  assertprints "1" "printExactFast(1)"
  201:  assertflush
  202:  set :printExactFast:n 1.0000001
  203:  setaddr :printExactFast*retaddr *label32
  204:  call *label6 *invalid :printExactFast*retval
        label *label32
  205:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  206:  assertflush
  207:  set :printExactFast:n 3.00000007
  208:  setaddr :printExactFast*retaddr *label33
  209:  call *label6 *invalid :printExactFast*retval
        label *label33
  210:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  211:  assertflush
  212:  set :printExactFast:n 3E50
  213:  setaddr :printExactFast*retaddr *label34
  214:  call *label6 *invalid :printExactFast*retval
        label *label34
  215:  assertprints "3E50" "printExactFast(3e50)"
  216:  assertflush
  217:  set :printExactFast:n 1.0123456789
  218:  setaddr :printExactFast*retaddr *label35
  219:  call *label6 *invalid :printExactFast*retval
        label *label35
  220:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  221:  assertflush
  222:  set :printExactFast:n 10000001E13
  223:  setaddr :printExactFast*retaddr *label36
  224:  call *label6 *invalid :printExactFast*retval
        label *label36
  225:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  226:  assertflush
  227:  set :printExactFast:n 12345E-54
  228:  setaddr :printExactFast*retaddr *label37
  229:  call *label6 *invalid :printExactFast*retval
        label *label37
  230:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  231:  assertflush
  232:  set :printExactFast:n -12345E-54
  233:  setaddr :printExactFast*retaddr *label38
  234:  call *label6 *invalid :printExactFast*retval
        label *label38
  235:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  236:  assertflush
  237:  set :printExactSlow:n null
  238:  setaddr :printExactSlow*retaddr *label39
  239:  call *label7 *invalid :printExactSlow*retval
        label *label39
  240:  assertprints "null" "printExactSlow(null)"
  241:  assertflush
  242:  set :printExactSlow:n 0
  243:  setaddr :printExactSlow*retaddr *label40
  244:  call *label7 *invalid :printExactSlow*retval
        label *label40
  245:  assertprints "0" "printExactSlow(0)"
  246:  assertflush
  247:  set :printExactSlow:n 1
  248:  setaddr :printExactSlow*retaddr *label41
  249:  call *label7 *invalid :printExactSlow*retval
        label *label41
  250:  assertprints "1.000000000000000" "printExactSlow(1)"
  251:  assertflush
  252:  set :printExactSlow:n 1.0000001
  253:  setaddr :printExactSlow*retaddr *label42
  254:  call *label7 *invalid :printExactSlow*retval
        label *label42
  255:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  256:  assertflush
  257:  set :printExactSlow:n 3.00000007
  258:  setaddr :printExactSlow*retaddr *label43
  259:  call *label7 *invalid :printExactSlow*retval
        label *label43
  260:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  261:  assertflush
  262:  set :printExactSlow:n 3E50
  263:  setaddr :printExactSlow*retaddr *label44
  264:  call *label7 *invalid :printExactSlow*retval
        label *label44
  265:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  266:  assertflush
  267:  set :printExactSlow:n 1.0123456789
  268:  setaddr :printExactSlow*retaddr *label45
  269:  call *label7 *invalid :printExactSlow*retval
        label *label45
  270:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  271:  assertflush
  272:  set :printExactSlow:n 10000001E13
  273:  setaddr :printExactSlow*retaddr *label46
  274:  call *label7 *invalid :printExactSlow*retval
        label *label46
  275:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  276:  assertflush
  277:  set :printExactSlow:n 12345E-54
  278:  setaddr :printExactSlow*retaddr *label47
  279:  call *label7 *invalid :printExactSlow*retval
        label *label47
  280:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  281:  assertflush
  282:  set :printExactSlow:n -12345E-54
  283:  setaddr :printExactSlow*retaddr *label48
  284:  call *label7 *invalid :printExactSlow*retval
        label *label48
  285:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  286:  assertflush
  287:  op shr :printExactBinary:t -1035087118336 32
  288:  setaddr *tmp1 *label53
  289:  jump *label50 always 0 0
        multilabel *label53
  290:  op and :printExactBinary:t -1035087118336 0xFFFFFFFF
  291:  setaddr *tmp1 *label54
        label *label50
  292:  op shr *tmp4 :printExactBinary:t 31
  293:  op and *tmp5 *tmp4 1
  294:  print *tmp5
  295:  op shr *tmp4 :printExactBinary:t 30
  296:  op and *tmp5 *tmp4 1
  297:  print *tmp5
  298:  op shr *tmp4 :printExactBinary:t 29
  299:  op and *tmp5 *tmp4 1
  300:  print *tmp5
  301:  op shr *tmp4 :printExactBinary:t 28
  302:  op and *tmp5 *tmp4 1
  303:  print *tmp5
  304:  op shr *tmp4 :printExactBinary:t 27
  305:  op and *tmp5 *tmp4 1
  306:  print *tmp5
  307:  op shr *tmp4 :printExactBinary:t 26
  308:  op and *tmp5 *tmp4 1
  309:  print *tmp5
  310:  op shr *tmp4 :printExactBinary:t 25
  311:  op and *tmp5 *tmp4 1
  312:  print *tmp5
  313:  op shr *tmp4 :printExactBinary:t 24
  314:  op and *tmp5 *tmp4 1
  315:  print *tmp5
  316:  op shr *tmp4 :printExactBinary:t 23
  317:  op and *tmp5 *tmp4 1
  318:  print *tmp5
  319:  op shr *tmp4 :printExactBinary:t 22
  320:  op and *tmp5 *tmp4 1
  321:  print *tmp5
  322:  op shr *tmp4 :printExactBinary:t 21
  323:  op and *tmp5 *tmp4 1
  324:  print *tmp5
  325:  op shr *tmp4 :printExactBinary:t 20
  326:  op and *tmp5 *tmp4 1
  327:  print *tmp5
  328:  op shr *tmp4 :printExactBinary:t 19
  329:  op and *tmp5 *tmp4 1
  330:  print *tmp5
  331:  op shr *tmp4 :printExactBinary:t 18
  332:  op and *tmp5 *tmp4 1
  333:  print *tmp5
  334:  op shr *tmp4 :printExactBinary:t 17
  335:  op and *tmp5 *tmp4 1
  336:  print *tmp5
  337:  op shr *tmp4 :printExactBinary:t 16
  338:  op and *tmp5 *tmp4 1
  339:  print *tmp5
  340:  op shr *tmp4 :printExactBinary:t 15
  341:  op and *tmp5 *tmp4 1
  342:  print *tmp5
  343:  op shr *tmp4 :printExactBinary:t 14
  344:  op and *tmp5 *tmp4 1
  345:  print *tmp5
  346:  op shr *tmp4 :printExactBinary:t 13
  347:  op and *tmp5 *tmp4 1
  348:  print *tmp5
  349:  op shr *tmp4 :printExactBinary:t 12
  350:  op and *tmp5 *tmp4 1
  351:  print *tmp5
  352:  op shr *tmp4 :printExactBinary:t 11
  353:  op and *tmp5 *tmp4 1
  354:  print *tmp5
  355:  op shr *tmp4 :printExactBinary:t 10
  356:  op and *tmp5 *tmp4 1
  357:  print *tmp5
  358:  op shr *tmp4 :printExactBinary:t 9
  359:  op and *tmp5 *tmp4 1
  360:  print *tmp5
  361:  op shr *tmp4 :printExactBinary:t 8
  362:  op and *tmp5 *tmp4 1
  363:  print *tmp5
  364:  op shr *tmp4 :printExactBinary:t 7
  365:  op and *tmp5 *tmp4 1
  366:  print *tmp5
  367:  op shr *tmp4 :printExactBinary:t 6
  368:  op and *tmp5 *tmp4 1
  369:  print *tmp5
  370:  op shr *tmp4 :printExactBinary:t 5
  371:  op and *tmp5 *tmp4 1
  372:  print *tmp5
  373:  op shr *tmp4 :printExactBinary:t 4
  374:  op and *tmp5 *tmp4 1
  375:  print *tmp5
  376:  op shr *tmp4 :printExactBinary:t 3
  377:  op and *tmp5 *tmp4 1
  378:  print *tmp5
  379:  op shr *tmp4 :printExactBinary:t 2
  380:  op and *tmp5 *tmp4 1
  381:  print *tmp5
  382:  op shr *tmp4 :printExactBinary:t 1
  383:  op and *tmp5 *tmp4 1
  384:  print *tmp5
  385:  op and *tmp5 :printExactBinary:t 1
  386:  print *tmp5
  387:  multijump *tmp1 0 0
        multilabel *label54
  388:  assertprints "1111111111111111111111110000111100000000000000000000000000000000" "printExactBinary(0xFFFFFF0F << 32)"
  389:  assertflush
  390:  read *tmp12 "0123456789ABCDEF" 15
  391:  printchar *tmp12
  392:  read *tmp12 "0123456789ABCDEF" 15
  393:  printchar *tmp12
  394:  read *tmp12 "0123456789ABCDEF" 15
  395:  printchar *tmp12
  396:  read *tmp12 "0123456789ABCDEF" 15
  397:  printchar *tmp12
  398:  read *tmp12 "0123456789ABCDEF" 15
  399:  printchar *tmp12
  400:  read *tmp12 "0123456789ABCDEF" 15
  401:  printchar *tmp12
  402:  read *tmp12 "0123456789ABCDEF" 0
  403:  printchar *tmp12
  404:  read *tmp12 "0123456789ABCDEF" 15
  405:  printchar *tmp12
  406:  read *tmp12 "0123456789ABCDEF" 0
  407:  printchar *tmp12
  408:  read *tmp12 "0123456789ABCDEF" 0
  409:  printchar *tmp12
  410:  read *tmp12 "0123456789ABCDEF" 0
  411:  printchar *tmp12
  412:  read *tmp12 "0123456789ABCDEF" 0
  413:  printchar *tmp12
  414:  read *tmp12 "0123456789ABCDEF" 0
  415:  printchar *tmp12
  416:  read *tmp12 "0123456789ABCDEF" 0
  417:  printchar *tmp12
  418:  read *tmp12 "0123456789ABCDEF" 0
  419:  printchar *tmp12
  420:  read *tmp12 "0123456789ABCDEF" 0
  421:  printchar *tmp12
  422:  assertprints "FFFFFF0F00000000" "printExactHex(0xFFFFFF0F << 32)"
  423:  stop
  424:  end
        label *label6
  425:  op abs *tmp42 :printExactFast:n 0
  426:  jump *label116 greaterThan *tmp42 0
  427:  print :printExactFast:n
  428:  return :printExactFast*retaddr
        label *label116
  429:  jump *label118 greaterThanEq :printExactFast:n 0
  430:  print "-"
  431:  op abs :printExactFast:n :printExactFast:n 0
        label *label118
  432:  op log10 *tmp48 :printExactFast:n 0
  433:  op floor :printExactFast:exp *tmp48 0
  434:  op sub *tmp50 0 :printExactFast:exp
  435:  op pow *tmp51 10 *tmp50
  436:  op mul :printExactFast:base :printExactFast:n *tmp51
  437:  op add *tmp54 :printExactFast:base 0.5
  438:  op floor *tmp53 *tmp54 0
  439:  op sub *tmp56 :printExactFast:base *tmp53
  440:  op abs :printExactFast:cmp *tmp56 0
  441:  jump *label121 greaterThan :printExactFast:cmp 0
  442:  print :printExactFast:base
  443:  jump *label122 always 0 0
        label *label121
  444:  jump *label123 lessThanEq :printExactFast:cmp 0.00001
  445:  print :printExactFast:base
  446:  jump *label124 always 0 0
        label *label123
  447:  op floor *tmp62 :printExactFast:base 0
  448:  print *tmp62
  449:  print "."
  450:  op mod *tmp63 :printExactFast:base 1
  451:  op mul :printExactFast:base *tmp63 100000
  452:  op floor :printExactFast:t :printExactFast:base 0
  453:  jump *label304 greaterThanEq :printExactFast:t 100
  454:  jump *label302 greaterThanEq :printExactFast:t 10
  455:  print "0000"
  456:  jump *label309 always 0 0
        label *label302
  457:  print "000"
  458:  jump *label309 always 0 0
        label *label304
  459:  jump *label305 greaterThanEq :printExactFast:t 1000
  460:  print "00"
  461:  jump *label308 always 0 0
        label *label305
  462:  jump *label306 greaterThanEq :printExactFast:t 10000
  463:  print "0"
        label *label306
        label *label308
        label *label309
  464:  print :printExactFast:t
  465:  op mod *tmp63 :printExactFast:base 1
  466:  op mul :printExactFast:base *tmp63 100000
  467:  op floor :printExactFast:t :printExactFast:base 0
  468:  jump *label315 greaterThanEq :printExactFast:t 100
  469:  jump *label313 greaterThanEq :printExactFast:t 10
  470:  print "0000"
  471:  jump *label320 always 0 0
        label *label313
  472:  print "000"
  473:  jump *label320 always 0 0
        label *label315
  474:  jump *label316 greaterThanEq :printExactFast:t 1000
  475:  print "00"
  476:  jump *label319 always 0 0
        label *label316
  477:  jump *label317 greaterThanEq :printExactFast:t 10000
  478:  print "0"
        label *label317
        label *label319
        label *label320
  479:  print :printExactFast:t
  480:  op mod *tmp63 :printExactFast:base 1
  481:  op mul :printExactFast:base *tmp63 100000
  482:  op floor :printExactFast:t :printExactFast:base 0
  483:  jump *label326 greaterThanEq :printExactFast:t 100
  484:  jump *label324 greaterThanEq :printExactFast:t 10
  485:  print "0000"
  486:  jump *label331 always 0 0
        label *label324
  487:  print "000"
  488:  jump *label331 always 0 0
        label *label326
  489:  jump *label327 greaterThanEq :printExactFast:t 1000
  490:  print "00"
  491:  jump *label330 always 0 0
        label *label327
  492:  jump *label328 greaterThanEq :printExactFast:t 10000
  493:  print "0"
        label *label328
        label *label330
        label *label331
  494:  print :printExactFast:t
        label *label124
        label *label122
  495:  jump *label137 equal :printExactFast:exp 0
  496:  print "E"
  497:  print :printExactFast:exp
        label *label137
  498:  return :printExactFast*retaddr
        label *label7
  499:  op abs *tmp78 :printExactSlow:n 0
  500:  jump *label141 greaterThan *tmp78 0
  501:  print :printExactSlow:n
  502:  return :printExactSlow*retaddr
        label *label141
  503:  jump *label143 greaterThanEq :printExactSlow:n 0
  504:  print "-"
  505:  op abs :printExactSlow:n :printExactSlow:n 0
        label *label143
  506:  op log10 *tmp84 :printExactSlow:n 0
  507:  op floor :printExactSlow:exp *tmp84 0
  508:  op sub *tmp86 0 :printExactSlow:exp
  509:  op pow *tmp87 10 *tmp86
  510:  op mul :printExactSlow:base :printExactSlow:n *tmp87
  511:  op floor *tmp89 :printExactSlow:base 0
  512:  print *tmp89
  513:  print "."
  514:  op mod *tmp90 :printExactSlow:base 1
  515:  op mul :printExactSlow:base *tmp90 10
  516:  op floor *tmp93 :printExactSlow:base 0
  517:  print *tmp93
  518:  op mod *tmp90 :printExactSlow:base 1
  519:  op mul :printExactSlow:base *tmp90 10
  520:  op floor *tmp93 :printExactSlow:base 0
  521:  print *tmp93
  522:  op mod *tmp90 :printExactSlow:base 1
  523:  op mul :printExactSlow:base *tmp90 10
  524:  op floor *tmp93 :printExactSlow:base 0
  525:  print *tmp93
  526:  op mod *tmp90 :printExactSlow:base 1
  527:  op mul :printExactSlow:base *tmp90 10
  528:  op floor *tmp93 :printExactSlow:base 0
  529:  print *tmp93
  530:  op mod *tmp90 :printExactSlow:base 1
  531:  op mul :printExactSlow:base *tmp90 10
  532:  op floor *tmp93 :printExactSlow:base 0
  533:  print *tmp93
  534:  op mod *tmp90 :printExactSlow:base 1
  535:  op mul :printExactSlow:base *tmp90 10
  536:  op floor *tmp93 :printExactSlow:base 0
  537:  print *tmp93
  538:  op mod *tmp90 :printExactSlow:base 1
  539:  op mul :printExactSlow:base *tmp90 10
  540:  op floor *tmp93 :printExactSlow:base 0
  541:  print *tmp93
  542:  op mod *tmp90 :printExactSlow:base 1
  543:  op mul :printExactSlow:base *tmp90 10
  544:  op floor *tmp93 :printExactSlow:base 0
  545:  print *tmp93
  546:  op mod *tmp90 :printExactSlow:base 1
  547:  op mul :printExactSlow:base *tmp90 10
  548:  op floor *tmp93 :printExactSlow:base 0
  549:  print *tmp93
  550:  op mod *tmp90 :printExactSlow:base 1
  551:  op mul :printExactSlow:base *tmp90 10
  552:  op floor *tmp93 :printExactSlow:base 0
  553:  print *tmp93
  554:  op mod *tmp90 :printExactSlow:base 1
  555:  op mul :printExactSlow:base *tmp90 10
  556:  op floor *tmp93 :printExactSlow:base 0
  557:  print *tmp93
  558:  op mod *tmp90 :printExactSlow:base 1
  559:  op mul :printExactSlow:base *tmp90 10
  560:  op floor *tmp93 :printExactSlow:base 0
  561:  print *tmp93
  562:  op mod *tmp90 :printExactSlow:base 1
  563:  op mul :printExactSlow:base *tmp90 10
  564:  op floor *tmp93 :printExactSlow:base 0
  565:  print *tmp93
  566:  op mod *tmp90 :printExactSlow:base 1
  567:  op mul :printExactSlow:base *tmp90 10
  568:  op floor *tmp93 :printExactSlow:base 0
  569:  print *tmp93
  570:  op mod *tmp90 :printExactSlow:base 1
  571:  op mul :printExactSlow:base *tmp90 10
  572:  op floor *tmp93 :printExactSlow:base 0
  573:  print *tmp93
  574:  jump *label149 equal :printExactSlow:exp 0
  575:  print "E"
  576:  print :printExactSlow:exp
        label *label149
  577:  return :printExactSlow*retaddr


stop instruction encountered, dumping variable values:
*tmp1: 388.0
*tmp12: 48.0
*tmp4: 0.0
*tmp42: 1.2345E-50
*tmp48: -49.90850890573205
*tmp5: 0.0
*tmp50: 50.0
*tmp51: 1.0E50
*tmp53: 1.0
*tmp54: 1.7345000000000002
*tmp56: 0.23450000000000015
*tmp62: 1.0
*tmp63: 0.9999983634211276
*tmp78: 1.2345E-50
*tmp84: -49.90850890573205
*tmp86: 50.0
*tmp87: 1.0E50
*tmp89: 1.0
*tmp90: 0.015276668818842154
*tmp93: 0.0
:formatHexNumber:digit: 10.0
:formatHexNumber:digits: 0.0
:formatHexNumber:n: 0.0
:formatNumber:n: 1.0
:printExactBinary:t: 0.0
:printExactFast*retaddr: 235.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactSlow*retaddr: 285.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
@counter: 424.0