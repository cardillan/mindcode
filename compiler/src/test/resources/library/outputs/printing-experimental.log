   418 instructions before optimizations.
    20 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    36 instructions eliminated by Dead Code Elimination (6 iterations).
    65 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    20 instructions eliminated by Jump Optimization (5 iterations).
    45 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
   199 instructions eliminated by Data Flow Optimization (18 passes, 55 iterations).
     2 instructions eliminated by Loop Optimization (4 iterations).
     5 loops improved by Loop Optimization.
   643 instructions added by Loop Unrolling (20 iterations).
    12 loops unrolled by Loop Unrolling.
   233 instructions added by Function Inlining (20 iterations).
    13 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (5 iterations).
   268 instructions updated by JumpThreading.
   525 instructions eliminated by Unreachable Code Elimination.
   373 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 685):
    Unroll loop at *printing:240:13                              cost    27, benefit      187.5, efficiency        6.9
  * Unroll loop at *printing:285:9                               cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:216:1  cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:272:1  cost   215, benefit       35.0, efficiency        0.2
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 18:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 19:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 20:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 21:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 22:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 23:30                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 24:38                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 25:40                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 26:41                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 27:22                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 28:19                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 29:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 30:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 31:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 32:38                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 33:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 34:38                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 35:39                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 36:40                           cost    24, benefit        3.5, efficiency        0.1

Pass 1: speed optimization selection (cost limit 632):
  * Unroll loop at *printing:240:13                              cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:216:1  cost   404, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 18:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 19:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 20:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 21:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 22:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 23:30                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 24:38                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 25:40                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 26:41                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 605):
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
  * Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7 (+4 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 601):
  * Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0 (+1 instructions)
    Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 600):
  * Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0 (+1 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 599):
  * Unroll loop at *printing:97:5                                cost     0, benefit      100.0, efficiency   Infinity (-3 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 602):
  * Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 524):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 521):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 518):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 515):
  * Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2 (+57 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 458):
  * Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4 (+110 instructions)
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
    Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 348):
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
  * Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4 (+110 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 238):
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
  * Unroll loop at *printing:163:5                               cost     0, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 241):
  * Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2 (+202 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 39):
  ! Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 100):
  * Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0 (+50 instructions)
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 50):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 3: speed optimization selection (cost limit 64):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 4: speed optimization selection (cost limit 64):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor :fn32:n 0 0
    3:  format :fn32:n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor :fn32:n 1 0
    8:  format :fn32:n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor :fn32:n 1.5 0
   13:  format :fn32:n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor :fn32:n 1.5 0
   18:  format "-{2}"
   19:  format :fn32:n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  format "{2},{1}"
   24:  format 567
   25:  format "{2},{1}"
   26:  format 234
   27:  format 1
   28:  assertprints "1,234,567" "printNumber(1234567)"
   29:  assertflush
   30:  print "{2}"
   31:  format "-{2}"
   32:  format "{2},{1}"
   33:  format 567
   34:  format "{2},{1}"
   35:  format 234
   36:  format 1
   37:  assertprints "-1,234,567" "printNumber(-1234567)"
   38:  assertflush
   39:  print "{2}"
   40:  format "{2},0{1}"
   41:  format 99
   42:  format "{2},00{1}"
   43:  format 9
   44:  format 9
   45:  assertprints "9,009,099" "printNumber(9009099)"
   46:  assertflush
   47:  print "{2}"
   48:  format "{2}{1}"
   49:  format 1
   50:  format "{2}{1}"
   51:  format 0
   52:  format "{2}{1}"
   53:  format 0
   54:  format "{2}{1}"
   55:  format 1
   56:  format "0b"
   57:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   58:  assertflush
   59:  print "{2}"
   60:  format "{2}{1}"
   61:  format 0
   62:  format "{2}{1}"
   63:  format 1
   64:  format "{2}{1}"
   65:  format 0
   66:  format "{2}{1}"
   67:  format 1
   68:  format "{2}0"
   69:  format "{2}0"
   70:  format "0b"
   71:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   72:  assertflush
   73:  print "{2}"
   74:  format "{2}F"
   75:  format "{2}E"
   76:  format "{2}D"
   77:  format "{2}C"
   78:  format "{2}B"
   79:  format "{2}A"
   80:  format "0x"
   81:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
   82:  assertflush
   83:  print "{2}"
   84:  format "{2}{1}"
   85:  format 0
   86:  format "{2}{1}"
   87:  format 9
   88:  format "{2}{1}"
   89:  format 8
   90:  format "{2}{1}"
   91:  format 7
   92:  format "{2}{1}"
   93:  format 6
   94:  format "{2}{1}"
   95:  format 5
   96:  format "{2}{1}"
   97:  format 4
   98:  format "{2}{1}"
   99:  format 3
  100:  format "{2}{1}"
  101:  format 2
  102:  format "{2}{1}"
  103:  format 1
  104:  format "0x"
  105:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  106:  assertflush
  107:  print "{2}"
  108:  format "{2}C"
  109:  format "{2}C"
  110:  format "{2}B"
  111:  format "{2}B"
  112:  format "{2}A"
  113:  format "{2}A"
  114:  format "{2}0"
  115:  format "{2}0"
  116:  format "0x"
  117:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  118:  assertflush
  119:  op abs *tmp104 null 0
  120:  print null
  121:  assertprints "null" "printExactFast(null)"
  122:  assertflush
  123:  set :fn6:n 0
  124:  setaddr :fn6*retaddr *label21
  125:  call *label6 :fn6*retval
        label *label21
  126:  assertprints "0" "printExactFast(0)"
  127:  assertflush
  128:  set :fn6:n 1
  129:  setaddr :fn6*retaddr *label22
  130:  call *label6 :fn6*retval
        label *label22
  131:  assertprints "1" "printExactFast(1)"
  132:  assertflush
  133:  set :fn6:n 1.0000001
  134:  setaddr :fn6*retaddr *label23
  135:  call *label6 :fn6*retval
        label *label23
  136:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  137:  assertflush
  138:  set :fn6:n 3.00000007
  139:  setaddr :fn6*retaddr *label24
  140:  call *label6 :fn6*retval
        label *label24
  141:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  142:  assertflush
  143:  set :fn6:n 3E50
  144:  setaddr :fn6*retaddr *label25
  145:  call *label6 :fn6*retval
        label *label25
  146:  assertprints "3E50" "printExactFast(3e50)"
  147:  assertflush
  148:  set :fn6:n 1.0123456789
  149:  setaddr :fn6*retaddr *label26
  150:  call *label6 :fn6*retval
        label *label26
  151:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  152:  assertflush
  153:  set :fn6:n 10000001E13
  154:  setaddr :fn6*retaddr *label27
  155:  call *label6 :fn6*retval
        label *label27
  156:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  157:  assertflush
  158:  set :fn6:n 12345E-54
  159:  setaddr :fn6*retaddr *label28
  160:  call *label6 :fn6*retval
        label *label28
  161:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  162:  assertflush
  163:  set :fn6:n -12345E-54
  164:  setaddr :fn6*retaddr *label29
  165:  call *label6 :fn6*retval
        label *label29
  166:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  167:  assertflush
  168:  set :fn7:n null
  169:  setaddr :fn7*retaddr *label30
  170:  call *label7 :fn7*retval
        label *label30
  171:  assertprints "null" "printExactSlow(null)"
  172:  assertflush
  173:  set :fn7:n 0
  174:  setaddr :fn7*retaddr *label31
  175:  call *label7 :fn7*retval
        label *label31
  176:  assertprints "0" "printExactSlow(0)"
  177:  assertflush
  178:  set :fn7:n 1
  179:  setaddr :fn7*retaddr *label32
  180:  call *label7 :fn7*retval
        label *label32
  181:  assertprints "1.000000000000000" "printExactSlow(1)"
  182:  assertflush
  183:  set :fn7:n 1.0000001
  184:  setaddr :fn7*retaddr *label33
  185:  call *label7 :fn7*retval
        label *label33
  186:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  187:  assertflush
  188:  set :fn7:n 3.00000007
  189:  setaddr :fn7*retaddr *label34
  190:  call *label7 :fn7*retval
        label *label34
  191:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  192:  assertflush
  193:  set :fn7:n 3E50
  194:  setaddr :fn7*retaddr *label35
  195:  call *label7 :fn7*retval
        label *label35
  196:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  197:  assertflush
  198:  set :fn7:n 1.0123456789
  199:  setaddr :fn7*retaddr *label36
  200:  call *label7 :fn7*retval
        label *label36
  201:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  202:  assertflush
  203:  set :fn7:n 10000001E13
  204:  setaddr :fn7*retaddr *label37
  205:  call *label7 :fn7*retval
        label *label37
  206:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  207:  assertflush
  208:  set :fn7:n 12345E-54
  209:  setaddr :fn7*retaddr *label38
  210:  call *label7 :fn7*retval
        label *label38
  211:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  212:  assertflush
  213:  set :fn7:n -12345E-54
  214:  setaddr :fn7*retaddr *label39
  215:  call *label7 :fn7*retval
        label *label39
  216:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  217:  stop
  218:  printflush message1
  219:  end
        label *label6
  220:  op abs *tmp104 :fn6:n 0
  221:  jump *label145 greaterThan *tmp104 0
  222:  print :fn6:n
  223:  return :fn6*retaddr
        label *label145
  224:  jump *label147 greaterThanEq :fn6:n 0
  225:  print "-"
  226:  op abs :fn6:n :fn6:n 0
        label *label147
  227:  op log10 *tmp110 :fn6:n 0
  228:  op floor :fn6:exp *tmp110 0
  229:  op sub *tmp112 0 :fn6:exp
  230:  op pow *tmp113 10 *tmp112
  231:  op mul :fn6:base :fn6:n *tmp113
  232:  op add *tmp116 :fn6:base 0.5
  233:  op floor *tmp115 *tmp116 0
  234:  op sub *tmp118 :fn6:base *tmp115
  235:  op abs :fn6:cmp *tmp118 0
  236:  jump *label150 greaterThan :fn6:cmp 0
  237:  print :fn6:base
  238:  jump *label151 always 0 0
        label *label150
  239:  jump *label152 lessThanEq :fn6:cmp 0.00001
  240:  print :fn6:base
  241:  jump *label153 always 0 0
        label *label152
  242:  op floor *tmp124 :fn6:base 0
  243:  print *tmp124
  244:  print "."
  245:  op mod *tmp125 :fn6:base 1
  246:  op mul :fn6:base *tmp125 100000
  247:  op floor :fn6:t :fn6:base 0
  248:  jump *label234 greaterThanEq :fn6:t 10
  249:  print "0000"
  250:  jump *label241 always 0 0
        label *label234
  251:  jump *label235 greaterThanEq :fn6:t 100
  252:  print "000"
  253:  jump *label240 always 0 0
        label *label235
  254:  jump *label236 greaterThanEq :fn6:t 1000
  255:  print "00"
  256:  jump *label239 always 0 0
        label *label236
  257:  jump *label237 greaterThanEq :fn6:t 10000
  258:  print "0"
        label *label237
        label *label239
        label *label240
        label *label241
  259:  print :fn6:t
  260:  op mod *tmp125 :fn6:base 1
  261:  op mul :fn6:base *tmp125 100000
  262:  op floor :fn6:t :fn6:base 0
  263:  jump *label245 greaterThanEq :fn6:t 10
  264:  print "0000"
  265:  jump *label252 always 0 0
        label *label245
  266:  jump *label246 greaterThanEq :fn6:t 100
  267:  print "000"
  268:  jump *label251 always 0 0
        label *label246
  269:  jump *label247 greaterThanEq :fn6:t 1000
  270:  print "00"
  271:  jump *label250 always 0 0
        label *label247
  272:  jump *label248 greaterThanEq :fn6:t 10000
  273:  print "0"
        label *label248
        label *label250
        label *label251
        label *label252
  274:  print :fn6:t
  275:  op mod *tmp125 :fn6:base 1
  276:  op mul :fn6:base *tmp125 100000
  277:  op floor :fn6:t :fn6:base 0
  278:  jump *label256 greaterThanEq :fn6:t 10
  279:  print "0000"
  280:  jump *label263 always 0 0
        label *label256
  281:  jump *label257 greaterThanEq :fn6:t 100
  282:  print "000"
  283:  jump *label262 always 0 0
        label *label257
  284:  jump *label258 greaterThanEq :fn6:t 1000
  285:  print "00"
  286:  jump *label261 always 0 0
        label *label258
  287:  jump *label259 greaterThanEq :fn6:t 10000
  288:  print "0"
        label *label259
        label *label261
        label *label262
        label *label263
  289:  print :fn6:t
        label *label153
        label *label151
  290:  jump *label166 equal :fn6:exp 0
  291:  print "E"
  292:  print :fn6:exp
        label *label166
  293:  return :fn6*retaddr
        label *label7
  294:  op abs *tmp140 :fn7:n 0
  295:  jump *label170 greaterThan *tmp140 0
  296:  print :fn7:n
  297:  return :fn7*retaddr
        label *label170
  298:  jump *label172 greaterThanEq :fn7:n 0
  299:  print "-"
  300:  op abs :fn7:n :fn7:n 0
        label *label172
  301:  op log10 *tmp146 :fn7:n 0
  302:  op floor :fn7:exp *tmp146 0
  303:  op sub *tmp148 0 :fn7:exp
  304:  op pow *tmp149 10 *tmp148
  305:  op mul :fn7:base :fn7:n *tmp149
  306:  op floor *tmp151 :fn7:base 0
  307:  print *tmp151
  308:  print "."
  309:  op mod *tmp152 :fn7:base 1
  310:  op mul :fn7:base *tmp152 10
  311:  op floor *tmp155 :fn7:base 0
  312:  print *tmp155
  313:  op mod *tmp152 :fn7:base 1
  314:  op mul :fn7:base *tmp152 10
  315:  op floor *tmp155 :fn7:base 0
  316:  print *tmp155
  317:  op mod *tmp152 :fn7:base 1
  318:  op mul :fn7:base *tmp152 10
  319:  op floor *tmp155 :fn7:base 0
  320:  print *tmp155
  321:  op mod *tmp152 :fn7:base 1
  322:  op mul :fn7:base *tmp152 10
  323:  op floor *tmp155 :fn7:base 0
  324:  print *tmp155
  325:  op mod *tmp152 :fn7:base 1
  326:  op mul :fn7:base *tmp152 10
  327:  op floor *tmp155 :fn7:base 0
  328:  print *tmp155
  329:  op mod *tmp152 :fn7:base 1
  330:  op mul :fn7:base *tmp152 10
  331:  op floor *tmp155 :fn7:base 0
  332:  print *tmp155
  333:  op mod *tmp152 :fn7:base 1
  334:  op mul :fn7:base *tmp152 10
  335:  op floor *tmp155 :fn7:base 0
  336:  print *tmp155
  337:  op mod *tmp152 :fn7:base 1
  338:  op mul :fn7:base *tmp152 10
  339:  op floor *tmp155 :fn7:base 0
  340:  print *tmp155
  341:  op mod *tmp152 :fn7:base 1
  342:  op mul :fn7:base *tmp152 10
  343:  op floor *tmp155 :fn7:base 0
  344:  print *tmp155
  345:  op mod *tmp152 :fn7:base 1
  346:  op mul :fn7:base *tmp152 10
  347:  op floor *tmp155 :fn7:base 0
  348:  print *tmp155
  349:  op mod *tmp152 :fn7:base 1
  350:  op mul :fn7:base *tmp152 10
  351:  op floor *tmp155 :fn7:base 0
  352:  print *tmp155
  353:  op mod *tmp152 :fn7:base 1
  354:  op mul :fn7:base *tmp152 10
  355:  op floor *tmp155 :fn7:base 0
  356:  print *tmp155
  357:  op mod *tmp152 :fn7:base 1
  358:  op mul :fn7:base *tmp152 10
  359:  op floor *tmp155 :fn7:base 0
  360:  print *tmp155
  361:  op mod *tmp152 :fn7:base 1
  362:  op mul :fn7:base *tmp152 10
  363:  op floor *tmp155 :fn7:base 0
  364:  print *tmp155
  365:  op mod *tmp152 :fn7:base 1
  366:  op mul :fn7:base *tmp152 10
  367:  op floor *tmp155 :fn7:base 0
  368:  print *tmp155
  369:  jump *label178 equal :fn7:exp 0
  370:  print "E"
  371:  print :fn7:exp
        label *label178
  372:  return :fn7*retaddr


stop instruction encountered, dumping variable values:
*tmp104: 1.2345E-50
*tmp110: -49.90850890573205
*tmp112: 50.0
*tmp113: 1.0E50
*tmp115: 1.0
*tmp116: 1.7345000000000002
*tmp118: 0.23450000000000015
*tmp124: 1.0
*tmp125: 0.9999983634211276
*tmp140: 1.2345E-50
*tmp146: -49.90850890573205
*tmp148: 50.0
*tmp149: 1.0E50
*tmp151: 1.0
*tmp152: 0.015276668818842154
*tmp155: 0.0
:fn32:n: 1.0
:fn6*retaddr: 166.0
:fn6:base: 1.2345000000000002
:fn6:cmp: 0.23450000000000015
:fn6:exp: -50.0
:fn6:n: 1.2345E-50
:fn6:t: 99999.0
:fn7*retaddr: 216.0
:fn7:base: 0.15276668818842154
:fn7:exp: -50.0
:fn7:n: 1.2345E-50
@counter: 218.0