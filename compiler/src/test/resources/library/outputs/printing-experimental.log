   497 instructions before optimizations.
    27 instructions eliminated by Temp Variables Elimination (8 iterations).
     1 instructions eliminated by Case Expression Optimization.
    40 instructions eliminated by Dead Code Elimination (6 iterations).
    86 instructions eliminated by Jump Normalization (3 passes, 7 iterations).
    22 instructions eliminated by Jump Optimization (7 iterations).
    53 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
    15 instructions modified by Expression Optimization (5 iterations).
     6 instructions eliminated by If Expression Optimization (7 iterations).
   334 instructions eliminated by Data Flow Optimization (25 passes, 84 iterations).
     4 instructions eliminated by Loop Optimization (5 iterations).
     7 loops improved by Loop Optimization.
   737 instructions added by Loop Unrolling (30 iterations).
    19 loops unrolled by Loop Unrolling.
   274 instructions added by Function Inlining (30 iterations).
    15 function calls inlined by Function Inlining.
     2 case expressions converted to switched jumps Case Switching.
     6 instructions eliminated by Jump Straightening (7 iterations).
   170 instructions updated by Jump Threading.
   369 instructions eliminated by Unreachable Code Elimination (2 iterations).
     5 instructions eliminated by Print Merging.
   555 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 629):
  * Unroll iteration loop at *printing:22:5                      size    -5, benefit       11.0, efficiency   Infinity (-5 instructions)
    Unroll iteration loop at *printing:343:5                     size    +5, benefit        7.0, efficiency      1.400
    Unroll loop at *printing:344:9                               size   +90, benefit    40000.0, efficiency    444.444
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 634):
    Unroll iteration loop at *printing:343:5                     size    +5, benefit        7.0, efficiency      1.400
  * Unroll loop at *printing:344:9                               size   +90, benefit    40000.0, efficiency    444.444 (+90 instructions)
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
    Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 544):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size    +9, benefit        7.0, efficiency      0.778
  * Unroll loop at *printing:369:9                               size   +32, benefit    10000.0, efficiency    312.500 (+24 instructions)
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
    Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 520):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944
  * Unroll loop at *printing:316:9                               size   +53, benefit     3750.0, efficiency     70.755 (+53 instructions)
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
    Inline function 'printExactSlow' defined at *printing:303:1  size  +215, benefit       35.0, efficiency      0.163
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 31:19                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 32:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 33:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 34:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 35:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 36:35                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 37:38                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 38:39                           size   +24, benefit        3.5, efficiency      0.146
    Inline function call at line 39:40                           size   +24, benefit        3.5, efficiency      0.146
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 467):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Unroll loop at *printing:266:13                              size   +27, benefit      187.5, efficiency      6.944 (+27 instructions)
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
    Inline function 'printExactFast' defined at *printing:242:1  size  +404, benefit       35.0, efficiency      0.087
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 21:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 22:19                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 23:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 24:35                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 25:22                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 26:30                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 27:38                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 28:40                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 29:41                           size   +45, benefit        3.5, efficiency      0.078
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 440):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
  * Inline function 'printBinaryNumber' defined at *printing:140:1 size   +33, benefit       12.0, efficiency      0.364 (+17 instructions)
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 13:24                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 14:26                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 15:27                           size   +17, benefit        4.0, efficiency      0.235
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 423):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 422):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 421):
  * Unroll loop at *printing:112:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 424):
  * Unroll loop at *printing:106:5                               size   +10, benefit      200.0, efficiency     20.000 (+1 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 423):
  * Unroll loop at *printing:112:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 426):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printNumber' defined at *printing:77:1      size   +77, benefit       24.5, efficiency      0.318 (+54 instructions)
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 6:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 7:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 8:19                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 9:20                            size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 10:27                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 11:28                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 12:31                           size   +13, benefit        3.5, efficiency      0.269
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 372):
  * Unroll loop at *printing:48:5                                size    +2, benefit      100.0, efficiency     50.000 (-1 instructions)
    Unroll loop at *printing:48:5                                size    +2, benefit      100.0, efficiency     50.000
    Unroll loop at *printing:48:5                                size    +7, benefit      150.0, efficiency     21.429
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 373):
  * Unroll loop at *printing:48:5                                size    +2, benefit      100.0, efficiency     50.000 (-1 instructions)
    Unroll loop at *printing:48:5                                size    +7, benefit      150.0, efficiency     21.429
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 374):
  * Unroll loop at *printing:48:5                                size    +7, benefit      150.0, efficiency     21.429 (+3 instructions)
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
    Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 371):
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  * Inline function 'printHexNumber' defined at *printing:212:1  size  +113, benefit       16.0, efficiency      0.142 (+93 instructions)
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 16:26                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 17:30                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 18:28                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 19:29                           size   +38, benefit        4.0, efficiency      0.105
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       68.8, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit      100.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 278):
  * Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
    Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
  ! Inline function 'printExactSlow' defined at *printing:303:1  size  +692, benefit       35.0, efficiency      0.051
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 168):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
    Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function 'printExactFast' defined at *printing:242:1  size  +647, benefit       35.0, efficiency      0.054
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 58):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:184:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
    Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
    Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 61):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  * Unroll iteration loop at *printing:368:5                     size   +57, benefit        7.0, efficiency      0.123 (-6 instructions)
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 67):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  * Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 67):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045
  o Convert case at *printing:171:9 (segments: 1)                size    -6, benefit       17.2, efficiency   Infinity
  o Convert case at *printing:171:9 (segments: 5)                size    -1, benefit       21.9, efficiency   Infinity
  * Convert case at *printing:171:9 (segments: 7)                size    +0, benefit       25.0, efficiency   Infinity (+0 instructions)

Pass 1: speed optimization selection (cost limit 67):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439
  ! Unroll iteration loop at *printing:343:5                     size  +185, benefit        7.0, efficiency      0.038
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 138):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:169:5                               size  +123, benefit      300.0, efficiency      2.439 (+110 instructions)
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
    Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
    Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 28):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  * Unroll loop at *printing:184:5                               size    -2, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 2: speed optimization selection (cost limit 31):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 75):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  * Inline function call at line 20:22                           size   +72, benefit        3.5, efficiency      0.049 (+50 instructions)
    Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
    Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 3: speed optimization selection (cost limit 25):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 4: speed optimization selection (cost limit 39):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Pass 5: speed optimization selection (cost limit 39):
  ! Unroll loop at *printing:169:5                               size  +223, benefit      500.0, efficiency      2.242
  ! Unroll iteration loop at *printing:343:5                     size  +183, benefit        7.0, efficiency      0.038
  ! Inline function call at line 21:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 22:19                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 23:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 24:35                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 25:22                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 26:30                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 27:38                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 28:40                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 29:41                           size   +72, benefit        3.5, efficiency      0.049
  ! Inline function call at line 30:22                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 31:19                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 32:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 33:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 34:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 35:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 36:35                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 37:38                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 38:39                           size   +77, benefit        3.5, efficiency      0.045
  ! Inline function call at line 39:40                           size   +77, benefit        3.5, efficiency      0.045

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "1\n2\n3\n"
    2:  assertprints "1\n2\n3\n" "printLines(1, 2, 3)"
    3:  assertflush
    4:  print "{2}"
    5:  op floor :formatNumber:n 0 0
    6:  format :formatNumber:n
    7:  assertprints "0" "printNumber(null)"
    8:  assertflush
    9:  print "{2}"
   10:  op floor :formatNumber:n 1 0
   11:  format :formatNumber:n
   12:  assertprints "1" "printNumber(1)"
   13:  assertflush
   14:  print "{2}"
   15:  op floor :formatNumber:n 1.5 0
   16:  format :formatNumber:n
   17:  assertprints "1" "printNumber(1.5)"
   18:  assertflush
   19:  print "{2}"
   20:  op floor :formatNumber:n 1.5 0
   21:  format "-{2}"
   22:  format :formatNumber:n
   23:  assertprints "-1" "printNumber(-1.5)"
   24:  assertflush
   25:  print "{2}"
   26:  format "{2},{1}"
   27:  format 567
   28:  format "{2},{1}"
   29:  format 234
   30:  format 1
   31:  assertprints "1,234,567" "printNumber(1234567)"
   32:  assertflush
   33:  print "{2}"
   34:  format "-{2}"
   35:  format "{2},{1}"
   36:  format 567
   37:  format "{2},{1}"
   38:  format 234
   39:  format 1
   40:  assertprints "-1,234,567" "printNumber(-1234567)"
   41:  assertflush
   42:  print "{2}"
   43:  format "{2},{1}"
   44:  format 999
   45:  format "{2},0{1}"
   46:  format 99
   47:  format "{2},00{1}"
   48:  format 9
   49:  format 9
   50:  assertprints "9,009,099,999" "printNumber(9009099999)"
   51:  assertflush
   52:  print "{2}"
   53:  format "{2}{1}"
   54:  format 1
   55:  format "{2}{1}"
   56:  format 0
   57:  format "{2}{1}"
   58:  format 0
   59:  format "{2}{1}"
   60:  format 1
   61:  format "0b"
   62:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   63:  assertflush
   64:  print "{2}"
   65:  format "{2}{1}"
   66:  format 0
   67:  format "{2}{1}"
   68:  format 1
   69:  format "{2}{1}"
   70:  format 0
   71:  format "{2}{1}"
   72:  format 1
   73:  format "{2}0"
   74:  format "{2}0"
   75:  format "0b"
   76:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   77:  assertflush
   78:  print "{2}"
   79:  format "-{2}"
   80:  format "{2}{1}"
   81:  format 0
   82:  format "{2}{1}"
   83:  format 1
   84:  format "{2}{1}"
   85:  format 0
   86:  format "{2}{1}"
   87:  format 1
   88:  format "{2}0"
   89:  format "{2}0"
   90:  format "0b"
   91:  assertprints "-0b001010" "printBinaryNumber(-0b1010, 6)"
   92:  assertflush
   93:  print "{2}"
   94:  format "{2}F"
   95:  format "{2}E"
   96:  format "{2}D"
   97:  format "{2}C"
   98:  format "{2}B"
   99:  format "{2}A"
  100:  format "0x"
  101:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
  102:  assertflush
  103:  print "{2}"
  104:  set :formatHexNumber:digits 0
  105:  op floor :formatHexNumber:n 0x1234567890 0
        label *label514
  106:  op mod :formatHexNumber:digit :formatHexNumber:n 16
  107:  jump *label862 greaterThanEq :formatHexNumber:digit 10
  108:  jump *label861 lessThan :formatHexNumber:digit 0
  109:  format "{2}{1}"
  110:  format :formatHexNumber:digit
  111:  jump *label530 always 0 0
        label *label862
  112:  jump *label863 greaterThanEq :formatHexNumber:digit 13
  113:  jump *label518 lessThan :formatHexNumber:digit 11
  114:  jump *label522 greaterThanEq :formatHexNumber:digit 12
  115:  format "{2}B"
  116:  jump *label530 always 0 0
        label *label863
  117:  jump *label864 greaterThanEq :formatHexNumber:digit 15
  118:  jump *label526 greaterThanEq :formatHexNumber:digit 14
  119:  format "{2}D"
  120:  jump *label530 always 0 0
        label *label864
  121:  jump *label528 lessThan :formatHexNumber:digit 16
  122:  jump *label861 always 0 0
        label *label518
  123:  format "{2}A"
  124:  jump *label530 always 0 0
        label *label522
  125:  format "{2}C"
  126:  jump *label530 always 0 0
        label *label526
  127:  format "{2}E"
  128:  jump *label530 always 0 0
        label *label528
  129:  format "{2}F"
        label *label861
        label *label530
  130:  op shr :formatHexNumber:n :formatHexNumber:n 4
  131:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  132:  jump *label514 greaterThan :formatHexNumber:n 0
  133:  jump *label536 lessThanEq :formatHexNumber:digits 0
        label *label534
  134:  format "{2}0"
  135:  op sub :formatHexNumber:digits :formatHexNumber:digits 1
  136:  jump *label534 greaterThan :formatHexNumber:digits 0
        label *label536
  137:  format "0x"
  138:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  139:  assertflush
  140:  print "{2}"
  141:  format "{2}C"
  142:  format "{2}C"
  143:  format "{2}B"
  144:  format "{2}B"
  145:  format "{2}A"
  146:  format "{2}A"
  147:  format "{2}0"
  148:  format "{2}0"
  149:  format "0x"
  150:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  151:  assertflush
  152:  print "{2}"
  153:  format "-{2}"
  154:  format "{2}C"
  155:  format "{2}C"
  156:  format "{2}B"
  157:  format "{2}B"
  158:  format "{2}A"
  159:  format "{2}A"
  160:  format "{2}0"
  161:  format "{2}0"
  162:  format "0x"
  163:  assertprints "-0x00AABBCC" "printHexNumber(-0xAABBCC, 8)"
  164:  assertflush
  165:  op abs *tmp42 null 0
  166:  print null
  167:  assertprints "null" "printExactFast(null)"
  168:  assertflush
  169:  set :printExactFast:n 0
  170:  setaddr :printExactFast*retaddr *label30
  171:  call *label6 *invalid :printExactFast*retval
        label *label30
  172:  assertprints "0" "printExactFast(0)"
  173:  assertflush
  174:  set :printExactFast:n 1
  175:  setaddr :printExactFast*retaddr *label31
  176:  call *label6 *invalid :printExactFast*retval
        label *label31
  177:  assertprints "1" "printExactFast(1)"
  178:  assertflush
  179:  set :printExactFast:n 1.0000001
  180:  setaddr :printExactFast*retaddr *label32
  181:  call *label6 *invalid :printExactFast*retval
        label *label32
  182:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  183:  assertflush
  184:  set :printExactFast:n 3.00000007
  185:  setaddr :printExactFast*retaddr *label33
  186:  call *label6 *invalid :printExactFast*retval
        label *label33
  187:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  188:  assertflush
  189:  set :printExactFast:n 3E50
  190:  setaddr :printExactFast*retaddr *label34
  191:  call *label6 *invalid :printExactFast*retval
        label *label34
  192:  assertprints "3E50" "printExactFast(3e50)"
  193:  assertflush
  194:  set :printExactFast:n 1.0123456789
  195:  setaddr :printExactFast*retaddr *label35
  196:  call *label6 *invalid :printExactFast*retval
        label *label35
  197:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  198:  assertflush
  199:  set :printExactFast:n 10000001E13
  200:  setaddr :printExactFast*retaddr *label36
  201:  call *label6 *invalid :printExactFast*retval
        label *label36
  202:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  203:  assertflush
  204:  set :printExactFast:n 12345E-54
  205:  setaddr :printExactFast*retaddr *label37
  206:  call *label6 *invalid :printExactFast*retval
        label *label37
  207:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  208:  assertflush
  209:  set :printExactFast:n -12345E-54
  210:  setaddr :printExactFast*retaddr *label38
  211:  call *label6 *invalid :printExactFast*retval
        label *label38
  212:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  213:  assertflush
  214:  set :printExactSlow:n null
  215:  setaddr :printExactSlow*retaddr *label39
  216:  call *label7 *invalid :printExactSlow*retval
        label *label39
  217:  assertprints "null" "printExactSlow(null)"
  218:  assertflush
  219:  set :printExactSlow:n 0
  220:  setaddr :printExactSlow*retaddr *label40
  221:  call *label7 *invalid :printExactSlow*retval
        label *label40
  222:  assertprints "0" "printExactSlow(0)"
  223:  assertflush
  224:  set :printExactSlow:n 1
  225:  setaddr :printExactSlow*retaddr *label41
  226:  call *label7 *invalid :printExactSlow*retval
        label *label41
  227:  assertprints "1.000000000000000" "printExactSlow(1)"
  228:  assertflush
  229:  set :printExactSlow:n 1.0000001
  230:  setaddr :printExactSlow*retaddr *label42
  231:  call *label7 *invalid :printExactSlow*retval
        label *label42
  232:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  233:  assertflush
  234:  set :printExactSlow:n 3.00000007
  235:  setaddr :printExactSlow*retaddr *label43
  236:  call *label7 *invalid :printExactSlow*retval
        label *label43
  237:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  238:  assertflush
  239:  set :printExactSlow:n 3E50
  240:  setaddr :printExactSlow*retaddr *label44
  241:  call *label7 *invalid :printExactSlow*retval
        label *label44
  242:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  243:  assertflush
  244:  set :printExactSlow:n 1.0123456789
  245:  setaddr :printExactSlow*retaddr *label45
  246:  call *label7 *invalid :printExactSlow*retval
        label *label45
  247:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  248:  assertflush
  249:  set :printExactSlow:n 10000001E13
  250:  setaddr :printExactSlow*retaddr *label46
  251:  call *label7 *invalid :printExactSlow*retval
        label *label46
  252:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  253:  assertflush
  254:  set :printExactSlow:n 12345E-54
  255:  setaddr :printExactSlow*retaddr *label47
  256:  call *label7 *invalid :printExactSlow*retval
        label *label47
  257:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  258:  assertflush
  259:  set :printExactSlow:n -12345E-54
  260:  setaddr :printExactSlow*retaddr *label48
  261:  call *label7 *invalid :printExactSlow*retval
        label *label48
  262:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  263:  assertflush
  264:  op shr :printExactBinary:t -1035087118336 32
  265:  setaddr *tmp1 *label53
  266:  jump *label50 always 0 0
        multilabel *label53
  267:  op and :printExactBinary:t -1035087118336 0xFFFFFFFF
  268:  setaddr *tmp1 *label54
        label *label50
  269:  op shr *tmp4 :printExactBinary:t 31
  270:  op and *tmp5 *tmp4 1
  271:  print *tmp5
  272:  op shr *tmp4 :printExactBinary:t 30
  273:  op and *tmp5 *tmp4 1
  274:  print *tmp5
  275:  op shr *tmp4 :printExactBinary:t 29
  276:  op and *tmp5 *tmp4 1
  277:  print *tmp5
  278:  op shr *tmp4 :printExactBinary:t 28
  279:  op and *tmp5 *tmp4 1
  280:  print *tmp5
  281:  op shr *tmp4 :printExactBinary:t 27
  282:  op and *tmp5 *tmp4 1
  283:  print *tmp5
  284:  op shr *tmp4 :printExactBinary:t 26
  285:  op and *tmp5 *tmp4 1
  286:  print *tmp5
  287:  op shr *tmp4 :printExactBinary:t 25
  288:  op and *tmp5 *tmp4 1
  289:  print *tmp5
  290:  op shr *tmp4 :printExactBinary:t 24
  291:  op and *tmp5 *tmp4 1
  292:  print *tmp5
  293:  op shr *tmp4 :printExactBinary:t 23
  294:  op and *tmp5 *tmp4 1
  295:  print *tmp5
  296:  op shr *tmp4 :printExactBinary:t 22
  297:  op and *tmp5 *tmp4 1
  298:  print *tmp5
  299:  op shr *tmp4 :printExactBinary:t 21
  300:  op and *tmp5 *tmp4 1
  301:  print *tmp5
  302:  op shr *tmp4 :printExactBinary:t 20
  303:  op and *tmp5 *tmp4 1
  304:  print *tmp5
  305:  op shr *tmp4 :printExactBinary:t 19
  306:  op and *tmp5 *tmp4 1
  307:  print *tmp5
  308:  op shr *tmp4 :printExactBinary:t 18
  309:  op and *tmp5 *tmp4 1
  310:  print *tmp5
  311:  op shr *tmp4 :printExactBinary:t 17
  312:  op and *tmp5 *tmp4 1
  313:  print *tmp5
  314:  op shr *tmp4 :printExactBinary:t 16
  315:  op and *tmp5 *tmp4 1
  316:  print *tmp5
  317:  op shr *tmp4 :printExactBinary:t 15
  318:  op and *tmp5 *tmp4 1
  319:  print *tmp5
  320:  op shr *tmp4 :printExactBinary:t 14
  321:  op and *tmp5 *tmp4 1
  322:  print *tmp5
  323:  op shr *tmp4 :printExactBinary:t 13
  324:  op and *tmp5 *tmp4 1
  325:  print *tmp5
  326:  op shr *tmp4 :printExactBinary:t 12
  327:  op and *tmp5 *tmp4 1
  328:  print *tmp5
  329:  op shr *tmp4 :printExactBinary:t 11
  330:  op and *tmp5 *tmp4 1
  331:  print *tmp5
  332:  op shr *tmp4 :printExactBinary:t 10
  333:  op and *tmp5 *tmp4 1
  334:  print *tmp5
  335:  op shr *tmp4 :printExactBinary:t 9
  336:  op and *tmp5 *tmp4 1
  337:  print *tmp5
  338:  op shr *tmp4 :printExactBinary:t 8
  339:  op and *tmp5 *tmp4 1
  340:  print *tmp5
  341:  op shr *tmp4 :printExactBinary:t 7
  342:  op and *tmp5 *tmp4 1
  343:  print *tmp5
  344:  op shr *tmp4 :printExactBinary:t 6
  345:  op and *tmp5 *tmp4 1
  346:  print *tmp5
  347:  op shr *tmp4 :printExactBinary:t 5
  348:  op and *tmp5 *tmp4 1
  349:  print *tmp5
  350:  op shr *tmp4 :printExactBinary:t 4
  351:  op and *tmp5 *tmp4 1
  352:  print *tmp5
  353:  op shr *tmp4 :printExactBinary:t 3
  354:  op and *tmp5 *tmp4 1
  355:  print *tmp5
  356:  op shr *tmp4 :printExactBinary:t 2
  357:  op and *tmp5 *tmp4 1
  358:  print *tmp5
  359:  op shr *tmp4 :printExactBinary:t 1
  360:  op and *tmp5 *tmp4 1
  361:  print *tmp5
  362:  op and *tmp5 :printExactBinary:t 1
  363:  print *tmp5
  364:  multijump *tmp1 0 0
        multilabel *label54
  365:  assertprints "1111111111111111111111110000111100000000000000000000000000000000" "printExactBinary(0xFFFFFF0F << 32)"
  366:  assertflush
  367:  read *tmp12 "0123456789ABCDEF" 15
  368:  printchar *tmp12
  369:  read *tmp12 "0123456789ABCDEF" 15
  370:  printchar *tmp12
  371:  read *tmp12 "0123456789ABCDEF" 15
  372:  printchar *tmp12
  373:  read *tmp12 "0123456789ABCDEF" 15
  374:  printchar *tmp12
  375:  read *tmp12 "0123456789ABCDEF" 15
  376:  printchar *tmp12
  377:  read *tmp12 "0123456789ABCDEF" 15
  378:  printchar *tmp12
  379:  read *tmp12 "0123456789ABCDEF" 0
  380:  printchar *tmp12
  381:  read *tmp12 "0123456789ABCDEF" 15
  382:  printchar *tmp12
  383:  read *tmp12 "0123456789ABCDEF" 0
  384:  printchar *tmp12
  385:  read *tmp12 "0123456789ABCDEF" 0
  386:  printchar *tmp12
  387:  read *tmp12 "0123456789ABCDEF" 0
  388:  printchar *tmp12
  389:  read *tmp12 "0123456789ABCDEF" 0
  390:  printchar *tmp12
  391:  read *tmp12 "0123456789ABCDEF" 0
  392:  printchar *tmp12
  393:  read *tmp12 "0123456789ABCDEF" 0
  394:  printchar *tmp12
  395:  read *tmp12 "0123456789ABCDEF" 0
  396:  printchar *tmp12
  397:  read *tmp12 "0123456789ABCDEF" 0
  398:  printchar *tmp12
  399:  assertprints "FFFFFF0F00000000" "printExactHex(0xFFFFFF0F << 32)"
  400:  stop
  401:  end
        label *label6
  402:  op abs *tmp42 :printExactFast:n 0
  403:  jump *label116 greaterThan *tmp42 0
  404:  print :printExactFast:n
  405:  return :printExactFast*retaddr
        label *label116
  406:  jump *label118 greaterThanEq :printExactFast:n 0
  407:  print "-"
  408:  op abs :printExactFast:n :printExactFast:n 0
        label *label118
  409:  op log10 *tmp48 :printExactFast:n 0
  410:  op floor :printExactFast:exp *tmp48 0
  411:  op sub *tmp50 0 :printExactFast:exp
  412:  op pow *tmp51 10 *tmp50
  413:  op mul :printExactFast:base :printExactFast:n *tmp51
  414:  op add *tmp54 :printExactFast:base 0.5
  415:  op floor *tmp53 *tmp54 0
  416:  op sub *tmp56 :printExactFast:base *tmp53
  417:  op abs :printExactFast:cmp *tmp56 0
  418:  jump *label121 greaterThan :printExactFast:cmp 0
  419:  print :printExactFast:base
  420:  jump *label122 always 0 0
        label *label121
  421:  jump *label123 lessThanEq :printExactFast:cmp 0.00001
  422:  print :printExactFast:base
  423:  jump *label124 always 0 0
        label *label123
  424:  op floor *tmp62 :printExactFast:base 0
  425:  print *tmp62
  426:  print "."
  427:  op mod *tmp63 :printExactFast:base 1
  428:  op mul :printExactFast:base *tmp63 100000
  429:  op floor :printExactFast:t :printExactFast:base 0
  430:  jump *label304 greaterThanEq :printExactFast:t 100
  431:  jump *label302 greaterThanEq :printExactFast:t 10
  432:  print "0000"
  433:  jump *label309 always 0 0
        label *label302
  434:  print "000"
  435:  jump *label309 always 0 0
        label *label304
  436:  jump *label305 greaterThanEq :printExactFast:t 1000
  437:  print "00"
  438:  jump *label308 always 0 0
        label *label305
  439:  jump *label306 greaterThanEq :printExactFast:t 10000
  440:  print "0"
        label *label306
        label *label308
        label *label309
  441:  print :printExactFast:t
  442:  op mod *tmp63 :printExactFast:base 1
  443:  op mul :printExactFast:base *tmp63 100000
  444:  op floor :printExactFast:t :printExactFast:base 0
  445:  jump *label315 greaterThanEq :printExactFast:t 100
  446:  jump *label313 greaterThanEq :printExactFast:t 10
  447:  print "0000"
  448:  jump *label320 always 0 0
        label *label313
  449:  print "000"
  450:  jump *label320 always 0 0
        label *label315
  451:  jump *label316 greaterThanEq :printExactFast:t 1000
  452:  print "00"
  453:  jump *label319 always 0 0
        label *label316
  454:  jump *label317 greaterThanEq :printExactFast:t 10000
  455:  print "0"
        label *label317
        label *label319
        label *label320
  456:  print :printExactFast:t
  457:  op mod *tmp63 :printExactFast:base 1
  458:  op mul :printExactFast:base *tmp63 100000
  459:  op floor :printExactFast:t :printExactFast:base 0
  460:  jump *label326 greaterThanEq :printExactFast:t 100
  461:  jump *label324 greaterThanEq :printExactFast:t 10
  462:  print "0000"
  463:  jump *label331 always 0 0
        label *label324
  464:  print "000"
  465:  jump *label331 always 0 0
        label *label326
  466:  jump *label327 greaterThanEq :printExactFast:t 1000
  467:  print "00"
  468:  jump *label330 always 0 0
        label *label327
  469:  jump *label328 greaterThanEq :printExactFast:t 10000
  470:  print "0"
        label *label328
        label *label330
        label *label331
  471:  print :printExactFast:t
        label *label124
        label *label122
  472:  jump *label137 equal :printExactFast:exp 0
  473:  print "E"
  474:  print :printExactFast:exp
        label *label137
  475:  return :printExactFast*retaddr
        label *label7
  476:  op abs *tmp78 :printExactSlow:n 0
  477:  jump *label141 greaterThan *tmp78 0
  478:  print :printExactSlow:n
  479:  return :printExactSlow*retaddr
        label *label141
  480:  jump *label143 greaterThanEq :printExactSlow:n 0
  481:  print "-"
  482:  op abs :printExactSlow:n :printExactSlow:n 0
        label *label143
  483:  op log10 *tmp84 :printExactSlow:n 0
  484:  op floor :printExactSlow:exp *tmp84 0
  485:  op sub *tmp86 0 :printExactSlow:exp
  486:  op pow *tmp87 10 *tmp86
  487:  op mul :printExactSlow:base :printExactSlow:n *tmp87
  488:  op floor *tmp89 :printExactSlow:base 0
  489:  print *tmp89
  490:  print "."
  491:  op mod *tmp90 :printExactSlow:base 1
  492:  op mul :printExactSlow:base *tmp90 10
  493:  op floor *tmp93 :printExactSlow:base 0
  494:  print *tmp93
  495:  op mod *tmp90 :printExactSlow:base 1
  496:  op mul :printExactSlow:base *tmp90 10
  497:  op floor *tmp93 :printExactSlow:base 0
  498:  print *tmp93
  499:  op mod *tmp90 :printExactSlow:base 1
  500:  op mul :printExactSlow:base *tmp90 10
  501:  op floor *tmp93 :printExactSlow:base 0
  502:  print *tmp93
  503:  op mod *tmp90 :printExactSlow:base 1
  504:  op mul :printExactSlow:base *tmp90 10
  505:  op floor *tmp93 :printExactSlow:base 0
  506:  print *tmp93
  507:  op mod *tmp90 :printExactSlow:base 1
  508:  op mul :printExactSlow:base *tmp90 10
  509:  op floor *tmp93 :printExactSlow:base 0
  510:  print *tmp93
  511:  op mod *tmp90 :printExactSlow:base 1
  512:  op mul :printExactSlow:base *tmp90 10
  513:  op floor *tmp93 :printExactSlow:base 0
  514:  print *tmp93
  515:  op mod *tmp90 :printExactSlow:base 1
  516:  op mul :printExactSlow:base *tmp90 10
  517:  op floor *tmp93 :printExactSlow:base 0
  518:  print *tmp93
  519:  op mod *tmp90 :printExactSlow:base 1
  520:  op mul :printExactSlow:base *tmp90 10
  521:  op floor *tmp93 :printExactSlow:base 0
  522:  print *tmp93
  523:  op mod *tmp90 :printExactSlow:base 1
  524:  op mul :printExactSlow:base *tmp90 10
  525:  op floor *tmp93 :printExactSlow:base 0
  526:  print *tmp93
  527:  op mod *tmp90 :printExactSlow:base 1
  528:  op mul :printExactSlow:base *tmp90 10
  529:  op floor *tmp93 :printExactSlow:base 0
  530:  print *tmp93
  531:  op mod *tmp90 :printExactSlow:base 1
  532:  op mul :printExactSlow:base *tmp90 10
  533:  op floor *tmp93 :printExactSlow:base 0
  534:  print *tmp93
  535:  op mod *tmp90 :printExactSlow:base 1
  536:  op mul :printExactSlow:base *tmp90 10
  537:  op floor *tmp93 :printExactSlow:base 0
  538:  print *tmp93
  539:  op mod *tmp90 :printExactSlow:base 1
  540:  op mul :printExactSlow:base *tmp90 10
  541:  op floor *tmp93 :printExactSlow:base 0
  542:  print *tmp93
  543:  op mod *tmp90 :printExactSlow:base 1
  544:  op mul :printExactSlow:base *tmp90 10
  545:  op floor *tmp93 :printExactSlow:base 0
  546:  print *tmp93
  547:  op mod *tmp90 :printExactSlow:base 1
  548:  op mul :printExactSlow:base *tmp90 10
  549:  op floor *tmp93 :printExactSlow:base 0
  550:  print *tmp93
  551:  jump *label149 equal :printExactSlow:exp 0
  552:  print "E"
  553:  print :printExactSlow:exp
        label *label149
  554:  return :printExactSlow*retaddr


stop instruction encountered, dumping variable values:
*tmp1: 365.0
*tmp12: 48.0
*tmp4: 0.0
*tmp42: 1.2345E-50
*tmp48: -49.90850890573205
*tmp5: 0.0
*tmp50: 50.0
*tmp51: 1.0E50
*tmp53: 1.0
*tmp54: 1.7345000000000002
*tmp56: 0.23450000000000015
*tmp62: 1.0
*tmp63: 0.9999983634211276
*tmp78: 1.2345E-50
*tmp84: -49.90850890573205
*tmp86: 50.0
*tmp87: 1.0E50
*tmp89: 1.0
*tmp90: 0.015276668818842154
*tmp93: 0.0
:formatHexNumber:digit: 1.0
:formatHexNumber:digits: -10.0
:formatHexNumber:n: 0.0
:formatNumber:n: 1.0
:printExactBinary:t: 0.0
:printExactFast*retaddr: 212.0
:printExactFast:base: 1.2345000000000002
:printExactFast:cmp: 0.23450000000000015
:printExactFast:exp: -50.0
:printExactFast:n: 1.2345E-50
:printExactFast:t: 99999.0
:printExactSlow*retaddr: 262.0
:printExactSlow:base: 0.15276668818842154
:printExactSlow:exp: -50.0
:printExactSlow:n: 1.2345E-50
@counter: 401.0