   417 instructions before optimizations.
    20 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    36 instructions eliminated by Dead Code Elimination (6 iterations).
    65 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    20 instructions eliminated by Jump Optimization (5 iterations).
    45 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
   199 instructions eliminated by Data Flow Optimization (18 passes, 55 iterations).
     2 instructions eliminated by Loop Optimization (4 iterations).
     5 loops improved by Loop Optimization.
   643 instructions added by Loop Unrolling (20 iterations).
    12 loops unrolled by Loop Unrolling.
   233 instructions added by Function Inlining (20 iterations).
    13 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (5 iterations).
   268 instructions updated by JumpThreading.
   525 instructions eliminated by Unreachable Code Elimination.
   372 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 686):
    Unroll loop at *printing:240:13                              cost    27, benefit      187.5, efficiency        6.9
  * Unroll loop at *printing:285:9                               cost    53, benefit     3750.0, efficiency       70.8 (+53 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:216:1  cost   404, benefit       35.0, efficiency        0.1
    Inline function 'printExactSlow' defined at *printing:272:1  cost   215, benefit       35.0, efficiency        0.2
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 18:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 19:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 20:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 21:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 22:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 23:30                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 24:38                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 25:40                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 26:41                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 27:22                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 28:19                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 29:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 30:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 31:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 32:38                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 33:35                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 34:38                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 35:39                           cost    24, benefit        3.5, efficiency        0.1
    Inline function call at line 36:40                           cost    24, benefit        3.5, efficiency        0.1

Pass 1: speed optimization selection (cost limit 633):
  * Unroll loop at *printing:240:13                              cost    27, benefit      187.5, efficiency        6.9 (+27 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
    Inline function 'printExactFast' defined at *printing:216:1  cost   404, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 18:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 19:19                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 20:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 21:35                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 22:22                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 23:30                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 24:38                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 25:40                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 26:41                           cost    45, benefit        3.5, efficiency        0.1
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 606):
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
  * Inline function 'printBinaryNumber' defined at *printing:124:1 cost    12, benefit        8.0, efficiency        0.7 (+4 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 12:24                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 13:26                           cost    13, benefit        4.0, efficiency        0.3
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 602):
  * Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0 (+1 instructions)
    Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 601):
  * Unroll loop at *printing:91:5                                cost    10, benefit      200.0, efficiency       20.0 (+1 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 600):
  * Unroll loop at *printing:97:5                                cost     0, benefit      100.0, efficiency   Infinity (-3 instructions)
    Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 603):
  * Inline function 'printNumber' defined at *printing:67:1      cost   101, benefit       24.5, efficiency        0.2 (+78 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 5:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 6:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 7:19                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 8:20                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 9:27                            cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 10:28                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 11:27                           cost    17, benefit        3.5, efficiency        0.2
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 525):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 522):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 519):
  * Unroll loop at *printing:38:5                                cost     6, benefit      100.0, efficiency       16.7 (+3 instructions)
    Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 516):
  * Inline function 'printHexNumber' defined at *printing:190:1  cost    67, benefit       12.0, efficiency        0.2 (+57 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 14:26                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 15:30                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 16:28                           cost    34, benefit        4.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 459):
  * Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4 (+110 instructions)
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
    Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 349):
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
  * Unroll loop at *printing:148:5                               cost   123, benefit      300.0, efficiency        2.4 (+110 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 239):
    Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2
  * Unroll loop at *printing:163:5                               cost     0, benefit      100.0, efficiency   Infinity (-3 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 242):
  * Unroll loop at *printing:148:5                               cost   223, benefit      500.0, efficiency        2.2 (+202 instructions)
  ! Inline function 'printExactFast' defined at *printing:216:1  cost   647, benefit       35.0, efficiency        0.1
  ! Inline function 'printExactSlow' defined at *printing:272:1  cost   692, benefit       35.0, efficiency        0.1
    Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 1: speed optimization selection (cost limit 40):
  ! Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 101):
  * Inline function call at line 17:22                           cost    72, benefit        3.5, efficiency        0.0 (+50 instructions)
    Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
    Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
    Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 2: speed optimization selection (cost limit 51):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 3: speed optimization selection (cost limit 65):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Pass 4: speed optimization selection (cost limit 65):
  ! Inline function call at line 18:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 19:19                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 20:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 21:35                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 22:22                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 23:30                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 24:38                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 25:40                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 26:41                           cost    72, benefit        3.5, efficiency        0.0
  ! Inline function call at line 27:22                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 28:19                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 29:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 30:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 31:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 32:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 33:35                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 34:38                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 35:39                           cost    77, benefit        3.5, efficiency        0.0
  ! Inline function call at line 36:40                           cost    77, benefit        3.5, efficiency        0.0

Final code before resolving virtual instructions:

    0:  assertflush
    1:  print "{2}"
    2:  op floor :formatNumber.0:n 0 0
    3:  format :formatNumber.0:n
    4:  assertprints "0" "printNumber(null)"
    5:  assertflush
    6:  print "{2}"
    7:  op floor :formatNumber.0:n 1 0
    8:  format :formatNumber.0:n
    9:  assertprints "1" "printNumber(1)"
   10:  assertflush
   11:  print "{2}"
   12:  op floor :formatNumber.0:n 1.5 0
   13:  format :formatNumber.0:n
   14:  assertprints "1" "printNumber(1.5)"
   15:  assertflush
   16:  print "{2}"
   17:  op floor :formatNumber.0:n 1.5 0
   18:  format "-{2}"
   19:  format :formatNumber.0:n
   20:  assertprints "-1" "printNumber(-1.5)"
   21:  assertflush
   22:  print "{2}"
   23:  format "{2},{1}"
   24:  format 567
   25:  format "{2},{1}"
   26:  format 234
   27:  format 1
   28:  assertprints "1,234,567" "printNumber(1234567)"
   29:  assertflush
   30:  print "{2}"
   31:  format "-{2}"
   32:  format "{2},{1}"
   33:  format 567
   34:  format "{2},{1}"
   35:  format 234
   36:  format 1
   37:  assertprints "-1,234,567" "printNumber(-1234567)"
   38:  assertflush
   39:  print "{2}"
   40:  format "{2},0{1}"
   41:  format 99
   42:  format "{2},00{1}"
   43:  format 9
   44:  format 9
   45:  assertprints "9,009,099" "printNumber(9009099)"
   46:  assertflush
   47:  print "{2}"
   48:  format "{2}{1}"
   49:  format 1
   50:  format "{2}{1}"
   51:  format 0
   52:  format "{2}{1}"
   53:  format 0
   54:  format "{2}{1}"
   55:  format 1
   56:  format "0b"
   57:  assertprints "0b1001" "printBinaryNumber(0b1001, 0)"
   58:  assertflush
   59:  print "{2}"
   60:  format "{2}{1}"
   61:  format 0
   62:  format "{2}{1}"
   63:  format 1
   64:  format "{2}{1}"
   65:  format 0
   66:  format "{2}{1}"
   67:  format 1
   68:  format "{2}0"
   69:  format "{2}0"
   70:  format "0b"
   71:  assertprints "0b001010" "printBinaryNumber(0b1010, 6)"
   72:  assertflush
   73:  print "{2}"
   74:  format "{2}F"
   75:  format "{2}E"
   76:  format "{2}D"
   77:  format "{2}C"
   78:  format "{2}B"
   79:  format "{2}A"
   80:  format "0x"
   81:  assertprints "0xABCDEF" "printHexNumber(0xABCDEF, 0)"
   82:  assertflush
   83:  print "{2}"
   84:  format "{2}{1}"
   85:  format 0
   86:  format "{2}{1}"
   87:  format 9
   88:  format "{2}{1}"
   89:  format 8
   90:  format "{2}{1}"
   91:  format 7
   92:  format "{2}{1}"
   93:  format 6
   94:  format "{2}{1}"
   95:  format 5
   96:  format "{2}{1}"
   97:  format 4
   98:  format "{2}{1}"
   99:  format 3
  100:  format "{2}{1}"
  101:  format 2
  102:  format "{2}{1}"
  103:  format 1
  104:  format "0x"
  105:  assertprints "0x1234567890" "printHexNumber(0x1234567890, 0)"
  106:  assertflush
  107:  print "{2}"
  108:  format "{2}C"
  109:  format "{2}C"
  110:  format "{2}B"
  111:  format "{2}B"
  112:  format "{2}A"
  113:  format "{2}A"
  114:  format "{2}0"
  115:  format "{2}0"
  116:  format "0x"
  117:  assertprints "0x00AABBCC" "printHexNumber(0xAABBCC, 8)"
  118:  assertflush
  119:  op abs *tmp23 null 0
  120:  print null
  121:  assertprints "null" "printExactFast(null)"
  122:  assertflush
  123:  set :printExactFast.0:n 0
  124:  setaddr :printExactFast.0*retaddr *label21
  125:  call *label6 :printExactFast.0*retval
        label *label21
  126:  assertprints "0" "printExactFast(0)"
  127:  assertflush
  128:  set :printExactFast.0:n 1
  129:  setaddr :printExactFast.0*retaddr *label22
  130:  call *label6 :printExactFast.0*retval
        label *label22
  131:  assertprints "1" "printExactFast(1)"
  132:  assertflush
  133:  set :printExactFast.0:n 1.0000001
  134:  setaddr :printExactFast.0*retaddr *label23
  135:  call *label6 :printExactFast.0*retval
        label *label23
  136:  assertprints "1.000000100000000" "printExactFast(1.0000001)"
  137:  assertflush
  138:  set :printExactFast.0:n 3.00000007
  139:  setaddr :printExactFast.0*retaddr *label24
  140:  call *label6 :printExactFast.0*retval
        label *label24
  141:  assertprints "3.000000070000000" "printExactFast(3.00000007)"
  142:  assertflush
  143:  set :printExactFast.0:n 3E50
  144:  setaddr :printExactFast.0*retaddr *label25
  145:  call *label6 :printExactFast.0*retval
        label *label25
  146:  assertprints "3E50" "printExactFast(3e50)"
  147:  assertflush
  148:  set :printExactFast.0:n 1.0123456789
  149:  setaddr :printExactFast.0*retaddr *label26
  150:  call *label6 :printExactFast.0*retval
        label *label26
  151:  assertprints "1.0123456789" "printExactFast(1.0123456789)"
  152:  assertflush
  153:  set :printExactFast.0:n 10000001E13
  154:  setaddr :printExactFast.0*retaddr *label27
  155:  call *label6 :printExactFast.0*retval
        label *label27
  156:  assertprints "1.000000099999999E20" "printExactFast(1.0000001e20)"
  157:  assertflush
  158:  set :printExactFast.0:n 12345E-54
  159:  setaddr :printExactFast.0*retaddr *label28
  160:  call *label6 :printExactFast.0*retval
        label *label28
  161:  assertprints "1.2345000000000002E-50" "printExactFast(1.2345e-50)"
  162:  assertflush
  163:  set :printExactFast.0:n -12345E-54
  164:  setaddr :printExactFast.0*retaddr *label29
  165:  call *label6 :printExactFast.0*retval
        label *label29
  166:  assertprints "-1.2345000000000002E-50" "printExactFast(-1.2345e-50)"
  167:  assertflush
  168:  set :printExactSlow.0:n null
  169:  setaddr :printExactSlow.0*retaddr *label30
  170:  call *label7 :printExactSlow.0*retval
        label *label30
  171:  assertprints "null" "printExactSlow(null)"
  172:  assertflush
  173:  set :printExactSlow.0:n 0
  174:  setaddr :printExactSlow.0*retaddr *label31
  175:  call *label7 :printExactSlow.0*retval
        label *label31
  176:  assertprints "0" "printExactSlow(0)"
  177:  assertflush
  178:  set :printExactSlow.0:n 1
  179:  setaddr :printExactSlow.0*retaddr *label32
  180:  call *label7 :printExactSlow.0*retval
        label *label32
  181:  assertprints "1.000000000000000" "printExactSlow(1)"
  182:  assertflush
  183:  set :printExactSlow.0:n 1.0000001
  184:  setaddr :printExactSlow.0*retaddr *label33
  185:  call *label7 :printExactSlow.0*retval
        label *label33
  186:  assertprints "1.000000100000000" "printExactSlow(1.0000001)"
  187:  assertflush
  188:  set :printExactSlow.0:n 3.00000007
  189:  setaddr :printExactSlow.0*retaddr *label34
  190:  call *label7 :printExactSlow.0*retval
        label *label34
  191:  assertprints "3.000000070000000" "printExactSlow(3.00000007)"
  192:  assertflush
  193:  set :printExactSlow.0:n 3E50
  194:  setaddr :printExactSlow.0*retaddr *label35
  195:  call *label7 :printExactSlow.0*retval
        label *label35
  196:  assertprints "3.000000000000000E50" "printExactSlow(3e50)"
  197:  assertflush
  198:  set :printExactSlow.0:n 1.0123456789
  199:  setaddr :printExactSlow.0*retaddr *label36
  200:  call *label7 :printExactSlow.0*retval
        label *label36
  201:  assertprints "1.012345678900000" "printExactSlow(1.0123456789)"
  202:  assertflush
  203:  set :printExactSlow.0:n 10000001E13
  204:  setaddr :printExactSlow.0*retaddr *label37
  205:  call *label7 :printExactSlow.0*retval
        label *label37
  206:  assertprints "1.000000099999999E20" "printExactSlow(1.0000001e20)"
  207:  assertflush
  208:  set :printExactSlow.0:n 12345E-54
  209:  setaddr :printExactSlow.0*retaddr *label38
  210:  call *label7 :printExactSlow.0*retval
        label *label38
  211:  assertprints "1.234500000000000E-50" "printExactSlow(1.2345e-50)"
  212:  assertflush
  213:  set :printExactSlow.0:n -12345E-54
  214:  setaddr :printExactSlow.0*retaddr *label39
  215:  call *label7 :printExactSlow.0*retval
        label *label39
  216:  assertprints "-1.234500000000000E-50" "printExactSlow(-1.2345e-50)"
  217:  stop
  218:  end
        label *label6
  219:  op abs *tmp23 :printExactFast.0:n 0
  220:  jump *label85 greaterThan *tmp23 0
  221:  print :printExactFast.0:n
  222:  return :printExactFast.0*retaddr
        label *label85
  223:  jump *label87 greaterThanEq :printExactFast.0:n 0
  224:  print "-"
  225:  op abs :printExactFast.0:n :printExactFast.0:n 0
        label *label87
  226:  op log10 *tmp29 :printExactFast.0:n 0
  227:  op floor :printExactFast.0:exp *tmp29 0
  228:  op sub *tmp31 0 :printExactFast.0:exp
  229:  op pow *tmp32 10 *tmp31
  230:  op mul :printExactFast.0:base :printExactFast.0:n *tmp32
  231:  op add *tmp35 :printExactFast.0:base 0.5
  232:  op floor *tmp34 *tmp35 0
  233:  op sub *tmp37 :printExactFast.0:base *tmp34
  234:  op abs :printExactFast.0:cmp *tmp37 0
  235:  jump *label90 greaterThan :printExactFast.0:cmp 0
  236:  print :printExactFast.0:base
  237:  jump *label91 always 0 0
        label *label90
  238:  jump *label92 lessThanEq :printExactFast.0:cmp 0.00001
  239:  print :printExactFast.0:base
  240:  jump *label93 always 0 0
        label *label92
  241:  op floor *tmp43 :printExactFast.0:base 0
  242:  print *tmp43
  243:  print "."
  244:  op mod *tmp44 :printExactFast.0:base 1
  245:  op mul :printExactFast.0:base *tmp44 100000
  246:  op floor :printExactFast.0:t :printExactFast.0:base 0
  247:  jump *label174 greaterThanEq :printExactFast.0:t 10
  248:  print "0000"
  249:  jump *label181 always 0 0
        label *label174
  250:  jump *label175 greaterThanEq :printExactFast.0:t 100
  251:  print "000"
  252:  jump *label180 always 0 0
        label *label175
  253:  jump *label176 greaterThanEq :printExactFast.0:t 1000
  254:  print "00"
  255:  jump *label179 always 0 0
        label *label176
  256:  jump *label177 greaterThanEq :printExactFast.0:t 10000
  257:  print "0"
        label *label177
        label *label179
        label *label180
        label *label181
  258:  print :printExactFast.0:t
  259:  op mod *tmp44 :printExactFast.0:base 1
  260:  op mul :printExactFast.0:base *tmp44 100000
  261:  op floor :printExactFast.0:t :printExactFast.0:base 0
  262:  jump *label185 greaterThanEq :printExactFast.0:t 10
  263:  print "0000"
  264:  jump *label192 always 0 0
        label *label185
  265:  jump *label186 greaterThanEq :printExactFast.0:t 100
  266:  print "000"
  267:  jump *label191 always 0 0
        label *label186
  268:  jump *label187 greaterThanEq :printExactFast.0:t 1000
  269:  print "00"
  270:  jump *label190 always 0 0
        label *label187
  271:  jump *label188 greaterThanEq :printExactFast.0:t 10000
  272:  print "0"
        label *label188
        label *label190
        label *label191
        label *label192
  273:  print :printExactFast.0:t
  274:  op mod *tmp44 :printExactFast.0:base 1
  275:  op mul :printExactFast.0:base *tmp44 100000
  276:  op floor :printExactFast.0:t :printExactFast.0:base 0
  277:  jump *label196 greaterThanEq :printExactFast.0:t 10
  278:  print "0000"
  279:  jump *label203 always 0 0
        label *label196
  280:  jump *label197 greaterThanEq :printExactFast.0:t 100
  281:  print "000"
  282:  jump *label202 always 0 0
        label *label197
  283:  jump *label198 greaterThanEq :printExactFast.0:t 1000
  284:  print "00"
  285:  jump *label201 always 0 0
        label *label198
  286:  jump *label199 greaterThanEq :printExactFast.0:t 10000
  287:  print "0"
        label *label199
        label *label201
        label *label202
        label *label203
  288:  print :printExactFast.0:t
        label *label93
        label *label91
  289:  jump *label106 equal :printExactFast.0:exp 0
  290:  print "E"
  291:  print :printExactFast.0:exp
        label *label106
  292:  return :printExactFast.0*retaddr
        label *label7
  293:  op abs *tmp59 :printExactSlow.0:n 0
  294:  jump *label110 greaterThan *tmp59 0
  295:  print :printExactSlow.0:n
  296:  return :printExactSlow.0*retaddr
        label *label110
  297:  jump *label112 greaterThanEq :printExactSlow.0:n 0
  298:  print "-"
  299:  op abs :printExactSlow.0:n :printExactSlow.0:n 0
        label *label112
  300:  op log10 *tmp65 :printExactSlow.0:n 0
  301:  op floor :printExactSlow.0:exp *tmp65 0
  302:  op sub *tmp67 0 :printExactSlow.0:exp
  303:  op pow *tmp68 10 *tmp67
  304:  op mul :printExactSlow.0:base :printExactSlow.0:n *tmp68
  305:  op floor *tmp70 :printExactSlow.0:base 0
  306:  print *tmp70
  307:  print "."
  308:  op mod *tmp71 :printExactSlow.0:base 1
  309:  op mul :printExactSlow.0:base *tmp71 10
  310:  op floor *tmp74 :printExactSlow.0:base 0
  311:  print *tmp74
  312:  op mod *tmp71 :printExactSlow.0:base 1
  313:  op mul :printExactSlow.0:base *tmp71 10
  314:  op floor *tmp74 :printExactSlow.0:base 0
  315:  print *tmp74
  316:  op mod *tmp71 :printExactSlow.0:base 1
  317:  op mul :printExactSlow.0:base *tmp71 10
  318:  op floor *tmp74 :printExactSlow.0:base 0
  319:  print *tmp74
  320:  op mod *tmp71 :printExactSlow.0:base 1
  321:  op mul :printExactSlow.0:base *tmp71 10
  322:  op floor *tmp74 :printExactSlow.0:base 0
  323:  print *tmp74
  324:  op mod *tmp71 :printExactSlow.0:base 1
  325:  op mul :printExactSlow.0:base *tmp71 10
  326:  op floor *tmp74 :printExactSlow.0:base 0
  327:  print *tmp74
  328:  op mod *tmp71 :printExactSlow.0:base 1
  329:  op mul :printExactSlow.0:base *tmp71 10
  330:  op floor *tmp74 :printExactSlow.0:base 0
  331:  print *tmp74
  332:  op mod *tmp71 :printExactSlow.0:base 1
  333:  op mul :printExactSlow.0:base *tmp71 10
  334:  op floor *tmp74 :printExactSlow.0:base 0
  335:  print *tmp74
  336:  op mod *tmp71 :printExactSlow.0:base 1
  337:  op mul :printExactSlow.0:base *tmp71 10
  338:  op floor *tmp74 :printExactSlow.0:base 0
  339:  print *tmp74
  340:  op mod *tmp71 :printExactSlow.0:base 1
  341:  op mul :printExactSlow.0:base *tmp71 10
  342:  op floor *tmp74 :printExactSlow.0:base 0
  343:  print *tmp74
  344:  op mod *tmp71 :printExactSlow.0:base 1
  345:  op mul :printExactSlow.0:base *tmp71 10
  346:  op floor *tmp74 :printExactSlow.0:base 0
  347:  print *tmp74
  348:  op mod *tmp71 :printExactSlow.0:base 1
  349:  op mul :printExactSlow.0:base *tmp71 10
  350:  op floor *tmp74 :printExactSlow.0:base 0
  351:  print *tmp74
  352:  op mod *tmp71 :printExactSlow.0:base 1
  353:  op mul :printExactSlow.0:base *tmp71 10
  354:  op floor *tmp74 :printExactSlow.0:base 0
  355:  print *tmp74
  356:  op mod *tmp71 :printExactSlow.0:base 1
  357:  op mul :printExactSlow.0:base *tmp71 10
  358:  op floor *tmp74 :printExactSlow.0:base 0
  359:  print *tmp74
  360:  op mod *tmp71 :printExactSlow.0:base 1
  361:  op mul :printExactSlow.0:base *tmp71 10
  362:  op floor *tmp74 :printExactSlow.0:base 0
  363:  print *tmp74
  364:  op mod *tmp71 :printExactSlow.0:base 1
  365:  op mul :printExactSlow.0:base *tmp71 10
  366:  op floor *tmp74 :printExactSlow.0:base 0
  367:  print *tmp74
  368:  jump *label118 equal :printExactSlow.0:exp 0
  369:  print "E"
  370:  print :printExactSlow.0:exp
        label *label118
  371:  return :printExactSlow.0*retaddr


stop instruction encountered, dumping variable values:
*tmp23: 1.2345E-50
*tmp29: -49.90850890573205
*tmp31: 50.0
*tmp32: 1.0E50
*tmp34: 1.0
*tmp35: 1.7345000000000002
*tmp37: 0.23450000000000015
*tmp43: 1.0
*tmp44: 0.9999983634211276
*tmp59: 1.2345E-50
*tmp65: -49.90850890573205
*tmp67: 50.0
*tmp68: 1.0E50
*tmp70: 1.0
*tmp71: 0.015276668818842154
*tmp74: 0.0
:formatNumber.0:n: 1.0
:printExactFast.0*retaddr: 166.0
:printExactFast.0:base: 1.2345000000000002
:printExactFast.0:cmp: 0.23450000000000015
:printExactFast.0:exp: -50.0
:printExactFast.0:n: 1.2345E-50
:printExactFast.0:t: 99999.0
:printExactSlow.0*retaddr: 216.0
:printExactSlow.0:base: 0.15276668818842154
:printExactSlow.0:exp: -50.0
:printExactSlow.0:n: 1.2345E-50
@counter: 218.0