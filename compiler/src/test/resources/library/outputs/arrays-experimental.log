   390 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination.
    12 instructions eliminated by Dead Code Elimination (4 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
     9 instructions eliminated by Jump Optimization (2 passes, 7 iterations).
    19 instructions eliminated by Single Step Elimination (4 passes, 11 iterations).
  1764 instructions eliminated by Expression Optimization (3 passes, 5 iterations).
   207 instructions eliminated by Data Flow Optimization (11 passes, 55 iterations).
     7 instructions eliminated by Loop Optimization (5 iterations).
     7 loops improved by Loop Optimization.
  2000 instructions added by Loop Unrolling (20 iterations).
     7 loops unrolled by Loop Unrolling.
    10 jump tables inlined by Array Optimization.
     2 instructions eliminated by Jump Straightening (7 iterations).
    18 instructions updated by JumpThreading.
    18 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   368 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 692):
    Unroll loop at *arrays:20:5                                  size    -2, benefit      250.0, efficiency   Infinity
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
  * Inline write jump table of array 'a'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'a' write access at *arrays:21:9                      size    +7, benefit       50.0, efficiency      7.143
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 695):
  * Unroll loop at *arrays:20:5                                  size    -9, benefit      250.0, efficiency   Infinity (+41 instructions)
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 654):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
  * Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421 (+139 instructions)
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 515):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +218, benefit     4300.0, efficiency     19.725
    Inline write jump table of array 'b'                         size  +439, benefit     4350.0, efficiency      9.909
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 368):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +354, benefit     3500.0, efficiency      9.887
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 351):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +337, benefit     2250.0, efficiency      6.677
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 334):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
  * Unroll loop at *arrays:115:9                                 size  +152, benefit    11250.0, efficiency     74.013 (+403 instructions)
    Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
  ! Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline read jump table of array 'c'                          size  +320, benefit     1700.0, efficiency      5.313
  ! Inline write jump table of array 'c'                         size  +337, benefit     1750.0, efficiency      5.193
  ! Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471

Pass 2: speed optimization selection (cost limit 549):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +144, benefit    11250.0, efficiency     78.125
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
  * Inline read jump table of array 'c'                          size   +14, benefit     1250.0, efficiency     89.286 (+14 instructions)
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 535):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:97:9                                  size  +263, benefit    11250.0, efficiency     42.776 (+667 instructions)
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
  ! Inline write jump table of array 'b'                         size  +337, benefit      600.0, efficiency      1.780
  ! Inline write jump table of array 'c'                         size  +303, benefit      500.0, efficiency      1.650
  ! Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471

Pass 3: speed optimization selection (cost limit 543):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
  * Inline write jump table of array 'c'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 546):
  * Unroll loop at line 12:5                                     size    +1, benefit      500.0, efficiency    500.000 (+231 instructions)
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 315):
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143 (+14 instructions)
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 301):
    Unroll loop at *arrays:33:5                                  size   +86, benefit      250.0, efficiency      2.907
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  * Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941 (+17 instructions)
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 284):
  * Unroll loop at *arrays:33:5                                  size   +69, benefit      250.0, efficiency      3.623 (+264 instructions)
    Inline write jump table of array 'b'                         size  +167, benefit       70.0, efficiency      0.419
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 20):
  ! Inline write jump table of array 'b'                         size  +235, benefit       30.0, efficiency      0.128
  * Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118 (+17 instructions)
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118

Pass 3: speed optimization selection (cost limit 3):
  ! Inline write jump table of array 'b'                         size  +218, benefit       28.0, efficiency      0.128
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118

Final code before resolving virtual instructions:

    0:  set p 0
    1:  assertflush
    2:  print "xxxxx"
    3:  assertprints "xxxxx" "Array fill"
    4:  set .b*9 p
    5:  set .c*0 p
    6:  op add *tmp4 p 1
    7:  set .b*8 *tmp4
    8:  set .c*1 *tmp4
    9:  op add *tmp4 p 2
   10:  set .b*7 *tmp4
   11:  set .c*2 *tmp4
   12:  op add *tmp4 p 3
   13:  set .b*6 *tmp4
   14:  set .c*3 *tmp4
   15:  op add *tmp4 p 4
   16:  set :reverse:t *tmp4
   17:  set .c*4 *tmp4
   18:  op add *tmp4 p 5
   19:  set *tmp14 *tmp4
   20:  set .c*5 *tmp4
   21:  op add *tmp4 p 6
   22:  set .b*3 *tmp4
   23:  set .c*6 *tmp4
   24:  op add *tmp4 p 7
   25:  set .b*2 *tmp4
   26:  set .c*7 *tmp4
   27:  op add *tmp4 p 8
   28:  set .b*1 *tmp4
   29:  set .c*8 *tmp4
   30:  op add *tmp4 p 9
   31:  set .b*0 *tmp4
   32:  set .c*9 *tmp4
   33:  set .b*4 *tmp14
   34:  set .b*5 :reverse:t
   35:  assertflush
   36:  print *tmp4
   37:  print .b*1
   38:  print .b*2
   39:  print .b*3
   40:  print *tmp14
   41:  print :reverse:t
   42:  print .b*6
   43:  print .b*7
   44:  print .b*8
   45:  print p
   46:  assertprints "9876543210" "Array reverse"
        label *label12
   47:  set :bubblesort:flag true
   48:  set :bubblesort:a .b*0
   49:  op greaterThan *tmp19 .b*0 .b*1
   50:  jump *label128 equal *tmp19 false
   51:  set .b*0 .b*1
   52:  set .b*1 :bubblesort:a
   53:  set :bubblesort:flag false
   54:  jump *label132 always 0 0
        label *label128
   55:  set :bubblesort:a .b*1
   56:  jump *label132 always 0 0
        label *label132
   57:  op greaterThan *tmp19 :bubblesort:a .b*2
   58:  jump *label134 equal *tmp19 false
   59:  set .b*1 .b*2
   60:  set .b*2 :bubblesort:a
   61:  set :bubblesort:flag false
   62:  jump *label138 always 0 0
        label *label134
   63:  set :bubblesort:a .b*2
   64:  jump *label138 always 0 0
        label *label138
   65:  op greaterThan *tmp19 :bubblesort:a .b*3
   66:  jump *label140 equal *tmp19 false
   67:  set .b*2 .b*3
   68:  set .b*3 :bubblesort:a
   69:  set :bubblesort:flag false
   70:  jump *label144 always 0 0
        label *label140
   71:  set :bubblesort:a .b*3
   72:  jump *label144 always 0 0
        label *label144
   73:  op greaterThan *tmp19 :bubblesort:a .b*4
   74:  jump *label146 equal *tmp19 false
   75:  set .b*3 .b*4
   76:  set .b*4 :bubblesort:a
   77:  set :bubblesort:flag false
   78:  jump *label150 always 0 0
        label *label146
   79:  set :bubblesort:a .b*4
   80:  jump *label150 always 0 0
        label *label150
   81:  op greaterThan *tmp19 :bubblesort:a .b*5
   82:  jump *label152 equal *tmp19 false
   83:  set .b*4 .b*5
   84:  set .b*5 :bubblesort:a
   85:  set :bubblesort:flag false
   86:  jump *label156 always 0 0
        label *label152
   87:  set :bubblesort:a .b*5
   88:  jump *label156 always 0 0
        label *label156
   89:  op greaterThan *tmp19 :bubblesort:a .b*6
   90:  jump *label158 equal *tmp19 false
   91:  set .b*5 .b*6
   92:  set .b*6 :bubblesort:a
   93:  set :bubblesort:flag false
   94:  jump *label162 always 0 0
        label *label158
   95:  set :bubblesort:a .b*6
   96:  jump *label162 always 0 0
        label *label162
   97:  op greaterThan *tmp19 :bubblesort:a .b*7
   98:  jump *label164 equal *tmp19 false
   99:  set .b*6 .b*7
  100:  set .b*7 :bubblesort:a
  101:  set :bubblesort:flag false
  102:  jump *label168 always 0 0
        label *label164
  103:  set :bubblesort:a .b*7
  104:  jump *label168 always 0 0
        label *label168
  105:  op greaterThan *tmp19 :bubblesort:a .b*8
  106:  jump *label170 equal *tmp19 false
  107:  set .b*7 .b*8
  108:  set .b*8 :bubblesort:a
  109:  set :bubblesort:flag false
  110:  jump *label174 always 0 0
        label *label170
  111:  set :bubblesort:a .b*8
  112:  jump *label174 always 0 0
        label *label174
  113:  op greaterThan *tmp19 :bubblesort:a .b*9
  114:  jump *label176 equal *tmp19 false
  115:  set .b*8 .b*9
  116:  set .b*9 :bubblesort:a
  117:  set :bubblesort:flag false
        label *label176
  118:  jump *label11 notEqual :bubblesort:flag false
  119:  set :bubblesort:a .b*9
  120:  op lessThan *tmp31 .b*9 .b*8
  121:  jump *label73 equal *tmp31 false
  122:  set .b*9 .b*8
  123:  set .b*8 :bubblesort:a
  124:  jump *label77 always 0 0
        label *label73
  125:  set :bubblesort:a .b*8
  126:  jump *label77 always 0 0
        label *label77
  127:  op lessThan *tmp31 :bubblesort:a .b*7
  128:  jump *label79 equal *tmp31 false
  129:  set .b*8 .b*7
  130:  set .b*7 :bubblesort:a
  131:  jump *label83 always 0 0
        label *label79
  132:  set :bubblesort:a .b*7
  133:  jump *label83 always 0 0
        label *label83
  134:  op lessThan *tmp31 :bubblesort:a .b*6
  135:  jump *label85 equal *tmp31 false
  136:  set .b*7 .b*6
  137:  set .b*6 :bubblesort:a
  138:  jump *label89 always 0 0
        label *label85
  139:  set :bubblesort:a .b*6
  140:  jump *label89 always 0 0
        label *label89
  141:  op lessThan *tmp31 :bubblesort:a .b*5
  142:  jump *label91 equal *tmp31 false
  143:  set .b*6 .b*5
  144:  set .b*5 :bubblesort:a
  145:  jump *label95 always 0 0
        label *label91
  146:  set :bubblesort:a .b*5
  147:  jump *label95 always 0 0
        label *label95
  148:  op lessThan *tmp31 :bubblesort:a .b*4
  149:  jump *label97 equal *tmp31 false
  150:  set .b*5 .b*4
  151:  set .b*4 :bubblesort:a
  152:  jump *label101 always 0 0
        label *label97
  153:  set :bubblesort:a .b*4
  154:  jump *label101 always 0 0
        label *label101
  155:  op lessThan *tmp31 :bubblesort:a .b*3
  156:  jump *label103 equal *tmp31 false
  157:  set .b*4 .b*3
  158:  set .b*3 :bubblesort:a
  159:  jump *label107 always 0 0
        label *label103
  160:  set :bubblesort:a .b*3
  161:  jump *label107 always 0 0
        label *label107
  162:  op lessThan *tmp31 :bubblesort:a .b*2
  163:  jump *label109 equal *tmp31 false
  164:  set .b*3 .b*2
  165:  set .b*2 :bubblesort:a
  166:  jump *label113 always 0 0
        label *label109
  167:  set :bubblesort:a .b*2
  168:  jump *label113 always 0 0
        label *label113
  169:  op lessThan *tmp31 :bubblesort:a .b*1
  170:  jump *label115 equal *tmp31 false
  171:  set .b*2 .b*1
  172:  set .b*1 :bubblesort:a
  173:  jump *label119 always 0 0
        label *label115
  174:  set :bubblesort:a .b*1
  175:  jump *label119 always 0 0
        label *label119
  176:  op lessThan *tmp31 :bubblesort:a .b*0
  177:  jump *label12 equal *tmp31 false
  178:  set .b*1 .b*0
  179:  set .b*0 :bubblesort:a
  180:  jump *label12 always 0 0
        label *label11
  181:  assertflush
  182:  print .b*0
  183:  print .b*1
  184:  print .b*2
  185:  print .b*3
  186:  print .b*4
  187:  print .b*5
  188:  print .b*6
  189:  print .b*7
  190:  print .b*8
  191:  print .b*9
  192:  assertprints "0123456789" "Array sort 1"
        label *label32
  193:  set :bubblesort.1:flag true
  194:  set :bubblesort.1:a .b*0
  195:  jump *label238 greaterThanEq .b*0 .b*1
  196:  set .b*0 .b*1
  197:  set .b*1 :bubblesort.1:a
  198:  set :bubblesort.1:v .c*0
  199:  set .c*0 .c*1
  200:  set .c*1 :bubblesort.1:v
  201:  set :bubblesort.1:flag false
  202:  jump *label239 always 0 0
        label *label238
  203:  set :bubblesort.1:a .b*1
        label *label239
  204:  jump *label244 greaterThanEq :bubblesort.1:a .b*2
  205:  set .b*1 .b*2
  206:  set .b*2 :bubblesort.1:a
  207:  set :bubblesort.1:v .c*1
  208:  set .c*1 .c*2
  209:  set .c*2 :bubblesort.1:v
  210:  set :bubblesort.1:flag false
  211:  jump *label245 always 0 0
        label *label244
  212:  set :bubblesort.1:a .b*2
        label *label245
  213:  jump *label250 greaterThanEq :bubblesort.1:a .b*3
  214:  set .b*2 .b*3
  215:  set .b*3 :bubblesort.1:a
  216:  set :bubblesort.1:v .c*2
  217:  set .c*2 .c*3
  218:  set .c*3 :bubblesort.1:v
  219:  set :bubblesort.1:flag false
  220:  jump *label251 always 0 0
        label *label250
  221:  set :bubblesort.1:a .b*3
        label *label251
  222:  jump *label256 greaterThanEq :bubblesort.1:a .b*4
  223:  set .b*3 .b*4
  224:  set .b*4 :bubblesort.1:a
  225:  set :bubblesort.1:v .c*3
  226:  set .c*3 .c*4
  227:  set .c*4 :bubblesort.1:v
  228:  set :bubblesort.1:flag false
  229:  jump *label257 always 0 0
        label *label256
  230:  set :bubblesort.1:a .b*4
        label *label257
  231:  jump *label262 greaterThanEq :bubblesort.1:a .b*5
  232:  set .b*4 .b*5
  233:  set .b*5 :bubblesort.1:a
  234:  set :bubblesort.1:v .c*4
  235:  set .c*4 .c*5
  236:  set .c*5 :bubblesort.1:v
  237:  set :bubblesort.1:flag false
  238:  jump *label263 always 0 0
        label *label262
  239:  set :bubblesort.1:a .b*5
        label *label263
  240:  jump *label268 greaterThanEq :bubblesort.1:a .b*6
  241:  set .b*5 .b*6
  242:  set .b*6 :bubblesort.1:a
  243:  set :bubblesort.1:v .c*5
  244:  set .c*5 .c*6
  245:  set .c*6 :bubblesort.1:v
  246:  set :bubblesort.1:flag false
  247:  jump *label269 always 0 0
        label *label268
  248:  set :bubblesort.1:a .b*6
        label *label269
  249:  jump *label274 greaterThanEq :bubblesort.1:a .b*7
  250:  set .b*6 .b*7
  251:  set .b*7 :bubblesort.1:a
  252:  set :bubblesort.1:v .c*6
  253:  set .c*6 .c*7
  254:  set .c*7 :bubblesort.1:v
  255:  set :bubblesort.1:flag false
  256:  jump *label275 always 0 0
        label *label274
  257:  set :bubblesort.1:a .b*7
        label *label275
  258:  jump *label280 greaterThanEq :bubblesort.1:a .b*8
  259:  set .b*7 .b*8
  260:  set .b*8 :bubblesort.1:a
  261:  set :bubblesort.1:v .c*7
  262:  set .c*7 .c*8
  263:  set .c*8 :bubblesort.1:v
  264:  set :bubblesort.1:flag false
  265:  jump *label281 always 0 0
        label *label280
  266:  set :bubblesort.1:a .b*8
        label *label281
  267:  jump *label286 greaterThanEq :bubblesort.1:a .b*9
  268:  set .b*8 .b*9
  269:  set .b*9 :bubblesort.1:a
  270:  set :bubblesort.1:v .c*8
  271:  set .c*8 .c*9
  272:  set .c*9 :bubblesort.1:v
  273:  set :bubblesort.1:flag false
        label *label286
  274:  jump *label31 notEqual :bubblesort.1:flag false
  275:  set :bubblesort.1:a .b*9
  276:  op greaterThan *tmp64 .b*9 .b*8
  277:  jump *label183 equal *tmp64 false
  278:  set .b*9 .b*8
  279:  set .b*8 :bubblesort.1:a
  280:  set :bubblesort.1:v.1 .c*9
  281:  set .c*9 .c*8
  282:  set .c*8 :bubblesort.1:v.1
  283:  jump *label184 always 0 0
        label *label183
  284:  set :bubblesort.1:a .b*8
        label *label184
  285:  op greaterThan *tmp64 :bubblesort.1:a .b*7
  286:  jump *label189 equal *tmp64 false
  287:  set .b*8 .b*7
  288:  set .b*7 :bubblesort.1:a
  289:  set :bubblesort.1:v.1 .c*8
  290:  set .c*8 .c*7
  291:  set .c*7 :bubblesort.1:v.1
  292:  jump *label190 always 0 0
        label *label189
  293:  set :bubblesort.1:a .b*7
        label *label190
  294:  op greaterThan *tmp64 :bubblesort.1:a .b*6
  295:  jump *label195 equal *tmp64 false
  296:  set .b*7 .b*6
  297:  set .b*6 :bubblesort.1:a
  298:  set :bubblesort.1:v.1 .c*7
  299:  set .c*7 .c*6
  300:  set .c*6 :bubblesort.1:v.1
  301:  jump *label196 always 0 0
        label *label195
  302:  set :bubblesort.1:a .b*6
        label *label196
  303:  op greaterThan *tmp64 :bubblesort.1:a .b*5
  304:  jump *label201 equal *tmp64 false
  305:  set .b*6 .b*5
  306:  set .b*5 :bubblesort.1:a
  307:  set :bubblesort.1:v.1 .c*6
  308:  set .c*6 .c*5
  309:  set .c*5 :bubblesort.1:v.1
  310:  jump *label202 always 0 0
        label *label201
  311:  set :bubblesort.1:a .b*5
        label *label202
  312:  op greaterThan *tmp64 :bubblesort.1:a .b*4
  313:  jump *label207 equal *tmp64 false
  314:  set .b*5 .b*4
  315:  set .b*4 :bubblesort.1:a
  316:  set :bubblesort.1:v.1 .c*5
  317:  set .c*5 .c*4
  318:  set .c*4 :bubblesort.1:v.1
  319:  jump *label208 always 0 0
        label *label207
  320:  set :bubblesort.1:a .b*4
        label *label208
  321:  op greaterThan *tmp64 :bubblesort.1:a .b*3
  322:  jump *label213 equal *tmp64 false
  323:  set .b*4 .b*3
  324:  set .b*3 :bubblesort.1:a
  325:  set :bubblesort.1:v.1 .c*4
  326:  set .c*4 .c*3
  327:  set .c*3 :bubblesort.1:v.1
  328:  jump *label214 always 0 0
        label *label213
  329:  set :bubblesort.1:a .b*3
        label *label214
  330:  op greaterThan *tmp64 :bubblesort.1:a .b*2
  331:  jump *label219 equal *tmp64 false
  332:  set .b*3 .b*2
  333:  set .b*2 :bubblesort.1:a
  334:  set :bubblesort.1:v.1 .c*3
  335:  set .c*3 .c*2
  336:  set .c*2 :bubblesort.1:v.1
  337:  jump *label220 always 0 0
        label *label219
  338:  set :bubblesort.1:a .b*2
        label *label220
  339:  op greaterThan *tmp64 :bubblesort.1:a .b*1
  340:  jump *label225 equal *tmp64 false
  341:  set .b*2 .b*1
  342:  set .b*1 :bubblesort.1:a
  343:  set :bubblesort.1:v.1 .c*2
  344:  set .c*2 .c*1
  345:  set .c*1 :bubblesort.1:v.1
  346:  jump *label226 always 0 0
        label *label225
  347:  set :bubblesort.1:a .b*1
        label *label226
  348:  op greaterThan *tmp64 :bubblesort.1:a .b*0
  349:  jump *label32 equal *tmp64 false
  350:  set .b*1 .b*0
  351:  set .b*0 :bubblesort.1:a
  352:  set :bubblesort.1:v.1 .c*1
  353:  set .c*1 .c*0
  354:  set .c*0 :bubblesort.1:v.1
  355:  jump *label32 always 0 0
        label *label31
  356:  assertflush
  357:  print .c*0
  358:  print .c*1
  359:  print .c*2
  360:  print .c*3
  361:  print .c*4
  362:  print .c*5
  363:  print .c*6
  364:  print .c*7
  365:  print .c*8
  366:  print .c*9
  367:  assertprints "9876543210" "Array sort 2"
