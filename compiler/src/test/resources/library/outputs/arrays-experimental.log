   379 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination (9 iterations).
    12 instructions eliminated by Dead Code Elimination (4 iterations).
     2 instructions eliminated by Jump Normalization (8 iterations).
     4 instructions eliminated by Jump Optimization (2 passes, 8 iterations).
     9 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
   842 instructions eliminated by Expression Optimization (2 passes, 6 iterations).
   139 instructions eliminated by Data Flow Optimization (9 passes, 57 iterations).
     7 instructions eliminated by Loop Optimization (6 iterations).
     7 loops improved by Loop Optimization.
   988 instructions added by Loop Unrolling (27 iterations).
     5 loops unrolled by Loop Unrolling.
   281 instructions added by Array Optimization (27 iterations).
    69 jump tables inlined by Array Optimization.
     2 instructions eliminated by Jump Straightening (8 iterations).
   106 instructions updated by Jump Threading.
    18 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   519 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 703):
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
  * Inline compact jump table of array 'a'                       size    -3, benefit       55.0, efficiency   Infinity (-3 instructions)
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'a' write access at *arrays:24:9                      size    +7, benefit       55.0, efficiency      7.857
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:23:5                                  size    -3, benefit      250.0, efficiency   Infinity
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 706):
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
  * Unroll loop at *arrays:23:5                                  size   -10, benefit      250.0, efficiency   Infinity (+45 instructions)
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 661):
  * Promote compact array 'a'                                    size    -5, benefit        5.0, efficiency   Infinity (-5 instructions)
    Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 666):
  * Promote compact array 'b'                                    size   +24, benefit     5125.0, efficiency    213.542 (+24 instructions)
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline compact jump table of array 'b'                       size  +253, benefit    15862.5, efficiency     62.698
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:42:9                       size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:42:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' write access at *arrays:43:9                      size   +16, benefit       77.5, efficiency      4.844
    Inline 'b' read access at *arrays:64:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:67:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:68:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:79:13                      size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:82:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:83:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:110:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:113:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:114:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' read access at *arrays:128:13                     size   +16, benefit     1937.5, efficiency    121.094
    Inline 'b' write access at *arrays:131:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'b' write access at *arrays:132:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +41, benefit      250.0, efficiency      6.098
    Unroll loop at *arrays:63:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:78:9                                  size  +109, benefit    11250.0, efficiency    103.211
    Unroll loop at *arrays:109:9                                 size  +197, benefit    11250.0, efficiency     57.107
    Unroll loop at *arrays:127:9                                 size  +197, benefit    11250.0, efficiency     57.107

Pass 1: speed optimization selection (cost limit 642):
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
  * Inline compact jump table of array 'b'                       size    -3, benefit       52.5, efficiency   Infinity (-3 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' write access at line 13:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at line 12:5                                     size   +16, benefit      500.0, efficiency     31.250
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 645):
    Promote compact array 'c'                                    size   +32, benefit     2525.0, efficiency     78.906
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +125, benefit     7802.5, efficiency     62.420
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit       52.5, efficiency      3.088
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
  * Unroll loop at line 12:5                                     size    -1, benefit      500.0, efficiency   Infinity (+249 instructions)
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 396):
  * Promote compact array 'b'                                    size   -30, benefit     5110.0, efficiency   Infinity (-10 instructions)
    Promote compact array 'c'                                    size    +2, benefit     2510.0, efficiency   1255.000
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +268, benefit     7781.0, efficiency     29.034
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 406):
  * Promote compact array 'c'                                    size    +2, benefit     2510.0, efficiency   1255.000 (+2 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline compact jump table of array 'c'                       size  +268, benefit     7781.0, efficiency     29.034
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' write access at line 14:9                         size   +16, benefit        3.1, efficiency      0.194
    Inline 'c' read access at *arrays:115:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:116:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:116:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:117:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:133:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' read access at *arrays:134:17                     size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:134:17                    size   +16, benefit      968.8, efficiency     60.547
    Inline 'c' write access at *arrays:135:17                    size   +16, benefit      968.8, efficiency     60.547
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +191, benefit    11250.0, efficiency     58.901
    Unroll loop at *arrays:127:9                                 size  +191, benefit    11250.0, efficiency     58.901

Pass 1: speed optimization selection (cost limit 404):
    Inline read jump table of array 'b'                          size   +82, benefit     5355.0, efficiency     65.305
    Inline write jump table of array 'b'                         size  +150, benefit     5355.0, efficiency     35.700
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
    Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:63:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 257):
    Inline read jump table of array 'b'                          size  +218, benefit     4515.0, efficiency     20.711
  ! Inline write jump table of array 'b'                         size  +422, benefit     4515.0, efficiency     10.699
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
    Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:78:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 110):
  ! Inline read jump table of array 'b'                          size  +354, benefit     3675.0, efficiency     10.381
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' read access at *arrays:110:13                     size   +17, benefit     1312.5, efficiency     77.206 (+17 instructions)
    Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +177, benefit    11250.0, efficiency     63.559
  ! Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 93):
  ! Inline read jump table of array 'b'                          size  +337, benefit     2362.5, efficiency      7.010
    Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' read access at *arrays:128:13                     size   +17, benefit     1312.5, efficiency     77.206 (+17 instructions)
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313
  ! Unroll loop at *arrays:127:9                                 size  +177, benefit    11250.0, efficiency     63.559

Pass 1: speed optimization selection (cost limit 76):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  * Inline read jump table of array 'c'                          size   +48, benefit     2625.0, efficiency     54.688 (+48 instructions)
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:115:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:116:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:133:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' read access at *arrays:134:17                     size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +160, benefit    11250.0, efficiency     70.313
  ! Unroll loop at *arrays:127:9                                 size  +160, benefit    11250.0, efficiency     70.313

Pass 1: speed optimization selection (cost limit 28):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
    Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  * Inline 'b' write access at *arrays:113:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +279, benefit    11250.0, efficiency     40.323
  ! Unroll loop at *arrays:127:9                                 size  +279, benefit    11250.0, efficiency     40.323

Pass 1: speed optimization selection (cost limit 11):
  ! Inline read jump table of array 'b'                          size  +320, benefit     1050.0, efficiency      3.281
  ! Inline write jump table of array 'c'                         size  +218, benefit     2646.0, efficiency     12.138
  ! Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:64:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' read access at *arrays:79:13                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:67:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:68:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:82:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:83:17                     size   +17, benefit       26.3, efficiency      1.544
  ! Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at line 14:9                         size   +17, benefit        2.1, efficiency      0.124
  ! Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
  ! Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:127:9                                 size  +279, benefit    11250.0, efficiency     40.323

Pass 2: speed optimization selection (cost limit 483):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +65, benefit     2073.8, efficiency     31.904
  * Inline write jump table of array 'c'                         size   +48, benefit     2625.0, efficiency     54.688 (+48 instructions)
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:116:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:117:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:134:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'c' write access at *arrays:135:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:109:9                                 size  +399, benefit    11250.0, efficiency     28.195
    Unroll loop at *arrays:127:9                                 size  +263, benefit    11250.0, efficiency     42.776

Pass 2: speed optimization selection (cost limit 435):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +65, benefit     2073.8, efficiency     31.904
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:114:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +518, benefit    11250.0, efficiency     21.718
    Unroll loop at *arrays:127:9                                 size  +382, benefit    11250.0, efficiency     29.450

Pass 2: speed optimization selection (cost limit 418):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +48, benefit     1417.5, efficiency     29.531
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:131:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
    Unroll loop at *arrays:127:9                                 size  +382, benefit    11250.0, efficiency     29.450

Pass 2: speed optimization selection (cost limit 401):
    Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500
    Inline write jump table of array 'b'                         size   +31, benefit      761.3, efficiency     24.556
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
  * Inline 'b' write access at *arrays:132:17                    size   +17, benefit      656.3, efficiency     38.603 (+17 instructions)
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +518, benefit    11250.0, efficiency     21.718

Pass 2: speed optimization selection (cost limit 384):
  * Inline read jump table of array 'b'                          size   +14, benefit      105.0, efficiency      7.500 (+14 instructions)
    Inline write jump table of array 'b'                         size   +14, benefit      105.0, efficiency      7.500
    Inline 'b' read access at *arrays:41:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' read access at *arrays:42:9                       size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Unroll loop at *arrays:39:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 2: speed optimization selection (cost limit 370):
  * Inline write jump table of array 'b'                         size   +14, benefit      105.0, efficiency      7.500 (+14 instructions)
    Inline 'b' write access at *arrays:42:9                      size   +17, benefit       52.5, efficiency      3.088
    Inline 'b' write access at *arrays:43:9                      size   +17, benefit       52.5, efficiency      3.088
    Unroll loop at *arrays:39:5                                  size   +86, benefit      250.0, efficiency      2.907
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 2: speed optimization selection (cost limit 356):
  * Unroll loop at *arrays:39:5                                  size  +137, benefit      250.0, efficiency      1.825 (+332 instructions)
  ! Unroll loop at *arrays:109:9                                 size  +501, benefit    11250.0, efficiency     22.455
  ! Unroll loop at *arrays:127:9                                 size  +501, benefit    11250.0, efficiency     22.455

Pass 3: speed optimization selection (cost limit 444):
  ! Unroll loop at *arrays:109:9                                 size  +493, benefit    11250.0, efficiency     22.819
  ! Unroll loop at *arrays:127:9                                 size  +493, benefit    11250.0, efficiency     22.819

Pass 4: speed optimization selection (cost limit 444):
  ! Unroll loop at *arrays:109:9                                 size  +493, benefit    11250.0, efficiency     22.819
  ! Unroll loop at *arrays:127:9                                 size  +493, benefit    11250.0, efficiency     22.819

Final code before resolving virtual instructions:

    0:  set p 0
    1:  assertflush
    2:  print "xxxxx"
    3:  assertprints "xxxxx" "Array fill"
    4:  set .b*9 p
    5:  set .c*0 p
    6:  op add *tmp4 p 1
    7:  set .b*8 *tmp4
    8:  set .c*1 *tmp4
    9:  op add *tmp4 p 2
   10:  set .b*7 *tmp4
   11:  set .c*2 *tmp4
   12:  op add *tmp4 p 3
   13:  set .b*6 *tmp4
   14:  set .c*3 *tmp4
   15:  op add *tmp4 p 4
   16:  set :reverse:t *tmp4
   17:  set .c*4 *tmp4
   18:  op add *tmp4 p 5
   19:  set *tmp14 *tmp4
   20:  set .c*5 *tmp4
   21:  op add *tmp4 p 6
   22:  set .b*3 *tmp4
   23:  set .c*6 *tmp4
   24:  op add *tmp4 p 7
   25:  set .b*2 *tmp4
   26:  set .c*7 *tmp4
   27:  op add *tmp4 p 8
   28:  set .b*1 *tmp4
   29:  set .c*8 *tmp4
   30:  op add *tmp4 p 9
   31:  set .b*0 *tmp4
   32:  set .c*9 *tmp4
   33:  set .b*4 *tmp14
   34:  set .b*5 :reverse:t
   35:  assertflush
   36:  print *tmp4
   37:  print .b*1
   38:  print .b*2
   39:  print .b*3
   40:  print *tmp14
   41:  print :reverse:t
   42:  print .b*6
   43:  print .b*7
   44:  print .b*8
   45:  print p
   46:  assertprints "9876543210" "Array reverse"
        label *label12
   47:  set :bubblesort:flag false
   48:  set :bubblesort:a .b*0
   49:  op greaterThan *tmp19 .b*0 .b*1
   50:  jump *label94 equal *tmp19 false
   51:  set .b*0 .b*1
   52:  set .b*1 :bubblesort:a
   53:  set :bubblesort:flag true
   54:  jump *label98 always 0 0
        label *label94
   55:  set :bubblesort:a .b*1
   56:  jump *label98 always 0 0
        label *label98
   57:  op greaterThan *tmp19 :bubblesort:a .b*2
   58:  jump *label100 equal *tmp19 false
   59:  set .b*1 .b*2
   60:  set .b*2 :bubblesort:a
   61:  set :bubblesort:flag true
   62:  jump *label104 always 0 0
        label *label100
   63:  set :bubblesort:a .b*2
   64:  jump *label104 always 0 0
        label *label104
   65:  op greaterThan *tmp19 :bubblesort:a .b*3
   66:  jump *label106 equal *tmp19 false
   67:  set .b*2 .b*3
   68:  set .b*3 :bubblesort:a
   69:  set :bubblesort:flag true
   70:  jump *label110 always 0 0
        label *label106
   71:  set :bubblesort:a .b*3
   72:  jump *label110 always 0 0
        label *label110
   73:  op greaterThan *tmp19 :bubblesort:a .b*4
   74:  jump *label112 equal *tmp19 false
   75:  set .b*3 .b*4
   76:  set .b*4 :bubblesort:a
   77:  set :bubblesort:flag true
   78:  jump *label116 always 0 0
        label *label112
   79:  set :bubblesort:a .b*4
   80:  jump *label116 always 0 0
        label *label116
   81:  op greaterThan *tmp19 :bubblesort:a .b*5
   82:  jump *label118 equal *tmp19 false
   83:  set .b*4 .b*5
   84:  set .b*5 :bubblesort:a
   85:  set :bubblesort:flag true
   86:  jump *label122 always 0 0
        label *label118
   87:  set :bubblesort:a .b*5
   88:  jump *label122 always 0 0
        label *label122
   89:  op greaterThan *tmp19 :bubblesort:a .b*6
   90:  jump *label124 equal *tmp19 false
   91:  set .b*5 .b*6
   92:  set .b*6 :bubblesort:a
   93:  set :bubblesort:flag true
   94:  jump *label128 always 0 0
        label *label124
   95:  set :bubblesort:a .b*6
   96:  jump *label128 always 0 0
        label *label128
   97:  op greaterThan *tmp19 :bubblesort:a .b*7
   98:  jump *label130 equal *tmp19 false
   99:  set .b*6 .b*7
  100:  set .b*7 :bubblesort:a
  101:  set :bubblesort:flag true
  102:  jump *label134 always 0 0
        label *label130
  103:  set :bubblesort:a .b*7
  104:  jump *label134 always 0 0
        label *label134
  105:  op greaterThan *tmp19 :bubblesort:a .b*8
  106:  jump *label136 equal *tmp19 false
  107:  set .b*7 .b*8
  108:  set .b*8 :bubblesort:a
  109:  set :bubblesort:flag true
  110:  jump *label140 always 0 0
        label *label136
  111:  set :bubblesort:a .b*8
  112:  jump *label140 always 0 0
        label *label140
  113:  op greaterThan *tmp19 :bubblesort:a .b*9
  114:  jump *label142 equal *tmp19 false
  115:  set .b*8 .b*9
  116:  set .b*9 :bubblesort:a
  117:  set :bubblesort:flag true
        label *label142
  118:  jump *label11 equal :bubblesort:flag false
  119:  set :bubblesort:a .b*9
  120:  op lessThan *tmp32 .b*9 .b*8
  121:  jump *label149 equal *tmp32 false
  122:  set .b*9 .b*8
  123:  set .b*8 :bubblesort:a
  124:  set :bubblesort:flag true
  125:  jump *label153 always 0 0
        label *label149
  126:  set :bubblesort:a .b*8
  127:  jump *label153 always 0 0
        label *label153
  128:  op lessThan *tmp32 :bubblesort:a .b*7
  129:  jump *label155 equal *tmp32 false
  130:  set .b*8 .b*7
  131:  set .b*7 :bubblesort:a
  132:  set :bubblesort:flag true
  133:  jump *label159 always 0 0
        label *label155
  134:  set :bubblesort:a .b*7
  135:  jump *label159 always 0 0
        label *label159
  136:  op lessThan *tmp32 :bubblesort:a .b*6
  137:  jump *label161 equal *tmp32 false
  138:  set .b*7 .b*6
  139:  set .b*6 :bubblesort:a
  140:  set :bubblesort:flag true
  141:  jump *label165 always 0 0
        label *label161
  142:  set :bubblesort:a .b*6
  143:  jump *label165 always 0 0
        label *label165
  144:  op lessThan *tmp32 :bubblesort:a .b*5
  145:  jump *label167 equal *tmp32 false
  146:  set .b*6 .b*5
  147:  set .b*5 :bubblesort:a
  148:  set :bubblesort:flag true
  149:  jump *label171 always 0 0
        label *label167
  150:  set :bubblesort:a .b*5
  151:  jump *label171 always 0 0
        label *label171
  152:  op lessThan *tmp32 :bubblesort:a .b*4
  153:  jump *label173 equal *tmp32 false
  154:  set .b*5 .b*4
  155:  set .b*4 :bubblesort:a
  156:  set :bubblesort:flag true
  157:  jump *label177 always 0 0
        label *label173
  158:  set :bubblesort:a .b*4
  159:  jump *label177 always 0 0
        label *label177
  160:  op lessThan *tmp32 :bubblesort:a .b*3
  161:  jump *label179 equal *tmp32 false
  162:  set .b*4 .b*3
  163:  set .b*3 :bubblesort:a
  164:  set :bubblesort:flag true
  165:  jump *label183 always 0 0
        label *label179
  166:  set :bubblesort:a .b*3
  167:  jump *label183 always 0 0
        label *label183
  168:  op lessThan *tmp32 :bubblesort:a .b*2
  169:  jump *label185 equal *tmp32 false
  170:  set .b*3 .b*2
  171:  set .b*2 :bubblesort:a
  172:  set :bubblesort:flag true
  173:  jump *label189 always 0 0
        label *label185
  174:  set :bubblesort:a .b*2
  175:  jump *label189 always 0 0
        label *label189
  176:  op lessThan *tmp32 :bubblesort:a .b*1
  177:  jump *label191 equal *tmp32 false
  178:  set .b*2 .b*1
  179:  set .b*1 :bubblesort:a
  180:  set :bubblesort:flag true
  181:  jump *label195 always 0 0
        label *label191
  182:  set :bubblesort:a .b*1
  183:  jump *label195 always 0 0
        label *label195
  184:  op lessThan *tmp32 :bubblesort:a .b*0
  185:  jump *label197 equal *tmp32 false
  186:  set .b*1 .b*0
  187:  set .b*0 :bubblesort:a
  188:  set :bubblesort:flag true
        label *label197
  189:  jump *label12 notEqual :bubblesort:flag false
        label *label11
  190:  assertflush
  191:  print .b*0
  192:  print .b*1
  193:  print .b*2
  194:  print .b*3
  195:  print .b*4
  196:  print .b*5
  197:  print .b*6
  198:  print .b*7
  199:  print .b*8
  200:  print .b*9
  201:  assertprints "0123456789" "Array sort 1"
        label *label32
  202:  set :bubblesort.1:flag false
  203:  set :bubblesort.1:a .b*0
  204:  set :bubblesort.1:i 1
        label *label56
  205:  op mul *tmp99 :bubblesort.1:i 2
  206:  multijump *label212 *tmp99 0
        multilabel *label212
  207:  set :bubblesort.1:b .b*0
  208:  jump *label211 always 0 0
        multilabel *label213
  209:  set :bubblesort.1:b .b*1
  210:  jump *label211 always 0 0
        multilabel *label214
  211:  set :bubblesort.1:b .b*2
  212:  jump *label211 always 0 0
        multilabel *label215
  213:  set :bubblesort.1:b .b*3
  214:  jump *label211 always 0 0
        multilabel *label216
  215:  set :bubblesort.1:b .b*4
  216:  jump *label211 always 0 0
        multilabel *label217
  217:  set :bubblesort.1:b .b*5
  218:  jump *label211 always 0 0
        multilabel *label218
  219:  set :bubblesort.1:b .b*6
  220:  jump *label211 always 0 0
        multilabel *label219
  221:  set :bubblesort.1:b .b*7
  222:  jump *label211 always 0 0
        multilabel *label220
  223:  set :bubblesort.1:b .b*8
  224:  jump *label211 always 0 0
        multilabel *label221
  225:  set :bubblesort.1:b .b*9
        label *label211
  226:  jump *label40 greaterThanEq :bubblesort.1:a :bubblesort.1:b
  227:  op sub *tmp47 :bubblesort.1:i 1
  228:  op mul *tmp100 *tmp47 2
  229:  multijump *label223 *tmp100 0
        multilabel *label223
  230:  set .b*0 :bubblesort.1:b
  231:  multijump *label234 *tmp99 0
        multilabel *label224
  232:  set .b*1 :bubblesort.1:b
  233:  multijump *label234 *tmp99 0
        multilabel *label225
  234:  set .b*2 :bubblesort.1:b
  235:  multijump *label234 *tmp99 0
        multilabel *label226
  236:  set .b*3 :bubblesort.1:b
  237:  multijump *label234 *tmp99 0
        multilabel *label227
  238:  set .b*4 :bubblesort.1:b
  239:  multijump *label234 *tmp99 0
        multilabel *label228
  240:  set .b*5 :bubblesort.1:b
  241:  multijump *label234 *tmp99 0
        multilabel *label229
  242:  set .b*6 :bubblesort.1:b
  243:  multijump *label234 *tmp99 0
        multilabel *label230
  244:  set .b*7 :bubblesort.1:b
  245:  multijump *label234 *tmp99 0
        multilabel *label231
  246:  set .b*8 :bubblesort.1:b
  247:  multijump *label234 *tmp99 0
        multilabel *label232
  248:  set .b*9 :bubblesort.1:b
  249:  multijump *label234 *tmp99 0
        multilabel *label234
  250:  set .b*0 :bubblesort.1:a
  251:  multijump *label245 *tmp100 0
        multilabel *label235
  252:  set .b*1 :bubblesort.1:a
  253:  multijump *label245 *tmp100 0
        multilabel *label236
  254:  set .b*2 :bubblesort.1:a
  255:  multijump *label245 *tmp100 0
        multilabel *label237
  256:  set .b*3 :bubblesort.1:a
  257:  multijump *label245 *tmp100 0
        multilabel *label238
  258:  set .b*4 :bubblesort.1:a
  259:  multijump *label245 *tmp100 0
        multilabel *label239
  260:  set .b*5 :bubblesort.1:a
  261:  multijump *label245 *tmp100 0
        multilabel *label240
  262:  set .b*6 :bubblesort.1:a
  263:  multijump *label245 *tmp100 0
        multilabel *label241
  264:  set .b*7 :bubblesort.1:a
  265:  multijump *label245 *tmp100 0
        multilabel *label242
  266:  set .b*8 :bubblesort.1:a
  267:  multijump *label245 *tmp100 0
        multilabel *label243
  268:  set .b*9 :bubblesort.1:a
  269:  multijump *label245 *tmp100 0
        multilabel *label245
  270:  set :bubblesort.1:v .c*0
  271:  multijump *label256 *tmp99 0
        multilabel *label246
  272:  set :bubblesort.1:v .c*1
  273:  multijump *label256 *tmp99 0
        multilabel *label247
  274:  set :bubblesort.1:v .c*2
  275:  multijump *label256 *tmp99 0
        multilabel *label248
  276:  set :bubblesort.1:v .c*3
  277:  multijump *label256 *tmp99 0
        multilabel *label249
  278:  set :bubblesort.1:v .c*4
  279:  multijump *label256 *tmp99 0
        multilabel *label250
  280:  set :bubblesort.1:v .c*5
  281:  multijump *label256 *tmp99 0
        multilabel *label251
  282:  set :bubblesort.1:v .c*6
  283:  multijump *label256 *tmp99 0
        multilabel *label252
  284:  set :bubblesort.1:v .c*7
  285:  multijump *label256 *tmp99 0
        multilabel *label253
  286:  set :bubblesort.1:v .c*8
  287:  multijump *label256 *tmp99 0
        multilabel *label254
  288:  set :bubblesort.1:v .c*9
  289:  multijump *label256 *tmp99 0
        multilabel *label256
  290:  set *tmp59 .c*0
  291:  multijump *label267 *tmp100 0
        multilabel *label257
  292:  set *tmp59 .c*1
  293:  multijump *label267 *tmp100 0
        multilabel *label258
  294:  set *tmp59 .c*2
  295:  multijump *label267 *tmp100 0
        multilabel *label259
  296:  set *tmp59 .c*3
  297:  multijump *label267 *tmp100 0
        multilabel *label260
  298:  set *tmp59 .c*4
  299:  multijump *label267 *tmp100 0
        multilabel *label261
  300:  set *tmp59 .c*5
  301:  multijump *label267 *tmp100 0
        multilabel *label262
  302:  set *tmp59 .c*6
  303:  multijump *label267 *tmp100 0
        multilabel *label263
  304:  set *tmp59 .c*7
  305:  multijump *label267 *tmp100 0
        multilabel *label264
  306:  set *tmp59 .c*8
  307:  multijump *label267 *tmp100 0
        multilabel *label265
  308:  set *tmp59 .c*9
  309:  multijump *label267 *tmp100 0
        multilabel *label267
  310:  set .c*0 *tmp59
  311:  multijump *label278 *tmp99 0
        multilabel *label268
  312:  set .c*1 *tmp59
  313:  multijump *label278 *tmp99 0
        multilabel *label269
  314:  set .c*2 *tmp59
  315:  multijump *label278 *tmp99 0
        multilabel *label270
  316:  set .c*3 *tmp59
  317:  multijump *label278 *tmp99 0
        multilabel *label271
  318:  set .c*4 *tmp59
  319:  multijump *label278 *tmp99 0
        multilabel *label272
  320:  set .c*5 *tmp59
  321:  multijump *label278 *tmp99 0
        multilabel *label273
  322:  set .c*6 *tmp59
  323:  multijump *label278 *tmp99 0
        multilabel *label274
  324:  set .c*7 *tmp59
  325:  multijump *label278 *tmp99 0
        multilabel *label275
  326:  set .c*8 *tmp59
  327:  multijump *label278 *tmp99 0
        multilabel *label276
  328:  set .c*9 *tmp59
  329:  multijump *label278 *tmp99 0
        multilabel *label278
  330:  set .c*0 :bubblesort.1:v
  331:  jump *label277 always 0 0
        multilabel *label279
  332:  set .c*1 :bubblesort.1:v
  333:  jump *label277 always 0 0
        multilabel *label280
  334:  set .c*2 :bubblesort.1:v
  335:  jump *label277 always 0 0
        multilabel *label281
  336:  set .c*3 :bubblesort.1:v
  337:  jump *label277 always 0 0
        multilabel *label282
  338:  set .c*4 :bubblesort.1:v
  339:  jump *label277 always 0 0
        multilabel *label283
  340:  set .c*5 :bubblesort.1:v
  341:  jump *label277 always 0 0
        multilabel *label284
  342:  set .c*6 :bubblesort.1:v
  343:  jump *label277 always 0 0
        multilabel *label285
  344:  set .c*7 :bubblesort.1:v
  345:  jump *label277 always 0 0
        multilabel *label286
  346:  set .c*8 :bubblesort.1:v
  347:  jump *label277 always 0 0
        multilabel *label287
  348:  set .c*9 :bubblesort.1:v
        label *label277
  349:  set :bubblesort.1:flag true
  350:  jump *label41 always 0 0
        label *label40
  351:  set :bubblesort.1:a :bubblesort.1:b
        label *label41
  352:  op add :bubblesort.1:i :bubblesort.1:i 1
  353:  jump *label56 lessThan :bubblesort.1:i 10
  354:  jump *label31 equal :bubblesort.1:flag false
  355:  set :bubblesort.1:a .b*9
  356:  op sub :bubblesort.1:i.1 9 1
        label *label57
  357:  op mul *tmp106 :bubblesort.1:i.1 2
  358:  multijump *label289 *tmp106 0
        multilabel *label289
  359:  set :bubblesort.1:b.1 .b*0
  360:  jump *label288 always 0 0
        multilabel *label290
  361:  set :bubblesort.1:b.1 .b*1
  362:  jump *label288 always 0 0
        multilabel *label291
  363:  set :bubblesort.1:b.1 .b*2
  364:  jump *label288 always 0 0
        multilabel *label292
  365:  set :bubblesort.1:b.1 .b*3
  366:  jump *label288 always 0 0
        multilabel *label293
  367:  set :bubblesort.1:b.1 .b*4
  368:  jump *label288 always 0 0
        multilabel *label294
  369:  set :bubblesort.1:b.1 .b*5
  370:  jump *label288 always 0 0
        multilabel *label295
  371:  set :bubblesort.1:b.1 .b*6
  372:  jump *label288 always 0 0
        multilabel *label296
  373:  set :bubblesort.1:b.1 .b*7
  374:  jump *label288 always 0 0
        multilabel *label297
  375:  set :bubblesort.1:b.1 .b*8
  376:  jump *label288 always 0 0
        multilabel *label298
  377:  set :bubblesort.1:b.1 .b*9
        label *label288
  378:  jump *label49 lessThanEq :bubblesort.1:a :bubblesort.1:b.1
  379:  op add *tmp70 :bubblesort.1:i.1 1
  380:  op mul *tmp107 *tmp70 2
  381:  multijump *label300 *tmp107 0
        multilabel *label300
  382:  set .b*0 :bubblesort.1:b.1
  383:  multijump *label311 *tmp106 0
        multilabel *label301
  384:  set .b*1 :bubblesort.1:b.1
  385:  multijump *label311 *tmp106 0
        multilabel *label302
  386:  set .b*2 :bubblesort.1:b.1
  387:  multijump *label311 *tmp106 0
        multilabel *label303
  388:  set .b*3 :bubblesort.1:b.1
  389:  multijump *label311 *tmp106 0
        multilabel *label304
  390:  set .b*4 :bubblesort.1:b.1
  391:  multijump *label311 *tmp106 0
        multilabel *label305
  392:  set .b*5 :bubblesort.1:b.1
  393:  multijump *label311 *tmp106 0
        multilabel *label306
  394:  set .b*6 :bubblesort.1:b.1
  395:  multijump *label311 *tmp106 0
        multilabel *label307
  396:  set .b*7 :bubblesort.1:b.1
  397:  multijump *label311 *tmp106 0
        multilabel *label308
  398:  set .b*8 :bubblesort.1:b.1
  399:  multijump *label311 *tmp106 0
        multilabel *label309
  400:  set .b*9 :bubblesort.1:b.1
  401:  multijump *label311 *tmp106 0
        multilabel *label311
  402:  set .b*0 :bubblesort.1:a
  403:  multijump *label322 *tmp107 0
        multilabel *label312
  404:  set .b*1 :bubblesort.1:a
  405:  multijump *label322 *tmp107 0
        multilabel *label313
  406:  set .b*2 :bubblesort.1:a
  407:  multijump *label322 *tmp107 0
        multilabel *label314
  408:  set .b*3 :bubblesort.1:a
  409:  multijump *label322 *tmp107 0
        multilabel *label315
  410:  set .b*4 :bubblesort.1:a
  411:  multijump *label322 *tmp107 0
        multilabel *label316
  412:  set .b*5 :bubblesort.1:a
  413:  multijump *label322 *tmp107 0
        multilabel *label317
  414:  set .b*6 :bubblesort.1:a
  415:  multijump *label322 *tmp107 0
        multilabel *label318
  416:  set .b*7 :bubblesort.1:a
  417:  multijump *label322 *tmp107 0
        multilabel *label319
  418:  set .b*8 :bubblesort.1:a
  419:  multijump *label322 *tmp107 0
        multilabel *label320
  420:  set .b*9 :bubblesort.1:a
  421:  multijump *label322 *tmp107 0
        multilabel *label322
  422:  set :bubblesort.1:v.1 .c*0
  423:  multijump *label333 *tmp106 0
        multilabel *label323
  424:  set :bubblesort.1:v.1 .c*1
  425:  multijump *label333 *tmp106 0
        multilabel *label324
  426:  set :bubblesort.1:v.1 .c*2
  427:  multijump *label333 *tmp106 0
        multilabel *label325
  428:  set :bubblesort.1:v.1 .c*3
  429:  multijump *label333 *tmp106 0
        multilabel *label326
  430:  set :bubblesort.1:v.1 .c*4
  431:  multijump *label333 *tmp106 0
        multilabel *label327
  432:  set :bubblesort.1:v.1 .c*5
  433:  multijump *label333 *tmp106 0
        multilabel *label328
  434:  set :bubblesort.1:v.1 .c*6
  435:  multijump *label333 *tmp106 0
        multilabel *label329
  436:  set :bubblesort.1:v.1 .c*7
  437:  multijump *label333 *tmp106 0
        multilabel *label330
  438:  set :bubblesort.1:v.1 .c*8
  439:  multijump *label333 *tmp106 0
        multilabel *label331
  440:  set :bubblesort.1:v.1 .c*9
  441:  multijump *label333 *tmp106 0
        multilabel *label333
  442:  set *tmp82 .c*0
  443:  multijump *label344 *tmp107 0
        multilabel *label334
  444:  set *tmp82 .c*1
  445:  multijump *label344 *tmp107 0
        multilabel *label335
  446:  set *tmp82 .c*2
  447:  multijump *label344 *tmp107 0
        multilabel *label336
  448:  set *tmp82 .c*3
  449:  multijump *label344 *tmp107 0
        multilabel *label337
  450:  set *tmp82 .c*4
  451:  multijump *label344 *tmp107 0
        multilabel *label338
  452:  set *tmp82 .c*5
  453:  multijump *label344 *tmp107 0
        multilabel *label339
  454:  set *tmp82 .c*6
  455:  multijump *label344 *tmp107 0
        multilabel *label340
  456:  set *tmp82 .c*7
  457:  multijump *label344 *tmp107 0
        multilabel *label341
  458:  set *tmp82 .c*8
  459:  multijump *label344 *tmp107 0
        multilabel *label342
  460:  set *tmp82 .c*9
  461:  multijump *label344 *tmp107 0
        multilabel *label344
  462:  set .c*0 *tmp82
  463:  multijump *label355 *tmp106 0
        multilabel *label345
  464:  set .c*1 *tmp82
  465:  multijump *label355 *tmp106 0
        multilabel *label346
  466:  set .c*2 *tmp82
  467:  multijump *label355 *tmp106 0
        multilabel *label347
  468:  set .c*3 *tmp82
  469:  multijump *label355 *tmp106 0
        multilabel *label348
  470:  set .c*4 *tmp82
  471:  multijump *label355 *tmp106 0
        multilabel *label349
  472:  set .c*5 *tmp82
  473:  multijump *label355 *tmp106 0
        multilabel *label350
  474:  set .c*6 *tmp82
  475:  multijump *label355 *tmp106 0
        multilabel *label351
  476:  set .c*7 *tmp82
  477:  multijump *label355 *tmp106 0
        multilabel *label352
  478:  set .c*8 *tmp82
  479:  multijump *label355 *tmp106 0
        multilabel *label353
  480:  set .c*9 *tmp82
  481:  multijump *label355 *tmp106 0
        multilabel *label355
  482:  set .c*0 :bubblesort.1:v.1
  483:  jump *label354 always 0 0
        multilabel *label356
  484:  set .c*1 :bubblesort.1:v.1
  485:  jump *label354 always 0 0
        multilabel *label357
  486:  set .c*2 :bubblesort.1:v.1
  487:  jump *label354 always 0 0
        multilabel *label358
  488:  set .c*3 :bubblesort.1:v.1
  489:  jump *label354 always 0 0
        multilabel *label359
  490:  set .c*4 :bubblesort.1:v.1
  491:  jump *label354 always 0 0
        multilabel *label360
  492:  set .c*5 :bubblesort.1:v.1
  493:  jump *label354 always 0 0
        multilabel *label361
  494:  set .c*6 :bubblesort.1:v.1
  495:  jump *label354 always 0 0
        multilabel *label362
  496:  set .c*7 :bubblesort.1:v.1
  497:  jump *label354 always 0 0
        multilabel *label363
  498:  set .c*8 :bubblesort.1:v.1
  499:  jump *label354 always 0 0
        multilabel *label364
  500:  set .c*9 :bubblesort.1:v.1
        label *label354
  501:  set :bubblesort.1:flag true
  502:  jump *label50 always 0 0
        label *label49
  503:  set :bubblesort.1:a :bubblesort.1:b.1
        label *label50
  504:  op sub :bubblesort.1:i.1 :bubblesort.1:i.1 1
  505:  jump *label57 greaterThanEq :bubblesort.1:i.1 0
  506:  jump *label32 notEqual :bubblesort.1:flag false
        label *label31
  507:  assertflush
  508:  print .c*0
  509:  print .c*1
  510:  print .c*2
  511:  print .c*3
  512:  print .c*4
  513:  print .c*5
  514:  print .c*6
  515:  print .c*7
  516:  print .c*8
  517:  print .c*9
  518:  assertprints "9876543210" "Array sort 2"
