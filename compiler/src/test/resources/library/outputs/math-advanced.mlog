assertequals 5 5 "distance(1,1,4,5)"
assertequals 5 5 "distance(-1,-1,-4,-5)"
assertequals 2 2 "round(1.5)"
assertequals 2 2 "round(1.7)"
assertequals 2 2 "round(2.1)"
assertequals 3 3 "round(2.5)"
assertequals -3 -3 "round(-3.5)"
assertequals 0.5 0.5 "frac(3.5)"
assertequals -0.5 -0.5 "frac(-1.5)"
assertequals 0 0 "sign(0)"
assertequals 0 0 "sign(1e-7)"
assertequals 1 1 "sign(1e-5)"
assertequals -1 -1 "sign(-5)"
assertequals 0 0 "signExact(0)"
assertequals 1 1 "signExact(1e-7)"
assertequals -1 -1 "signExact(-1e-7)"
assertequals true true "isZero(0)"
assertequals false false "isZero(1e-50)"
assertequals false false "isZero(-1e-50)"
assertequals false false "isZero(0.01,0.01)"
op add :fn19:result null 0
assertequals 0 :fn19:result "nullToZero(null)"
op add :fn20:result 1 0
assertequals 1 :fn20:result "nullToZero(1)"
assertequals 0 false "boolean(0)"
assertequals 1 true "boolean(100)"
assertequals 1 true "boolean(-100)"
assertequals 1 true "boolean(-0.001)"
assertequals 0 false "boolean(0.0000001)"
op or :fn26:result 0.9 0
assertequals 0 :fn26:result "integer(0.9)"
op or :fn27:result -5.9 0
assertequals -5 :fn27:result "integer(-5.9)"
op or :fn28:result 100 0
assertequals 100 :fn28:result "integer(100)"
assertequals 1 1 "sum(1)"
assertequals 10 10 "sum(1,2,3,4)"
assertequals 1 1 "avg(1)"
assertequals 2.5 2.5 "avg(1,2,3,4)"
assertequals 4 4 "log2(16)"
assertequals 30 30 "log2(1 << 30)"
assertequals 1 1 "lerp(1, 10, 0)"
assertequals 10 10 "lerp(1, 10, 1)"
assertequals 5.5 5.5 "lerp(1, 10, 0.5)"
assertequals 1 1 "median(1)"
assertequals 3 3 "median(2,4)"
assertequals 3 3 "median(1,3,5)"
assertequals 1 1 "median(1,1,1)"
assertequals 1 1 "median(1,1,3)"
assertequals 3 3 "median(1,3,3)"
set :fn1:x1 2
set :fn1:x2 4
set :fn1:x3 6
set :fn1:x4 8
set :fn1*retaddr 56
jump 952 always 0 0
assertequals 5 :fn1*retval "median(2,4,6,8)"
set :fn1:x1 8
set :fn1:x2 6
set :fn1:x3 4
set :fn1:x4 2
set :fn1*retaddr 63
jump 952 always 0 0
assertequals 5 :fn1*retval "median(8,6,4,2)"
set :fn1:x1 4
set :fn1:x2 8
set :fn1:x3 2
set :fn1:x4 6
set :fn1*retaddr 70
jump 952 always 0 0
assertequals 5 :fn1*retval "median(4,8,2,6)"
set :fn1:x1 2
set :fn1:x2 6
set :fn1:x3 4
set :fn1:x4 8
set :fn1*retaddr 77
jump 952 always 0 0
assertequals 5 :fn1*retval "median(2,6,4,8)"
set :fn1:x1 6
set :fn1:x2 2
set :fn1:x3 8
set :fn1:x4 4
set :fn1*retaddr 84
jump 952 always 0 0
assertequals 5 :fn1*retval "median(6,2,8,4)"
set :fn2:x1 1
set :fn2:x2 2
set :fn2:x3 3
set :fn2:x4 4
set :fn2:x5 5
set :fn2*retaddr 92
jump 969 always 0 0
assertequals 3 :fn2*retval "median(1,2,3,4,5)"
set :fn2:x1 5
set :fn2:x2 4
set :fn2:x4 2
set :fn2:x5 1
set :fn2*retaddr 99
jump 969 always 0 0
assertequals 3 :fn2*retval "median(5,4,3,2,1)"
set :fn2:x1 1
set :fn2:x2 1
set :fn2:x3 1
set :fn2:x4 1
set :fn2*retaddr 106
jump 969 always 0 0
assertequals 1 :fn2*retval "median(1,1,1,1,1)"
set :fn2:x5 5
set :fn2*retaddr 110
jump 969 always 0 0
assertequals 1 :fn2*retval "median(1,1,1,1,5)"
set :fn2:x4 5
set :fn2*retaddr 114
jump 969 always 0 0
assertequals 1 :fn2*retval "median(1,1,1,5,5)"
set :fn2:x3 5
set :fn2*retaddr 118
jump 969 always 0 0
assertequals 5 :fn2*retval "median(1,1,5,5,5)"
set :fn2:x2 5
set :fn2*retaddr 122
jump 969 always 0 0
assertequals 5 :fn2*retval "median(1,5,5,5,5)"
set :fn2:x1 5
set :fn2*retaddr 126
jump 969 always 0 0
assertequals 5 :fn2*retval "median(5,5,5,5,5)"
set :fn45:bestDif 10000000000
set :fn45:best null
set :fn45:count 1
set *tmp140 132
jump 141 always 0 0
set *tmp140 134
jump 141 always 0 0
set *tmp140 136
jump 141 always 0 0
set *tmp140 138
jump 141 always 0 0
set *tmp140 140
jump 141 always 0 0
set *tmp140 150
jump 146 greaterThanEq 0 :fn45:bestDif
set :fn45:bestDif 0
set :fn45:best 1
set :fn45:count 1
set @counter *tmp140
jump 149 greaterThan 0 :fn45:bestDif
op add :fn45:best :fn45:best 1
op add :fn45:count :fn45:count 1
set @counter *tmp140
op div *tmp139 :fn45:best :fn45:count
assertequals 1 *tmp139 "median(1,1,1,1,1,1)"
set :fn48:bestDif 10000000000
set :fn48:best null
set :fn48:count 1
set *tmp162 158
set :fn48:i 1
jump 172 always 0 0
set *tmp162 161
set :fn48:i 1
jump 172 always 0 0
set *tmp162 164
set :fn48:i 1
jump 172 always 0 0
set *tmp162 167
set :fn48:i 1
jump 172 always 0 0
set *tmp162 170
set :fn48:i 1
jump 172 always 0 0
set *tmp162 222
set :fn48:i 5
set :fn49:lt 0
set :fn49:gt 0
jump 177 greaterThanEq 1 :fn48:i
set :fn49:lt 1
jump 179 always 0 0
jump 179 lessThanEq 1 :fn48:i
set :fn49:gt 1
jump 182 greaterThanEq 1 :fn48:i
op add :fn49:lt :fn49:lt 1
jump 184 always 0 0
jump 184 lessThanEq 1 :fn48:i
op add :fn49:gt :fn49:gt 1
jump 187 greaterThanEq 1 :fn48:i
op add :fn49:lt :fn49:lt 1
jump 189 always 0 0
jump 189 lessThanEq 1 :fn48:i
op add :fn49:gt :fn49:gt 1
jump 192 greaterThanEq 1 :fn48:i
op add :fn49:lt :fn49:lt 1
jump 194 always 0 0
jump 194 lessThanEq 1 :fn48:i
op add :fn49:gt :fn49:gt 1
jump 197 greaterThanEq 1 :fn48:i
op add :fn49:lt :fn49:lt 1
jump 199 always 0 0
jump 199 lessThanEq 1 :fn48:i
op add :fn49:gt :fn49:gt 1
jump 202 greaterThanEq 5 :fn48:i
op add :fn49:lt :fn49:lt 1
jump 204 always 0 0
jump 204 lessThanEq 5 :fn48:i
op add :fn49:gt :fn49:gt 1
op sub *tmp169 :fn49:gt :fn49:lt
op abs :fn49:dif *tmp169 0
set *tmp174 false
op add *tmp171 :fn49:gt :fn49:lt
jump 210 lessThan *tmp171 5
op equal *tmp174 :fn49:gt :fn49:lt
jump 213 equal *tmp174 false
set *tmp161 :fn48:i
jump 223 always 0 0
jump 218 greaterThanEq :fn49:dif :fn48:bestDif
set :fn48:bestDif :fn49:dif
set :fn48:best :fn48:i
set :fn48:count 1
set @counter *tmp162
jump 221 greaterThan :fn49:dif :fn48:bestDif
op add :fn48:best :fn48:best :fn48:i
op add :fn48:count :fn48:count 1
set @counter *tmp162
op div *tmp161 :fn48:best :fn48:count
assertequals 1 *tmp161 "median(1,1,1,1,1,5)"
set :fn51:bestDif 10000000000
set :fn51:best null
set :fn51:count 1
set *tmp184 230
set :fn51:i 1
jump 244 always 0 0
set *tmp184 233
set :fn51:i 1
jump 244 always 0 0
set *tmp184 236
set :fn51:i 1
jump 244 always 0 0
set *tmp184 239
set :fn51:i 1
jump 244 always 0 0
set *tmp184 242
set :fn51:i 5
jump 244 always 0 0
set *tmp184 287
set :fn51:i 5
set :fn52:lt 0
set :fn52:gt 0
set *tmp186 249
set :fn52:i 1
jump 263 always 0 0
set *tmp186 252
set :fn52:i 1
jump 263 always 0 0
set *tmp186 255
set :fn52:i 1
jump 263 always 0 0
set *tmp186 258
set :fn52:i 1
jump 263 always 0 0
set *tmp186 261
set :fn52:i 5
jump 263 always 0 0
set *tmp186 269
set :fn52:i 5
jump 266 greaterThanEq :fn52:i :fn51:i
op add :fn52:lt :fn52:lt 1
set @counter *tmp186
jump 268 lessThanEq :fn52:i :fn51:i
op add :fn52:gt :fn52:gt 1
set @counter *tmp186
op sub *tmp191 :fn52:gt :fn52:lt
op abs :fn52:dif *tmp191 0
set *tmp196 false
op add *tmp193 :fn52:gt :fn52:lt
jump 275 lessThan *tmp193 5
op equal *tmp196 :fn52:gt :fn52:lt
jump 278 equal *tmp196 false
set *tmp183 :fn51:i
jump 288 always 0 0
jump 283 greaterThanEq :fn52:dif :fn51:bestDif
set :fn51:bestDif :fn52:dif
set :fn51:best :fn51:i
set :fn51:count 1
set @counter *tmp184
jump 286 greaterThan :fn52:dif :fn51:bestDif
op add :fn51:best :fn51:best :fn51:i
op add :fn51:count :fn51:count 1
set @counter *tmp184
op div *tmp183 :fn51:best :fn51:count
assertequals 1 *tmp183 "median(1,1,1,1,5,5)"
set :fn54:bestDif 10000000000
set :fn54:best null
set :fn54:count 1
set *tmp206 295
set :fn54:i 1
jump 309 always 0 0
set *tmp206 298
set :fn54:i 1
jump 309 always 0 0
set *tmp206 301
set :fn54:i 1
jump 309 always 0 0
set *tmp206 304
set :fn54:i 5
jump 309 always 0 0
set *tmp206 307
set :fn54:i 5
jump 309 always 0 0
set *tmp206 352
set :fn54:i 5
set :fn55:lt 0
set :fn55:gt 0
set *tmp208 314
set :fn55:i 1
jump 328 always 0 0
set *tmp208 317
set :fn55:i 1
jump 328 always 0 0
set *tmp208 320
set :fn55:i 1
jump 328 always 0 0
set *tmp208 323
set :fn55:i 5
jump 328 always 0 0
set *tmp208 326
set :fn55:i 5
jump 328 always 0 0
set *tmp208 334
set :fn55:i 5
jump 331 greaterThanEq :fn55:i :fn54:i
op add :fn55:lt :fn55:lt 1
set @counter *tmp208
jump 333 lessThanEq :fn55:i :fn54:i
op add :fn55:gt :fn55:gt 1
set @counter *tmp208
op sub *tmp213 :fn55:gt :fn55:lt
op abs :fn55:dif *tmp213 0
set *tmp218 false
op add *tmp215 :fn55:gt :fn55:lt
jump 340 lessThan *tmp215 5
op equal *tmp218 :fn55:gt :fn55:lt
jump 343 equal *tmp218 false
set *tmp205 :fn54:i
jump 353 always 0 0
jump 348 greaterThanEq :fn55:dif :fn54:bestDif
set :fn54:bestDif :fn55:dif
set :fn54:best :fn54:i
set :fn54:count 1
set @counter *tmp206
jump 351 greaterThan :fn55:dif :fn54:bestDif
op add :fn54:best :fn54:best :fn54:i
op add :fn54:count :fn54:count 1
set @counter *tmp206
op div *tmp205 :fn54:best :fn54:count
assertequals 3 *tmp205 "median(1,1,1,5,5,5)"
set :fn57:bestDif 10000000000
set :fn57:best null
set :fn57:count 1
set *tmp228 360
set :fn57:i 1
jump 374 always 0 0
set *tmp228 363
set :fn57:i 1
jump 374 always 0 0
set *tmp228 366
set :fn57:i 5
jump 374 always 0 0
set *tmp228 369
set :fn57:i 5
jump 374 always 0 0
set *tmp228 372
set :fn57:i 5
jump 374 always 0 0
set *tmp228 417
set :fn57:i 5
set :fn58:lt 0
set :fn58:gt 0
set *tmp230 379
set :fn58:i 1
jump 393 always 0 0
set *tmp230 382
set :fn58:i 1
jump 393 always 0 0
set *tmp230 385
set :fn58:i 5
jump 393 always 0 0
set *tmp230 388
set :fn58:i 5
jump 393 always 0 0
set *tmp230 391
set :fn58:i 5
jump 393 always 0 0
set *tmp230 399
set :fn58:i 5
jump 396 greaterThanEq :fn58:i :fn57:i
op add :fn58:lt :fn58:lt 1
set @counter *tmp230
jump 398 lessThanEq :fn58:i :fn57:i
op add :fn58:gt :fn58:gt 1
set @counter *tmp230
op sub *tmp235 :fn58:gt :fn58:lt
op abs :fn58:dif *tmp235 0
set *tmp240 false
op add *tmp237 :fn58:gt :fn58:lt
jump 405 lessThan *tmp237 5
op equal *tmp240 :fn58:gt :fn58:lt
jump 408 equal *tmp240 false
set *tmp227 :fn57:i
jump 418 always 0 0
jump 413 greaterThanEq :fn58:dif :fn57:bestDif
set :fn57:bestDif :fn58:dif
set :fn57:best :fn57:i
set :fn57:count 1
set @counter *tmp228
jump 416 greaterThan :fn58:dif :fn57:bestDif
op add :fn57:best :fn57:best :fn57:i
op add :fn57:count :fn57:count 1
set @counter *tmp228
op div *tmp227 :fn57:best :fn57:count
assertequals 5 *tmp227 "median(1,1,5,5,5,5)"
set :fn60:bestDif 10000000000
set :fn60:best null
set :fn60:count 1
set *tmp250 425
set :fn60:i 1
jump 439 always 0 0
set *tmp250 428
set :fn60:i 5
jump 439 always 0 0
set *tmp250 431
set :fn60:i 5
jump 439 always 0 0
set *tmp250 434
set :fn60:i 5
jump 439 always 0 0
set *tmp250 437
set :fn60:i 5
jump 439 always 0 0
set *tmp250 482
set :fn60:i 5
set :fn61:lt 0
set :fn61:gt 0
set *tmp252 444
set :fn61:i 1
jump 458 always 0 0
set *tmp252 447
set :fn61:i 5
jump 458 always 0 0
set *tmp252 450
set :fn61:i 5
jump 458 always 0 0
set *tmp252 453
set :fn61:i 5
jump 458 always 0 0
set *tmp252 456
set :fn61:i 5
jump 458 always 0 0
set *tmp252 464
set :fn61:i 5
jump 461 greaterThanEq :fn61:i :fn60:i
op add :fn61:lt :fn61:lt 1
set @counter *tmp252
jump 463 lessThanEq :fn61:i :fn60:i
op add :fn61:gt :fn61:gt 1
set @counter *tmp252
op sub *tmp257 :fn61:gt :fn61:lt
op abs :fn61:dif *tmp257 0
set *tmp262 false
op add *tmp259 :fn61:gt :fn61:lt
jump 470 lessThan *tmp259 5
op equal *tmp262 :fn61:gt :fn61:lt
jump 473 equal *tmp262 false
set *tmp249 :fn60:i
jump 483 always 0 0
jump 478 greaterThanEq :fn61:dif :fn60:bestDif
set :fn60:bestDif :fn61:dif
set :fn60:best :fn60:i
set :fn60:count 1
set @counter *tmp250
jump 481 greaterThan :fn61:dif :fn60:bestDif
op add :fn60:best :fn60:best :fn60:i
op add :fn60:count :fn60:count 1
set @counter *tmp250
op div *tmp249 :fn60:best :fn60:count
assertequals 5 *tmp249 "median(1,5,5,5,5,5)"
set :fn63:bestDif 10000000000
set :fn63:best null
set :fn63:count 1
set *tmp272 489
jump 498 always 0 0
set *tmp272 491
jump 498 always 0 0
set *tmp272 493
jump 498 always 0 0
set *tmp272 495
jump 498 always 0 0
set *tmp272 497
jump 498 always 0 0
set *tmp272 507
jump 503 greaterThanEq 0 :fn63:bestDif
set :fn63:bestDif 0
set :fn63:best 5
set :fn63:count 1
set @counter *tmp272
jump 506 greaterThan 0 :fn63:bestDif
op add :fn63:best :fn63:best 5
op add :fn63:count :fn63:count 1
set @counter *tmp272
op div *tmp271 :fn63:best :fn63:count
assertequals 5 *tmp271 "median(5,5,5,5,5,5)"
set :fn66:bestDif 10000000000
set :fn66:best null
set :fn66:count 1
set *tmp294 515
set :fn66:i 1
jump 538 always 0 0
set *tmp294 518
set :fn66:i 2
jump 538 always 0 0
set *tmp294 521
set :fn66:i 3
jump 538 always 0 0
set *tmp294 524
set :fn66:i 4
jump 538 always 0 0
set *tmp294 527
set :fn66:i 5
jump 538 always 0 0
set *tmp294 530
set :fn66:i 6
jump 538 always 0 0
set *tmp294 533
set :fn66:i 7
jump 538 always 0 0
set *tmp294 536
set :fn66:i 8
jump 538 always 0 0
set *tmp294 603
set :fn66:i 9
set :fn67:lt 0
set :fn67:gt 0
jump 543 greaterThanEq 1 :fn66:i
set :fn67:lt 1
jump 545 always 0 0
jump 545 lessThanEq 1 :fn66:i
set :fn67:gt 1
jump 548 greaterThanEq 2 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 550 always 0 0
jump 550 lessThanEq 2 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 553 greaterThanEq 3 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 555 always 0 0
jump 555 lessThanEq 3 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 558 greaterThanEq 4 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 560 always 0 0
jump 560 lessThanEq 4 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 563 greaterThanEq 5 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 565 always 0 0
jump 565 lessThanEq 5 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 568 greaterThanEq 6 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 570 always 0 0
jump 570 lessThanEq 6 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 573 greaterThanEq 7 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 575 always 0 0
jump 575 lessThanEq 7 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 578 greaterThanEq 8 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 580 always 0 0
jump 580 lessThanEq 8 :fn66:i
op add :fn67:gt :fn67:gt 1
jump 583 greaterThanEq 9 :fn66:i
op add :fn67:lt :fn67:lt 1
jump 585 always 0 0
jump 585 lessThanEq 9 :fn66:i
op add :fn67:gt :fn67:gt 1
op sub *tmp301 :fn67:gt :fn67:lt
op abs :fn67:dif *tmp301 0
set *tmp306 false
op add *tmp303 :fn67:gt :fn67:lt
jump 591 lessThan *tmp303 8
op equal *tmp306 :fn67:gt :fn67:lt
jump 594 equal *tmp306 false
set *tmp293 :fn66:i
jump 604 always 0 0
jump 599 greaterThanEq :fn67:dif :fn66:bestDif
set :fn66:bestDif :fn67:dif
set :fn66:best :fn66:i
set :fn66:count 1
set @counter *tmp294
jump 602 greaterThan :fn67:dif :fn66:bestDif
op add :fn66:best :fn66:best :fn66:i
op add :fn66:count :fn66:count 1
set @counter *tmp294
op div *tmp293 :fn66:best :fn66:count
assertequals 5 *tmp293 "median(1,2,3,4,5,6,7,8,9)"
set :fn69:bestDif 10000000000
set :fn69:best null
set :fn69:count 1
set *tmp316 611
set :fn69:i 9
jump 634 always 0 0
set *tmp316 614
set :fn69:i 8
jump 634 always 0 0
set *tmp316 617
set :fn69:i 7
jump 634 always 0 0
set *tmp316 620
set :fn69:i 6
jump 634 always 0 0
set *tmp316 623
set :fn69:i 5
jump 634 always 0 0
set *tmp316 626
set :fn69:i 4
jump 634 always 0 0
set *tmp316 629
set :fn69:i 3
jump 634 always 0 0
set *tmp316 632
set :fn69:i 2
jump 634 always 0 0
set *tmp316 699
set :fn69:i 1
set :fn70:lt 0
set :fn70:gt 0
jump 639 greaterThanEq 9 :fn69:i
set :fn70:lt 1
jump 641 always 0 0
jump 641 lessThanEq 9 :fn69:i
set :fn70:gt 1
jump 644 greaterThanEq 8 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 646 always 0 0
jump 646 lessThanEq 8 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 649 greaterThanEq 7 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 651 always 0 0
jump 651 lessThanEq 7 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 654 greaterThanEq 6 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 656 always 0 0
jump 656 lessThanEq 6 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 659 greaterThanEq 5 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 661 always 0 0
jump 661 lessThanEq 5 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 664 greaterThanEq 4 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 666 always 0 0
jump 666 lessThanEq 4 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 669 greaterThanEq 3 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 671 always 0 0
jump 671 lessThanEq 3 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 674 greaterThanEq 2 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 676 always 0 0
jump 676 lessThanEq 2 :fn69:i
op add :fn70:gt :fn70:gt 1
jump 679 greaterThanEq 1 :fn69:i
op add :fn70:lt :fn70:lt 1
jump 681 always 0 0
jump 681 lessThanEq 1 :fn69:i
op add :fn70:gt :fn70:gt 1
op sub *tmp323 :fn70:gt :fn70:lt
op abs :fn70:dif *tmp323 0
set *tmp328 false
op add *tmp325 :fn70:gt :fn70:lt
jump 687 lessThan *tmp325 8
op equal *tmp328 :fn70:gt :fn70:lt
jump 690 equal *tmp328 false
set *tmp315 :fn69:i
jump 700 always 0 0
jump 695 greaterThanEq :fn70:dif :fn69:bestDif
set :fn69:bestDif :fn70:dif
set :fn69:best :fn69:i
set :fn69:count 1
set @counter *tmp316
jump 698 greaterThan :fn70:dif :fn69:bestDif
op add :fn69:best :fn69:best :fn69:i
op add :fn69:count :fn69:count 1
set @counter *tmp316
op div *tmp315 :fn69:best :fn69:count
assertequals 5 *tmp315 "median(9,8,7,6,5,4,3,2,1)"
set :fn72:bestDif 10000000000
set :fn72:best null
set :fn72:count 1
set *tmp338 707
set :fn72:i 1
jump 730 always 0 0
set *tmp338 710
set :fn72:i 3
jump 730 always 0 0
set *tmp338 713
set :fn72:i 5
jump 730 always 0 0
set *tmp338 716
set :fn72:i 7
jump 730 always 0 0
set *tmp338 719
set :fn72:i 9
jump 730 always 0 0
set *tmp338 722
set :fn72:i 2
jump 730 always 0 0
set *tmp338 725
set :fn72:i 4
jump 730 always 0 0
set *tmp338 728
set :fn72:i 6
jump 730 always 0 0
set *tmp338 782
set :fn72:i 8
set :fn73:lt 0
set :fn73:gt 0
set *tmp340 735
set :fn73:i 1
jump 758 always 0 0
set *tmp340 738
set :fn73:i 3
jump 758 always 0 0
set *tmp340 741
set :fn73:i 5
jump 758 always 0 0
set *tmp340 744
set :fn73:i 7
jump 758 always 0 0
set *tmp340 747
set :fn73:i 9
jump 758 always 0 0
set *tmp340 750
set :fn73:i 2
jump 758 always 0 0
set *tmp340 753
set :fn73:i 4
jump 758 always 0 0
set *tmp340 756
set :fn73:i 6
jump 758 always 0 0
set *tmp340 764
set :fn73:i 8
jump 761 greaterThanEq :fn73:i :fn72:i
op add :fn73:lt :fn73:lt 1
set @counter *tmp340
jump 763 lessThanEq :fn73:i :fn72:i
op add :fn73:gt :fn73:gt 1
set @counter *tmp340
op sub *tmp345 :fn73:gt :fn73:lt
op abs :fn73:dif *tmp345 0
set *tmp350 false
op add *tmp347 :fn73:gt :fn73:lt
jump 770 lessThan *tmp347 8
op equal *tmp350 :fn73:gt :fn73:lt
jump 773 equal *tmp350 false
set *tmp337 :fn72:i
jump 783 always 0 0
jump 778 greaterThanEq :fn73:dif :fn72:bestDif
set :fn72:bestDif :fn73:dif
set :fn72:best :fn72:i
set :fn72:count 1
set @counter *tmp338
jump 781 greaterThan :fn73:dif :fn72:bestDif
op add :fn72:best :fn72:best :fn72:i
op add :fn72:count :fn72:count 1
set @counter *tmp338
op div *tmp337 :fn72:best :fn72:count
assertequals 5 *tmp337 "median(1,3,5,7,9,2,4,6,8)"
set :fn75:bestDif 10000000000
set :fn75:best null
set :fn75:count 1
set *tmp360 790
set :fn75:i 7
jump 813 always 0 0
set *tmp360 793
set :fn75:i 4
jump 813 always 0 0
set *tmp360 796
set :fn75:i 2
jump 813 always 0 0
set *tmp360 799
set :fn75:i 8
jump 813 always 0 0
set *tmp360 802
set :fn75:i 1
jump 813 always 0 0
set *tmp360 805
set :fn75:i 5
jump 813 always 0 0
set *tmp360 808
set :fn75:i 6
jump 813 always 0 0
set *tmp360 811
set :fn75:i 9
jump 813 always 0 0
set *tmp360 865
set :fn75:i 3
set :fn76:lt 0
set :fn76:gt 0
set *tmp362 818
set :fn76:i 7
jump 841 always 0 0
set *tmp362 821
set :fn76:i 4
jump 841 always 0 0
set *tmp362 824
set :fn76:i 2
jump 841 always 0 0
set *tmp362 827
set :fn76:i 8
jump 841 always 0 0
set *tmp362 830
set :fn76:i 1
jump 841 always 0 0
set *tmp362 833
set :fn76:i 5
jump 841 always 0 0
set *tmp362 836
set :fn76:i 6
jump 841 always 0 0
set *tmp362 839
set :fn76:i 9
jump 841 always 0 0
set *tmp362 847
set :fn76:i 3
jump 844 greaterThanEq :fn76:i :fn75:i
op add :fn76:lt :fn76:lt 1
set @counter *tmp362
jump 846 lessThanEq :fn76:i :fn75:i
op add :fn76:gt :fn76:gt 1
set @counter *tmp362
op sub *tmp367 :fn76:gt :fn76:lt
op abs :fn76:dif *tmp367 0
set *tmp372 false
op add *tmp369 :fn76:gt :fn76:lt
jump 853 lessThan *tmp369 8
op equal *tmp372 :fn76:gt :fn76:lt
jump 856 equal *tmp372 false
set *tmp359 :fn75:i
jump 866 always 0 0
jump 861 greaterThanEq :fn76:dif :fn75:bestDif
set :fn75:bestDif :fn76:dif
set :fn75:best :fn75:i
set :fn75:count 1
set @counter *tmp360
jump 864 greaterThan :fn76:dif :fn75:bestDif
op add :fn75:best :fn75:best :fn75:i
op add :fn75:count :fn75:count 1
set @counter *tmp360
op div *tmp359 :fn75:best :fn75:count
assertequals 5 *tmp359 "median(7,4,2,8,1,5,6,9,3)"
set :fn78:bestDif 10000000000
set :fn78:best null
set :fn78:count 1
set *tmp382 873
set :fn78:i 1
jump 896 always 0 0
set *tmp382 876
set :fn78:i 1
jump 896 always 0 0
set *tmp382 879
set :fn78:i 1
jump 896 always 0 0
set *tmp382 882
set :fn78:i 1
jump 896 always 0 0
set *tmp382 885
set :fn78:i 9
jump 896 always 0 0
set *tmp382 888
set :fn78:i 9
jump 896 always 0 0
set *tmp382 891
set :fn78:i 9
jump 896 always 0 0
set *tmp382 894
set :fn78:i 9
jump 896 always 0 0
set *tmp382 948
set :fn78:i 5
set :fn79:lt 0
set :fn79:gt 0
set *tmp384 901
set :fn79:i 1
jump 924 always 0 0
set *tmp384 904
set :fn79:i 1
jump 924 always 0 0
set *tmp384 907
set :fn79:i 1
jump 924 always 0 0
set *tmp384 910
set :fn79:i 1
jump 924 always 0 0
set *tmp384 913
set :fn79:i 9
jump 924 always 0 0
set *tmp384 916
set :fn79:i 9
jump 924 always 0 0
set *tmp384 919
set :fn79:i 9
jump 924 always 0 0
set *tmp384 922
set :fn79:i 9
jump 924 always 0 0
set *tmp384 930
set :fn79:i 5
jump 927 greaterThanEq :fn79:i :fn78:i
op add :fn79:lt :fn79:lt 1
set @counter *tmp384
jump 929 lessThanEq :fn79:i :fn78:i
op add :fn79:gt :fn79:gt 1
set @counter *tmp384
op sub *tmp389 :fn79:gt :fn79:lt
op abs :fn79:dif *tmp389 0
set *tmp394 false
op add *tmp391 :fn79:gt :fn79:lt
jump 936 lessThan *tmp391 8
op equal *tmp394 :fn79:gt :fn79:lt
jump 939 equal *tmp394 false
set *tmp381 :fn78:i
jump 949 always 0 0
jump 944 greaterThanEq :fn79:dif :fn78:bestDif
set :fn78:bestDif :fn79:dif
set :fn78:best :fn78:i
set :fn78:count 1
set @counter *tmp382
jump 947 greaterThan :fn79:dif :fn78:bestDif
op add :fn78:best :fn78:best :fn78:i
op add :fn78:count :fn78:count 1
set @counter *tmp382
op div *tmp381 :fn78:best :fn78:count
assertequals 5 *tmp381 "median(1,1,1,1,9,9,9,9,5)"
stop
end
op max :fn1:y2 :fn1:x1 :fn1:x2
op min :fn1:y3 :fn1:x3 :fn1:x4
jump 958 greaterThan :fn1:y2 :fn1:y3
op add *tmp410 :fn1:y2 :fn1:y3
op div :fn1*retval *tmp410 2
set @counter :fn1*retaddr
op min :fn1:y1 :fn1:x1 :fn1:x2
op max :fn1:y4 :fn1:x3 :fn1:x4
jump 964 lessThan :fn1:y1 :fn1:y4
op add *tmp416 :fn1:y1 :fn1:y4
op div :fn1*retval *tmp416 2
set @counter :fn1*retaddr
op max *tmp418 :fn1:y1 :fn1:y3
op min *tmp419 :fn1:y2 :fn1:y4
op add *tmp420 *tmp418 *tmp419
op div :fn1*retval *tmp420 2
set @counter :fn1*retaddr
op min :fn2:y1 :fn2:x1 :fn2:x2
op max :fn2:y2 :fn2:x1 :fn2:x2
op min :fn2:y4 :fn2:x4 :fn2:x5
op max :fn2:y5 :fn2:x4 :fn2:x5
jump 978 greaterThanEq :fn2:y4 :fn2:y1
set :fn2:y4 :fn2:y1
set :fn81:t :fn2:y2
set :fn2:y2 :fn2:y5
set :fn2:y5 :fn81:t
jump 983 lessThanEq :fn2:x3 :fn2:y2
op min :fn2*retval :fn2:y2 :fn2:y5
jump 986 greaterThanEq :fn2:y2 :fn2:y4
op min :fn2*retval :fn2:x3 :fn2:y4
set @counter :fn2*retaddr
op min :fn2*retval :fn2:y2 :fn2:y4
jump 986 lessThanEq :fn2:x3 :fn2:y4
op min :fn2*retval :fn2:x3 :fn2:y5
set @counter :fn2*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"
