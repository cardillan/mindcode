   390 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination (2 iterations).
    17 instructions eliminated by Dead Code Elimination (2 passes, 5 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
     9 instructions eliminated by Jump Optimization (2 passes, 7 iterations).
    19 instructions eliminated by Single Step Elimination (4 passes, 11 iterations).
  1747 instructions eliminated by Expression Optimization (3 passes, 5 iterations).
   189 instructions eliminated by Data Flow Optimization (11 passes, 43 iterations).
     7 instructions eliminated by Loop Optimization (5 iterations).
     7 loops improved by Loop Optimization.
  2000 instructions added by Loop Unrolling (19 iterations).
     7 loops unrolled by Loop Unrolling.
     9 jump tables inlined by Array Optimization.
     2 instructions eliminated by Jump Straightening (7 iterations).
    18 instructions updated by Jump Threading.
    18 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   381 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 692):
    Unroll loop at *arrays:20:5                                  size    -2, benefit      250.0, efficiency   Infinity
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
  * Inline write jump table of array 'a'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'a' write access at *arrays:21:9                      size    +7, benefit       50.0, efficiency      7.143
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 695):
  * Unroll loop at *arrays:20:5                                  size    -9, benefit      250.0, efficiency   Infinity (+41 instructions)
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
    Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 654):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223
  * Unroll loop at *arrays:69:9                                  size   +95, benefit    11250.0, efficiency    118.421 (+139 instructions)
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size   +82, benefit     5100.0, efficiency     62.195
    Inline write jump table of array 'b'                         size  +167, benefit     5150.0, efficiency     30.838
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 515):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:54:9                                  size  +103, benefit    11250.0, efficiency    109.223 (+147 instructions)
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +218, benefit     4300.0, efficiency     19.725
    Inline write jump table of array 'b'                         size  +439, benefit     4350.0, efficiency      9.909
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 368):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +177, benefit    11250.0, efficiency     63.559
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +354, benefit     3500.0, efficiency      9.887
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:98:13                      size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 351):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
    Unroll loop at *arrays:115:9                                 size  +169, benefit    11250.0, efficiency     66.568
    Inline read jump table of array 'b'                          size  +337, benefit     2250.0, efficiency      6.677
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  * Inline 'b' read access at *arrays:116:13                     size   +17, benefit     1250.0, efficiency     73.529 (+17 instructions)
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 334):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
  * Unroll loop at *arrays:115:9                                 size  +152, benefit    11250.0, efficiency     74.013 (+403 instructions)
    Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline write jump table of array 'b'                         size  +711, benefit     3550.0, efficiency      4.993
    Inline read jump table of array 'c'                          size   +48, benefit     2500.0, efficiency     52.083
    Inline write jump table of array 'c'                         size   +65, benefit     2550.0, efficiency     39.231
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:119:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:120:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:121:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:122:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:122:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:123:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Unroll loop at *arrays:97:9                                  size  +160, benefit    11250.0, efficiency     70.313
  ! Inline read jump table of array 'b'                          size  +320, benefit     1000.0, efficiency      3.125
  ! Inline read jump table of array 'c'                          size  +320, benefit     1700.0, efficiency      5.313
  ! Inline write jump table of array 'c'                         size  +337, benefit     1750.0, efficiency      5.193
  ! Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:55:13                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:70:21                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:58:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:59:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:73:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:74:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:119:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:120:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:121:17                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' read access at *arrays:122:33                     size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:122:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:123:17                    size   +17, benefit       25.0, efficiency      1.471

Pass 2: speed optimization selection (cost limit 544):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Unroll loop at *arrays:97:9                                  size  +144, benefit    11250.0, efficiency     78.125
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
  * Inline read jump table of array 'c'                          size   +14, benefit     1250.0, efficiency     89.286 (+14 instructions)
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:103:17                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' read access at *arrays:104:33                     size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 530):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Unroll loop at *arrays:97:9                                  size  +263, benefit    11250.0, efficiency     42.776 (+667 instructions)
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +65, benefit     1400.0, efficiency     21.538
    Inline write jump table of array 'c'                         size   +31, benefit     1300.0, efficiency     41.935
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:101:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'b' write access at *arrays:102:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at *arrays:104:17                    size   +17, benefit      625.0, efficiency     36.765
    Inline 'c' write access at *arrays:105:17                    size   +17, benefit      625.0, efficiency     36.765

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
  ! Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  ! Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
  ! Inline write jump table of array 'b'                         size  +337, benefit      600.0, efficiency      1.780
  ! Inline write jump table of array 'c'                         size  +303, benefit      500.0, efficiency      1.650
  ! Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:101:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'b' write access at *arrays:102:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:104:17                    size   +17, benefit       25.0, efficiency      1.471
  ! Inline 'c' write access at *arrays:105:17                    size   +17, benefit       25.0, efficiency      1.471

Pass 3: speed optimization selection (cost limit 538):
    Unroll loop at line 12:5                                     size   +18, benefit      500.0, efficiency     27.778
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
  * Inline write jump table of array 'c'                         size    -3, benefit       50.0, efficiency   Infinity (-3 instructions)
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'c' write access at line 14:9                         size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 541):
  * Unroll loop at line 12:5                                     size    +1, benefit      500.0, efficiency    500.000 (+231 instructions)
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
    Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143
    Inline write jump table of array 'b'                         size   +31, benefit      150.0, efficiency      4.839
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 310):
    Unroll loop at *arrays:33:5                                  size   +35, benefit      250.0, efficiency      7.143
  * Inline read jump table of array 'b'                          size   +14, benefit      100.0, efficiency      7.143 (+14 instructions)
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' read access at *arrays:35:9                       size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' read access at *arrays:36:20                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 296):
    Unroll loop at *arrays:33:5                                  size   +86, benefit      250.0, efficiency      2.907
    Inline write jump table of array 'b'                         size  +184, benefit      120.0, efficiency      0.652
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  * Inline 'b' write access at *arrays:36:9                      size   +17, benefit       50.0, efficiency      2.941 (+17 instructions)
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 279):
  * Unroll loop at *arrays:33:5                                  size   +69, benefit      250.0, efficiency      3.623 (+264 instructions)
    Inline write jump table of array 'b'                         size  +167, benefit       70.0, efficiency      0.419
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
    Inline 'b' write access at *arrays:37:9                      size   +17, benefit       50.0, efficiency      2.941

Pass 3: speed optimization selection (cost limit 15):
  ! Inline write jump table of array 'b'                         size  +235, benefit       30.0, efficiency      0.128
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at line 13:9                         size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118
  ! Inline 'b' write access at *arrays:37:9                      size   +17, benefit        2.0, efficiency      0.118

Final code before resolving virtual instructions:

    0:  set p 0
    1:  assertflush
    2:  print "xxxxx"
    3:  assertprints "xxxxx" "Array fill"
    4:  set .b*0 p
    5:  set .c*0 p
    6:  op add *tmp4 p 1
    7:  set .b*1 *tmp4
    8:  set .c*1 *tmp4
    9:  op add *tmp4 p 2
   10:  set .b*2 *tmp4
   11:  set .c*2 *tmp4
   12:  op add *tmp4 p 3
   13:  set .b*3 *tmp4
   14:  set .c*3 *tmp4
   15:  op add *tmp4 p 4
   16:  set .b*4 *tmp4
   17:  set .c*4 *tmp4
   18:  op add *tmp4 p 5
   19:  set .b*5 *tmp4
   20:  set .c*5 *tmp4
   21:  op add *tmp4 p 6
   22:  set .b*6 *tmp4
   23:  set .c*6 *tmp4
   24:  op add *tmp4 p 7
   25:  set .b*7 *tmp4
   26:  set .c*7 *tmp4
   27:  op add *tmp4 p 8
   28:  set .b*8 *tmp4
   29:  set .c*8 *tmp4
   30:  op add *tmp4 p 9
   31:  set .b*9 *tmp4
   32:  set .c*9 *tmp4
   33:  set .b*0 *tmp4
   34:  set .b*9 p
   35:  set :reverse:t .b*1
   36:  set .b*1 .b*8
   37:  set .b*8 :reverse:t
   38:  set :reverse:t .b*2
   39:  set .b*2 .b*7
   40:  set .b*7 :reverse:t
   41:  set :reverse:t .b*3
   42:  set .b*3 .b*6
   43:  set .b*6 :reverse:t
   44:  set :reverse:t .b*4
   45:  set *tmp14 .b*5
   46:  set .b*4 .b*5
   47:  set .b*5 :reverse:t
   48:  assertflush
   49:  print *tmp4
   50:  print .b*1
   51:  print .b*2
   52:  print .b*3
   53:  print *tmp14
   54:  print :reverse:t
   55:  print .b*6
   56:  print .b*7
   57:  print .b*8
   58:  print p
   59:  assertprints "9876543210" "Array reverse"
        label *label12
   60:  set :bubblesort:flag true
   61:  set :bubblesort:a .b*0
   62:  op greaterThan *tmp19 .b*0 .b*1
   63:  jump *label128 equal *tmp19 false
   64:  set .b*0 .b*1
   65:  set .b*1 :bubblesort:a
   66:  set :bubblesort:flag false
   67:  jump *label132 always 0 0
        label *label128
   68:  set :bubblesort:a .b*1
   69:  jump *label132 always 0 0
        label *label132
   70:  op greaterThan *tmp19 :bubblesort:a .b*2
   71:  jump *label134 equal *tmp19 false
   72:  set .b*1 .b*2
   73:  set .b*2 :bubblesort:a
   74:  set :bubblesort:flag false
   75:  jump *label138 always 0 0
        label *label134
   76:  set :bubblesort:a .b*2
   77:  jump *label138 always 0 0
        label *label138
   78:  op greaterThan *tmp19 :bubblesort:a .b*3
   79:  jump *label140 equal *tmp19 false
   80:  set .b*2 .b*3
   81:  set .b*3 :bubblesort:a
   82:  set :bubblesort:flag false
   83:  jump *label144 always 0 0
        label *label140
   84:  set :bubblesort:a .b*3
   85:  jump *label144 always 0 0
        label *label144
   86:  op greaterThan *tmp19 :bubblesort:a .b*4
   87:  jump *label146 equal *tmp19 false
   88:  set .b*3 .b*4
   89:  set .b*4 :bubblesort:a
   90:  set :bubblesort:flag false
   91:  jump *label150 always 0 0
        label *label146
   92:  set :bubblesort:a .b*4
   93:  jump *label150 always 0 0
        label *label150
   94:  op greaterThan *tmp19 :bubblesort:a .b*5
   95:  jump *label152 equal *tmp19 false
   96:  set .b*4 .b*5
   97:  set .b*5 :bubblesort:a
   98:  set :bubblesort:flag false
   99:  jump *label156 always 0 0
        label *label152
  100:  set :bubblesort:a .b*5
  101:  jump *label156 always 0 0
        label *label156
  102:  op greaterThan *tmp19 :bubblesort:a .b*6
  103:  jump *label158 equal *tmp19 false
  104:  set .b*5 .b*6
  105:  set .b*6 :bubblesort:a
  106:  set :bubblesort:flag false
  107:  jump *label162 always 0 0
        label *label158
  108:  set :bubblesort:a .b*6
  109:  jump *label162 always 0 0
        label *label162
  110:  op greaterThan *tmp19 :bubblesort:a .b*7
  111:  jump *label164 equal *tmp19 false
  112:  set .b*6 .b*7
  113:  set .b*7 :bubblesort:a
  114:  set :bubblesort:flag false
  115:  jump *label168 always 0 0
        label *label164
  116:  set :bubblesort:a .b*7
  117:  jump *label168 always 0 0
        label *label168
  118:  op greaterThan *tmp19 :bubblesort:a .b*8
  119:  jump *label170 equal *tmp19 false
  120:  set .b*7 .b*8
  121:  set .b*8 :bubblesort:a
  122:  set :bubblesort:flag false
  123:  jump *label174 always 0 0
        label *label170
  124:  set :bubblesort:a .b*8
  125:  jump *label174 always 0 0
        label *label174
  126:  op greaterThan *tmp19 :bubblesort:a .b*9
  127:  jump *label176 equal *tmp19 false
  128:  set .b*8 .b*9
  129:  set .b*9 :bubblesort:a
  130:  set :bubblesort:flag false
        label *label176
  131:  jump *label11 notEqual :bubblesort:flag false
  132:  set :bubblesort:a .b*9
  133:  op lessThan *tmp31 .b*9 .b*8
  134:  jump *label73 equal *tmp31 false
  135:  set .b*9 .b*8
  136:  set .b*8 :bubblesort:a
  137:  jump *label77 always 0 0
        label *label73
  138:  set :bubblesort:a .b*8
  139:  jump *label77 always 0 0
        label *label77
  140:  op lessThan *tmp31 :bubblesort:a .b*7
  141:  jump *label79 equal *tmp31 false
  142:  set .b*8 .b*7
  143:  set .b*7 :bubblesort:a
  144:  jump *label83 always 0 0
        label *label79
  145:  set :bubblesort:a .b*7
  146:  jump *label83 always 0 0
        label *label83
  147:  op lessThan *tmp31 :bubblesort:a .b*6
  148:  jump *label85 equal *tmp31 false
  149:  set .b*7 .b*6
  150:  set .b*6 :bubblesort:a
  151:  jump *label89 always 0 0
        label *label85
  152:  set :bubblesort:a .b*6
  153:  jump *label89 always 0 0
        label *label89
  154:  op lessThan *tmp31 :bubblesort:a .b*5
  155:  jump *label91 equal *tmp31 false
  156:  set .b*6 .b*5
  157:  set .b*5 :bubblesort:a
  158:  jump *label95 always 0 0
        label *label91
  159:  set :bubblesort:a .b*5
  160:  jump *label95 always 0 0
        label *label95
  161:  op lessThan *tmp31 :bubblesort:a .b*4
  162:  jump *label97 equal *tmp31 false
  163:  set .b*5 .b*4
  164:  set .b*4 :bubblesort:a
  165:  jump *label101 always 0 0
        label *label97
  166:  set :bubblesort:a .b*4
  167:  jump *label101 always 0 0
        label *label101
  168:  op lessThan *tmp31 :bubblesort:a .b*3
  169:  jump *label103 equal *tmp31 false
  170:  set .b*4 .b*3
  171:  set .b*3 :bubblesort:a
  172:  jump *label107 always 0 0
        label *label103
  173:  set :bubblesort:a .b*3
  174:  jump *label107 always 0 0
        label *label107
  175:  op lessThan *tmp31 :bubblesort:a .b*2
  176:  jump *label109 equal *tmp31 false
  177:  set .b*3 .b*2
  178:  set .b*2 :bubblesort:a
  179:  jump *label113 always 0 0
        label *label109
  180:  set :bubblesort:a .b*2
  181:  jump *label113 always 0 0
        label *label113
  182:  op lessThan *tmp31 :bubblesort:a .b*1
  183:  jump *label115 equal *tmp31 false
  184:  set .b*2 .b*1
  185:  set .b*1 :bubblesort:a
  186:  jump *label119 always 0 0
        label *label115
  187:  set :bubblesort:a .b*1
  188:  jump *label119 always 0 0
        label *label119
  189:  op lessThan *tmp31 :bubblesort:a .b*0
  190:  jump *label12 equal *tmp31 false
  191:  set .b*1 .b*0
  192:  set .b*0 :bubblesort:a
  193:  jump *label12 always 0 0
        label *label11
  194:  assertflush
  195:  print .b*0
  196:  print .b*1
  197:  print .b*2
  198:  print .b*3
  199:  print .b*4
  200:  print .b*5
  201:  print .b*6
  202:  print .b*7
  203:  print .b*8
  204:  print .b*9
  205:  assertprints "0123456789" "Array sort 1"
        label *label32
  206:  set :bubblesort.1:flag true
  207:  set :bubblesort.1:a .b*0
  208:  jump *label238 greaterThanEq .b*0 .b*1
  209:  set .b*0 .b*1
  210:  set .b*1 :bubblesort.1:a
  211:  set :bubblesort.1:v .c*0
  212:  set .c*0 .c*1
  213:  set .c*1 :bubblesort.1:v
  214:  set :bubblesort.1:flag false
  215:  jump *label239 always 0 0
        label *label238
  216:  set :bubblesort.1:a .b*1
        label *label239
  217:  jump *label244 greaterThanEq :bubblesort.1:a .b*2
  218:  set .b*1 .b*2
  219:  set .b*2 :bubblesort.1:a
  220:  set :bubblesort.1:v .c*1
  221:  set .c*1 .c*2
  222:  set .c*2 :bubblesort.1:v
  223:  set :bubblesort.1:flag false
  224:  jump *label245 always 0 0
        label *label244
  225:  set :bubblesort.1:a .b*2
        label *label245
  226:  jump *label250 greaterThanEq :bubblesort.1:a .b*3
  227:  set .b*2 .b*3
  228:  set .b*3 :bubblesort.1:a
  229:  set :bubblesort.1:v .c*2
  230:  set .c*2 .c*3
  231:  set .c*3 :bubblesort.1:v
  232:  set :bubblesort.1:flag false
  233:  jump *label251 always 0 0
        label *label250
  234:  set :bubblesort.1:a .b*3
        label *label251
  235:  jump *label256 greaterThanEq :bubblesort.1:a .b*4
  236:  set .b*3 .b*4
  237:  set .b*4 :bubblesort.1:a
  238:  set :bubblesort.1:v .c*3
  239:  set .c*3 .c*4
  240:  set .c*4 :bubblesort.1:v
  241:  set :bubblesort.1:flag false
  242:  jump *label257 always 0 0
        label *label256
  243:  set :bubblesort.1:a .b*4
        label *label257
  244:  jump *label262 greaterThanEq :bubblesort.1:a .b*5
  245:  set .b*4 .b*5
  246:  set .b*5 :bubblesort.1:a
  247:  set :bubblesort.1:v .c*4
  248:  set .c*4 .c*5
  249:  set .c*5 :bubblesort.1:v
  250:  set :bubblesort.1:flag false
  251:  jump *label263 always 0 0
        label *label262
  252:  set :bubblesort.1:a .b*5
        label *label263
  253:  jump *label268 greaterThanEq :bubblesort.1:a .b*6
  254:  set .b*5 .b*6
  255:  set .b*6 :bubblesort.1:a
  256:  set :bubblesort.1:v .c*5
  257:  set .c*5 .c*6
  258:  set .c*6 :bubblesort.1:v
  259:  set :bubblesort.1:flag false
  260:  jump *label269 always 0 0
        label *label268
  261:  set :bubblesort.1:a .b*6
        label *label269
  262:  jump *label274 greaterThanEq :bubblesort.1:a .b*7
  263:  set .b*6 .b*7
  264:  set .b*7 :bubblesort.1:a
  265:  set :bubblesort.1:v .c*6
  266:  set .c*6 .c*7
  267:  set .c*7 :bubblesort.1:v
  268:  set :bubblesort.1:flag false
  269:  jump *label275 always 0 0
        label *label274
  270:  set :bubblesort.1:a .b*7
        label *label275
  271:  jump *label280 greaterThanEq :bubblesort.1:a .b*8
  272:  set .b*7 .b*8
  273:  set .b*8 :bubblesort.1:a
  274:  set :bubblesort.1:v .c*7
  275:  set .c*7 .c*8
  276:  set .c*8 :bubblesort.1:v
  277:  set :bubblesort.1:flag false
  278:  jump *label281 always 0 0
        label *label280
  279:  set :bubblesort.1:a .b*8
        label *label281
  280:  jump *label286 greaterThanEq :bubblesort.1:a .b*9
  281:  set .b*8 .b*9
  282:  set .b*9 :bubblesort.1:a
  283:  set :bubblesort.1:v .c*8
  284:  set .c*8 .c*9
  285:  set .c*9 :bubblesort.1:v
  286:  set :bubblesort.1:flag false
        label *label286
  287:  jump *label31 notEqual :bubblesort.1:flag false
  288:  set :bubblesort.1:a .b*9
  289:  op greaterThan *tmp64 .b*9 .b*8
  290:  jump *label183 equal *tmp64 false
  291:  set .b*9 .b*8
  292:  set .b*8 :bubblesort.1:a
  293:  set :bubblesort.1:v.1 .c*9
  294:  set .c*9 .c*8
  295:  set .c*8 :bubblesort.1:v.1
  296:  jump *label184 always 0 0
        label *label183
  297:  set :bubblesort.1:a .b*8
        label *label184
  298:  op greaterThan *tmp64 :bubblesort.1:a .b*7
  299:  jump *label189 equal *tmp64 false
  300:  set .b*8 .b*7
  301:  set .b*7 :bubblesort.1:a
  302:  set :bubblesort.1:v.1 .c*8
  303:  set .c*8 .c*7
  304:  set .c*7 :bubblesort.1:v.1
  305:  jump *label190 always 0 0
        label *label189
  306:  set :bubblesort.1:a .b*7
        label *label190
  307:  op greaterThan *tmp64 :bubblesort.1:a .b*6
  308:  jump *label195 equal *tmp64 false
  309:  set .b*7 .b*6
  310:  set .b*6 :bubblesort.1:a
  311:  set :bubblesort.1:v.1 .c*7
  312:  set .c*7 .c*6
  313:  set .c*6 :bubblesort.1:v.1
  314:  jump *label196 always 0 0
        label *label195
  315:  set :bubblesort.1:a .b*6
        label *label196
  316:  op greaterThan *tmp64 :bubblesort.1:a .b*5
  317:  jump *label201 equal *tmp64 false
  318:  set .b*6 .b*5
  319:  set .b*5 :bubblesort.1:a
  320:  set :bubblesort.1:v.1 .c*6
  321:  set .c*6 .c*5
  322:  set .c*5 :bubblesort.1:v.1
  323:  jump *label202 always 0 0
        label *label201
  324:  set :bubblesort.1:a .b*5
        label *label202
  325:  op greaterThan *tmp64 :bubblesort.1:a .b*4
  326:  jump *label207 equal *tmp64 false
  327:  set .b*5 .b*4
  328:  set .b*4 :bubblesort.1:a
  329:  set :bubblesort.1:v.1 .c*5
  330:  set .c*5 .c*4
  331:  set .c*4 :bubblesort.1:v.1
  332:  jump *label208 always 0 0
        label *label207
  333:  set :bubblesort.1:a .b*4
        label *label208
  334:  op greaterThan *tmp64 :bubblesort.1:a .b*3
  335:  jump *label213 equal *tmp64 false
  336:  set .b*4 .b*3
  337:  set .b*3 :bubblesort.1:a
  338:  set :bubblesort.1:v.1 .c*4
  339:  set .c*4 .c*3
  340:  set .c*3 :bubblesort.1:v.1
  341:  jump *label214 always 0 0
        label *label213
  342:  set :bubblesort.1:a .b*3
        label *label214
  343:  op greaterThan *tmp64 :bubblesort.1:a .b*2
  344:  jump *label219 equal *tmp64 false
  345:  set .b*3 .b*2
  346:  set .b*2 :bubblesort.1:a
  347:  set :bubblesort.1:v.1 .c*3
  348:  set .c*3 .c*2
  349:  set .c*2 :bubblesort.1:v.1
  350:  jump *label220 always 0 0
        label *label219
  351:  set :bubblesort.1:a .b*2
        label *label220
  352:  op greaterThan *tmp64 :bubblesort.1:a .b*1
  353:  jump *label225 equal *tmp64 false
  354:  set .b*2 .b*1
  355:  set .b*1 :bubblesort.1:a
  356:  set :bubblesort.1:v.1 .c*2
  357:  set .c*2 .c*1
  358:  set .c*1 :bubblesort.1:v.1
  359:  jump *label226 always 0 0
        label *label225
  360:  set :bubblesort.1:a .b*1
        label *label226
  361:  op greaterThan *tmp64 :bubblesort.1:a .b*0
  362:  jump *label32 equal *tmp64 false
  363:  set .b*1 .b*0
  364:  set .b*0 :bubblesort.1:a
  365:  set :bubblesort.1:v.1 .c*1
  366:  set .c*1 .c*0
  367:  set .c*0 :bubblesort.1:v.1
  368:  jump *label32 always 0 0
        label *label31
  369:  assertflush
  370:  print .c*0
  371:  print .c*1
  372:  print .c*2
  373:  print .c*3
  374:  print .c*4
  375:  print .c*5
  376:  print .c*6
  377:  print .c*7
  378:  print .c*8
  379:  print .c*9
  380:  assertprints "9876543210" "Array sort 2"
