   130 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    44 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
   166 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 78):
  o Convert case at line 11:5 (segments: 34)                     size    -6, benefit     1183.3, efficiency   Infinity
  o Convert case at line 11:5 (segments: 5)                      size   +11, benefit     1183.8, efficiency    107.622
  * Convert case at line 11:5 (segments: 4)                      size   +44, benefit     1192.4, efficiency     27.100 (+44 instructions)
  ! Convert case at line 11:5 (segments: 1)                      size  +209, benefit     1209.9, efficiency      5.789

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 lookup block *tmp0 :i
     6 set :block *tmp0
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 strictEqual *tmp3 null
+    8 jump *label6 strictEqual :identifyBlock:block null
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000001
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @graphite-press
+   14 jump *label8 equal :identifyBlock:block @graphite-press
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000002
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @copper-wall
+   20 jump *label10 equal :identifyBlock:block @copper-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000004
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @copper-wall-large
+   26 jump *label12 equal :identifyBlock:block @copper-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000008
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall
+   32 jump *label14 equal :identifyBlock:block @titanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000010
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @titanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @titanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000020
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall
+   44 jump *label18 equal :identifyBlock:block @plastanium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000040
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @plastanium-wall-large
+   50 jump *label20 equal :identifyBlock:block @plastanium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000080
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall
+   56 jump *label22 equal :identifyBlock:block @thorium-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000100
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @thorium-wall-large
+   62 jump *label24 equal :identifyBlock:block @thorium-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000200
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @phase-wall
+   68 jump *label26 equal :identifyBlock:block @phase-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00000400
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @phase-wall-large
+   74 jump *label28 equal :identifyBlock:block @phase-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00000800
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @surge-wall
+   80 jump *label30 equal :identifyBlock:block @surge-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00001000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @surge-wall-large
+   86 jump *label32 equal :identifyBlock:block @surge-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00002000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall
+   92 jump *label34 equal :identifyBlock:block @scrap-wall
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00004000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-large
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-large
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00008000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-huge
+  104 jump *label38 equal :identifyBlock:block @scrap-wall-huge
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00010000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @scrap-wall-gigantic
+  110 jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00020000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall
+  116 jump *label42 equal :identifyBlock:block @tungsten-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00040000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @tungsten-wall-large
+  122 jump *label44 equal :identifyBlock:block @tungsten-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00080000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall
+  128 jump *label46 equal :identifyBlock:block @beryllium-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00100000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @beryllium-wall-large
+  134 jump *label48 equal :identifyBlock:block @beryllium-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00200000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall
+  140 jump *label50 equal :identifyBlock:block @carbide-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x00400000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @carbide-wall-large
+  146 jump *label52 equal :identifyBlock:block @carbide-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x00800000
   150 jump *label4 always
   151 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall
+  152 jump *label54 equal :identifyBlock:block @reinforced-surge-wall
   153 jump *label53 always
   154 label *label54
   155 set *tmp2 0x01000000
   156 jump *label4 always
   157 label *label53
-    * jump *label56 equal *tmp3 @reinforced-surge-wall-large
+  158 jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
   159 jump *label55 always
   160 label *label56
   161 set *tmp2 0x02000000
   162 jump *label4 always
   163 label *label55
-    * jump *label58 equal *tmp3 @tile-logic-display
+  164 jump *label58 equal :identifyBlock:block @tile-logic-display
   165 jump *label57 always
   166 label *label58
   167 set *tmp2 0x04000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   175 op and *tmp4 :total :bit
   176 jump *label59 equal *tmp4 false
   177 op or :total :total 0x800000000
-    * set *tmp5 :total
   178 jump *label60 always
   179 label *label59
   180 op or :total :total :bit
-    * set *tmp5 :total
   181 label *label60
   182 label *label1
   183 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     2 set :i -1
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    5 lookup block :block :i
     6 set :identifyBlock:block :block
     7 jump *label6 strictEqual :identifyBlock:block null
     8 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
     6 set :identifyBlock:block :block
-    * jump *label6 strictEqual :identifyBlock:block null
+    7 jump *label6 strictEqual :block null
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000001
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @graphite-press
+   13 jump *label8 equal :block @graphite-press
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall
+   19 jump *label10 equal :block @copper-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000004
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @copper-wall-large
+   25 jump *label12 equal :block @copper-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000008
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall
+   31 jump *label14 equal :block @titanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000010
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @titanium-wall-large
+   37 jump *label16 equal :block @titanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000020
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall
+   43 jump *label18 equal :block @plastanium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000040
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @plastanium-wall-large
+   49 jump *label20 equal :block @plastanium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000080
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall
+   55 jump *label22 equal :block @thorium-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000100
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @thorium-wall-large
+   61 jump *label24 equal :block @thorium-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000200
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall
+   67 jump *label26 equal :block @phase-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000400
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @phase-wall-large
+   73 jump *label28 equal :block @phase-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00000800
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall
+   79 jump *label30 equal :block @surge-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00001000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @surge-wall-large
+   85 jump *label32 equal :block @surge-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00002000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall
+   91 jump *label34 equal :block @scrap-wall
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00004000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-large
+   97 jump *label36 equal :block @scrap-wall-large
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00008000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-huge
+  103 jump *label38 equal :block @scrap-wall-huge
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00010000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
+  109 jump *label40 equal :block @scrap-wall-gigantic
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00020000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall
+  115 jump *label42 equal :block @tungsten-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00040000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @tungsten-wall-large
+  121 jump *label44 equal :block @tungsten-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00080000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall
+  127 jump *label46 equal :block @beryllium-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00100000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @beryllium-wall-large
+  133 jump *label48 equal :block @beryllium-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00200000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall
+  139 jump *label50 equal :block @carbide-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00400000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @carbide-wall-large
+  145 jump *label52 equal :block @carbide-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x00800000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall
+  151 jump *label54 equal :block @reinforced-surge-wall
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x01000000
   155 jump *label4 always
   156 label *label53
-    * jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
+  157 jump *label56 equal :block @reinforced-surge-wall-large
   158 jump *label55 always
   159 label *label56
   160 set *tmp2 0x02000000
   161 jump *label4 always
   162 label *label55
-    * jump *label58 equal :identifyBlock:block @tile-logic-display
+  163 jump *label58 equal :block @tile-logic-display
   164 jump *label57 always
   165 label *label58
   166 set *tmp2 0x04000000
 
   170 label *label4
   171 set *tmp1 *tmp2
   172 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  173 set :bit *tmp2
+  174 op and *tmp4 :total *tmp1
   175 jump *label59 equal *tmp4 false
   176 op or :total :total 0x800000000
   177 jump *label60 always
   178 label *label59
-    * op or :total :total :bit
+  179 op or :total :total *tmp1
   180 label *label60
   181 label *label1
   182 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
-    * set :identifyBlock:block :block
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
     8 label *label6
 
   169 label *label4
   170 set *tmp1 *tmp2
   171 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  172 op and *tmp4 :total *tmp2
   173 jump *label59 equal *tmp4 false
   174 op or :total :total 0x800000000
   175 jump *label60 always
   176 label *label59
-    * op or :total :total *tmp1
+  177 op or :total :total *tmp2
   178 label *label60
   179 label *label1
   180 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   167 label *label57
   168 set *tmp2 0
   169 label *label4
-    * set *tmp1 *tmp2
   170 label *label3
   171 op and *tmp4 :total *tmp2
   172 jump *label59 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :total 0
     2 set :i -1
     3 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    4 label *label61
     5 lookup block :block :i
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
 
   177 label *label60
   178 label *label1
   179 op add :i :i 1
-    * jump *label0 always
+  180 jump *label61 lessThan :i @blockCount
   181 label *label2
   182 assertequals 0x07FFFFFF :total "Test selected blocks"
   183 end

Modifications by Convert case at line 11:5 (segments: 4) (+44 instructions):
 
     3 label *label0
     4 label *label61
     5 lookup block :block :i
-    * jump *label6 strictEqual :block null
-    * jump *label5 always
+    6 sensor *tmp6 :block @id
+    7 jump *label64 greaterThanEq *tmp6 203
+    8 jump *label62 greaterThanEq *tmp6 35
+    9 multijump *label65 *tmp6 0 (m:*label100)
+   10 multilabel *label65 (m:*label100)
+   11 jump *label63 always
+   12 multilabel *label66 (m:*label100)
+   13 jump *label62 always
+   14 multilabel *label67 (m:*label100)
+   15 jump *label62 always
+   16 multilabel *label68 (m:*label100)
+   17 jump *label62 always
+   18 multilabel *label69 (m:*label100)
+   19 jump *label62 always
+   20 multilabel *label70 (m:*label100)
+   21 jump *label62 always
+   22 multilabel *label71 (m:*label100)
+   23 jump *label62 always
+   24 multilabel *label72 (m:*label100)
+   25 jump *label62 always
+   26 multilabel *label73 (m:*label100)
+   27 jump *label62 always
+   28 multilabel *label74 (m:*label100)
+   29 jump *label62 always
+   30 multilabel *label75 (m:*label100)
+   31 jump *label62 always
+   32 multilabel *label76 (m:*label100)
+   33 jump *label62 always
+   34 multilabel *label77 (m:*label100)
+   35 jump *label62 always
+   36 multilabel *label78 (m:*label100)
+   37 jump *label62 always
+   38 multilabel *label79 (m:*label100)
+   39 jump *label62 always
+   40 multilabel *label80 (m:*label100)
+   41 jump *label62 always
+   42 multilabel *label81 (m:*label100)
+   43 jump *label62 always
+   44 multilabel *label82 (m:*label100)
+   45 jump *label10 always
+   46 multilabel *label83 (m:*label100)
+   47 jump *label12 always
+   48 multilabel *label84 (m:*label100)
+   49 jump *label14 always
+   50 multilabel *label85 (m:*label100)
+   51 jump *label16 always
+   52 multilabel *label86 (m:*label100)
+   53 jump *label18 always
+   54 multilabel *label87 (m:*label100)
+   55 jump *label20 always
+   56 multilabel *label88 (m:*label100)
+   57 jump *label22 always
+   58 multilabel *label89 (m:*label100)
+   59 jump *label24 always
+   60 multilabel *label90 (m:*label100)
+   61 jump *label26 always
+   62 multilabel *label91 (m:*label100)
+   63 jump *label28 always
+   64 multilabel *label92 (m:*label100)
+   65 jump *label30 always
+   66 multilabel *label93 (m:*label100)
+   67 jump *label32 always
+   68 multilabel *label94 (m:*label100)
+   69 jump *label62 always
+   70 multilabel *label95 (m:*label100)
+   71 jump *label62 always
+   72 multilabel *label96 (m:*label100)
+   73 jump *label34 always
+   74 multilabel *label97 (m:*label100)
+   75 jump *label36 always
+   76 multilabel *label98 (m:*label100)
+   77 jump *label38 always
+   78 multilabel *label99 (m:*label100)
+   79 jump *label40 always
+   80 label *label64
+   81 jump *label42 lessThan *tmp6 204
+   82 multijump *label101 *tmp6 204 (m:*label157)
+   83 multilabel *label101 (m:*label157)
+   84 jump *label44 always
+   85 multilabel *label102 (m:*label157)
+   86 jump *label62 always
+   87 multilabel *label103 (m:*label157)
+   88 jump *label46 always
+   89 multilabel *label104 (m:*label157)
+   90 jump *label48 always
+   91 multilabel *label105 (m:*label157)
+   92 jump *label62 always
+   93 multilabel *label106 (m:*label157)
+   94 jump *label62 always
+   95 multilabel *label107 (m:*label157)
+   96 jump *label62 always
+   97 multilabel *label108 (m:*label157)
+   98 jump *label62 always
+   99 multilabel *label109 (m:*label157)
+  100 jump *label62 always
+  101 multilabel *label110 (m:*label157)
+  102 jump *label62 always
+  103 multilabel *label111 (m:*label157)
+  104 jump *label62 always
+  105 multilabel *label112 (m:*label157)
+  106 jump *label62 always
+  107 multilabel *label113 (m:*label157)
+  108 jump *label62 always
+  109 multilabel *label114 (m:*label157)
+  110 jump *label62 always
+  111 multilabel *label115 (m:*label157)
+  112 jump *label62 always
+  113 multilabel *label116 (m:*label157)
+  114 jump *label62 always
+  115 multilabel *label117 (m:*label157)
+  116 jump *label50 always
+  117 multilabel *label118 (m:*label157)
+  118 jump *label52 always
+  119 multilabel *label119 (m:*label157)
+  120 jump *label62 always
+  121 multilabel *label120 (m:*label157)
+  122 jump *label62 always
+  123 multilabel *label121 (m:*label157)
+  124 jump *label62 always
+  125 multilabel *label122 (m:*label157)
+  126 jump *label54 always
+  127 multilabel *label123 (m:*label157)
+  128 jump *label62 always
+  129 multilabel *label124 (m:*label157)
+  130 jump *label62 always
+  131 multilabel *label125 (m:*label157)
+  132 jump *label62 always
+  133 multilabel *label126 (m:*label157)
+  134 jump *label62 always
+  135 multilabel *label127 (m:*label157)
+  136 jump *label62 always
+  137 multilabel *label128 (m:*label157)
+  138 jump *label62 always
+  139 multilabel *label129 (m:*label157)
+  140 jump *label62 always
+  141 multilabel *label130 (m:*label157)
+  142 jump *label62 always
+  143 multilabel *label131 (m:*label157)
+  144 jump *label56 always
+  145 multilabel *label132 (m:*label157)
+  146 jump *label62 always
+  147 multilabel *label133 (m:*label157)
+  148 jump *label62 always
+  149 multilabel *label134 (m:*label157)
+  150 jump *label62 always
+  151 multilabel *label135 (m:*label157)
+  152 jump *label62 always
+  153 multilabel *label136 (m:*label157)
+  154 jump *label62 always
+  155 multilabel *label137 (m:*label157)
+  156 jump *label62 always
+  157 multilabel *label138 (m:*label157)
+  158 jump *label62 always
+  159 multilabel *label139 (m:*label157)
+  160 jump *label62 always
+  161 multilabel *label140 (m:*label157)
+  162 jump *label62 always
+  163 multilabel *label141 (m:*label157)
+  164 jump *label62 always
+  165 multilabel *label142 (m:*label157)
+  166 jump *label62 always
+  167 multilabel *label143 (m:*label157)
+  168 jump *label62 always
+  169 multilabel *label144 (m:*label157)
+  170 jump *label62 always
+  171 multilabel *label145 (m:*label157)
+  172 jump *label62 always
+  173 multilabel *label146 (m:*label157)
+  174 jump *label62 always
+  175 multilabel *label147 (m:*label157)
+  176 jump *label62 always
+  177 multilabel *label148 (m:*label157)
+  178 jump *label62 always
+  179 multilabel *label149 (m:*label157)
+  180 jump *label62 always
+  181 multilabel *label150 (m:*label157)
+  182 jump *label62 always
+  183 multilabel *label151 (m:*label157)
+  184 jump *label62 always
+  185 multilabel *label152 (m:*label157)
+  186 jump *label62 always
+  187 multilabel *label153 (m:*label157)
+  188 jump *label62 always
+  189 multilabel *label154 (m:*label157)
+  190 jump *label62 always
+  191 multilabel *label155 (m:*label157)
+  192 jump *label62 always
+  193 multilabel *label156 (m:*label157)
+  194 jump *label58 always
   195 label *label6
   196 set *tmp2 0x00000001
   197 jump *label4 always
   198 label *label5
-    * jump *label8 equal :block @graphite-press
-    * jump *label7 always
+  199 label *label63
+  200 jump *label6 strictEqual *tmp6 null
   201 label *label8
   202 set *tmp2 0x00000002
   203 jump *label4 always
   204 label *label7
-    * jump *label10 equal :block @copper-wall
-    * jump *label9 always
   205 label *label10
   206 set *tmp2 0x00000004
   207 jump *label4 always
   208 label *label9
-    * jump *label12 equal :block @copper-wall-large
-    * jump *label11 always
   209 label *label12
   210 set *tmp2 0x00000008
   211 jump *label4 always
   212 label *label11
-    * jump *label14 equal :block @titanium-wall
-    * jump *label13 always
   213 label *label14
   214 set *tmp2 0x00000010
   215 jump *label4 always
   216 label *label13
-    * jump *label16 equal :block @titanium-wall-large
-    * jump *label15 always
   217 label *label16
   218 set *tmp2 0x00000020
   219 jump *label4 always
   220 label *label15
-    * jump *label18 equal :block @plastanium-wall
-    * jump *label17 always
   221 label *label18
   222 set *tmp2 0x00000040
   223 jump *label4 always
   224 label *label17
-    * jump *label20 equal :block @plastanium-wall-large
-    * jump *label19 always
   225 label *label20
   226 set *tmp2 0x00000080
   227 jump *label4 always
   228 label *label19
-    * jump *label22 equal :block @thorium-wall
-    * jump *label21 always
   229 label *label22
   230 set *tmp2 0x00000100
   231 jump *label4 always
   232 label *label21
-    * jump *label24 equal :block @thorium-wall-large
-    * jump *label23 always
   233 label *label24
   234 set *tmp2 0x00000200
   235 jump *label4 always
   236 label *label23
-    * jump *label26 equal :block @phase-wall
-    * jump *label25 always
   237 label *label26
   238 set *tmp2 0x00000400
   239 jump *label4 always
   240 label *label25
-    * jump *label28 equal :block @phase-wall-large
-    * jump *label27 always
   241 label *label28
   242 set *tmp2 0x00000800
   243 jump *label4 always
   244 label *label27
-    * jump *label30 equal :block @surge-wall
-    * jump *label29 always
   245 label *label30
   246 set *tmp2 0x00001000
   247 jump *label4 always
   248 label *label29
-    * jump *label32 equal :block @surge-wall-large
-    * jump *label31 always
   249 label *label32
   250 set *tmp2 0x00002000
   251 jump *label4 always
   252 label *label31
-    * jump *label34 equal :block @scrap-wall
-    * jump *label33 always
   253 label *label34
   254 set *tmp2 0x00004000
   255 jump *label4 always
   256 label *label33
-    * jump *label36 equal :block @scrap-wall-large
-    * jump *label35 always
   257 label *label36
   258 set *tmp2 0x00008000
   259 jump *label4 always
   260 label *label35
-    * jump *label38 equal :block @scrap-wall-huge
-    * jump *label37 always
   261 label *label38
   262 set *tmp2 0x00010000
   263 jump *label4 always
   264 label *label37
-    * jump *label40 equal :block @scrap-wall-gigantic
-    * jump *label39 always
   265 label *label40
   266 set *tmp2 0x00020000
   267 jump *label4 always
   268 label *label39
-    * jump *label42 equal :block @tungsten-wall
-    * jump *label41 always
   269 label *label42
   270 set *tmp2 0x00040000
   271 jump *label4 always
   272 label *label41
-    * jump *label44 equal :block @tungsten-wall-large
-    * jump *label43 always
   273 label *label44
   274 set *tmp2 0x00080000
   275 jump *label4 always
   276 label *label43
-    * jump *label46 equal :block @beryllium-wall
-    * jump *label45 always
   277 label *label46
   278 set *tmp2 0x00100000
   279 jump *label4 always
   280 label *label45
-    * jump *label48 equal :block @beryllium-wall-large
-    * jump *label47 always
   281 label *label48
   282 set *tmp2 0x00200000
   283 jump *label4 always
   284 label *label47
-    * jump *label50 equal :block @carbide-wall
-    * jump *label49 always
   285 label *label50
   286 set *tmp2 0x00400000
   287 jump *label4 always
   288 label *label49
-    * jump *label52 equal :block @carbide-wall-large
-    * jump *label51 always
   289 label *label52
   290 set *tmp2 0x00800000
   291 jump *label4 always
   292 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall
-    * jump *label53 always
   293 label *label54
   294 set *tmp2 0x01000000
   295 jump *label4 always
   296 label *label53
-    * jump *label56 equal :block @reinforced-surge-wall-large
-    * jump *label55 always
   297 label *label56
   298 set *tmp2 0x02000000
   299 jump *label4 always
   300 label *label55
-    * jump *label58 equal :block @tile-logic-display
-    * jump *label57 always
   301 label *label58
   302 set *tmp2 0x04000000
   303 jump *label4 always
   304 label *label57
+  305 label *label62
   306 set *tmp2 0
   307 label *label4
   308 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 assertequals 260 @blockCount "Verify block count"
     1 set :total 0
     2 set :i -1
-    * label *label0
     3 label *label61
     4 lookup block :block :i
     5 sensor *tmp6 :block @id
 
   194 label *label6
   195 set *tmp2 0x00000001
   196 jump *label4 always
-    * label *label5
   197 label *label63
   198 jump *label6 strictEqual *tmp6 null
-    * label *label8
   199 set *tmp2 0x00000002
   200 jump *label4 always
-    * label *label7
   201 label *label10
   202 set *tmp2 0x00000004
   203 jump *label4 always
-    * label *label9
   204 label *label12
   205 set *tmp2 0x00000008
   206 jump *label4 always
-    * label *label11
   207 label *label14
   208 set *tmp2 0x00000010
   209 jump *label4 always
-    * label *label13
   210 label *label16
   211 set *tmp2 0x00000020
   212 jump *label4 always
-    * label *label15
   213 label *label18
   214 set *tmp2 0x00000040
   215 jump *label4 always
-    * label *label17
   216 label *label20
   217 set *tmp2 0x00000080
   218 jump *label4 always
-    * label *label19
   219 label *label22
   220 set *tmp2 0x00000100
   221 jump *label4 always
-    * label *label21
   222 label *label24
   223 set *tmp2 0x00000200
   224 jump *label4 always
-    * label *label23
   225 label *label26
   226 set *tmp2 0x00000400
   227 jump *label4 always
-    * label *label25
   228 label *label28
   229 set *tmp2 0x00000800
   230 jump *label4 always
-    * label *label27
   231 label *label30
   232 set *tmp2 0x00001000
   233 jump *label4 always
-    * label *label29
   234 label *label32
   235 set *tmp2 0x00002000
   236 jump *label4 always
-    * label *label31
   237 label *label34
   238 set *tmp2 0x00004000
   239 jump *label4 always
-    * label *label33
   240 label *label36
   241 set *tmp2 0x00008000
   242 jump *label4 always
-    * label *label35
   243 label *label38
   244 set *tmp2 0x00010000
   245 jump *label4 always
-    * label *label37
   246 label *label40
   247 set *tmp2 0x00020000
   248 jump *label4 always
-    * label *label39
   249 label *label42
   250 set *tmp2 0x00040000
   251 jump *label4 always
-    * label *label41
   252 label *label44
   253 set *tmp2 0x00080000
   254 jump *label4 always
-    * label *label43
   255 label *label46
   256 set *tmp2 0x00100000
   257 jump *label4 always
-    * label *label45
   258 label *label48
   259 set *tmp2 0x00200000
   260 jump *label4 always
-    * label *label47
   261 label *label50
   262 set *tmp2 0x00400000
   263 jump *label4 always
-    * label *label49
   264 label *label52
   265 set *tmp2 0x00800000
   266 jump *label4 always
-    * label *label51
   267 label *label54
   268 set *tmp2 0x01000000
   269 jump *label4 always
-    * label *label53
   270 label *label56
   271 set *tmp2 0x02000000
   272 jump *label4 always
-    * label *label55
   273 label *label58
   274 set *tmp2 0x04000000
   275 jump *label4 always
-    * label *label57
   276 label *label62
   277 set *tmp2 0
   278 label *label4
-    * label *label3
   279 op and *tmp4 :total *tmp2
   280 jump *label59 equal *tmp4 false
   281 op or :total :total 0x800000000
 
   283 label *label59
   284 op or :total :total *tmp2
   285 label *label60
-    * label *label1
   286 op add :i :i 1
   287 jump *label61 lessThan :i @blockCount
-    * label *label2
   288 assertequals 0x07FFFFFF :total "Test selected blocks"
   289 end

Final code before resolving virtual instructions:

assertequals 260 @blockCount "Verify block count"
set :total 0
set :i -1
label *label61
lookup block :block :i
sensor *tmp6 :block @id
jump *label64 greaterThanEq *tmp6 203
jump *label62 greaterThanEq *tmp6 35
multijump *label65 *tmp6 0
multilabel *label65
jump *label63 always
multilabel *label66
jump *label62 always
multilabel *label67
jump *label62 always
multilabel *label68
jump *label62 always
multilabel *label69
jump *label62 always
multilabel *label70
jump *label62 always
multilabel *label71
jump *label62 always
multilabel *label72
jump *label62 always
multilabel *label73
jump *label62 always
multilabel *label74
jump *label62 always
multilabel *label75
jump *label62 always
multilabel *label76
jump *label62 always
multilabel *label77
jump *label62 always
multilabel *label78
jump *label62 always
multilabel *label79
jump *label62 always
multilabel *label80
jump *label62 always
multilabel *label81
jump *label62 always
multilabel *label82
jump *label10 always
multilabel *label83
jump *label12 always
multilabel *label84
jump *label14 always
multilabel *label85
jump *label16 always
multilabel *label86
jump *label18 always
multilabel *label87
jump *label20 always
multilabel *label88
jump *label22 always
multilabel *label89
jump *label24 always
multilabel *label90
jump *label26 always
multilabel *label91
jump *label28 always
multilabel *label92
jump *label30 always
multilabel *label93
jump *label32 always
multilabel *label94
jump *label62 always
multilabel *label95
jump *label62 always
multilabel *label96
jump *label34 always
multilabel *label97
jump *label36 always
multilabel *label98
jump *label38 always
multilabel *label99
jump *label40 always
label *label64
jump *label42 lessThan *tmp6 204
multijump *label101 *tmp6 204
multilabel *label101
jump *label44 always
multilabel *label102
jump *label62 always
multilabel *label103
jump *label46 always
multilabel *label104
jump *label48 always
multilabel *label105
jump *label62 always
multilabel *label106
jump *label62 always
multilabel *label107
jump *label62 always
multilabel *label108
jump *label62 always
multilabel *label109
jump *label62 always
multilabel *label110
jump *label62 always
multilabel *label111
jump *label62 always
multilabel *label112
jump *label62 always
multilabel *label113
jump *label62 always
multilabel *label114
jump *label62 always
multilabel *label115
jump *label62 always
multilabel *label116
jump *label62 always
multilabel *label117
jump *label50 always
multilabel *label118
jump *label52 always
multilabel *label119
jump *label62 always
multilabel *label120
jump *label62 always
multilabel *label121
jump *label62 always
multilabel *label122
jump *label54 always
multilabel *label123
jump *label62 always
multilabel *label124
jump *label62 always
multilabel *label125
jump *label62 always
multilabel *label126
jump *label62 always
multilabel *label127
jump *label62 always
multilabel *label128
jump *label62 always
multilabel *label129
jump *label62 always
multilabel *label130
jump *label62 always
multilabel *label131
jump *label56 always
multilabel *label132
jump *label62 always
multilabel *label133
jump *label62 always
multilabel *label134
jump *label62 always
multilabel *label135
jump *label62 always
multilabel *label136
jump *label62 always
multilabel *label137
jump *label62 always
multilabel *label138
jump *label62 always
multilabel *label139
jump *label62 always
multilabel *label140
jump *label62 always
multilabel *label141
jump *label62 always
multilabel *label142
jump *label62 always
multilabel *label143
jump *label62 always
multilabel *label144
jump *label62 always
multilabel *label145
jump *label62 always
multilabel *label146
jump *label62 always
multilabel *label147
jump *label62 always
multilabel *label148
jump *label62 always
multilabel *label149
jump *label62 always
multilabel *label150
jump *label62 always
multilabel *label151
jump *label62 always
multilabel *label152
jump *label62 always
multilabel *label153
jump *label62 always
multilabel *label154
jump *label62 always
multilabel *label155
jump *label62 always
multilabel *label156
jump *label58 always
label *label6
set *tmp2 0x00000001
jump *label4 always
label *label63
jump *label6 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
label *label10
set *tmp2 0x00000004
jump *label4 always
label *label12
set *tmp2 0x00000008
jump *label4 always
label *label14
set *tmp2 0x00000010
jump *label4 always
label *label16
set *tmp2 0x00000020
jump *label4 always
label *label18
set *tmp2 0x00000040
jump *label4 always
label *label20
set *tmp2 0x00000080
jump *label4 always
label *label22
set *tmp2 0x00000100
jump *label4 always
label *label24
set *tmp2 0x00000200
jump *label4 always
label *label26
set *tmp2 0x00000400
jump *label4 always
label *label28
set *tmp2 0x00000800
jump *label4 always
label *label30
set *tmp2 0x00001000
jump *label4 always
label *label32
set *tmp2 0x00002000
jump *label4 always
label *label34
set *tmp2 0x00004000
jump *label4 always
label *label36
set *tmp2 0x00008000
jump *label4 always
label *label38
set *tmp2 0x00010000
jump *label4 always
label *label40
set *tmp2 0x00020000
jump *label4 always
label *label42
set *tmp2 0x00040000
jump *label4 always
label *label44
set *tmp2 0x00080000
jump *label4 always
label *label46
set *tmp2 0x00100000
jump *label4 always
label *label48
set *tmp2 0x00200000
jump *label4 always
label *label50
set *tmp2 0x00400000
jump *label4 always
label *label52
set *tmp2 0x00800000
jump *label4 always
label *label54
set *tmp2 0x01000000
jump *label4 always
label *label56
set *tmp2 0x02000000
jump *label4 always
label *label58
set *tmp2 0x04000000
jump *label4 always
label *label62
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label59 equal *tmp4 false
op or :total :total 0x800000000
jump *label60 always
label *label59
op or :total :total *tmp2
label *label60
op add :i :i 1
jump *label61 lessThan :i @blockCount
assertequals 0x07FFFFFF :total "Test selected blocks"
end
