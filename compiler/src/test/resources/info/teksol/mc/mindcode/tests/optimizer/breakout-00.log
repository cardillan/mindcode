   145 instructions before optimizations.
     5 instructions eliminated by Temp Variables Elimination.
    20 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions eliminated by Jump Normalization (3 iterations).
     5 instructions eliminated by Jump Optimization (3 iterations).
     8 instructions eliminated by Single Step Elimination (4 iterations).
    41 instructions eliminated by Data Flow Optimization (4 passes, 13 iterations).
     3 instructions eliminated by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
   126 instructions added by Loop Unrolling (5 iterations).
     3 loops unrolled by Loop Unrolling.
     1 instructions eliminated by Jump Straightening (3 iterations).
     2 instructions updated by JumpThreading.
     2 instructions eliminated by Unreachable Code Elimination.
   184 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 903):
    Unroll loop at line 41:5                                     cost     2, benefit     7500.0, efficiency     3750.0
    Unroll loop at line 82:9                                     cost    25, benefit    62500.0, efficiency     2500.0
  * Unroll loop at line 83:13                                    cost    47, benefit  2343750.0, efficiency    49867.0 (+38 instructions)

Pass 1: speed optimization selection (cost limit 865):
  * Unroll loop at line 41:5                                     cost     2, benefit     7500.0, efficiency     3750.0 (+2 instructions)
    Unroll loop at line 82:9                                     cost    63, benefit    62500.0, efficiency      992.1

Pass 1: speed optimization selection (cost limit 863):
  * Unroll loop at line 82:9                                     cost    63, benefit    62500.0, efficiency      992.1 (+50 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-12 instructions):
 
    41 label *label11
    42 set *tmp12 null
    43 label *label12
-    * set *tmp9 *tmp12
    44 jump *label10 always
    45 label *label9
    46 op greaterThan *tmp13 :paddleX 0
 
    51 label *label13
    52 set *tmp14 null
    53 label *label14
-    * set *tmp9 *tmp14
    54 label *label10
    55 op add :ballX :ballX :ballVX
    56 op add :ballY :ballY :ballVY
 
    63 op or *tmp19 *tmp17 *tmp18
    64 jump *label15 equal *tmp19 false
    65 op mul :ballVX :ballVX -1
-    * set *tmp20 :ballVX
    66 jump *label16 always
    67 label *label15
-    * set *tmp20 null
    68 label *label16
    69 op greaterThan *tmp21 :ballYEnd 176
    70 jump *label17 equal *tmp21 false
    71 op mul :ballVY :ballVY -1
-    * set *tmp22 :ballVY
    72 jump *label18 always
    73 label *label17
-    * set *tmp22 null
    74 label *label18
    75 op greaterThan *tmp23 :ballXEnd :paddleX
    76 op add *tmp24 :paddleX :paddleWidth
 
    89 op div *tmp36 *tmp35 10
    90 op add :ballVX :ballVX *tmp36
    91 op sub :paddleWidth :paddleWidth 1
-    * set *tmp31 :paddleWidth
    92 jump *label20 always
    93 label *label19
-    * set *tmp31 null
    94 label *label20
    95 set :brickPtr 0
    96 set :y 126
 
   137 label *label29
   138 set *tmp51 null
   139 label *label30
-    * set *tmp41 *tmp51
   140 jump *label28 always
   141 label *label27
-    * set *tmp41 null
   142 label *label28
   143 op add :brickPtr :brickPtr 1
   144 label *label25
 
   154 op or *tmp62 *tmp60 *tmp61
   155 jump *label33 equal *tmp62 false
   156 jump *label8 always
-    * set *tmp63 null
   157 jump *label34 always
   158 label *label33
-    * set *tmp63 null
   159 label *label34
   160 drawflush DISPLAY
   161 label *label7

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-6 instructions):
 
    36 op lessThan *tmp11 :paddleX *tmp10
    37 jump *label11 equal *tmp11 false
    38 op add :paddleX :paddleX 3
-    * set *tmp12 :paddleX
    39 jump *label12 always
    40 label *label11
-    * set *tmp12 null
    41 label *label12
    42 jump *label10 always
    43 label *label9
    44 op greaterThan *tmp13 :paddleX 0
    45 jump *label13 equal *tmp13 false
    46 op sub :paddleX :paddleX 3
-    * set *tmp14 :paddleX
    47 jump *label14 always
    48 label *label13
-    * set *tmp14 null
    49 label *label14
    50 label *label10
    51 op add :ballX :ballX :ballVX
 
   128 op mul :ballVX :ballVX -1
   129 set *tmp59 :ballVX
   130 label *label32
-    * set *tmp51 *tmp59
   131 jump *label30 always
   132 label *label29
-    * set *tmp51 null
   133 label *label30
   134 jump *label28 always
   135 label *label27

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   122 op land *tmp58 *tmp55 *tmp57
   123 jump *label31 equal *tmp58 false
   124 op mul :ballVY :ballVY -1
-    * set *tmp59 :ballVY
   125 jump *label32 always
   126 label *label31
   127 op mul :ballVX :ballVX -1
-    * set *tmp59 :ballVX
   128 label *label32
   129 jump *label30 always
   130 label *label29

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-5 instructions):
 
     5 jump *label2 equal true false
     6 set :paddleWidth 40
     7 op div *tmp0 :paddleWidth 2
-    * op sub *tmp1 88 *tmp0
-    * set :paddleX *tmp1
+    8 op sub :paddleX 88 *tmp0
     9 set :ballX 88
    10 set :ballY 88
    11 op rand *tmp2 10
-    * op sub *tmp3 *tmp2 5
-    * set :ballVX *tmp3
+   12 op sub :ballVX *tmp2 5
    13 op rand *tmp4 10
-    * op sub *tmp5 *tmp4 5
-    * set :ballVY *tmp5
+   14 op sub :ballVY *tmp4 5
    15 set :brickCount 6
    16 set :i 0
    17 label *label3
 
    47 label *label10
    48 op add :ballX :ballX :ballVX
    49 op add :ballY :ballY :ballVY
-    * op add *tmp15 :ballX 5
-    * set :ballXEnd *tmp15
-    * op add *tmp16 :ballY 5
-    * set :ballYEnd *tmp16
+   50 op add :ballXEnd :ballX 5
+   51 op add :ballYEnd :ballY 5
    52 op lessThan *tmp17 :ballX 0
    53 op greaterThan *tmp18 :ballXEnd 176
    54 op or *tmp19 *tmp17 *tmp18

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
     2 set PADDLECONTROLLER switch1
     3 draw color 255 255 255 255
     4 label *label0
-    * jump *label2 equal true false
     5 set :paddleWidth 40
     6 op div *tmp0 :paddleWidth 2
     7 op sub :paddleX 88 *tmp0
 
    22 jump *label3 always
    23 label *label5
    24 label *label6
-    * jump *label8 equal true false
    25 draw clear 0 0 0
    26 draw rect :paddleX 10 :paddleWidth 5
    27 draw rect :ballX :ballY 5 5

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-5 instructions):
 
    28 sensor *tmp8 PADDLECONTROLLER @enabled
    29 jump *label9 equal *tmp8 false
    30 op sub *tmp10 176 :paddleWidth
-    * op lessThan *tmp11 :paddleX *tmp10
-    * jump *label11 equal *tmp11 false
+   31 jump *label11 greaterThanEq :paddleX *tmp10
    32 op add :paddleX :paddleX 3
    33 jump *label12 always
    34 label *label11
    35 label *label12
    36 jump *label10 always
    37 label *label9
-    * op greaterThan *tmp13 :paddleX 0
-    * jump *label13 equal *tmp13 false
+   38 jump *label13 lessThanEq :paddleX 0
    39 op sub :paddleX :paddleX 3
    40 jump *label14 always
    41 label *label13
 
    53 jump *label16 always
    54 label *label15
    55 label *label16
-    * op greaterThan *tmp21 :ballYEnd 176
-    * jump *label17 equal *tmp21 false
+   56 jump *label17 lessThanEq :ballYEnd 176
    57 op mul :ballVY :ballVY -1
    58 jump *label18 always
    59 label *label17
 
    81 set :brickPtr 0
    82 set :y 126
    83 label *label21
-    * op greaterThan *tmp37 :y 106
-    * jump *label23 equal *tmp37 false
+   84 jump *label23 lessThanEq :y 106
    85 set :x 1
    86 label *label24
-    * op lessThan *tmp38 :x 176
-    * jump *label26 equal *tmp38 false
+   87 jump *label26 greaterThanEq :x 176
    88 set *tmp39 :brickPtr
    89 read *tmp40 BRICKS *tmp39
    90 jump *label27 equal *tmp40 false

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    30 op sub *tmp10 176 :paddleWidth
    31 jump *label11 greaterThanEq :paddleX *tmp10
    32 op add :paddleX :paddleX 3
-    * jump *label12 always
    33 label *label11
    34 label *label12
    35 jump *label10 always
    36 label *label9
    37 jump *label13 lessThanEq :paddleX 0
    38 op sub :paddleX :paddleX 3
-    * jump *label14 always
    39 label *label13
    40 label *label14
    41 label *label10
 
    48 op or *tmp19 *tmp17 *tmp18
    49 jump *label15 equal *tmp19 false
    50 op mul :ballVX :ballVX -1
-    * jump *label16 always
    51 label *label15
    52 label *label16
    53 jump *label17 lessThanEq :ballYEnd 176
    54 op mul :ballVY :ballVY -1
-    * jump *label18 always
    55 label *label17
    56 label *label18
    57 op greaterThan *tmp23 :ballXEnd :paddleX
 
    71 op div *tmp36 *tmp35 10
    72 op add :ballVX :ballVX *tmp36
    73 op sub :paddleWidth :paddleWidth 1
-    * jump *label20 always
    74 label *label19
    75 label *label20
    76 set :brickPtr 0
 
   109 label *label31
   110 op mul :ballVX :ballVX -1
   111 label *label32
-    * jump *label30 always
   112 label *label29
   113 label *label30
-    * jump *label28 always
   114 label *label27
   115 label *label28
   116 op add :brickPtr :brickPtr 1
 
   127 op or *tmp62 *tmp60 *tmp61
   128 jump *label33 equal *tmp62 false
   129 jump *label8 always
-    * jump *label34 always
   130 label *label33
   131 label *label34
   132 drawflush DISPLAY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 draw color 255 255 255 255
     4 label *label0
     5 set :paddleWidth 40
-    * op div *tmp0 :paddleWidth 2
-    * op sub :paddleX 88 *tmp0
+    6 op div *tmp0 40 2
+    7 op sub :paddleX 88 20
     8 set :ballX 88
     9 set :ballY 88
    10 op rand *tmp2 10
 
    16 label *label3
    17 jump *label5 greaterThanEq :i 6
    18 set *tmp6 :i
-    * write 1 BRICKS *tmp6
+   19 write 1 BRICKS :i
    20 label *label4
    21 op add :i :i 1
    22 jump *label3 always
 
    81 label *label24
    82 jump *label26 greaterThanEq :x 176
    83 set *tmp39 :brickPtr
-    * read *tmp40 BRICKS *tmp39
+   84 read *tmp40 BRICKS :brickPtr
    85 jump *label27 equal *tmp40 false
    86 draw rect :x :y 57.666666666666664 9
    87 op greaterThan *tmp42 :ballXEnd :x
 
    95 op land *tmp50 *tmp47 *tmp49
    96 jump *label29 equal *tmp50 false
    97 set *tmp52 :brickPtr
-    * write 0 BRICKS *tmp52
+   98 write 0 BRICKS :brickPtr
    99 op sub :brickCount :brickCount 1
   100 set :brickWidthPlusBallSizeMinus1 62.666666666666664
   101 op sub *tmp54 :x 4
   102 op greaterThan *tmp55 :ballX *tmp54
-    * op add *tmp56 :x :brickWidthPlusBallSizeMinus1
+  103 op add *tmp56 :x 62.666666666666664
   104 op lessThan *tmp57 :ballX *tmp56
   105 op land *tmp58 *tmp55 *tmp57
   106 jump *label31 equal *tmp58 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
     3 draw color 255 255 255 255
     4 label *label0
     5 set :paddleWidth 40
-    * op div *tmp0 40 2
     6 op sub :paddleX 88 20
     7 set :ballX 88
     8 set :ballY 88
 
    14 set :i 0
    15 label *label3
    16 jump *label5 greaterThanEq :i 6
-    * set *tmp6 :i
    17 write 1 BRICKS :i
    18 label *label4
    19 op add :i :i 1
 
    78 set :x 1
    79 label *label24
    80 jump *label26 greaterThanEq :x 176
-    * set *tmp39 :brickPtr
    81 read *tmp40 BRICKS :brickPtr
    82 jump *label27 equal *tmp40 false
    83 draw rect :x :y 57.666666666666664 9
 
    91 op lessThan *tmp49 :ballY *tmp48
    92 op land *tmp50 *tmp47 *tmp49
    93 jump *label29 equal *tmp50 false
-    * set *tmp52 :brickPtr
    94 write 0 BRICKS :brickPtr
    95 op sub :brickCount :brickCount 1
-    * set :brickWidthPlusBallSizeMinus1 62.666666666666664
    96 op sub *tmp54 :x 4
    97 op greaterThan *tmp55 :ballX *tmp54
    98 op add *tmp56 :x 62.666666666666664

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-3 instructions):
 
    13 set :brickCount 6
    14 set :i 0
    15 label *label3
-    * jump *label5 greaterThanEq :i 6
+   16 label *label35
    17 write 1 BRICKS :i
    18 label *label4
    19 op add :i :i 1
-    * jump *label3 always
+   20 jump *label35 lessThan :i 6
    21 label *label5
    22 label *label6
    23 draw clear 0 0 0
 
    74 set :brickPtr 0
    75 set :y 126
    76 label *label21
-    * jump *label23 lessThanEq :y 106
+   77 label *label36
    78 set :x 1
    79 label *label24
-    * jump *label26 greaterThanEq :x 176
+   80 label *label37
    81 read *tmp40 BRICKS :brickPtr
    82 jump *label27 equal *tmp40 false
    83 draw rect :x :y 57.666666666666664 9
 
   111 op add :brickPtr :brickPtr 1
   112 label *label25
   113 op add :x :x 58.666666666666664
-    * jump *label24 always
+  114 jump *label37 lessThan :x 176
   115 label *label26
   116 label *label22
   117 op sub :y :y 10
-    * jump *label21 always
+  118 jump *label36 greaterThan :y 106
   119 label *label23
   120 op lessThan *tmp60 :ballY 0
   121 op equal *tmp61 :brickCount 0

Modifications by Unroll loop at line 83:13 (+51 instructions):
 
    75 set :y 126
    76 label *label21
    77 label *label36
-    * set :x 1
-    * label *label24
-    * label *label37
-    * read *tmp40 BRICKS :brickPtr
-    * jump *label27 equal *tmp40 false
-    * draw rect :x :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd :x
-    * op add *tmp43 :x 58.666666666666664
-    * op lessThan *tmp44 :ballX *tmp43
-    * op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
-    * op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
-    * op land *tmp50 *tmp47 *tmp49
-    * jump *label29 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
-    * op sub :brickCount :brickCount 1
-    * op sub *tmp54 :x 4
-    * op greaterThan *tmp55 :ballX *tmp54
-    * op add *tmp56 :x 62.666666666666664
-    * op lessThan *tmp57 :ballX *tmp56
-    * op land *tmp58 *tmp55 *tmp57
-    * jump *label31 equal *tmp58 false
-    * op mul :ballVY :ballVY -1
-    * jump *label32 always
-    * label *label31
-    * op mul :ballVX :ballVX -1
-    * label *label32
-    * label *label29
-    * label *label30
-    * label *label27
-    * label *label28
-    * op add :brickPtr :brickPtr 1
-    * label *label25
-    * op add :x :x 58.666666666666664
-    * jump *label37 lessThan :x 176
-    * label *label26
+   78 set :x 1
+   79 label *label38
+   80 label *label39
+   81 read *tmp40 BRICKS :brickPtr
+   82 jump *label44 equal *tmp40 false
+   83 draw rect :x :y 57.666666666666664 9
+   84 op greaterThan *tmp42 :ballXEnd :x
+   85 op add *tmp43 :x 58.666666666666664
+   86 op lessThan *tmp44 :ballX *tmp43
+   87 op land *tmp45 *tmp42 *tmp44
+   88 op greaterThan *tmp46 :ballYEnd :y
+   89 op land *tmp47 *tmp45 *tmp46
+   90 op add *tmp48 :y 10
+   91 op lessThan *tmp49 :ballY *tmp48
+   92 op land *tmp50 *tmp47 *tmp49
+   93 jump *label42 equal *tmp50 false
+   94 write 0 BRICKS :brickPtr
+   95 op sub :brickCount :brickCount 1
+   96 op sub *tmp54 :x 4
+   97 op greaterThan *tmp55 :ballX *tmp54
+   98 op add *tmp56 :x 62.666666666666664
+   99 op lessThan *tmp57 :ballX *tmp56
+  100 op land *tmp58 *tmp55 *tmp57
+  101 jump *label40 equal *tmp58 false
+  102 op mul :ballVY :ballVY -1
+  103 jump *label41 always
+  104 label *label40
+  105 op mul :ballVX :ballVX -1
+  106 label *label41
+  107 label *label42
+  108 label *label43
+  109 label *label44
+  110 label *label45
+  111 op add :brickPtr :brickPtr 1
+  112 label *label46
+  113 op add :x :x 58.666666666666664
+  114 label *label47
+  115 read *tmp40 BRICKS :brickPtr
+  116 jump *label52 equal *tmp40 false
+  117 draw rect :x :y 57.666666666666664 9
+  118 op greaterThan *tmp42 :ballXEnd :x
+  119 op add *tmp43 :x 58.666666666666664
+  120 op lessThan *tmp44 :ballX *tmp43
+  121 op land *tmp45 *tmp42 *tmp44
+  122 op greaterThan *tmp46 :ballYEnd :y
+  123 op land *tmp47 *tmp45 *tmp46
+  124 op add *tmp48 :y 10
+  125 op lessThan *tmp49 :ballY *tmp48
+  126 op land *tmp50 *tmp47 *tmp49
+  127 jump *label50 equal *tmp50 false
+  128 write 0 BRICKS :brickPtr
+  129 op sub :brickCount :brickCount 1
+  130 op sub *tmp54 :x 4
+  131 op greaterThan *tmp55 :ballX *tmp54
+  132 op add *tmp56 :x 62.666666666666664
+  133 op lessThan *tmp57 :ballX *tmp56
+  134 op land *tmp58 *tmp55 *tmp57
+  135 jump *label48 equal *tmp58 false
+  136 op mul :ballVY :ballVY -1
+  137 jump *label49 always
+  138 label *label48
+  139 op mul :ballVX :ballVX -1
+  140 label *label49
+  141 label *label50
+  142 label *label51
+  143 label *label52
+  144 label *label53
+  145 op add :brickPtr :brickPtr 1
+  146 label *label54
+  147 op add :x :x 58.666666666666664
+  148 label *label55
+  149 read *tmp40 BRICKS :brickPtr
+  150 jump *label60 equal *tmp40 false
+  151 draw rect :x :y 57.666666666666664 9
+  152 op greaterThan *tmp42 :ballXEnd :x
+  153 op add *tmp43 :x 58.666666666666664
+  154 op lessThan *tmp44 :ballX *tmp43
+  155 op land *tmp45 *tmp42 *tmp44
+  156 op greaterThan *tmp46 :ballYEnd :y
+  157 op land *tmp47 *tmp45 *tmp46
+  158 op add *tmp48 :y 10
+  159 op lessThan *tmp49 :ballY *tmp48
+  160 op land *tmp50 *tmp47 *tmp49
+  161 jump *label58 equal *tmp50 false
+  162 write 0 BRICKS :brickPtr
+  163 op sub :brickCount :brickCount 1
+  164 op sub *tmp54 :x 4
+  165 op greaterThan *tmp55 :ballX *tmp54
+  166 op add *tmp56 :x 62.666666666666664
+  167 op lessThan *tmp57 :ballX *tmp56
+  168 op land *tmp58 *tmp55 *tmp57
+  169 jump *label56 equal *tmp58 false
+  170 op mul :ballVY :ballVY -1
+  171 jump *label57 always
+  172 label *label56
+  173 op mul :ballVX :ballVX -1
+  174 label *label57
+  175 label *label58
+  176 label *label59
+  177 label *label60
+  178 label *label61
+  179 op add :brickPtr :brickPtr 1
+  180 label *label62
+  181 op add :x :x 58.666666666666664
+  182 label *label26
   183 label *label22
   184 op sub :y :y 10
   185 jump *label36 greaterThan :y 106

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    80 label *label39
    81 read *tmp40 BRICKS :brickPtr
    82 jump *label44 equal *tmp40 false
-    * draw rect :x :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd :x
-    * op add *tmp43 :x 58.666666666666664
-    * op lessThan *tmp44 :ballX *tmp43
+   83 draw rect 1 :y 57.666666666666664 9
+   84 op greaterThan *tmp42 :ballXEnd 1
+   85 op add *tmp43 1 58.666666666666664
+   86 op lessThan *tmp44 :ballX 59.666666666666664
    87 op land *tmp45 *tmp42 *tmp44
    88 op greaterThan *tmp46 :ballYEnd :y
    89 op land *tmp47 *tmp45 *tmp46
 
    93 jump *label42 equal *tmp50 false
    94 write 0 BRICKS :brickPtr
    95 op sub :brickCount :brickCount 1
-    * op sub *tmp54 :x 4
-    * op greaterThan *tmp55 :ballX *tmp54
-    * op add *tmp56 :x 62.666666666666664
-    * op lessThan *tmp57 :ballX *tmp56
+   96 op sub *tmp54 1 4
+   97 op greaterThan *tmp55 :ballX -3
+   98 op add *tmp56 1 62.666666666666664
+   99 op lessThan *tmp57 :ballX 63.666666666666664
   100 op land *tmp58 *tmp55 *tmp57
   101 jump *label40 equal *tmp58 false
   102 op mul :ballVY :ballVY -1
 
   110 label *label45
   111 op add :brickPtr :brickPtr 1
   112 label *label46
-    * op add :x :x 58.666666666666664
+  113 op add :x 1 58.666666666666664
   114 label *label47
   115 read *tmp40 BRICKS :brickPtr
   116 jump *label52 equal *tmp40 false
-    * draw rect :x :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd :x
-    * op add *tmp43 :x 58.666666666666664
-    * op lessThan *tmp44 :ballX *tmp43
+  117 draw rect 59.666666666666664 :y 57.666666666666664 9
+  118 op greaterThan *tmp42 :ballXEnd 59.666666666666664
+  119 op add *tmp43 59.666666666666664 58.666666666666664
+  120 op lessThan *tmp44 :ballX 118.33333333333333
   121 op land *tmp45 *tmp42 *tmp44
   122 op greaterThan *tmp46 :ballYEnd :y
   123 op land *tmp47 *tmp45 *tmp46
 
   127 jump *label50 equal *tmp50 false
   128 write 0 BRICKS :brickPtr
   129 op sub :brickCount :brickCount 1
-    * op sub *tmp54 :x 4
-    * op greaterThan *tmp55 :ballX *tmp54
-    * op add *tmp56 :x 62.666666666666664
-    * op lessThan *tmp57 :ballX *tmp56
+  130 op sub *tmp54 59.666666666666664 4
+  131 op greaterThan *tmp55 :ballX 55.666666666666664
+  132 op add *tmp56 59.666666666666664 62.666666666666664
+  133 op lessThan *tmp57 :ballX 122.33333333333333
   134 op land *tmp58 *tmp55 *tmp57
   135 jump *label48 equal *tmp58 false
   136 op mul :ballVY :ballVY -1
 
   144 label *label53
   145 op add :brickPtr :brickPtr 1
   146 label *label54
-    * op add :x :x 58.666666666666664
+  147 op add :x 59.666666666666664 58.666666666666664
   148 label *label55
   149 read *tmp40 BRICKS :brickPtr
   150 jump *label60 equal *tmp40 false
-    * draw rect :x :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd :x
-    * op add *tmp43 :x 58.666666666666664
-    * op lessThan *tmp44 :ballX *tmp43
+  151 draw rect 118.33333333333333 :y 57.666666666666664 9
+  152 op greaterThan *tmp42 :ballXEnd 118.33333333333333
+  153 op add *tmp43 118.33333333333333 58.666666666666664
+  154 op lessThan *tmp44 :ballX 177
   155 op land *tmp45 *tmp42 *tmp44
   156 op greaterThan *tmp46 :ballYEnd :y
   157 op land *tmp47 *tmp45 *tmp46
 
   161 jump *label58 equal *tmp50 false
   162 write 0 BRICKS :brickPtr
   163 op sub :brickCount :brickCount 1
-    * op sub *tmp54 :x 4
-    * op greaterThan *tmp55 :ballX *tmp54
-    * op add *tmp56 :x 62.666666666666664
-    * op lessThan *tmp57 :ballX *tmp56
+  164 op sub *tmp54 118.33333333333333 4
+  165 op greaterThan *tmp55 :ballX 114.33333333333333
+  166 op add *tmp56 118.33333333333333 62.666666666666664
+  167 op lessThan *tmp57 :ballX 181
   168 op land *tmp58 *tmp55 *tmp57
   169 jump *label56 equal *tmp58 false
   170 op mul :ballVY :ballVY -1
 
   178 label *label61
   179 op add :brickPtr :brickPtr 1
   180 label *label62
-    * op add :x :x 58.666666666666664
+  181 op add :x 118.33333333333333 58.666666666666664
   182 label *label26
   183 label *label22
   184 op sub :y :y 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    75 set :y 126
    76 label *label21
    77 label *label36
-    * set :x 1
    78 label *label38
    79 label *label39
    80 read *tmp40 BRICKS :brickPtr
    81 jump *label44 equal *tmp40 false
    82 draw rect 1 :y 57.666666666666664 9
    83 op greaterThan *tmp42 :ballXEnd 1
-    * op add *tmp43 1 58.666666666666664
    84 op lessThan *tmp44 :ballX 59.666666666666664
    85 op land *tmp45 *tmp42 *tmp44
    86 op greaterThan *tmp46 :ballYEnd :y
 
    91 jump *label42 equal *tmp50 false
    92 write 0 BRICKS :brickPtr
    93 op sub :brickCount :brickCount 1
-    * op sub *tmp54 1 4
    94 op greaterThan *tmp55 :ballX -3
-    * op add *tmp56 1 62.666666666666664
    95 op lessThan *tmp57 :ballX 63.666666666666664
    96 op land *tmp58 *tmp55 *tmp57
    97 jump *label40 equal *tmp58 false
 
   106 label *label45
   107 op add :brickPtr :brickPtr 1
   108 label *label46
-    * op add :x 1 58.666666666666664
   109 label *label47
   110 read *tmp40 BRICKS :brickPtr
   111 jump *label52 equal *tmp40 false
   112 draw rect 59.666666666666664 :y 57.666666666666664 9
   113 op greaterThan *tmp42 :ballXEnd 59.666666666666664
-    * op add *tmp43 59.666666666666664 58.666666666666664
   114 op lessThan *tmp44 :ballX 118.33333333333333
   115 op land *tmp45 *tmp42 *tmp44
   116 op greaterThan *tmp46 :ballYEnd :y
 
   121 jump *label50 equal *tmp50 false
   122 write 0 BRICKS :brickPtr
   123 op sub :brickCount :brickCount 1
-    * op sub *tmp54 59.666666666666664 4
   124 op greaterThan *tmp55 :ballX 55.666666666666664
-    * op add *tmp56 59.666666666666664 62.666666666666664
   125 op lessThan *tmp57 :ballX 122.33333333333333
   126 op land *tmp58 *tmp55 *tmp57
   127 jump *label48 equal *tmp58 false
 
   136 label *label53
   137 op add :brickPtr :brickPtr 1
   138 label *label54
-    * op add :x 59.666666666666664 58.666666666666664
   139 label *label55
   140 read *tmp40 BRICKS :brickPtr
   141 jump *label60 equal *tmp40 false
   142 draw rect 118.33333333333333 :y 57.666666666666664 9
   143 op greaterThan *tmp42 :ballXEnd 118.33333333333333
-    * op add *tmp43 118.33333333333333 58.666666666666664
   144 op lessThan *tmp44 :ballX 177
   145 op land *tmp45 *tmp42 *tmp44
   146 op greaterThan *tmp46 :ballYEnd :y
 
   151 jump *label58 equal *tmp50 false
   152 write 0 BRICKS :brickPtr
   153 op sub :brickCount :brickCount 1
-    * op sub *tmp54 118.33333333333333 4
   154 op greaterThan *tmp55 :ballX 114.33333333333333
-    * op add *tmp56 118.33333333333333 62.666666666666664
   155 op lessThan *tmp57 :ballX 181
   156 op land *tmp58 *tmp55 *tmp57
   157 jump *label56 equal *tmp58 false
 
   166 label *label61
   167 op add :brickPtr :brickPtr 1
   168 label *label62
-    * op add :x 118.33333333333333 58.666666666666664
   169 label *label26
   170 label *label22
   171 op sub :y :y 10

Modifications by Unroll loop at line 41:5 (+9 instructions):
 
    11 op rand *tmp4 10
    12 op sub :ballVY *tmp4 5
    13 set :brickCount 6
-    * set :i 0
-    * label *label3
-    * label *label35
-    * write 1 BRICKS :i
-    * label *label4
-    * op add :i :i 1
-    * jump *label35 lessThan :i 6
-    * label *label5
+   14 set :i 0
+   15 label *label63
+   16 label *label64
+   17 write 1 BRICKS :i
+   18 label *label65
+   19 op add :i :i 1
+   20 label *label66
+   21 write 1 BRICKS :i
+   22 label *label67
+   23 op add :i :i 1
+   24 label *label68
+   25 write 1 BRICKS :i
+   26 label *label69
+   27 op add :i :i 1
+   28 label *label70
+   29 write 1 BRICKS :i
+   30 label *label71
+   31 op add :i :i 1
+   32 label *label72
+   33 write 1 BRICKS :i
+   34 label *label73
+   35 op add :i :i 1
+   36 label *label74
+   37 write 1 BRICKS :i
+   38 label *label75
+   39 op add :i :i 1
+   40 label *label5
    41 label *label6
    42 draw clear 0 0 0
    43 draw rect :paddleX 10 :paddleWidth 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    14 set :i 0
    15 label *label63
    16 label *label64
-    * write 1 BRICKS :i
+   17 write 1 BRICKS 0
    18 label *label65
-    * op add :i :i 1
+   19 op add :i 0 1
    20 label *label66
-    * write 1 BRICKS :i
+   21 write 1 BRICKS 1
    22 label *label67
-    * op add :i :i 1
+   23 op add :i 1 1
    24 label *label68
-    * write 1 BRICKS :i
+   25 write 1 BRICKS 2
    26 label *label69
-    * op add :i :i 1
+   27 op add :i 2 1
    28 label *label70
-    * write 1 BRICKS :i
+   29 write 1 BRICKS 3
    30 label *label71
-    * op add :i :i 1
+   31 op add :i 3 1
    32 label *label72
-    * write 1 BRICKS :i
+   33 write 1 BRICKS 4
    34 label *label73
-    * op add :i :i 1
+   35 op add :i 4 1
    36 label *label74
-    * write 1 BRICKS :i
+   37 write 1 BRICKS 5
    38 label *label75
-    * op add :i :i 1
+   39 op add :i 5 1
    40 label *label5
    41 label *label6
    42 draw clear 0 0 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
    11 op rand *tmp4 10
    12 op sub :ballVY *tmp4 5
    13 set :brickCount 6
-    * set :i 0
    14 label *label63
    15 label *label64
    16 write 1 BRICKS 0
    17 label *label65
-    * op add :i 0 1
    18 label *label66
    19 write 1 BRICKS 1
    20 label *label67
-    * op add :i 1 1
    21 label *label68
    22 write 1 BRICKS 2
    23 label *label69
-    * op add :i 2 1
    24 label *label70
    25 write 1 BRICKS 3
    26 label *label71
-    * op add :i 3 1
    27 label *label72
    28 write 1 BRICKS 4
    29 label *label73
-    * op add :i 4 1
    30 label *label74
    31 write 1 BRICKS 5
    32 label *label75
-    * op add :i 5 1
    33 label *label5
    34 label *label6
    35 draw clear 0 0 0

Modifications by Unroll loop at line 82:9 (+66 instructions):
 
    84 label *label19
    85 label *label20
    86 set :brickPtr 0
-    * set :y 126
-    * label *label21
-    * label *label36
-    * label *label38
-    * label *label39
-    * read *tmp40 BRICKS :brickPtr
-    * jump *label44 equal *tmp40 false
-    * draw rect 1 :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd 1
-    * op lessThan *tmp44 :ballX 59.666666666666664
-    * op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
-    * op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
-    * op land *tmp50 *tmp47 *tmp49
-    * jump *label42 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
-    * op sub :brickCount :brickCount 1
-    * op greaterThan *tmp55 :ballX -3
-    * op lessThan *tmp57 :ballX 63.666666666666664
-    * op land *tmp58 *tmp55 *tmp57
-    * jump *label40 equal *tmp58 false
-    * op mul :ballVY :ballVY -1
-    * jump *label41 always
-    * label *label40
-    * op mul :ballVX :ballVX -1
-    * label *label41
-    * label *label42
-    * label *label43
-    * label *label44
-    * label *label45
-    * op add :brickPtr :brickPtr 1
-    * label *label46
-    * label *label47
-    * read *tmp40 BRICKS :brickPtr
-    * jump *label52 equal *tmp40 false
-    * draw rect 59.666666666666664 :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd 59.666666666666664
-    * op lessThan *tmp44 :ballX 118.33333333333333
-    * op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
-    * op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
-    * op land *tmp50 *tmp47 *tmp49
-    * jump *label50 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
-    * op sub :brickCount :brickCount 1
-    * op greaterThan *tmp55 :ballX 55.666666666666664
-    * op lessThan *tmp57 :ballX 122.33333333333333
-    * op land *tmp58 *tmp55 *tmp57
-    * jump *label48 equal *tmp58 false
-    * op mul :ballVY :ballVY -1
-    * jump *label49 always
-    * label *label48
-    * op mul :ballVX :ballVX -1
-    * label *label49
-    * label *label50
-    * label *label51
-    * label *label52
-    * label *label53
-    * op add :brickPtr :brickPtr 1
-    * label *label54
-    * label *label55
-    * read *tmp40 BRICKS :brickPtr
-    * jump *label60 equal *tmp40 false
-    * draw rect 118.33333333333333 :y 57.666666666666664 9
-    * op greaterThan *tmp42 :ballXEnd 118.33333333333333
-    * op lessThan *tmp44 :ballX 177
-    * op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
-    * op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
-    * op land *tmp50 *tmp47 *tmp49
-    * jump *label58 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
-    * op sub :brickCount :brickCount 1
-    * op greaterThan *tmp55 :ballX 114.33333333333333
-    * op lessThan *tmp57 :ballX 181
-    * op land *tmp58 *tmp55 *tmp57
-    * jump *label56 equal *tmp58 false
-    * op mul :ballVY :ballVY -1
-    * jump *label57 always
-    * label *label56
-    * op mul :ballVX :ballVX -1
-    * label *label57
-    * label *label58
-    * label *label59
-    * label *label60
-    * label *label61
-    * op add :brickPtr :brickPtr 1
-    * label *label62
-    * label *label26
-    * label *label22
-    * op sub :y :y 10
-    * jump *label36 greaterThan :y 106
-    * label *label23
+   87 set :y 126
+   88 label *label76
+   89 label *label77
+   90 label *label78
+   91 label *label79
+   92 read *tmp40 BRICKS :brickPtr
+   93 jump *label84 equal *tmp40 false
+   94 draw rect 1 :y 57.666666666666664 9
+   95 op greaterThan *tmp42 :ballXEnd 1
+   96 op lessThan *tmp44 :ballX 59.666666666666664
+   97 op land *tmp45 *tmp42 *tmp44
+   98 op greaterThan *tmp46 :ballYEnd :y
+   99 op land *tmp47 *tmp45 *tmp46
+  100 op add *tmp48 :y 10
+  101 op lessThan *tmp49 :ballY *tmp48
+  102 op land *tmp50 *tmp47 *tmp49
+  103 jump *label82 equal *tmp50 false
+  104 write 0 BRICKS :brickPtr
+  105 op sub :brickCount :brickCount 1
+  106 op greaterThan *tmp55 :ballX -3
+  107 op lessThan *tmp57 :ballX 63.666666666666664
+  108 op land *tmp58 *tmp55 *tmp57
+  109 jump *label80 equal *tmp58 false
+  110 op mul :ballVY :ballVY -1
+  111 jump *label81 always
+  112 label *label80
+  113 op mul :ballVX :ballVX -1
+  114 label *label81
+  115 label *label82
+  116 label *label83
+  117 label *label84
+  118 label *label85
+  119 op add :brickPtr :brickPtr 1
+  120 label *label86
+  121 label *label87
+  122 read *tmp40 BRICKS :brickPtr
+  123 jump *label92 equal *tmp40 false
+  124 draw rect 59.666666666666664 :y 57.666666666666664 9
+  125 op greaterThan *tmp42 :ballXEnd 59.666666666666664
+  126 op lessThan *tmp44 :ballX 118.33333333333333
+  127 op land *tmp45 *tmp42 *tmp44
+  128 op greaterThan *tmp46 :ballYEnd :y
+  129 op land *tmp47 *tmp45 *tmp46
+  130 op add *tmp48 :y 10
+  131 op lessThan *tmp49 :ballY *tmp48
+  132 op land *tmp50 *tmp47 *tmp49
+  133 jump *label90 equal *tmp50 false
+  134 write 0 BRICKS :brickPtr
+  135 op sub :brickCount :brickCount 1
+  136 op greaterThan *tmp55 :ballX 55.666666666666664
+  137 op lessThan *tmp57 :ballX 122.33333333333333
+  138 op land *tmp58 *tmp55 *tmp57
+  139 jump *label88 equal *tmp58 false
+  140 op mul :ballVY :ballVY -1
+  141 jump *label89 always
+  142 label *label88
+  143 op mul :ballVX :ballVX -1
+  144 label *label89
+  145 label *label90
+  146 label *label91
+  147 label *label92
+  148 label *label93
+  149 op add :brickPtr :brickPtr 1
+  150 label *label94
+  151 label *label95
+  152 read *tmp40 BRICKS :brickPtr
+  153 jump *label100 equal *tmp40 false
+  154 draw rect 118.33333333333333 :y 57.666666666666664 9
+  155 op greaterThan *tmp42 :ballXEnd 118.33333333333333
+  156 op lessThan *tmp44 :ballX 177
+  157 op land *tmp45 *tmp42 *tmp44
+  158 op greaterThan *tmp46 :ballYEnd :y
+  159 op land *tmp47 *tmp45 *tmp46
+  160 op add *tmp48 :y 10
+  161 op lessThan *tmp49 :ballY *tmp48
+  162 op land *tmp50 *tmp47 *tmp49
+  163 jump *label98 equal *tmp50 false
+  164 write 0 BRICKS :brickPtr
+  165 op sub :brickCount :brickCount 1
+  166 op greaterThan *tmp55 :ballX 114.33333333333333
+  167 op lessThan *tmp57 :ballX 181
+  168 op land *tmp58 *tmp55 *tmp57
+  169 jump *label96 equal *tmp58 false
+  170 op mul :ballVY :ballVY -1
+  171 jump *label97 always
+  172 label *label96
+  173 op mul :ballVX :ballVX -1
+  174 label *label97
+  175 label *label98
+  176 label *label99
+  177 label *label100
+  178 label *label101
+  179 op add :brickPtr :brickPtr 1
+  180 label *label102
+  181 label *label103
+  182 label *label104
+  183 op sub :y :y 10
+  184 label *label105
+  185 label *label106
+  186 label *label107
+  187 read *tmp40 BRICKS :brickPtr
+  188 jump *label112 equal *tmp40 false
+  189 draw rect 1 :y 57.666666666666664 9
+  190 op greaterThan *tmp42 :ballXEnd 1
+  191 op lessThan *tmp44 :ballX 59.666666666666664
+  192 op land *tmp45 *tmp42 *tmp44
+  193 op greaterThan *tmp46 :ballYEnd :y
+  194 op land *tmp47 *tmp45 *tmp46
+  195 op add *tmp48 :y 10
+  196 op lessThan *tmp49 :ballY *tmp48
+  197 op land *tmp50 *tmp47 *tmp49
+  198 jump *label110 equal *tmp50 false
+  199 write 0 BRICKS :brickPtr
+  200 op sub :brickCount :brickCount 1
+  201 op greaterThan *tmp55 :ballX -3
+  202 op lessThan *tmp57 :ballX 63.666666666666664
+  203 op land *tmp58 *tmp55 *tmp57
+  204 jump *label108 equal *tmp58 false
+  205 op mul :ballVY :ballVY -1
+  206 jump *label109 always
+  207 label *label108
+  208 op mul :ballVX :ballVX -1
+  209 label *label109
+  210 label *label110
+  211 label *label111
+  212 label *label112
+  213 label *label113
+  214 op add :brickPtr :brickPtr 1
+  215 label *label114
+  216 label *label115
+  217 read *tmp40 BRICKS :brickPtr
+  218 jump *label120 equal *tmp40 false
+  219 draw rect 59.666666666666664 :y 57.666666666666664 9
+  220 op greaterThan *tmp42 :ballXEnd 59.666666666666664
+  221 op lessThan *tmp44 :ballX 118.33333333333333
+  222 op land *tmp45 *tmp42 *tmp44
+  223 op greaterThan *tmp46 :ballYEnd :y
+  224 op land *tmp47 *tmp45 *tmp46
+  225 op add *tmp48 :y 10
+  226 op lessThan *tmp49 :ballY *tmp48
+  227 op land *tmp50 *tmp47 *tmp49
+  228 jump *label118 equal *tmp50 false
+  229 write 0 BRICKS :brickPtr
+  230 op sub :brickCount :brickCount 1
+  231 op greaterThan *tmp55 :ballX 55.666666666666664
+  232 op lessThan *tmp57 :ballX 122.33333333333333
+  233 op land *tmp58 *tmp55 *tmp57
+  234 jump *label116 equal *tmp58 false
+  235 op mul :ballVY :ballVY -1
+  236 jump *label117 always
+  237 label *label116
+  238 op mul :ballVX :ballVX -1
+  239 label *label117
+  240 label *label118
+  241 label *label119
+  242 label *label120
+  243 label *label121
+  244 op add :brickPtr :brickPtr 1
+  245 label *label122
+  246 label *label123
+  247 read *tmp40 BRICKS :brickPtr
+  248 jump *label128 equal *tmp40 false
+  249 draw rect 118.33333333333333 :y 57.666666666666664 9
+  250 op greaterThan *tmp42 :ballXEnd 118.33333333333333
+  251 op lessThan *tmp44 :ballX 177
+  252 op land *tmp45 *tmp42 *tmp44
+  253 op greaterThan *tmp46 :ballYEnd :y
+  254 op land *tmp47 *tmp45 *tmp46
+  255 op add *tmp48 :y 10
+  256 op lessThan *tmp49 :ballY *tmp48
+  257 op land *tmp50 *tmp47 *tmp49
+  258 jump *label126 equal *tmp50 false
+  259 write 0 BRICKS :brickPtr
+  260 op sub :brickCount :brickCount 1
+  261 op greaterThan *tmp55 :ballX 114.33333333333333
+  262 op lessThan *tmp57 :ballX 181
+  263 op land *tmp58 *tmp55 *tmp57
+  264 jump *label124 equal *tmp58 false
+  265 op mul :ballVY :ballVY -1
+  266 jump *label125 always
+  267 label *label124
+  268 op mul :ballVX :ballVX -1
+  269 label *label125
+  270 label *label126
+  271 label *label127
+  272 label *label128
+  273 label *label129
+  274 op add :brickPtr :brickPtr 1
+  275 label *label130
+  276 label *label131
+  277 label *label132
+  278 op sub :y :y 10
+  279 label *label23
   280 op lessThan *tmp60 :ballY 0
   281 op equal *tmp61 :brickCount 0
   282 op or *tmp62 *tmp60 *tmp61

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    89 label *label77
    90 label *label78
    91 label *label79
-    * read *tmp40 BRICKS :brickPtr
+   92 read *tmp40 BRICKS 0
    93 jump *label84 equal *tmp40 false
-    * draw rect 1 :y 57.666666666666664 9
+   94 draw rect 1 126 57.666666666666664 9
    95 op greaterThan *tmp42 :ballXEnd 1
    96 op lessThan *tmp44 :ballX 59.666666666666664
    97 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+   98 op greaterThan *tmp46 :ballYEnd 126
    99 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  100 op add *tmp48 126 10
+  101 op lessThan *tmp49 :ballY 136
   102 op land *tmp50 *tmp47 *tmp49
   103 jump *label82 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  104 write 0 BRICKS 0
   105 op sub :brickCount :brickCount 1
   106 op greaterThan *tmp55 :ballX -3
   107 op lessThan *tmp57 :ballX 63.666666666666664
 
   116 label *label83
   117 label *label84
   118 label *label85
-    * op add :brickPtr :brickPtr 1
+  119 op add :brickPtr 0 1
   120 label *label86
   121 label *label87
-    * read *tmp40 BRICKS :brickPtr
+  122 read *tmp40 BRICKS 1
   123 jump *label92 equal *tmp40 false
-    * draw rect 59.666666666666664 :y 57.666666666666664 9
+  124 draw rect 59.666666666666664 126 57.666666666666664 9
   125 op greaterThan *tmp42 :ballXEnd 59.666666666666664
   126 op lessThan *tmp44 :ballX 118.33333333333333
   127 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+  128 op greaterThan *tmp46 :ballYEnd 126
   129 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  130 op add *tmp48 126 10
+  131 op lessThan *tmp49 :ballY 136
   132 op land *tmp50 *tmp47 *tmp49
   133 jump *label90 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  134 write 0 BRICKS 1
   135 op sub :brickCount :brickCount 1
   136 op greaterThan *tmp55 :ballX 55.666666666666664
   137 op lessThan *tmp57 :ballX 122.33333333333333
 
   146 label *label91
   147 label *label92
   148 label *label93
-    * op add :brickPtr :brickPtr 1
+  149 op add :brickPtr 1 1
   150 label *label94
   151 label *label95
-    * read *tmp40 BRICKS :brickPtr
+  152 read *tmp40 BRICKS 2
   153 jump *label100 equal *tmp40 false
-    * draw rect 118.33333333333333 :y 57.666666666666664 9
+  154 draw rect 118.33333333333333 126 57.666666666666664 9
   155 op greaterThan *tmp42 :ballXEnd 118.33333333333333
   156 op lessThan *tmp44 :ballX 177
   157 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+  158 op greaterThan *tmp46 :ballYEnd 126
   159 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  160 op add *tmp48 126 10
+  161 op lessThan *tmp49 :ballY 136
   162 op land *tmp50 *tmp47 *tmp49
   163 jump *label98 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  164 write 0 BRICKS 2
   165 op sub :brickCount :brickCount 1
   166 op greaterThan *tmp55 :ballX 114.33333333333333
   167 op lessThan *tmp57 :ballX 181
 
   176 label *label99
   177 label *label100
   178 label *label101
-    * op add :brickPtr :brickPtr 1
+  179 op add :brickPtr 2 1
   180 label *label102
   181 label *label103
   182 label *label104
-    * op sub :y :y 10
+  183 op sub :y 126 10
   184 label *label105
   185 label *label106
   186 label *label107
-    * read *tmp40 BRICKS :brickPtr
+  187 read *tmp40 BRICKS 3
   188 jump *label112 equal *tmp40 false
-    * draw rect 1 :y 57.666666666666664 9
+  189 draw rect 1 116 57.666666666666664 9
   190 op greaterThan *tmp42 :ballXEnd 1
   191 op lessThan *tmp44 :ballX 59.666666666666664
   192 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+  193 op greaterThan *tmp46 :ballYEnd 116
   194 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  195 op add *tmp48 116 10
+  196 op lessThan *tmp49 :ballY 126
   197 op land *tmp50 *tmp47 *tmp49
   198 jump *label110 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  199 write 0 BRICKS 3
   200 op sub :brickCount :brickCount 1
   201 op greaterThan *tmp55 :ballX -3
   202 op lessThan *tmp57 :ballX 63.666666666666664
 
   211 label *label111
   212 label *label112
   213 label *label113
-    * op add :brickPtr :brickPtr 1
+  214 op add :brickPtr 3 1
   215 label *label114
   216 label *label115
-    * read *tmp40 BRICKS :brickPtr
+  217 read *tmp40 BRICKS 4
   218 jump *label120 equal *tmp40 false
-    * draw rect 59.666666666666664 :y 57.666666666666664 9
+  219 draw rect 59.666666666666664 116 57.666666666666664 9
   220 op greaterThan *tmp42 :ballXEnd 59.666666666666664
   221 op lessThan *tmp44 :ballX 118.33333333333333
   222 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+  223 op greaterThan *tmp46 :ballYEnd 116
   224 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  225 op add *tmp48 116 10
+  226 op lessThan *tmp49 :ballY 126
   227 op land *tmp50 *tmp47 *tmp49
   228 jump *label118 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  229 write 0 BRICKS 4
   230 op sub :brickCount :brickCount 1
   231 op greaterThan *tmp55 :ballX 55.666666666666664
   232 op lessThan *tmp57 :ballX 122.33333333333333
 
   241 label *label119
   242 label *label120
   243 label *label121
-    * op add :brickPtr :brickPtr 1
+  244 op add :brickPtr 4 1
   245 label *label122
   246 label *label123
-    * read *tmp40 BRICKS :brickPtr
+  247 read *tmp40 BRICKS 5
   248 jump *label128 equal *tmp40 false
-    * draw rect 118.33333333333333 :y 57.666666666666664 9
+  249 draw rect 118.33333333333333 116 57.666666666666664 9
   250 op greaterThan *tmp42 :ballXEnd 118.33333333333333
   251 op lessThan *tmp44 :ballX 177
   252 op land *tmp45 *tmp42 *tmp44
-    * op greaterThan *tmp46 :ballYEnd :y
+  253 op greaterThan *tmp46 :ballYEnd 116
   254 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 :y 10
-    * op lessThan *tmp49 :ballY *tmp48
+  255 op add *tmp48 116 10
+  256 op lessThan *tmp49 :ballY 126
   257 op land *tmp50 *tmp47 *tmp49
   258 jump *label126 equal *tmp50 false
-    * write 0 BRICKS :brickPtr
+  259 write 0 BRICKS 5
   260 op sub :brickCount :brickCount 1
   261 op greaterThan *tmp55 :ballX 114.33333333333333
   262 op lessThan *tmp57 :ballX 181
 
   271 label *label127
   272 label *label128
   273 label *label129
-    * op add :brickPtr :brickPtr 1
+  274 op add :brickPtr 5 1
   275 label *label130
   276 label *label131
   277 label *label132
-    * op sub :y :y 10
+  278 op sub :y 116 10
   279 label *label23
   280 op lessThan *tmp60 :ballY 0
   281 op equal *tmp61 :brickCount 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-16 instructions):
 
    83 op sub :paddleWidth :paddleWidth 1
    84 label *label19
    85 label *label20
-    * set :brickPtr 0
-    * set :y 126
    86 label *label76
    87 label *label77
    88 label *label78
 
    95 op land *tmp45 *tmp42 *tmp44
    96 op greaterThan *tmp46 :ballYEnd 126
    97 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 126 10
    98 op lessThan *tmp49 :ballY 136
    99 op land *tmp50 *tmp47 *tmp49
   100 jump *label82 equal *tmp50 false
 
   113 label *label83
   114 label *label84
   115 label *label85
-    * op add :brickPtr 0 1
   116 label *label86
   117 label *label87
   118 read *tmp40 BRICKS 1
 
   123 op land *tmp45 *tmp42 *tmp44
   124 op greaterThan *tmp46 :ballYEnd 126
   125 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 126 10
   126 op lessThan *tmp49 :ballY 136
   127 op land *tmp50 *tmp47 *tmp49
   128 jump *label90 equal *tmp50 false
 
   141 label *label91
   142 label *label92
   143 label *label93
-    * op add :brickPtr 1 1
   144 label *label94
   145 label *label95
   146 read *tmp40 BRICKS 2
 
   151 op land *tmp45 *tmp42 *tmp44
   152 op greaterThan *tmp46 :ballYEnd 126
   153 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 126 10
   154 op lessThan *tmp49 :ballY 136
   155 op land *tmp50 *tmp47 *tmp49
   156 jump *label98 equal *tmp50 false
 
   169 label *label99
   170 label *label100
   171 label *label101
-    * op add :brickPtr 2 1
   172 label *label102
   173 label *label103
   174 label *label104
-    * op sub :y 126 10
   175 label *label105
   176 label *label106
   177 label *label107
 
   183 op land *tmp45 *tmp42 *tmp44
   184 op greaterThan *tmp46 :ballYEnd 116
   185 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 116 10
   186 op lessThan *tmp49 :ballY 126
   187 op land *tmp50 *tmp47 *tmp49
   188 jump *label110 equal *tmp50 false
 
   201 label *label111
   202 label *label112
   203 label *label113
-    * op add :brickPtr 3 1
   204 label *label114
   205 label *label115
   206 read *tmp40 BRICKS 4
 
   211 op land *tmp45 *tmp42 *tmp44
   212 op greaterThan *tmp46 :ballYEnd 116
   213 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 116 10
   214 op lessThan *tmp49 :ballY 126
   215 op land *tmp50 *tmp47 *tmp49
   216 jump *label118 equal *tmp50 false
 
   229 label *label119
   230 label *label120
   231 label *label121
-    * op add :brickPtr 4 1
   232 label *label122
   233 label *label123
   234 read *tmp40 BRICKS 5
 
   239 op land *tmp45 *tmp42 *tmp44
   240 op greaterThan *tmp46 :ballYEnd 116
   241 op land *tmp47 *tmp45 *tmp46
-    * op add *tmp48 116 10
   242 op lessThan *tmp49 :ballY 126
   243 op land *tmp50 *tmp47 *tmp49
   244 jump *label126 equal *tmp50 false
 
   257 label *label127
   258 label *label128
   259 label *label129
-    * op add :brickPtr 5 1
   260 label *label130
   261 label *label131
   262 label *label132
-    * op sub :y 116 10
   263 label *label23
   264 op lessThan *tmp60 :ballY 0
   265 op equal *tmp61 :brickCount 0

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
   264 op lessThan *tmp60 :ballY 0
   265 op equal *tmp61 :brickCount 0
   266 op or *tmp62 *tmp60 *tmp61
-    * jump *label33 equal *tmp62 false
-    * jump *label8 always
+  267 jump *label8 notEqual *tmp62 false
   268 label *label33
   269 label *label34
   270 drawflush DISPLAY

Modifications by Final phase, Jump Threading, iteration 1:
 
    38 sensor *tmp8 PADDLECONTROLLER @enabled
    39 jump *label9 equal *tmp8 false
    40 op sub *tmp10 176 :paddleWidth
-    * jump *label11 greaterThanEq :paddleX *tmp10
+   41 jump *label10 greaterThanEq :paddleX *tmp10
    42 op add :paddleX :paddleX 3
    43 label *label11
    44 label *label12
 
   264 op lessThan *tmp60 :ballY 0
   265 op equal *tmp61 :brickCount 0
   266 op or *tmp62 *tmp60 *tmp61
-    * jump *label8 notEqual *tmp62 false
+  267 jump *label0 notEqual *tmp62 false
   268 label *label33
   269 label *label34
   270 drawflush DISPLAY

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-2 instructions):
 
   270 drawflush DISPLAY
   271 label *label7
   272 jump *label6 always
-    * label *label8
-    * label *label1
-    * jump *label0 always
-    * label *label2
-    * end

Final code before resolving virtual instructions:

set BRICKS bank1
set DISPLAY display1
set PADDLECONTROLLER switch1
draw color 255 255 255 255 0 0
label *label0
set :paddleWidth 40
op sub :paddleX 88 20
set :ballX 88
set :ballY 88
op rand *tmp2 10 0
op sub :ballVX *tmp2 5
op rand *tmp4 10 0
op sub :ballVY *tmp4 5
set :brickCount 6
write 1 BRICKS 0
write 1 BRICKS 1
write 1 BRICKS 2
write 1 BRICKS 3
write 1 BRICKS 4
write 1 BRICKS 5
label *label6
draw clear 0 0 0 0 0 0
draw rect :paddleX 10 :paddleWidth 5 0 0
draw rect :ballX :ballY 5 5 0 0
sensor *tmp8 PADDLECONTROLLER @enabled
jump *label9 equal *tmp8 false
op sub *tmp10 176 :paddleWidth
jump *label10 greaterThanEq :paddleX *tmp10
op add :paddleX :paddleX 3
jump *label10 always 0 0
label *label9
jump *label13 lessThanEq :paddleX 0
op sub :paddleX :paddleX 3
label *label13
label *label10
op add :ballX :ballX :ballVX
op add :ballY :ballY :ballVY
op add :ballXEnd :ballX 5
op add :ballYEnd :ballY 5
op lessThan *tmp17 :ballX 0
op greaterThan *tmp18 :ballXEnd 176
op or *tmp19 *tmp17 *tmp18
jump *label15 equal *tmp19 false
op mul :ballVX :ballVX -1
label *label15
jump *label17 lessThanEq :ballYEnd 176
op mul :ballVY :ballVY -1
label *label17
op greaterThan *tmp23 :ballXEnd :paddleX
op add *tmp24 :paddleX :paddleWidth
op lessThan *tmp25 :ballX *tmp24
op land *tmp26 *tmp23 *tmp25
op greaterThan *tmp27 :ballYEnd 10
op land *tmp28 *tmp26 *tmp27
op lessThan *tmp29 :ballY 15
op land *tmp30 *tmp28 *tmp29
jump *label19 equal *tmp30 false
op mul :ballVY :ballVY -1.1
op add *tmp32 :ballX 2.5
op sub *tmp33 *tmp32 :paddleX
op div *tmp34 :paddleWidth 2
op add *tmp35 *tmp33 *tmp34
op div *tmp36 *tmp35 10
op add :ballVX :ballVX *tmp36
op sub :paddleWidth :paddleWidth 1
label *label19
read *tmp40 BRICKS 0
jump *label84 equal *tmp40 false
draw rect 1 126 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 1
op lessThan *tmp44 :ballX 59.666666666666664
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 126
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 136
op land *tmp50 *tmp47 *tmp49
jump *label82 equal *tmp50 false
write 0 BRICKS 0
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX -3
op lessThan *tmp57 :ballX 63.666666666666664
op land *tmp58 *tmp55 *tmp57
jump *label80 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label81 always 0 0
label *label80
op mul :ballVX :ballVX -1
label *label81
label *label82
label *label84
read *tmp40 BRICKS 1
jump *label92 equal *tmp40 false
draw rect 59.666666666666664 126 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 59.666666666666664
op lessThan *tmp44 :ballX 118.33333333333333
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 126
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 136
op land *tmp50 *tmp47 *tmp49
jump *label90 equal *tmp50 false
write 0 BRICKS 1
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX 55.666666666666664
op lessThan *tmp57 :ballX 122.33333333333333
op land *tmp58 *tmp55 *tmp57
jump *label88 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label89 always 0 0
label *label88
op mul :ballVX :ballVX -1
label *label89
label *label90
label *label92
read *tmp40 BRICKS 2
jump *label100 equal *tmp40 false
draw rect 118.33333333333333 126 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 118.33333333333333
op lessThan *tmp44 :ballX 177
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 126
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 136
op land *tmp50 *tmp47 *tmp49
jump *label98 equal *tmp50 false
write 0 BRICKS 2
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX 114.33333333333333
op lessThan *tmp57 :ballX 181
op land *tmp58 *tmp55 *tmp57
jump *label96 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label97 always 0 0
label *label96
op mul :ballVX :ballVX -1
label *label97
label *label98
label *label100
read *tmp40 BRICKS 3
jump *label112 equal *tmp40 false
draw rect 1 116 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 1
op lessThan *tmp44 :ballX 59.666666666666664
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 116
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 126
op land *tmp50 *tmp47 *tmp49
jump *label110 equal *tmp50 false
write 0 BRICKS 3
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX -3
op lessThan *tmp57 :ballX 63.666666666666664
op land *tmp58 *tmp55 *tmp57
jump *label108 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label109 always 0 0
label *label108
op mul :ballVX :ballVX -1
label *label109
label *label110
label *label112
read *tmp40 BRICKS 4
jump *label120 equal *tmp40 false
draw rect 59.666666666666664 116 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 59.666666666666664
op lessThan *tmp44 :ballX 118.33333333333333
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 116
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 126
op land *tmp50 *tmp47 *tmp49
jump *label118 equal *tmp50 false
write 0 BRICKS 4
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX 55.666666666666664
op lessThan *tmp57 :ballX 122.33333333333333
op land *tmp58 *tmp55 *tmp57
jump *label116 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label117 always 0 0
label *label116
op mul :ballVX :ballVX -1
label *label117
label *label118
label *label120
read *tmp40 BRICKS 5
jump *label128 equal *tmp40 false
draw rect 118.33333333333333 116 57.666666666666664 9 0 0
op greaterThan *tmp42 :ballXEnd 118.33333333333333
op lessThan *tmp44 :ballX 177
op land *tmp45 *tmp42 *tmp44
op greaterThan *tmp46 :ballYEnd 116
op land *tmp47 *tmp45 *tmp46
op lessThan *tmp49 :ballY 126
op land *tmp50 *tmp47 *tmp49
jump *label126 equal *tmp50 false
write 0 BRICKS 5
op sub :brickCount :brickCount 1
op greaterThan *tmp55 :ballX 114.33333333333333
op lessThan *tmp57 :ballX 181
op land *tmp58 *tmp55 *tmp57
jump *label124 equal *tmp58 false
op mul :ballVY :ballVY -1
jump *label125 always 0 0
label *label124
op mul :ballVX :ballVX -1
label *label125
label *label126
label *label128
op lessThan *tmp60 :ballY 0
op equal *tmp61 :brickCount 0
op or *tmp62 *tmp60 *tmp61
jump *label0 notEqual *tmp62 false
drawflush DISPLAY
jump *label6 always 0 0
