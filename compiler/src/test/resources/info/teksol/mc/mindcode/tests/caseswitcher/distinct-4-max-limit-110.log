   130 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    19 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
   103 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  * Convert case at line 11:5 (segments: 34)                     size   -19, benefit     1184.5, efficiency   Infinity (-19 instructions)
  ! Convert case at line 11:5 (segments: 4)                      size   +42, benefit     1192.6, efficiency     28.395
  ! Convert case at line 11:5 (segments: 1)                      size  +208, benefit     1210.0, efficiency      5.817

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 lookup block *tmp0 :i
     6 set :block *tmp0
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 strictEqual *tmp3 null
+    8 jump *label6 strictEqual :identifyBlock:block null
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000001
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @graphite-press
+   14 jump *label8 equal :identifyBlock:block @graphite-press
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000002
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @copper-wall
+   20 jump *label10 equal :identifyBlock:block @copper-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000004
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @copper-wall-large
+   26 jump *label12 equal :identifyBlock:block @copper-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000008
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall
+   32 jump *label14 equal :identifyBlock:block @titanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000010
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @titanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @titanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000020
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall
+   44 jump *label18 equal :identifyBlock:block @plastanium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000040
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @plastanium-wall-large
+   50 jump *label20 equal :identifyBlock:block @plastanium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000080
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall
+   56 jump *label22 equal :identifyBlock:block @thorium-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000100
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @thorium-wall-large
+   62 jump *label24 equal :identifyBlock:block @thorium-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000200
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @phase-wall
+   68 jump *label26 equal :identifyBlock:block @phase-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00000400
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @phase-wall-large
+   74 jump *label28 equal :identifyBlock:block @phase-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00000800
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @surge-wall
+   80 jump *label30 equal :identifyBlock:block @surge-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00001000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @surge-wall-large
+   86 jump *label32 equal :identifyBlock:block @surge-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00002000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall
+   92 jump *label34 equal :identifyBlock:block @scrap-wall
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00004000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-large
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-large
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00008000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-huge
+  104 jump *label38 equal :identifyBlock:block @scrap-wall-huge
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00010000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @scrap-wall-gigantic
+  110 jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00020000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall
+  116 jump *label42 equal :identifyBlock:block @tungsten-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00040000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @tungsten-wall-large
+  122 jump *label44 equal :identifyBlock:block @tungsten-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00080000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall
+  128 jump *label46 equal :identifyBlock:block @beryllium-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00100000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @beryllium-wall-large
+  134 jump *label48 equal :identifyBlock:block @beryllium-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00200000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall
+  140 jump *label50 equal :identifyBlock:block @carbide-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x00400000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @carbide-wall-large
+  146 jump *label52 equal :identifyBlock:block @carbide-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x00800000
   150 jump *label4 always
   151 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall
+  152 jump *label54 equal :identifyBlock:block @reinforced-surge-wall
   153 jump *label53 always
   154 label *label54
   155 set *tmp2 0x01000000
   156 jump *label4 always
   157 label *label53
-    * jump *label56 equal *tmp3 @reinforced-surge-wall-large
+  158 jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
   159 jump *label55 always
   160 label *label56
   161 set *tmp2 0x02000000
   162 jump *label4 always
   163 label *label55
-    * jump *label58 equal *tmp3 @tile-logic-display
+  164 jump *label58 equal :identifyBlock:block @tile-logic-display
   165 jump *label57 always
   166 label *label58
   167 set *tmp2 0x04000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   175 op and *tmp4 :total :bit
   176 jump *label59 equal *tmp4 false
   177 op or :total :total 0x800000000
-    * set *tmp5 :total
   178 jump *label60 always
   179 label *label59
   180 op or :total :total :bit
-    * set *tmp5 :total
   181 label *label60
   182 label *label1
   183 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     2 set :i -1
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    5 lookup block :block :i
     6 set :identifyBlock:block :block
     7 jump *label6 strictEqual :identifyBlock:block null
     8 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
     6 set :identifyBlock:block :block
-    * jump *label6 strictEqual :identifyBlock:block null
+    7 jump *label6 strictEqual :block null
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000001
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @graphite-press
+   13 jump *label8 equal :block @graphite-press
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall
+   19 jump *label10 equal :block @copper-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000004
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @copper-wall-large
+   25 jump *label12 equal :block @copper-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000008
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall
+   31 jump *label14 equal :block @titanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000010
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @titanium-wall-large
+   37 jump *label16 equal :block @titanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000020
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall
+   43 jump *label18 equal :block @plastanium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000040
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @plastanium-wall-large
+   49 jump *label20 equal :block @plastanium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000080
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall
+   55 jump *label22 equal :block @thorium-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000100
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @thorium-wall-large
+   61 jump *label24 equal :block @thorium-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000200
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall
+   67 jump *label26 equal :block @phase-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000400
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @phase-wall-large
+   73 jump *label28 equal :block @phase-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00000800
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall
+   79 jump *label30 equal :block @surge-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00001000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @surge-wall-large
+   85 jump *label32 equal :block @surge-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00002000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall
+   91 jump *label34 equal :block @scrap-wall
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00004000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-large
+   97 jump *label36 equal :block @scrap-wall-large
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00008000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-huge
+  103 jump *label38 equal :block @scrap-wall-huge
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00010000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
+  109 jump *label40 equal :block @scrap-wall-gigantic
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00020000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall
+  115 jump *label42 equal :block @tungsten-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00040000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @tungsten-wall-large
+  121 jump *label44 equal :block @tungsten-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00080000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall
+  127 jump *label46 equal :block @beryllium-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00100000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @beryllium-wall-large
+  133 jump *label48 equal :block @beryllium-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00200000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall
+  139 jump *label50 equal :block @carbide-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00400000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @carbide-wall-large
+  145 jump *label52 equal :block @carbide-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x00800000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall
+  151 jump *label54 equal :block @reinforced-surge-wall
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x01000000
   155 jump *label4 always
   156 label *label53
-    * jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
+  157 jump *label56 equal :block @reinforced-surge-wall-large
   158 jump *label55 always
   159 label *label56
   160 set *tmp2 0x02000000
   161 jump *label4 always
   162 label *label55
-    * jump *label58 equal :identifyBlock:block @tile-logic-display
+  163 jump *label58 equal :block @tile-logic-display
   164 jump *label57 always
   165 label *label58
   166 set *tmp2 0x04000000
 
   170 label *label4
   171 set *tmp1 *tmp2
   172 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  173 set :bit *tmp2
+  174 op and *tmp4 :total *tmp1
   175 jump *label59 equal *tmp4 false
   176 op or :total :total 0x800000000
   177 jump *label60 always
   178 label *label59
-    * op or :total :total :bit
+  179 op or :total :total *tmp1
   180 label *label60
   181 label *label1
   182 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
-    * set :identifyBlock:block :block
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
     8 label *label6
 
   169 label *label4
   170 set *tmp1 *tmp2
   171 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  172 op and *tmp4 :total *tmp2
   173 jump *label59 equal *tmp4 false
   174 op or :total :total 0x800000000
   175 jump *label60 always
   176 label *label59
-    * op or :total :total *tmp1
+  177 op or :total :total *tmp2
   178 label *label60
   179 label *label1
   180 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   167 label *label57
   168 set *tmp2 0
   169 label *label4
-    * set *tmp1 *tmp2
   170 label *label3
   171 op and *tmp4 :total *tmp2
   172 jump *label59 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :total 0
     2 set :i -1
     3 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    4 label *label61
     5 lookup block :block :i
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
 
   177 label *label60
   178 label *label1
   179 op add :i :i 1
-    * jump *label0 always
+  180 jump *label61 lessThan :i @blockCount
   181 label *label2
   182 assertequals 0x07FFFFFF :total "Test selected blocks"
   183 end

Modifications by Convert case at line 11:5 (segments: 34) (-19 instructions):
 
     3 label *label0
     4 label *label61
     5 lookup block :block :i
-    * jump *label6 strictEqual :block null
-    * jump *label5 always
+    6 sensor *tmp6 :block @id
+    7 jump *label64 greaterThanEq *tmp6 203
+    8 jump *label62 greaterThanEq *tmp6 35
+    9 jump *label65 greaterThanEq *tmp6 17
+   10 jump *label62 greaterThanEq *tmp6 1
+   11 label *label63
+   12 jump *label6 strictEqual *tmp6 null
+   13 label *label8
+   14 set *tmp2 0x00000002
+   15 jump *label4 always
+   16 label *label65
+   17 jump *label66 greaterThanEq *tmp6 26
+   18 jump *label67 greaterThanEq *tmp6 21
+   19 jump *label68 greaterThanEq *tmp6 19
+   20 jump *label12 greaterThanEq *tmp6 18
+   21 label *label10
+   22 set *tmp2 0x00000004
+   23 jump *label4 always
+   24 label *label68
+   25 jump *label16 greaterThanEq *tmp6 20
+   26 label *label14
+   27 set *tmp2 0x00000010
+   28 jump *label4 always
+   29 label *label67
+   30 jump *label69 greaterThanEq *tmp6 23
+   31 jump *label20 greaterThanEq *tmp6 22
+   32 label *label18
+   33 set *tmp2 0x00000040
+   34 jump *label4 always
+   35 label *label69
+   36 jump *label22 lessThan *tmp6 24
+   37 jump *label26 greaterThanEq *tmp6 25
+   38 label *label24
+   39 set *tmp2 0x00000200
+   40 jump *label4 always
+   41 label *label66
+   42 jump *label70 greaterThanEq *tmp6 29
+   43 jump *label28 lessThan *tmp6 27
+   44 jump *label32 greaterThanEq *tmp6 28
+   45 label *label30
+   46 set *tmp2 0x00001000
+   47 jump *label4 always
+   48 label *label70
+   49 jump *label71 greaterThanEq *tmp6 32
+   50 jump *label62 lessThan *tmp6 31
+   51 label *label34
+   52 set *tmp2 0x00004000
+   53 jump *label4 always
+   54 label *label71
+   55 jump *label36 lessThan *tmp6 33
+   56 jump *label40 greaterThanEq *tmp6 34
+   57 label *label38
+   58 set *tmp2 0x00010000
+   59 jump *label4 always
+   60 label *label64
+   61 jump *label72 greaterThanEq *tmp6 234
+   62 jump *label73 greaterThanEq *tmp6 220
+   63 jump *label62 greaterThanEq *tmp6 208
+   64 jump *label74 greaterThanEq *tmp6 205
+   65 jump *label44 greaterThanEq *tmp6 204
+   66 label *label42
+   67 set *tmp2 0x00040000
+   68 jump *label4 always
+   69 label *label74
+   70 jump *label62 lessThan *tmp6 206
+   71 jump *label48 greaterThanEq *tmp6 207
+   72 label *label46
+   73 set *tmp2 0x00100000
+   74 jump *label4 always
+   75 label *label73
+   76 jump *label62 greaterThanEq *tmp6 226
+   77 jump *label75 greaterThanEq *tmp6 222
+   78 jump *label52 greaterThanEq *tmp6 221
+   79 label *label50
+   80 set *tmp2 0x00400000
+   81 jump *label4 always
+   82 label *label75
+   83 jump *label62 lessThan *tmp6 225
+   84 label *label54
+   85 set *tmp2 0x01000000
+   86 jump *label4 always
+   87 label *label72
+   88 jump *label56 lessThan *tmp6 235
+   89 jump *label62 lessThan *tmp6 259
+   90 label *label58
+   91 set *tmp2 0x04000000
+   92 jump *label4 always
    93 label *label6
    94 set *tmp2 0x00000001
    95 jump *label4 always
    96 label *label5
-    * jump *label8 equal :block @graphite-press
-    * jump *label7 always
-    * label *label8
-    * set *tmp2 0x00000002
-    * jump *label4 always
    97 label *label7
-    * jump *label10 equal :block @copper-wall
-    * jump *label9 always
-    * label *label10
-    * set *tmp2 0x00000004
-    * jump *label4 always
    98 label *label9
-    * jump *label12 equal :block @copper-wall-large
-    * jump *label11 always
    99 label *label12
   100 set *tmp2 0x00000008
   101 jump *label4 always
   102 label *label11
-    * jump *label14 equal :block @titanium-wall
-    * jump *label13 always
-    * label *label14
-    * set *tmp2 0x00000010
-    * jump *label4 always
   103 label *label13
-    * jump *label16 equal :block @titanium-wall-large
-    * jump *label15 always
   104 label *label16
   105 set *tmp2 0x00000020
   106 jump *label4 always
   107 label *label15
-    * jump *label18 equal :block @plastanium-wall
-    * jump *label17 always
-    * label *label18
-    * set *tmp2 0x00000040
-    * jump *label4 always
   108 label *label17
-    * jump *label20 equal :block @plastanium-wall-large
-    * jump *label19 always
   109 label *label20
   110 set *tmp2 0x00000080
   111 jump *label4 always
   112 label *label19
-    * jump *label22 equal :block @thorium-wall
-    * jump *label21 always
   113 label *label22
   114 set *tmp2 0x00000100
   115 jump *label4 always
   116 label *label21
-    * jump *label24 equal :block @thorium-wall-large
-    * jump *label23 always
-    * label *label24
-    * set *tmp2 0x00000200
-    * jump *label4 always
   117 label *label23
-    * jump *label26 equal :block @phase-wall
-    * jump *label25 always
   118 label *label26
   119 set *tmp2 0x00000400
   120 jump *label4 always
   121 label *label25
-    * jump *label28 equal :block @phase-wall-large
-    * jump *label27 always
   122 label *label28
   123 set *tmp2 0x00000800
   124 jump *label4 always
   125 label *label27
-    * jump *label30 equal :block @surge-wall
-    * jump *label29 always
-    * label *label30
-    * set *tmp2 0x00001000
-    * jump *label4 always
   126 label *label29
-    * jump *label32 equal :block @surge-wall-large
-    * jump *label31 always
   127 label *label32
   128 set *tmp2 0x00002000
   129 jump *label4 always
   130 label *label31
-    * jump *label34 equal :block @scrap-wall
-    * jump *label33 always
-    * label *label34
-    * set *tmp2 0x00004000
-    * jump *label4 always
   131 label *label33
-    * jump *label36 equal :block @scrap-wall-large
-    * jump *label35 always
   132 label *label36
   133 set *tmp2 0x00008000
   134 jump *label4 always
   135 label *label35
-    * jump *label38 equal :block @scrap-wall-huge
-    * jump *label37 always
-    * label *label38
-    * set *tmp2 0x00010000
-    * jump *label4 always
   136 label *label37
-    * jump *label40 equal :block @scrap-wall-gigantic
-    * jump *label39 always
   137 label *label40
   138 set *tmp2 0x00020000
   139 jump *label4 always
   140 label *label39
-    * jump *label42 equal :block @tungsten-wall
-    * jump *label41 always
-    * label *label42
-    * set *tmp2 0x00040000
-    * jump *label4 always
   141 label *label41
-    * jump *label44 equal :block @tungsten-wall-large
-    * jump *label43 always
   142 label *label44
   143 set *tmp2 0x00080000
   144 jump *label4 always
   145 label *label43
-    * jump *label46 equal :block @beryllium-wall
-    * jump *label45 always
-    * label *label46
-    * set *tmp2 0x00100000
-    * jump *label4 always
   146 label *label45
-    * jump *label48 equal :block @beryllium-wall-large
-    * jump *label47 always
   147 label *label48
   148 set *tmp2 0x00200000
   149 jump *label4 always
   150 label *label47
-    * jump *label50 equal :block @carbide-wall
-    * jump *label49 always
-    * label *label50
-    * set *tmp2 0x00400000
-    * jump *label4 always
   151 label *label49
-    * jump *label52 equal :block @carbide-wall-large
-    * jump *label51 always
   152 label *label52
   153 set *tmp2 0x00800000
   154 jump *label4 always
   155 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall
-    * jump *label53 always
-    * label *label54
-    * set *tmp2 0x01000000
-    * jump *label4 always
   156 label *label53
-    * jump *label56 equal :block @reinforced-surge-wall-large
-    * jump *label55 always
   157 label *label56
   158 set *tmp2 0x02000000
   159 jump *label4 always
   160 label *label55
-    * jump *label58 equal :block @tile-logic-display
-    * jump *label57 always
-    * label *label58
-    * set *tmp2 0x04000000
-    * jump *label4 always
   161 label *label57
+  162 label *label62
   163 set *tmp2 0
   164 label *label4
   165 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 assertequals 260 @blockCount "Verify block count"
     1 set :total 0
     2 set :i -1
-    * label *label0
     3 label *label61
     4 lookup block :block :i
     5 sensor *tmp6 :block @id
 
     7 jump *label62 greaterThanEq *tmp6 35
     8 jump *label65 greaterThanEq *tmp6 17
     9 jump *label62 greaterThanEq *tmp6 1
-    * label *label63
    10 jump *label6 strictEqual *tmp6 null
-    * label *label8
    11 set *tmp2 0x00000002
    12 jump *label4 always
    13 label *label65
 
    15 jump *label67 greaterThanEq *tmp6 21
    16 jump *label68 greaterThanEq *tmp6 19
    17 jump *label12 greaterThanEq *tmp6 18
-    * label *label10
    18 set *tmp2 0x00000004
    19 jump *label4 always
    20 label *label68
    21 jump *label16 greaterThanEq *tmp6 20
-    * label *label14
    22 set *tmp2 0x00000010
    23 jump *label4 always
    24 label *label67
    25 jump *label69 greaterThanEq *tmp6 23
    26 jump *label20 greaterThanEq *tmp6 22
-    * label *label18
    27 set *tmp2 0x00000040
    28 jump *label4 always
    29 label *label69
    30 jump *label22 lessThan *tmp6 24
    31 jump *label26 greaterThanEq *tmp6 25
-    * label *label24
    32 set *tmp2 0x00000200
    33 jump *label4 always
    34 label *label66
    35 jump *label70 greaterThanEq *tmp6 29
    36 jump *label28 lessThan *tmp6 27
    37 jump *label32 greaterThanEq *tmp6 28
-    * label *label30
    38 set *tmp2 0x00001000
    39 jump *label4 always
    40 label *label70
    41 jump *label71 greaterThanEq *tmp6 32
    42 jump *label62 lessThan *tmp6 31
-    * label *label34
    43 set *tmp2 0x00004000
    44 jump *label4 always
    45 label *label71
    46 jump *label36 lessThan *tmp6 33
    47 jump *label40 greaterThanEq *tmp6 34
-    * label *label38
    48 set *tmp2 0x00010000
    49 jump *label4 always
    50 label *label64
 
    53 jump *label62 greaterThanEq *tmp6 208
    54 jump *label74 greaterThanEq *tmp6 205
    55 jump *label44 greaterThanEq *tmp6 204
-    * label *label42
    56 set *tmp2 0x00040000
    57 jump *label4 always
    58 label *label74
    59 jump *label62 lessThan *tmp6 206
    60 jump *label48 greaterThanEq *tmp6 207
-    * label *label46
    61 set *tmp2 0x00100000
    62 jump *label4 always
    63 label *label73
    64 jump *label62 greaterThanEq *tmp6 226
    65 jump *label75 greaterThanEq *tmp6 222
    66 jump *label52 greaterThanEq *tmp6 221
-    * label *label50
    67 set *tmp2 0x00400000
    68 jump *label4 always
    69 label *label75
    70 jump *label62 lessThan *tmp6 225
-    * label *label54
    71 set *tmp2 0x01000000
    72 jump *label4 always
    73 label *label72
    74 jump *label56 lessThan *tmp6 235
    75 jump *label62 lessThan *tmp6 259
-    * label *label58
    76 set *tmp2 0x04000000
    77 jump *label4 always
    78 label *label6
    79 set *tmp2 0x00000001
    80 jump *label4 always
-    * label *label5
-    * label *label7
-    * label *label9
    81 label *label12
    82 set *tmp2 0x00000008
    83 jump *label4 always
-    * label *label11
-    * label *label13
    84 label *label16
    85 set *tmp2 0x00000020
    86 jump *label4 always
-    * label *label15
-    * label *label17
    87 label *label20
    88 set *tmp2 0x00000080
    89 jump *label4 always
-    * label *label19
    90 label *label22
    91 set *tmp2 0x00000100
    92 jump *label4 always
-    * label *label21
-    * label *label23
    93 label *label26
    94 set *tmp2 0x00000400
    95 jump *label4 always
-    * label *label25
    96 label *label28
    97 set *tmp2 0x00000800
    98 jump *label4 always
-    * label *label27
-    * label *label29
    99 label *label32
   100 set *tmp2 0x00002000
   101 jump *label4 always
-    * label *label31
-    * label *label33
   102 label *label36
   103 set *tmp2 0x00008000
   104 jump *label4 always
-    * label *label35
-    * label *label37
   105 label *label40
   106 set *tmp2 0x00020000
   107 jump *label4 always
-    * label *label39
-    * label *label41
   108 label *label44
   109 set *tmp2 0x00080000
   110 jump *label4 always
-    * label *label43
-    * label *label45
   111 label *label48
   112 set *tmp2 0x00200000
   113 jump *label4 always
-    * label *label47
-    * label *label49
   114 label *label52
   115 set *tmp2 0x00800000
   116 jump *label4 always
-    * label *label51
-    * label *label53
   117 label *label56
   118 set *tmp2 0x02000000
   119 jump *label4 always
-    * label *label55
-    * label *label57
   120 label *label62
   121 set *tmp2 0
   122 label *label4
-    * label *label3
   123 op and *tmp4 :total *tmp2
   124 jump *label59 equal *tmp4 false
   125 op or :total :total 0x800000000
 
   127 label *label59
   128 op or :total :total *tmp2
   129 label *label60
-    * label *label1
   130 op add :i :i 1
   131 jump *label61 lessThan :i @blockCount
-    * label *label2
   132 assertequals 0x07FFFFFF :total "Test selected blocks"
   133 end

Final code before resolving virtual instructions:

assertequals 260 @blockCount "Verify block count"
set :total 0
set :i -1
label *label61
lookup block :block :i
sensor *tmp6 :block @id
jump *label64 greaterThanEq *tmp6 203
jump *label62 greaterThanEq *tmp6 35
jump *label65 greaterThanEq *tmp6 17
jump *label62 greaterThanEq *tmp6 1
jump *label6 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
label *label65
jump *label66 greaterThanEq *tmp6 26
jump *label67 greaterThanEq *tmp6 21
jump *label68 greaterThanEq *tmp6 19
jump *label12 greaterThanEq *tmp6 18
set *tmp2 0x00000004
jump *label4 always
label *label68
jump *label16 greaterThanEq *tmp6 20
set *tmp2 0x00000010
jump *label4 always
label *label67
jump *label69 greaterThanEq *tmp6 23
jump *label20 greaterThanEq *tmp6 22
set *tmp2 0x00000040
jump *label4 always
label *label69
jump *label22 lessThan *tmp6 24
jump *label26 greaterThanEq *tmp6 25
set *tmp2 0x00000200
jump *label4 always
label *label66
jump *label70 greaterThanEq *tmp6 29
jump *label28 lessThan *tmp6 27
jump *label32 greaterThanEq *tmp6 28
set *tmp2 0x00001000
jump *label4 always
label *label70
jump *label71 greaterThanEq *tmp6 32
jump *label62 lessThan *tmp6 31
set *tmp2 0x00004000
jump *label4 always
label *label71
jump *label36 lessThan *tmp6 33
jump *label40 greaterThanEq *tmp6 34
set *tmp2 0x00010000
jump *label4 always
label *label64
jump *label72 greaterThanEq *tmp6 234
jump *label73 greaterThanEq *tmp6 220
jump *label62 greaterThanEq *tmp6 208
jump *label74 greaterThanEq *tmp6 205
jump *label44 greaterThanEq *tmp6 204
set *tmp2 0x00040000
jump *label4 always
label *label74
jump *label62 lessThan *tmp6 206
jump *label48 greaterThanEq *tmp6 207
set *tmp2 0x00100000
jump *label4 always
label *label73
jump *label62 greaterThanEq *tmp6 226
jump *label75 greaterThanEq *tmp6 222
jump *label52 greaterThanEq *tmp6 221
set *tmp2 0x00400000
jump *label4 always
label *label75
jump *label62 lessThan *tmp6 225
set *tmp2 0x01000000
jump *label4 always
label *label72
jump *label56 lessThan *tmp6 235
jump *label62 lessThan *tmp6 259
set *tmp2 0x04000000
jump *label4 always
label *label6
set *tmp2 0x00000001
jump *label4 always
label *label12
set *tmp2 0x00000008
jump *label4 always
label *label16
set *tmp2 0x00000020
jump *label4 always
label *label20
set *tmp2 0x00000080
jump *label4 always
label *label22
set *tmp2 0x00000100
jump *label4 always
label *label26
set *tmp2 0x00000400
jump *label4 always
label *label28
set *tmp2 0x00000800
jump *label4 always
label *label32
set *tmp2 0x00002000
jump *label4 always
label *label36
set *tmp2 0x00008000
jump *label4 always
label *label40
set *tmp2 0x00020000
jump *label4 always
label *label44
set *tmp2 0x00080000
jump *label4 always
label *label48
set *tmp2 0x00200000
jump *label4 always
label *label52
set *tmp2 0x00800000
jump *label4 always
label *label56
set *tmp2 0x02000000
jump *label4 always
label *label62
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label59 equal *tmp4 false
op or :total :total 0x800000000
jump *label60 always
label *label59
op or :total :total *tmp2
label *label60
op add :i :i 1
jump *label61 lessThan :i @blockCount
assertequals 0x07FFFFFF :total "Test selected blocks"
end
