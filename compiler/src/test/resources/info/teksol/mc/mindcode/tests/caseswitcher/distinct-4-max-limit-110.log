   130 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (5 iterations).
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    51 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    71 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  * Convert case at line 11:5 (segments: 1)                      size   -51, benefit     1234.9, efficiency   Infinity (-51 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 lookup block *tmp0 :i
     6 set :block *tmp0
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 strictEqual *tmp3 null
+    8 jump *label6 strictEqual :identifyBlock:block null
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000001
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @graphite-press
+   14 jump *label8 equal :identifyBlock:block @graphite-press
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000002
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @copper-wall
+   20 jump *label10 equal :identifyBlock:block @copper-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000004
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @copper-wall-large
+   26 jump *label12 equal :identifyBlock:block @copper-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000008
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall
+   32 jump *label14 equal :identifyBlock:block @titanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000010
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @titanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @titanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000020
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall
+   44 jump *label18 equal :identifyBlock:block @plastanium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000040
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @plastanium-wall-large
+   50 jump *label20 equal :identifyBlock:block @plastanium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000080
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall
+   56 jump *label22 equal :identifyBlock:block @thorium-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000100
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @thorium-wall-large
+   62 jump *label24 equal :identifyBlock:block @thorium-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000200
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @phase-wall
+   68 jump *label26 equal :identifyBlock:block @phase-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00000400
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @phase-wall-large
+   74 jump *label28 equal :identifyBlock:block @phase-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00000800
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @surge-wall
+   80 jump *label30 equal :identifyBlock:block @surge-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00001000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @surge-wall-large
+   86 jump *label32 equal :identifyBlock:block @surge-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00002000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall
+   92 jump *label34 equal :identifyBlock:block @scrap-wall
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00004000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-large
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-large
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00008000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-huge
+  104 jump *label38 equal :identifyBlock:block @scrap-wall-huge
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00010000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @scrap-wall-gigantic
+  110 jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00020000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall
+  116 jump *label42 equal :identifyBlock:block @tungsten-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00040000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @tungsten-wall-large
+  122 jump *label44 equal :identifyBlock:block @tungsten-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00080000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall
+  128 jump *label46 equal :identifyBlock:block @beryllium-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00100000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @beryllium-wall-large
+  134 jump *label48 equal :identifyBlock:block @beryllium-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00200000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall
+  140 jump *label50 equal :identifyBlock:block @carbide-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x00400000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @carbide-wall-large
+  146 jump *label52 equal :identifyBlock:block @carbide-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x00800000
   150 jump *label4 always
   151 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall
+  152 jump *label54 equal :identifyBlock:block @reinforced-surge-wall
   153 jump *label53 always
   154 label *label54
   155 set *tmp2 0x01000000
   156 jump *label4 always
   157 label *label53
-    * jump *label56 equal *tmp3 @reinforced-surge-wall-large
+  158 jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
   159 jump *label55 always
   160 label *label56
   161 set *tmp2 0x02000000
   162 jump *label4 always
   163 label *label55
-    * jump *label58 equal *tmp3 @tile-logic-display
+  164 jump *label58 equal :identifyBlock:block @tile-logic-display
   165 jump *label57 always
   166 label *label58
   167 set *tmp2 0x04000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   175 op and *tmp4 :total :bit
   176 jump *label59 equal *tmp4 false
   177 op or :total :total 0x800000000
-    * set *tmp5 :total
   178 jump *label60 always
   179 label *label59
   180 op or :total :total :bit
-    * set *tmp5 :total
   181 label *label60
   182 label *label1
   183 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     2 set :i -1
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    5 lookup block :block :i
     6 set :identifyBlock:block :block
     7 jump *label6 strictEqual :identifyBlock:block null
     8 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
     6 set :identifyBlock:block :block
-    * jump *label6 strictEqual :identifyBlock:block null
+    7 jump *label6 strictEqual :block null
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000001
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @graphite-press
+   13 jump *label8 equal :block @graphite-press
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall
+   19 jump *label10 equal :block @copper-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000004
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @copper-wall-large
+   25 jump *label12 equal :block @copper-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000008
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall
+   31 jump *label14 equal :block @titanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000010
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @titanium-wall-large
+   37 jump *label16 equal :block @titanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000020
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall
+   43 jump *label18 equal :block @plastanium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000040
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @plastanium-wall-large
+   49 jump *label20 equal :block @plastanium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000080
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall
+   55 jump *label22 equal :block @thorium-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000100
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @thorium-wall-large
+   61 jump *label24 equal :block @thorium-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000200
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall
+   67 jump *label26 equal :block @phase-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000400
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @phase-wall-large
+   73 jump *label28 equal :block @phase-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00000800
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall
+   79 jump *label30 equal :block @surge-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00001000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @surge-wall-large
+   85 jump *label32 equal :block @surge-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00002000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall
+   91 jump *label34 equal :block @scrap-wall
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00004000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-large
+   97 jump *label36 equal :block @scrap-wall-large
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00008000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-huge
+  103 jump *label38 equal :block @scrap-wall-huge
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00010000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
+  109 jump *label40 equal :block @scrap-wall-gigantic
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00020000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall
+  115 jump *label42 equal :block @tungsten-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00040000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @tungsten-wall-large
+  121 jump *label44 equal :block @tungsten-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00080000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall
+  127 jump *label46 equal :block @beryllium-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00100000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @beryllium-wall-large
+  133 jump *label48 equal :block @beryllium-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00200000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall
+  139 jump *label50 equal :block @carbide-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00400000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @carbide-wall-large
+  145 jump *label52 equal :block @carbide-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x00800000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall
+  151 jump *label54 equal :block @reinforced-surge-wall
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x01000000
   155 jump *label4 always
   156 label *label53
-    * jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
+  157 jump *label56 equal :block @reinforced-surge-wall-large
   158 jump *label55 always
   159 label *label56
   160 set *tmp2 0x02000000
   161 jump *label4 always
   162 label *label55
-    * jump *label58 equal :identifyBlock:block @tile-logic-display
+  163 jump *label58 equal :block @tile-logic-display
   164 jump *label57 always
   165 label *label58
   166 set *tmp2 0x04000000
 
   170 label *label4
   171 set *tmp1 *tmp2
   172 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  173 set :bit *tmp2
+  174 op and *tmp4 :total *tmp1
   175 jump *label59 equal *tmp4 false
   176 op or :total :total 0x800000000
   177 jump *label60 always
   178 label *label59
-    * op or :total :total :bit
+  179 op or :total :total *tmp1
   180 label *label60
   181 label *label1
   182 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
-    * set :identifyBlock:block :block
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
     8 label *label6
 
   169 label *label4
   170 set *tmp1 *tmp2
   171 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  172 op and *tmp4 :total *tmp2
   173 jump *label59 equal *tmp4 false
   174 op or :total :total 0x800000000
   175 jump *label60 always
   176 label *label59
-    * op or :total :total *tmp1
+  177 op or :total :total *tmp2
   178 label *label60
   179 label *label1
   180 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   167 label *label57
   168 set *tmp2 0
   169 label *label4
-    * set *tmp1 *tmp2
   170 label *label3
   171 op and *tmp4 :total *tmp2
   172 jump *label59 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :total 0
     2 set :i -1
     3 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    4 label *label61
     5 lookup block :block :i
     6 jump *label6 strictEqual :block null
     7 jump *label5 always
 
   177 label *label60
   178 label *label1
   179 op add :i :i 1
-    * jump *label0 always
+  180 jump *label61 lessThan :i @blockCount
   181 label *label2
   182 assertequals 0x07FFFFFF :total "Test selected blocks"
   183 end

Modifications by Convert case at line 11:5 (segments: 1) (-51 instructions):
 
     3 label *label0
     4 label *label61
     5 lookup block :block :i
-    * jump *label6 strictEqual :block null
-    * jump *label5 always
+    6 sensor *tmp8 :block @id
+    7 multijump *tmp8 0 0 (m:*label64)
     8 label *label6
     9 set *tmp2 0x00000001
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :block @graphite-press
-    * jump *label7 always
+   12 multilabel *label65 (m:*label64)
+   13 label *label63
+   14 jump *label6 strictEqual *tmp8 null
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :block @copper-wall
-    * jump *label9 always
+   19 multilabel *label67 (m:*label64)
    20 label *label10
    21 set *tmp2 0x00000004
    22 jump *label4 always
    23 label *label9
-    * jump *label12 equal :block @copper-wall-large
-    * jump *label11 always
+   24 multilabel *label68 (m:*label64)
    25 label *label12
    26 set *tmp2 0x00000008
    27 jump *label4 always
    28 label *label11
-    * jump *label14 equal :block @titanium-wall
-    * jump *label13 always
+   29 multilabel *label69 (m:*label64)
    30 label *label14
    31 set *tmp2 0x00000010
    32 jump *label4 always
    33 label *label13
-    * jump *label16 equal :block @titanium-wall-large
-    * jump *label15 always
+   34 multilabel *label70 (m:*label64)
    35 label *label16
    36 set *tmp2 0x00000020
    37 jump *label4 always
    38 label *label15
-    * jump *label18 equal :block @plastanium-wall
-    * jump *label17 always
+   39 multilabel *label71 (m:*label64)
    40 label *label18
    41 set *tmp2 0x00000040
    42 jump *label4 always
    43 label *label17
-    * jump *label20 equal :block @plastanium-wall-large
-    * jump *label19 always
+   44 multilabel *label72 (m:*label64)
    45 label *label20
    46 set *tmp2 0x00000080
    47 jump *label4 always
    48 label *label19
-    * jump *label22 equal :block @thorium-wall
-    * jump *label21 always
+   49 multilabel *label73 (m:*label64)
    50 label *label22
    51 set *tmp2 0x00000100
    52 jump *label4 always
    53 label *label21
-    * jump *label24 equal :block @thorium-wall-large
-    * jump *label23 always
+   54 multilabel *label74 (m:*label64)
    55 label *label24
    56 set *tmp2 0x00000200
    57 jump *label4 always
    58 label *label23
-    * jump *label26 equal :block @phase-wall
-    * jump *label25 always
+   59 multilabel *label75 (m:*label64)
    60 label *label26
    61 set *tmp2 0x00000400
    62 jump *label4 always
    63 label *label25
-    * jump *label28 equal :block @phase-wall-large
-    * jump *label27 always
+   64 multilabel *label76 (m:*label64)
    65 label *label28
    66 set *tmp2 0x00000800
    67 jump *label4 always
    68 label *label27
-    * jump *label30 equal :block @surge-wall
-    * jump *label29 always
+   69 multilabel *label77 (m:*label64)
    70 label *label30
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label29
-    * jump *label32 equal :block @surge-wall-large
-    * jump *label31 always
+   74 multilabel *label78 (m:*label64)
    75 label *label32
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label31
-    * jump *label34 equal :block @scrap-wall
-    * jump *label33 always
+   79 multilabel *label79 (m:*label64)
    80 label *label34
    81 set *tmp2 0x00004000
    82 jump *label4 always
    83 label *label33
-    * jump *label36 equal :block @scrap-wall-large
-    * jump *label35 always
+   84 multilabel *label80 (m:*label64)
    85 label *label36
    86 set *tmp2 0x00008000
    87 jump *label4 always
    88 label *label35
-    * jump *label38 equal :block @scrap-wall-huge
-    * jump *label37 always
+   89 multilabel *label81 (m:*label64)
    90 label *label38
    91 set *tmp2 0x00010000
    92 jump *label4 always
    93 label *label37
-    * jump *label40 equal :block @scrap-wall-gigantic
-    * jump *label39 always
+   94 multilabel *label82 (m:*label64)
    95 label *label40
    96 set *tmp2 0x00020000
    97 jump *label4 always
    98 label *label39
-    * jump *label42 equal :block @tungsten-wall
-    * jump *label41 always
+   99 multilabel *label83 (m:*label64)
   100 label *label42
   101 set *tmp2 0x00040000
   102 jump *label4 always
   103 label *label41
-    * jump *label44 equal :block @tungsten-wall-large
-    * jump *label43 always
+  104 multilabel *label84 (m:*label64)
   105 label *label44
   106 set *tmp2 0x00080000
   107 jump *label4 always
   108 label *label43
-    * jump *label46 equal :block @beryllium-wall
-    * jump *label45 always
+  109 multilabel *label85 (m:*label64)
   110 label *label46
   111 set *tmp2 0x00100000
   112 jump *label4 always
   113 label *label45
-    * jump *label48 equal :block @beryllium-wall-large
-    * jump *label47 always
+  114 multilabel *label86 (m:*label64)
   115 label *label48
   116 set *tmp2 0x00200000
   117 jump *label4 always
   118 label *label47
-    * jump *label50 equal :block @carbide-wall
-    * jump *label49 always
+  119 multilabel *label87 (m:*label64)
   120 label *label50
   121 set *tmp2 0x00400000
   122 jump *label4 always
   123 label *label49
-    * jump *label52 equal :block @carbide-wall-large
-    * jump *label51 always
+  124 multilabel *label88 (m:*label64)
   125 label *label52
   126 set *tmp2 0x00800000
   127 jump *label4 always
   128 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall
-    * jump *label53 always
+  129 multilabel *label89 (m:*label64)
   130 label *label54
   131 set *tmp2 0x01000000
   132 jump *label4 always
   133 label *label53
-    * jump *label56 equal :block @reinforced-surge-wall-large
-    * jump *label55 always
+  134 multilabel *label90 (m:*label64)
   135 label *label56
   136 set *tmp2 0x02000000
   137 jump *label4 always
   138 label *label55
-    * jump *label58 equal :block @tile-logic-display
-    * jump *label57 always
+  139 multilabel *label91 (m:*label64)
   140 label *label58
   141 set *tmp2 0x04000000
   142 jump *label4 always
   143 label *label57
+  144 multilabel *label66 (m:*label64)
+  145 label *label62
   146 set *tmp2 0
   147 label *label4
   148 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 assertequals 260 @blockCount "Verify block count"
     1 set :total 0
     2 set :i -1
-    * label *label0
     3 label *label61
     4 lookup block :block :i
     5 sensor *tmp8 :block @id
 
     7 label *label6
     8 set *tmp2 0x00000001
     9 jump *label4 always
-    * label *label5
    10 multilabel *label65 (m:*label64)
-    * label *label63
    11 jump *label6 strictEqual *tmp8 null
-    * label *label8
    12 set *tmp2 0x00000002
    13 jump *label4 always
-    * label *label7
    14 multilabel *label67 (m:*label64)
-    * label *label10
    15 set *tmp2 0x00000004
    16 jump *label4 always
-    * label *label9
    17 multilabel *label68 (m:*label64)
-    * label *label12
    18 set *tmp2 0x00000008
    19 jump *label4 always
-    * label *label11
    20 multilabel *label69 (m:*label64)
-    * label *label14
    21 set *tmp2 0x00000010
    22 jump *label4 always
-    * label *label13
    23 multilabel *label70 (m:*label64)
-    * label *label16
    24 set *tmp2 0x00000020
    25 jump *label4 always
-    * label *label15
    26 multilabel *label71 (m:*label64)
-    * label *label18
    27 set *tmp2 0x00000040
    28 jump *label4 always
-    * label *label17
    29 multilabel *label72 (m:*label64)
-    * label *label20
    30 set *tmp2 0x00000080
    31 jump *label4 always
-    * label *label19
    32 multilabel *label73 (m:*label64)
-    * label *label22
    33 set *tmp2 0x00000100
    34 jump *label4 always
-    * label *label21
    35 multilabel *label74 (m:*label64)
-    * label *label24
    36 set *tmp2 0x00000200
    37 jump *label4 always
-    * label *label23
    38 multilabel *label75 (m:*label64)
-    * label *label26
    39 set *tmp2 0x00000400
    40 jump *label4 always
-    * label *label25
    41 multilabel *label76 (m:*label64)
-    * label *label28
    42 set *tmp2 0x00000800
    43 jump *label4 always
-    * label *label27
    44 multilabel *label77 (m:*label64)
-    * label *label30
    45 set *tmp2 0x00001000
    46 jump *label4 always
-    * label *label29
    47 multilabel *label78 (m:*label64)
-    * label *label32
    48 set *tmp2 0x00002000
    49 jump *label4 always
-    * label *label31
    50 multilabel *label79 (m:*label64)
-    * label *label34
    51 set *tmp2 0x00004000
    52 jump *label4 always
-    * label *label33
    53 multilabel *label80 (m:*label64)
-    * label *label36
    54 set *tmp2 0x00008000
    55 jump *label4 always
-    * label *label35
    56 multilabel *label81 (m:*label64)
-    * label *label38
    57 set *tmp2 0x00010000
    58 jump *label4 always
-    * label *label37
    59 multilabel *label82 (m:*label64)
-    * label *label40
    60 set *tmp2 0x00020000
    61 jump *label4 always
-    * label *label39
    62 multilabel *label83 (m:*label64)
-    * label *label42
    63 set *tmp2 0x00040000
    64 jump *label4 always
-    * label *label41
    65 multilabel *label84 (m:*label64)
-    * label *label44
    66 set *tmp2 0x00080000
    67 jump *label4 always
-    * label *label43
    68 multilabel *label85 (m:*label64)
-    * label *label46
    69 set *tmp2 0x00100000
    70 jump *label4 always
-    * label *label45
    71 multilabel *label86 (m:*label64)
-    * label *label48
    72 set *tmp2 0x00200000
    73 jump *label4 always
-    * label *label47
    74 multilabel *label87 (m:*label64)
-    * label *label50
    75 set *tmp2 0x00400000
    76 jump *label4 always
-    * label *label49
    77 multilabel *label88 (m:*label64)
-    * label *label52
    78 set *tmp2 0x00800000
    79 jump *label4 always
-    * label *label51
    80 multilabel *label89 (m:*label64)
-    * label *label54
    81 set *tmp2 0x01000000
    82 jump *label4 always
-    * label *label53
    83 multilabel *label90 (m:*label64)
-    * label *label56
    84 set *tmp2 0x02000000
    85 jump *label4 always
-    * label *label55
    86 multilabel *label91 (m:*label64)
-    * label *label58
    87 set *tmp2 0x04000000
    88 jump *label4 always
-    * label *label57
    89 multilabel *label66 (m:*label64)
-    * label *label62
    90 set *tmp2 0
    91 label *label4
-    * label *label3
    92 op and *tmp4 :total *tmp2
    93 jump *label59 equal *tmp4 false
    94 op or :total :total 0x800000000
 
    96 label *label59
    97 op or :total :total *tmp2
    98 label *label60
-    * label *label1
    99 op add :i :i 1
   100 jump *label61 lessThan :i @blockCount
-    * label *label2
   101 assertequals 0x07FFFFFF :total "Test selected blocks"
   102 end

Final code before resolving virtual instructions:

assertequals 260 @blockCount "Verify block count"
set :total 0
set :i -1
label *label61
lookup block :block :i
sensor *tmp8 :block @id
multijump *tmp8 0 0
label *label6
set *tmp2 0x00000001
jump *label4 always
multilabel *label65
jump *label6 strictEqual *tmp8 null
set *tmp2 0x00000002
jump *label4 always
multilabel *label67
set *tmp2 0x00000004
jump *label4 always
multilabel *label68
set *tmp2 0x00000008
jump *label4 always
multilabel *label69
set *tmp2 0x00000010
jump *label4 always
multilabel *label70
set *tmp2 0x00000020
jump *label4 always
multilabel *label71
set *tmp2 0x00000040
jump *label4 always
multilabel *label72
set *tmp2 0x00000080
jump *label4 always
multilabel *label73
set *tmp2 0x00000100
jump *label4 always
multilabel *label74
set *tmp2 0x00000200
jump *label4 always
multilabel *label75
set *tmp2 0x00000400
jump *label4 always
multilabel *label76
set *tmp2 0x00000800
jump *label4 always
multilabel *label77
set *tmp2 0x00001000
jump *label4 always
multilabel *label78
set *tmp2 0x00002000
jump *label4 always
multilabel *label79
set *tmp2 0x00004000
jump *label4 always
multilabel *label80
set *tmp2 0x00008000
jump *label4 always
multilabel *label81
set *tmp2 0x00010000
jump *label4 always
multilabel *label82
set *tmp2 0x00020000
jump *label4 always
multilabel *label83
set *tmp2 0x00040000
jump *label4 always
multilabel *label84
set *tmp2 0x00080000
jump *label4 always
multilabel *label85
set *tmp2 0x00100000
jump *label4 always
multilabel *label86
set *tmp2 0x00200000
jump *label4 always
multilabel *label87
set *tmp2 0x00400000
jump *label4 always
multilabel *label88
set *tmp2 0x00800000
jump *label4 always
multilabel *label89
set *tmp2 0x01000000
jump *label4 always
multilabel *label90
set *tmp2 0x02000000
jump *label4 always
multilabel *label91
set *tmp2 0x04000000
jump *label4 always
multilabel *label66
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label59 equal *tmp4 false
op or :total :total 0x800000000
jump *label60 always
label *label59
op or :total :total *tmp2
label *label60
op add :i :i 1
jump *label61 lessThan :i @blockCount
assertequals 0x07FFFFFF :total "Test selected blocks"
end
