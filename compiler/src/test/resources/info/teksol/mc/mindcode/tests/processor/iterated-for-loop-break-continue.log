    47 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     5 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (4 iterations).
     2 instructions modified by Data Flow Optimization (4 iterations).
     7 instructions added by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
     1 instructions eliminated by Print Merging.
    37 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 966):
  * Replicate loop condition at line 4:5                         cost     7, benefit       25.0, efficiency        3.6 (+7 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-5 instructions):
 
    21 op equal *tmp5 *tmp4 4
    22 jump *label8 equal *tmp5 false
    23 jump *label3 always
-    * set *tmp6 null
    24 jump *label9 always
    25 label *label8
-    * set *tmp6 null
    26 label *label9
    27 print :test.0:i
    28 print "|"
 
    36 op equal *tmp8 *tmp7 10
    37 jump *label11 equal *tmp8 false
    38 jump *label4 always
-    * set *tmp9 null
    39 jump *label12 always
    40 label *label11
-    * set *tmp9 null
    41 label *label12
    42 label *label3
    43 op add :test.0:i :test.0:i 2
    44 op add :test.0:j :test.0:j 1
    45 jump *label2 always
    46 label *label4
-    * set *tmp0 null
    47 label *label1
    48 assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"
    49 stop

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
    10 setaddr :d.0*retaddr *label6
    11 call *label0 :d.0*retval
    12 label *label6
-    * set *tmp2 :d.0*retval
-    * op lessThanEq *tmp3 *tmp1 *tmp2
+   13 op lessThanEq *tmp3 *tmp1 :d.0*retval
    14 jump *label4 equal *tmp3 false
    15 set :d.0:n :test.0:i
    16 setaddr :d.0*retaddr *label7
    17 call *label0 :d.0*retval
    18 label *label7
-    * set *tmp4 :d.0*retval
-    * op equal *tmp5 *tmp4 4
+   19 op equal *tmp5 :d.0*retval 4
    20 jump *label8 equal *tmp5 false
    21 jump *label3 always
    22 jump *label9 always
 
    30 setaddr :d.0*retaddr *label10
    31 call *label0 :d.0*retval
    32 label *label10
-    * set *tmp7 :d.0*retval
-    * op equal *tmp8 *tmp7 10
+   33 op equal *tmp8 :d.0*retval 10
    34 jump *label11 equal *tmp8 false
    35 jump *label4 always
    36 jump *label12 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-3 instructions):
 
    10 setaddr :d.0*retaddr *label6
    11 call *label0 :d.0*retval
    12 label *label6
-    * op lessThanEq *tmp3 *tmp1 :d.0*retval
-    * jump *label4 equal *tmp3 false
+   13 jump *label4 greaterThan *tmp1 :d.0*retval
    14 set :d.0:n :test.0:i
    15 setaddr :d.0*retaddr *label7
    16 call *label0 :d.0*retval
    17 label *label7
-    * op equal *tmp5 :d.0*retval 4
-    * jump *label8 equal *tmp5 false
+   18 jump *label8 notEqual :d.0*retval 4
    19 jump *label3 always
    20 jump *label9 always
    21 label *label8
 
    28 setaddr :d.0*retaddr *label10
    29 call *label0 :d.0*retval
    30 label *label10
-    * op equal *tmp8 :d.0*retval 10
-    * jump *label11 equal *tmp8 false
+   31 jump *label11 notEqual :d.0*retval 10
    32 jump *label4 always
    33 jump *label12 always
    34 label *label11

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    17 label *label7
    18 jump *label8 notEqual :d.0*retval 4
    19 jump *label3 always
-    * jump *label9 always
    20 label *label8
    21 label *label9
    22 print :test.0:i
 
    29 label *label10
    30 jump *label11 notEqual :d.0*retval 10
    31 jump *label4 always
-    * jump *label12 always
    32 label *label11
    33 label *label12
    34 label *label3

Modifications by Replicate loop condition at line 4:5 (+7 instructions):
 
    11 call *label0 :d.0*retval
    12 label *label6
    13 jump *label4 greaterThan *tmp1 :d.0*retval
+   14 label *label14
    15 set :d.0:n :test.0:i
    16 setaddr :d.0*retaddr *label7
    17 call *label0 :d.0*retval
 
    35 label *label3
    36 op add :test.0:i :test.0:i 2
    37 op add :test.0:j :test.0:j 1
-    * jump *label2 always
+   38 set :d.0:n :test.0:i
+   39 setaddr :d.0*retaddr *label15
+   40 call *label0 :d.0*retval
+   41 label *label15
+   42 set *tmp1 :d.0*retval
+   43 set :d.0:n :test.0:j
+   44 setaddr :d.0*retaddr *label16
+   45 call *label0 :d.0*retval
+   46 label *label16
+   47 jump *label14 lessThanEq *tmp1 :d.0*retval
    48 label *label4
    49 label *label1
    50 assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set :test.0:i 0
     2 set :test.0:j 10
     3 label *label2
-    * set :d.0:n :test.0:i
+    4 set :d.0:n 0
     5 setaddr :d.0*retaddr *label5
     6 call *label0 :d.0*retval
     7 label *label5
     8 set *tmp1 :d.0*retval
-    * set :d.0:n :test.0:j
+    9 set :d.0:n 10
    10 setaddr :d.0*retaddr *label6
    11 call *label0 :d.0*retval
    12 label *label6

Modifications by Final phase, Jump Straightening, iteration 1 (-2 instructions):
 
    16 setaddr :d.0*retaddr *label7
    17 call *label0 :d.0*retval
    18 label *label7
-    * jump *label8 notEqual :d.0*retval 4
-    * jump *label3 always
+   19 jump *label3 equal :d.0*retval 4
    20 label *label8
    21 label *label9
    22 print :test.0:i
 
    27 setaddr :d.0*retaddr *label10
    28 call *label0 :d.0*retval
    29 label *label10
-    * jump *label11 notEqual :d.0*retval 10
-    * jump *label4 always
+   30 jump *label4 equal :d.0*retval 10
    31 label *label11
    32 label *label12
    33 label *label3

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    52 set :d.0*retval :d.0:n
    53 label *label13
    54 return :d.0*retaddr
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-1 instructions):
 
    20 label *label8
    21 label *label9
    22 print :test.0:i
-    * print "|"
-    * print :test.0:j
-    * print "|"
+   23 print "|{0}|"
+   24 format :test.0:j
    25 set :d.0:n :test.0:i
    26 setaddr :d.0*retaddr *label10
    27 call *label0 :d.0*retval

Final code before resolving virtual instructions:

assertflush
set :test.0:i 0
set :test.0:j 10
set :d.0:n 0
setaddr :d.0*retaddr *label5
call *label0 :d.0*retval
label *label5
set *tmp1 :d.0*retval
set :d.0:n 10
setaddr :d.0*retaddr *label6
call *label0 :d.0*retval
label *label6
jump *label4 greaterThan *tmp1 :d.0*retval
label *label14
set :d.0:n :test.0:i
setaddr :d.0*retaddr *label7
call *label0 :d.0*retval
label *label7
jump *label3 equal :d.0*retval 4
print :test.0:i
print "|{0}|"
format :test.0:j
set :d.0:n :test.0:i
setaddr :d.0*retaddr *label10
call *label0 :d.0*retval
label *label10
jump *label4 equal :d.0*retval 10
label *label3
op add :test.0:i :test.0:i 2
op add :test.0:j :test.0:j 1
set :d.0:n :test.0:i
setaddr :d.0*retaddr *label15
call *label0 :d.0*retval
label *label15
set *tmp1 :d.0*retval
set :d.0:n :test.0:j
setaddr :d.0*retaddr *label16
call *label0 :d.0*retval
label *label16
jump *label14 lessThanEq *tmp1 :d.0*retval
label *label4
assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"
stop
end
label *label0
set :d.0*retval :d.0:n
return :d.0*retaddr
