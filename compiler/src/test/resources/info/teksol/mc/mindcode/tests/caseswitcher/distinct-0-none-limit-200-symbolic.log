   117 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    50 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    24 instructions eliminated by Jump Straightening (4 iterations).
   134 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 115):
  o Convert case at line 6:5 (#2165, segments: 5)                size   +12, benefit      409.7, efficiency     34.143
  o Convert case at line 6:5 (#1403, segments: 6)                size   +13, benefit      473.5, efficiency     36.420
  o Convert case at line 6:5 (#1419, segments: 6)                size   +14, benefit      476.3, efficiency     34.025
  o Convert case at line 6:5 (#1405, segments: 6)                size   +25, benefit      476.5, efficiency     19.062
  o Convert case at line 6:5 (#1420, segments: 6, padded low)    size   +29, benefit      478.2, efficiency     16.489
  o Convert case at line 6:5 (#1406, segments: 6, padded low)    size   +40, benefit      478.4, efficiency     11.959
  o Convert case at line 6:5 (#1422, segments: 5, padded low)    size   +44, benefit      478.5, efficiency     10.874
  * Convert case at line 6:5 (#1400, segments: 4, padded low)    size   +50, benefit      479.7, efficiency      9.594 (+50 instructions)
  ! Convert case at line 6:5 (#4, segments: 1, padded both)      size  +238, benefit      498.5, efficiency      2.094

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 set :block *tmp0
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @copper-wall
+    8 jump *label6 equal :identifyBlock:block @copper-wall
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000004
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @copper-wall-large
+   14 jump *label8 equal :identifyBlock:block @copper-wall-large
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000008
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @titanium-wall
+   20 jump *label10 equal :identifyBlock:block @titanium-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000010
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall-large
+   26 jump *label12 equal :identifyBlock:block @titanium-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000020
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @plastanium-wall
+   32 jump *label14 equal :identifyBlock:block @plastanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000040
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @plastanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000080
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @thorium-wall
+   44 jump *label18 equal :identifyBlock:block @thorium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000100
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall-large
+   50 jump *label20 equal :identifyBlock:block @thorium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000200
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @phase-wall
+   56 jump *label22 equal :identifyBlock:block @phase-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000400
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @phase-wall-large
+   62 jump *label24 equal :identifyBlock:block @phase-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000800
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @surge-wall
+   68 jump *label26 equal :identifyBlock:block @surge-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @surge-wall-large
+   74 jump *label28 equal :identifyBlock:block @surge-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00002000
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @scrap-wall
+   80 jump *label30 equal :identifyBlock:block @scrap-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00004000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall-large
+   86 jump *label32 equal :identifyBlock:block @scrap-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00008000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-huge
+   92 jump *label34 equal :identifyBlock:block @scrap-wall-huge
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00010000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-gigantic
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00020000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @tungsten-wall
+  104 jump *label38 equal :identifyBlock:block @tungsten-wall
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00040000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall-large
+  110 jump *label40 equal :identifyBlock:block @tungsten-wall-large
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00080000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @beryllium-wall
+  116 jump *label42 equal :identifyBlock:block @beryllium-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00100000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall-large
+  122 jump *label44 equal :identifyBlock:block @beryllium-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00200000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @carbide-wall
+  128 jump *label46 equal :identifyBlock:block @carbide-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00400000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall-large
+  134 jump *label48 equal :identifyBlock:block @carbide-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00800000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @reinforced-surge-wall
+  140 jump *label50 equal :identifyBlock:block @reinforced-surge-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x01000000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall-large
+  146 jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   157 op and *tmp4 :total :bit
   158 jump *label53 equal *tmp4 false
   159 op or :total :total 0x800000000
-    * set *tmp5 :total
   160 jump *label54 always
   161 label *label53
   162 op or :total :total :bit
-    * set *tmp5 :total
   163 label *label54
   164 label *label1
   165 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i 240
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
     7 jump *label6 equal :identifyBlock:block @copper-wall

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-24 instructions):
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @copper-wall
-    * jump *label5 always
+    7 jump *label5 notEqual :identifyBlock:block @copper-wall
     8 label *label6
     9 set *tmp2 0x00000004
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall-large
-    * jump *label7 always
+   12 jump *label7 notEqual :identifyBlock:block @copper-wall-large
    13 label *label8
    14 set *tmp2 0x00000008
    15 jump *label4 always
    16 label *label7
-    * jump *label10 equal :identifyBlock:block @titanium-wall
-    * jump *label9 always
+   17 jump *label9 notEqual :identifyBlock:block @titanium-wall
    18 label *label10
    19 set *tmp2 0x00000010
    20 jump *label4 always
    21 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall-large
-    * jump *label11 always
+   22 jump *label11 notEqual :identifyBlock:block @titanium-wall-large
    23 label *label12
    24 set *tmp2 0x00000020
    25 jump *label4 always
    26 label *label11
-    * jump *label14 equal :identifyBlock:block @plastanium-wall
-    * jump *label13 always
+   27 jump *label13 notEqual :identifyBlock:block @plastanium-wall
    28 label *label14
    29 set *tmp2 0x00000040
    30 jump *label4 always
    31 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall-large
-    * jump *label15 always
+   32 jump *label15 notEqual :identifyBlock:block @plastanium-wall-large
    33 label *label16
    34 set *tmp2 0x00000080
    35 jump *label4 always
    36 label *label15
-    * jump *label18 equal :identifyBlock:block @thorium-wall
-    * jump *label17 always
+   37 jump *label17 notEqual :identifyBlock:block @thorium-wall
    38 label *label18
    39 set *tmp2 0x00000100
    40 jump *label4 always
    41 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall-large
-    * jump *label19 always
+   42 jump *label19 notEqual :identifyBlock:block @thorium-wall-large
    43 label *label20
    44 set *tmp2 0x00000200
    45 jump *label4 always
    46 label *label19
-    * jump *label22 equal :identifyBlock:block @phase-wall
-    * jump *label21 always
+   47 jump *label21 notEqual :identifyBlock:block @phase-wall
    48 label *label22
    49 set *tmp2 0x00000400
    50 jump *label4 always
    51 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall-large
-    * jump *label23 always
+   52 jump *label23 notEqual :identifyBlock:block @phase-wall-large
    53 label *label24
    54 set *tmp2 0x00000800
    55 jump *label4 always
    56 label *label23
-    * jump *label26 equal :identifyBlock:block @surge-wall
-    * jump *label25 always
+   57 jump *label25 notEqual :identifyBlock:block @surge-wall
    58 label *label26
    59 set *tmp2 0x00001000
    60 jump *label4 always
    61 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall-large
-    * jump *label27 always
+   62 jump *label27 notEqual :identifyBlock:block @surge-wall-large
    63 label *label28
    64 set *tmp2 0x00002000
    65 jump *label4 always
    66 label *label27
-    * jump *label30 equal :identifyBlock:block @scrap-wall
-    * jump *label29 always
+   67 jump *label29 notEqual :identifyBlock:block @scrap-wall
    68 label *label30
    69 set *tmp2 0x00004000
    70 jump *label4 always
    71 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall-large
-    * jump *label31 always
+   72 jump *label31 notEqual :identifyBlock:block @scrap-wall-large
    73 label *label32
    74 set *tmp2 0x00008000
    75 jump *label4 always
    76 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-huge
-    * jump *label33 always
+   77 jump *label33 notEqual :identifyBlock:block @scrap-wall-huge
    78 label *label34
    79 set *tmp2 0x00010000
    80 jump *label4 always
    81 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
-    * jump *label35 always
+   82 jump *label35 notEqual :identifyBlock:block @scrap-wall-gigantic
    83 label *label36
    84 set *tmp2 0x00020000
    85 jump *label4 always
    86 label *label35
-    * jump *label38 equal :identifyBlock:block @tungsten-wall
-    * jump *label37 always
+   87 jump *label37 notEqual :identifyBlock:block @tungsten-wall
    88 label *label38
    89 set *tmp2 0x00040000
    90 jump *label4 always
    91 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall-large
-    * jump *label39 always
+   92 jump *label39 notEqual :identifyBlock:block @tungsten-wall-large
    93 label *label40
    94 set *tmp2 0x00080000
    95 jump *label4 always
    96 label *label39
-    * jump *label42 equal :identifyBlock:block @beryllium-wall
-    * jump *label41 always
+   97 jump *label41 notEqual :identifyBlock:block @beryllium-wall
    98 label *label42
    99 set *tmp2 0x00100000
   100 jump *label4 always
   101 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall-large
-    * jump *label43 always
+  102 jump *label43 notEqual :identifyBlock:block @beryllium-wall-large
   103 label *label44
   104 set *tmp2 0x00200000
   105 jump *label4 always
   106 label *label43
-    * jump *label46 equal :identifyBlock:block @carbide-wall
-    * jump *label45 always
+  107 jump *label45 notEqual :identifyBlock:block @carbide-wall
   108 label *label46
   109 set *tmp2 0x00400000
   110 jump *label4 always
   111 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall-large
-    * jump *label47 always
+  112 jump *label47 notEqual :identifyBlock:block @carbide-wall-large
   113 label *label48
   114 set *tmp2 0x00800000
   115 jump *label4 always
   116 label *label47
-    * jump *label50 equal :identifyBlock:block @reinforced-surge-wall
-    * jump *label49 always
+  117 jump *label49 notEqual :identifyBlock:block @reinforced-surge-wall
   118 label *label50
   119 set *tmp2 0x01000000
   120 jump *label4 always
   121 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
-    * jump *label51 always
+  122 jump *label51 notEqual :identifyBlock:block @reinforced-surge-wall-large
   123 label *label52
   124 set *tmp2 0x02000000
   125 jump *label4 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label5 notEqual :identifyBlock:block @copper-wall
+    7 jump *label5 notEqual :block @copper-wall
     8 label *label6
     9 set *tmp2 0x00000004
    10 jump *label4 always
    11 label *label5
-    * jump *label7 notEqual :identifyBlock:block @copper-wall-large
+   12 jump *label7 notEqual :block @copper-wall-large
    13 label *label8
    14 set *tmp2 0x00000008
    15 jump *label4 always
    16 label *label7
-    * jump *label9 notEqual :identifyBlock:block @titanium-wall
+   17 jump *label9 notEqual :block @titanium-wall
    18 label *label10
    19 set *tmp2 0x00000010
    20 jump *label4 always
    21 label *label9
-    * jump *label11 notEqual :identifyBlock:block @titanium-wall-large
+   22 jump *label11 notEqual :block @titanium-wall-large
    23 label *label12
    24 set *tmp2 0x00000020
    25 jump *label4 always
    26 label *label11
-    * jump *label13 notEqual :identifyBlock:block @plastanium-wall
+   27 jump *label13 notEqual :block @plastanium-wall
    28 label *label14
    29 set *tmp2 0x00000040
    30 jump *label4 always
    31 label *label13
-    * jump *label15 notEqual :identifyBlock:block @plastanium-wall-large
+   32 jump *label15 notEqual :block @plastanium-wall-large
    33 label *label16
    34 set *tmp2 0x00000080
    35 jump *label4 always
    36 label *label15
-    * jump *label17 notEqual :identifyBlock:block @thorium-wall
+   37 jump *label17 notEqual :block @thorium-wall
    38 label *label18
    39 set *tmp2 0x00000100
    40 jump *label4 always
    41 label *label17
-    * jump *label19 notEqual :identifyBlock:block @thorium-wall-large
+   42 jump *label19 notEqual :block @thorium-wall-large
    43 label *label20
    44 set *tmp2 0x00000200
    45 jump *label4 always
    46 label *label19
-    * jump *label21 notEqual :identifyBlock:block @phase-wall
+   47 jump *label21 notEqual :block @phase-wall
    48 label *label22
    49 set *tmp2 0x00000400
    50 jump *label4 always
    51 label *label21
-    * jump *label23 notEqual :identifyBlock:block @phase-wall-large
+   52 jump *label23 notEqual :block @phase-wall-large
    53 label *label24
    54 set *tmp2 0x00000800
    55 jump *label4 always
    56 label *label23
-    * jump *label25 notEqual :identifyBlock:block @surge-wall
+   57 jump *label25 notEqual :block @surge-wall
    58 label *label26
    59 set *tmp2 0x00001000
    60 jump *label4 always
    61 label *label25
-    * jump *label27 notEqual :identifyBlock:block @surge-wall-large
+   62 jump *label27 notEqual :block @surge-wall-large
    63 label *label28
    64 set *tmp2 0x00002000
    65 jump *label4 always
    66 label *label27
-    * jump *label29 notEqual :identifyBlock:block @scrap-wall
+   67 jump *label29 notEqual :block @scrap-wall
    68 label *label30
    69 set *tmp2 0x00004000
    70 jump *label4 always
    71 label *label29
-    * jump *label31 notEqual :identifyBlock:block @scrap-wall-large
+   72 jump *label31 notEqual :block @scrap-wall-large
    73 label *label32
    74 set *tmp2 0x00008000
    75 jump *label4 always
    76 label *label31
-    * jump *label33 notEqual :identifyBlock:block @scrap-wall-huge
+   77 jump *label33 notEqual :block @scrap-wall-huge
    78 label *label34
    79 set *tmp2 0x00010000
    80 jump *label4 always
    81 label *label33
-    * jump *label35 notEqual :identifyBlock:block @scrap-wall-gigantic
+   82 jump *label35 notEqual :block @scrap-wall-gigantic
    83 label *label36
    84 set *tmp2 0x00020000
    85 jump *label4 always
    86 label *label35
-    * jump *label37 notEqual :identifyBlock:block @tungsten-wall
+   87 jump *label37 notEqual :block @tungsten-wall
    88 label *label38
    89 set *tmp2 0x00040000
    90 jump *label4 always
    91 label *label37
-    * jump *label39 notEqual :identifyBlock:block @tungsten-wall-large
+   92 jump *label39 notEqual :block @tungsten-wall-large
    93 label *label40
    94 set *tmp2 0x00080000
    95 jump *label4 always
    96 label *label39
-    * jump *label41 notEqual :identifyBlock:block @beryllium-wall
+   97 jump *label41 notEqual :block @beryllium-wall
    98 label *label42
    99 set *tmp2 0x00100000
   100 jump *label4 always
   101 label *label41
-    * jump *label43 notEqual :identifyBlock:block @beryllium-wall-large
+  102 jump *label43 notEqual :block @beryllium-wall-large
   103 label *label44
   104 set *tmp2 0x00200000
   105 jump *label4 always
   106 label *label43
-    * jump *label45 notEqual :identifyBlock:block @carbide-wall
+  107 jump *label45 notEqual :block @carbide-wall
   108 label *label46
   109 set *tmp2 0x00400000
   110 jump *label4 always
   111 label *label45
-    * jump *label47 notEqual :identifyBlock:block @carbide-wall-large
+  112 jump *label47 notEqual :block @carbide-wall-large
   113 label *label48
   114 set *tmp2 0x00800000
   115 jump *label4 always
   116 label *label47
-    * jump *label49 notEqual :identifyBlock:block @reinforced-surge-wall
+  117 jump *label49 notEqual :block @reinforced-surge-wall
   118 label *label50
   119 set *tmp2 0x01000000
   120 jump *label4 always
   121 label *label49
-    * jump *label51 notEqual :identifyBlock:block @reinforced-surge-wall-large
+  122 jump *label51 notEqual :block @reinforced-surge-wall-large
   123 label *label52
   124 set *tmp2 0x02000000
   125 jump *label4 always
 
   128 label *label4
   129 set *tmp1 *tmp2
   130 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  131 set :bit *tmp2
+  132 op and *tmp4 :total *tmp1
   133 jump *label53 equal *tmp4 false
   134 op or :total :total 0x800000000
   135 jump *label54 always
   136 label *label53
-    * op or :total :total :bit
+  137 op or :total :total *tmp1
   138 label *label54
   139 label *label1
   140 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 jump *label2 greaterThanEq :i 240
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     6 jump *label5 notEqual :block @copper-wall
     7 label *label6
     8 set *tmp2 0x00000004
 
   127 label *label4
   128 set *tmp1 *tmp2
   129 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  130 op and *tmp4 :total *tmp2
   131 jump *label53 equal *tmp4 false
   132 op or :total :total 0x800000000
   133 jump *label54 always
   134 label *label53
-    * op or :total :total *tmp1
+  135 op or :total :total *tmp2
   136 label *label54
   137 label *label1
   138 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   125 label *label51
   126 set *tmp2 0
   127 label *label4
-    * set *tmp1 *tmp2
   128 label *label3
   129 op and *tmp4 :total *tmp2
   130 jump *label53 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i 240
+    3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 jump *label5 notEqual :block @copper-wall
 
   135 label *label54
   136 label *label1
   137 op add :i :i 1
-    * jump *label0 always
+  138 jump *label55 lessThan :i 240
   139 label *label2
   140 assertequals 0x03FFFFFC :total "Test selected blocks"
   141 end

Modifications by Convert case at line 6:5 (#1400, segments: 4, padded low) (+50 instructions):
 
     3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * jump *label5 notEqual :block @copper-wall
+    6 sensor *tmp6 :block @id
+    7 jump *label57 greaterThanEq *tmp6 203
+    8 jump *label56 greaterThanEq *tmp6 35
+    9 multijump *label58 *tmp6 0 (m:*label93)
+   10 multilabel *label58 (m:*label93)
+   11 jump *label56 always
+   12 multilabel *label59 (m:*label93)
+   13 jump *label56 always
+   14 multilabel *label60 (m:*label93)
+   15 jump *label56 always
+   16 multilabel *label61 (m:*label93)
+   17 jump *label56 always
+   18 multilabel *label62 (m:*label93)
+   19 jump *label56 always
+   20 multilabel *label63 (m:*label93)
+   21 jump *label56 always
+   22 multilabel *label64 (m:*label93)
+   23 jump *label56 always
+   24 multilabel *label65 (m:*label93)
+   25 jump *label56 always
+   26 multilabel *label66 (m:*label93)
+   27 jump *label56 always
+   28 multilabel *label67 (m:*label93)
+   29 jump *label56 always
+   30 multilabel *label68 (m:*label93)
+   31 jump *label56 always
+   32 multilabel *label69 (m:*label93)
+   33 jump *label56 always
+   34 multilabel *label70 (m:*label93)
+   35 jump *label56 always
+   36 multilabel *label71 (m:*label93)
+   37 jump *label56 always
+   38 multilabel *label72 (m:*label93)
+   39 jump *label56 always
+   40 multilabel *label73 (m:*label93)
+   41 jump *label56 always
+   42 multilabel *label74 (m:*label93)
+   43 jump *label56 always
+   44 multilabel *label75 (m:*label93)
+   45 jump *label6 always
+   46 multilabel *label76 (m:*label93)
+   47 jump *label8 always
+   48 multilabel *label77 (m:*label93)
+   49 jump *label10 always
+   50 multilabel *label78 (m:*label93)
+   51 jump *label12 always
+   52 multilabel *label79 (m:*label93)
+   53 jump *label14 always
+   54 multilabel *label80 (m:*label93)
+   55 jump *label16 always
+   56 multilabel *label81 (m:*label93)
+   57 jump *label18 always
+   58 multilabel *label82 (m:*label93)
+   59 jump *label20 always
+   60 multilabel *label83 (m:*label93)
+   61 jump *label22 always
+   62 multilabel *label84 (m:*label93)
+   63 jump *label24 always
+   64 multilabel *label85 (m:*label93)
+   65 jump *label26 always
+   66 multilabel *label86 (m:*label93)
+   67 jump *label28 always
+   68 multilabel *label87 (m:*label93)
+   69 jump *label56 always
+   70 multilabel *label88 (m:*label93)
+   71 jump *label56 always
+   72 multilabel *label89 (m:*label93)
+   73 jump *label30 always
+   74 multilabel *label90 (m:*label93)
+   75 jump *label32 always
+   76 multilabel *label91 (m:*label93)
+   77 jump *label34 always
+   78 multilabel *label92 (m:*label93)
+   79 jump *label36 always
+   80 label *label57
+   81 jump *label56 greaterThanEq *tmp6 235
+   82 jump *label38 lessThan *tmp6 204
+   83 multijump *label94 *tmp6 204 (m:*label125)
+   84 multilabel *label94 (m:*label125)
+   85 jump *label40 always
+   86 multilabel *label95 (m:*label125)
+   87 jump *label56 always
+   88 multilabel *label96 (m:*label125)
+   89 jump *label42 always
+   90 multilabel *label97 (m:*label125)
+   91 jump *label44 always
+   92 multilabel *label98 (m:*label125)
+   93 jump *label56 always
+   94 multilabel *label99 (m:*label125)
+   95 jump *label56 always
+   96 multilabel *label100 (m:*label125)
+   97 jump *label56 always
+   98 multilabel *label101 (m:*label125)
+   99 jump *label56 always
+  100 multilabel *label102 (m:*label125)
+  101 jump *label56 always
+  102 multilabel *label103 (m:*label125)
+  103 jump *label56 always
+  104 multilabel *label104 (m:*label125)
+  105 jump *label56 always
+  106 multilabel *label105 (m:*label125)
+  107 jump *label56 always
+  108 multilabel *label106 (m:*label125)
+  109 jump *label56 always
+  110 multilabel *label107 (m:*label125)
+  111 jump *label56 always
+  112 multilabel *label108 (m:*label125)
+  113 jump *label56 always
+  114 multilabel *label109 (m:*label125)
+  115 jump *label56 always
+  116 multilabel *label110 (m:*label125)
+  117 jump *label46 always
+  118 multilabel *label111 (m:*label125)
+  119 jump *label48 always
+  120 multilabel *label112 (m:*label125)
+  121 jump *label56 always
+  122 multilabel *label113 (m:*label125)
+  123 jump *label56 always
+  124 multilabel *label114 (m:*label125)
+  125 jump *label56 always
+  126 multilabel *label115 (m:*label125)
+  127 jump *label50 always
+  128 multilabel *label116 (m:*label125)
+  129 jump *label56 always
+  130 multilabel *label117 (m:*label125)
+  131 jump *label56 always
+  132 multilabel *label118 (m:*label125)
+  133 jump *label56 always
+  134 multilabel *label119 (m:*label125)
+  135 jump *label56 always
+  136 multilabel *label120 (m:*label125)
+  137 jump *label56 always
+  138 multilabel *label121 (m:*label125)
+  139 jump *label56 always
+  140 multilabel *label122 (m:*label125)
+  141 jump *label56 always
+  142 multilabel *label123 (m:*label125)
+  143 jump *label56 always
+  144 multilabel *label124 (m:*label125)
+  145 jump *label52 always
   146 label *label6
   147 set *tmp2 0x00000004
   148 jump *label4 always
   149 label *label5
-    * jump *label7 notEqual :block @copper-wall-large
   150 label *label8
   151 set *tmp2 0x00000008
   152 jump *label4 always
   153 label *label7
-    * jump *label9 notEqual :block @titanium-wall
   154 label *label10
   155 set *tmp2 0x00000010
   156 jump *label4 always
   157 label *label9
-    * jump *label11 notEqual :block @titanium-wall-large
   158 label *label12
   159 set *tmp2 0x00000020
   160 jump *label4 always
   161 label *label11
-    * jump *label13 notEqual :block @plastanium-wall
   162 label *label14
   163 set *tmp2 0x00000040
   164 jump *label4 always
   165 label *label13
-    * jump *label15 notEqual :block @plastanium-wall-large
   166 label *label16
   167 set *tmp2 0x00000080
   168 jump *label4 always
   169 label *label15
-    * jump *label17 notEqual :block @thorium-wall
   170 label *label18
   171 set *tmp2 0x00000100
   172 jump *label4 always
   173 label *label17
-    * jump *label19 notEqual :block @thorium-wall-large
   174 label *label20
   175 set *tmp2 0x00000200
   176 jump *label4 always
   177 label *label19
-    * jump *label21 notEqual :block @phase-wall
   178 label *label22
   179 set *tmp2 0x00000400
   180 jump *label4 always
   181 label *label21
-    * jump *label23 notEqual :block @phase-wall-large
   182 label *label24
   183 set *tmp2 0x00000800
   184 jump *label4 always
   185 label *label23
-    * jump *label25 notEqual :block @surge-wall
   186 label *label26
   187 set *tmp2 0x00001000
   188 jump *label4 always
   189 label *label25
-    * jump *label27 notEqual :block @surge-wall-large
   190 label *label28
   191 set *tmp2 0x00002000
   192 jump *label4 always
   193 label *label27
-    * jump *label29 notEqual :block @scrap-wall
   194 label *label30
   195 set *tmp2 0x00004000
   196 jump *label4 always
   197 label *label29
-    * jump *label31 notEqual :block @scrap-wall-large
   198 label *label32
   199 set *tmp2 0x00008000
   200 jump *label4 always
   201 label *label31
-    * jump *label33 notEqual :block @scrap-wall-huge
   202 label *label34
   203 set *tmp2 0x00010000
   204 jump *label4 always
   205 label *label33
-    * jump *label35 notEqual :block @scrap-wall-gigantic
   206 label *label36
   207 set *tmp2 0x00020000
   208 jump *label4 always
   209 label *label35
-    * jump *label37 notEqual :block @tungsten-wall
   210 label *label38
   211 set *tmp2 0x00040000
   212 jump *label4 always
   213 label *label37
-    * jump *label39 notEqual :block @tungsten-wall-large
   214 label *label40
   215 set *tmp2 0x00080000
   216 jump *label4 always
   217 label *label39
-    * jump *label41 notEqual :block @beryllium-wall
   218 label *label42
   219 set *tmp2 0x00100000
   220 jump *label4 always
   221 label *label41
-    * jump *label43 notEqual :block @beryllium-wall-large
   222 label *label44
   223 set *tmp2 0x00200000
   224 jump *label4 always
   225 label *label43
-    * jump *label45 notEqual :block @carbide-wall
   226 label *label46
   227 set *tmp2 0x00400000
   228 jump *label4 always
   229 label *label45
-    * jump *label47 notEqual :block @carbide-wall-large
   230 label *label48
   231 set *tmp2 0x00800000
   232 jump *label4 always
   233 label *label47
-    * jump *label49 notEqual :block @reinforced-surge-wall
   234 label *label50
   235 set *tmp2 0x01000000
   236 jump *label4 always
   237 label *label49
-    * jump *label51 notEqual :block @reinforced-surge-wall-large
   238 label *label52
   239 set *tmp2 0x02000000
   240 jump *label4 always
   241 label *label51
+  242 label *label56
   243 set *tmp2 0
   244 label *label4
   245 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label55
     3 lookup block :block :i
     4 # "Function: def identifyBlock(in block)"
 
   145 label *label6
   146 set *tmp2 0x00000004
   147 jump *label4 always
-    * label *label5
   148 label *label8
   149 set *tmp2 0x00000008
   150 jump *label4 always
-    * label *label7
   151 label *label10
   152 set *tmp2 0x00000010
   153 jump *label4 always
-    * label *label9
   154 label *label12
   155 set *tmp2 0x00000020
   156 jump *label4 always
-    * label *label11
   157 label *label14
   158 set *tmp2 0x00000040
   159 jump *label4 always
-    * label *label13
   160 label *label16
   161 set *tmp2 0x00000080
   162 jump *label4 always
-    * label *label15
   163 label *label18
   164 set *tmp2 0x00000100
   165 jump *label4 always
-    * label *label17
   166 label *label20
   167 set *tmp2 0x00000200
   168 jump *label4 always
-    * label *label19
   169 label *label22
   170 set *tmp2 0x00000400
   171 jump *label4 always
-    * label *label21
   172 label *label24
   173 set *tmp2 0x00000800
   174 jump *label4 always
-    * label *label23
   175 label *label26
   176 set *tmp2 0x00001000
   177 jump *label4 always
-    * label *label25
   178 label *label28
   179 set *tmp2 0x00002000
   180 jump *label4 always
-    * label *label27
   181 label *label30
   182 set *tmp2 0x00004000
   183 jump *label4 always
-    * label *label29
   184 label *label32
   185 set *tmp2 0x00008000
   186 jump *label4 always
-    * label *label31
   187 label *label34
   188 set *tmp2 0x00010000
   189 jump *label4 always
-    * label *label33
   190 label *label36
   191 set *tmp2 0x00020000
   192 jump *label4 always
-    * label *label35
   193 label *label38
   194 set *tmp2 0x00040000
   195 jump *label4 always
-    * label *label37
   196 label *label40
   197 set *tmp2 0x00080000
   198 jump *label4 always
-    * label *label39
   199 label *label42
   200 set *tmp2 0x00100000
   201 jump *label4 always
-    * label *label41
   202 label *label44
   203 set *tmp2 0x00200000
   204 jump *label4 always
-    * label *label43
   205 label *label46
   206 set *tmp2 0x00400000
   207 jump *label4 always
-    * label *label45
   208 label *label48
   209 set *tmp2 0x00800000
   210 jump *label4 always
-    * label *label47
   211 label *label50
   212 set *tmp2 0x01000000
   213 jump *label4 always
-    * label *label49
   214 label *label52
   215 set *tmp2 0x02000000
   216 jump *label4 always
-    * label *label51
   217 label *label56
   218 set *tmp2 0
   219 label *label4
-    * label *label3
   220 op and *tmp4 :total *tmp2
   221 jump *label53 equal *tmp4 false
   222 op or :total :total 0x800000000
 
   224 label *label53
   225 op or :total :total *tmp2
   226 label *label54
-    * label *label1
   227 op add :i :i 1
   228 jump *label55 lessThan :i 240
-    * label *label2
   229 assertequals 0x03FFFFFC :total "Test selected blocks"
   230 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   227 op add :i :i 1
   228 jump *label55 lessThan :i 240
   229 assertequals 0x03FFFFFC :total "Test selected blocks"
-    * end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label55
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label57 greaterThanEq *tmp6 203
jump *label56 greaterThanEq *tmp6 35
multijump *label58 *tmp6 0
multilabel *label58
jump *label56 always
multilabel *label59
jump *label56 always
multilabel *label60
jump *label56 always
multilabel *label61
jump *label56 always
multilabel *label62
jump *label56 always
multilabel *label63
jump *label56 always
multilabel *label64
jump *label56 always
multilabel *label65
jump *label56 always
multilabel *label66
jump *label56 always
multilabel *label67
jump *label56 always
multilabel *label68
jump *label56 always
multilabel *label69
jump *label56 always
multilabel *label70
jump *label56 always
multilabel *label71
jump *label56 always
multilabel *label72
jump *label56 always
multilabel *label73
jump *label56 always
multilabel *label74
jump *label56 always
multilabel *label75
jump *label6 always
multilabel *label76
jump *label8 always
multilabel *label77
jump *label10 always
multilabel *label78
jump *label12 always
multilabel *label79
jump *label14 always
multilabel *label80
jump *label16 always
multilabel *label81
jump *label18 always
multilabel *label82
jump *label20 always
multilabel *label83
jump *label22 always
multilabel *label84
jump *label24 always
multilabel *label85
jump *label26 always
multilabel *label86
jump *label28 always
multilabel *label87
jump *label56 always
multilabel *label88
jump *label56 always
multilabel *label89
jump *label30 always
multilabel *label90
jump *label32 always
multilabel *label91
jump *label34 always
multilabel *label92
jump *label36 always
label *label57
jump *label56 greaterThanEq *tmp6 235
jump *label38 lessThan *tmp6 204
multijump *label94 *tmp6 204
multilabel *label94
jump *label40 always
multilabel *label95
jump *label56 always
multilabel *label96
jump *label42 always
multilabel *label97
jump *label44 always
multilabel *label98
jump *label56 always
multilabel *label99
jump *label56 always
multilabel *label100
jump *label56 always
multilabel *label101
jump *label56 always
multilabel *label102
jump *label56 always
multilabel *label103
jump *label56 always
multilabel *label104
jump *label56 always
multilabel *label105
jump *label56 always
multilabel *label106
jump *label56 always
multilabel *label107
jump *label56 always
multilabel *label108
jump *label56 always
multilabel *label109
jump *label56 always
multilabel *label110
jump *label46 always
multilabel *label111
jump *label48 always
multilabel *label112
jump *label56 always
multilabel *label113
jump *label56 always
multilabel *label114
jump *label56 always
multilabel *label115
jump *label50 always
multilabel *label116
jump *label56 always
multilabel *label117
jump *label56 always
multilabel *label118
jump *label56 always
multilabel *label119
jump *label56 always
multilabel *label120
jump *label56 always
multilabel *label121
jump *label56 always
multilabel *label122
jump *label56 always
multilabel *label123
jump *label56 always
multilabel *label124
jump *label52 always
label *label6
set *tmp2 0x00000004
jump *label4 always
label *label8
set *tmp2 0x00000008
jump *label4 always
label *label10
set *tmp2 0x00000010
jump *label4 always
label *label12
set *tmp2 0x00000020
jump *label4 always
label *label14
set *tmp2 0x00000040
jump *label4 always
label *label16
set *tmp2 0x00000080
jump *label4 always
label *label18
set *tmp2 0x00000100
jump *label4 always
label *label20
set *tmp2 0x00000200
jump *label4 always
label *label22
set *tmp2 0x00000400
jump *label4 always
label *label24
set *tmp2 0x00000800
jump *label4 always
label *label26
set *tmp2 0x00001000
jump *label4 always
label *label28
set *tmp2 0x00002000
jump *label4 always
label *label30
set *tmp2 0x00004000
jump *label4 always
label *label32
set *tmp2 0x00008000
jump *label4 always
label *label34
set *tmp2 0x00010000
jump *label4 always
label *label36
set *tmp2 0x00020000
jump *label4 always
label *label38
set *tmp2 0x00040000
jump *label4 always
label *label40
set *tmp2 0x00080000
jump *label4 always
label *label42
set *tmp2 0x00100000
jump *label4 always
label *label44
set *tmp2 0x00200000
jump *label4 always
label *label46
set *tmp2 0x00400000
jump *label4 always
label *label48
set *tmp2 0x00800000
jump *label4 always
label *label50
set *tmp2 0x01000000
jump *label4 always
label *label52
set *tmp2 0x02000000
jump *label4 always
label *label56
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label53 equal *tmp4 false
op or :total :total 0x800000000
jump *label54 always
label *label53
op or :total :total *tmp2
label *label54
op add :i :i 1
jump *label55 lessThan :i 240
assertequals 0x03FFFFFC :total "Test selected blocks"
