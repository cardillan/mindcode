   121 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    16 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    97 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  * Convert case at line 11:5 (segments: 32)                     size   -16, benefit     1091.8, efficiency   Infinity (-16 instructions)
  ! Convert case at line 11:5 (segments: 6)                      size    +1, benefit     1092.1, efficiency   1092.115
  ! Convert case at line 11:5 (segments: 4)                      size   +22, benefit     1099.2, efficiency     49.965
  ! Convert case at line 11:5 (segments: 1, padded high)         size  +213, benefit     1114.8, efficiency      5.234

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     4 lookup block *tmp0 :i
     5 set :block *tmp0
     6 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @graphite-press
+    7 jump *label6 equal :identifyBlock:block @graphite-press
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000002
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal *tmp3 @copper-wall
+   13 jump *label8 equal :identifyBlock:block @copper-wall
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000004
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal *tmp3 @copper-wall-large
+   19 jump *label10 equal :identifyBlock:block @copper-wall-large
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000008
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall
+   25 jump *label12 equal :identifyBlock:block @titanium-wall
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000010
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall-large
+   31 jump *label14 equal :identifyBlock:block @titanium-wall-large
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000020
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall
+   37 jump *label16 equal :identifyBlock:block @plastanium-wall
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000040
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall-large
+   43 jump *label18 equal :identifyBlock:block @plastanium-wall-large
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000080
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall
+   49 jump *label20 equal :identifyBlock:block @thorium-wall
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000100
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall-large
+   55 jump *label22 equal :identifyBlock:block @thorium-wall-large
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000200
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal *tmp3 @phase-wall
+   61 jump *label24 equal :identifyBlock:block @phase-wall
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000400
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal *tmp3 @phase-wall-large
+   67 jump *label26 equal :identifyBlock:block @phase-wall-large
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000800
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal *tmp3 @surge-wall
+   73 jump *label28 equal :identifyBlock:block @surge-wall
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00001000
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal *tmp3 @surge-wall-large
+   79 jump *label30 equal :identifyBlock:block @surge-wall-large
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00002000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall
+   85 jump *label32 equal :identifyBlock:block @scrap-wall
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00004000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-large
+   91 jump *label34 equal :identifyBlock:block @scrap-wall-large
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00008000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-huge
+   97 jump *label36 equal :identifyBlock:block @scrap-wall-huge
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00010000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-gigantic
+  103 jump *label38 equal :identifyBlock:block @scrap-wall-gigantic
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00020000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall
+  109 jump *label40 equal :identifyBlock:block @tungsten-wall
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00040000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall-large
+  115 jump *label42 equal :identifyBlock:block @tungsten-wall-large
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00080000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall
+  121 jump *label44 equal :identifyBlock:block @beryllium-wall
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00100000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall-large
+  127 jump *label46 equal :identifyBlock:block @beryllium-wall-large
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00200000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall
+  133 jump *label48 equal :identifyBlock:block @carbide-wall
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00400000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall-large
+  139 jump *label50 equal :identifyBlock:block @carbide-wall-large
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00800000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall
+  145 jump *label52 equal :identifyBlock:block @reinforced-surge-wall
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x01000000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall-large
+  151 jump *label54 equal :identifyBlock:block @reinforced-surge-wall-large
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   162 op and *tmp4 :total :bit
   163 jump *label55 equal *tmp4 false
   164 op or :total :total 0x800000000
-    * set *tmp5 :total
   165 jump *label56 always
   166 label *label55
   167 op or :total :total :bit
-    * set *tmp5 :total
   168 label *label56
   169 label *label1
   170 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 set :identifyBlock:block :block
     6 jump *label6 equal :identifyBlock:block @graphite-press
     7 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @graphite-press
+    6 jump *label6 equal :block @graphite-press
     7 jump *label5 always
     8 label *label6
     9 set *tmp2 0x00000002
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall
+   12 jump *label8 equal :block @copper-wall
    13 jump *label7 always
    14 label *label8
    15 set *tmp2 0x00000004
    16 jump *label4 always
    17 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall-large
+   18 jump *label10 equal :block @copper-wall-large
    19 jump *label9 always
    20 label *label10
    21 set *tmp2 0x00000008
    22 jump *label4 always
    23 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall
+   24 jump *label12 equal :block @titanium-wall
    25 jump *label11 always
    26 label *label12
    27 set *tmp2 0x00000010
    28 jump *label4 always
    29 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall-large
+   30 jump *label14 equal :block @titanium-wall-large
    31 jump *label13 always
    32 label *label14
    33 set *tmp2 0x00000020
    34 jump *label4 always
    35 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall
+   36 jump *label16 equal :block @plastanium-wall
    37 jump *label15 always
    38 label *label16
    39 set *tmp2 0x00000040
    40 jump *label4 always
    41 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall-large
+   42 jump *label18 equal :block @plastanium-wall-large
    43 jump *label17 always
    44 label *label18
    45 set *tmp2 0x00000080
    46 jump *label4 always
    47 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall
+   48 jump *label20 equal :block @thorium-wall
    49 jump *label19 always
    50 label *label20
    51 set *tmp2 0x00000100
    52 jump *label4 always
    53 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall-large
+   54 jump *label22 equal :block @thorium-wall-large
    55 jump *label21 always
    56 label *label22
    57 set *tmp2 0x00000200
    58 jump *label4 always
    59 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall
+   60 jump *label24 equal :block @phase-wall
    61 jump *label23 always
    62 label *label24
    63 set *tmp2 0x00000400
    64 jump *label4 always
    65 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall-large
+   66 jump *label26 equal :block @phase-wall-large
    67 jump *label25 always
    68 label *label26
    69 set *tmp2 0x00000800
    70 jump *label4 always
    71 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall
+   72 jump *label28 equal :block @surge-wall
    73 jump *label27 always
    74 label *label28
    75 set *tmp2 0x00001000
    76 jump *label4 always
    77 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall-large
+   78 jump *label30 equal :block @surge-wall-large
    79 jump *label29 always
    80 label *label30
    81 set *tmp2 0x00002000
    82 jump *label4 always
    83 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall
+   84 jump *label32 equal :block @scrap-wall
    85 jump *label31 always
    86 label *label32
    87 set *tmp2 0x00004000
    88 jump *label4 always
    89 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-large
+   90 jump *label34 equal :block @scrap-wall-large
    91 jump *label33 always
    92 label *label34
    93 set *tmp2 0x00008000
    94 jump *label4 always
    95 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-huge
+   96 jump *label36 equal :block @scrap-wall-huge
    97 jump *label35 always
    98 label *label36
    99 set *tmp2 0x00010000
   100 jump *label4 always
   101 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-gigantic
+  102 jump *label38 equal :block @scrap-wall-gigantic
   103 jump *label37 always
   104 label *label38
   105 set *tmp2 0x00020000
   106 jump *label4 always
   107 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall
+  108 jump *label40 equal :block @tungsten-wall
   109 jump *label39 always
   110 label *label40
   111 set *tmp2 0x00040000
   112 jump *label4 always
   113 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall-large
+  114 jump *label42 equal :block @tungsten-wall-large
   115 jump *label41 always
   116 label *label42
   117 set *tmp2 0x00080000
   118 jump *label4 always
   119 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall
+  120 jump *label44 equal :block @beryllium-wall
   121 jump *label43 always
   122 label *label44
   123 set *tmp2 0x00100000
   124 jump *label4 always
   125 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall-large
+  126 jump *label46 equal :block @beryllium-wall-large
   127 jump *label45 always
   128 label *label46
   129 set *tmp2 0x00200000
   130 jump *label4 always
   131 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall
+  132 jump *label48 equal :block @carbide-wall
   133 jump *label47 always
   134 label *label48
   135 set *tmp2 0x00400000
   136 jump *label4 always
   137 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall-large
+  138 jump *label50 equal :block @carbide-wall-large
   139 jump *label49 always
   140 label *label50
   141 set *tmp2 0x00800000
   142 jump *label4 always
   143 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall
+  144 jump *label52 equal :block @reinforced-surge-wall
   145 jump *label51 always
   146 label *label52
   147 set *tmp2 0x01000000
   148 jump *label4 always
   149 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall-large
+  150 jump *label54 equal :block @reinforced-surge-wall-large
   151 jump *label53 always
   152 label *label54
   153 set *tmp2 0x02000000
 
   157 label *label4
   158 set *tmp1 *tmp2
   159 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  160 set :bit *tmp2
+  161 op and *tmp4 :total *tmp1
   162 jump *label55 equal *tmp4 false
   163 op or :total :total 0x800000000
   164 jump *label56 always
   165 label *label55
-    * op or :total :total :bit
+  166 op or :total :total *tmp1
   167 label *label56
   168 label *label1
   169 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
-    * set :identifyBlock:block :block
     5 jump *label6 equal :block @graphite-press
     6 jump *label5 always
     7 label *label6
 
   156 label *label4
   157 set *tmp1 *tmp2
   158 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  159 op and *tmp4 :total *tmp2
   160 jump *label55 equal *tmp4 false
   161 op or :total :total 0x800000000
   162 jump *label56 always
   163 label *label55
-    * op or :total :total *tmp1
+  164 op or :total :total *tmp2
   165 label *label56
   166 label *label1
   167 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   154 label *label53
   155 set *tmp2 0
   156 label *label4
-    * set *tmp1 *tmp2
   157 label *label3
   158 op and *tmp4 :total *tmp2
   159 jump *label55 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label57
     4 lookup block :block :i
     5 jump *label6 equal :block @graphite-press
     6 jump *label5 always
 
   164 label *label56
   165 label *label1
   166 op add :i :i 1
-    * jump *label0 always
+  167 jump *label57 lessThan :i @blockCount
   168 label *label2
   169 assertequals 0x03FFFFFE :total "Test selected blocks"
   170 end

Modifications by Convert case at line 11:5 (segments: 32) (-16 instructions):
 
     2 label *label0
     3 label *label57
     4 lookup block :block :i
-    * jump *label6 equal :block @graphite-press
-    * jump *label5 always
+    5 sensor *tmp6 :block @id
+    6 jump *label60 greaterThanEq *tmp6 203
+    7 jump *label58 greaterThanEq *tmp6 35
+    8 jump *label61 greaterThanEq *tmp6 17
+    9 jump *label58 greaterThanEq *tmp6 1
+   10 label *label59
+   11 jump *label58 strictEqual *tmp6 null
    12 label *label6
-    * set *tmp2 0x00000002
-    * jump *label4 always
+   13 set *tmp2 0x00000002
+   14 jump *label4 always
+   15 label *label61
+   16 jump *label62 greaterThanEq *tmp6 26
+   17 jump *label63 greaterThanEq *tmp6 21
+   18 jump *label64 greaterThanEq *tmp6 19
+   19 jump *label10 greaterThanEq *tmp6 18
+   20 label *label8
+   21 set *tmp2 0x00000004
+   22 jump *label4 always
+   23 label *label64
+   24 jump *label14 greaterThanEq *tmp6 20
+   25 label *label12
+   26 set *tmp2 0x00000010
+   27 jump *label4 always
+   28 label *label63
+   29 jump *label65 greaterThanEq *tmp6 23
+   30 jump *label18 greaterThanEq *tmp6 22
+   31 label *label16
+   32 set *tmp2 0x00000040
+   33 jump *label4 always
+   34 label *label65
+   35 jump *label20 lessThan *tmp6 24
+   36 jump *label24 greaterThanEq *tmp6 25
+   37 label *label22
+   38 set *tmp2 0x00000200
+   39 jump *label4 always
+   40 label *label62
+   41 jump *label66 greaterThanEq *tmp6 29
+   42 jump *label26 lessThan *tmp6 27
+   43 jump *label30 greaterThanEq *tmp6 28
+   44 label *label28
+   45 set *tmp2 0x00001000
+   46 jump *label4 always
+   47 label *label66
+   48 jump *label67 greaterThanEq *tmp6 32
+   49 jump *label58 lessThan *tmp6 31
+   50 label *label32
+   51 set *tmp2 0x00004000
+   52 jump *label4 always
+   53 label *label67
+   54 jump *label34 lessThan *tmp6 33
+   55 jump *label38 greaterThanEq *tmp6 34
+   56 label *label36
+   57 set *tmp2 0x00010000
+   58 jump *label4 always
+   59 label *label60
+   60 jump *label68 greaterThanEq *tmp6 234
+   61 jump *label69 greaterThanEq *tmp6 220
+   62 jump *label58 greaterThanEq *tmp6 208
+   63 jump *label70 greaterThanEq *tmp6 205
+   64 jump *label42 greaterThanEq *tmp6 204
+   65 label *label40
+   66 set *tmp2 0x00040000
+   67 jump *label4 always
+   68 label *label70
+   69 jump *label58 lessThan *tmp6 206
+   70 jump *label46 greaterThanEq *tmp6 207
+   71 label *label44
+   72 set *tmp2 0x00100000
+   73 jump *label4 always
+   74 label *label69
+   75 jump *label58 greaterThanEq *tmp6 226
+   76 jump *label71 greaterThanEq *tmp6 222
+   77 jump *label50 greaterThanEq *tmp6 221
+   78 label *label48
+   79 set *tmp2 0x00400000
+   80 jump *label4 always
+   81 label *label71
+   82 jump *label58 lessThan *tmp6 225
+   83 label *label52
+   84 set *tmp2 0x01000000
+   85 jump *label4 always
+   86 label *label68
+   87 jump *label58 greaterThanEq *tmp6 235
+   88 label *label54
+   89 set *tmp2 0x02000000
+   90 jump *label4 always
    91 label *label5
-    * jump *label8 equal :block @copper-wall
-    * jump *label7 always
-    * label *label8
-    * set *tmp2 0x00000004
-    * jump *label4 always
    92 label *label7
-    * jump *label10 equal :block @copper-wall-large
-    * jump *label9 always
    93 label *label10
    94 set *tmp2 0x00000008
    95 jump *label4 always
    96 label *label9
-    * jump *label12 equal :block @titanium-wall
-    * jump *label11 always
-    * label *label12
-    * set *tmp2 0x00000010
-    * jump *label4 always
    97 label *label11
-    * jump *label14 equal :block @titanium-wall-large
-    * jump *label13 always
    98 label *label14
    99 set *tmp2 0x00000020
   100 jump *label4 always
   101 label *label13
-    * jump *label16 equal :block @plastanium-wall
-    * jump *label15 always
-    * label *label16
-    * set *tmp2 0x00000040
-    * jump *label4 always
   102 label *label15
-    * jump *label18 equal :block @plastanium-wall-large
-    * jump *label17 always
   103 label *label18
   104 set *tmp2 0x00000080
   105 jump *label4 always
   106 label *label17
-    * jump *label20 equal :block @thorium-wall
-    * jump *label19 always
   107 label *label20
   108 set *tmp2 0x00000100
   109 jump *label4 always
   110 label *label19
-    * jump *label22 equal :block @thorium-wall-large
-    * jump *label21 always
-    * label *label22
-    * set *tmp2 0x00000200
-    * jump *label4 always
   111 label *label21
-    * jump *label24 equal :block @phase-wall
-    * jump *label23 always
   112 label *label24
   113 set *tmp2 0x00000400
   114 jump *label4 always
   115 label *label23
-    * jump *label26 equal :block @phase-wall-large
-    * jump *label25 always
   116 label *label26
   117 set *tmp2 0x00000800
   118 jump *label4 always
   119 label *label25
-    * jump *label28 equal :block @surge-wall
-    * jump *label27 always
-    * label *label28
-    * set *tmp2 0x00001000
-    * jump *label4 always
   120 label *label27
-    * jump *label30 equal :block @surge-wall-large
-    * jump *label29 always
   121 label *label30
   122 set *tmp2 0x00002000
   123 jump *label4 always
   124 label *label29
-    * jump *label32 equal :block @scrap-wall
-    * jump *label31 always
-    * label *label32
-    * set *tmp2 0x00004000
-    * jump *label4 always
   125 label *label31
-    * jump *label34 equal :block @scrap-wall-large
-    * jump *label33 always
   126 label *label34
   127 set *tmp2 0x00008000
   128 jump *label4 always
   129 label *label33
-    * jump *label36 equal :block @scrap-wall-huge
-    * jump *label35 always
-    * label *label36
-    * set *tmp2 0x00010000
-    * jump *label4 always
   130 label *label35
-    * jump *label38 equal :block @scrap-wall-gigantic
-    * jump *label37 always
   131 label *label38
   132 set *tmp2 0x00020000
   133 jump *label4 always
   134 label *label37
-    * jump *label40 equal :block @tungsten-wall
-    * jump *label39 always
-    * label *label40
-    * set *tmp2 0x00040000
-    * jump *label4 always
   135 label *label39
-    * jump *label42 equal :block @tungsten-wall-large
-    * jump *label41 always
   136 label *label42
   137 set *tmp2 0x00080000
   138 jump *label4 always
   139 label *label41
-    * jump *label44 equal :block @beryllium-wall
-    * jump *label43 always
-    * label *label44
-    * set *tmp2 0x00100000
-    * jump *label4 always
   140 label *label43
-    * jump *label46 equal :block @beryllium-wall-large
-    * jump *label45 always
   141 label *label46
   142 set *tmp2 0x00200000
   143 jump *label4 always
   144 label *label45
-    * jump *label48 equal :block @carbide-wall
-    * jump *label47 always
-    * label *label48
-    * set *tmp2 0x00400000
-    * jump *label4 always
   145 label *label47
-    * jump *label50 equal :block @carbide-wall-large
-    * jump *label49 always
   146 label *label50
   147 set *tmp2 0x00800000
   148 jump *label4 always
   149 label *label49
-    * jump *label52 equal :block @reinforced-surge-wall
-    * jump *label51 always
-    * label *label52
-    * set *tmp2 0x01000000
-    * jump *label4 always
   150 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall-large
-    * jump *label53 always
-    * label *label54
-    * set *tmp2 0x02000000
-    * jump *label4 always
   151 label *label53
+  152 label *label58
   153 set *tmp2 0
   154 label *label4
   155 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label57
     3 lookup block :block :i
     4 sensor *tmp6 :block @id
 
     6 jump *label58 greaterThanEq *tmp6 35
     7 jump *label61 greaterThanEq *tmp6 17
     8 jump *label58 greaterThanEq *tmp6 1
-    * label *label59
     9 jump *label58 strictEqual *tmp6 null
-    * label *label6
    10 set *tmp2 0x00000002
    11 jump *label4 always
    12 label *label61
 
    14 jump *label63 greaterThanEq *tmp6 21
    15 jump *label64 greaterThanEq *tmp6 19
    16 jump *label10 greaterThanEq *tmp6 18
-    * label *label8
    17 set *tmp2 0x00000004
    18 jump *label4 always
    19 label *label64
    20 jump *label14 greaterThanEq *tmp6 20
-    * label *label12
    21 set *tmp2 0x00000010
    22 jump *label4 always
    23 label *label63
    24 jump *label65 greaterThanEq *tmp6 23
    25 jump *label18 greaterThanEq *tmp6 22
-    * label *label16
    26 set *tmp2 0x00000040
    27 jump *label4 always
    28 label *label65
    29 jump *label20 lessThan *tmp6 24
    30 jump *label24 greaterThanEq *tmp6 25
-    * label *label22
    31 set *tmp2 0x00000200
    32 jump *label4 always
    33 label *label62
    34 jump *label66 greaterThanEq *tmp6 29
    35 jump *label26 lessThan *tmp6 27
    36 jump *label30 greaterThanEq *tmp6 28
-    * label *label28
    37 set *tmp2 0x00001000
    38 jump *label4 always
    39 label *label66
    40 jump *label67 greaterThanEq *tmp6 32
    41 jump *label58 lessThan *tmp6 31
-    * label *label32
    42 set *tmp2 0x00004000
    43 jump *label4 always
    44 label *label67
    45 jump *label34 lessThan *tmp6 33
    46 jump *label38 greaterThanEq *tmp6 34
-    * label *label36
    47 set *tmp2 0x00010000
    48 jump *label4 always
    49 label *label60
 
    52 jump *label58 greaterThanEq *tmp6 208
    53 jump *label70 greaterThanEq *tmp6 205
    54 jump *label42 greaterThanEq *tmp6 204
-    * label *label40
    55 set *tmp2 0x00040000
    56 jump *label4 always
    57 label *label70
    58 jump *label58 lessThan *tmp6 206
    59 jump *label46 greaterThanEq *tmp6 207
-    * label *label44
    60 set *tmp2 0x00100000
    61 jump *label4 always
    62 label *label69
    63 jump *label58 greaterThanEq *tmp6 226
    64 jump *label71 greaterThanEq *tmp6 222
    65 jump *label50 greaterThanEq *tmp6 221
-    * label *label48
    66 set *tmp2 0x00400000
    67 jump *label4 always
    68 label *label71
    69 jump *label58 lessThan *tmp6 225
-    * label *label52
    70 set *tmp2 0x01000000
    71 jump *label4 always
    72 label *label68
    73 jump *label58 greaterThanEq *tmp6 235
-    * label *label54
    74 set *tmp2 0x02000000
    75 jump *label4 always
-    * label *label5
-    * label *label7
    76 label *label10
    77 set *tmp2 0x00000008
    78 jump *label4 always
-    * label *label9
-    * label *label11
    79 label *label14
    80 set *tmp2 0x00000020
    81 jump *label4 always
-    * label *label13
-    * label *label15
    82 label *label18
    83 set *tmp2 0x00000080
    84 jump *label4 always
-    * label *label17
    85 label *label20
    86 set *tmp2 0x00000100
    87 jump *label4 always
-    * label *label19
-    * label *label21
    88 label *label24
    89 set *tmp2 0x00000400
    90 jump *label4 always
-    * label *label23
    91 label *label26
    92 set *tmp2 0x00000800
    93 jump *label4 always
-    * label *label25
-    * label *label27
    94 label *label30
    95 set *tmp2 0x00002000
    96 jump *label4 always
-    * label *label29
-    * label *label31
    97 label *label34
    98 set *tmp2 0x00008000
    99 jump *label4 always
-    * label *label33
-    * label *label35
   100 label *label38
   101 set *tmp2 0x00020000
   102 jump *label4 always
-    * label *label37
-    * label *label39
   103 label *label42
   104 set *tmp2 0x00080000
   105 jump *label4 always
-    * label *label41
-    * label *label43
   106 label *label46
   107 set *tmp2 0x00200000
   108 jump *label4 always
-    * label *label45
-    * label *label47
   109 label *label50
   110 set *tmp2 0x00800000
   111 jump *label4 always
-    * label *label49
-    * label *label51
-    * label *label53
   112 label *label58
   113 set *tmp2 0
   114 label *label4
-    * label *label3
   115 op and *tmp4 :total *tmp2
   116 jump *label55 equal *tmp4 false
   117 op or :total :total 0x800000000
 
   119 label *label55
   120 op or :total :total *tmp2
   121 label *label56
-    * label *label1
   122 op add :i :i 1
   123 jump *label57 lessThan :i @blockCount
-    * label *label2
   124 assertequals 0x03FFFFFE :total "Test selected blocks"
   125 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label57
lookup block :block :i
sensor *tmp6 :block @id
jump *label60 greaterThanEq *tmp6 203
jump *label58 greaterThanEq *tmp6 35
jump *label61 greaterThanEq *tmp6 17
jump *label58 greaterThanEq *tmp6 1
jump *label58 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
label *label61
jump *label62 greaterThanEq *tmp6 26
jump *label63 greaterThanEq *tmp6 21
jump *label64 greaterThanEq *tmp6 19
jump *label10 greaterThanEq *tmp6 18
set *tmp2 0x00000004
jump *label4 always
label *label64
jump *label14 greaterThanEq *tmp6 20
set *tmp2 0x00000010
jump *label4 always
label *label63
jump *label65 greaterThanEq *tmp6 23
jump *label18 greaterThanEq *tmp6 22
set *tmp2 0x00000040
jump *label4 always
label *label65
jump *label20 lessThan *tmp6 24
jump *label24 greaterThanEq *tmp6 25
set *tmp2 0x00000200
jump *label4 always
label *label62
jump *label66 greaterThanEq *tmp6 29
jump *label26 lessThan *tmp6 27
jump *label30 greaterThanEq *tmp6 28
set *tmp2 0x00001000
jump *label4 always
label *label66
jump *label67 greaterThanEq *tmp6 32
jump *label58 lessThan *tmp6 31
set *tmp2 0x00004000
jump *label4 always
label *label67
jump *label34 lessThan *tmp6 33
jump *label38 greaterThanEq *tmp6 34
set *tmp2 0x00010000
jump *label4 always
label *label60
jump *label68 greaterThanEq *tmp6 234
jump *label69 greaterThanEq *tmp6 220
jump *label58 greaterThanEq *tmp6 208
jump *label70 greaterThanEq *tmp6 205
jump *label42 greaterThanEq *tmp6 204
set *tmp2 0x00040000
jump *label4 always
label *label70
jump *label58 lessThan *tmp6 206
jump *label46 greaterThanEq *tmp6 207
set *tmp2 0x00100000
jump *label4 always
label *label69
jump *label58 greaterThanEq *tmp6 226
jump *label71 greaterThanEq *tmp6 222
jump *label50 greaterThanEq *tmp6 221
set *tmp2 0x00400000
jump *label4 always
label *label71
jump *label58 lessThan *tmp6 225
set *tmp2 0x01000000
jump *label4 always
label *label68
jump *label58 greaterThanEq *tmp6 235
set *tmp2 0x02000000
jump *label4 always
label *label10
set *tmp2 0x00000008
jump *label4 always
label *label14
set *tmp2 0x00000020
jump *label4 always
label *label18
set *tmp2 0x00000080
jump *label4 always
label *label20
set *tmp2 0x00000100
jump *label4 always
label *label24
set *tmp2 0x00000400
jump *label4 always
label *label26
set *tmp2 0x00000800
jump *label4 always
label *label30
set *tmp2 0x00002000
jump *label4 always
label *label34
set *tmp2 0x00008000
jump *label4 always
label *label38
set *tmp2 0x00020000
jump *label4 always
label *label42
set *tmp2 0x00080000
jump *label4 always
label *label46
set *tmp2 0x00200000
jump *label4 always
label *label50
set *tmp2 0x00800000
jump *label4 always
label *label58
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label55 equal *tmp4 false
op or :total :total 0x800000000
jump *label56 always
label *label55
op or :total :total *tmp2
label *label56
op add :i :i 1
jump *label57 lessThan :i @blockCount
assertequals 0x03FFFFFE :total "Test selected blocks"
end
