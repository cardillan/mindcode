    51 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     2 instructions eliminated by Data Flow Optimization (5 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     6 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    37 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 57):
  o Convert case at line 11:5 (segments: 5)                      size    -8, benefit      520.4, efficiency   Infinity
  o Convert case at line 11:5 (segments: 5)                      size    -7, benefit      523.3, efficiency   Infinity
  * Convert case at line 11:5 (segments: 13)                     size    -6, benefit      528.2, efficiency   Infinity (-6 instructions)
  ! Convert case at line 11:5 (segments: 1, padded both)         size  +237, benefit      546.1, efficiency      2.304

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     4 lookup block *tmp0 :i
     5 set :block *tmp0
     6 set :isWall:block :block
-    * set *tmp3 :isWall:block
-    * jump *label6 strictEqual *tmp3 null
-    * jump *label6 equal *tmp3 @copper-wall
-    * jump *label6 equal *tmp3 @copper-wall-large
-    * jump *label6 equal *tmp3 @titanium-wall
-    * jump *label6 equal *tmp3 @titanium-wall-large
-    * jump *label6 equal *tmp3 @plastanium-wall
-    * jump *label6 equal *tmp3 @plastanium-wall-large
-    * jump *label6 equal *tmp3 @thorium-wall
-    * jump *label6 equal *tmp3 @thorium-wall-large
-    * jump *label6 equal *tmp3 @phase-wall
-    * jump *label6 equal *tmp3 @phase-wall-large
-    * jump *label6 equal *tmp3 @surge-wall
-    * jump *label6 equal *tmp3 @surge-wall-large
-    * jump *label6 equal *tmp3 @scrap-wall
-    * jump *label6 equal *tmp3 @scrap-wall-large
-    * jump *label6 equal *tmp3 @scrap-wall-huge
-    * jump *label6 equal *tmp3 @scrap-wall-gigantic
-    * jump *label6 equal *tmp3 @beryllium-wall
-    * jump *label6 equal *tmp3 @beryllium-wall-large
-    * jump *label6 equal *tmp3 @tungsten-wall
-    * jump *label6 equal *tmp3 @tungsten-wall-large
-    * jump *label6 equal *tmp3 @reinforced-surge-wall
-    * jump *label6 equal *tmp3 @reinforced-surge-wall-large
-    * jump *label6 equal *tmp3 @carbide-wall
-    * jump *label6 equal *tmp3 @carbide-wall-large
+    7 jump *label6 strictEqual :isWall:block null
+    8 jump *label6 equal :isWall:block @copper-wall
+    9 jump *label6 equal :isWall:block @copper-wall-large
+   10 jump *label6 equal :isWall:block @titanium-wall
+   11 jump *label6 equal :isWall:block @titanium-wall-large
+   12 jump *label6 equal :isWall:block @plastanium-wall
+   13 jump *label6 equal :isWall:block @plastanium-wall-large
+   14 jump *label6 equal :isWall:block @thorium-wall
+   15 jump *label6 equal :isWall:block @thorium-wall-large
+   16 jump *label6 equal :isWall:block @phase-wall
+   17 jump *label6 equal :isWall:block @phase-wall-large
+   18 jump *label6 equal :isWall:block @surge-wall
+   19 jump *label6 equal :isWall:block @surge-wall-large
+   20 jump *label6 equal :isWall:block @scrap-wall
+   21 jump *label6 equal :isWall:block @scrap-wall-large
+   22 jump *label6 equal :isWall:block @scrap-wall-huge
+   23 jump *label6 equal :isWall:block @scrap-wall-gigantic
+   24 jump *label6 equal :isWall:block @beryllium-wall
+   25 jump *label6 equal :isWall:block @beryllium-wall-large
+   26 jump *label6 equal :isWall:block @tungsten-wall
+   27 jump *label6 equal :isWall:block @tungsten-wall-large
+   28 jump *label6 equal :isWall:block @reinforced-surge-wall
+   29 jump *label6 equal :isWall:block @reinforced-surge-wall-large
+   30 jump *label6 equal :isWall:block @carbide-wall
+   31 jump *label6 equal :isWall:block @carbide-wall-large
    32 jump *label5 always
    33 label *label6
    34 set *tmp2 true

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
    44 op add *tmp7 *tmp6 251
    45 op and *tmp8 *tmp7 0xFFFFFFFF
    46 set :hash *tmp8
-    * set *tmp4 :hash
    47 jump *label8 always
    48 label *label7
-    * set *tmp4 null
    49 label *label8
    50 label *label1
    51 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 set :isWall:block :block
     6 jump *label6 strictEqual :isWall:block null
     7 jump *label6 equal :isWall:block @copper-wall
 
    41 op mul *tmp5 :hash 31
    42 op add *tmp6 *tmp5 :i
    43 op add *tmp7 *tmp6 251
-    * op and *tmp8 *tmp7 0xFFFFFFFF
-    * set :hash *tmp8
+   44 op and :hash *tmp7 0xFFFFFFFF
    45 jump *label8 always
    46 label *label7
    47 label *label8

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 set :isWall:block :block
-    * jump *label6 strictEqual :isWall:block null
-    * jump *label6 equal :isWall:block @copper-wall
-    * jump *label6 equal :isWall:block @copper-wall-large
-    * jump *label6 equal :isWall:block @titanium-wall
-    * jump *label6 equal :isWall:block @titanium-wall-large
-    * jump *label6 equal :isWall:block @plastanium-wall
-    * jump *label6 equal :isWall:block @plastanium-wall-large
-    * jump *label6 equal :isWall:block @thorium-wall
-    * jump *label6 equal :isWall:block @thorium-wall-large
-    * jump *label6 equal :isWall:block @phase-wall
-    * jump *label6 equal :isWall:block @phase-wall-large
-    * jump *label6 equal :isWall:block @surge-wall
-    * jump *label6 equal :isWall:block @surge-wall-large
-    * jump *label6 equal :isWall:block @scrap-wall
-    * jump *label6 equal :isWall:block @scrap-wall-large
-    * jump *label6 equal :isWall:block @scrap-wall-huge
-    * jump *label6 equal :isWall:block @scrap-wall-gigantic
-    * jump *label6 equal :isWall:block @beryllium-wall
-    * jump *label6 equal :isWall:block @beryllium-wall-large
-    * jump *label6 equal :isWall:block @tungsten-wall
-    * jump *label6 equal :isWall:block @tungsten-wall-large
-    * jump *label6 equal :isWall:block @reinforced-surge-wall
-    * jump *label6 equal :isWall:block @reinforced-surge-wall-large
-    * jump *label6 equal :isWall:block @carbide-wall
-    * jump *label6 equal :isWall:block @carbide-wall-large
+    6 jump *label6 strictEqual :block null
+    7 jump *label6 equal :block @copper-wall
+    8 jump *label6 equal :block @copper-wall-large
+    9 jump *label6 equal :block @titanium-wall
+   10 jump *label6 equal :block @titanium-wall-large
+   11 jump *label6 equal :block @plastanium-wall
+   12 jump *label6 equal :block @plastanium-wall-large
+   13 jump *label6 equal :block @thorium-wall
+   14 jump *label6 equal :block @thorium-wall-large
+   15 jump *label6 equal :block @phase-wall
+   16 jump *label6 equal :block @phase-wall-large
+   17 jump *label6 equal :block @surge-wall
+   18 jump *label6 equal :block @surge-wall-large
+   19 jump *label6 equal :block @scrap-wall
+   20 jump *label6 equal :block @scrap-wall-large
+   21 jump *label6 equal :block @scrap-wall-huge
+   22 jump *label6 equal :block @scrap-wall-gigantic
+   23 jump *label6 equal :block @beryllium-wall
+   24 jump *label6 equal :block @beryllium-wall-large
+   25 jump *label6 equal :block @tungsten-wall
+   26 jump *label6 equal :block @tungsten-wall-large
+   27 jump *label6 equal :block @reinforced-surge-wall
+   28 jump *label6 equal :block @reinforced-surge-wall-large
+   29 jump *label6 equal :block @carbide-wall
+   30 jump *label6 equal :block @carbide-wall-large
    31 jump *label5 always
    32 label *label6
    33 set *tmp2 true
 
    37 label *label4
    38 set *tmp1 *tmp2
    39 label *label3
-    * jump *label7 equal *tmp1 false
+   40 jump *label7 equal *tmp2 false
    41 op mul *tmp5 :hash 31
    42 op add *tmp6 *tmp5 :i
    43 op add *tmp7 *tmp6 251

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
-    * set :isWall:block :block
     5 jump *label6 strictEqual :block null
     6 jump *label6 equal :block @copper-wall
     7 jump *label6 equal :block @copper-wall-large
 
    34 label *label5
    35 set *tmp2 false
    36 label *label4
-    * set *tmp1 *tmp2
    37 label *label3
    38 jump *label7 equal *tmp2 false
    39 op mul *tmp5 :hash 31

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :hash 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label9
     4 lookup block :block :i
     5 jump *label6 strictEqual :block null
     6 jump *label6 equal :block @copper-wall
 
    45 label *label8
    46 label *label1
    47 op add :i :i 1
-    * jump *label0 always
+   48 jump *label9 lessThan :i @blockCount
    49 label *label2
    50 print :hash
    51 assertequals 3138715214 :hash "Test selected blocks"

Modifications by Convert case at line 11:5 (segments: 13) (-6 instructions):
 
     2 label *label0
     3 label *label9
     4 lookup block :block :i
-    * jump *label6 strictEqual :block null
-    * jump *label6 equal :block @copper-wall
-    * jump *label6 equal :block @copper-wall-large
-    * jump *label6 equal :block @titanium-wall
-    * jump *label6 equal :block @titanium-wall-large
-    * jump *label6 equal :block @plastanium-wall
-    * jump *label6 equal :block @plastanium-wall-large
-    * jump *label6 equal :block @thorium-wall
-    * jump *label6 equal :block @thorium-wall-large
-    * jump *label6 equal :block @phase-wall
-    * jump *label6 equal :block @phase-wall-large
-    * jump *label6 equal :block @surge-wall
-    * jump *label6 equal :block @surge-wall-large
-    * jump *label6 equal :block @scrap-wall
-    * jump *label6 equal :block @scrap-wall-large
-    * jump *label6 equal :block @scrap-wall-huge
-    * jump *label6 equal :block @scrap-wall-gigantic
-    * jump *label6 equal :block @beryllium-wall
-    * jump *label6 equal :block @beryllium-wall-large
-    * jump *label6 equal :block @tungsten-wall
-    * jump *label6 equal :block @tungsten-wall-large
-    * jump *label6 equal :block @reinforced-surge-wall
-    * jump *label6 equal :block @reinforced-surge-wall-large
-    * jump *label6 equal :block @carbide-wall
-    * jump *label6 equal :block @carbide-wall-large
-    * jump *label5 always
+    5 sensor *tmp9 :block @id
+    6 jump *label12 greaterThanEq *tmp9 203
+    7 jump *label10 greaterThanEq *tmp9 35
+    8 jump *label11 lessThan *tmp9 17
+    9 jump *label6 lessThan *tmp9 29
+   10 jump *label6 greaterThanEq *tmp9 31
+   11 jump *label10 always
+   12 label *label12
+   13 jump *label13 greaterThanEq *tmp9 234
+   14 jump *label14 greaterThanEq *tmp9 220
+   15 jump *label10 greaterThanEq *tmp9 208
+   16 jump *label6 lessThan *tmp9 205
+   17 jump *label6 greaterThanEq *tmp9 206
+   18 jump *label10 always
+   19 label *label14
+   20 jump *label10 greaterThanEq *tmp9 226
+   21 jump *label6 lessThan *tmp9 222
+   22 jump *label10 lessThan *tmp9 225
+   23 jump *label6 always
+   24 label *label13
+   25 jump *label10 greaterThanEq *tmp9 235
+   26 jump *label6 always
    27 label *label6
    28 set *tmp2 true
    29 jump *label4 always
    30 label *label5
+   31 label *label11
+   32 jump *label6 strictEqual *tmp9 null
+   33 label *label10
    34 set *tmp2 false
    35 label *label4
    36 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :hash 0
     1 set :i -1
-    * label *label0
     2 label *label9
     3 lookup block :block :i
     4 sensor *tmp9 :block @id
 
    26 label *label6
    27 set *tmp2 true
    28 jump *label4 always
-    * label *label5
    29 label *label11
    30 jump *label6 strictEqual *tmp9 null
    31 label *label10
    32 set *tmp2 false
    33 label *label4
-    * label *label3
    34 jump *label7 equal *tmp2 false
    35 op mul *tmp5 :hash 31
    36 op add *tmp6 *tmp5 :i
 
    39 jump *label8 always
    40 label *label7
    41 label *label8
-    * label *label1
    42 op add :i :i 1
    43 jump *label9 lessThan :i @blockCount
-    * label *label2
    44 print :hash
    45 assertequals 3138715214 :hash "Test selected blocks"
    46 end

Final code before resolving virtual instructions:

set :hash 0
set :i -1
label *label9
lookup block :block :i
sensor *tmp9 :block @id
jump *label12 greaterThanEq *tmp9 203
jump *label10 greaterThanEq *tmp9 35
jump *label11 lessThan *tmp9 17
jump *label6 lessThan *tmp9 29
jump *label6 greaterThanEq *tmp9 31
jump *label10 always
label *label12
jump *label13 greaterThanEq *tmp9 234
jump *label14 greaterThanEq *tmp9 220
jump *label10 greaterThanEq *tmp9 208
jump *label6 lessThan *tmp9 205
jump *label6 greaterThanEq *tmp9 206
jump *label10 always
label *label14
jump *label10 greaterThanEq *tmp9 226
jump *label6 lessThan *tmp9 222
jump *label10 lessThan *tmp9 225
jump *label6 always
label *label13
jump *label10 greaterThanEq *tmp9 235
jump *label6 always
label *label6
set *tmp2 true
jump *label4 always
label *label11
jump *label6 strictEqual *tmp9 null
label *label10
set *tmp2 false
label *label4
jump *label7 equal *tmp2 false
op mul *tmp5 :hash 31
op add *tmp6 *tmp5 :i
op add *tmp7 *tmp6 251
op and :hash *tmp7 0xFFFFFFFF
jump *label8 always
label *label7
label *label8
op add :i :i 1
jump *label9 lessThan :i @blockCount
print :hash
assertequals 3138715214 :hash "Test selected blocks"
end
