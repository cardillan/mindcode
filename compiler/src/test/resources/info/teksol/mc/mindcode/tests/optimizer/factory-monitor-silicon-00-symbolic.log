   477 instructions before optimizations.
    48 instructions eliminated by Temp Variables Elimination (2 iterations).
    48 instructions eliminated by Dead Code Elimination (5 iterations).
    26 instructions eliminated by Jump Optimization (5 iterations).
    23 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 3 iterations).
     5 instructions eliminated by If Expression Optimization (3 iterations).
    35 instructions eliminated by Data Flow Optimization (3 passes, 10 iterations).
     1 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     3 instructions updated by JumpThreading.
     4 instructions eliminated by Print Merging.
   287 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 692):
  * Replicate loop condition at line 33:1                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-40 instructions):
 
     5 jump *label0 equal *tmp0 false
     6 set .BAR_LENGTH 53
     7 set .BAR_SPACE 74
-    * set *tmp1 .BAR_SPACE
     8 jump *label1 always
     9 label *label0
    10 set .BAR_LENGTH 61
    11 set .BAR_SPACE 88
-    * set *tmp1 .BAR_SPACE
    12 label *label1
    13 set :clx 0
    14 op notEqual *tmp2 bank1 null
 
    87 jump *label16 equal *tmp30 false
    88 set :minimum :s
    89 set :icon @sand
-    * set *tmp31 :icon
    90 jump *label17 always
    91 label *label16
-    * set *tmp31 null
    92 label *label17
    93 op lessThan *tmp32 :c :minimum
    94 jump *label18 equal *tmp32 false
    95 set :minimum :c
    96 set :icon @coal
-    * set *tmp33 :icon
    97 jump *label19 always
    98 label *label18
-    * set *tmp33 null
    99 label *label19
   100 op lessThan *tmp34 :p :minimum
   101 jump *label20 equal *tmp34 false
   102 set :minimum :p
   103 set :icon @pyratite
-    * set *tmp35 :icon
   104 jump *label21 always
   105 label *label20
-    * set *tmp35 null
   106 label *label21
   107 op greaterThan *tmp36 :a 10
   108 op sub *tmp37 31 :a
 
   111 set :showa *tmp39
   112 jump *label22 equal :showa false
   113 set :icon @silicon
-    * set *tmp40 :icon
   114 jump *label23 always
   115 label *label22
-    * set *tmp40 null
   116 label *label23
   117 set :column 0
   118 set :row :index
 
   131 op land *tmp49 *tmp47 *tmp48
   132 jump *label24 equal *tmp49 false
   133 set :icon @silicon-crucible
-    * set *tmp50 :icon
   134 jump *label25 always
   135 label *label24
-    * set *tmp50 null
   136 label *label25
   137 draw color 255 255 255 255
   138 jump *label26 equal :e false
 
   163 draw rect *tmp63 *tmp64 2 2
   164 set *tmp53 null
   165 label *label29
-    * set *tmp51 *tmp53
   166 jump *label27 always
   167 label *label26
   168 draw color 255 80 80 255
 
   182 op sub *tmp74 :y 1
   183 draw lineRect *tmp73 *tmp74 16 16
   184 draw stroke 2
-    * set *tmp51 null
   185 label *label27
   186 op add *tmp75 :x 16
   187 set :x *tmp75
 
   191 set :red 255
   192 set :green 0
   193 set :blue 0
-    * set *tmp78 :blue
   194 jump *label31 always
   195 label *label30
   196 jump *label32 equal :showa false
 
   222 set :blue 0
   223 set *tmp79 :blue
   224 label *label33
-    * set *tmp78 *tmp79
   225 label *label31
   226 op greaterThan *tmp86 :boost EXPECTED_BOOST
   227 jump *label38 equal *tmp86 false
 
   232 op max *tmp90 192 :blue
   233 set :blue *tmp90
   234 set :boost EXPECTED_BOOST
-    * set *tmp87 :boost
   235 jump *label39 always
   236 label *label38
-    * set *tmp87 null
   237 label *label39
   238 op mul *tmp91 .BAR_LENGTH :boost
   239 op idiv *tmp92 *tmp91 EXPECTED_BOOST
 
   248 set :index *tmp95
   249 op add *tmp96 :factories 1
   250 set :factories *tmp96
-    * set *tmp21 :factories
   251 jump *label15 always
   252 label *label14
-    * set *tmp21 null
   253 label *label15
   254 label *label12
   255 op add *tmp97 :n 1
 
   285 jump *label45 equal *tmp110 false
   286 set :minimum :s
   287 set :icon @sand
-    * set *tmp111 :icon
   288 jump *label46 always
   289 label *label45
-    * set *tmp111 null
   290 label *label46
   291 op lessThan *tmp112 :c :minimum
   292 jump *label47 equal *tmp112 false
   293 set :minimum :c
   294 set :icon @coal
-    * set *tmp113 :icon
   295 jump *label48 always
   296 label *label47
-    * set *tmp113 null
   297 label *label48
   298 op lessThan *tmp114 :l :minimum
   299 jump *label49 equal *tmp114 false
   300 set :minimum :l
   301 set :icon @lead
-    * set *tmp115 :icon
   302 jump *label50 always
   303 label *label49
-    * set *tmp115 null
   304 label *label50
   305 set :column 1
   306 set :row :index
 
   319 op land *tmp124 *tmp122 *tmp123
   320 jump *label51 equal *tmp124 false
   321 set :icon @pyratite-mixer
-    * set *tmp125 :icon
   322 jump *label52 always
   323 label *label51
-    * set *tmp125 null
   324 label *label52
   325 draw color 255 255 255 255
   326 jump *label53 equal :e false
 
   351 draw rect *tmp138 *tmp139 2 2
   352 set *tmp128 null
   353 label *label56
-    * set *tmp126 *tmp128
   354 jump *label54 always
   355 label *label53
   356 draw color 255 80 80 255
 
   370 op sub *tmp149 :y 1
   371 draw lineRect *tmp148 *tmp149 16 16
   372 draw stroke 2
-    * set *tmp126 null
   373 label *label54
   374 op add *tmp150 :x 16
   375 set :x *tmp150
 
   379 set :red 255
   380 set :green 0
   381 set :blue 0
-    * set *tmp153 :blue
   382 jump *label58 always
   383 label *label57
   384 op greaterThan *tmp154 :minimum 6
 
   400 label *label62
   401 set :green *tmp159
   402 set :blue 0
-    * set *tmp153 :blue
   403 label *label58
   404 op greaterThan *tmp160 :boost EXPECTED_BOOST
   405 jump *label63 equal *tmp160 false
 
   410 op max *tmp164 192 :blue
   411 set :blue *tmp164
   412 set :boost EXPECTED_BOOST
-    * set *tmp161 :boost
   413 jump *label64 always
   414 label *label63
-    * set *tmp161 null
   415 label *label64
   416 op mul *tmp165 .BAR_LENGTH :boost
   417 op idiv *tmp166 *tmp165 EXPECTED_BOOST
 
   424 draw lineRect :x :y :length 14
   425 op add *tmp169 :index 1
   426 set :index *tmp169
-    * set *tmp102 :index
   427 jump *label44 always
   428 label *label43
-    * set *tmp102 null
   429 label *label44
   430 label *label41
   431 op add *tmp170 :n 1
 
   482 label *label69
   483 set *tmp177 null
   484 label *label70
-    * set *tmp174 *tmp177
   485 jump *label68 always
   486 label *label67
-    * set *tmp174 null
   487 label *label68
   488 print "\nNominal production: "
   489 print :expected_flow_str
 
   491 print "\nActual production: "
   492 print :flow_str
   493 print "/min"
-    * set *tmp172 "/min"
   494 jump *label66 always
   495 label *label65
-    * set *tmp172 null
   496 label *label66
   497 drawflush display1
   498 op sub *tmp192 @time :start

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-8 instructions):
 
   141 op add *tmp54 :x 7
   142 op add *tmp55 :y 7
   143 draw image *tmp54 *tmp55 :icon 16 0
-    * set *tmp53 null
   144 jump *label29 always
   145 label *label28
   146 draw color 255 80 80 255
 
   160 op add *tmp63 :x 4
   161 op add *tmp64 :y 6
   162 draw rect *tmp63 *tmp64 2 2
-    * set *tmp53 null
   163 label *label29
   164 jump *label27 always
   165 label *label26
 
   196 set :green 0
   197 set :blue 255
   198 set :minimum :a
-    * set *tmp79 :minimum
   199 jump *label33 always
   200 label *label32
   201 op greaterThan *tmp80 :minimum 20
 
   217 label *label37
   218 set :green *tmp85
   219 set :blue 0
-    * set *tmp79 :blue
   220 label *label33
   221 label *label31
   222 op greaterThan *tmp86 :boost EXPECTED_BOOST
 
   325 op add *tmp129 :x 7
   326 op add *tmp130 :y 7
   327 draw image *tmp129 *tmp130 :icon 16 0
-    * set *tmp128 null
   328 jump *label56 always
   329 label *label55
   330 draw color 255 80 80 255
 
   344 op add *tmp138 :x 4
   345 op add *tmp139 :y 6
   346 draw rect *tmp138 *tmp139 2 2
-    * set *tmp128 null
   347 label *label56
   348 jump *label54 always
   349 label *label53
 
   471 op mul *tmp190 3600 :rate
   472 op floor *tmp191 *tmp190
   473 set :flow_str *tmp191
-    * set *tmp177 :flow_str
   474 jump *label70 always
   475 label *label69
-    * set *tmp177 null
   476 label *label70
   477 jump *label68 always
   478 label *label67

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-48 instructions):
 
    25 jump *label5 always
    26 label *label4
    27 op mul *tmp6 FROM_INDEX 22
-    * op add *tmp7 4 *tmp6
-    * set *tmp5 *tmp7
+   28 op add *tmp5 4 *tmp6
    29 label *label5
    30 set :cly *tmp5
    31 op lessThan *tmp8 TO_INDEX 8
    32 jump *label6 equal *tmp8 false
    33 op mul *tmp10 TO_INDEX 22
-    * op add *tmp11 4 *tmp10
-    * set *tmp9 *tmp11
+   34 op add *tmp9 4 *tmp10
    35 jump *label7 always
    36 label *label6
    37 set *tmp9 176
    38 label *label7
-    * op sub *tmp12 *tmp9 :cly
-    * set :clh *tmp12
+   39 op sub :clh *tmp9 :cly
    40 set :showa null
    41 set :lastRate :showa
    42 set :flow_str :lastRate
 
    47 sensor *tmp14 switch1 @enabled
    48 op equal *tmp15 *tmp14 0
    49 jump *label10 equal *tmp15 false
-    * set *tmp16 @time
-    * set :start *tmp16
+   50 set :start @time
    51 print "Silicon Factory Monitor"
    52 set :factories 0
    53 draw color 0 0 80 255
 
    58 label *label11
    59 op lessThan *tmp17 :n @links
    60 jump *label13 equal *tmp17 false
-    * getlink *tmp18 :n
-    * set :smelter *tmp18
+   61 getlink :smelter :n
    62 sensor *tmp19 :smelter @type
    63 op equal *tmp20 *tmp19 @silicon-crucible
    64 jump *label14 equal *tmp20 false
    65 set :minimum 31
-    * sensor *tmp22 :smelter @sand
-    * set :s *tmp22
-    * sensor *tmp23 :smelter @coal
-    * set :c *tmp23
-    * sensor *tmp24 :smelter @pyratite
-    * set :p *tmp24
+   66 sensor :s :smelter @sand
+   67 sensor :c :smelter @coal
+   68 sensor :p :smelter @pyratite
    69 sensor *tmp25 :smelter @silicon
-    * op min *tmp26 *tmp25 30
-    * set :a *tmp26
-    * sensor *tmp27 :smelter @enabled
-    * set :e *tmp27
-    * sensor *tmp28 :smelter @totalPower
-    * set :power *tmp28
-    * sensor *tmp29 :smelter @timescale
-    * set :boost *tmp29
+   70 op min :a *tmp25 30
+   71 sensor :e :smelter @enabled
+   72 sensor :power :smelter @totalPower
+   73 sensor :boost :smelter @timescale
    74 op lessThan *tmp30 :s :minimum
    75 jump *label16 equal *tmp30 false
    76 set :minimum :s
 
    95 op greaterThan *tmp36 :a 10
    96 op sub *tmp37 31 :a
    97 op lessThan *tmp38 *tmp37 :minimum
-    * op land *tmp39 *tmp36 *tmp38
-    * set :showa *tmp39
+   98 op land :showa *tmp36 *tmp38
    99 jump *label22 equal :showa false
   100 set :icon @silicon
   101 jump *label23 always
 
   104 set :column 0
   105 set :row :index
   106 op mul *tmp41 :column .BAR_SPACE
-    * op add *tmp42 5 *tmp41
-    * set :x *tmp42
+  107 op add :x 5 *tmp41
   108 op mul *tmp43 :row 22
-    * op add *tmp44 4 *tmp43
-    * set :y *tmp44
+  109 op add :y 4 *tmp43
   110 draw color 0 0 80 255
   111 op sub *tmp45 :x 1
   112 op sub *tmp46 :y 1
 
   166 draw lineRect *tmp73 *tmp74 16 16
   167 draw stroke 2
   168 label *label27
-    * op add *tmp75 :x 16
-    * set :x *tmp75
+  169 op add :x :x 16
   170 op mul *tmp76 :power :e
   171 op equal *tmp77 *tmp76 0
   172 jump *label30 equal *tmp77 false
 
   205 label *label31
   206 op greaterThan *tmp86 :boost EXPECTED_BOOST
   207 jump *label38 equal *tmp86 false
-    * op max *tmp88 192 :red
-    * set :red *tmp88
-    * op max *tmp89 192 :green
-    * set :green *tmp89
-    * op max *tmp90 192 :blue
-    * set :blue *tmp90
+  208 op max :red 192 :red
+  209 op max :green 192 :green
+  210 op max :blue 192 :blue
   211 set :boost EXPECTED_BOOST
   212 jump *label39 always
   213 label *label38
   214 label *label39
   215 op mul *tmp91 .BAR_LENGTH :boost
-    * op idiv *tmp92 *tmp91 EXPECTED_BOOST
-    * set :length *tmp92
+  216 op idiv :length *tmp91 EXPECTED_BOOST
   217 draw color :red :green :blue 128
   218 op mul *tmp93 :minimum :length
   219 op idiv *tmp94 *tmp93 30
   220 draw rect :x :y *tmp94 14
   221 draw color :red :green :blue 255
   222 draw lineRect :x :y :length 14
-    * op add *tmp95 :index 1
-    * set :index *tmp95
-    * op add *tmp96 :factories 1
-    * set :factories *tmp96
+  223 op add :index :index 1
+  224 op add :factories :factories 1
   225 jump *label15 always
   226 label *label14
   227 label *label15
   228 label *label12
-    * op add *tmp97 :n 1
-    * set :n *tmp97
+  229 op add :n :n 1
   230 jump *label11 always
   231 label *label13
   232 set :index FROM_INDEX
 
   234 label *label40
   235 op lessThan *tmp98 :n @links
   236 jump *label42 equal *tmp98 false
-    * getlink *tmp99 :n
-    * set :smelter *tmp99
+  237 getlink :smelter :n
   238 sensor *tmp100 :smelter @type
   239 op equal *tmp101 *tmp100 @pyratite-mixer
   240 jump *label43 equal *tmp101 false
   241 set :minimum 11
-    * sensor *tmp103 :smelter @sand
-    * set :s *tmp103
-    * sensor *tmp104 :smelter @coal
-    * set :c *tmp104
-    * sensor *tmp105 :smelter @lead
-    * set :l *tmp105
-    * sensor *tmp106 :smelter @pyratite
-    * set :a *tmp106
-    * sensor *tmp107 :smelter @enabled
-    * set :e *tmp107
-    * sensor *tmp108 :smelter @totalPower
-    * set :power *tmp108
-    * sensor *tmp109 :smelter @timescale
-    * set :boost *tmp109
+  242 sensor :s :smelter @sand
+  243 sensor :c :smelter @coal
+  244 sensor :l :smelter @lead
+  245 sensor :a :smelter @pyratite
+  246 sensor :e :smelter @enabled
+  247 sensor :power :smelter @totalPower
+  248 sensor :boost :smelter @timescale
   249 op lessThan *tmp110 :s :minimum
   250 jump *label45 equal *tmp110 false
   251 set :minimum :s
 
   270 set :column 1
   271 set :row :index
   272 op mul *tmp116 :column .BAR_SPACE
-    * op add *tmp117 5 *tmp116
-    * set :x *tmp117
+  273 op add :x 5 *tmp116
   274 op mul *tmp118 :row 22
-    * op add *tmp119 4 *tmp118
-    * set :y *tmp119
+  275 op add :y 4 *tmp118
   276 draw color 0 0 80 255
   277 op sub *tmp120 :x 1
   278 op sub *tmp121 :y 1
 
   332 draw lineRect *tmp148 *tmp149 16 16
   333 draw stroke 2
   334 label *label54
-    * op add *tmp150 :x 16
-    * set :x *tmp150
+  335 op add :x :x 16
   336 op mul *tmp151 :power :e
   337 op equal *tmp152 *tmp151 0
   338 jump *label57 equal *tmp152 false
 
   363 label *label58
   364 op greaterThan *tmp160 :boost EXPECTED_BOOST
   365 jump *label63 equal *tmp160 false
-    * op max *tmp162 192 :red
-    * set :red *tmp162
-    * op max *tmp163 192 :green
-    * set :green *tmp163
-    * op max *tmp164 192 :blue
-    * set :blue *tmp164
+  366 op max :red 192 :red
+  367 op max :green 192 :green
+  368 op max :blue 192 :blue
   369 set :boost EXPECTED_BOOST
   370 jump *label64 always
   371 label *label63
   372 label *label64
   373 op mul *tmp165 .BAR_LENGTH :boost
-    * op idiv *tmp166 *tmp165 EXPECTED_BOOST
-    * set :length *tmp166
+  374 op idiv :length *tmp165 EXPECTED_BOOST
   375 draw color :red :green :blue 128
   376 op mul *tmp167 :minimum :length
   377 op idiv *tmp168 *tmp167 10
   378 draw rect :x :y *tmp168 14
   379 draw color :red :green :blue 255
   380 draw lineRect :x :y :length 14
-    * op add *tmp169 :index 1
-    * set :index *tmp169
+  381 op add :index :index 1
   382 jump *label44 always
   383 label *label43
   384 label *label44
   385 label *label41
-    * op add *tmp170 :n 1
-    * set :n *tmp170
+  386 op add :n :n 1
   387 jump *label40 always
   388 label *label42
   389 op notEqual *tmp171 bank1 null
   390 jump *label65 equal *tmp171 false
   391 op equal *tmp173 FROM_INDEX 0
   392 jump *label67 equal *tmp173 false
-    * read *tmp175 bank1 511
-    * set :rate *tmp175
+  393 read :rate bank1 511
   394 op notEqual *tmp176 :lastRate :rate
   395 jump *label69 equal *tmp176 false
   396 op mul *tmp178 EXPECTED_BOOST :factories
-    * op div *tmp179 *tmp178 11.25
-    * set :expected_flow *tmp179
+  397 op div :expected_flow *tmp178 11.25
   398 op mul *tmp180 :expected_flow 3600
-    * op floor *tmp181 *tmp180
-    * set :expected_flow_str *tmp181
+  399 op floor :expected_flow_str *tmp180
   400 set :lastRate :rate
   401 draw color 0 0 80 255
   402 draw rect 156 0 16 176
 
   414 op sub *tmp182 :rate :expected_flow
   415 op mul *tmp183 84 *tmp182
   416 op div *tmp184 *tmp183 :expected_flow
-    * op add *tmp185 88 *tmp184
-    * set :pos *tmp185
+  417 op add :pos 88 *tmp184
   418 op max *tmp186 :pos 4
-    * op min *tmp187 *tmp186 170
-    * set :pos *tmp187
-    * op add *tmp188 :pos 7
-    * set :pos1 *tmp188
-    * op sub *tmp189 :pos 7
-    * set :pos2 *tmp189
+  419 op min :pos *tmp186 170
+  420 op add :pos1 :pos 7
+  421 op sub :pos2 :pos 7
   422 draw color 255 255 16 255
   423 draw triangle 156 :pos1 164 :pos 156 :pos2
   424 op mul *tmp190 3600 :rate
-    * op floor *tmp191 *tmp190
-    * set :flow_str *tmp191
+  425 op floor :flow_str *tmp190
   426 jump *label70 always
   427 label *label69
   428 label *label70

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-26 instructions):
 
     1 set TO_INDEX 8
     2 set EXPECTED_BOOST 1.5
     3 draw clear 0 0 80
-    * op notEqual *tmp0 bank1 null
-    * jump *label0 equal *tmp0 false
+    4 jump *label0 equal bank1 null
     5 set .BAR_LENGTH 53
     6 set .BAR_SPACE 74
     7 jump *label1 always
 
    10 set .BAR_SPACE 88
    11 label *label1
    12 set :clx 0
-    * op notEqual *tmp2 bank1 null
-    * jump *label2 equal *tmp2 false
+   13 jump *label2 equal bank1 null
    14 set *tmp3 156
    15 jump *label3 always
    16 label *label2
    17 set *tmp3 176
    18 label *label3
    19 set :clw *tmp3
-    * op equal *tmp4 FROM_INDEX 0
-    * jump *label4 equal *tmp4 false
+   20 jump *label4 notEqual FROM_INDEX 0
    21 set *tmp5 0
    22 jump *label5 always
    23 label *label4
 
    25 op add *tmp5 4 *tmp6
    26 label *label5
    27 set :cly *tmp5
-    * op lessThan *tmp8 TO_INDEX 8
-    * jump *label6 equal *tmp8 false
+   28 jump *label6 greaterThanEq TO_INDEX 8
    29 op mul *tmp10 TO_INDEX 22
    30 op add *tmp9 4 *tmp10
    31 jump *label7 always
 
    41 control enabled switch1 0
    42 label *label8
    43 sensor *tmp14 switch1 @enabled
-    * op equal *tmp15 *tmp14 0
-    * jump *label10 equal *tmp15 false
+   44 jump *label10 notEqual *tmp14 0
    45 set :start @time
    46 print "Silicon Factory Monitor"
    47 set :factories 0
 
    51 set :index FROM_INDEX
    52 set :n 0
    53 label *label11
-    * op lessThan *tmp17 :n @links
-    * jump *label13 equal *tmp17 false
+   54 jump *label13 greaterThanEq :n @links
    55 getlink :smelter :n
    56 sensor *tmp19 :smelter @type
-    * op equal *tmp20 *tmp19 @silicon-crucible
-    * jump *label14 equal *tmp20 false
+   57 jump *label14 notEqual *tmp19 @silicon-crucible
    58 set :minimum 31
    59 sensor :s :smelter @sand
    60 sensor :c :smelter @coal
 
    64 sensor :e :smelter @enabled
    65 sensor :power :smelter @totalPower
    66 sensor :boost :smelter @timescale
-    * op lessThan *tmp30 :s :minimum
-    * jump *label16 equal *tmp30 false
+   67 jump *label16 greaterThanEq :s :minimum
    68 set :minimum :s
    69 set :icon @sand
    70 jump *label17 always
    71 label *label16
    72 label *label17
-    * op lessThan *tmp32 :c :minimum
-    * jump *label18 equal *tmp32 false
+   73 jump *label18 greaterThanEq :c :minimum
    74 set :minimum :c
    75 set :icon @coal
    76 jump *label19 always
    77 label *label18
    78 label *label19
-    * op lessThan *tmp34 :p :minimum
-    * jump *label20 equal *tmp34 false
+   79 jump *label20 greaterThanEq :p :minimum
    80 set :minimum :p
    81 set :icon @pyratite
    82 jump *label21 always
 
   111 label *label25
   112 draw color 255 255 255 255
   113 jump *label26 equal :e false
-    * op greaterThan *tmp52 :power 0
-    * jump *label28 equal *tmp52 false
+  114 jump *label28 lessThanEq :power 0
   115 op add *tmp54 :x 7
   116 op add *tmp55 :y 7
   117 draw image *tmp54 *tmp55 :icon 16 0
 
   157 label *label27
   158 op add :x :x 16
   159 op mul *tmp76 :power :e
-    * op equal *tmp77 *tmp76 0
-    * jump *label30 equal *tmp77 false
+  160 jump *label30 notEqual *tmp76 0
   161 set :red 255
   162 set :green 0
   163 set :blue 0
 
   180 set *tmp83 255
   181 label *label35
   182 set :red *tmp83
-    * op greaterThan *tmp84 :minimum 10
-    * jump *label36 equal *tmp84 false
+  183 jump *label36 lessThanEq :minimum 10
   184 set *tmp85 255
   185 jump *label37 always
   186 label *label36
 
   190 set :blue 0
   191 label *label33
   192 label *label31
-    * op greaterThan *tmp86 :boost EXPECTED_BOOST
-    * jump *label38 equal *tmp86 false
+  193 jump *label38 lessThanEq :boost EXPECTED_BOOST
   194 op max :red 192 :red
   195 op max :green 192 :green
   196 op max :blue 192 :blue
 
   218 set :index FROM_INDEX
   219 set :n 0
   220 label *label40
-    * op lessThan *tmp98 :n @links
-    * jump *label42 equal *tmp98 false
+  221 jump *label42 greaterThanEq :n @links
   222 getlink :smelter :n
   223 sensor *tmp100 :smelter @type
-    * op equal *tmp101 *tmp100 @pyratite-mixer
-    * jump *label43 equal *tmp101 false
+  224 jump *label43 notEqual *tmp100 @pyratite-mixer
   225 set :minimum 11
   226 sensor :s :smelter @sand
   227 sensor :c :smelter @coal
 
   230 sensor :e :smelter @enabled
   231 sensor :power :smelter @totalPower
   232 sensor :boost :smelter @timescale
-    * op lessThan *tmp110 :s :minimum
-    * jump *label45 equal *tmp110 false
+  233 jump *label45 greaterThanEq :s :minimum
   234 set :minimum :s
   235 set :icon @sand
   236 jump *label46 always
   237 label *label45
   238 label *label46
-    * op lessThan *tmp112 :c :minimum
-    * jump *label47 equal *tmp112 false
+  239 jump *label47 greaterThanEq :c :minimum
   240 set :minimum :c
   241 set :icon @coal
   242 jump *label48 always
   243 label *label47
   244 label *label48
-    * op lessThan *tmp114 :l :minimum
-    * jump *label49 equal *tmp114 false
+  245 jump *label49 greaterThanEq :l :minimum
   246 set :minimum :l
   247 set :icon @lead
   248 jump *label50 always
 
   268 label *label52
   269 draw color 255 255 255 255
   270 jump *label53 equal :e false
-    * op greaterThan *tmp127 :power 0
-    * jump *label55 equal *tmp127 false
+  271 jump *label55 lessThanEq :power 0
   272 op add *tmp129 :x 7
   273 op add *tmp130 :y 7
   274 draw image *tmp129 *tmp130 :icon 16 0
 
   314 label *label54
   315 op add :x :x 16
   316 op mul *tmp151 :power :e
-    * op equal *tmp152 *tmp151 0
-    * jump *label57 equal *tmp152 false
+  317 jump *label57 notEqual *tmp151 0
   318 set :red 255
   319 set :green 0
   320 set :blue 0
 
   330 set *tmp157 255
   331 label *label60
   332 set :red *tmp157
-    * op greaterThan *tmp158 :minimum 3
-    * jump *label61 equal *tmp158 false
+  333 jump *label61 lessThanEq :minimum 3
   334 set *tmp159 255
   335 jump *label62 always
   336 label *label61
 
   339 set :green *tmp159
   340 set :blue 0
   341 label *label58
-    * op greaterThan *tmp160 :boost EXPECTED_BOOST
-    * jump *label63 equal *tmp160 false
+  342 jump *label63 lessThanEq :boost EXPECTED_BOOST
   343 op max :red 192 :red
   344 op max :green 192 :green
   345 op max :blue 192 :blue
 
   363 op add :n :n 1
   364 jump *label40 always
   365 label *label42
-    * op notEqual *tmp171 bank1 null
-    * jump *label65 equal *tmp171 false
-    * op equal *tmp173 FROM_INDEX 0
-    * jump *label67 equal *tmp173 false
+  366 jump *label65 equal bank1 null
+  367 jump *label67 notEqual FROM_INDEX 0
   368 read :rate bank1 511
-    * op notEqual *tmp176 :lastRate :rate
-    * jump *label69 equal *tmp176 false
+  369 jump *label69 equal :lastRate :rate
   370 op mul *tmp178 EXPECTED_BOOST :factories
   371 op div :expected_flow *tmp178 11.25
   372 op mul *tmp180 :expected_flow 3600

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-16 instructions):
 
    67 jump *label16 greaterThanEq :s :minimum
    68 set :minimum :s
    69 set :icon @sand
-    * jump *label17 always
    70 label *label16
    71 label *label17
    72 jump *label18 greaterThanEq :c :minimum
    73 set :minimum :c
    74 set :icon @coal
-    * jump *label19 always
    75 label *label18
    76 label *label19
    77 jump *label20 greaterThanEq :p :minimum
    78 set :minimum :p
    79 set :icon @pyratite
-    * jump *label21 always
    80 label *label20
    81 label *label21
    82 op greaterThan *tmp36 :a 10
 
    85 op land :showa *tmp36 *tmp38
    86 jump *label22 equal :showa false
    87 set :icon @silicon
-    * jump *label23 always
    88 label *label22
    89 label *label23
    90 set :column 0
 
   102 op land *tmp49 *tmp47 *tmp48
   103 jump *label24 equal *tmp49 false
   104 set :icon @silicon-crucible
-    * jump *label25 always
   105 label *label24
   106 label *label25
   107 draw color 255 255 255 255
 
   190 op max :green 192 :green
   191 op max :blue 192 :blue
   192 set :boost EXPECTED_BOOST
-    * jump *label39 always
   193 label *label38
   194 label *label39
   195 op mul *tmp91 .BAR_LENGTH :boost
 
   202 draw lineRect :x :y :length 14
   203 op add :index :index 1
   204 op add :factories :factories 1
-    * jump *label15 always
   205 label *label14
   206 label *label15
   207 label *label12
 
   226 jump *label45 greaterThanEq :s :minimum
   227 set :minimum :s
   228 set :icon @sand
-    * jump *label46 always
   229 label *label45
   230 label *label46
   231 jump *label47 greaterThanEq :c :minimum
   232 set :minimum :c
   233 set :icon @coal
-    * jump *label48 always
   234 label *label47
   235 label *label48
   236 jump *label49 greaterThanEq :l :minimum
   237 set :minimum :l
   238 set :icon @lead
-    * jump *label50 always
   239 label *label49
   240 label *label50
   241 set :column 1
 
   253 op land *tmp124 *tmp122 *tmp123
   254 jump *label51 equal *tmp124 false
   255 set :icon @pyratite-mixer
-    * jump *label52 always
   256 label *label51
   257 label *label52
   258 draw color 255 255 255 255
 
   333 op max :green 192 :green
   334 op max :blue 192 :blue
   335 set :boost EXPECTED_BOOST
-    * jump *label64 always
   336 label *label63
   337 label *label64
   338 op mul *tmp165 .BAR_LENGTH :boost
 
   344 draw color :red :green :blue 255
   345 draw lineRect :x :y :length 14
   346 op add :index :index 1
-    * jump *label44 always
   347 label *label43
   348 label *label44
   349 label *label41
 
   384 draw triangle 156 :pos1 164 :pos 156 :pos2
   385 op mul *tmp190 3600 :rate
   386 op floor :flow_str *tmp190
-    * jump *label70 always
   387 label *label69
   388 label *label70
-    * jump *label68 always
   389 label *label67
   390 label *label68
   391 print "\nNominal production: "
 
   394 print "\nActual production: "
   395 print :flow_str
   396 print "/min"
-    * jump *label66 always
   397 label *label65
   398 label *label66
   399 drawflush display1

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   356 jump *label69 equal :lastRate :rate
   357 op mul *tmp178 EXPECTED_BOOST :factories
   358 op div :expected_flow *tmp178 11.25
-    * op mul *tmp180 :expected_flow 3600
-    * op floor :expected_flow_str *tmp180
+  359 op idiv :expected_flow_str :expected_flow 0.0002777777777777778
   360 set :lastRate :rate
   361 draw color 0 0 80 255
   362 draw rect 156 0 16 176
 
   381 op sub :pos2 :pos 7
   382 draw color 255 255 16 255
   383 draw triangle 156 :pos1 164 :pos 156 :pos2
-    * op mul *tmp190 3600 :rate
-    * op floor :flow_str *tmp190
+  384 op idiv :flow_str :rate 0.0002777777777777778
   385 label *label69
   386 label *label70
   387 label *label67

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    32 label *label6
    33 set *tmp9 176
    34 label *label7
-    * op sub :clh *tmp9 :cly
+   35 op sub :clh *tmp9 *tmp5
    36 set :showa null
-    * set :lastRate :showa
-    * set :flow_str :lastRate
-    * set :expected_flow_str :flow_str
-    * set :icon :expected_flow_str
+   37 set :lastRate null
+   38 set :flow_str :showa
+   39 set :expected_flow_str :lastRate
+   40 set :icon :flow_str
    41 control enabled switch1 0
    42 label *label8
    43 sensor *tmp14 switch1 @enabled
 
    46 print "Silicon Factory Monitor"
    47 set :factories 0
    48 draw color 0 0 80 255
-    * draw rect :clx :cly :clw :clh
+   49 draw rect 0 *tmp5 *tmp3 :clh
    50 draw stroke 2
    51 set :index FROM_INDEX
    52 set :n 0
 
    64 sensor :e :smelter @enabled
    65 sensor :power :smelter @totalPower
    66 sensor :boost :smelter @timescale
-    * jump *label16 greaterThanEq :s :minimum
+   67 jump *label16 greaterThanEq :s 31
    68 set :minimum :s
    69 set :icon @sand
    70 label *label16
 
    89 label *label23
    90 set :column 0
    91 set :row :index
-    * op mul *tmp41 :column .BAR_SPACE
+   92 op mul *tmp41 0 .BAR_SPACE
    93 op add :x 5 *tmp41
-    * op mul *tmp43 :row 22
+   94 op mul *tmp43 :index 22
    95 op add :y 4 *tmp43
    96 draw color 0 0 80 255
    97 op sub *tmp45 :x 1
 
   121 draw rect *tmp57 *tmp58 8 4
   122 op add *tmp59 :x 12
   123 op add *tmp60 :y 3
-    * draw rect *tmp59 *tmp60 2 2
+  124 draw rect *tmp59 *tmp56 2 2
   125 op add *tmp61 :x 12
   126 op add *tmp62 :y 9
-    * draw rect *tmp61 *tmp62 2 2
+  127 draw rect *tmp59 *tmp62 2 2
   128 draw color 255 80 80 255
   129 op add *tmp63 :x 4
   130 op add *tmp64 :y 6
 
   143 op add *tmp70 :y 2
   144 op add *tmp71 :x 12
   145 op add *tmp72 :y 12
-    * draw line *tmp69 *tmp70 *tmp71 *tmp72
+  146 draw line *tmp65 *tmp68 *tmp67 *tmp66
   147 draw color 0 0 0 255
   148 op sub *tmp73 :x 1
   149 op sub *tmp74 :y 1
-    * draw lineRect *tmp73 *tmp74 16 16
+  150 draw lineRect *tmp45 *tmp46 16 16
   151 draw stroke 2
   152 label *label27
-    * op add :x :x 16
+  153 op add :x *tmp41 21
   154 op mul *tmp76 :power :e
   155 jump *label30 notEqual *tmp76 0
   156 set :red 255
 
   223 sensor :e :smelter @enabled
   224 sensor :power :smelter @totalPower
   225 sensor :boost :smelter @timescale
-    * jump *label45 greaterThanEq :s :minimum
+  226 jump *label45 greaterThanEq :s 11
   227 set :minimum :s
   228 set :icon @sand
   229 label *label45
 
   240 label *label50
   241 set :column 1
   242 set :row :index
-    * op mul *tmp116 :column .BAR_SPACE
+  243 op mul *tmp116 1 .BAR_SPACE
   244 op add :x 5 *tmp116
-    * op mul *tmp118 :row 22
+  245 op mul *tmp118 :index 22
   246 op add :y 4 *tmp118
   247 draw color 0 0 80 255
   248 op sub *tmp120 :x 1
 
   272 draw rect *tmp132 *tmp133 8 4
   273 op add *tmp134 :x 12
   274 op add *tmp135 :y 3
-    * draw rect *tmp134 *tmp135 2 2
+  275 draw rect *tmp134 *tmp131 2 2
   276 op add *tmp136 :x 12
   277 op add *tmp137 :y 9
-    * draw rect *tmp136 *tmp137 2 2
+  278 draw rect *tmp134 *tmp137 2 2
   279 draw color 255 80 80 255
   280 op add *tmp138 :x 4
   281 op add *tmp139 :y 6
 
   294 op add *tmp145 :y 2
   295 op add *tmp146 :x 12
   296 op add *tmp147 :y 12
-    * draw line *tmp144 *tmp145 *tmp146 *tmp147
+  297 draw line *tmp140 *tmp143 *tmp142 *tmp141
   298 draw color 0 0 0 255
   299 op sub *tmp148 :x 1
   300 op sub *tmp149 :y 1
-    * draw lineRect *tmp148 *tmp149 16 16
+  301 draw lineRect *tmp120 *tmp121 16 16
   302 draw stroke 2
   303 label *label54
-    * op add :x :x 16
+  304 op add :x *tmp116 21
   305 op mul *tmp151 :power :e
   306 jump *label57 notEqual *tmp151 0
   307 set :red 255
 
   311 label *label57
   312 op greaterThan *tmp154 :minimum 6
   313 op greaterThanEq *tmp155 :boost EXPECTED_BOOST
-    * op land *tmp156 *tmp154 *tmp155
+  314 op land *tmp156 *tmp122 *tmp155
   315 jump *label59 equal *tmp156 false
   316 set *tmp157 0
   317 jump *label60 always
 
   331 jump *label63 lessThanEq :boost EXPECTED_BOOST
   332 op max :red 192 :red
   333 op max :green 192 :green
-    * op max :blue 192 :blue
+  334 op max :blue 192 0
   335 set :boost EXPECTED_BOOST
   336 label *label63
   337 label *label64

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-24 instructions):
 
     9 set .BAR_LENGTH 61
    10 set .BAR_SPACE 88
    11 label *label1
-    * set :clx 0
    12 jump *label2 equal bank1 null
    13 set *tmp3 156
    14 jump *label3 always
    15 label *label2
    16 set *tmp3 176
    17 label *label3
-    * set :clw *tmp3
    18 jump *label4 notEqual FROM_INDEX 0
    19 set *tmp5 0
    20 jump *label5 always
 
    22 op mul *tmp6 FROM_INDEX 22
    23 op add *tmp5 4 *tmp6
    24 label *label5
-    * set :cly *tmp5
    25 jump *label6 greaterThanEq TO_INDEX 8
    26 op mul *tmp10 TO_INDEX 22
    27 op add *tmp9 4 *tmp10
 
    32 op sub :clh *tmp9 *tmp5
    33 set :showa null
    34 set :lastRate null
-    * set :flow_str :showa
-    * set :expected_flow_str :lastRate
-    * set :icon :flow_str
+   35 set :flow_str null
+   36 set :expected_flow_str null
+   37 set :icon :showa
    38 control enabled switch1 0
    39 label *label8
    40 sensor *tmp14 switch1 @enabled
 
    84 set :icon @silicon
    85 label *label22
    86 label *label23
-    * set :column 0
-    * set :row :index
    87 op mul *tmp41 0 .BAR_SPACE
    88 op add :x 5 *tmp41
    89 op mul *tmp43 :index 22
 
   115 op add *tmp58 :y 5
   116 draw rect *tmp57 *tmp58 8 4
   117 op add *tmp59 :x 12
-    * op add *tmp60 :y 3
   118 draw rect *tmp59 *tmp56 2 2
-    * op add *tmp61 :x 12
   119 op add *tmp62 :y 9
   120 draw rect *tmp59 *tmp62 2 2
   121 draw color 255 80 80 255
 
   132 op add *tmp67 :x 12
   133 op add *tmp68 :y 2
   134 draw line *tmp65 *tmp66 *tmp67 *tmp68
-    * op add *tmp69 :x 2
-    * op add *tmp70 :y 2
-    * op add *tmp71 :x 12
-    * op add *tmp72 :y 12
   135 draw line *tmp65 *tmp68 *tmp67 *tmp66
   136 draw color 0 0 0 255
-    * op sub *tmp73 :x 1
-    * op sub *tmp74 :y 1
   137 draw lineRect *tmp45 *tmp46 16 16
   138 draw stroke 2
   139 label *label27
 
   225 set :icon @lead
   226 label *label49
   227 label *label50
-    * set :column 1
-    * set :row :index
   228 op mul *tmp116 1 .BAR_SPACE
   229 op add :x 5 *tmp116
   230 op mul *tmp118 :index 22
 
   256 op add *tmp133 :y 5
   257 draw rect *tmp132 *tmp133 8 4
   258 op add *tmp134 :x 12
-    * op add *tmp135 :y 3
   259 draw rect *tmp134 *tmp131 2 2
-    * op add *tmp136 :x 12
   260 op add *tmp137 :y 9
   261 draw rect *tmp134 *tmp137 2 2
   262 draw color 255 80 80 255
 
   273 op add *tmp142 :x 12
   274 op add *tmp143 :y 2
   275 draw line *tmp140 *tmp141 *tmp142 *tmp143
-    * op add *tmp144 :x 2
-    * op add *tmp145 :y 2
-    * op add *tmp146 :x 12
-    * op add *tmp147 :y 12
   276 draw line *tmp140 *tmp143 *tmp142 *tmp141
   277 draw color 0 0 0 255
-    * op sub *tmp148 :x 1
-    * op sub *tmp149 :y 1
   278 draw lineRect *tmp120 *tmp121 16 16
   279 draw stroke 2
   280 label *label54
 
   286 set :blue 0
   287 jump *label58 always
   288 label *label57
-    * op greaterThan *tmp154 :minimum 6
   289 op greaterThanEq *tmp155 :boost EXPECTED_BOOST
   290 op land *tmp156 *tmp122 *tmp155
   291 jump *label59 equal *tmp156 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    34 set :lastRate null
    35 set :flow_str null
    36 set :expected_flow_str null
-    * set :icon :showa
+   37 set :icon null
    38 control enabled switch1 0
    39 label *label8
    40 sensor *tmp14 switch1 @enabled

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    49 set :n 0
    50 label *label11
    51 jump *label13 greaterThanEq :n @links
+   52 label *label71
    53 getlink :smelter :n
    54 sensor *tmp19 :smelter @type
    55 jump *label14 notEqual *tmp19 @silicon-crucible
 
   194 label *label15
   195 label *label12
   196 op add :n :n 1
-    * jump *label11 always
+  197 jump *label71 lessThan :n @links
   198 label *label13
   199 set :index FROM_INDEX
   200 set :n 0
   201 label *label40
   202 jump *label42 greaterThanEq :n @links
+  203 label *label72
   204 getlink :smelter :n
   205 sensor *tmp100 :smelter @type
   206 jump *label43 notEqual *tmp100 @pyratite-mixer
 
   326 label *label44
   327 label *label41
   328 op add :n :n 1
-    * jump *label40 always
+  329 jump *label72 lessThan :n @links
   330 label *label42
   331 jump *label65 equal bank1 null
   332 jump *label67 notEqual FROM_INDEX 0

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-5 instructions):
 
     9 set .BAR_LENGTH 61
    10 set .BAR_SPACE 88
    11 label *label1
-    * jump *label2 equal bank1 null
+   12 set *tmp3 176
+   13 jump *label3 equal bank1 null
    14 set *tmp3 156
    15 jump *label3 always
-    * label *label2
-    * set *tmp3 176
    16 label *label3
-    * jump *label4 notEqual FROM_INDEX 0
    17 set *tmp5 0
-    * jump *label5 always
+   18 jump *label5 equal FROM_INDEX 0
    19 label *label4
    20 op mul *tmp6 FROM_INDEX 22
    21 op add *tmp5 4 *tmp6
    22 label *label5
-    * jump *label6 greaterThanEq TO_INDEX 8
+   23 set *tmp9 176
+   24 jump *label7 greaterThanEq TO_INDEX 8
    25 op mul *tmp10 TO_INDEX 22
    26 op add *tmp9 4 *tmp10
    27 jump *label7 always
-    * label *label6
-    * set *tmp9 176
    28 label *label7
    29 op sub :clh *tmp9 *tmp5
    30 set :showa null
 
   150 set :minimum :a
   151 jump *label33 always
   152 label *label32
+  153 set :red 255
   154 op greaterThan *tmp80 :minimum 20
   155 op greaterThanEq *tmp81 :boost EXPECTED_BOOST
   156 op land *tmp82 *tmp80 *tmp81
-    * jump *label34 equal *tmp82 false
-    * set *tmp83 0
+  157 jump *label35 equal *tmp82 false
+  158 set :red 0
   159 jump *label35 always
-    * label *label34
-    * set *tmp83 255
   160 label *label35
-    * set :red *tmp83
-    * jump *label36 lessThanEq :minimum 10
-    * set *tmp85 255
+  161 set :green 0
+  162 jump *label37 lessThanEq :minimum 10
+  163 set :green 255
   164 jump *label37 always
-    * label *label36
-    * set *tmp85 0
   165 label *label37
-    * set :green *tmp85
   166 set :blue 0
   167 label *label33
   168 label *label31
 
   281 set :blue 0
   282 jump *label58 always
   283 label *label57
+  284 set :red 255
   285 op greaterThanEq *tmp155 :boost EXPECTED_BOOST
   286 op land *tmp156 *tmp122 *tmp155
-    * jump *label59 equal *tmp156 false
-    * set *tmp157 0
+  287 jump *label60 equal *tmp156 false
+  288 set :red 0
   289 jump *label60 always
-    * label *label59
-    * set *tmp157 255
   290 label *label60
-    * set :red *tmp157
-    * jump *label61 lessThanEq :minimum 3
-    * set *tmp159 255
+  291 set :green 0
+  292 jump *label62 lessThanEq :minimum 3
+  293 set :green 255
   294 jump *label62 always
-    * label *label61
-    * set *tmp159 0
   295 label *label62
-    * set :green *tmp159
   296 set :blue 0
   297 label *label58
   298 jump *label63 lessThanEq :boost EXPECTED_BOOST

Modifications by Replicate loop condition at line 33:1 (+1 instructions):
 
    36 label *label8
    37 sensor *tmp14 switch1 @enabled
    38 jump *label10 notEqual *tmp14 0
+   39 label *label73
    40 set :start @time
    41 print "Silicon Factory Monitor"
    42 set :factories 0
 
   370 print " ms"
   371 printflush message1
   372 label *label9
-    * jump *label8 always
+  373 sensor *tmp14 switch1 @enabled
+  374 jump *label73 equal *tmp14 0
   375 label *label10
   376 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    46 set :index FROM_INDEX
    47 set :n 0
    48 label *label11
-    * jump *label13 greaterThanEq :n @links
+   49 jump *label13 greaterThanEq 0 @links
    50 label *label71
    51 getlink :smelter :n
    52 sensor *tmp19 :smelter @type
 
   193 set :index FROM_INDEX
   194 set :n 0
   195 label *label40
-    * jump *label42 greaterThanEq :n @links
+  196 jump *label42 greaterThanEq 0 @links
   197 label *label72
   198 getlink :smelter :n
   199 sensor *tmp100 :smelter @type

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
    12 set *tmp3 176
    13 jump *label3 equal bank1 null
    14 set *tmp3 156
-    * jump *label3 always
    15 label *label3
    16 set *tmp5 0
    17 jump *label5 equal FROM_INDEX 0
 
    23 jump *label7 greaterThanEq TO_INDEX 8
    24 op mul *tmp10 TO_INDEX 22
    25 op add *tmp9 4 *tmp10
-    * jump *label7 always
    26 label *label7
    27 op sub :clh *tmp9 *tmp5
    28 set :showa null
 
   155 op land *tmp82 *tmp80 *tmp81
   156 jump *label35 equal *tmp82 false
   157 set :red 0
-    * jump *label35 always
   158 label *label35
   159 set :green 0
   160 jump *label37 lessThanEq :minimum 10
   161 set :green 255
-    * jump *label37 always
   162 label *label37
   163 set :blue 0
   164 label *label33
 
   283 op land *tmp156 *tmp122 *tmp155
   284 jump *label60 equal *tmp156 false
   285 set :red 0
-    * jump *label60 always
   286 label *label60
   287 set :green 0
   288 jump *label62 lessThanEq :minimum 3
   289 set :green 255
-    * jump *label62 always
   290 label *label62
   291 set :blue 0
   292 label *label58

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    81 set :icon @silicon
    82 label *label22
    83 label *label23
-    * op mul *tmp41 0 .BAR_SPACE
+   84 set *tmp41 0
    85 op add :x 5 *tmp41
    86 op mul *tmp43 :index 22
    87 op add :y 4 *tmp43
 
   217 set :icon @lead
   218 label *label49
   219 label *label50
-    * op mul *tmp116 1 .BAR_SPACE
+  220 set *tmp116 .BAR_SPACE
   221 op add :x 5 *tmp116
   222 op mul *tmp118 :index 22
   223 op add :y 4 *tmp118

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    82 label *label22
    83 label *label23
    84 set *tmp41 0
-    * op add :x 5 *tmp41
+   85 op add :x 5 0
    86 op mul *tmp43 :index 22
    87 op add :y 4 *tmp43
    88 draw color 0 0 80 255
-    * op sub *tmp45 :x 1
+   89 op sub *tmp45 5 1
    90 op sub *tmp46 :y 1
-    * draw rect *tmp45 *tmp46 .BAR_SPACE 16
+   91 draw rect 4 *tmp46 .BAR_SPACE 16
    92 op greaterThan *tmp47 :minimum 26
    93 op equal *tmp48 :showa 0
    94 op land *tmp49 *tmp47 *tmp48
 
    99 draw color 255 255 255 255
   100 jump *label26 equal :e false
   101 jump *label28 lessThanEq :power 0
-    * op add *tmp54 :x 7
+  102 op add *tmp54 5 7
   103 op add *tmp55 :y 7
-    * draw image *tmp54 *tmp55 :icon 16 0
+  104 draw image 12 *tmp55 :icon 16 0
   105 jump *label29 always
   106 label *label28
   107 draw color 255 80 80 255
   108 op add *tmp56 :y 3
-    * draw rect :x *tmp56 14 8
+  109 draw rect 5 *tmp56 14 8
   110 draw color 0 0 0 255
-    * op add *tmp57 :x 2
+  111 op add *tmp57 5 2
   112 op add *tmp58 :y 5
-    * draw rect *tmp57 *tmp58 8 4
-    * op add *tmp59 :x 12
-    * draw rect *tmp59 *tmp56 2 2
+  113 draw rect 7 *tmp58 8 4
+  114 op add *tmp59 5 12
+  115 draw rect 17 *tmp56 2 2
   116 op add *tmp62 :y 9
-    * draw rect *tmp59 *tmp62 2 2
+  117 draw rect 17 *tmp62 2 2
   118 draw color 255 80 80 255
-    * op add *tmp63 :x 4
+  119 op add *tmp63 5 4
   120 op add *tmp64 :y 6
-    * draw rect *tmp63 *tmp64 2 2
+  121 draw rect 9 *tmp64 2 2
   122 label *label29
   123 jump *label27 always
   124 label *label26
   125 draw color 255 80 80 255
   126 draw stroke 3
-    * op add *tmp65 :x 2
+  127 op add *tmp65 5 2
   128 op add *tmp66 :y 12
-    * op add *tmp67 :x 12
+  129 op add *tmp67 5 12
   130 op add *tmp68 :y 2
-    * draw line *tmp65 *tmp66 *tmp67 *tmp68
-    * draw line *tmp65 *tmp68 *tmp67 *tmp66
+  131 draw line 7 *tmp66 17 *tmp68
+  132 draw line 7 *tmp68 17 *tmp66
   133 draw color 0 0 0 255
-    * draw lineRect *tmp45 *tmp46 16 16
+  134 draw lineRect 4 *tmp46 16 16
   135 draw stroke 2
   136 label *label27
-    * op add :x *tmp41 21
+  137 op add :x 0 21
   138 op mul *tmp76 :power :e
   139 jump *label30 notEqual *tmp76 0
   140 set :red 255
 
   175 draw color :red :green :blue 128
   176 op mul *tmp93 :minimum :length
   177 op idiv *tmp94 *tmp93 30
-    * draw rect :x :y *tmp94 14
+  178 draw rect 21 :y *tmp94 14
   179 draw color :red :green :blue 255
-    * draw lineRect :x :y :length 14
+  180 draw lineRect 21 :y :length 14
   181 op add :index :index 1
   182 op add :factories :factories 1
   183 label *label14
 
   218 label *label49
   219 label *label50
   220 set *tmp116 .BAR_SPACE
-    * op add :x 5 *tmp116
+  221 op add :x 5 .BAR_SPACE
   222 op mul *tmp118 :index 22
   223 op add :y 4 *tmp118
   224 draw color 0 0 80 255
 
   270 draw lineRect *tmp120 *tmp121 16 16
   271 draw stroke 2
   272 label *label54
-    * op add :x *tmp116 21
+  273 op add :x .BAR_SPACE 21
   274 op mul *tmp151 :power :e
   275 jump *label57 notEqual *tmp151 0
   276 set :red 255

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-11 instructions):
 
    81 set :icon @silicon
    82 label *label22
    83 label *label23
-    * set *tmp41 0
-    * op add :x 5 0
    84 op mul *tmp43 :index 22
    85 op add :y 4 *tmp43
    86 draw color 0 0 80 255
-    * op sub *tmp45 5 1
    87 op sub *tmp46 :y 1
    88 draw rect 4 *tmp46 .BAR_SPACE 16
    89 op greaterThan *tmp47 :minimum 26
 
    96 draw color 255 255 255 255
    97 jump *label26 equal :e false
    98 jump *label28 lessThanEq :power 0
-    * op add *tmp54 5 7
    99 op add *tmp55 :y 7
   100 draw image 12 *tmp55 :icon 16 0
   101 jump *label29 always
 
   104 op add *tmp56 :y 3
   105 draw rect 5 *tmp56 14 8
   106 draw color 0 0 0 255
-    * op add *tmp57 5 2
   107 op add *tmp58 :y 5
   108 draw rect 7 *tmp58 8 4
-    * op add *tmp59 5 12
   109 draw rect 17 *tmp56 2 2
   110 op add *tmp62 :y 9
   111 draw rect 17 *tmp62 2 2
   112 draw color 255 80 80 255
-    * op add *tmp63 5 4
   113 op add *tmp64 :y 6
   114 draw rect 9 *tmp64 2 2
   115 label *label29
 
   117 label *label26
   118 draw color 255 80 80 255
   119 draw stroke 3
-    * op add *tmp65 5 2
   120 op add *tmp66 :y 12
-    * op add *tmp67 5 12
   121 op add *tmp68 :y 2
   122 draw line 7 *tmp66 17 *tmp68
   123 draw line 7 *tmp68 17 *tmp66
 
   125 draw lineRect 4 *tmp46 16 16
   126 draw stroke 2
   127 label *label27
-    * op add :x 0 21
   128 op mul *tmp76 :power :e
   129 jump *label30 notEqual *tmp76 0
   130 set :red 255
 
   207 set :icon @lead
   208 label *label49
   209 label *label50
-    * set *tmp116 .BAR_SPACE
   210 op add :x 5 .BAR_SPACE
   211 op mul *tmp118 :index 22
   212 op add :y 4 *tmp118

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    15 label *label3
    16 set *tmp5 0
    17 jump *label5 equal FROM_INDEX 0
-    * label *label4
    18 op mul *tmp6 FROM_INDEX 22
    19 op add *tmp5 4 *tmp6
    20 label *label5
 
    30 set :expected_flow_str null
    31 set :icon null
    32 control enabled switch1 0
-    * label *label8
    33 sensor *tmp14 switch1 @enabled
    34 jump *label10 notEqual *tmp14 0
    35 label *label73
 
    41 draw stroke 2
    42 set :index FROM_INDEX
    43 set :n 0
-    * label *label11
    44 jump *label13 greaterThanEq 0 @links
    45 label *label71
    46 getlink :smelter :n
 
    59 set :minimum :s
    60 set :icon @sand
    61 label *label16
-    * label *label17
    62 jump *label18 greaterThanEq :c :minimum
    63 set :minimum :c
    64 set :icon @coal
    65 label *label18
-    * label *label19
    66 jump *label20 greaterThanEq :p :minimum
    67 set :minimum :p
    68 set :icon @pyratite
    69 label *label20
-    * label *label21
    70 op greaterThan *tmp36 :a 10
    71 op sub *tmp37 31 :a
    72 op lessThan *tmp38 *tmp37 :minimum
 
    74 jump *label22 equal :showa false
    75 set :icon @silicon
    76 label *label22
-    * label *label23
    77 op mul *tmp43 :index 22
    78 op add :y 4 *tmp43
    79 draw color 0 0 80 255
 
    85 jump *label24 equal *tmp49 false
    86 set :icon @silicon-crucible
    87 label *label24
-    * label *label25
    88 draw color 255 255 255 255
    89 jump *label26 equal :e false
    90 jump *label28 lessThanEq :power 0
 
   151 op max :blue 192 :blue
   152 set :boost EXPECTED_BOOST
   153 label *label38
-    * label *label39
   154 op mul *tmp91 .BAR_LENGTH :boost
   155 op idiv :length *tmp91 EXPECTED_BOOST
   156 draw color :red :green :blue 128
 
   162 op add :index :index 1
   163 op add :factories :factories 1
   164 label *label14
-    * label *label15
-    * label *label12
   165 op add :n :n 1
   166 jump *label71 lessThan :n @links
   167 label *label13
   168 set :index FROM_INDEX
   169 set :n 0
-    * label *label40
   170 jump *label42 greaterThanEq 0 @links
   171 label *label72
   172 getlink :smelter :n
 
   184 set :minimum :s
   185 set :icon @sand
   186 label *label45
-    * label *label46
   187 jump *label47 greaterThanEq :c :minimum
   188 set :minimum :c
   189 set :icon @coal
   190 label *label47
-    * label *label48
   191 jump *label49 greaterThanEq :l :minimum
   192 set :minimum :l
   193 set :icon @lead
   194 label *label49
-    * label *label50
   195 op add :x 5 .BAR_SPACE
   196 op mul *tmp118 :index 22
   197 op add :y 4 *tmp118
 
   205 jump *label51 equal *tmp124 false
   206 set :icon @pyratite-mixer
   207 label *label51
-    * label *label52
   208 draw color 255 255 255 255
   209 jump *label53 equal :e false
   210 jump *label55 lessThanEq :power 0
 
   269 op max :blue 192 0
   270 set :boost EXPECTED_BOOST
   271 label *label63
-    * label *label64
   272 op mul *tmp165 .BAR_LENGTH :boost
   273 op idiv :length *tmp165 EXPECTED_BOOST
   274 draw color :red :green :blue 128
 
   279 draw lineRect :x :y :length 14
   280 op add :index :index 1
   281 label *label43
-    * label *label44
-    * label *label41
   282 op add :n :n 1
   283 jump *label72 lessThan :n @links
   284 label *label42
 
   315 draw triangle 156 :pos1 164 :pos 156 :pos2
   316 op idiv :flow_str :rate 0.0002777777777777778
   317 label *label69
-    * label *label70
   318 label *label67
-    * label *label68
   319 print "\nNominal production: "
   320 print :expected_flow_str
   321 print "/min"
 
   323 print :flow_str
   324 print "/min"
   325 label *label65
-    * label *label66
   326 drawflush display1
   327 op sub *tmp192 @time :start
   328 op floor *tmp193 *tmp192
 
   330 print *tmp193
   331 print " ms"
   332 printflush message1
-    * label *label9
   333 sensor *tmp14 switch1 @enabled
   334 jump *label73 equal *tmp14 0
   335 label *label10

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 set FROM_INDEX 0
     2 set TO_INDEX 8
     3 set EXPECTED_BOOST 1.5
 
    32 set :icon null
    33 control enabled switch1 0
    34 sensor *tmp14 switch1 @enabled
-    * jump *label10 notEqual *tmp14 0
+   35 jump __start__ notEqual *tmp14 0
    36 label *label73
    37 set :start @time
    38 print "Silicon Factory Monitor"
 
    91 jump *label28 lessThanEq :power 0
    92 op add *tmp55 :y 7
    93 draw image 12 *tmp55 :icon 16 0
-    * jump *label29 always
+   94 jump *label27 always
    95 label *label28
    96 draw color 255 80 80 255
    97 op add *tmp56 :y 3
 
   212 op add *tmp129 :x 7
   213 op add *tmp130 :y 7
   214 draw image *tmp129 *tmp130 :icon 16 0
-    * jump *label56 always
+  215 jump *label54 always
   216 label *label55
   217 draw color 255 80 80 255
   218 op add *tmp131 :y 3

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1:
 
   105 draw color 255 80 80 255
   106 op add *tmp64 :y 6
   107 draw rect 9 *tmp64 2 2
-    * label *label29
   108 jump *label27 always
   109 label *label26
   110 draw color 255 80 80 255
 
   228 op add *tmp138 :x 4
   229 op add *tmp139 :y 6
   230 draw rect *tmp138 *tmp139 2 2
-    * label *label56
   231 jump *label54 always
   232 label *label53
   233 draw color 255 80 80 255
 
   331 printflush message1
   332 sensor *tmp14 switch1 @enabled
   333 jump *label73 equal *tmp14 0
-    * label *label10
   334 end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   331 printflush message1
   332 sensor *tmp14 switch1 @enabled
   333 jump *label73 equal *tmp14 0
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   315 op idiv :flow_str :rate 0.0002777777777777778
   316 label *label69
   317 label *label67
-    * print "\nNominal production: "
-    * print :expected_flow_str
-    * print "/min"
-    * print "\nActual production: "
-    * print :flow_str
-    * print "/min"
+  318 print "\nNominal production: {0}/min\nActual production: {0}/min"
+  319 format :expected_flow_str
+  320 format :flow_str
   321 label *label65
   322 drawflush display1
   323 op sub *tmp192 @time :start
   324 op floor *tmp193 *tmp192
-    * print "\nUpdate time: "
-    * print *tmp193
-    * print " ms"
+  325 print "\nUpdate time: {0} ms"
+  326 format *tmp193
   327 printflush message1
   328 sensor *tmp14 switch1 @enabled
   329 jump *label73 equal *tmp14 0

Final code before resolving virtual instructions:

label __start__
set FROM_INDEX 0
set TO_INDEX 8
set EXPECTED_BOOST 1.5
draw clear 0 0 80
jump *label0 equal bank1 null
set .BAR_LENGTH 53
set .BAR_SPACE 74
jump *label1 always
label *label0
set .BAR_LENGTH 61
set .BAR_SPACE 88
label *label1
set *tmp3 176
jump *label3 equal bank1 null
set *tmp3 156
label *label3
set *tmp5 0
jump *label5 equal FROM_INDEX 0
op mul *tmp6 FROM_INDEX 22
op add *tmp5 4 *tmp6
label *label5
set *tmp9 176
jump *label7 greaterThanEq TO_INDEX 8
op mul *tmp10 TO_INDEX 22
op add *tmp9 4 *tmp10
label *label7
op sub :clh *tmp9 *tmp5
set :showa null
set :lastRate null
set :flow_str null
set :expected_flow_str null
set :icon null
control enabled switch1 0
sensor *tmp14 switch1 @enabled
jump __start__ notEqual *tmp14 0
label *label73
set :start @time
print "Silicon Factory Monitor"
set :factories 0
draw color 0 0 80 255
draw rect 0 *tmp5 *tmp3 :clh
draw stroke 2
set :index FROM_INDEX
set :n 0
jump *label13 greaterThanEq 0 @links
label *label71
getlink :smelter :n
sensor *tmp19 :smelter @type
jump *label14 notEqual *tmp19 @silicon-crucible
set :minimum 31
sensor :s :smelter @sand
sensor :c :smelter @coal
sensor :p :smelter @pyratite
sensor *tmp25 :smelter @silicon
op min :a *tmp25 30
sensor :e :smelter @enabled
sensor :power :smelter @totalPower
sensor :boost :smelter @timescale
jump *label16 greaterThanEq :s 31
set :minimum :s
set :icon @sand
label *label16
jump *label18 greaterThanEq :c :minimum
set :minimum :c
set :icon @coal
label *label18
jump *label20 greaterThanEq :p :minimum
set :minimum :p
set :icon @pyratite
label *label20
op greaterThan *tmp36 :a 10
op sub *tmp37 31 :a
op lessThan *tmp38 *tmp37 :minimum
op land :showa *tmp36 *tmp38
jump *label22 equal :showa false
set :icon @silicon
label *label22
op mul *tmp43 :index 22
op add :y 4 *tmp43
draw color 0 0 80 255
op sub *tmp46 :y 1
draw rect 4 *tmp46 .BAR_SPACE 16
op greaterThan *tmp47 :minimum 26
op equal *tmp48 :showa 0
op land *tmp49 *tmp47 *tmp48
jump *label24 equal *tmp49 false
set :icon @silicon-crucible
label *label24
draw color 255 255 255 255
jump *label26 equal :e false
jump *label28 lessThanEq :power 0
op add *tmp55 :y 7
draw image 12 *tmp55 :icon 16 0
jump *label27 always
label *label28
draw color 255 80 80 255
op add *tmp56 :y 3
draw rect 5 *tmp56 14 8
draw color 0 0 0 255
op add *tmp58 :y 5
draw rect 7 *tmp58 8 4
draw rect 17 *tmp56 2 2
op add *tmp62 :y 9
draw rect 17 *tmp62 2 2
draw color 255 80 80 255
op add *tmp64 :y 6
draw rect 9 *tmp64 2 2
jump *label27 always
label *label26
draw color 255 80 80 255
draw stroke 3
op add *tmp66 :y 12
op add *tmp68 :y 2
draw line 7 *tmp66 17 *tmp68
draw line 7 *tmp68 17 *tmp66
draw color 0 0 0 255
draw lineRect 4 *tmp46 16 16
draw stroke 2
label *label27
op mul *tmp76 :power :e
jump *label30 notEqual *tmp76 0
set :red 255
set :green 0
set :blue 0
jump *label31 always
label *label30
jump *label32 equal :showa false
set :red 255
set :green 0
set :blue 255
set :minimum :a
jump *label33 always
label *label32
set :red 255
op greaterThan *tmp80 :minimum 20
op greaterThanEq *tmp81 :boost EXPECTED_BOOST
op land *tmp82 *tmp80 *tmp81
jump *label35 equal *tmp82 false
set :red 0
label *label35
set :green 0
jump *label37 lessThanEq :minimum 10
set :green 255
label *label37
set :blue 0
label *label33
label *label31
jump *label38 lessThanEq :boost EXPECTED_BOOST
op max :red 192 :red
op max :green 192 :green
op max :blue 192 :blue
set :boost EXPECTED_BOOST
label *label38
op mul *tmp91 .BAR_LENGTH :boost
op idiv :length *tmp91 EXPECTED_BOOST
draw color :red :green :blue 128
op mul *tmp93 :minimum :length
op idiv *tmp94 *tmp93 30
draw rect 21 :y *tmp94 14
draw color :red :green :blue 255
draw lineRect 21 :y :length 14
op add :index :index 1
op add :factories :factories 1
label *label14
op add :n :n 1
jump *label71 lessThan :n @links
label *label13
set :index FROM_INDEX
set :n 0
jump *label42 greaterThanEq 0 @links
label *label72
getlink :smelter :n
sensor *tmp100 :smelter @type
jump *label43 notEqual *tmp100 @pyratite-mixer
set :minimum 11
sensor :s :smelter @sand
sensor :c :smelter @coal
sensor :l :smelter @lead
sensor :a :smelter @pyratite
sensor :e :smelter @enabled
sensor :power :smelter @totalPower
sensor :boost :smelter @timescale
jump *label45 greaterThanEq :s 11
set :minimum :s
set :icon @sand
label *label45
jump *label47 greaterThanEq :c :minimum
set :minimum :c
set :icon @coal
label *label47
jump *label49 greaterThanEq :l :minimum
set :minimum :l
set :icon @lead
label *label49
op add :x 5 .BAR_SPACE
op mul *tmp118 :index 22
op add :y 4 *tmp118
draw color 0 0 80 255
op sub *tmp120 :x 1
op sub *tmp121 :y 1
draw rect *tmp120 *tmp121 .BAR_SPACE 16
op greaterThan *tmp122 :minimum 6
op equal *tmp123 :showa 0
op land *tmp124 *tmp122 *tmp123
jump *label51 equal *tmp124 false
set :icon @pyratite-mixer
label *label51
draw color 255 255 255 255
jump *label53 equal :e false
jump *label55 lessThanEq :power 0
op add *tmp129 :x 7
op add *tmp130 :y 7
draw image *tmp129 *tmp130 :icon 16 0
jump *label54 always
label *label55
draw color 255 80 80 255
op add *tmp131 :y 3
draw rect :x *tmp131 14 8
draw color 0 0 0 255
op add *tmp132 :x 2
op add *tmp133 :y 5
draw rect *tmp132 *tmp133 8 4
op add *tmp134 :x 12
draw rect *tmp134 *tmp131 2 2
op add *tmp137 :y 9
draw rect *tmp134 *tmp137 2 2
draw color 255 80 80 255
op add *tmp138 :x 4
op add *tmp139 :y 6
draw rect *tmp138 *tmp139 2 2
jump *label54 always
label *label53
draw color 255 80 80 255
draw stroke 3
op add *tmp140 :x 2
op add *tmp141 :y 12
op add *tmp142 :x 12
op add *tmp143 :y 2
draw line *tmp140 *tmp141 *tmp142 *tmp143
draw line *tmp140 *tmp143 *tmp142 *tmp141
draw color 0 0 0 255
draw lineRect *tmp120 *tmp121 16 16
draw stroke 2
label *label54
op add :x .BAR_SPACE 21
op mul *tmp151 :power :e
jump *label57 notEqual *tmp151 0
set :red 255
set :green 0
set :blue 0
jump *label58 always
label *label57
set :red 255
op greaterThanEq *tmp155 :boost EXPECTED_BOOST
op land *tmp156 *tmp122 *tmp155
jump *label60 equal *tmp156 false
set :red 0
label *label60
set :green 0
jump *label62 lessThanEq :minimum 3
set :green 255
label *label62
set :blue 0
label *label58
jump *label63 lessThanEq :boost EXPECTED_BOOST
op max :red 192 :red
op max :green 192 :green
op max :blue 192 0
set :boost EXPECTED_BOOST
label *label63
op mul *tmp165 .BAR_LENGTH :boost
op idiv :length *tmp165 EXPECTED_BOOST
draw color :red :green :blue 128
op mul *tmp167 :minimum :length
op idiv *tmp168 *tmp167 10
draw rect :x :y *tmp168 14
draw color :red :green :blue 255
draw lineRect :x :y :length 14
op add :index :index 1
label *label43
op add :n :n 1
jump *label72 lessThan :n @links
label *label42
jump *label65 equal bank1 null
jump *label67 notEqual FROM_INDEX 0
read :rate bank1 511
jump *label69 equal :lastRate :rate
op mul *tmp178 EXPECTED_BOOST :factories
op div :expected_flow *tmp178 11.25
op idiv :expected_flow_str :expected_flow 0.0002777777777777778
set :lastRate :rate
draw color 0 0 80 255
draw rect 156 0 16 176
draw color 255 128 128 255
draw rect 164 4 8 84
draw color 128 255 128 255
draw rect 164 89 8 84
draw stroke 1
draw color 255 0 0 255
draw lineRect 164 4 8 84
draw color 0 255 0 255
draw lineRect 164 89 8 84
draw color 0 0 80 255
draw rect 164 4 2 170
op sub *tmp182 :rate :expected_flow
op mul *tmp183 84 *tmp182
op div *tmp184 *tmp183 :expected_flow
op add :pos 88 *tmp184
op max *tmp186 :pos 4
op min :pos *tmp186 170
op add :pos1 :pos 7
op sub :pos2 :pos 7
draw color 255 255 16 255
draw triangle 156 :pos1 164 :pos 156 :pos2
op idiv :flow_str :rate 0.0002777777777777778
label *label69
label *label67
print "\nNominal production: {0}/min\nActual production: {0}/min"
format :expected_flow_str
format :flow_str
label *label65
drawflush display1
op sub *tmp192 @time :start
op floor *tmp193 *tmp192
print "\nUpdate time: {0} ms"
format *tmp193
printflush message1
sensor *tmp14 switch1 @enabled
jump *label73 equal *tmp14 0
