    25 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions modified by Data Flow Optimization (2 passes, 5 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     1 instructions eliminated by Unreachable Code Elimination.
    20 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-1 instructions):
 
    20 label *label5
    21 jump *label4 always
    22 label *label6
-    * set *tmp0 null
    23 label *label1
    24 assertprints "0|1|3|6|10|15|21|28|36|45|" "while-loop"
    25 stop

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
     2 setaddr :fn0*retaddr *label2
     3 call *label0 :fn0*retval
     4 label *label2
-    * set *tmp1 :fn0*retval
-    * set :fn1:j *tmp1
+    5 set :fn1:j :fn0*retval
     6 set :fn0:n :fn1:j
     7 setaddr :fn0*retaddr *label3
     8 call *label0 :fn0*retval
     9 label *label3
-    * set *tmp2 :fn0*retval
-    * set :fn1:i *tmp2
+   10 set :fn1:i :fn0*retval
    11 label *label4
    12 op lessThan *tmp3 :fn1:i 10
    13 jump *label6 equal *tmp3 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
     9 label *label3
    10 set :fn1:i :fn0*retval
    11 label *label4
-    * op lessThan *tmp3 :fn1:i 10
-    * jump *label6 equal *tmp3 false
+   12 jump *label6 greaterThanEq :fn1:i 10
    13 op add :fn1:j :fn1:j :fn1:i
    14 print :fn1:j
    15 print "|"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 call *label0 :fn0*retval
     4 label *label2
     5 set :fn1:j :fn0*retval
-    * set :fn0:n :fn1:j
+    6 set :fn0:n :fn0*retval
     7 setaddr :fn0*retaddr *label3
     8 call *label0 :fn0*retval
     9 label *label3

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    10 set :fn1:i :fn0*retval
    11 label *label4
    12 jump *label6 greaterThanEq :fn1:i 10
+   13 label *label8
    14 op add :fn1:j :fn1:j :fn1:i
    15 print :fn1:j
    16 print "|"
    17 op add :fn1:i :fn1:i 1
    18 label *label5
-    * jump *label4 always
+   19 jump *label8 lessThan :fn1:i 10
    20 label *label6
    21 label *label1
    22 assertprints "0|1|3|6|10|15|21|28|36|45|" "while-loop"

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     9 label *label3
    10 set :fn1:i :fn0*retval
    11 label *label4
-    * jump *label6 greaterThanEq :fn1:i 10
+   12 jump *label6 greaterThanEq :fn0*retval 10
    13 label *label8
    14 op add :fn1:j :fn1:j :fn1:i
    15 print :fn1:j

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    26 set :fn0*retval :fn0:n
    27 label *label7
    28 return :fn0*retaddr
-    * end

Final code before resolving virtual instructions:

assertflush
set :fn0:n 0
setaddr :fn0*retaddr *label2
call *label0 :fn0*retval
label *label2
set :fn1:j :fn0*retval
set :fn0:n :fn0*retval
setaddr :fn0*retaddr *label3
call *label0 :fn0*retval
label *label3
set :fn1:i :fn0*retval
jump *label6 greaterThanEq :fn0*retval 10
label *label8
op add :fn1:j :fn1:j :fn1:i
print :fn1:j
print "|"
op add :fn1:i :fn1:i 1
jump *label8 lessThan :fn1:i 10
label *label6
assertprints "0|1|3|6|10|15|21|28|36|45|" "while-loop"
stop
end
label *label0
set :fn0*retval :fn0:n
return :fn0*retaddr
