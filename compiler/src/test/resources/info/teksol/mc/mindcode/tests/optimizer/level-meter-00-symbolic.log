   222 instructions before optimizations.
    16 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    17 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     6 instructions eliminated by Jump Optimization (4 iterations).
     6 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
    20 instructions modified by Data Flow Optimization (7 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
    12 instructions added by Case Switching (4 iterations).
     1 case expressions converted to switched jumps Case Switching.
     8 instructions eliminated by Jump Straightening (4 iterations).
     2 instructions updated by JumpThreading.
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   166 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 831):
    Replicate loop condition at line 122:1                       cost     1, benefit       25.0, efficiency     25.000
    Convert case at line 34:9 (segments: 1)                      cost    75, benefit      625.0, efficiency      8.333
  * Convert case at line 34:9 (segments: 3)                      cost    12, benefit      769.2, efficiency     64.103 (+12 instructions)

Pass 1: speed optimization selection (cost limit 819):
  * Replicate loop condition at line 122:1                       cost     1, benefit       25.0, efficiency     25.000 (+1 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
    30 print "\nFound: "
    31 print :block
    32 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   33 jump *label8 equal *tmp5 @message
    34 jump *label7 always
    35 label *label8
    36 set .MESSAGE :block
    37 set *tmp4 .MESSAGE
    38 jump *label6 always
    39 label *label7
-    * jump *label10 equal *tmp6 @switch
+   40 jump *label10 equal *tmp5 @switch
    41 jump *label9 always
    42 label *label10
    43 set .SWITCH :block
    44 set *tmp4 .SWITCH
    45 jump *label6 always
    46 label *label9
-    * jump *label12 equal *tmp6 @memory-bank
+   47 jump *label12 equal *tmp5 @memory-bank
    48 jump *label11 always
    49 label *label12
    50 set .MEMORY :block
 
    54 set *tmp4 .SIZE
    55 jump *label6 always
    56 label *label11
-    * jump *label14 equal *tmp6 @memory-cell
+   57 jump *label14 equal *tmp5 @memory-cell
    58 jump *label13 always
    59 label *label14
    60 set .MEMORY :block
 
    64 set *tmp4 .SIZE
    65 jump *label6 always
    66 label *label13
-    * jump *label16 equal *tmp6 @vault
-    * jump *label16 equal *tmp6 @container
+   67 jump *label16 equal *tmp5 @vault
+   68 jump *label16 equal *tmp5 @container
    69 jump *label15 always
    70 label *label16
    71 set .CONTAINER :block
 
    80 set *tmp4 .B1
    81 jump *label6 always
    82 label *label15
-    * jump *label18 equal *tmp6 @battery
-    * jump *label18 equal *tmp6 @battery-large
+   83 jump *label18 equal *tmp5 @battery
+   84 jump *label18 equal *tmp5 @battery-large
    85 jump *label17 always
    86 label *label18
    87 set .CONTAINER :block
 
    96 set *tmp4 .B1
    97 jump *label6 always
    98 label *label17
-    * jump *label20 equal *tmp6 @liquid-tank
-    * jump *label20 equal *tmp6 @liquid-container
+   99 jump *label20 equal *tmp5 @liquid-tank
+  100 jump *label20 equal *tmp5 @liquid-container
   101 jump *label19 always
   102 label *label20
   103 set .CONTAINER :block
 
   112 set *tmp4 .B1
   113 jump *label6 always
   114 label *label19
-    * jump *label22 equal *tmp6 @power-node
-    * jump *label22 equal *tmp6 @power-node-large
-    * jump *label22 equal *tmp6 @surge-tower
+  115 jump *label22 equal *tmp5 @power-node
+  116 jump *label22 equal *tmp5 @power-node-large
+  117 jump *label22 equal *tmp5 @surge-tower
   118 jump *label21 always
   119 label *label22
   120 set .CONTAINER :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-17 instructions):
 
    34 jump *label7 always
    35 label *label8
    36 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    37 jump *label6 always
    38 label *label7
    39 jump *label10 equal *tmp5 @switch
    40 jump *label9 always
    41 label *label10
    42 set .SWITCH :block
-    * set *tmp4 .SWITCH
    43 jump *label6 always
    44 label *label9
    45 jump *label12 equal *tmp5 @memory-bank
 
    49 set .START_INDEX 264
    50 set .END_INDEX 511
    51 set .SIZE 248
-    * set *tmp4 .SIZE
    52 jump *label6 always
    53 label *label11
    54 jump *label14 equal *tmp5 @memory-cell
 
    58 set .START_INDEX 40
    59 set .END_INDEX 63
    60 set .SIZE 24
-    * set *tmp4 .SIZE
    61 jump *label6 always
    62 label *label13
    63 jump *label16 equal *tmp5 @vault
 
    73 set .R1 80
    74 set .G1 255
    75 set .B1 80
-    * set *tmp4 .B1
    76 jump *label6 always
    77 label *label15
    78 jump *label18 equal *tmp5 @battery
 
    88 set .R1 255
    89 set .G1 255
    90 set .B1 80
-    * set *tmp4 .B1
    91 jump *label6 always
    92 label *label17
    93 jump *label20 equal *tmp5 @liquid-tank
 
   103 set .R1 192
   104 set .G1 192
   105 set .B1 255
-    * set *tmp4 .B1
   106 jump *label6 always
   107 label *label19
   108 jump *label22 equal *tmp5 @power-node
 
   119 set .R1 255
   120 set .G1 255
   121 set .B1 80
-    * set *tmp4 .B1
   122 jump *label6 always
   123 label *label21
-    * set *tmp4 null
   124 label *label6
   125 label *label4
   126 jump *label3 always
 
   139 jump *label23 equal *tmp9 false
   140 print "\nNo memory or container."
   141 printflush .MESSAGE
-    * set *tmp10 null
   142 jump *label24 always
   143 label *label23
   144 printflush .MESSAGE
   145 jump *label2 always
-    * set *tmp10 null
   146 label *label24
   147 label *label1
   148 jump *label0 always
 
   179 set :prevTick *tmp32
   180 op add *tmp33 :prevTick TICKS
   181 set :nextTick *tmp33
-    * set *tmp31 :nextTick
   182 jump *label29 always
   183 label *label28
-    * set *tmp31 null
   184 label *label29
   185 label *label30
   186 op lessThan *tmp34 @tick :nextTick
 
   188 op lessThan *tmp35 @tick :prevTick
   189 jump *label33 equal *tmp35 false
   190 end
-    * set *tmp36 null
   191 jump *label34 always
   192 label *label33
-    * set *tmp36 null
   193 label *label34
   194 label *label31
   195 jump *label30 always
 
   207 op greaterThan *tmp43 :index .END_INDEX
   208 jump *label35 equal *tmp43 false
   209 set :index .START_INDEX
-    * set *tmp44 :index
   210 jump *label36 always
   211 label *label35
-    * set *tmp44 null
   212 label *label36
   213 write :index .MEMORY 0
   214 set *tmp46 :index

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-16 instructions):
 
    18 print "Item/Liquid/Energy Level Meter"
    19 set .CONTAINER null
    20 set .MEMORY null
-    * set *tmp0 @links
-    * set :n *tmp0
+   21 set :n @links
    22 label *label3
    23 op greaterThan *tmp1 :n 0
    24 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   25 op sub :n :n 1
+   26 getlink :block :n
    27 print "\nFound: "
    28 print :block
    29 sensor *tmp5 :block @type
 
   154 write .B1 .MEMORY 8
   155 read *tmp19 .MEMORY 1
   156 op max *tmp20 .START_INDEX *tmp19
-    * op min *tmp21 *tmp20 .END_INDEX
-    * set :index *tmp21
-    * set *tmp22 @tick
-    * set :nextTick *tmp22
-    * set *tmp23 .SWITCH
-    * control enabled *tmp23 0
+  157 op min :index *tmp20 .END_INDEX
+  158 set :nextTick @tick
+  159 control enabled .SWITCH 0
   160 label *label25
   161 sensor *tmp25 .SWITCH @enabled
   162 op equal *tmp26 *tmp25 0
   163 jump *label27 equal *tmp26 false
-    * set *tmp27 @time
-    * set :startTime *tmp27
+  164 set :startTime @time
   165 set :prevTick :nextTick
-    * op add *tmp28 :nextTick TICKS
-    * set :nextTick *tmp28
+  166 op add :nextTick :nextTick TICKS
   167 op add *tmp29 :nextTick TICKS
   168 op greaterThan *tmp30 @tick *tmp29
   169 jump *label28 equal *tmp30 false
-    * set *tmp32 @tick
-    * set :prevTick *tmp32
-    * op add *tmp33 :prevTick TICKS
-    * set :nextTick *tmp33
+  170 set :prevTick @tick
+  171 op add :nextTick :prevTick TICKS
   172 jump *label29 always
   173 label *label28
   174 label *label29
 
   184 label *label31
   185 jump *label30 always
   186 label *label32
-    * sensor *tmp37 .CONTAINER .SENSOR
-    * set :amount *tmp37
-    * sensor *tmp38 .CONTAINER .MAXIMUM
-    * set :max *tmp38
+  187 sensor :amount .CONTAINER .SENSOR
+  188 sensor :max .CONTAINER .MAXIMUM
   189 op mul *tmp39 :amount 150
   190 op div *tmp40 *tmp39 :max
-    * op add *tmp41 10 *tmp40
-    * set :scaled *tmp41
-    * op add *tmp42 :index 1
-    * set :index *tmp42
+  191 op add :scaled 10 *tmp40
+  192 op add :index :index 1
   193 op greaterThan *tmp43 :index .END_INDEX
   194 jump *label35 equal *tmp43 false
   195 set :index .START_INDEX
 
   197 label *label35
   198 label *label36
   199 write :index .MEMORY 0
-    * set *tmp46 :index
-    * write :scaled .MEMORY *tmp46
-    * op sub *tmp48 :index .SIZE
-    * set *tmp49 *tmp48
+  200 write :scaled .MEMORY :index
+  201 op sub *tmp49 :index .SIZE
   202 write :scaled .MEMORY *tmp49
   203 print "Item/Liquid/Energy Level Meter\n"
   204 print "StartIndex: "

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    14 set .G0 .B0
    15 set .R0 .G0
    16 label *label0
-    * jump *label2 equal true false
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null
    19 set .MEMORY null

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-8 instructions):
 
    26 print "\nFound: "
    27 print :block
    28 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   29 jump *label7 notEqual *tmp5 @message
    30 label *label8
    31 set .MESSAGE :block
    32 jump *label6 always
    33 label *label7
-    * jump *label10 equal *tmp5 @switch
-    * jump *label9 always
+   34 jump *label9 notEqual *tmp5 @switch
    35 label *label10
    36 set .SWITCH :block
    37 jump *label6 always
    38 label *label9
-    * jump *label12 equal *tmp5 @memory-bank
-    * jump *label11 always
+   39 jump *label11 notEqual *tmp5 @memory-bank
    40 label *label12
    41 set .MEMORY :block
    42 set .START_INDEX 264
 
    44 set .SIZE 248
    45 jump *label6 always
    46 label *label11
-    * jump *label14 equal *tmp5 @memory-cell
-    * jump *label13 always
+   47 jump *label13 notEqual *tmp5 @memory-cell
    48 label *label14
    49 set .MEMORY :block
    50 set .START_INDEX 40
 
    53 jump *label6 always
    54 label *label13
    55 jump *label16 equal *tmp5 @vault
-    * jump *label16 equal *tmp5 @container
-    * jump *label15 always
+   56 jump *label15 notEqual *tmp5 @container
    57 label *label16
    58 set .CONTAINER :block
    59 set .SENSOR @totalItems
 
    67 jump *label6 always
    68 label *label15
    69 jump *label18 equal *tmp5 @battery
-    * jump *label18 equal *tmp5 @battery-large
-    * jump *label17 always
+   70 jump *label17 notEqual *tmp5 @battery-large
    71 label *label18
    72 set .CONTAINER :block
    73 set .SENSOR @totalPower
 
    81 jump *label6 always
    82 label *label17
    83 jump *label20 equal *tmp5 @liquid-tank
-    * jump *label20 equal *tmp5 @liquid-container
-    * jump *label19 always
+   84 jump *label19 notEqual *tmp5 @liquid-container
    85 label *label20
    86 set .CONTAINER :block
    87 set .SENSOR @totalLiquids
 
    96 label *label19
    97 jump *label22 equal *tmp5 @power-node
    98 jump *label22 equal *tmp5 @power-node-large
-    * jump *label22 equal *tmp5 @surge-tower
-    * jump *label21 always
+   99 jump *label21 notEqual *tmp5 @surge-tower
   100 label *label22
   101 set .CONTAINER :block
   102 set .SENSOR @powerNetStored

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
    19 set .MEMORY null
    20 set :n @links
    21 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   22 jump *label5 lessThanEq :n 0
    23 op sub :n :n 1
    24 getlink :block :n
    25 print "\nFound: "
 
   149 control enabled .SWITCH 0
   150 label *label25
   151 sensor *tmp25 .SWITCH @enabled
-    * op equal *tmp26 *tmp25 0
-    * jump *label27 equal *tmp26 false
+  152 jump *label27 notEqual *tmp25 0
   153 set :startTime @time
   154 set :prevTick :nextTick
   155 op add :nextTick :nextTick TICKS
   156 op add *tmp29 :nextTick TICKS
-    * op greaterThan *tmp30 @tick *tmp29
-    * jump *label28 equal *tmp30 false
+  157 jump *label28 lessThanEq @tick *tmp29
   158 set :prevTick @tick
   159 op add :nextTick :prevTick TICKS
   160 jump *label29 always
   161 label *label28
   162 label *label29
   163 label *label30
-    * op lessThan *tmp34 @tick :nextTick
-    * jump *label32 equal *tmp34 false
-    * op lessThan *tmp35 @tick :prevTick
-    * jump *label33 equal *tmp35 false
+  164 jump *label32 greaterThanEq @tick :nextTick
+  165 jump *label33 greaterThanEq @tick :prevTick
   166 end
   167 jump *label34 always
   168 label *label33
 
   176 op div *tmp40 *tmp39 :max
   177 op add :scaled 10 *tmp40
   178 op add :index :index 1
-    * op greaterThan *tmp43 :index .END_INDEX
-    * jump *label35 equal *tmp43 false
+  179 jump *label35 lessThanEq :index .END_INDEX
   180 set :index .START_INDEX
   181 jump *label36 always
   182 label *label35

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
   106 set .R1 255
   107 set .G1 255
   108 set .B1 80
-    * jump *label6 always
   109 label *label21
   110 label *label6
   111 label *label4
 
   156 jump *label28 lessThanEq @tick *tmp29
   157 set :prevTick @tick
   158 op add :nextTick :prevTick TICKS
-    * jump *label29 always
   159 label *label28
   160 label *label29
   161 label *label30
   162 jump *label32 greaterThanEq @tick :nextTick
   163 jump *label33 greaterThanEq @tick :prevTick
   164 end
-    * jump *label34 always
   165 label *label33
   166 label *label34
   167 label *label31
 
   175 op add :index :index 1
   176 jump *label35 lessThanEq :index .END_INDEX
   177 set :index .START_INDEX
-    * jump *label36 always
   178 label *label35
   179 label *label36
   180 write :index .MEMORY 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set TICKS 60
     1 set .MEMORY null
-    * set .SWITCH .MEMORY
-    * set .MESSAGE .SWITCH
+    2 set .SWITCH null
+    3 set .MESSAGE .MEMORY
     4 set .SIZE null
-    * set .END_INDEX .SIZE
-    * set .START_INDEX .END_INDEX
+    5 set .END_INDEX null
+    6 set .START_INDEX .SIZE
     7 set .SENSOR null
-    * set .MAXIMUM .SENSOR
-    * set .CONTAINER .MAXIMUM
+    8 set .MAXIMUM null
+    9 set .CONTAINER .SENSOR
    10 set .B1 null
-    * set .G1 .B1
-    * set .R1 .G1
-    * set .B0 .R1
-    * set .G0 .B0
-    * set .R0 .G0
+   11 set .G1 null
+   12 set .R1 .B1
+   13 set .B0 .G1
+   14 set .G0 .R1
+   15 set .R0 .B0
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2:
     0 set TICKS 60
     1 set .MEMORY null
     2 set .SWITCH null
-    * set .MESSAGE .MEMORY
+    3 set .MESSAGE null
     4 set .SIZE null
     5 set .END_INDEX null
-    * set .START_INDEX .SIZE
+    6 set .START_INDEX null
     7 set .SENSOR null
     8 set .MAXIMUM null
-    * set .CONTAINER .SENSOR
+    9 set .CONTAINER null
    10 set .B1 null
    11 set .G1 null
-    * set .R1 .B1
-    * set .B0 .G1
-    * set .G0 .R1
-    * set .R0 .B0
+   12 set .R1 null
+   13 set .B0 null
+   14 set .G0 .B1
+   15 set .R0 .G1
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    11 set .G1 null
    12 set .R1 null
    13 set .B0 null
-    * set .G0 .B1
-    * set .R0 .G1
+   14 set .G0 null
+   15 set .R0 null
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    20 set :n @links
    21 label *label3
    22 jump *label5 lessThanEq :n 0
+   23 label *label37
    24 op sub :n :n 1
    25 getlink :block :n
    26 print "\nFound: "
 
   110 label *label21
   111 label *label6
   112 label *label4
-    * jump *label3 always
+  113 jump *label37 greaterThan :n 0
   114 label *label5
   115 print "\nMessage: "
   116 print .MESSAGE
 
   161 label *label29
   162 label *label30
   163 jump *label32 greaterThanEq @tick :nextTick
+  164 label *label38
   165 jump *label33 greaterThanEq @tick :prevTick
   166 end
   167 label *label33
   168 label *label34
   169 label *label31
-    * jump *label30 always
+  170 jump *label38 lessThan @tick :nextTick
   171 label *label32
   172 sensor :amount .CONTAINER .SENSOR
   173 sensor :max .CONTAINER .MAXIMUM

Modifications by Convert case at line 34:9 (segments: 3) (+12 instructions):
 
    26 print "\nFound: "
    27 print :block
    28 sensor *tmp5 :block @type
-    * jump *label7 notEqual *tmp5 @message
+   29 sensor *tmp52 *tmp5 @id
+   30 jump *label40 greaterThanEq *tmp52 74
+   31 jump *label39 lessThan *tmp52 64
+   32 multijump *label41 *tmp52 64 (m:*label51)
+   33 multilabel *label41 (m:*label51)
+   34 jump *label20 always
+   35 multilabel *label42 (m:*label51)
+   36 jump *label39 always
+   37 multilabel *label43 (m:*label51)
+   38 jump *label39 always
+   39 multilabel *label44 (m:*label51)
+   40 jump *label39 always
+   41 multilabel *label45 (m:*label51)
+   42 jump *label22 always
+   43 multilabel *label46 (m:*label51)
+   44 jump *label22 always
+   45 multilabel *label47 (m:*label51)
+   46 jump *label22 always
+   47 multilabel *label48 (m:*label51)
+   48 jump *label39 always
+   49 multilabel *label49 (m:*label51)
+   50 jump *label18 always
+   51 multilabel *label50 (m:*label51)
+   52 jump *label18 always
+   53 label *label40
+   54 jump *label52 greaterThanEq *tmp52 137
+   55 jump *label16 equal *tmp52 93
+   56 jump *label16 equal *tmp52 94
+   57 jump *label39 always
+   58 label *label52
+   59 jump *label8 equal *tmp52 137
+   60 jump *label10 equal *tmp52 138
+   61 jump *label14 equal *tmp52 142
+   62 jump *label12 equal *tmp52 143
+   63 jump *label20 equal *tmp52 146
+   64 jump *label39 always
    65 label *label8
    66 set .MESSAGE :block
    67 jump *label6 always
    68 label *label7
-    * jump *label9 notEqual *tmp5 @switch
    69 label *label10
    70 set .SWITCH :block
    71 jump *label6 always
    72 label *label9
-    * jump *label11 notEqual *tmp5 @memory-bank
    73 label *label12
    74 set .MEMORY :block
    75 set .START_INDEX 264
 
    77 set .SIZE 248
    78 jump *label6 always
    79 label *label11
-    * jump *label13 notEqual *tmp5 @memory-cell
    80 label *label14
    81 set .MEMORY :block
    82 set .START_INDEX 40
 
    84 set .SIZE 24
    85 jump *label6 always
    86 label *label13
-    * jump *label16 equal *tmp5 @vault
-    * jump *label15 notEqual *tmp5 @container
    87 label *label16
    88 set .CONTAINER :block
    89 set .SENSOR @totalItems
 
    96 set .B1 80
    97 jump *label6 always
    98 label *label15
-    * jump *label18 equal *tmp5 @battery
-    * jump *label17 notEqual *tmp5 @battery-large
    99 label *label18
   100 set .CONTAINER :block
   101 set .SENSOR @totalPower
 
   108 set .B1 80
   109 jump *label6 always
   110 label *label17
-    * jump *label20 equal *tmp5 @liquid-tank
-    * jump *label19 notEqual *tmp5 @liquid-container
   111 label *label20
   112 set .CONTAINER :block
   113 set .SENSOR @totalLiquids
 
   120 set .B1 255
   121 jump *label6 always
   122 label *label19
-    * jump *label22 equal *tmp5 @power-node
-    * jump *label22 equal *tmp5 @power-node-large
-    * jump *label21 notEqual *tmp5 @surge-tower
   123 label *label22
   124 set .CONTAINER :block
   125 set .SENSOR @powerNetStored
 
   131 set .G1 255
   132 set .B1 80
   133 label *label21
+  134 label *label39
   135 label *label6
   136 label *label4
   137 jump *label37 greaterThan :n 0

Modifications by Replicate loop condition at line 122:1 (+1 instructions):
 
   174 label *label25
   175 sensor *tmp25 .SWITCH @enabled
   176 jump *label27 notEqual *tmp25 0
+  177 label *label53
   178 set :startTime @time
   179 set :prevTick :nextTick
   180 op add :nextTick :nextTick TICKS
 
   227 print "\n"
   228 printflush .MESSAGE
   229 label *label26
-    * jump *label25 always
+  230 sensor *tmp25 .SWITCH @enabled
+  231 jump *label53 equal *tmp25 0
   232 label *label27
   233 end

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
    18 set .CONTAINER null
    19 set .MEMORY null
    20 set :n @links
-    * label *label3
    21 jump *label5 lessThanEq :n 0
    22 label *label37
    23 op sub :n :n 1
 
    64 label *label8
    65 set .MESSAGE :block
    66 jump *label6 always
-    * label *label7
    67 label *label10
    68 set .SWITCH :block
    69 jump *label6 always
-    * label *label9
    70 label *label12
    71 set .MEMORY :block
    72 set .START_INDEX 264
    73 set .END_INDEX 511
    74 set .SIZE 248
    75 jump *label6 always
-    * label *label11
    76 label *label14
    77 set .MEMORY :block
    78 set .START_INDEX 40
    79 set .END_INDEX 63
    80 set .SIZE 24
    81 jump *label6 always
-    * label *label13
    82 label *label16
    83 set .CONTAINER :block
    84 set .SENSOR @totalItems
 
    90 set .G1 255
    91 set .B1 80
    92 jump *label6 always
-    * label *label15
    93 label *label18
    94 set .CONTAINER :block
    95 set .SENSOR @totalPower
 
   101 set .G1 255
   102 set .B1 80
   103 jump *label6 always
-    * label *label17
   104 label *label20
   105 set .CONTAINER :block
   106 set .SENSOR @totalLiquids
 
   112 set .G1 192
   113 set .B1 255
   114 jump *label6 always
-    * label *label19
   115 label *label22
   116 set .CONTAINER :block
   117 set .SENSOR @powerNetStored
 
   122 set .R1 255
   123 set .G1 255
   124 set .B1 80
-    * label *label21
   125 label *label39
   126 label *label6
-    * label *label4
   127 jump *label37 greaterThan :n 0
   128 label *label5
   129 print "\nMessage: "
 
   145 printflush .MESSAGE
   146 jump *label2 always
   147 label *label24
-    * label *label1
   148 jump *label0 always
   149 label *label2
   150 write .START_INDEX .MEMORY 0
 
   160 op min :index *tmp20 .END_INDEX
   161 set :nextTick @tick
   162 control enabled .SWITCH 0
-    * label *label25
   163 sensor *tmp25 .SWITCH @enabled
   164 jump *label27 notEqual *tmp25 0
   165 label *label53
 
   171 set :prevTick @tick
   172 op add :nextTick :prevTick TICKS
   173 label *label28
-    * label *label29
-    * label *label30
   174 jump *label32 greaterThanEq @tick :nextTick
   175 label *label38
   176 jump *label33 greaterThanEq @tick :prevTick
   177 end
   178 label *label33
-    * label *label34
-    * label *label31
   179 jump *label38 lessThan @tick :nextTick
   180 label *label32
   181 sensor :amount .CONTAINER .SENSOR
 
   187 jump *label35 lessThanEq :index .END_INDEX
   188 set :index .START_INDEX
   189 label *label35
-    * label *label36
   190 write :index .MEMORY 0
   191 write :scaled .MEMORY :index
   192 op sub *tmp49 :index .SIZE
 
   209 print *tmp51
   210 print "\n"
   211 printflush .MESSAGE
-    * label *label26
   212 sensor *tmp25 .SWITCH @enabled
   213 jump *label53 equal *tmp25 0
   214 label *label27

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
+    0 label __start__
     1 set TICKS 60
     2 set .MEMORY null
     3 set .SWITCH null
 
   141 jump *label23 equal *tmp9 false
   142 print "\nNo memory or container."
   143 printflush .MESSAGE
-    * jump *label24 always
+  144 jump *label0 always
   145 label *label23
   146 printflush .MESSAGE
   147 jump *label2 always
 
   162 set :nextTick @tick
   163 control enabled .SWITCH 0
   164 sensor *tmp25 .SWITCH @enabled
-    * jump *label27 notEqual *tmp25 0
+  165 jump __start__ notEqual *tmp25 0
   166 label *label53
   167 set :startTime @time
   168 set :prevTick :nextTick

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1 (-1 instructions):
 
   145 label *label23
   146 printflush .MESSAGE
   147 jump *label2 always
-    * label *label24
-    * jump *label0 always
   148 label *label2
   149 write .START_INDEX .MEMORY 0
   150 write .END_INDEX .MEMORY 2
 
   210 printflush .MESSAGE
   211 sensor *tmp25 .SWITCH @enabled
   212 jump *label53 equal *tmp25 0
-    * label *label27
   213 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-2 instructions):
 
   144 jump *label0 always
   145 label *label23
   146 printflush .MESSAGE
-    * jump *label2 always
   147 label *label2
   148 write .START_INDEX .MEMORY 0
   149 write .END_INDEX .MEMORY 2
 
   209 printflush .MESSAGE
   210 sensor *tmp25 .SWITCH @enabled
   211 jump *label53 equal *tmp25 0
-    * end

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
   144 jump *label0 always
   145 label *label23
   146 printflush .MESSAGE
-    * label *label2
   147 write .START_INDEX .MEMORY 0
   148 write .END_INDEX .MEMORY 2
   149 write .R0 .MEMORY 3

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   127 label *label6
   128 jump *label37 greaterThan :n 0
   129 label *label5
-    * print "\nMessage: "
-    * print .MESSAGE
-    * print "\nSwitch: "
-    * print .SWITCH
-    * print "\nMemory: "
-    * print .MEMORY
-    * print "\nContainer: "
+  130 print "\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nContainer: "
+  131 format .MESSAGE
+  132 format .SWITCH
+  133 format .MEMORY
   134 print .CONTAINER
   135 op equal *tmp7 .CONTAINER null
   136 op equal *tmp8 .MEMORY null
 
   185 write :scaled .MEMORY :index
   186 op sub *tmp49 :index .SIZE
   187 write :scaled .MEMORY *tmp49
-    * print "Item/Liquid/Energy Level Meter\n"
-    * print "StartIndex: "
-    * print .START_INDEX
-    * print "\n"
-    * print "Index: "
-    * print :index
-    * print "\n"
-    * print "Amount: "
-    * print :amount
-    * print "\n"
-    * print "Scaled: "
-    * print :scaled
-    * print "\n"
+  188 print "Item/Liquid/Energy Level Meter\nStartIndex: {0}\nIndex: {0}\nAmount: {0}\nScaled: {0}\nElapsed: {0}\n"
+  189 format .START_INDEX
+  190 format :index
+  191 format :amount
+  192 format :scaled
   193 op sub *tmp51 @time :startTime
-    * print "Elapsed: "
-    * print *tmp51
-    * print "\n"
+  194 format *tmp51
   195 printflush .MESSAGE
   196 sensor *tmp25 .SWITCH @enabled
   197 jump *label53 equal *tmp25 0

Final code before resolving virtual instructions:

label __start__
set TICKS 60
set .MEMORY null
set .SWITCH null
set .MESSAGE null
set .SIZE null
set .END_INDEX null
set .START_INDEX null
set .SENSOR null
set .MAXIMUM null
set .CONTAINER null
set .B1 null
set .G1 null
set .R1 null
set .B0 null
set .G0 null
set .R0 null
label *label0
print "Item/Liquid/Energy Level Meter"
set .CONTAINER null
set .MEMORY null
set :n @links
jump *label5 lessThanEq :n 0
label *label37
op sub :n :n 1
getlink :block :n
print "\nFound: "
print :block
sensor *tmp5 :block @type
sensor *tmp52 *tmp5 @id
jump *label40 greaterThanEq *tmp52 74
jump *label39 lessThan *tmp52 64
multijump *label41 *tmp52 64
multilabel *label41
jump *label20 always
multilabel *label42
jump *label39 always
multilabel *label43
jump *label39 always
multilabel *label44
jump *label39 always
multilabel *label45
jump *label22 always
multilabel *label46
jump *label22 always
multilabel *label47
jump *label22 always
multilabel *label48
jump *label39 always
multilabel *label49
jump *label18 always
multilabel *label50
jump *label18 always
label *label40
jump *label52 greaterThanEq *tmp52 137
jump *label16 equal *tmp52 93
jump *label16 equal *tmp52 94
jump *label39 always
label *label52
jump *label8 equal *tmp52 137
jump *label10 equal *tmp52 138
jump *label14 equal *tmp52 142
jump *label12 equal *tmp52 143
jump *label20 equal *tmp52 146
jump *label39 always
label *label8
set .MESSAGE :block
jump *label6 always
label *label10
set .SWITCH :block
jump *label6 always
label *label12
set .MEMORY :block
set .START_INDEX 264
set .END_INDEX 511
set .SIZE 248
jump *label6 always
label *label14
set .MEMORY :block
set .START_INDEX 40
set .END_INDEX 63
set .SIZE 24
jump *label6 always
label *label16
set .CONTAINER :block
set .SENSOR @totalItems
set .MAXIMUM @itemCapacity
set .R0 0
set .G0 80
set .B0 0
set .R1 80
set .G1 255
set .B1 80
jump *label6 always
label *label18
set .CONTAINER :block
set .SENSOR @totalPower
set .MAXIMUM @powerCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
jump *label6 always
label *label20
set .CONTAINER :block
set .SENSOR @totalLiquids
set .MAXIMUM @liquidCapacity
set .R0 0
set .G0 0
set .B0 192
set .R1 192
set .G1 192
set .B1 255
jump *label6 always
label *label22
set .CONTAINER :block
set .SENSOR @powerNetStored
set .MAXIMUM @powerNetCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
label *label39
label *label6
jump *label37 greaterThan :n 0
label *label5
print "\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nContainer: "
format .MESSAGE
format .SWITCH
format .MEMORY
print .CONTAINER
op equal *tmp7 .CONTAINER null
op equal *tmp8 .MEMORY null
op or *tmp9 *tmp7 *tmp8
jump *label23 equal *tmp9 false
print "\nNo memory or container."
printflush .MESSAGE
jump *label0 always
label *label23
printflush .MESSAGE
write .START_INDEX .MEMORY 0
write .END_INDEX .MEMORY 2
write .R0 .MEMORY 3
write .G0 .MEMORY 4
write .B0 .MEMORY 5
write .R1 .MEMORY 6
write .G1 .MEMORY 7
write .B1 .MEMORY 8
read *tmp19 .MEMORY 1
op max *tmp20 .START_INDEX *tmp19
op min :index *tmp20 .END_INDEX
set :nextTick @tick
control enabled .SWITCH 0
sensor *tmp25 .SWITCH @enabled
jump __start__ notEqual *tmp25 0
label *label53
set :startTime @time
set :prevTick :nextTick
op add :nextTick :nextTick TICKS
op add *tmp29 :nextTick TICKS
jump *label28 lessThanEq @tick *tmp29
set :prevTick @tick
op add :nextTick :prevTick TICKS
label *label28
jump *label32 greaterThanEq @tick :nextTick
label *label38
jump *label33 greaterThanEq @tick :prevTick
end
label *label33
jump *label38 lessThan @tick :nextTick
label *label32
sensor :amount .CONTAINER .SENSOR
sensor :max .CONTAINER .MAXIMUM
op mul *tmp39 :amount 150
op div *tmp40 *tmp39 :max
op add :scaled 10 *tmp40
op add :index :index 1
jump *label35 lessThanEq :index .END_INDEX
set :index .START_INDEX
label *label35
write :index .MEMORY 0
write :scaled .MEMORY :index
op sub *tmp49 :index .SIZE
write :scaled .MEMORY *tmp49
print "Item/Liquid/Energy Level Meter\nStartIndex: {0}\nIndex: {0}\nAmount: {0}\nScaled: {0}\nElapsed: {0}\n"
format .START_INDEX
format :index
format :amount
format :scaled
op sub *tmp51 @time :startTime
format *tmp51
printflush .MESSAGE
sensor *tmp25 .SWITCH @enabled
jump *label53 equal *tmp25 0
