   108 instructions before optimizations.
    14 instructions eliminated by Temp Variables Elimination.
    31 instructions eliminated by Dead Code Elimination (2 passes, 5 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     6 instructions eliminated by Jump Optimization (4 iterations).
    17 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   573 instructions eliminated by Data Flow Optimization (10 passes, 31 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   950 instructions added by Loop Unrolling (12 iterations).
     7 loops unrolled by Loop Unrolling.
    23 instructions added by Function Inlining (12 iterations).
     5 function calls inlined by Function Inlining.
     8 instructions updated by JumpThreading.
     4 instructions eliminated by Unreachable Code Elimination.
   434 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 937):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'getBit' defined at line 10:1                cost     7, benefit      350.0, efficiency       50.0 (+5 instructions)
    Inline function 'testAndSetMultiples' defined at line 14:1   cost    16, benefit      200.0, efficiency       12.5
    Inline function call at line 30:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 34:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 41:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 45:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 15:18                           cost     4, benefit      175.0, efficiency       43.8

Pass 1: speed optimization selection (cost limit 932):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'testAndSetMultiples' defined at line 14:1   cost    20, benefit      200.0, efficiency       10.0 (+10 instructions)
    Inline function call at line 30:12                           cost    21, benefit      100.0, efficiency        4.8
    Inline function call at line 34:12                           cost    21, benefit      100.0, efficiency        4.8

Pass 1: speed optimization selection (cost limit 922):
  * Unroll loop at line 29:5                                     cost   135, benefit      300.0, efficiency        2.2 (+95 instructions)

Pass 1: speed optimization selection (cost limit 827):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
    Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5
  * Unroll loop at line 17:9                                     cost    14, benefit      100.0, efficiency        7.1 (+2 instructions)

Pass 1: speed optimization selection (cost limit 825):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
  * Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5 (+11 instructions)

Pass 1: speed optimization selection (cost limit 814):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
  * Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8 (+29 instructions)

Pass 1: speed optimization selection (cost limit 785):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
  * Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6 (+44 instructions)

Pass 1: speed optimization selection (cost limit 741):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
  * Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4 (+89 instructions)

Pass 1: speed optimization selection (cost limit 652):
  * Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3 (+134 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-11 instructions):
 
    15 set *tmp4 :testAndSetMultiples.0*retval
    16 jump *label7 equal *tmp4 false
    17 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp5 :sumPrimesUpTo.0:sum
    18 jump *label8 always
    19 label *label7
-    * set *tmp5 null
    20 label *label8
    21 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    22 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    27 set *tmp6 :testAndSetMultiples.0*retval
    28 jump *label10 equal *tmp6 false
    29 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp7 :sumPrimesUpTo.0:sum
    30 jump *label11 always
    31 label *label10
-    * set *tmp7 null
    32 label *label11
    33 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    34 label *label4
 
    46 op equal *tmp11 *tmp10 false
    47 jump *label16 equal *tmp11 false
    48 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp12 :sumPrimesUpTo.0:sum
    49 jump *label17 always
    50 label *label16
-    * set *tmp12 null
    51 label *label17
    52 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    53 op idiv *tmp13 :sumPrimesUpTo.0:i 2
 
    66 label *label21
    67 set *tmp18 null
    68 label *label22
-    * set *tmp16 *tmp18
    69 jump *label20 always
    70 label *label19
-    * set *tmp16 null
    71 label *label20
    72 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    73 label *label13
 
   114 read *tmp35 BITMAP *tmp34
   115 op or *tmp38 *tmp35 *tmp37
   116 write *tmp38 BITMAP *tmp34
-    * set *tmp32 *tmp38
   117 label *label31
   118 label *label29
   119 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
   120 jump *label28 always
   121 label *label30
-    * set *tmp27 null
   122 jump *label27 always
   123 label *label26
-    * set *tmp27 null
   124 label *label27
   125 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
   126 label *label24

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    61 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    62 jump *label21 equal *tmp17 false
    63 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp18 :sumPrimesUpTo.0:sum
    64 jump *label22 always
    65 label *label21
-    * set *tmp18 null
    66 label *label22
    67 jump *label20 always
    68 label *label19

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-14 instructions):
 
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
     4 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil *tmp2 *tmp1
-    * set :sumPrimesUpTo.0:sqrtMax *tmp2
+    5 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     6 label *label3
     7 op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     8 jump *label5 equal *tmp3 false
 
    11 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
    12 call *label1 *invalid :testAndSetMultiples.0*retval (m:*label6) (h:*label6)
    13 label *label6
-    * set *tmp4 :testAndSetMultiples.0*retval
-    * jump *label7 equal *tmp4 false
+   14 jump *label7 equal :testAndSetMultiples.0*retval false
    15 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    16 jump *label8 always
    17 label *label7
 
    22 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    23 call *label1 *invalid :testAndSetMultiples.0*retval (m:*label9) (h:*label9)
    24 label *label9
-    * set *tmp6 :testAndSetMultiples.0*retval
-    * jump *label10 equal *tmp6 false
+   25 jump *label10 equal :testAndSetMultiples.0*retval false
    26 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    27 jump *label11 always
    28 label *label10
 
    34 label *label12
    35 op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    36 jump *label14 equal *tmp8 false
-    * op idiv *tmp9 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp9
+   37 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    38 setaddr :getBit.0*retaddr *label15 (h:*label15)
    39 call *label0 *invalid :getBit.0*retval (m:*label15) (h:*label15)
    40 label *label15
-    * set *tmp10 :getBit.0*retval
-    * op equal *tmp11 *tmp10 false
+   41 op equal *tmp11 :getBit.0*retval false
    42 jump *label16 equal *tmp11 false
    43 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    44 jump *label17 always
    45 label *label16
    46 label *label17
    47 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * op idiv *tmp13 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp13
+   48 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    49 setaddr :getBit.0*retaddr *label18 (h:*label18)
    50 call *label0 *invalid :getBit.0*retval (m:*label18) (h:*label18)
    51 label *label18
-    * set *tmp14 :getBit.0*retval
-    * op equal *tmp15 *tmp14 false
+   52 op equal *tmp15 :getBit.0*retval false
    53 jump *label19 equal *tmp15 false
    54 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    55 jump *label21 equal *tmp17 false
 
    70 stop
    71 end
    72 label *label0
-    * op idiv *tmp19 :getBit.0:bitIndex 48
-    * set *tmp20 *tmp19
+   73 op idiv *tmp20 :getBit.0:bitIndex 48
    74 op mod *tmp22 :getBit.0:bitIndex 48
    75 op shl *tmp23 1 *tmp22
    76 read *tmp21 BITMAP *tmp20
-    * op and *tmp24 *tmp21 *tmp23
-    * set :getBit.0*retval *tmp24
+   77 op and :getBit.0*retval *tmp21 *tmp23
    78 label *label23
    79 return :getBit.0*retaddr
    80 end
    81 label *label1
-    * op idiv *tmp25 :testAndSetMultiples.0:n 2
-    * set :getBit.0:bitIndex *tmp25
+   82 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
    83 setaddr :getBit.0*retaddr *label25 (h:*label25)
    84 call *label0 *invalid :getBit.0*retval (m:*label25) (h:*label25)
    85 label *label25
-    * op equal *tmp26 :getBit.0*retval false
-    * set :testAndSetMultiples.0:result *tmp26
+   86 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    87 jump *label26 equal :testAndSetMultiples.0:result false
-    * op idiv *tmp28 :testAndSetMultiples.0:maximum 2
-    * set :testAndSetMultiples.0:max *tmp28
+   88 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
    89 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv *tmp30 *tmp29 2
-    * set :testAndSetMultiples.0:i *tmp30
+   90 op idiv :testAndSetMultiples.0:i *tmp29 2
    91 label *label28
    92 op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    93 jump *label30 equal *tmp31 false
    94 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp33 :setBit.0:bitIndex 48
-    * set *tmp34 *tmp33
+   95 op idiv *tmp34 :setBit.0:bitIndex 48
    96 op mod *tmp36 :setBit.0:bitIndex 48
    97 op shl *tmp37 1 *tmp36
    98 read *tmp35 BITMAP *tmp34

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
     4 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
     5 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     6 label *label3
-    * op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
-    * jump *label5 equal *tmp3 false
+    7 jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     8 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     9 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    10 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
 
    31 jump *label3 always
    32 label *label5
    33 label *label12
-    * op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label14 equal *tmp8 false
+   34 jump *label14 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    35 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    36 setaddr :getBit.0*retaddr *label15 (h:*label15)
    37 call *label0 *invalid :getBit.0*retval (m:*label15) (h:*label15)
    38 label *label15
-    * op equal *tmp11 :getBit.0*retval false
-    * jump *label16 equal *tmp11 false
+   39 jump *label16 notEqual :getBit.0*retval false
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    41 jump *label17 always
    42 label *label16
 
    46 setaddr :getBit.0*retaddr *label18 (h:*label18)
    47 call *label0 *invalid :getBit.0*retval (m:*label18) (h:*label18)
    48 label *label18
-    * op equal *tmp15 :getBit.0*retval false
-    * jump *label19 equal *tmp15 false
-    * op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label21 equal *tmp17 false
+   49 jump *label19 notEqual :getBit.0*retval false
+   50 jump *label21 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    51 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    52 jump *label22 always
    53 label *label21
 
    84 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
    85 op idiv :testAndSetMultiples.0:i *tmp29 2
    86 label *label28
-    * op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * jump *label30 equal *tmp31 false
+   87 jump *label30 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    88 set :setBit.0:bitIndex :testAndSetMultiples.0:i
    89 op idiv *tmp34 :setBit.0:bitIndex 48
    90 op mod *tmp36 :setBit.0:bitIndex 48

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    12 label *label6
    13 jump *label7 equal :testAndSetMultiples.0*retval false
    14 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label8 always
    15 label *label7
    16 label *label8
    17 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    22 label *label9
    23 jump *label10 equal :testAndSetMultiples.0*retval false
    24 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label11 always
    25 label *label10
    26 label *label11
    27 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    36 label *label15
    37 jump *label16 notEqual :getBit.0*retval false
    38 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label17 always
    39 label *label16
    40 label *label17
    41 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    46 jump *label19 notEqual :getBit.0*retval false
    47 jump *label21 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    48 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label22 always
    49 label *label21
    50 label *label22
-    * jump *label20 always
    51 label *label19
    52 label *label20
    53 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    92 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
    93 jump *label28 always
    94 label *label30
-    * jump *label27 always
    95 label *label26
    96 label *label27
    97 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set :sumPrimesUpTo.0:maximum 500
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
+    4 op sqrt *tmp1 500
+    5 op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     6 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
+    7 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     8 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+    9 set :testAndSetMultiples.0:maximum 500
    10 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
    11 call *label1 *invalid :testAndSetMultiples.0*retval (m:*label6) (h:*label6)
    12 label *label6
 
    16 label *label8
    17 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    18 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+   19 set :testAndSetMultiples.0:maximum 500
    20 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    21 call *label1 *invalid :testAndSetMultiples.0*retval (m:*label9) (h:*label9)
    22 label *label9
 
    29 jump *label3 always
    30 label *label5
    31 label *label12
-    * jump *label14 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   32 jump *label14 greaterThan :sumPrimesUpTo.0:i 500
    33 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    34 setaddr :getBit.0*retaddr *label15 (h:*label15)
    35 call *label0 *invalid :getBit.0*retval (m:*label15) (h:*label15)
 
    44 call *label0 *invalid :getBit.0*retval (m:*label18) (h:*label18)
    45 label *label18
    46 jump *label19 notEqual :getBit.0*retval false
-    * jump *label21 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   47 jump *label21 greaterThan :sumPrimesUpTo.0:i 500
    48 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    49 label *label21
    50 label *label22
 
    56 label *label14
    57 set *tmp0 :sumPrimesUpTo.0:sum
    58 label *label2
-    * assertequals 21536 *tmp0 "sumPrimesUpTo(500)"
+   59 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    60 stop
    61 end
    62 label *label0
 
    81 label *label28
    82 jump *label30 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    83 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp34 :setBit.0:bitIndex 48
-    * op mod *tmp36 :setBit.0:bitIndex 48
+   84 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   85 op mod *tmp36 :testAndSetMultiples.0:i 48
    86 op shl *tmp37 1 *tmp36
    87 read *tmp35 BITMAP *tmp34
    88 op or *tmp38 *tmp35 *tmp37

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
     0 set BITMAP bank1
-    * set :sumPrimesUpTo.0:maximum 500
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 500
-    * op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     3 label *label3
     4 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    51 label *label13
    52 jump *label12 always
    53 label *label14
-    * set *tmp0 :sumPrimesUpTo.0:sum
    54 label *label2
    55 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    56 stop
 
    76 op idiv :testAndSetMultiples.0:i *tmp29 2
    77 label *label28
    78 jump *label30 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * set :setBit.0:bitIndex :testAndSetMultiples.0:i
    79 op idiv *tmp34 :testAndSetMultiples.0:i 48
    80 op mod *tmp36 :testAndSetMultiples.0:i 48
    81 op shl *tmp37 1 *tmp36

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
     3 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i 23
+    4 label *label32
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     6 set :testAndSetMultiples.0:maximum 500
     7 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
 
    23 label *label11
    24 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    25 label *label4
-    * jump *label3 always
+   26 jump *label32 lessThanEq :sumPrimesUpTo.0:i 23
    27 label *label5
    28 label *label12
    29 jump *label14 greaterThan :sumPrimesUpTo.0:i 500
+   30 label *label33
    31 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    32 setaddr :getBit.0*retaddr *label15 (h:*label15)
    33 call *label0 *invalid :getBit.0*retval (m:*label15) (h:*label15)
 
    50 label *label20
    51 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    52 label *label13
-    * jump *label12 always
+   53 jump *label33 lessThanEq :sumPrimesUpTo.0:i 500
    54 label *label14
    55 label *label2
    56 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
 
    77 op idiv :testAndSetMultiples.0:i *tmp29 2
    78 label *label28
    79 jump *label30 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   80 label *label34
    81 op idiv *tmp34 :testAndSetMultiples.0:i 48
    82 op mod *tmp36 :testAndSetMultiples.0:i 48
    83 op shl *tmp37 1 *tmp36
 
    87 label *label31
    88 label *label29
    89 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label28 always
+   90 jump *label34 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    91 label *label30
    92 label *label26
    93 label *label27

Modifications by Inline function 'getBit' defined at line 10:1 (+5 instructions):
 
    30 label *label33
    31 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    32 setaddr :getBit.0*retaddr *label15 (h:*label15)
-    * call *label0 *invalid :getBit.0*retval (m:*label15) (h:*label15)
-    * label *label15
+   33 label *label35
+   34 op idiv *tmp20 :getBit.0:bitIndex 48
+   35 op mod *tmp22 :getBit.0:bitIndex 48
+   36 op shl *tmp23 1 *tmp22
+   37 read *tmp21 BITMAP *tmp20
+   38 op and :getBit.0*retval *tmp21 *tmp23
+   39 label *label36
    40 jump *label16 notEqual :getBit.0*retval false
    41 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    42 label *label16
 
    44 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    45 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    46 setaddr :getBit.0*retaddr *label18 (h:*label18)
-    * call *label0 *invalid :getBit.0*retval (m:*label18) (h:*label18)
-    * label *label18
+   47 label *label37
+   48 op idiv *tmp20 :getBit.0:bitIndex 48
+   49 op mod *tmp22 :getBit.0:bitIndex 48
+   50 op shl *tmp23 1 *tmp22
+   51 read *tmp21 BITMAP *tmp20
+   52 op and :getBit.0*retval *tmp21 *tmp23
+   53 label *label38
    54 jump *label19 notEqual :getBit.0*retval false
    55 jump *label21 greaterThan :sumPrimesUpTo.0:i 500
    56 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    66 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    67 stop
    68 end
-    * label *label0
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label23
-    * return :getBit.0*retaddr
-    * end
    69 label *label1
    70 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
    71 setaddr :getBit.0*retaddr *label25 (h:*label25)
-    * call *label0 *invalid :getBit.0*retval (m:*label25) (h:*label25)
-    * label *label25
+   72 label *label39
+   73 op idiv *tmp20 :getBit.0:bitIndex 48
+   74 op mod *tmp22 :getBit.0:bitIndex 48
+   75 op shl *tmp23 1 *tmp22
+   76 read *tmp21 BITMAP *tmp20
+   77 op and :getBit.0*retval *tmp21 *tmp23
+   78 label *label40
    79 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    80 jump *label26 equal :testAndSetMultiples.0:result false
    81 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2

Modifications by Inline function 'testAndSetMultiples' defined at line 14:1 (+18 instructions):
 
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     6 set :testAndSetMultiples.0:maximum 500
     7 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
-    * call *label1 *invalid :testAndSetMultiples.0*retval (m:*label6) (h:*label6)
-    * label *label6
+    8 label *label41
+    9 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   10 setaddr :getBit.0*retaddr *label25 (h:*label25)
+   11 label *label42
+   12 op idiv *tmp20 :getBit.0:bitIndex 48
+   13 op mod *tmp22 :getBit.0:bitIndex 48
+   14 op shl *tmp23 1 *tmp22
+   15 read *tmp21 BITMAP *tmp20
+   16 op and :getBit.0*retval *tmp21 *tmp23
+   17 label *label43
+   18 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   19 jump *label49 equal :testAndSetMultiples.0:result false
+   20 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   21 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   22 op idiv :testAndSetMultiples.0:i *tmp29 2
+   23 label *label44
+   24 jump *label48 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   25 label *label45
+   26 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   27 op mod *tmp36 :testAndSetMultiples.0:i 48
+   28 op shl *tmp37 1 *tmp36
+   29 read *tmp35 BITMAP *tmp34
+   30 op or *tmp38 *tmp35 *tmp37
+   31 write *tmp38 BITMAP *tmp34
+   32 label *label46
+   33 label *label47
+   34 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   35 jump *label45 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   36 label *label48
+   37 label *label49
+   38 label *label50
+   39 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   40 label *label51
    41 jump *label7 equal :testAndSetMultiples.0*retval false
    42 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    43 label *label7
 
    46 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    47 set :testAndSetMultiples.0:maximum 500
    48 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
-    * call *label1 *invalid :testAndSetMultiples.0*retval (m:*label9) (h:*label9)
-    * label *label9
+   49 label *label52
+   50 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   51 setaddr :getBit.0*retaddr *label25 (h:*label25)
+   52 label *label53
+   53 op idiv *tmp20 :getBit.0:bitIndex 48
+   54 op mod *tmp22 :getBit.0:bitIndex 48
+   55 op shl *tmp23 1 *tmp22
+   56 read *tmp21 BITMAP *tmp20
+   57 op and :getBit.0*retval *tmp21 *tmp23
+   58 label *label54
+   59 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   60 jump *label60 equal :testAndSetMultiples.0:result false
+   61 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   62 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   63 op idiv :testAndSetMultiples.0:i *tmp29 2
+   64 label *label55
+   65 jump *label59 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   66 label *label56
+   67 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   68 op mod *tmp36 :testAndSetMultiples.0:i 48
+   69 op shl *tmp37 1 *tmp36
+   70 read *tmp35 BITMAP *tmp34
+   71 op or *tmp38 *tmp35 *tmp37
+   72 write *tmp38 BITMAP *tmp34
+   73 label *label57
+   74 label *label58
+   75 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   76 jump *label56 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   77 label *label59
+   78 label *label60
+   79 label *label61
+   80 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   81 label *label62
    82 jump *label10 equal :testAndSetMultiples.0*retval false
    83 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    84 label *label10
 
   128 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   129 stop
   130 end
-    * label *label1
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
-    * label *label39
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label40
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label26 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label28
-    * jump *label30 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label34
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label31
-    * label *label29
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label34 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label30
-    * label *label26
-    * label *label27
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
-    * label *label24
-    * return :testAndSetMultiples.0*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     6 set :testAndSetMultiples.0:maximum 500
     7 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
     8 label *label41
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+    9 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    10 setaddr :getBit.0*retaddr *label25 (h:*label25)
    11 label *label42
    12 op idiv *tmp20 :getBit.0:bitIndex 48
 
    17 label *label43
    18 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    19 jump *label49 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   20 op idiv :testAndSetMultiples.0:max 500 2
+   21 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    22 op idiv :testAndSetMultiples.0:i *tmp29 2
    23 label *label44
-    * jump *label48 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   24 jump *label48 greaterThan :testAndSetMultiples.0:i 250
    25 label *label45
    26 op idiv *tmp34 :testAndSetMultiples.0:i 48
    27 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    31 write *tmp38 BITMAP *tmp34
    32 label *label46
    33 label *label47
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label45 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   34 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   35 jump *label45 lessThanEq :testAndSetMultiples.0:i 250
    36 label *label48
    37 label *label49
    38 label *label50
    39 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    40 label *label51
-    * jump *label7 equal :testAndSetMultiples.0*retval false
+   41 jump *label7 equal :testAndSetMultiples.0:result false
    42 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    43 label *label7
    44 label *label8
 
    47 set :testAndSetMultiples.0:maximum 500
    48 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    49 label *label52
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   50 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    51 setaddr :getBit.0*retaddr *label25 (h:*label25)
    52 label *label53
    53 op idiv *tmp20 :getBit.0:bitIndex 48
 
    58 label *label54
    59 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    60 jump *label60 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   61 op idiv :testAndSetMultiples.0:max 500 2
+   62 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    63 op idiv :testAndSetMultiples.0:i *tmp29 2
    64 label *label55
-    * jump *label59 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   65 jump *label59 greaterThan :testAndSetMultiples.0:i 250
    66 label *label56
    67 op idiv *tmp34 :testAndSetMultiples.0:i 48
    68 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    72 write *tmp38 BITMAP *tmp34
    73 label *label57
    74 label *label58
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label56 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   75 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   76 jump *label56 lessThanEq :testAndSetMultiples.0:i 250
    77 label *label59
    78 label *label60
    79 label *label61
    80 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    81 label *label62
-    * jump *label10 equal :testAndSetMultiples.0*retval false
+   82 jump *label10 equal :testAndSetMultiples.0:result false
    83 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    84 label *label10
    85 label *label11

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
     2 set :sumPrimesUpTo.0:i 5
     3 label *label3
     4 label *label32
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
     5 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
     6 label *label41
     7 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
 
    15 label *label43
    16 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    17 jump *label49 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    18 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    19 op idiv :testAndSetMultiples.0:i *tmp29 2
    20 label *label44
 
    33 label *label48
    34 label *label49
    35 label *label50
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    36 label *label51
    37 jump *label7 equal :testAndSetMultiples.0:result false
    38 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    39 label *label7
    40 label *label8
    41 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
    42 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    43 label *label52
    44 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
 
    52 label *label54
    53 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    54 jump *label60 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    55 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    56 op idiv :testAndSetMultiples.0:i *tmp29 2
    57 label *label55
 
    70 label *label59
    71 label *label60
    72 label *label61
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    73 label *label62
    74 jump *label10 equal :testAndSetMultiples.0:result false
    75 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i

Modifications by Unroll loop at line 29:5 (+143 instructions):
     0 set BITMAP bank1
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
-    * label *label3
-    * label *label32
-    * setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
-    * label *label41
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
-    * label *label42
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label43
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label49 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label44
-    * jump *label48 greaterThan :testAndSetMultiples.0:i 250
-    * label *label45
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label46
-    * label *label47
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label45 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label48
-    * label *label49
-    * label *label50
-    * label *label51
-    * jump *label7 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label7
-    * label *label8
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
-    * label *label52
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
-    * label *label53
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label54
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label60 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label55
-    * jump *label59 greaterThan :testAndSetMultiples.0:i 250
-    * label *label56
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label57
-    * label *label58
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label56 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label59
-    * label *label60
-    * label *label61
-    * label *label62
-    * jump *label10 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label10
-    * label *label11
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
-    * label *label4
-    * jump *label32 lessThanEq :sumPrimesUpTo.0:i 23
-    * label *label5
+    3 label *label63
+    4 label *label64
+    5 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
+    6 label *label65
+    7 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    8 setaddr :getBit.0*retaddr *label25 (h:*label25)
+    9 label *label66
+   10 op idiv *tmp20 :getBit.0:bitIndex 48
+   11 op mod *tmp22 :getBit.0:bitIndex 48
+   12 op shl *tmp23 1 *tmp22
+   13 read *tmp21 BITMAP *tmp20
+   14 op and :getBit.0*retval *tmp21 *tmp23
+   15 label *label67
+   16 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   17 jump *label73 equal :testAndSetMultiples.0:result false
+   18 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   19 op idiv :testAndSetMultiples.0:i *tmp29 2
+   20 label *label68
+   21 jump *label72 greaterThan :testAndSetMultiples.0:i 250
+   22 label *label69
+   23 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   24 op mod *tmp36 :testAndSetMultiples.0:i 48
+   25 op shl *tmp37 1 *tmp36
+   26 read *tmp35 BITMAP *tmp34
+   27 op or *tmp38 *tmp35 *tmp37
+   28 write *tmp38 BITMAP *tmp34
+   29 label *label70
+   30 label *label71
+   31 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   32 jump *label69 lessThanEq :testAndSetMultiples.0:i 250
+   33 label *label72
+   34 label *label73
+   35 label *label74
+   36 label *label75
+   37 jump *label76 equal :testAndSetMultiples.0:result false
+   38 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   39 label *label76
+   40 label *label77
+   41 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   42 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
+   43 label *label78
+   44 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   45 setaddr :getBit.0*retaddr *label25 (h:*label25)
+   46 label *label79
+   47 op idiv *tmp20 :getBit.0:bitIndex 48
+   48 op mod *tmp22 :getBit.0:bitIndex 48
+   49 op shl *tmp23 1 *tmp22
+   50 read *tmp21 BITMAP *tmp20
+   51 op and :getBit.0*retval *tmp21 *tmp23
+   52 label *label80
+   53 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   54 jump *label86 equal :testAndSetMultiples.0:result false
+   55 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   56 op idiv :testAndSetMultiples.0:i *tmp29 2
+   57 label *label81
+   58 jump *label85 greaterThan :testAndSetMultiples.0:i 250
+   59 label *label82
+   60 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   61 op mod *tmp36 :testAndSetMultiples.0:i 48
+   62 op shl *tmp37 1 *tmp36
+   63 read *tmp35 BITMAP *tmp34
+   64 op or *tmp38 *tmp35 *tmp37
+   65 write *tmp38 BITMAP *tmp34
+   66 label *label83
+   67 label *label84
+   68 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   69 jump *label82 lessThanEq :testAndSetMultiples.0:i 250
+   70 label *label85
+   71 label *label86
+   72 label *label87
+   73 label *label88
+   74 jump *label89 equal :testAndSetMultiples.0:result false
+   75 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   76 label *label89
+   77 label *label90
+   78 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   79 label *label91
+   80 label *label92
+   81 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
+   82 label *label93
+   83 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   84 setaddr :getBit.0*retaddr *label25 (h:*label25)
+   85 label *label94
+   86 op idiv *tmp20 :getBit.0:bitIndex 48
+   87 op mod *tmp22 :getBit.0:bitIndex 48
+   88 op shl *tmp23 1 *tmp22
+   89 read *tmp21 BITMAP *tmp20
+   90 op and :getBit.0*retval *tmp21 *tmp23
+   91 label *label95
+   92 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   93 jump *label101 equal :testAndSetMultiples.0:result false
+   94 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   95 op idiv :testAndSetMultiples.0:i *tmp29 2
+   96 label *label96
+   97 jump *label100 greaterThan :testAndSetMultiples.0:i 250
+   98 label *label97
+   99 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  100 op mod *tmp36 :testAndSetMultiples.0:i 48
+  101 op shl *tmp37 1 *tmp36
+  102 read *tmp35 BITMAP *tmp34
+  103 op or *tmp38 *tmp35 *tmp37
+  104 write *tmp38 BITMAP *tmp34
+  105 label *label98
+  106 label *label99
+  107 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  108 jump *label97 lessThanEq :testAndSetMultiples.0:i 250
+  109 label *label100
+  110 label *label101
+  111 label *label102
+  112 label *label103
+  113 jump *label104 equal :testAndSetMultiples.0:result false
+  114 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  115 label *label104
+  116 label *label105
+  117 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  118 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
+  119 label *label106
+  120 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  121 setaddr :getBit.0*retaddr *label25 (h:*label25)
+  122 label *label107
+  123 op idiv *tmp20 :getBit.0:bitIndex 48
+  124 op mod *tmp22 :getBit.0:bitIndex 48
+  125 op shl *tmp23 1 *tmp22
+  126 read *tmp21 BITMAP *tmp20
+  127 op and :getBit.0*retval *tmp21 *tmp23
+  128 label *label108
+  129 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  130 jump *label114 equal :testAndSetMultiples.0:result false
+  131 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  132 op idiv :testAndSetMultiples.0:i *tmp29 2
+  133 label *label109
+  134 jump *label113 greaterThan :testAndSetMultiples.0:i 250
+  135 label *label110
+  136 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  137 op mod *tmp36 :testAndSetMultiples.0:i 48
+  138 op shl *tmp37 1 *tmp36
+  139 read *tmp35 BITMAP *tmp34
+  140 op or *tmp38 *tmp35 *tmp37
+  141 write *tmp38 BITMAP *tmp34
+  142 label *label111
+  143 label *label112
+  144 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  145 jump *label110 lessThanEq :testAndSetMultiples.0:i 250
+  146 label *label113
+  147 label *label114
+  148 label *label115
+  149 label *label116
+  150 jump *label117 equal :testAndSetMultiples.0:result false
+  151 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  152 label *label117
+  153 label *label118
+  154 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  155 label *label119
+  156 label *label120
+  157 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
+  158 label *label121
+  159 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  160 setaddr :getBit.0*retaddr *label25 (h:*label25)
+  161 label *label122
+  162 op idiv *tmp20 :getBit.0:bitIndex 48
+  163 op mod *tmp22 :getBit.0:bitIndex 48
+  164 op shl *tmp23 1 *tmp22
+  165 read *tmp21 BITMAP *tmp20
+  166 op and :getBit.0*retval *tmp21 *tmp23
+  167 label *label123
+  168 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  169 jump *label129 equal :testAndSetMultiples.0:result false
+  170 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  171 op idiv :testAndSetMultiples.0:i *tmp29 2
+  172 label *label124
+  173 jump *label128 greaterThan :testAndSetMultiples.0:i 250
+  174 label *label125
+  175 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  176 op mod *tmp36 :testAndSetMultiples.0:i 48
+  177 op shl *tmp37 1 *tmp36
+  178 read *tmp35 BITMAP *tmp34
+  179 op or *tmp38 *tmp35 *tmp37
+  180 write *tmp38 BITMAP *tmp34
+  181 label *label126
+  182 label *label127
+  183 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  184 jump *label125 lessThanEq :testAndSetMultiples.0:i 250
+  185 label *label128
+  186 label *label129
+  187 label *label130
+  188 label *label131
+  189 jump *label132 equal :testAndSetMultiples.0:result false
+  190 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  191 label *label132
+  192 label *label133
+  193 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  194 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
+  195 label *label134
+  196 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  197 setaddr :getBit.0*retaddr *label25 (h:*label25)
+  198 label *label135
+  199 op idiv *tmp20 :getBit.0:bitIndex 48
+  200 op mod *tmp22 :getBit.0:bitIndex 48
+  201 op shl *tmp23 1 *tmp22
+  202 read *tmp21 BITMAP *tmp20
+  203 op and :getBit.0*retval *tmp21 *tmp23
+  204 label *label136
+  205 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  206 jump *label142 equal :testAndSetMultiples.0:result false
+  207 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  208 op idiv :testAndSetMultiples.0:i *tmp29 2
+  209 label *label137
+  210 jump *label141 greaterThan :testAndSetMultiples.0:i 250
+  211 label *label138
+  212 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  213 op mod *tmp36 :testAndSetMultiples.0:i 48
+  214 op shl *tmp37 1 *tmp36
+  215 read *tmp35 BITMAP *tmp34
+  216 op or *tmp38 *tmp35 *tmp37
+  217 write *tmp38 BITMAP *tmp34
+  218 label *label139
+  219 label *label140
+  220 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  221 jump *label138 lessThanEq :testAndSetMultiples.0:i 250
+  222 label *label141
+  223 label *label142
+  224 label *label143
+  225 label *label144
+  226 jump *label145 equal :testAndSetMultiples.0:result false
+  227 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  228 label *label145
+  229 label *label146
+  230 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  231 label *label147
+  232 label *label148
+  233 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
+  234 label *label149
+  235 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  236 setaddr :getBit.0*retaddr *label25 (h:*label25)
+  237 label *label150
+  238 op idiv *tmp20 :getBit.0:bitIndex 48
+  239 op mod *tmp22 :getBit.0:bitIndex 48
+  240 op shl *tmp23 1 *tmp22
+  241 read *tmp21 BITMAP *tmp20
+  242 op and :getBit.0*retval *tmp21 *tmp23
+  243 label *label151
+  244 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  245 jump *label157 equal :testAndSetMultiples.0:result false
+  246 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  247 op idiv :testAndSetMultiples.0:i *tmp29 2
+  248 label *label152
+  249 jump *label156 greaterThan :testAndSetMultiples.0:i 250
+  250 label *label153
+  251 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  252 op mod *tmp36 :testAndSetMultiples.0:i 48
+  253 op shl *tmp37 1 *tmp36
+  254 read *tmp35 BITMAP *tmp34
+  255 op or *tmp38 *tmp35 *tmp37
+  256 write *tmp38 BITMAP *tmp34
+  257 label *label154
+  258 label *label155
+  259 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  260 jump *label153 lessThanEq :testAndSetMultiples.0:i 250
+  261 label *label156
+  262 label *label157
+  263 label *label158
+  264 label *label159
+  265 jump *label160 equal :testAndSetMultiples.0:result false
+  266 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  267 label *label160
+  268 label *label161
+  269 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  270 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
+  271 label *label162
+  272 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  273 setaddr :getBit.0*retaddr *label25 (h:*label25)
+  274 label *label163
+  275 op idiv *tmp20 :getBit.0:bitIndex 48
+  276 op mod *tmp22 :getBit.0:bitIndex 48
+  277 op shl *tmp23 1 *tmp22
+  278 read *tmp21 BITMAP *tmp20
+  279 op and :getBit.0*retval *tmp21 *tmp23
+  280 label *label164
+  281 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  282 jump *label170 equal :testAndSetMultiples.0:result false
+  283 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  284 op idiv :testAndSetMultiples.0:i *tmp29 2
+  285 label *label165
+  286 jump *label169 greaterThan :testAndSetMultiples.0:i 250
+  287 label *label166
+  288 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  289 op mod *tmp36 :testAndSetMultiples.0:i 48
+  290 op shl *tmp37 1 *tmp36
+  291 read *tmp35 BITMAP *tmp34
+  292 op or *tmp38 *tmp35 *tmp37
+  293 write *tmp38 BITMAP *tmp34
+  294 label *label167
+  295 label *label168
+  296 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  297 jump *label166 lessThanEq :testAndSetMultiples.0:i 250
+  298 label *label169
+  299 label *label170
+  300 label *label171
+  301 label *label172
+  302 jump *label173 equal :testAndSetMultiples.0:result false
+  303 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  304 label *label173
+  305 label *label174
+  306 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  307 label *label175
+  308 label *label5
   309 label *label12
   310 jump *label14 greaterThan :sumPrimesUpTo.0:i 500
   311 label *label33

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 label *label64
     5 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
     6 label *label65
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    7 op idiv :getBit.0:bitIndex 5 2
     8 setaddr :getBit.0*retaddr *label25 (h:*label25)
     9 label *label66
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   10 op idiv *tmp20 2 48
+   11 op mod *tmp22 2 48
+   12 op shl *tmp23 1 2
+   13 read *tmp21 BITMAP 0
+   14 op and :getBit.0*retval *tmp21 4
    15 label *label67
    16 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    17 jump *label73 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   18 op mul *tmp29 5 5
+   19 op idiv :testAndSetMultiples.0:i 25 2
    20 label *label68
-    * jump *label72 greaterThan :testAndSetMultiples.0:i 250
+   21 jump *label72 greaterThan 12 250
    22 label *label69
    23 op idiv *tmp34 :testAndSetMultiples.0:i 48
    24 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    28 write *tmp38 BITMAP *tmp34
    29 label *label70
    30 label *label71
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   31 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
    32 jump *label69 lessThanEq :testAndSetMultiples.0:i 250
    33 label *label72
    34 label *label73
    35 label *label74
    36 label *label75
    37 jump *label76 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   38 op add :sumPrimesUpTo.0:sum 5 5
    39 label *label76
    40 label *label77
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   41 op add :sumPrimesUpTo.0:i 5 2
    42 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    43 label *label78
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   44 op idiv :getBit.0:bitIndex 7 2
    45 setaddr :getBit.0*retaddr *label25 (h:*label25)
    46 label *label79
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   47 op idiv *tmp20 3 48
+   48 op mod *tmp22 3 48
+   49 op shl *tmp23 1 3
+   50 read *tmp21 BITMAP 0
+   51 op and :getBit.0*retval *tmp21 8
    52 label *label80
    53 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    54 jump *label86 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   55 op mul *tmp29 7 7
+   56 op idiv :testAndSetMultiples.0:i 49 2
    57 label *label81
-    * jump *label85 greaterThan :testAndSetMultiples.0:i 250
+   58 jump *label85 greaterThan 24 250
    59 label *label82
    60 op idiv *tmp34 :testAndSetMultiples.0:i 48
    61 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    65 write *tmp38 BITMAP *tmp34
    66 label *label83
    67 label *label84
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   68 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
    69 jump *label82 lessThanEq :testAndSetMultiples.0:i 250
    70 label *label85
    71 label *label86
    72 label *label87
    73 label *label88
    74 jump *label89 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   75 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    76 label *label89
    77 label *label90
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   78 op add :sumPrimesUpTo.0:i 7 4
    79 label *label91
    80 label *label92
    81 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
    82 label *label93
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   83 op idiv :getBit.0:bitIndex 11 2
    84 setaddr :getBit.0*retaddr *label25 (h:*label25)
    85 label *label94
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   86 op idiv *tmp20 5 48
+   87 op mod *tmp22 5 48
+   88 op shl *tmp23 1 5
+   89 read *tmp21 BITMAP 0
+   90 op and :getBit.0*retval *tmp21 32
    91 label *label95
    92 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    93 jump *label101 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   94 op mul *tmp29 11 11
+   95 op idiv :testAndSetMultiples.0:i 121 2
    96 label *label96
-    * jump *label100 greaterThan :testAndSetMultiples.0:i 250
+   97 jump *label100 greaterThan 60 250
    98 label *label97
    99 op idiv *tmp34 :testAndSetMultiples.0:i 48
   100 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   104 write *tmp38 BITMAP *tmp34
   105 label *label98
   106 label *label99
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  107 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
   108 jump *label97 lessThanEq :testAndSetMultiples.0:i 250
   109 label *label100
   110 label *label101
   111 label *label102
   112 label *label103
   113 jump *label104 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  114 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   115 label *label104
   116 label *label105
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  117 op add :sumPrimesUpTo.0:i 11 2
   118 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   119 label *label106
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  120 op idiv :getBit.0:bitIndex 13 2
   121 setaddr :getBit.0*retaddr *label25 (h:*label25)
   122 label *label107
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  123 op idiv *tmp20 6 48
+  124 op mod *tmp22 6 48
+  125 op shl *tmp23 1 6
+  126 read *tmp21 BITMAP 0
+  127 op and :getBit.0*retval *tmp21 64
   128 label *label108
   129 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   130 jump *label114 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  131 op mul *tmp29 13 13
+  132 op idiv :testAndSetMultiples.0:i 169 2
   133 label *label109
-    * jump *label113 greaterThan :testAndSetMultiples.0:i 250
+  134 jump *label113 greaterThan 84 250
   135 label *label110
   136 op idiv *tmp34 :testAndSetMultiples.0:i 48
   137 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   141 write *tmp38 BITMAP *tmp34
   142 label *label111
   143 label *label112
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  144 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
   145 jump *label110 lessThanEq :testAndSetMultiples.0:i 250
   146 label *label113
   147 label *label114
   148 label *label115
   149 label *label116
   150 jump *label117 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  151 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   152 label *label117
   153 label *label118
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  154 op add :sumPrimesUpTo.0:i 13 4
   155 label *label119
   156 label *label120
   157 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   158 label *label121
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  159 op idiv :getBit.0:bitIndex 17 2
   160 setaddr :getBit.0*retaddr *label25 (h:*label25)
   161 label *label122
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  162 op idiv *tmp20 8 48
+  163 op mod *tmp22 8 48
+  164 op shl *tmp23 1 8
+  165 read *tmp21 BITMAP 0
+  166 op and :getBit.0*retval *tmp21 256
   167 label *label123
   168 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   169 jump *label129 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  170 op mul *tmp29 17 17
+  171 op idiv :testAndSetMultiples.0:i 289 2
   172 label *label124
-    * jump *label128 greaterThan :testAndSetMultiples.0:i 250
+  173 jump *label128 greaterThan 144 250
   174 label *label125
   175 op idiv *tmp34 :testAndSetMultiples.0:i 48
   176 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   180 write *tmp38 BITMAP *tmp34
   181 label *label126
   182 label *label127
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  183 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
   184 jump *label125 lessThanEq :testAndSetMultiples.0:i 250
   185 label *label128
   186 label *label129
   187 label *label130
   188 label *label131
   189 jump *label132 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  190 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   191 label *label132
   192 label *label133
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  193 op add :sumPrimesUpTo.0:i 17 2
   194 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   195 label *label134
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  196 op idiv :getBit.0:bitIndex 19 2
   197 setaddr :getBit.0*retaddr *label25 (h:*label25)
   198 label *label135
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  199 op idiv *tmp20 9 48
+  200 op mod *tmp22 9 48
+  201 op shl *tmp23 1 9
+  202 read *tmp21 BITMAP 0
+  203 op and :getBit.0*retval *tmp21 512
   204 label *label136
   205 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   206 jump *label142 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  207 op mul *tmp29 19 19
+  208 op idiv :testAndSetMultiples.0:i 361 2
   209 label *label137
-    * jump *label141 greaterThan :testAndSetMultiples.0:i 250
+  210 jump *label141 greaterThan 180 250
   211 label *label138
   212 op idiv *tmp34 :testAndSetMultiples.0:i 48
   213 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   217 write *tmp38 BITMAP *tmp34
   218 label *label139
   219 label *label140
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  220 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
   221 jump *label138 lessThanEq :testAndSetMultiples.0:i 250
   222 label *label141
   223 label *label142
   224 label *label143
   225 label *label144
   226 jump *label145 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  227 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   228 label *label145
   229 label *label146
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  230 op add :sumPrimesUpTo.0:i 19 4
   231 label *label147
   232 label *label148
   233 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   234 label *label149
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  235 op idiv :getBit.0:bitIndex 23 2
   236 setaddr :getBit.0*retaddr *label25 (h:*label25)
   237 label *label150
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  238 op idiv *tmp20 11 48
+  239 op mod *tmp22 11 48
+  240 op shl *tmp23 1 11
+  241 read *tmp21 BITMAP 0
+  242 op and :getBit.0*retval *tmp21 2048
   243 label *label151
   244 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   245 jump *label157 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  246 op mul *tmp29 23 23
+  247 op idiv :testAndSetMultiples.0:i 529 2
   248 label *label152
-    * jump *label156 greaterThan :testAndSetMultiples.0:i 250
+  249 jump *label156 greaterThan 264 250
   250 label *label153
   251 op idiv *tmp34 :testAndSetMultiples.0:i 48
   252 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   256 write *tmp38 BITMAP *tmp34
   257 label *label154
   258 label *label155
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  259 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   260 jump *label153 lessThanEq :testAndSetMultiples.0:i 250
   261 label *label156
   262 label *label157
   263 label *label158
   264 label *label159
   265 jump *label160 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  266 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   267 label *label160
   268 label *label161
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  269 op add :sumPrimesUpTo.0:i 23 2
   270 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   271 label *label162
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  272 op idiv :getBit.0:bitIndex 25 2
   273 setaddr :getBit.0*retaddr *label25 (h:*label25)
   274 label *label163
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  275 op idiv *tmp20 12 48
+  276 op mod *tmp22 12 48
+  277 op shl *tmp23 1 12
+  278 read *tmp21 BITMAP 0
+  279 op and :getBit.0*retval *tmp21 4096
   280 label *label164
   281 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   282 jump *label170 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  283 op mul *tmp29 25 25
+  284 op idiv :testAndSetMultiples.0:i 625 2
   285 label *label165
-    * jump *label169 greaterThan :testAndSetMultiples.0:i 250
+  286 jump *label169 greaterThan 312 250
   287 label *label166
   288 op idiv *tmp34 :testAndSetMultiples.0:i 48
   289 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   293 write *tmp38 BITMAP *tmp34
   294 label *label167
   295 label *label168
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  296 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
   297 jump *label166 lessThanEq :testAndSetMultiples.0:i 250
   298 label *label169
   299 label *label170
   300 label *label171
   301 label *label172
   302 jump *label173 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  303 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   304 label *label173
   305 label *label174
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  306 op add :sumPrimesUpTo.0:i 25 4
   307 label *label175
   308 label *label5
   309 label *label12
-    * jump *label14 greaterThan :sumPrimesUpTo.0:i 500
+  310 jump *label14 greaterThan 29 500
   311 label *label33
   312 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
   313 setaddr :getBit.0*retaddr *label15 (h:*label15)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-48 instructions):
     0 set BITMAP bank1
     1 set :sumPrimesUpTo.0:sum 5
-    * set :sumPrimesUpTo.0:i 5
     2 label *label63
     3 label *label64
     4 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
     5 label *label65
-    * op idiv :getBit.0:bitIndex 5 2
     6 setaddr :getBit.0*retaddr *label25 (h:*label25)
     7 label *label66
-    * op idiv *tmp20 2 48
-    * op mod *tmp22 2 48
-    * op shl *tmp23 1 2
     8 read *tmp21 BITMAP 0
     9 op and :getBit.0*retval *tmp21 4
    10 label *label67
    11 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    12 jump *label73 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 5 5
    13 op idiv :testAndSetMultiples.0:i 25 2
    14 label *label68
    15 jump *label72 greaterThan 12 250
 
    32 op add :sumPrimesUpTo.0:sum 5 5
    33 label *label76
    34 label *label77
-    * op add :sumPrimesUpTo.0:i 5 2
    35 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
    36 label *label78
-    * op idiv :getBit.0:bitIndex 7 2
    37 setaddr :getBit.0*retaddr *label25 (h:*label25)
    38 label *label79
-    * op idiv *tmp20 3 48
-    * op mod *tmp22 3 48
-    * op shl *tmp23 1 3
    39 read *tmp21 BITMAP 0
    40 op and :getBit.0*retval *tmp21 8
    41 label *label80
    42 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    43 jump *label86 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 7 7
    44 op idiv :testAndSetMultiples.0:i 49 2
    45 label *label81
    46 jump *label85 greaterThan 24 250
 
    63 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    64 label *label89
    65 label *label90
-    * op add :sumPrimesUpTo.0:i 7 4
    66 label *label91
    67 label *label92
    68 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
    69 label *label93
-    * op idiv :getBit.0:bitIndex 11 2
    70 setaddr :getBit.0*retaddr *label25 (h:*label25)
    71 label *label94
-    * op idiv *tmp20 5 48
-    * op mod *tmp22 5 48
-    * op shl *tmp23 1 5
    72 read *tmp21 BITMAP 0
    73 op and :getBit.0*retval *tmp21 32
    74 label *label95
    75 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    76 jump *label101 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 11 11
    77 op idiv :testAndSetMultiples.0:i 121 2
    78 label *label96
    79 jump *label100 greaterThan 60 250
 
    96 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
    97 label *label104
    98 label *label105
-    * op add :sumPrimesUpTo.0:i 11 2
    99 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   100 label *label106
-    * op idiv :getBit.0:bitIndex 13 2
   101 setaddr :getBit.0*retaddr *label25 (h:*label25)
   102 label *label107
-    * op idiv *tmp20 6 48
-    * op mod *tmp22 6 48
-    * op shl *tmp23 1 6
   103 read *tmp21 BITMAP 0
   104 op and :getBit.0*retval *tmp21 64
   105 label *label108
   106 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   107 jump *label114 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 13 13
   108 op idiv :testAndSetMultiples.0:i 169 2
   109 label *label109
   110 jump *label113 greaterThan 84 250
 
   127 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   128 label *label117
   129 label *label118
-    * op add :sumPrimesUpTo.0:i 13 4
   130 label *label119
   131 label *label120
   132 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   133 label *label121
-    * op idiv :getBit.0:bitIndex 17 2
   134 setaddr :getBit.0*retaddr *label25 (h:*label25)
   135 label *label122
-    * op idiv *tmp20 8 48
-    * op mod *tmp22 8 48
-    * op shl *tmp23 1 8
   136 read *tmp21 BITMAP 0
   137 op and :getBit.0*retval *tmp21 256
   138 label *label123
   139 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   140 jump *label129 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 17 17
   141 op idiv :testAndSetMultiples.0:i 289 2
   142 label *label124
   143 jump *label128 greaterThan 144 250
 
   160 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   161 label *label132
   162 label *label133
-    * op add :sumPrimesUpTo.0:i 17 2
   163 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   164 label *label134
-    * op idiv :getBit.0:bitIndex 19 2
   165 setaddr :getBit.0*retaddr *label25 (h:*label25)
   166 label *label135
-    * op idiv *tmp20 9 48
-    * op mod *tmp22 9 48
-    * op shl *tmp23 1 9
   167 read *tmp21 BITMAP 0
   168 op and :getBit.0*retval *tmp21 512
   169 label *label136
   170 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   171 jump *label142 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 19 19
   172 op idiv :testAndSetMultiples.0:i 361 2
   173 label *label137
   174 jump *label141 greaterThan 180 250
 
   191 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   192 label *label145
   193 label *label146
-    * op add :sumPrimesUpTo.0:i 19 4
   194 label *label147
   195 label *label148
   196 setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   197 label *label149
-    * op idiv :getBit.0:bitIndex 23 2
   198 setaddr :getBit.0*retaddr *label25 (h:*label25)
   199 label *label150
-    * op idiv *tmp20 11 48
-    * op mod *tmp22 11 48
-    * op shl *tmp23 1 11
   200 read *tmp21 BITMAP 0
   201 op and :getBit.0*retval *tmp21 2048
   202 label *label151
   203 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   204 jump *label157 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 23 23
   205 op idiv :testAndSetMultiples.0:i 529 2
   206 label *label152
   207 jump *label156 greaterThan 264 250
 
   224 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   225 label *label160
   226 label *label161
-    * op add :sumPrimesUpTo.0:i 23 2
   227 setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   228 label *label162
-    * op idiv :getBit.0:bitIndex 25 2
   229 setaddr :getBit.0*retaddr *label25 (h:*label25)
   230 label *label163
-    * op idiv *tmp20 12 48
-    * op mod *tmp22 12 48
-    * op shl *tmp23 1 12
   231 read *tmp21 BITMAP 0
   232 op and :getBit.0*retval *tmp21 4096
   233 label *label164
   234 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   235 jump *label170 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 25 25
   236 op idiv :testAndSetMultiples.0:i 625 2
   237 label *label165
   238 jump *label169 greaterThan 312 250

Modifications by Unroll loop at line 17:9 (+19 instructions):
 
   169 label *label136
   170 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   171 jump *label142 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
-    * label *label137
-    * jump *label141 greaterThan 180 250
-    * label *label138
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label139
-    * label *label140
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
-    * jump *label138 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label141
+  172 op idiv :testAndSetMultiples.0:i 361 2
+  173 label *label176
+  174 label *label177
+  175 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  176 op mod *tmp36 :testAndSetMultiples.0:i 48
+  177 op shl *tmp37 1 *tmp36
+  178 read *tmp35 BITMAP *tmp34
+  179 op or *tmp38 *tmp35 *tmp37
+  180 write *tmp38 BITMAP *tmp34
+  181 label *label178
+  182 label *label179
+  183 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  184 label *label180
+  185 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  186 op mod *tmp36 :testAndSetMultiples.0:i 48
+  187 op shl *tmp37 1 *tmp36
+  188 read *tmp35 BITMAP *tmp34
+  189 op or *tmp38 *tmp35 *tmp37
+  190 write *tmp38 BITMAP *tmp34
+  191 label *label181
+  192 label *label182
+  193 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  194 label *label183
+  195 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  196 op mod *tmp36 :testAndSetMultiples.0:i 48
+  197 op shl *tmp37 1 *tmp36
+  198 read *tmp35 BITMAP *tmp34
+  199 op or *tmp38 *tmp35 *tmp37
+  200 write *tmp38 BITMAP *tmp34
+  201 label *label184
+  202 label *label185
+  203 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  204 label *label186
+  205 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  206 op mod *tmp36 :testAndSetMultiples.0:i 48
+  207 op shl *tmp37 1 *tmp36
+  208 read *tmp35 BITMAP *tmp34
+  209 op or *tmp38 *tmp35 *tmp37
+  210 write *tmp38 BITMAP *tmp34
+  211 label *label187
+  212 label *label188
+  213 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  214 label *label141
   215 label *label142
   216 label *label143
   217 label *label144

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   172 op idiv :testAndSetMultiples.0:i 361 2
   173 label *label176
   174 label *label177
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  175 op idiv *tmp34 180 48
+  176 op mod *tmp36 180 48
+  177 op shl *tmp37 1 36
+  178 read *tmp35 BITMAP 3
+  179 op or *tmp38 *tmp35 68719476736
+  180 write *tmp38 BITMAP 3
   181 label *label178
   182 label *label179
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  183 op add :testAndSetMultiples.0:i 180 19
   184 label *label180
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  185 op idiv *tmp34 199 48
+  186 op mod *tmp36 199 48
+  187 op shl *tmp37 1 7
+  188 read *tmp35 BITMAP 4
+  189 op or *tmp38 *tmp35 128
+  190 write *tmp38 BITMAP 4
   191 label *label181
   192 label *label182
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  193 op add :testAndSetMultiples.0:i 199 19
   194 label *label183
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  195 op idiv *tmp34 218 48
+  196 op mod *tmp36 218 48
+  197 op shl *tmp37 1 26
+  198 read *tmp35 BITMAP 4
+  199 op or *tmp38 *tmp35 67108864
+  200 write *tmp38 BITMAP 4
   201 label *label184
   202 label *label185
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  203 op add :testAndSetMultiples.0:i 218 19
   204 label *label186
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  205 op idiv *tmp34 237 48
+  206 op mod *tmp36 237 48
+  207 op shl *tmp37 1 45
+  208 read *tmp35 BITMAP 4
+  209 op or *tmp38 *tmp35 35184372088832
+  210 write *tmp38 BITMAP 4
   211 label *label187
   212 label *label188
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  213 op add :testAndSetMultiples.0:i 237 19
   214 label *label141
   215 label *label142
   216 label *label143

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
 
   169 label *label136
   170 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   171 jump *label142 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
   172 label *label176
   173 label *label177
-    * op idiv *tmp34 180 48
-    * op mod *tmp36 180 48
-    * op shl *tmp37 1 36
   174 read *tmp35 BITMAP 3
   175 op or *tmp38 *tmp35 68719476736
   176 write *tmp38 BITMAP 3
   177 label *label178
   178 label *label179
-    * op add :testAndSetMultiples.0:i 180 19
   179 label *label180
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   180 read *tmp35 BITMAP 4
   181 op or *tmp38 *tmp35 128
   182 write *tmp38 BITMAP 4
   183 label *label181
   184 label *label182
-    * op add :testAndSetMultiples.0:i 199 19
   185 label *label183
-    * op idiv *tmp34 218 48
-    * op mod *tmp36 218 48
-    * op shl *tmp37 1 26
   186 read *tmp35 BITMAP 4
   187 op or *tmp38 *tmp35 67108864
   188 write *tmp38 BITMAP 4
   189 label *label184
   190 label *label185
-    * op add :testAndSetMultiples.0:i 218 19
   191 label *label186
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   192 read *tmp35 BITMAP 4
   193 op or *tmp38 *tmp35 35184372088832
   194 write *tmp38 BITMAP 4
   195 label *label187
   196 label *label188
-    * op add :testAndSetMultiples.0:i 237 19
   197 label *label141
   198 label *label142
   199 label *label143

Modifications by Unroll loop at line 17:9 (+40 instructions):
 
   138 label *label123
   139 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   140 jump *label129 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
-    * label *label124
-    * jump *label128 greaterThan 144 250
-    * label *label125
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label126
-    * label *label127
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
-    * jump *label125 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label128
+  141 op idiv :testAndSetMultiples.0:i 289 2
+  142 label *label189
+  143 label *label190
+  144 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  145 op mod *tmp36 :testAndSetMultiples.0:i 48
+  146 op shl *tmp37 1 *tmp36
+  147 read *tmp35 BITMAP *tmp34
+  148 op or *tmp38 *tmp35 *tmp37
+  149 write *tmp38 BITMAP *tmp34
+  150 label *label191
+  151 label *label192
+  152 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  153 label *label193
+  154 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  155 op mod *tmp36 :testAndSetMultiples.0:i 48
+  156 op shl *tmp37 1 *tmp36
+  157 read *tmp35 BITMAP *tmp34
+  158 op or *tmp38 *tmp35 *tmp37
+  159 write *tmp38 BITMAP *tmp34
+  160 label *label194
+  161 label *label195
+  162 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  163 label *label196
+  164 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  165 op mod *tmp36 :testAndSetMultiples.0:i 48
+  166 op shl *tmp37 1 *tmp36
+  167 read *tmp35 BITMAP *tmp34
+  168 op or *tmp38 *tmp35 *tmp37
+  169 write *tmp38 BITMAP *tmp34
+  170 label *label197
+  171 label *label198
+  172 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  173 label *label199
+  174 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  175 op mod *tmp36 :testAndSetMultiples.0:i 48
+  176 op shl *tmp37 1 *tmp36
+  177 read *tmp35 BITMAP *tmp34
+  178 op or *tmp38 *tmp35 *tmp37
+  179 write *tmp38 BITMAP *tmp34
+  180 label *label200
+  181 label *label201
+  182 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  183 label *label202
+  184 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  185 op mod *tmp36 :testAndSetMultiples.0:i 48
+  186 op shl *tmp37 1 *tmp36
+  187 read *tmp35 BITMAP *tmp34
+  188 op or *tmp38 *tmp35 *tmp37
+  189 write *tmp38 BITMAP *tmp34
+  190 label *label203
+  191 label *label204
+  192 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  193 label *label205
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label206
+  201 label *label207
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  203 label *label208
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label209
+  211 label *label210
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  213 label *label128
   214 label *label129
   215 label *label130
   216 label *label131

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   141 op idiv :testAndSetMultiples.0:i 289 2
   142 label *label189
   143 label *label190
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  144 op idiv *tmp34 144 48
+  145 op mod *tmp36 144 48
+  146 op shl *tmp37 1 0
+  147 read *tmp35 BITMAP 3
+  148 op or *tmp38 *tmp35 1
+  149 write *tmp38 BITMAP 3
   150 label *label191
   151 label *label192
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  152 op add :testAndSetMultiples.0:i 144 17
   153 label *label193
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  154 op idiv *tmp34 161 48
+  155 op mod *tmp36 161 48
+  156 op shl *tmp37 1 17
+  157 read *tmp35 BITMAP 3
+  158 op or *tmp38 *tmp35 131072
+  159 write *tmp38 BITMAP 3
   160 label *label194
   161 label *label195
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  162 op add :testAndSetMultiples.0:i 161 17
   163 label *label196
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  164 op idiv *tmp34 178 48
+  165 op mod *tmp36 178 48
+  166 op shl *tmp37 1 34
+  167 read *tmp35 BITMAP 3
+  168 op or *tmp38 *tmp35 17179869184
+  169 write *tmp38 BITMAP 3
   170 label *label197
   171 label *label198
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  172 op add :testAndSetMultiples.0:i 178 17
   173 label *label199
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  174 op idiv *tmp34 195 48
+  175 op mod *tmp36 195 48
+  176 op shl *tmp37 1 3
+  177 read *tmp35 BITMAP 4
+  178 op or *tmp38 *tmp35 8
+  179 write *tmp38 BITMAP 4
   180 label *label200
   181 label *label201
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  182 op add :testAndSetMultiples.0:i 195 17
   183 label *label202
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  184 op idiv *tmp34 212 48
+  185 op mod *tmp36 212 48
+  186 op shl *tmp37 1 20
+  187 read *tmp35 BITMAP 4
+  188 op or *tmp38 *tmp35 1048576
+  189 write *tmp38 BITMAP 4
   190 label *label203
   191 label *label204
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  192 op add :testAndSetMultiples.0:i 212 17
   193 label *label205
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 229 48
+  195 op mod *tmp36 229 48
+  196 op shl *tmp37 1 37
+  197 read *tmp35 BITMAP 4
+  198 op or *tmp38 *tmp35 137438953472
+  199 write *tmp38 BITMAP 4
   200 label *label206
   201 label *label207
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  202 op add :testAndSetMultiples.0:i 229 17
   203 label *label208
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 246 48
+  205 op mod *tmp36 246 48
+  206 op shl *tmp37 1 6
+  207 read *tmp35 BITMAP 5
+  208 op or *tmp38 *tmp35 64
+  209 write *tmp38 BITMAP 5
   210 label *label209
   211 label *label210
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  212 op add :testAndSetMultiples.0:i 246 17
   213 label *label128
   214 label *label129
   215 label *label130

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-29 instructions):
 
   138 label *label123
   139 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   140 jump *label129 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
   141 label *label189
   142 label *label190
-    * op idiv *tmp34 144 48
-    * op mod *tmp36 144 48
-    * op shl *tmp37 1 0
   143 read *tmp35 BITMAP 3
   144 op or *tmp38 *tmp35 1
   145 write *tmp38 BITMAP 3
   146 label *label191
   147 label *label192
-    * op add :testAndSetMultiples.0:i 144 17
   148 label *label193
-    * op idiv *tmp34 161 48
-    * op mod *tmp36 161 48
-    * op shl *tmp37 1 17
   149 read *tmp35 BITMAP 3
   150 op or *tmp38 *tmp35 131072
   151 write *tmp38 BITMAP 3
   152 label *label194
   153 label *label195
-    * op add :testAndSetMultiples.0:i 161 17
   154 label *label196
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   155 read *tmp35 BITMAP 3
   156 op or *tmp38 *tmp35 17179869184
   157 write *tmp38 BITMAP 3
   158 label *label197
   159 label *label198
-    * op add :testAndSetMultiples.0:i 178 17
   160 label *label199
-    * op idiv *tmp34 195 48
-    * op mod *tmp36 195 48
-    * op shl *tmp37 1 3
   161 read *tmp35 BITMAP 4
   162 op or *tmp38 *tmp35 8
   163 write *tmp38 BITMAP 4
   164 label *label200
   165 label *label201
-    * op add :testAndSetMultiples.0:i 195 17
   166 label *label202
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   167 read *tmp35 BITMAP 4
   168 op or *tmp38 *tmp35 1048576
   169 write *tmp38 BITMAP 4
   170 label *label203
   171 label *label204
-    * op add :testAndSetMultiples.0:i 212 17
   172 label *label205
-    * op idiv *tmp34 229 48
-    * op mod *tmp36 229 48
-    * op shl *tmp37 1 37
   173 read *tmp35 BITMAP 4
   174 op or *tmp38 *tmp35 137438953472
   175 write *tmp38 BITMAP 4
   176 label *label206
   177 label *label207
-    * op add :testAndSetMultiples.0:i 229 17
   178 label *label208
-    * op idiv *tmp34 246 48
-    * op mod *tmp36 246 48
-    * op shl *tmp37 1 6
   179 read *tmp35 BITMAP 5
   180 op or *tmp38 *tmp35 64
   181 write *tmp38 BITMAP 5
   182 label *label209
   183 label *label210
-    * op add :testAndSetMultiples.0:i 246 17
   184 label *label128
   185 label *label129
   186 label *label130

Modifications by Unroll loop at line 17:9 (+82 instructions):
 
   105 label *label108
   106 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   107 jump *label114 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
-    * label *label109
-    * jump *label113 greaterThan 84 250
-    * label *label110
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label111
-    * label *label112
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
-    * jump *label110 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label113
+  108 op idiv :testAndSetMultiples.0:i 169 2
+  109 label *label211
+  110 label *label212
+  111 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  112 op mod *tmp36 :testAndSetMultiples.0:i 48
+  113 op shl *tmp37 1 *tmp36
+  114 read *tmp35 BITMAP *tmp34
+  115 op or *tmp38 *tmp35 *tmp37
+  116 write *tmp38 BITMAP *tmp34
+  117 label *label213
+  118 label *label214
+  119 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  120 label *label215
+  121 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  122 op mod *tmp36 :testAndSetMultiples.0:i 48
+  123 op shl *tmp37 1 *tmp36
+  124 read *tmp35 BITMAP *tmp34
+  125 op or *tmp38 *tmp35 *tmp37
+  126 write *tmp38 BITMAP *tmp34
+  127 label *label216
+  128 label *label217
+  129 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  130 label *label218
+  131 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  132 op mod *tmp36 :testAndSetMultiples.0:i 48
+  133 op shl *tmp37 1 *tmp36
+  134 read *tmp35 BITMAP *tmp34
+  135 op or *tmp38 *tmp35 *tmp37
+  136 write *tmp38 BITMAP *tmp34
+  137 label *label219
+  138 label *label220
+  139 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  140 label *label221
+  141 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  142 op mod *tmp36 :testAndSetMultiples.0:i 48
+  143 op shl *tmp37 1 *tmp36
+  144 read *tmp35 BITMAP *tmp34
+  145 op or *tmp38 *tmp35 *tmp37
+  146 write *tmp38 BITMAP *tmp34
+  147 label *label222
+  148 label *label223
+  149 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  150 label *label224
+  151 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  152 op mod *tmp36 :testAndSetMultiples.0:i 48
+  153 op shl *tmp37 1 *tmp36
+  154 read *tmp35 BITMAP *tmp34
+  155 op or *tmp38 *tmp35 *tmp37
+  156 write *tmp38 BITMAP *tmp34
+  157 label *label225
+  158 label *label226
+  159 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  160 label *label227
+  161 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  162 op mod *tmp36 :testAndSetMultiples.0:i 48
+  163 op shl *tmp37 1 *tmp36
+  164 read *tmp35 BITMAP *tmp34
+  165 op or *tmp38 *tmp35 *tmp37
+  166 write *tmp38 BITMAP *tmp34
+  167 label *label228
+  168 label *label229
+  169 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  170 label *label230
+  171 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  172 op mod *tmp36 :testAndSetMultiples.0:i 48
+  173 op shl *tmp37 1 *tmp36
+  174 read *tmp35 BITMAP *tmp34
+  175 op or *tmp38 *tmp35 *tmp37
+  176 write *tmp38 BITMAP *tmp34
+  177 label *label231
+  178 label *label232
+  179 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  180 label *label233
+  181 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  182 op mod *tmp36 :testAndSetMultiples.0:i 48
+  183 op shl *tmp37 1 *tmp36
+  184 read *tmp35 BITMAP *tmp34
+  185 op or *tmp38 *tmp35 *tmp37
+  186 write *tmp38 BITMAP *tmp34
+  187 label *label234
+  188 label *label235
+  189 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  190 label *label236
+  191 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  192 op mod *tmp36 :testAndSetMultiples.0:i 48
+  193 op shl *tmp37 1 *tmp36
+  194 read *tmp35 BITMAP *tmp34
+  195 op or *tmp38 *tmp35 *tmp37
+  196 write *tmp38 BITMAP *tmp34
+  197 label *label237
+  198 label *label238
+  199 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  200 label *label239
+  201 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  202 op mod *tmp36 :testAndSetMultiples.0:i 48
+  203 op shl *tmp37 1 *tmp36
+  204 read *tmp35 BITMAP *tmp34
+  205 op or *tmp38 *tmp35 *tmp37
+  206 write *tmp38 BITMAP *tmp34
+  207 label *label240
+  208 label *label241
+  209 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  210 label *label242
+  211 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  212 op mod *tmp36 :testAndSetMultiples.0:i 48
+  213 op shl *tmp37 1 *tmp36
+  214 read *tmp35 BITMAP *tmp34
+  215 op or *tmp38 *tmp35 *tmp37
+  216 write *tmp38 BITMAP *tmp34
+  217 label *label243
+  218 label *label244
+  219 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  220 label *label245
+  221 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  222 op mod *tmp36 :testAndSetMultiples.0:i 48
+  223 op shl *tmp37 1 *tmp36
+  224 read *tmp35 BITMAP *tmp34
+  225 op or *tmp38 *tmp35 *tmp37
+  226 write *tmp38 BITMAP *tmp34
+  227 label *label246
+  228 label *label247
+  229 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  230 label *label248
+  231 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  232 op mod *tmp36 :testAndSetMultiples.0:i 48
+  233 op shl *tmp37 1 *tmp36
+  234 read *tmp35 BITMAP *tmp34
+  235 op or *tmp38 *tmp35 *tmp37
+  236 write *tmp38 BITMAP *tmp34
+  237 label *label249
+  238 label *label250
+  239 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  240 label *label113
   241 label *label114
   242 label *label115
   243 label *label116

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   108 op idiv :testAndSetMultiples.0:i 169 2
   109 label *label211
   110 label *label212
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  111 op idiv *tmp34 84 48
+  112 op mod *tmp36 84 48
+  113 op shl *tmp37 1 36
+  114 read *tmp35 BITMAP 1
+  115 op or *tmp38 *tmp35 68719476736
+  116 write *tmp38 BITMAP 1
   117 label *label213
   118 label *label214
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  119 op add :testAndSetMultiples.0:i 84 13
   120 label *label215
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  121 op idiv *tmp34 97 48
+  122 op mod *tmp36 97 48
+  123 op shl *tmp37 1 1
+  124 read *tmp35 BITMAP 2
+  125 op or *tmp38 *tmp35 2
+  126 write *tmp38 BITMAP 2
   127 label *label216
   128 label *label217
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  129 op add :testAndSetMultiples.0:i 97 13
   130 label *label218
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  131 op idiv *tmp34 110 48
+  132 op mod *tmp36 110 48
+  133 op shl *tmp37 1 14
+  134 read *tmp35 BITMAP 2
+  135 op or *tmp38 *tmp35 16384
+  136 write *tmp38 BITMAP 2
   137 label *label219
   138 label *label220
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  139 op add :testAndSetMultiples.0:i 110 13
   140 label *label221
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  141 op idiv *tmp34 123 48
+  142 op mod *tmp36 123 48
+  143 op shl *tmp37 1 27
+  144 read *tmp35 BITMAP 2
+  145 op or *tmp38 *tmp35 134217728
+  146 write *tmp38 BITMAP 2
   147 label *label222
   148 label *label223
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  149 op add :testAndSetMultiples.0:i 123 13
   150 label *label224
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  151 op idiv *tmp34 136 48
+  152 op mod *tmp36 136 48
+  153 op shl *tmp37 1 40
+  154 read *tmp35 BITMAP 2
+  155 op or *tmp38 *tmp35 1099511627776
+  156 write *tmp38 BITMAP 2
   157 label *label225
   158 label *label226
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  159 op add :testAndSetMultiples.0:i 136 13
   160 label *label227
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  161 op idiv *tmp34 149 48
+  162 op mod *tmp36 149 48
+  163 op shl *tmp37 1 5
+  164 read *tmp35 BITMAP 3
+  165 op or *tmp38 *tmp35 32
+  166 write *tmp38 BITMAP 3
   167 label *label228
   168 label *label229
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  169 op add :testAndSetMultiples.0:i 149 13
   170 label *label230
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  171 op idiv *tmp34 162 48
+  172 op mod *tmp36 162 48
+  173 op shl *tmp37 1 18
+  174 read *tmp35 BITMAP 3
+  175 op or *tmp38 *tmp35 262144
+  176 write *tmp38 BITMAP 3
   177 label *label231
   178 label *label232
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  179 op add :testAndSetMultiples.0:i 162 13
   180 label *label233
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  181 op idiv *tmp34 175 48
+  182 op mod *tmp36 175 48
+  183 op shl *tmp37 1 31
+  184 read *tmp35 BITMAP 3
+  185 op or *tmp38 *tmp35 2147483648
+  186 write *tmp38 BITMAP 3
   187 label *label234
   188 label *label235
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  189 op add :testAndSetMultiples.0:i 175 13
   190 label *label236
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  191 op idiv *tmp34 188 48
+  192 op mod *tmp36 188 48
+  193 op shl *tmp37 1 44
+  194 read *tmp35 BITMAP 3
+  195 op or *tmp38 *tmp35 17592186044416
+  196 write *tmp38 BITMAP 3
   197 label *label237
   198 label *label238
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  199 op add :testAndSetMultiples.0:i 188 13
   200 label *label239
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  201 op idiv *tmp34 201 48
+  202 op mod *tmp36 201 48
+  203 op shl *tmp37 1 9
+  204 read *tmp35 BITMAP 4
+  205 op or *tmp38 *tmp35 512
+  206 write *tmp38 BITMAP 4
   207 label *label240
   208 label *label241
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  209 op add :testAndSetMultiples.0:i 201 13
   210 label *label242
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  211 op idiv *tmp34 214 48
+  212 op mod *tmp36 214 48
+  213 op shl *tmp37 1 22
+  214 read *tmp35 BITMAP 4
+  215 op or *tmp38 *tmp35 4194304
+  216 write *tmp38 BITMAP 4
   217 label *label243
   218 label *label244
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  219 op add :testAndSetMultiples.0:i 214 13
   220 label *label245
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  221 op idiv *tmp34 227 48
+  222 op mod *tmp36 227 48
+  223 op shl *tmp37 1 35
+  224 read *tmp35 BITMAP 4
+  225 op or *tmp38 *tmp35 34359738368
+  226 write *tmp38 BITMAP 4
   227 label *label246
   228 label *label247
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  229 op add :testAndSetMultiples.0:i 227 13
   230 label *label248
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  231 op idiv *tmp34 240 48
+  232 op mod *tmp36 240 48
+  233 op shl *tmp37 1 0
+  234 read *tmp35 BITMAP 5
+  235 op or *tmp38 *tmp35 1
+  236 write *tmp38 BITMAP 5
   237 label *label249
   238 label *label250
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  239 op add :testAndSetMultiples.0:i 240 13
   240 label *label113
   241 label *label114
   242 label *label115

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-53 instructions):
 
   105 label *label108
   106 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   107 jump *label114 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
   108 label *label211
   109 label *label212
-    * op idiv *tmp34 84 48
-    * op mod *tmp36 84 48
-    * op shl *tmp37 1 36
   110 read *tmp35 BITMAP 1
   111 op or *tmp38 *tmp35 68719476736
   112 write *tmp38 BITMAP 1
   113 label *label213
   114 label *label214
-    * op add :testAndSetMultiples.0:i 84 13
   115 label *label215
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   116 read *tmp35 BITMAP 2
   117 op or *tmp38 *tmp35 2
   118 write *tmp38 BITMAP 2
   119 label *label216
   120 label *label217
-    * op add :testAndSetMultiples.0:i 97 13
   121 label *label218
-    * op idiv *tmp34 110 48
-    * op mod *tmp36 110 48
-    * op shl *tmp37 1 14
   122 read *tmp35 BITMAP 2
   123 op or *tmp38 *tmp35 16384
   124 write *tmp38 BITMAP 2
   125 label *label219
   126 label *label220
-    * op add :testAndSetMultiples.0:i 110 13
   127 label *label221
-    * op idiv *tmp34 123 48
-    * op mod *tmp36 123 48
-    * op shl *tmp37 1 27
   128 read *tmp35 BITMAP 2
   129 op or *tmp38 *tmp35 134217728
   130 write *tmp38 BITMAP 2
   131 label *label222
   132 label *label223
-    * op add :testAndSetMultiples.0:i 123 13
   133 label *label224
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   134 read *tmp35 BITMAP 2
   135 op or *tmp38 *tmp35 1099511627776
   136 write *tmp38 BITMAP 2
   137 label *label225
   138 label *label226
-    * op add :testAndSetMultiples.0:i 136 13
   139 label *label227
-    * op idiv *tmp34 149 48
-    * op mod *tmp36 149 48
-    * op shl *tmp37 1 5
   140 read *tmp35 BITMAP 3
   141 op or *tmp38 *tmp35 32
   142 write *tmp38 BITMAP 3
   143 label *label228
   144 label *label229
-    * op add :testAndSetMultiples.0:i 149 13
   145 label *label230
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   146 read *tmp35 BITMAP 3
   147 op or *tmp38 *tmp35 262144
   148 write *tmp38 BITMAP 3
   149 label *label231
   150 label *label232
-    * op add :testAndSetMultiples.0:i 162 13
   151 label *label233
-    * op idiv *tmp34 175 48
-    * op mod *tmp36 175 48
-    * op shl *tmp37 1 31
   152 read *tmp35 BITMAP 3
   153 op or *tmp38 *tmp35 2147483648
   154 write *tmp38 BITMAP 3
   155 label *label234
   156 label *label235
-    * op add :testAndSetMultiples.0:i 175 13
   157 label *label236
-    * op idiv *tmp34 188 48
-    * op mod *tmp36 188 48
-    * op shl *tmp37 1 44
   158 read *tmp35 BITMAP 3
   159 op or *tmp38 *tmp35 17592186044416
   160 write *tmp38 BITMAP 3
   161 label *label237
   162 label *label238
-    * op add :testAndSetMultiples.0:i 188 13
   163 label *label239
-    * op idiv *tmp34 201 48
-    * op mod *tmp36 201 48
-    * op shl *tmp37 1 9
   164 read *tmp35 BITMAP 4
   165 op or *tmp38 *tmp35 512
   166 write *tmp38 BITMAP 4
   167 label *label240
   168 label *label241
-    * op add :testAndSetMultiples.0:i 201 13
   169 label *label242
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   170 read *tmp35 BITMAP 4
   171 op or *tmp38 *tmp35 4194304
   172 write *tmp38 BITMAP 4
   173 label *label243
   174 label *label244
-    * op add :testAndSetMultiples.0:i 214 13
   175 label *label245
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   176 read *tmp35 BITMAP 4
   177 op or *tmp38 *tmp35 34359738368
   178 write *tmp38 BITMAP 4
   179 label *label246
   180 label *label247
-    * op add :testAndSetMultiples.0:i 227 13
   181 label *label248
-    * op idiv *tmp34 240 48
-    * op mod *tmp36 240 48
-    * op shl *tmp37 1 0
   182 read *tmp35 BITMAP 5
   183 op or *tmp38 *tmp35 1
   184 write *tmp38 BITMAP 5
   185 label *label249
   186 label *label250
-    * op add :testAndSetMultiples.0:i 240 13
   187 label *label113
   188 label *label114
   189 label *label115

Modifications by Unroll loop at line 17:9 (+117 instructions):
 
    74 label *label95
    75 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    76 jump *label101 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
-    * label *label96
-    * jump *label100 greaterThan 60 250
-    * label *label97
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label98
-    * label *label99
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
-    * jump *label97 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label100
+   77 op idiv :testAndSetMultiples.0:i 121 2
+   78 label *label251
+   79 label *label252
+   80 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   81 op mod *tmp36 :testAndSetMultiples.0:i 48
+   82 op shl *tmp37 1 *tmp36
+   83 read *tmp35 BITMAP *tmp34
+   84 op or *tmp38 *tmp35 *tmp37
+   85 write *tmp38 BITMAP *tmp34
+   86 label *label253
+   87 label *label254
+   88 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   89 label *label255
+   90 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   91 op mod *tmp36 :testAndSetMultiples.0:i 48
+   92 op shl *tmp37 1 *tmp36
+   93 read *tmp35 BITMAP *tmp34
+   94 op or *tmp38 *tmp35 *tmp37
+   95 write *tmp38 BITMAP *tmp34
+   96 label *label256
+   97 label *label257
+   98 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   99 label *label258
+  100 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  101 op mod *tmp36 :testAndSetMultiples.0:i 48
+  102 op shl *tmp37 1 *tmp36
+  103 read *tmp35 BITMAP *tmp34
+  104 op or *tmp38 *tmp35 *tmp37
+  105 write *tmp38 BITMAP *tmp34
+  106 label *label259
+  107 label *label260
+  108 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  109 label *label261
+  110 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  111 op mod *tmp36 :testAndSetMultiples.0:i 48
+  112 op shl *tmp37 1 *tmp36
+  113 read *tmp35 BITMAP *tmp34
+  114 op or *tmp38 *tmp35 *tmp37
+  115 write *tmp38 BITMAP *tmp34
+  116 label *label262
+  117 label *label263
+  118 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  119 label *label264
+  120 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  121 op mod *tmp36 :testAndSetMultiples.0:i 48
+  122 op shl *tmp37 1 *tmp36
+  123 read *tmp35 BITMAP *tmp34
+  124 op or *tmp38 *tmp35 *tmp37
+  125 write *tmp38 BITMAP *tmp34
+  126 label *label265
+  127 label *label266
+  128 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  129 label *label267
+  130 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  131 op mod *tmp36 :testAndSetMultiples.0:i 48
+  132 op shl *tmp37 1 *tmp36
+  133 read *tmp35 BITMAP *tmp34
+  134 op or *tmp38 *tmp35 *tmp37
+  135 write *tmp38 BITMAP *tmp34
+  136 label *label268
+  137 label *label269
+  138 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  139 label *label270
+  140 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  141 op mod *tmp36 :testAndSetMultiples.0:i 48
+  142 op shl *tmp37 1 *tmp36
+  143 read *tmp35 BITMAP *tmp34
+  144 op or *tmp38 *tmp35 *tmp37
+  145 write *tmp38 BITMAP *tmp34
+  146 label *label271
+  147 label *label272
+  148 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  149 label *label273
+  150 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  151 op mod *tmp36 :testAndSetMultiples.0:i 48
+  152 op shl *tmp37 1 *tmp36
+  153 read *tmp35 BITMAP *tmp34
+  154 op or *tmp38 *tmp35 *tmp37
+  155 write *tmp38 BITMAP *tmp34
+  156 label *label274
+  157 label *label275
+  158 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  159 label *label276
+  160 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  161 op mod *tmp36 :testAndSetMultiples.0:i 48
+  162 op shl *tmp37 1 *tmp36
+  163 read *tmp35 BITMAP *tmp34
+  164 op or *tmp38 *tmp35 *tmp37
+  165 write *tmp38 BITMAP *tmp34
+  166 label *label277
+  167 label *label278
+  168 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  169 label *label279
+  170 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  171 op mod *tmp36 :testAndSetMultiples.0:i 48
+  172 op shl *tmp37 1 *tmp36
+  173 read *tmp35 BITMAP *tmp34
+  174 op or *tmp38 *tmp35 *tmp37
+  175 write *tmp38 BITMAP *tmp34
+  176 label *label280
+  177 label *label281
+  178 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  179 label *label282
+  180 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  181 op mod *tmp36 :testAndSetMultiples.0:i 48
+  182 op shl *tmp37 1 *tmp36
+  183 read *tmp35 BITMAP *tmp34
+  184 op or *tmp38 *tmp35 *tmp37
+  185 write *tmp38 BITMAP *tmp34
+  186 label *label283
+  187 label *label284
+  188 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  189 label *label285
+  190 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  191 op mod *tmp36 :testAndSetMultiples.0:i 48
+  192 op shl *tmp37 1 *tmp36
+  193 read *tmp35 BITMAP *tmp34
+  194 op or *tmp38 *tmp35 *tmp37
+  195 write *tmp38 BITMAP *tmp34
+  196 label *label286
+  197 label *label287
+  198 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  199 label *label288
+  200 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  201 op mod *tmp36 :testAndSetMultiples.0:i 48
+  202 op shl *tmp37 1 *tmp36
+  203 read *tmp35 BITMAP *tmp34
+  204 op or *tmp38 *tmp35 *tmp37
+  205 write *tmp38 BITMAP *tmp34
+  206 label *label289
+  207 label *label290
+  208 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  209 label *label291
+  210 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  211 op mod *tmp36 :testAndSetMultiples.0:i 48
+  212 op shl *tmp37 1 *tmp36
+  213 read *tmp35 BITMAP *tmp34
+  214 op or *tmp38 *tmp35 *tmp37
+  215 write *tmp38 BITMAP *tmp34
+  216 label *label292
+  217 label *label293
+  218 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  219 label *label294
+  220 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  221 op mod *tmp36 :testAndSetMultiples.0:i 48
+  222 op shl *tmp37 1 *tmp36
+  223 read *tmp35 BITMAP *tmp34
+  224 op or *tmp38 *tmp35 *tmp37
+  225 write *tmp38 BITMAP *tmp34
+  226 label *label295
+  227 label *label296
+  228 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  229 label *label297
+  230 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  231 op mod *tmp36 :testAndSetMultiples.0:i 48
+  232 op shl *tmp37 1 *tmp36
+  233 read *tmp35 BITMAP *tmp34
+  234 op or *tmp38 *tmp35 *tmp37
+  235 write *tmp38 BITMAP *tmp34
+  236 label *label298
+  237 label *label299
+  238 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  239 label *label300
+  240 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  241 op mod *tmp36 :testAndSetMultiples.0:i 48
+  242 op shl *tmp37 1 *tmp36
+  243 read *tmp35 BITMAP *tmp34
+  244 op or *tmp38 *tmp35 *tmp37
+  245 write *tmp38 BITMAP *tmp34
+  246 label *label301
+  247 label *label302
+  248 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  249 label *label303
+  250 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  251 op mod *tmp36 :testAndSetMultiples.0:i 48
+  252 op shl *tmp37 1 *tmp36
+  253 read *tmp35 BITMAP *tmp34
+  254 op or *tmp38 *tmp35 *tmp37
+  255 write *tmp38 BITMAP *tmp34
+  256 label *label304
+  257 label *label305
+  258 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  259 label *label100
   260 label *label101
   261 label *label102
   262 label *label103

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    77 op idiv :testAndSetMultiples.0:i 121 2
    78 label *label251
    79 label *label252
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   80 op idiv *tmp34 60 48
+   81 op mod *tmp36 60 48
+   82 op shl *tmp37 1 12
+   83 read *tmp35 BITMAP 1
+   84 op or *tmp38 *tmp35 4096
+   85 write *tmp38 BITMAP 1
    86 label *label253
    87 label *label254
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   88 op add :testAndSetMultiples.0:i 60 11
    89 label *label255
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   90 op idiv *tmp34 71 48
+   91 op mod *tmp36 71 48
+   92 op shl *tmp37 1 23
+   93 read *tmp35 BITMAP 1
+   94 op or *tmp38 *tmp35 8388608
+   95 write *tmp38 BITMAP 1
    96 label *label256
    97 label *label257
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   98 op add :testAndSetMultiples.0:i 71 11
    99 label *label258
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  100 op idiv *tmp34 82 48
+  101 op mod *tmp36 82 48
+  102 op shl *tmp37 1 34
+  103 read *tmp35 BITMAP 1
+  104 op or *tmp38 *tmp35 17179869184
+  105 write *tmp38 BITMAP 1
   106 label *label259
   107 label *label260
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  108 op add :testAndSetMultiples.0:i 82 11
   109 label *label261
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  110 op idiv *tmp34 93 48
+  111 op mod *tmp36 93 48
+  112 op shl *tmp37 1 45
+  113 read *tmp35 BITMAP 1
+  114 op or *tmp38 *tmp35 35184372088832
+  115 write *tmp38 BITMAP 1
   116 label *label262
   117 label *label263
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  118 op add :testAndSetMultiples.0:i 93 11
   119 label *label264
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  120 op idiv *tmp34 104 48
+  121 op mod *tmp36 104 48
+  122 op shl *tmp37 1 8
+  123 read *tmp35 BITMAP 2
+  124 op or *tmp38 *tmp35 256
+  125 write *tmp38 BITMAP 2
   126 label *label265
   127 label *label266
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  128 op add :testAndSetMultiples.0:i 104 11
   129 label *label267
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  130 op idiv *tmp34 115 48
+  131 op mod *tmp36 115 48
+  132 op shl *tmp37 1 19
+  133 read *tmp35 BITMAP 2
+  134 op or *tmp38 *tmp35 524288
+  135 write *tmp38 BITMAP 2
   136 label *label268
   137 label *label269
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  138 op add :testAndSetMultiples.0:i 115 11
   139 label *label270
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  140 op idiv *tmp34 126 48
+  141 op mod *tmp36 126 48
+  142 op shl *tmp37 1 30
+  143 read *tmp35 BITMAP 2
+  144 op or *tmp38 *tmp35 1073741824
+  145 write *tmp38 BITMAP 2
   146 label *label271
   147 label *label272
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  148 op add :testAndSetMultiples.0:i 126 11
   149 label *label273
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  150 op idiv *tmp34 137 48
+  151 op mod *tmp36 137 48
+  152 op shl *tmp37 1 41
+  153 read *tmp35 BITMAP 2
+  154 op or *tmp38 *tmp35 2199023255552
+  155 write *tmp38 BITMAP 2
   156 label *label274
   157 label *label275
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  158 op add :testAndSetMultiples.0:i 137 11
   159 label *label276
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  160 op idiv *tmp34 148 48
+  161 op mod *tmp36 148 48
+  162 op shl *tmp37 1 4
+  163 read *tmp35 BITMAP 3
+  164 op or *tmp38 *tmp35 16
+  165 write *tmp38 BITMAP 3
   166 label *label277
   167 label *label278
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  168 op add :testAndSetMultiples.0:i 148 11
   169 label *label279
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  170 op idiv *tmp34 159 48
+  171 op mod *tmp36 159 48
+  172 op shl *tmp37 1 15
+  173 read *tmp35 BITMAP 3
+  174 op or *tmp38 *tmp35 32768
+  175 write *tmp38 BITMAP 3
   176 label *label280
   177 label *label281
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  178 op add :testAndSetMultiples.0:i 159 11
   179 label *label282
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  180 op idiv *tmp34 170 48
+  181 op mod *tmp36 170 48
+  182 op shl *tmp37 1 26
+  183 read *tmp35 BITMAP 3
+  184 op or *tmp38 *tmp35 67108864
+  185 write *tmp38 BITMAP 3
   186 label *label283
   187 label *label284
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  188 op add :testAndSetMultiples.0:i 170 11
   189 label *label285
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  190 op idiv *tmp34 181 48
+  191 op mod *tmp36 181 48
+  192 op shl *tmp37 1 37
+  193 read *tmp35 BITMAP 3
+  194 op or *tmp38 *tmp35 137438953472
+  195 write *tmp38 BITMAP 3
   196 label *label286
   197 label *label287
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  198 op add :testAndSetMultiples.0:i 181 11
   199 label *label288
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  200 op idiv *tmp34 192 48
+  201 op mod *tmp36 192 48
+  202 op shl *tmp37 1 0
+  203 read *tmp35 BITMAP 4
+  204 op or *tmp38 *tmp35 1
+  205 write *tmp38 BITMAP 4
   206 label *label289
   207 label *label290
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  208 op add :testAndSetMultiples.0:i 192 11
   209 label *label291
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  210 op idiv *tmp34 203 48
+  211 op mod *tmp36 203 48
+  212 op shl *tmp37 1 11
+  213 read *tmp35 BITMAP 4
+  214 op or *tmp38 *tmp35 2048
+  215 write *tmp38 BITMAP 4
   216 label *label292
   217 label *label293
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  218 op add :testAndSetMultiples.0:i 203 11
   219 label *label294
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  220 op idiv *tmp34 214 48
+  221 op mod *tmp36 214 48
+  222 op shl *tmp37 1 22
+  223 read *tmp35 BITMAP 4
+  224 op or *tmp38 *tmp35 4194304
+  225 write *tmp38 BITMAP 4
   226 label *label295
   227 label *label296
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  228 op add :testAndSetMultiples.0:i 214 11
   229 label *label297
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  230 op idiv *tmp34 225 48
+  231 op mod *tmp36 225 48
+  232 op shl *tmp37 1 33
+  233 read *tmp35 BITMAP 4
+  234 op or *tmp38 *tmp35 8589934592
+  235 write *tmp38 BITMAP 4
   236 label *label298
   237 label *label299
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  238 op add :testAndSetMultiples.0:i 225 11
   239 label *label300
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  240 op idiv *tmp34 236 48
+  241 op mod *tmp36 236 48
+  242 op shl *tmp37 1 44
+  243 read *tmp35 BITMAP 4
+  244 op or *tmp38 *tmp35 17592186044416
+  245 write *tmp38 BITMAP 4
   246 label *label301
   247 label *label302
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  248 op add :testAndSetMultiples.0:i 236 11
   249 label *label303
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  250 op idiv *tmp34 247 48
+  251 op mod *tmp36 247 48
+  252 op shl *tmp37 1 7
+  253 read *tmp35 BITMAP 5
+  254 op or *tmp38 *tmp35 128
+  255 write *tmp38 BITMAP 5
   256 label *label304
   257 label *label305
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  258 op add :testAndSetMultiples.0:i 247 11
   259 label *label100
   260 label *label101
   261 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-73 instructions):
 
    74 label *label95
    75 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    76 jump *label101 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
    77 label *label251
    78 label *label252
-    * op idiv *tmp34 60 48
-    * op mod *tmp36 60 48
-    * op shl *tmp37 1 12
    79 read *tmp35 BITMAP 1
    80 op or *tmp38 *tmp35 4096
    81 write *tmp38 BITMAP 1
    82 label *label253
    83 label *label254
-    * op add :testAndSetMultiples.0:i 60 11
    84 label *label255
-    * op idiv *tmp34 71 48
-    * op mod *tmp36 71 48
-    * op shl *tmp37 1 23
    85 read *tmp35 BITMAP 1
    86 op or *tmp38 *tmp35 8388608
    87 write *tmp38 BITMAP 1
    88 label *label256
    89 label *label257
-    * op add :testAndSetMultiples.0:i 71 11
    90 label *label258
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
    91 read *tmp35 BITMAP 1
    92 op or *tmp38 *tmp35 17179869184
    93 write *tmp38 BITMAP 1
    94 label *label259
    95 label *label260
-    * op add :testAndSetMultiples.0:i 82 11
    96 label *label261
-    * op idiv *tmp34 93 48
-    * op mod *tmp36 93 48
-    * op shl *tmp37 1 45
    97 read *tmp35 BITMAP 1
    98 op or *tmp38 *tmp35 35184372088832
    99 write *tmp38 BITMAP 1
   100 label *label262
   101 label *label263
-    * op add :testAndSetMultiples.0:i 93 11
   102 label *label264
-    * op idiv *tmp34 104 48
-    * op mod *tmp36 104 48
-    * op shl *tmp37 1 8
   103 read *tmp35 BITMAP 2
   104 op or *tmp38 *tmp35 256
   105 write *tmp38 BITMAP 2
   106 label *label265
   107 label *label266
-    * op add :testAndSetMultiples.0:i 104 11
   108 label *label267
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   109 read *tmp35 BITMAP 2
   110 op or *tmp38 *tmp35 524288
   111 write *tmp38 BITMAP 2
   112 label *label268
   113 label *label269
-    * op add :testAndSetMultiples.0:i 115 11
   114 label *label270
-    * op idiv *tmp34 126 48
-    * op mod *tmp36 126 48
-    * op shl *tmp37 1 30
   115 read *tmp35 BITMAP 2
   116 op or *tmp38 *tmp35 1073741824
   117 write *tmp38 BITMAP 2
   118 label *label271
   119 label *label272
-    * op add :testAndSetMultiples.0:i 126 11
   120 label *label273
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   121 read *tmp35 BITMAP 2
   122 op or *tmp38 *tmp35 2199023255552
   123 write *tmp38 BITMAP 2
   124 label *label274
   125 label *label275
-    * op add :testAndSetMultiples.0:i 137 11
   126 label *label276
-    * op idiv *tmp34 148 48
-    * op mod *tmp36 148 48
-    * op shl *tmp37 1 4
   127 read *tmp35 BITMAP 3
   128 op or *tmp38 *tmp35 16
   129 write *tmp38 BITMAP 3
   130 label *label277
   131 label *label278
-    * op add :testAndSetMultiples.0:i 148 11
   132 label *label279
-    * op idiv *tmp34 159 48
-    * op mod *tmp36 159 48
-    * op shl *tmp37 1 15
   133 read *tmp35 BITMAP 3
   134 op or *tmp38 *tmp35 32768
   135 write *tmp38 BITMAP 3
   136 label *label280
   137 label *label281
-    * op add :testAndSetMultiples.0:i 159 11
   138 label *label282
-    * op idiv *tmp34 170 48
-    * op mod *tmp36 170 48
-    * op shl *tmp37 1 26
   139 read *tmp35 BITMAP 3
   140 op or *tmp38 *tmp35 67108864
   141 write *tmp38 BITMAP 3
   142 label *label283
   143 label *label284
-    * op add :testAndSetMultiples.0:i 170 11
   144 label *label285
-    * op idiv *tmp34 181 48
-    * op mod *tmp36 181 48
-    * op shl *tmp37 1 37
   145 read *tmp35 BITMAP 3
   146 op or *tmp38 *tmp35 137438953472
   147 write *tmp38 BITMAP 3
   148 label *label286
   149 label *label287
-    * op add :testAndSetMultiples.0:i 181 11
   150 label *label288
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   151 read *tmp35 BITMAP 4
   152 op or *tmp38 *tmp35 1
   153 write *tmp38 BITMAP 4
   154 label *label289
   155 label *label290
-    * op add :testAndSetMultiples.0:i 192 11
   156 label *label291
-    * op idiv *tmp34 203 48
-    * op mod *tmp36 203 48
-    * op shl *tmp37 1 11
   157 read *tmp35 BITMAP 4
   158 op or *tmp38 *tmp35 2048
   159 write *tmp38 BITMAP 4
   160 label *label292
   161 label *label293
-    * op add :testAndSetMultiples.0:i 203 11
   162 label *label294
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   163 read *tmp35 BITMAP 4
   164 op or *tmp38 *tmp35 4194304
   165 write *tmp38 BITMAP 4
   166 label *label295
   167 label *label296
-    * op add :testAndSetMultiples.0:i 214 11
   168 label *label297
-    * op idiv *tmp34 225 48
-    * op mod *tmp36 225 48
-    * op shl *tmp37 1 33
   169 read *tmp35 BITMAP 4
   170 op or *tmp38 *tmp35 8589934592
   171 write *tmp38 BITMAP 4
   172 label *label298
   173 label *label299
-    * op add :testAndSetMultiples.0:i 225 11
   174 label *label300
-    * op idiv *tmp34 236 48
-    * op mod *tmp36 236 48
-    * op shl *tmp37 1 44
   175 read *tmp35 BITMAP 4
   176 op or *tmp38 *tmp35 17592186044416
   177 write *tmp38 BITMAP 4
   178 label *label301
   179 label *label302
-    * op add :testAndSetMultiples.0:i 236 11
   180 label *label303
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   181 read *tmp35 BITMAP 5
   182 op or *tmp38 *tmp35 128
   183 write *tmp38 BITMAP 5
   184 label *label304
   185 label *label305
-    * op add :testAndSetMultiples.0:i 247 11
   186 label *label100
   187 label *label101
   188 label *label102

Modifications by Unroll loop at line 17:9 (+222 instructions):
 
    41 label *label80
    42 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    43 jump *label86 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
-    * label *label81
-    * jump *label85 greaterThan 24 250
-    * label *label82
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label83
-    * label *label84
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
-    * jump *label82 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label85
+   44 op idiv :testAndSetMultiples.0:i 49 2
+   45 label *label306
+   46 label *label307
+   47 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   48 op mod *tmp36 :testAndSetMultiples.0:i 48
+   49 op shl *tmp37 1 *tmp36
+   50 read *tmp35 BITMAP *tmp34
+   51 op or *tmp38 *tmp35 *tmp37
+   52 write *tmp38 BITMAP *tmp34
+   53 label *label308
+   54 label *label309
+   55 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   56 label *label310
+   57 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   58 op mod *tmp36 :testAndSetMultiples.0:i 48
+   59 op shl *tmp37 1 *tmp36
+   60 read *tmp35 BITMAP *tmp34
+   61 op or *tmp38 *tmp35 *tmp37
+   62 write *tmp38 BITMAP *tmp34
+   63 label *label311
+   64 label *label312
+   65 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   66 label *label313
+   67 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   68 op mod *tmp36 :testAndSetMultiples.0:i 48
+   69 op shl *tmp37 1 *tmp36
+   70 read *tmp35 BITMAP *tmp34
+   71 op or *tmp38 *tmp35 *tmp37
+   72 write *tmp38 BITMAP *tmp34
+   73 label *label314
+   74 label *label315
+   75 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   76 label *label316
+   77 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   78 op mod *tmp36 :testAndSetMultiples.0:i 48
+   79 op shl *tmp37 1 *tmp36
+   80 read *tmp35 BITMAP *tmp34
+   81 op or *tmp38 *tmp35 *tmp37
+   82 write *tmp38 BITMAP *tmp34
+   83 label *label317
+   84 label *label318
+   85 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   86 label *label319
+   87 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   88 op mod *tmp36 :testAndSetMultiples.0:i 48
+   89 op shl *tmp37 1 *tmp36
+   90 read *tmp35 BITMAP *tmp34
+   91 op or *tmp38 *tmp35 *tmp37
+   92 write *tmp38 BITMAP *tmp34
+   93 label *label320
+   94 label *label321
+   95 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   96 label *label322
+   97 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   98 op mod *tmp36 :testAndSetMultiples.0:i 48
+   99 op shl *tmp37 1 *tmp36
+  100 read *tmp35 BITMAP *tmp34
+  101 op or *tmp38 *tmp35 *tmp37
+  102 write *tmp38 BITMAP *tmp34
+  103 label *label323
+  104 label *label324
+  105 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  106 label *label325
+  107 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  108 op mod *tmp36 :testAndSetMultiples.0:i 48
+  109 op shl *tmp37 1 *tmp36
+  110 read *tmp35 BITMAP *tmp34
+  111 op or *tmp38 *tmp35 *tmp37
+  112 write *tmp38 BITMAP *tmp34
+  113 label *label326
+  114 label *label327
+  115 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  116 label *label328
+  117 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  118 op mod *tmp36 :testAndSetMultiples.0:i 48
+  119 op shl *tmp37 1 *tmp36
+  120 read *tmp35 BITMAP *tmp34
+  121 op or *tmp38 *tmp35 *tmp37
+  122 write *tmp38 BITMAP *tmp34
+  123 label *label329
+  124 label *label330
+  125 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  126 label *label331
+  127 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  128 op mod *tmp36 :testAndSetMultiples.0:i 48
+  129 op shl *tmp37 1 *tmp36
+  130 read *tmp35 BITMAP *tmp34
+  131 op or *tmp38 *tmp35 *tmp37
+  132 write *tmp38 BITMAP *tmp34
+  133 label *label332
+  134 label *label333
+  135 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  136 label *label334
+  137 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  138 op mod *tmp36 :testAndSetMultiples.0:i 48
+  139 op shl *tmp37 1 *tmp36
+  140 read *tmp35 BITMAP *tmp34
+  141 op or *tmp38 *tmp35 *tmp37
+  142 write *tmp38 BITMAP *tmp34
+  143 label *label335
+  144 label *label336
+  145 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  146 label *label337
+  147 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  148 op mod *tmp36 :testAndSetMultiples.0:i 48
+  149 op shl *tmp37 1 *tmp36
+  150 read *tmp35 BITMAP *tmp34
+  151 op or *tmp38 *tmp35 *tmp37
+  152 write *tmp38 BITMAP *tmp34
+  153 label *label338
+  154 label *label339
+  155 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  156 label *label340
+  157 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  158 op mod *tmp36 :testAndSetMultiples.0:i 48
+  159 op shl *tmp37 1 *tmp36
+  160 read *tmp35 BITMAP *tmp34
+  161 op or *tmp38 *tmp35 *tmp37
+  162 write *tmp38 BITMAP *tmp34
+  163 label *label341
+  164 label *label342
+  165 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  166 label *label343
+  167 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  168 op mod *tmp36 :testAndSetMultiples.0:i 48
+  169 op shl *tmp37 1 *tmp36
+  170 read *tmp35 BITMAP *tmp34
+  171 op or *tmp38 *tmp35 *tmp37
+  172 write *tmp38 BITMAP *tmp34
+  173 label *label344
+  174 label *label345
+  175 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  176 label *label346
+  177 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  178 op mod *tmp36 :testAndSetMultiples.0:i 48
+  179 op shl *tmp37 1 *tmp36
+  180 read *tmp35 BITMAP *tmp34
+  181 op or *tmp38 *tmp35 *tmp37
+  182 write *tmp38 BITMAP *tmp34
+  183 label *label347
+  184 label *label348
+  185 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  186 label *label349
+  187 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  188 op mod *tmp36 :testAndSetMultiples.0:i 48
+  189 op shl *tmp37 1 *tmp36
+  190 read *tmp35 BITMAP *tmp34
+  191 op or *tmp38 *tmp35 *tmp37
+  192 write *tmp38 BITMAP *tmp34
+  193 label *label350
+  194 label *label351
+  195 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  196 label *label352
+  197 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  198 op mod *tmp36 :testAndSetMultiples.0:i 48
+  199 op shl *tmp37 1 *tmp36
+  200 read *tmp35 BITMAP *tmp34
+  201 op or *tmp38 *tmp35 *tmp37
+  202 write *tmp38 BITMAP *tmp34
+  203 label *label353
+  204 label *label354
+  205 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  206 label *label355
+  207 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  208 op mod *tmp36 :testAndSetMultiples.0:i 48
+  209 op shl *tmp37 1 *tmp36
+  210 read *tmp35 BITMAP *tmp34
+  211 op or *tmp38 *tmp35 *tmp37
+  212 write *tmp38 BITMAP *tmp34
+  213 label *label356
+  214 label *label357
+  215 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  216 label *label358
+  217 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  218 op mod *tmp36 :testAndSetMultiples.0:i 48
+  219 op shl *tmp37 1 *tmp36
+  220 read *tmp35 BITMAP *tmp34
+  221 op or *tmp38 *tmp35 *tmp37
+  222 write *tmp38 BITMAP *tmp34
+  223 label *label359
+  224 label *label360
+  225 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  226 label *label361
+  227 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  228 op mod *tmp36 :testAndSetMultiples.0:i 48
+  229 op shl *tmp37 1 *tmp36
+  230 read *tmp35 BITMAP *tmp34
+  231 op or *tmp38 *tmp35 *tmp37
+  232 write *tmp38 BITMAP *tmp34
+  233 label *label362
+  234 label *label363
+  235 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  236 label *label364
+  237 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  238 op mod *tmp36 :testAndSetMultiples.0:i 48
+  239 op shl *tmp37 1 *tmp36
+  240 read *tmp35 BITMAP *tmp34
+  241 op or *tmp38 *tmp35 *tmp37
+  242 write *tmp38 BITMAP *tmp34
+  243 label *label365
+  244 label *label366
+  245 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  246 label *label367
+  247 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  248 op mod *tmp36 :testAndSetMultiples.0:i 48
+  249 op shl *tmp37 1 *tmp36
+  250 read *tmp35 BITMAP *tmp34
+  251 op or *tmp38 *tmp35 *tmp37
+  252 write *tmp38 BITMAP *tmp34
+  253 label *label368
+  254 label *label369
+  255 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  256 label *label370
+  257 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  258 op mod *tmp36 :testAndSetMultiples.0:i 48
+  259 op shl *tmp37 1 *tmp36
+  260 read *tmp35 BITMAP *tmp34
+  261 op or *tmp38 *tmp35 *tmp37
+  262 write *tmp38 BITMAP *tmp34
+  263 label *label371
+  264 label *label372
+  265 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  266 label *label373
+  267 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  268 op mod *tmp36 :testAndSetMultiples.0:i 48
+  269 op shl *tmp37 1 *tmp36
+  270 read *tmp35 BITMAP *tmp34
+  271 op or *tmp38 *tmp35 *tmp37
+  272 write *tmp38 BITMAP *tmp34
+  273 label *label374
+  274 label *label375
+  275 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  276 label *label376
+  277 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  278 op mod *tmp36 :testAndSetMultiples.0:i 48
+  279 op shl *tmp37 1 *tmp36
+  280 read *tmp35 BITMAP *tmp34
+  281 op or *tmp38 *tmp35 *tmp37
+  282 write *tmp38 BITMAP *tmp34
+  283 label *label377
+  284 label *label378
+  285 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  286 label *label379
+  287 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  288 op mod *tmp36 :testAndSetMultiples.0:i 48
+  289 op shl *tmp37 1 *tmp36
+  290 read *tmp35 BITMAP *tmp34
+  291 op or *tmp38 *tmp35 *tmp37
+  292 write *tmp38 BITMAP *tmp34
+  293 label *label380
+  294 label *label381
+  295 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  296 label *label382
+  297 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  298 op mod *tmp36 :testAndSetMultiples.0:i 48
+  299 op shl *tmp37 1 *tmp36
+  300 read *tmp35 BITMAP *tmp34
+  301 op or *tmp38 *tmp35 *tmp37
+  302 write *tmp38 BITMAP *tmp34
+  303 label *label383
+  304 label *label384
+  305 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  306 label *label385
+  307 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  308 op mod *tmp36 :testAndSetMultiples.0:i 48
+  309 op shl *tmp37 1 *tmp36
+  310 read *tmp35 BITMAP *tmp34
+  311 op or *tmp38 *tmp35 *tmp37
+  312 write *tmp38 BITMAP *tmp34
+  313 label *label386
+  314 label *label387
+  315 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  316 label *label388
+  317 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  318 op mod *tmp36 :testAndSetMultiples.0:i 48
+  319 op shl *tmp37 1 *tmp36
+  320 read *tmp35 BITMAP *tmp34
+  321 op or *tmp38 *tmp35 *tmp37
+  322 write *tmp38 BITMAP *tmp34
+  323 label *label389
+  324 label *label390
+  325 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  326 label *label391
+  327 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  328 op mod *tmp36 :testAndSetMultiples.0:i 48
+  329 op shl *tmp37 1 *tmp36
+  330 read *tmp35 BITMAP *tmp34
+  331 op or *tmp38 *tmp35 *tmp37
+  332 write *tmp38 BITMAP *tmp34
+  333 label *label392
+  334 label *label393
+  335 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  336 label *label394
+  337 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  338 op mod *tmp36 :testAndSetMultiples.0:i 48
+  339 op shl *tmp37 1 *tmp36
+  340 read *tmp35 BITMAP *tmp34
+  341 op or *tmp38 *tmp35 *tmp37
+  342 write *tmp38 BITMAP *tmp34
+  343 label *label395
+  344 label *label396
+  345 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  346 label *label397
+  347 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  348 op mod *tmp36 :testAndSetMultiples.0:i 48
+  349 op shl *tmp37 1 *tmp36
+  350 read *tmp35 BITMAP *tmp34
+  351 op or *tmp38 *tmp35 *tmp37
+  352 write *tmp38 BITMAP *tmp34
+  353 label *label398
+  354 label *label399
+  355 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  356 label *label400
+  357 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  358 op mod *tmp36 :testAndSetMultiples.0:i 48
+  359 op shl *tmp37 1 *tmp36
+  360 read *tmp35 BITMAP *tmp34
+  361 op or *tmp38 *tmp35 *tmp37
+  362 write *tmp38 BITMAP *tmp34
+  363 label *label401
+  364 label *label402
+  365 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  366 label *label403
+  367 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  368 op mod *tmp36 :testAndSetMultiples.0:i 48
+  369 op shl *tmp37 1 *tmp36
+  370 read *tmp35 BITMAP *tmp34
+  371 op or *tmp38 *tmp35 *tmp37
+  372 write *tmp38 BITMAP *tmp34
+  373 label *label404
+  374 label *label405
+  375 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  376 label *label85
   377 label *label86
   378 label *label87
   379 label *label88

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    44 op idiv :testAndSetMultiples.0:i 49 2
    45 label *label306
    46 label *label307
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   47 op idiv *tmp34 24 48
+   48 op mod *tmp36 24 48
+   49 op shl *tmp37 1 24
+   50 read *tmp35 BITMAP 0
+   51 op or *tmp38 *tmp35 16777216
+   52 write *tmp38 BITMAP 0
    53 label *label308
    54 label *label309
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   55 op add :testAndSetMultiples.0:i 24 7
    56 label *label310
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   57 op idiv *tmp34 31 48
+   58 op mod *tmp36 31 48
+   59 op shl *tmp37 1 31
+   60 read *tmp35 BITMAP 0
+   61 op or *tmp38 *tmp35 2147483648
+   62 write *tmp38 BITMAP 0
    63 label *label311
    64 label *label312
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   65 op add :testAndSetMultiples.0:i 31 7
    66 label *label313
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   67 op idiv *tmp34 38 48
+   68 op mod *tmp36 38 48
+   69 op shl *tmp37 1 38
+   70 read *tmp35 BITMAP 0
+   71 op or *tmp38 *tmp35 274877906944
+   72 write *tmp38 BITMAP 0
    73 label *label314
    74 label *label315
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   75 op add :testAndSetMultiples.0:i 38 7
    76 label *label316
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   77 op idiv *tmp34 45 48
+   78 op mod *tmp36 45 48
+   79 op shl *tmp37 1 45
+   80 read *tmp35 BITMAP 0
+   81 op or *tmp38 *tmp35 35184372088832
+   82 write *tmp38 BITMAP 0
    83 label *label317
    84 label *label318
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   85 op add :testAndSetMultiples.0:i 45 7
    86 label *label319
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   87 op idiv *tmp34 52 48
+   88 op mod *tmp36 52 48
+   89 op shl *tmp37 1 4
+   90 read *tmp35 BITMAP 1
+   91 op or *tmp38 *tmp35 16
+   92 write *tmp38 BITMAP 1
    93 label *label320
    94 label *label321
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   95 op add :testAndSetMultiples.0:i 52 7
    96 label *label322
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   97 op idiv *tmp34 59 48
+   98 op mod *tmp36 59 48
+   99 op shl *tmp37 1 11
+  100 read *tmp35 BITMAP 1
+  101 op or *tmp38 *tmp35 2048
+  102 write *tmp38 BITMAP 1
   103 label *label323
   104 label *label324
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  105 op add :testAndSetMultiples.0:i 59 7
   106 label *label325
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  107 op idiv *tmp34 66 48
+  108 op mod *tmp36 66 48
+  109 op shl *tmp37 1 18
+  110 read *tmp35 BITMAP 1
+  111 op or *tmp38 *tmp35 262144
+  112 write *tmp38 BITMAP 1
   113 label *label326
   114 label *label327
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  115 op add :testAndSetMultiples.0:i 66 7
   116 label *label328
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  117 op idiv *tmp34 73 48
+  118 op mod *tmp36 73 48
+  119 op shl *tmp37 1 25
+  120 read *tmp35 BITMAP 1
+  121 op or *tmp38 *tmp35 33554432
+  122 write *tmp38 BITMAP 1
   123 label *label329
   124 label *label330
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  125 op add :testAndSetMultiples.0:i 73 7
   126 label *label331
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  127 op idiv *tmp34 80 48
+  128 op mod *tmp36 80 48
+  129 op shl *tmp37 1 32
+  130 read *tmp35 BITMAP 1
+  131 op or *tmp38 *tmp35 4294967296
+  132 write *tmp38 BITMAP 1
   133 label *label332
   134 label *label333
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  135 op add :testAndSetMultiples.0:i 80 7
   136 label *label334
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  137 op idiv *tmp34 87 48
+  138 op mod *tmp36 87 48
+  139 op shl *tmp37 1 39
+  140 read *tmp35 BITMAP 1
+  141 op or *tmp38 *tmp35 549755813888
+  142 write *tmp38 BITMAP 1
   143 label *label335
   144 label *label336
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  145 op add :testAndSetMultiples.0:i 87 7
   146 label *label337
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  147 op idiv *tmp34 94 48
+  148 op mod *tmp36 94 48
+  149 op shl *tmp37 1 46
+  150 read *tmp35 BITMAP 1
+  151 op or *tmp38 *tmp35 70368744177664
+  152 write *tmp38 BITMAP 1
   153 label *label338
   154 label *label339
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  155 op add :testAndSetMultiples.0:i 94 7
   156 label *label340
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  157 op idiv *tmp34 101 48
+  158 op mod *tmp36 101 48
+  159 op shl *tmp37 1 5
+  160 read *tmp35 BITMAP 2
+  161 op or *tmp38 *tmp35 32
+  162 write *tmp38 BITMAP 2
   163 label *label341
   164 label *label342
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  165 op add :testAndSetMultiples.0:i 101 7
   166 label *label343
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  167 op idiv *tmp34 108 48
+  168 op mod *tmp36 108 48
+  169 op shl *tmp37 1 12
+  170 read *tmp35 BITMAP 2
+  171 op or *tmp38 *tmp35 4096
+  172 write *tmp38 BITMAP 2
   173 label *label344
   174 label *label345
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  175 op add :testAndSetMultiples.0:i 108 7
   176 label *label346
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  177 op idiv *tmp34 115 48
+  178 op mod *tmp36 115 48
+  179 op shl *tmp37 1 19
+  180 read *tmp35 BITMAP 2
+  181 op or *tmp38 *tmp35 524288
+  182 write *tmp38 BITMAP 2
   183 label *label347
   184 label *label348
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  185 op add :testAndSetMultiples.0:i 115 7
   186 label *label349
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  187 op idiv *tmp34 122 48
+  188 op mod *tmp36 122 48
+  189 op shl *tmp37 1 26
+  190 read *tmp35 BITMAP 2
+  191 op or *tmp38 *tmp35 67108864
+  192 write *tmp38 BITMAP 2
   193 label *label350
   194 label *label351
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  195 op add :testAndSetMultiples.0:i 122 7
   196 label *label352
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  197 op idiv *tmp34 129 48
+  198 op mod *tmp36 129 48
+  199 op shl *tmp37 1 33
+  200 read *tmp35 BITMAP 2
+  201 op or *tmp38 *tmp35 8589934592
+  202 write *tmp38 BITMAP 2
   203 label *label353
   204 label *label354
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  205 op add :testAndSetMultiples.0:i 129 7
   206 label *label355
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  207 op idiv *tmp34 136 48
+  208 op mod *tmp36 136 48
+  209 op shl *tmp37 1 40
+  210 read *tmp35 BITMAP 2
+  211 op or *tmp38 *tmp35 1099511627776
+  212 write *tmp38 BITMAP 2
   213 label *label356
   214 label *label357
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  215 op add :testAndSetMultiples.0:i 136 7
   216 label *label358
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  217 op idiv *tmp34 143 48
+  218 op mod *tmp36 143 48
+  219 op shl *tmp37 1 47
+  220 read *tmp35 BITMAP 2
+  221 op or *tmp38 *tmp35 140737488355328
+  222 write *tmp38 BITMAP 2
   223 label *label359
   224 label *label360
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  225 op add :testAndSetMultiples.0:i 143 7
   226 label *label361
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  227 op idiv *tmp34 150 48
+  228 op mod *tmp36 150 48
+  229 op shl *tmp37 1 6
+  230 read *tmp35 BITMAP 3
+  231 op or *tmp38 *tmp35 64
+  232 write *tmp38 BITMAP 3
   233 label *label362
   234 label *label363
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  235 op add :testAndSetMultiples.0:i 150 7
   236 label *label364
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  237 op idiv *tmp34 157 48
+  238 op mod *tmp36 157 48
+  239 op shl *tmp37 1 13
+  240 read *tmp35 BITMAP 3
+  241 op or *tmp38 *tmp35 8192
+  242 write *tmp38 BITMAP 3
   243 label *label365
   244 label *label366
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  245 op add :testAndSetMultiples.0:i 157 7
   246 label *label367
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  247 op idiv *tmp34 164 48
+  248 op mod *tmp36 164 48
+  249 op shl *tmp37 1 20
+  250 read *tmp35 BITMAP 3
+  251 op or *tmp38 *tmp35 1048576
+  252 write *tmp38 BITMAP 3
   253 label *label368
   254 label *label369
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  255 op add :testAndSetMultiples.0:i 164 7
   256 label *label370
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  257 op idiv *tmp34 171 48
+  258 op mod *tmp36 171 48
+  259 op shl *tmp37 1 27
+  260 read *tmp35 BITMAP 3
+  261 op or *tmp38 *tmp35 134217728
+  262 write *tmp38 BITMAP 3
   263 label *label371
   264 label *label372
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  265 op add :testAndSetMultiples.0:i 171 7
   266 label *label373
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  267 op idiv *tmp34 178 48
+  268 op mod *tmp36 178 48
+  269 op shl *tmp37 1 34
+  270 read *tmp35 BITMAP 3
+  271 op or *tmp38 *tmp35 17179869184
+  272 write *tmp38 BITMAP 3
   273 label *label374
   274 label *label375
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  275 op add :testAndSetMultiples.0:i 178 7
   276 label *label376
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  277 op idiv *tmp34 185 48
+  278 op mod *tmp36 185 48
+  279 op shl *tmp37 1 41
+  280 read *tmp35 BITMAP 3
+  281 op or *tmp38 *tmp35 2199023255552
+  282 write *tmp38 BITMAP 3
   283 label *label377
   284 label *label378
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  285 op add :testAndSetMultiples.0:i 185 7
   286 label *label379
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  287 op idiv *tmp34 192 48
+  288 op mod *tmp36 192 48
+  289 op shl *tmp37 1 0
+  290 read *tmp35 BITMAP 4
+  291 op or *tmp38 *tmp35 1
+  292 write *tmp38 BITMAP 4
   293 label *label380
   294 label *label381
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  295 op add :testAndSetMultiples.0:i 192 7
   296 label *label382
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  297 op idiv *tmp34 199 48
+  298 op mod *tmp36 199 48
+  299 op shl *tmp37 1 7
+  300 read *tmp35 BITMAP 4
+  301 op or *tmp38 *tmp35 128
+  302 write *tmp38 BITMAP 4
   303 label *label383
   304 label *label384
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  305 op add :testAndSetMultiples.0:i 199 7
   306 label *label385
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  307 op idiv *tmp34 206 48
+  308 op mod *tmp36 206 48
+  309 op shl *tmp37 1 14
+  310 read *tmp35 BITMAP 4
+  311 op or *tmp38 *tmp35 16384
+  312 write *tmp38 BITMAP 4
   313 label *label386
   314 label *label387
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  315 op add :testAndSetMultiples.0:i 206 7
   316 label *label388
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  317 op idiv *tmp34 213 48
+  318 op mod *tmp36 213 48
+  319 op shl *tmp37 1 21
+  320 read *tmp35 BITMAP 4
+  321 op or *tmp38 *tmp35 2097152
+  322 write *tmp38 BITMAP 4
   323 label *label389
   324 label *label390
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  325 op add :testAndSetMultiples.0:i 213 7
   326 label *label391
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  327 op idiv *tmp34 220 48
+  328 op mod *tmp36 220 48
+  329 op shl *tmp37 1 28
+  330 read *tmp35 BITMAP 4
+  331 op or *tmp38 *tmp35 268435456
+  332 write *tmp38 BITMAP 4
   333 label *label392
   334 label *label393
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  335 op add :testAndSetMultiples.0:i 220 7
   336 label *label394
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  337 op idiv *tmp34 227 48
+  338 op mod *tmp36 227 48
+  339 op shl *tmp37 1 35
+  340 read *tmp35 BITMAP 4
+  341 op or *tmp38 *tmp35 34359738368
+  342 write *tmp38 BITMAP 4
   343 label *label395
   344 label *label396
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  345 op add :testAndSetMultiples.0:i 227 7
   346 label *label397
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  347 op idiv *tmp34 234 48
+  348 op mod *tmp36 234 48
+  349 op shl *tmp37 1 42
+  350 read *tmp35 BITMAP 4
+  351 op or *tmp38 *tmp35 4398046511104
+  352 write *tmp38 BITMAP 4
   353 label *label398
   354 label *label399
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  355 op add :testAndSetMultiples.0:i 234 7
   356 label *label400
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  357 op idiv *tmp34 241 48
+  358 op mod *tmp36 241 48
+  359 op shl *tmp37 1 1
+  360 read *tmp35 BITMAP 5
+  361 op or *tmp38 *tmp35 2
+  362 write *tmp38 BITMAP 5
   363 label *label401
   364 label *label402
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  365 op add :testAndSetMultiples.0:i 241 7
   366 label *label403
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  367 op idiv *tmp34 248 48
+  368 op mod *tmp36 248 48
+  369 op shl *tmp37 1 8
+  370 read *tmp35 BITMAP 5
+  371 op or *tmp38 *tmp35 256
+  372 write *tmp38 BITMAP 5
   373 label *label404
   374 label *label405
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  375 op add :testAndSetMultiples.0:i 248 7
   376 label *label85
   377 label *label86
   378 label *label87

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-133 instructions):
 
    41 label *label80
    42 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    43 jump *label86 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
    44 label *label306
    45 label *label307
-    * op idiv *tmp34 24 48
-    * op mod *tmp36 24 48
-    * op shl *tmp37 1 24
    46 read *tmp35 BITMAP 0
    47 op or *tmp38 *tmp35 16777216
    48 write *tmp38 BITMAP 0
    49 label *label308
    50 label *label309
-    * op add :testAndSetMultiples.0:i 24 7
    51 label *label310
-    * op idiv *tmp34 31 48
-    * op mod *tmp36 31 48
-    * op shl *tmp37 1 31
    52 read *tmp35 BITMAP 0
    53 op or *tmp38 *tmp35 2147483648
    54 write *tmp38 BITMAP 0
    55 label *label311
    56 label *label312
-    * op add :testAndSetMultiples.0:i 31 7
    57 label *label313
-    * op idiv *tmp34 38 48
-    * op mod *tmp36 38 48
-    * op shl *tmp37 1 38
    58 read *tmp35 BITMAP 0
    59 op or *tmp38 *tmp35 274877906944
    60 write *tmp38 BITMAP 0
    61 label *label314
    62 label *label315
-    * op add :testAndSetMultiples.0:i 38 7
    63 label *label316
-    * op idiv *tmp34 45 48
-    * op mod *tmp36 45 48
-    * op shl *tmp37 1 45
    64 read *tmp35 BITMAP 0
    65 op or *tmp38 *tmp35 35184372088832
    66 write *tmp38 BITMAP 0
    67 label *label317
    68 label *label318
-    * op add :testAndSetMultiples.0:i 45 7
    69 label *label319
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    70 read *tmp35 BITMAP 1
    71 op or *tmp38 *tmp35 16
    72 write *tmp38 BITMAP 1
    73 label *label320
    74 label *label321
-    * op add :testAndSetMultiples.0:i 52 7
    75 label *label322
-    * op idiv *tmp34 59 48
-    * op mod *tmp36 59 48
-    * op shl *tmp37 1 11
    76 read *tmp35 BITMAP 1
    77 op or *tmp38 *tmp35 2048
    78 write *tmp38 BITMAP 1
    79 label *label323
    80 label *label324
-    * op add :testAndSetMultiples.0:i 59 7
    81 label *label325
-    * op idiv *tmp34 66 48
-    * op mod *tmp36 66 48
-    * op shl *tmp37 1 18
    82 read *tmp35 BITMAP 1
    83 op or *tmp38 *tmp35 262144
    84 write *tmp38 BITMAP 1
    85 label *label326
    86 label *label327
-    * op add :testAndSetMultiples.0:i 66 7
    87 label *label328
-    * op idiv *tmp34 73 48
-    * op mod *tmp36 73 48
-    * op shl *tmp37 1 25
    88 read *tmp35 BITMAP 1
    89 op or *tmp38 *tmp35 33554432
    90 write *tmp38 BITMAP 1
    91 label *label329
    92 label *label330
-    * op add :testAndSetMultiples.0:i 73 7
    93 label *label331
-    * op idiv *tmp34 80 48
-    * op mod *tmp36 80 48
-    * op shl *tmp37 1 32
    94 read *tmp35 BITMAP 1
    95 op or *tmp38 *tmp35 4294967296
    96 write *tmp38 BITMAP 1
    97 label *label332
    98 label *label333
-    * op add :testAndSetMultiples.0:i 80 7
    99 label *label334
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
   100 read *tmp35 BITMAP 1
   101 op or *tmp38 *tmp35 549755813888
   102 write *tmp38 BITMAP 1
   103 label *label335
   104 label *label336
-    * op add :testAndSetMultiples.0:i 87 7
   105 label *label337
-    * op idiv *tmp34 94 48
-    * op mod *tmp36 94 48
-    * op shl *tmp37 1 46
   106 read *tmp35 BITMAP 1
   107 op or *tmp38 *tmp35 70368744177664
   108 write *tmp38 BITMAP 1
   109 label *label338
   110 label *label339
-    * op add :testAndSetMultiples.0:i 94 7
   111 label *label340
-    * op idiv *tmp34 101 48
-    * op mod *tmp36 101 48
-    * op shl *tmp37 1 5
   112 read *tmp35 BITMAP 2
   113 op or *tmp38 *tmp35 32
   114 write *tmp38 BITMAP 2
   115 label *label341
   116 label *label342
-    * op add :testAndSetMultiples.0:i 101 7
   117 label *label343
-    * op idiv *tmp34 108 48
-    * op mod *tmp36 108 48
-    * op shl *tmp37 1 12
   118 read *tmp35 BITMAP 2
   119 op or *tmp38 *tmp35 4096
   120 write *tmp38 BITMAP 2
   121 label *label344
   122 label *label345
-    * op add :testAndSetMultiples.0:i 108 7
   123 label *label346
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   124 read *tmp35 BITMAP 2
   125 op or *tmp38 *tmp35 524288
   126 write *tmp38 BITMAP 2
   127 label *label347
   128 label *label348
-    * op add :testAndSetMultiples.0:i 115 7
   129 label *label349
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   130 read *tmp35 BITMAP 2
   131 op or *tmp38 *tmp35 67108864
   132 write *tmp38 BITMAP 2
   133 label *label350
   134 label *label351
-    * op add :testAndSetMultiples.0:i 122 7
   135 label *label352
-    * op idiv *tmp34 129 48
-    * op mod *tmp36 129 48
-    * op shl *tmp37 1 33
   136 read *tmp35 BITMAP 2
   137 op or *tmp38 *tmp35 8589934592
   138 write *tmp38 BITMAP 2
   139 label *label353
   140 label *label354
-    * op add :testAndSetMultiples.0:i 129 7
   141 label *label355
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   142 read *tmp35 BITMAP 2
   143 op or *tmp38 *tmp35 1099511627776
   144 write *tmp38 BITMAP 2
   145 label *label356
   146 label *label357
-    * op add :testAndSetMultiples.0:i 136 7
   147 label *label358
-    * op idiv *tmp34 143 48
-    * op mod *tmp36 143 48
-    * op shl *tmp37 1 47
   148 read *tmp35 BITMAP 2
   149 op or *tmp38 *tmp35 140737488355328
   150 write *tmp38 BITMAP 2
   151 label *label359
   152 label *label360
-    * op add :testAndSetMultiples.0:i 143 7
   153 label *label361
-    * op idiv *tmp34 150 48
-    * op mod *tmp36 150 48
-    * op shl *tmp37 1 6
   154 read *tmp35 BITMAP 3
   155 op or *tmp38 *tmp35 64
   156 write *tmp38 BITMAP 3
   157 label *label362
   158 label *label363
-    * op add :testAndSetMultiples.0:i 150 7
   159 label *label364
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   160 read *tmp35 BITMAP 3
   161 op or *tmp38 *tmp35 8192
   162 write *tmp38 BITMAP 3
   163 label *label365
   164 label *label366
-    * op add :testAndSetMultiples.0:i 157 7
   165 label *label367
-    * op idiv *tmp34 164 48
-    * op mod *tmp36 164 48
-    * op shl *tmp37 1 20
   166 read *tmp35 BITMAP 3
   167 op or *tmp38 *tmp35 1048576
   168 write *tmp38 BITMAP 3
   169 label *label368
   170 label *label369
-    * op add :testAndSetMultiples.0:i 164 7
   171 label *label370
-    * op idiv *tmp34 171 48
-    * op mod *tmp36 171 48
-    * op shl *tmp37 1 27
   172 read *tmp35 BITMAP 3
   173 op or *tmp38 *tmp35 134217728
   174 write *tmp38 BITMAP 3
   175 label *label371
   176 label *label372
-    * op add :testAndSetMultiples.0:i 171 7
   177 label *label373
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   178 read *tmp35 BITMAP 3
   179 op or *tmp38 *tmp35 17179869184
   180 write *tmp38 BITMAP 3
   181 label *label374
   182 label *label375
-    * op add :testAndSetMultiples.0:i 178 7
   183 label *label376
-    * op idiv *tmp34 185 48
-    * op mod *tmp36 185 48
-    * op shl *tmp37 1 41
   184 read *tmp35 BITMAP 3
   185 op or *tmp38 *tmp35 2199023255552
   186 write *tmp38 BITMAP 3
   187 label *label377
   188 label *label378
-    * op add :testAndSetMultiples.0:i 185 7
   189 label *label379
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   190 read *tmp35 BITMAP 4
   191 op or *tmp38 *tmp35 1
   192 write *tmp38 BITMAP 4
   193 label *label380
   194 label *label381
-    * op add :testAndSetMultiples.0:i 192 7
   195 label *label382
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   196 read *tmp35 BITMAP 4
   197 op or *tmp38 *tmp35 128
   198 write *tmp38 BITMAP 4
   199 label *label383
   200 label *label384
-    * op add :testAndSetMultiples.0:i 199 7
   201 label *label385
-    * op idiv *tmp34 206 48
-    * op mod *tmp36 206 48
-    * op shl *tmp37 1 14
   202 read *tmp35 BITMAP 4
   203 op or *tmp38 *tmp35 16384
   204 write *tmp38 BITMAP 4
   205 label *label386
   206 label *label387
-    * op add :testAndSetMultiples.0:i 206 7
   207 label *label388
-    * op idiv *tmp34 213 48
-    * op mod *tmp36 213 48
-    * op shl *tmp37 1 21
   208 read *tmp35 BITMAP 4
   209 op or *tmp38 *tmp35 2097152
   210 write *tmp38 BITMAP 4
   211 label *label389
   212 label *label390
-    * op add :testAndSetMultiples.0:i 213 7
   213 label *label391
-    * op idiv *tmp34 220 48
-    * op mod *tmp36 220 48
-    * op shl *tmp37 1 28
   214 read *tmp35 BITMAP 4
   215 op or *tmp38 *tmp35 268435456
   216 write *tmp38 BITMAP 4
   217 label *label392
   218 label *label393
-    * op add :testAndSetMultiples.0:i 220 7
   219 label *label394
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   220 read *tmp35 BITMAP 4
   221 op or *tmp38 *tmp35 34359738368
   222 write *tmp38 BITMAP 4
   223 label *label395
   224 label *label396
-    * op add :testAndSetMultiples.0:i 227 7
   225 label *label397
-    * op idiv *tmp34 234 48
-    * op mod *tmp36 234 48
-    * op shl *tmp37 1 42
   226 read *tmp35 BITMAP 4
   227 op or *tmp38 *tmp35 4398046511104
   228 write *tmp38 BITMAP 4
   229 label *label398
   230 label *label399
-    * op add :testAndSetMultiples.0:i 234 7
   231 label *label400
-    * op idiv *tmp34 241 48
-    * op mod *tmp36 241 48
-    * op shl *tmp37 1 1
   232 read *tmp35 BITMAP 5
   233 op or *tmp38 *tmp35 2
   234 write *tmp38 BITMAP 5
   235 label *label401
   236 label *label402
-    * op add :testAndSetMultiples.0:i 241 7
   237 label *label403
-    * op idiv *tmp34 248 48
-    * op mod *tmp36 248 48
-    * op shl *tmp37 1 8
   238 read *tmp35 BITMAP 5
   239 op or *tmp38 *tmp35 256
   240 write *tmp38 BITMAP 5
   241 label *label404
   242 label *label405
-    * op add :testAndSetMultiples.0:i 248 7
   243 label *label85
   244 label *label86
   245 label *label87

Modifications by Unroll loop at line 17:9 (+327 instructions):
 
    10 label *label67
    11 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    12 jump *label73 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
-    * label *label68
-    * jump *label72 greaterThan 12 250
-    * label *label69
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label70
-    * label *label71
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
-    * jump *label69 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label72
+   13 op idiv :testAndSetMultiples.0:i 25 2
+   14 label *label406
+   15 label *label407
+   16 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   17 op mod *tmp36 :testAndSetMultiples.0:i 48
+   18 op shl *tmp37 1 *tmp36
+   19 read *tmp35 BITMAP *tmp34
+   20 op or *tmp38 *tmp35 *tmp37
+   21 write *tmp38 BITMAP *tmp34
+   22 label *label408
+   23 label *label409
+   24 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   25 label *label410
+   26 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   27 op mod *tmp36 :testAndSetMultiples.0:i 48
+   28 op shl *tmp37 1 *tmp36
+   29 read *tmp35 BITMAP *tmp34
+   30 op or *tmp38 *tmp35 *tmp37
+   31 write *tmp38 BITMAP *tmp34
+   32 label *label411
+   33 label *label412
+   34 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   35 label *label413
+   36 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   37 op mod *tmp36 :testAndSetMultiples.0:i 48
+   38 op shl *tmp37 1 *tmp36
+   39 read *tmp35 BITMAP *tmp34
+   40 op or *tmp38 *tmp35 *tmp37
+   41 write *tmp38 BITMAP *tmp34
+   42 label *label414
+   43 label *label415
+   44 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   45 label *label416
+   46 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   47 op mod *tmp36 :testAndSetMultiples.0:i 48
+   48 op shl *tmp37 1 *tmp36
+   49 read *tmp35 BITMAP *tmp34
+   50 op or *tmp38 *tmp35 *tmp37
+   51 write *tmp38 BITMAP *tmp34
+   52 label *label417
+   53 label *label418
+   54 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   55 label *label419
+   56 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   57 op mod *tmp36 :testAndSetMultiples.0:i 48
+   58 op shl *tmp37 1 *tmp36
+   59 read *tmp35 BITMAP *tmp34
+   60 op or *tmp38 *tmp35 *tmp37
+   61 write *tmp38 BITMAP *tmp34
+   62 label *label420
+   63 label *label421
+   64 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   65 label *label422
+   66 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   67 op mod *tmp36 :testAndSetMultiples.0:i 48
+   68 op shl *tmp37 1 *tmp36
+   69 read *tmp35 BITMAP *tmp34
+   70 op or *tmp38 *tmp35 *tmp37
+   71 write *tmp38 BITMAP *tmp34
+   72 label *label423
+   73 label *label424
+   74 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   75 label *label425
+   76 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   77 op mod *tmp36 :testAndSetMultiples.0:i 48
+   78 op shl *tmp37 1 *tmp36
+   79 read *tmp35 BITMAP *tmp34
+   80 op or *tmp38 *tmp35 *tmp37
+   81 write *tmp38 BITMAP *tmp34
+   82 label *label426
+   83 label *label427
+   84 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   85 label *label428
+   86 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   87 op mod *tmp36 :testAndSetMultiples.0:i 48
+   88 op shl *tmp37 1 *tmp36
+   89 read *tmp35 BITMAP *tmp34
+   90 op or *tmp38 *tmp35 *tmp37
+   91 write *tmp38 BITMAP *tmp34
+   92 label *label429
+   93 label *label430
+   94 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   95 label *label431
+   96 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   97 op mod *tmp36 :testAndSetMultiples.0:i 48
+   98 op shl *tmp37 1 *tmp36
+   99 read *tmp35 BITMAP *tmp34
+  100 op or *tmp38 *tmp35 *tmp37
+  101 write *tmp38 BITMAP *tmp34
+  102 label *label432
+  103 label *label433
+  104 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  105 label *label434
+  106 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  107 op mod *tmp36 :testAndSetMultiples.0:i 48
+  108 op shl *tmp37 1 *tmp36
+  109 read *tmp35 BITMAP *tmp34
+  110 op or *tmp38 *tmp35 *tmp37
+  111 write *tmp38 BITMAP *tmp34
+  112 label *label435
+  113 label *label436
+  114 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  115 label *label437
+  116 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  117 op mod *tmp36 :testAndSetMultiples.0:i 48
+  118 op shl *tmp37 1 *tmp36
+  119 read *tmp35 BITMAP *tmp34
+  120 op or *tmp38 *tmp35 *tmp37
+  121 write *tmp38 BITMAP *tmp34
+  122 label *label438
+  123 label *label439
+  124 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  125 label *label440
+  126 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  127 op mod *tmp36 :testAndSetMultiples.0:i 48
+  128 op shl *tmp37 1 *tmp36
+  129 read *tmp35 BITMAP *tmp34
+  130 op or *tmp38 *tmp35 *tmp37
+  131 write *tmp38 BITMAP *tmp34
+  132 label *label441
+  133 label *label442
+  134 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  135 label *label443
+  136 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  137 op mod *tmp36 :testAndSetMultiples.0:i 48
+  138 op shl *tmp37 1 *tmp36
+  139 read *tmp35 BITMAP *tmp34
+  140 op or *tmp38 *tmp35 *tmp37
+  141 write *tmp38 BITMAP *tmp34
+  142 label *label444
+  143 label *label445
+  144 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  145 label *label446
+  146 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  147 op mod *tmp36 :testAndSetMultiples.0:i 48
+  148 op shl *tmp37 1 *tmp36
+  149 read *tmp35 BITMAP *tmp34
+  150 op or *tmp38 *tmp35 *tmp37
+  151 write *tmp38 BITMAP *tmp34
+  152 label *label447
+  153 label *label448
+  154 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  155 label *label449
+  156 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  157 op mod *tmp36 :testAndSetMultiples.0:i 48
+  158 op shl *tmp37 1 *tmp36
+  159 read *tmp35 BITMAP *tmp34
+  160 op or *tmp38 *tmp35 *tmp37
+  161 write *tmp38 BITMAP *tmp34
+  162 label *label450
+  163 label *label451
+  164 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  165 label *label452
+  166 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  167 op mod *tmp36 :testAndSetMultiples.0:i 48
+  168 op shl *tmp37 1 *tmp36
+  169 read *tmp35 BITMAP *tmp34
+  170 op or *tmp38 *tmp35 *tmp37
+  171 write *tmp38 BITMAP *tmp34
+  172 label *label453
+  173 label *label454
+  174 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  175 label *label455
+  176 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  177 op mod *tmp36 :testAndSetMultiples.0:i 48
+  178 op shl *tmp37 1 *tmp36
+  179 read *tmp35 BITMAP *tmp34
+  180 op or *tmp38 *tmp35 *tmp37
+  181 write *tmp38 BITMAP *tmp34
+  182 label *label456
+  183 label *label457
+  184 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  185 label *label458
+  186 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  187 op mod *tmp36 :testAndSetMultiples.0:i 48
+  188 op shl *tmp37 1 *tmp36
+  189 read *tmp35 BITMAP *tmp34
+  190 op or *tmp38 *tmp35 *tmp37
+  191 write *tmp38 BITMAP *tmp34
+  192 label *label459
+  193 label *label460
+  194 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  195 label *label461
+  196 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  197 op mod *tmp36 :testAndSetMultiples.0:i 48
+  198 op shl *tmp37 1 *tmp36
+  199 read *tmp35 BITMAP *tmp34
+  200 op or *tmp38 *tmp35 *tmp37
+  201 write *tmp38 BITMAP *tmp34
+  202 label *label462
+  203 label *label463
+  204 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  205 label *label464
+  206 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  207 op mod *tmp36 :testAndSetMultiples.0:i 48
+  208 op shl *tmp37 1 *tmp36
+  209 read *tmp35 BITMAP *tmp34
+  210 op or *tmp38 *tmp35 *tmp37
+  211 write *tmp38 BITMAP *tmp34
+  212 label *label465
+  213 label *label466
+  214 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  215 label *label467
+  216 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  217 op mod *tmp36 :testAndSetMultiples.0:i 48
+  218 op shl *tmp37 1 *tmp36
+  219 read *tmp35 BITMAP *tmp34
+  220 op or *tmp38 *tmp35 *tmp37
+  221 write *tmp38 BITMAP *tmp34
+  222 label *label468
+  223 label *label469
+  224 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  225 label *label470
+  226 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  227 op mod *tmp36 :testAndSetMultiples.0:i 48
+  228 op shl *tmp37 1 *tmp36
+  229 read *tmp35 BITMAP *tmp34
+  230 op or *tmp38 *tmp35 *tmp37
+  231 write *tmp38 BITMAP *tmp34
+  232 label *label471
+  233 label *label472
+  234 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  235 label *label473
+  236 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  237 op mod *tmp36 :testAndSetMultiples.0:i 48
+  238 op shl *tmp37 1 *tmp36
+  239 read *tmp35 BITMAP *tmp34
+  240 op or *tmp38 *tmp35 *tmp37
+  241 write *tmp38 BITMAP *tmp34
+  242 label *label474
+  243 label *label475
+  244 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  245 label *label476
+  246 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  247 op mod *tmp36 :testAndSetMultiples.0:i 48
+  248 op shl *tmp37 1 *tmp36
+  249 read *tmp35 BITMAP *tmp34
+  250 op or *tmp38 *tmp35 *tmp37
+  251 write *tmp38 BITMAP *tmp34
+  252 label *label477
+  253 label *label478
+  254 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  255 label *label479
+  256 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  257 op mod *tmp36 :testAndSetMultiples.0:i 48
+  258 op shl *tmp37 1 *tmp36
+  259 read *tmp35 BITMAP *tmp34
+  260 op or *tmp38 *tmp35 *tmp37
+  261 write *tmp38 BITMAP *tmp34
+  262 label *label480
+  263 label *label481
+  264 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  265 label *label482
+  266 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  267 op mod *tmp36 :testAndSetMultiples.0:i 48
+  268 op shl *tmp37 1 *tmp36
+  269 read *tmp35 BITMAP *tmp34
+  270 op or *tmp38 *tmp35 *tmp37
+  271 write *tmp38 BITMAP *tmp34
+  272 label *label483
+  273 label *label484
+  274 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  275 label *label485
+  276 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  277 op mod *tmp36 :testAndSetMultiples.0:i 48
+  278 op shl *tmp37 1 *tmp36
+  279 read *tmp35 BITMAP *tmp34
+  280 op or *tmp38 *tmp35 *tmp37
+  281 write *tmp38 BITMAP *tmp34
+  282 label *label486
+  283 label *label487
+  284 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  285 label *label488
+  286 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  287 op mod *tmp36 :testAndSetMultiples.0:i 48
+  288 op shl *tmp37 1 *tmp36
+  289 read *tmp35 BITMAP *tmp34
+  290 op or *tmp38 *tmp35 *tmp37
+  291 write *tmp38 BITMAP *tmp34
+  292 label *label489
+  293 label *label490
+  294 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  295 label *label491
+  296 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  297 op mod *tmp36 :testAndSetMultiples.0:i 48
+  298 op shl *tmp37 1 *tmp36
+  299 read *tmp35 BITMAP *tmp34
+  300 op or *tmp38 *tmp35 *tmp37
+  301 write *tmp38 BITMAP *tmp34
+  302 label *label492
+  303 label *label493
+  304 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  305 label *label494
+  306 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  307 op mod *tmp36 :testAndSetMultiples.0:i 48
+  308 op shl *tmp37 1 *tmp36
+  309 read *tmp35 BITMAP *tmp34
+  310 op or *tmp38 *tmp35 *tmp37
+  311 write *tmp38 BITMAP *tmp34
+  312 label *label495
+  313 label *label496
+  314 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  315 label *label497
+  316 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  317 op mod *tmp36 :testAndSetMultiples.0:i 48
+  318 op shl *tmp37 1 *tmp36
+  319 read *tmp35 BITMAP *tmp34
+  320 op or *tmp38 *tmp35 *tmp37
+  321 write *tmp38 BITMAP *tmp34
+  322 label *label498
+  323 label *label499
+  324 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  325 label *label500
+  326 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  327 op mod *tmp36 :testAndSetMultiples.0:i 48
+  328 op shl *tmp37 1 *tmp36
+  329 read *tmp35 BITMAP *tmp34
+  330 op or *tmp38 *tmp35 *tmp37
+  331 write *tmp38 BITMAP *tmp34
+  332 label *label501
+  333 label *label502
+  334 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  335 label *label503
+  336 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  337 op mod *tmp36 :testAndSetMultiples.0:i 48
+  338 op shl *tmp37 1 *tmp36
+  339 read *tmp35 BITMAP *tmp34
+  340 op or *tmp38 *tmp35 *tmp37
+  341 write *tmp38 BITMAP *tmp34
+  342 label *label504
+  343 label *label505
+  344 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  345 label *label506
+  346 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  347 op mod *tmp36 :testAndSetMultiples.0:i 48
+  348 op shl *tmp37 1 *tmp36
+  349 read *tmp35 BITMAP *tmp34
+  350 op or *tmp38 *tmp35 *tmp37
+  351 write *tmp38 BITMAP *tmp34
+  352 label *label507
+  353 label *label508
+  354 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  355 label *label509
+  356 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  357 op mod *tmp36 :testAndSetMultiples.0:i 48
+  358 op shl *tmp37 1 *tmp36
+  359 read *tmp35 BITMAP *tmp34
+  360 op or *tmp38 *tmp35 *tmp37
+  361 write *tmp38 BITMAP *tmp34
+  362 label *label510
+  363 label *label511
+  364 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  365 label *label512
+  366 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  367 op mod *tmp36 :testAndSetMultiples.0:i 48
+  368 op shl *tmp37 1 *tmp36
+  369 read *tmp35 BITMAP *tmp34
+  370 op or *tmp38 *tmp35 *tmp37
+  371 write *tmp38 BITMAP *tmp34
+  372 label *label513
+  373 label *label514
+  374 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  375 label *label515
+  376 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  377 op mod *tmp36 :testAndSetMultiples.0:i 48
+  378 op shl *tmp37 1 *tmp36
+  379 read *tmp35 BITMAP *tmp34
+  380 op or *tmp38 *tmp35 *tmp37
+  381 write *tmp38 BITMAP *tmp34
+  382 label *label516
+  383 label *label517
+  384 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  385 label *label518
+  386 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  387 op mod *tmp36 :testAndSetMultiples.0:i 48
+  388 op shl *tmp37 1 *tmp36
+  389 read *tmp35 BITMAP *tmp34
+  390 op or *tmp38 *tmp35 *tmp37
+  391 write *tmp38 BITMAP *tmp34
+  392 label *label519
+  393 label *label520
+  394 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  395 label *label521
+  396 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  397 op mod *tmp36 :testAndSetMultiples.0:i 48
+  398 op shl *tmp37 1 *tmp36
+  399 read *tmp35 BITMAP *tmp34
+  400 op or *tmp38 *tmp35 *tmp37
+  401 write *tmp38 BITMAP *tmp34
+  402 label *label522
+  403 label *label523
+  404 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  405 label *label524
+  406 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  407 op mod *tmp36 :testAndSetMultiples.0:i 48
+  408 op shl *tmp37 1 *tmp36
+  409 read *tmp35 BITMAP *tmp34
+  410 op or *tmp38 *tmp35 *tmp37
+  411 write *tmp38 BITMAP *tmp34
+  412 label *label525
+  413 label *label526
+  414 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  415 label *label527
+  416 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  417 op mod *tmp36 :testAndSetMultiples.0:i 48
+  418 op shl *tmp37 1 *tmp36
+  419 read *tmp35 BITMAP *tmp34
+  420 op or *tmp38 *tmp35 *tmp37
+  421 write *tmp38 BITMAP *tmp34
+  422 label *label528
+  423 label *label529
+  424 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  425 label *label530
+  426 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  427 op mod *tmp36 :testAndSetMultiples.0:i 48
+  428 op shl *tmp37 1 *tmp36
+  429 read *tmp35 BITMAP *tmp34
+  430 op or *tmp38 *tmp35 *tmp37
+  431 write *tmp38 BITMAP *tmp34
+  432 label *label531
+  433 label *label532
+  434 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  435 label *label533
+  436 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  437 op mod *tmp36 :testAndSetMultiples.0:i 48
+  438 op shl *tmp37 1 *tmp36
+  439 read *tmp35 BITMAP *tmp34
+  440 op or *tmp38 *tmp35 *tmp37
+  441 write *tmp38 BITMAP *tmp34
+  442 label *label534
+  443 label *label535
+  444 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  445 label *label536
+  446 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  447 op mod *tmp36 :testAndSetMultiples.0:i 48
+  448 op shl *tmp37 1 *tmp36
+  449 read *tmp35 BITMAP *tmp34
+  450 op or *tmp38 *tmp35 *tmp37
+  451 write *tmp38 BITMAP *tmp34
+  452 label *label537
+  453 label *label538
+  454 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  455 label *label539
+  456 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  457 op mod *tmp36 :testAndSetMultiples.0:i 48
+  458 op shl *tmp37 1 *tmp36
+  459 read *tmp35 BITMAP *tmp34
+  460 op or *tmp38 *tmp35 *tmp37
+  461 write *tmp38 BITMAP *tmp34
+  462 label *label540
+  463 label *label541
+  464 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  465 label *label542
+  466 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  467 op mod *tmp36 :testAndSetMultiples.0:i 48
+  468 op shl *tmp37 1 *tmp36
+  469 read *tmp35 BITMAP *tmp34
+  470 op or *tmp38 *tmp35 *tmp37
+  471 write *tmp38 BITMAP *tmp34
+  472 label *label543
+  473 label *label544
+  474 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  475 label *label545
+  476 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  477 op mod *tmp36 :testAndSetMultiples.0:i 48
+  478 op shl *tmp37 1 *tmp36
+  479 read *tmp35 BITMAP *tmp34
+  480 op or *tmp38 *tmp35 *tmp37
+  481 write *tmp38 BITMAP *tmp34
+  482 label *label546
+  483 label *label547
+  484 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  485 label *label548
+  486 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  487 op mod *tmp36 :testAndSetMultiples.0:i 48
+  488 op shl *tmp37 1 *tmp36
+  489 read *tmp35 BITMAP *tmp34
+  490 op or *tmp38 *tmp35 *tmp37
+  491 write *tmp38 BITMAP *tmp34
+  492 label *label549
+  493 label *label550
+  494 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  495 label *label72
   496 label *label73
   497 label *label74
   498 label *label75

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    13 op idiv :testAndSetMultiples.0:i 25 2
    14 label *label406
    15 label *label407
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   16 op idiv *tmp34 12 48
+   17 op mod *tmp36 12 48
+   18 op shl *tmp37 1 12
+   19 read *tmp35 BITMAP 0
+   20 op or *tmp38 *tmp35 4096
+   21 write *tmp38 BITMAP 0
    22 label *label408
    23 label *label409
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   24 op add :testAndSetMultiples.0:i 12 5
    25 label *label410
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   26 op idiv *tmp34 17 48
+   27 op mod *tmp36 17 48
+   28 op shl *tmp37 1 17
+   29 read *tmp35 BITMAP 0
+   30 op or *tmp38 *tmp35 131072
+   31 write *tmp38 BITMAP 0
    32 label *label411
    33 label *label412
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   34 op add :testAndSetMultiples.0:i 17 5
    35 label *label413
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   36 op idiv *tmp34 22 48
+   37 op mod *tmp36 22 48
+   38 op shl *tmp37 1 22
+   39 read *tmp35 BITMAP 0
+   40 op or *tmp38 *tmp35 4194304
+   41 write *tmp38 BITMAP 0
    42 label *label414
    43 label *label415
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   44 op add :testAndSetMultiples.0:i 22 5
    45 label *label416
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   46 op idiv *tmp34 27 48
+   47 op mod *tmp36 27 48
+   48 op shl *tmp37 1 27
+   49 read *tmp35 BITMAP 0
+   50 op or *tmp38 *tmp35 134217728
+   51 write *tmp38 BITMAP 0
    52 label *label417
    53 label *label418
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   54 op add :testAndSetMultiples.0:i 27 5
    55 label *label419
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   56 op idiv *tmp34 32 48
+   57 op mod *tmp36 32 48
+   58 op shl *tmp37 1 32
+   59 read *tmp35 BITMAP 0
+   60 op or *tmp38 *tmp35 4294967296
+   61 write *tmp38 BITMAP 0
    62 label *label420
    63 label *label421
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   64 op add :testAndSetMultiples.0:i 32 5
    65 label *label422
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   66 op idiv *tmp34 37 48
+   67 op mod *tmp36 37 48
+   68 op shl *tmp37 1 37
+   69 read *tmp35 BITMAP 0
+   70 op or *tmp38 *tmp35 137438953472
+   71 write *tmp38 BITMAP 0
    72 label *label423
    73 label *label424
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   74 op add :testAndSetMultiples.0:i 37 5
    75 label *label425
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   76 op idiv *tmp34 42 48
+   77 op mod *tmp36 42 48
+   78 op shl *tmp37 1 42
+   79 read *tmp35 BITMAP 0
+   80 op or *tmp38 *tmp35 4398046511104
+   81 write *tmp38 BITMAP 0
    82 label *label426
    83 label *label427
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   84 op add :testAndSetMultiples.0:i 42 5
    85 label *label428
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   86 op idiv *tmp34 47 48
+   87 op mod *tmp36 47 48
+   88 op shl *tmp37 1 47
+   89 read *tmp35 BITMAP 0
+   90 op or *tmp38 *tmp35 140737488355328
+   91 write *tmp38 BITMAP 0
    92 label *label429
    93 label *label430
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   94 op add :testAndSetMultiples.0:i 47 5
    95 label *label431
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   96 op idiv *tmp34 52 48
+   97 op mod *tmp36 52 48
+   98 op shl *tmp37 1 4
+   99 read *tmp35 BITMAP 1
+  100 op or *tmp38 *tmp35 16
+  101 write *tmp38 BITMAP 1
   102 label *label432
   103 label *label433
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  104 op add :testAndSetMultiples.0:i 52 5
   105 label *label434
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  106 op idiv *tmp34 57 48
+  107 op mod *tmp36 57 48
+  108 op shl *tmp37 1 9
+  109 read *tmp35 BITMAP 1
+  110 op or *tmp38 *tmp35 512
+  111 write *tmp38 BITMAP 1
   112 label *label435
   113 label *label436
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  114 op add :testAndSetMultiples.0:i 57 5
   115 label *label437
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  116 op idiv *tmp34 62 48
+  117 op mod *tmp36 62 48
+  118 op shl *tmp37 1 14
+  119 read *tmp35 BITMAP 1
+  120 op or *tmp38 *tmp35 16384
+  121 write *tmp38 BITMAP 1
   122 label *label438
   123 label *label439
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  124 op add :testAndSetMultiples.0:i 62 5
   125 label *label440
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  126 op idiv *tmp34 67 48
+  127 op mod *tmp36 67 48
+  128 op shl *tmp37 1 19
+  129 read *tmp35 BITMAP 1
+  130 op or *tmp38 *tmp35 524288
+  131 write *tmp38 BITMAP 1
   132 label *label441
   133 label *label442
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  134 op add :testAndSetMultiples.0:i 67 5
   135 label *label443
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  136 op idiv *tmp34 72 48
+  137 op mod *tmp36 72 48
+  138 op shl *tmp37 1 24
+  139 read *tmp35 BITMAP 1
+  140 op or *tmp38 *tmp35 16777216
+  141 write *tmp38 BITMAP 1
   142 label *label444
   143 label *label445
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  144 op add :testAndSetMultiples.0:i 72 5
   145 label *label446
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  146 op idiv *tmp34 77 48
+  147 op mod *tmp36 77 48
+  148 op shl *tmp37 1 29
+  149 read *tmp35 BITMAP 1
+  150 op or *tmp38 *tmp35 536870912
+  151 write *tmp38 BITMAP 1
   152 label *label447
   153 label *label448
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  154 op add :testAndSetMultiples.0:i 77 5
   155 label *label449
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  156 op idiv *tmp34 82 48
+  157 op mod *tmp36 82 48
+  158 op shl *tmp37 1 34
+  159 read *tmp35 BITMAP 1
+  160 op or *tmp38 *tmp35 17179869184
+  161 write *tmp38 BITMAP 1
   162 label *label450
   163 label *label451
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  164 op add :testAndSetMultiples.0:i 82 5
   165 label *label452
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  166 op idiv *tmp34 87 48
+  167 op mod *tmp36 87 48
+  168 op shl *tmp37 1 39
+  169 read *tmp35 BITMAP 1
+  170 op or *tmp38 *tmp35 549755813888
+  171 write *tmp38 BITMAP 1
   172 label *label453
   173 label *label454
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  174 op add :testAndSetMultiples.0:i 87 5
   175 label *label455
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  176 op idiv *tmp34 92 48
+  177 op mod *tmp36 92 48
+  178 op shl *tmp37 1 44
+  179 read *tmp35 BITMAP 1
+  180 op or *tmp38 *tmp35 17592186044416
+  181 write *tmp38 BITMAP 1
   182 label *label456
   183 label *label457
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  184 op add :testAndSetMultiples.0:i 92 5
   185 label *label458
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  186 op idiv *tmp34 97 48
+  187 op mod *tmp36 97 48
+  188 op shl *tmp37 1 1
+  189 read *tmp35 BITMAP 2
+  190 op or *tmp38 *tmp35 2
+  191 write *tmp38 BITMAP 2
   192 label *label459
   193 label *label460
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  194 op add :testAndSetMultiples.0:i 97 5
   195 label *label461
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  196 op idiv *tmp34 102 48
+  197 op mod *tmp36 102 48
+  198 op shl *tmp37 1 6
+  199 read *tmp35 BITMAP 2
+  200 op or *tmp38 *tmp35 64
+  201 write *tmp38 BITMAP 2
   202 label *label462
   203 label *label463
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  204 op add :testAndSetMultiples.0:i 102 5
   205 label *label464
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  206 op idiv *tmp34 107 48
+  207 op mod *tmp36 107 48
+  208 op shl *tmp37 1 11
+  209 read *tmp35 BITMAP 2
+  210 op or *tmp38 *tmp35 2048
+  211 write *tmp38 BITMAP 2
   212 label *label465
   213 label *label466
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  214 op add :testAndSetMultiples.0:i 107 5
   215 label *label467
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  216 op idiv *tmp34 112 48
+  217 op mod *tmp36 112 48
+  218 op shl *tmp37 1 16
+  219 read *tmp35 BITMAP 2
+  220 op or *tmp38 *tmp35 65536
+  221 write *tmp38 BITMAP 2
   222 label *label468
   223 label *label469
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  224 op add :testAndSetMultiples.0:i 112 5
   225 label *label470
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  226 op idiv *tmp34 117 48
+  227 op mod *tmp36 117 48
+  228 op shl *tmp37 1 21
+  229 read *tmp35 BITMAP 2
+  230 op or *tmp38 *tmp35 2097152
+  231 write *tmp38 BITMAP 2
   232 label *label471
   233 label *label472
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  234 op add :testAndSetMultiples.0:i 117 5
   235 label *label473
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  236 op idiv *tmp34 122 48
+  237 op mod *tmp36 122 48
+  238 op shl *tmp37 1 26
+  239 read *tmp35 BITMAP 2
+  240 op or *tmp38 *tmp35 67108864
+  241 write *tmp38 BITMAP 2
   242 label *label474
   243 label *label475
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  244 op add :testAndSetMultiples.0:i 122 5
   245 label *label476
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  246 op idiv *tmp34 127 48
+  247 op mod *tmp36 127 48
+  248 op shl *tmp37 1 31
+  249 read *tmp35 BITMAP 2
+  250 op or *tmp38 *tmp35 2147483648
+  251 write *tmp38 BITMAP 2
   252 label *label477
   253 label *label478
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  254 op add :testAndSetMultiples.0:i 127 5
   255 label *label479
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  256 op idiv *tmp34 132 48
+  257 op mod *tmp36 132 48
+  258 op shl *tmp37 1 36
+  259 read *tmp35 BITMAP 2
+  260 op or *tmp38 *tmp35 68719476736
+  261 write *tmp38 BITMAP 2
   262 label *label480
   263 label *label481
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  264 op add :testAndSetMultiples.0:i 132 5
   265 label *label482
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  266 op idiv *tmp34 137 48
+  267 op mod *tmp36 137 48
+  268 op shl *tmp37 1 41
+  269 read *tmp35 BITMAP 2
+  270 op or *tmp38 *tmp35 2199023255552
+  271 write *tmp38 BITMAP 2
   272 label *label483
   273 label *label484
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  274 op add :testAndSetMultiples.0:i 137 5
   275 label *label485
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  276 op idiv *tmp34 142 48
+  277 op mod *tmp36 142 48
+  278 op shl *tmp37 1 46
+  279 read *tmp35 BITMAP 2
+  280 op or *tmp38 *tmp35 70368744177664
+  281 write *tmp38 BITMAP 2
   282 label *label486
   283 label *label487
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  284 op add :testAndSetMultiples.0:i 142 5
   285 label *label488
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  286 op idiv *tmp34 147 48
+  287 op mod *tmp36 147 48
+  288 op shl *tmp37 1 3
+  289 read *tmp35 BITMAP 3
+  290 op or *tmp38 *tmp35 8
+  291 write *tmp38 BITMAP 3
   292 label *label489
   293 label *label490
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  294 op add :testAndSetMultiples.0:i 147 5
   295 label *label491
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  296 op idiv *tmp34 152 48
+  297 op mod *tmp36 152 48
+  298 op shl *tmp37 1 8
+  299 read *tmp35 BITMAP 3
+  300 op or *tmp38 *tmp35 256
+  301 write *tmp38 BITMAP 3
   302 label *label492
   303 label *label493
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  304 op add :testAndSetMultiples.0:i 152 5
   305 label *label494
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  306 op idiv *tmp34 157 48
+  307 op mod *tmp36 157 48
+  308 op shl *tmp37 1 13
+  309 read *tmp35 BITMAP 3
+  310 op or *tmp38 *tmp35 8192
+  311 write *tmp38 BITMAP 3
   312 label *label495
   313 label *label496
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  314 op add :testAndSetMultiples.0:i 157 5
   315 label *label497
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  316 op idiv *tmp34 162 48
+  317 op mod *tmp36 162 48
+  318 op shl *tmp37 1 18
+  319 read *tmp35 BITMAP 3
+  320 op or *tmp38 *tmp35 262144
+  321 write *tmp38 BITMAP 3
   322 label *label498
   323 label *label499
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  324 op add :testAndSetMultiples.0:i 162 5
   325 label *label500
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  326 op idiv *tmp34 167 48
+  327 op mod *tmp36 167 48
+  328 op shl *tmp37 1 23
+  329 read *tmp35 BITMAP 3
+  330 op or *tmp38 *tmp35 8388608
+  331 write *tmp38 BITMAP 3
   332 label *label501
   333 label *label502
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  334 op add :testAndSetMultiples.0:i 167 5
   335 label *label503
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  336 op idiv *tmp34 172 48
+  337 op mod *tmp36 172 48
+  338 op shl *tmp37 1 28
+  339 read *tmp35 BITMAP 3
+  340 op or *tmp38 *tmp35 268435456
+  341 write *tmp38 BITMAP 3
   342 label *label504
   343 label *label505
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  344 op add :testAndSetMultiples.0:i 172 5
   345 label *label506
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  346 op idiv *tmp34 177 48
+  347 op mod *tmp36 177 48
+  348 op shl *tmp37 1 33
+  349 read *tmp35 BITMAP 3
+  350 op or *tmp38 *tmp35 8589934592
+  351 write *tmp38 BITMAP 3
   352 label *label507
   353 label *label508
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  354 op add :testAndSetMultiples.0:i 177 5
   355 label *label509
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  356 op idiv *tmp34 182 48
+  357 op mod *tmp36 182 48
+  358 op shl *tmp37 1 38
+  359 read *tmp35 BITMAP 3
+  360 op or *tmp38 *tmp35 274877906944
+  361 write *tmp38 BITMAP 3
   362 label *label510
   363 label *label511
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  364 op add :testAndSetMultiples.0:i 182 5
   365 label *label512
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  366 op idiv *tmp34 187 48
+  367 op mod *tmp36 187 48
+  368 op shl *tmp37 1 43
+  369 read *tmp35 BITMAP 3
+  370 op or *tmp38 *tmp35 8796093022208
+  371 write *tmp38 BITMAP 3
   372 label *label513
   373 label *label514
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  374 op add :testAndSetMultiples.0:i 187 5
   375 label *label515
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  376 op idiv *tmp34 192 48
+  377 op mod *tmp36 192 48
+  378 op shl *tmp37 1 0
+  379 read *tmp35 BITMAP 4
+  380 op or *tmp38 *tmp35 1
+  381 write *tmp38 BITMAP 4
   382 label *label516
   383 label *label517
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  384 op add :testAndSetMultiples.0:i 192 5
   385 label *label518
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  386 op idiv *tmp34 197 48
+  387 op mod *tmp36 197 48
+  388 op shl *tmp37 1 5
+  389 read *tmp35 BITMAP 4
+  390 op or *tmp38 *tmp35 32
+  391 write *tmp38 BITMAP 4
   392 label *label519
   393 label *label520
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  394 op add :testAndSetMultiples.0:i 197 5
   395 label *label521
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  396 op idiv *tmp34 202 48
+  397 op mod *tmp36 202 48
+  398 op shl *tmp37 1 10
+  399 read *tmp35 BITMAP 4
+  400 op or *tmp38 *tmp35 1024
+  401 write *tmp38 BITMAP 4
   402 label *label522
   403 label *label523
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  404 op add :testAndSetMultiples.0:i 202 5
   405 label *label524
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  406 op idiv *tmp34 207 48
+  407 op mod *tmp36 207 48
+  408 op shl *tmp37 1 15
+  409 read *tmp35 BITMAP 4
+  410 op or *tmp38 *tmp35 32768
+  411 write *tmp38 BITMAP 4
   412 label *label525
   413 label *label526
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  414 op add :testAndSetMultiples.0:i 207 5
   415 label *label527
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  416 op idiv *tmp34 212 48
+  417 op mod *tmp36 212 48
+  418 op shl *tmp37 1 20
+  419 read *tmp35 BITMAP 4
+  420 op or *tmp38 *tmp35 1048576
+  421 write *tmp38 BITMAP 4
   422 label *label528
   423 label *label529
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  424 op add :testAndSetMultiples.0:i 212 5
   425 label *label530
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  426 op idiv *tmp34 217 48
+  427 op mod *tmp36 217 48
+  428 op shl *tmp37 1 25
+  429 read *tmp35 BITMAP 4
+  430 op or *tmp38 *tmp35 33554432
+  431 write *tmp38 BITMAP 4
   432 label *label531
   433 label *label532
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  434 op add :testAndSetMultiples.0:i 217 5
   435 label *label533
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  436 op idiv *tmp34 222 48
+  437 op mod *tmp36 222 48
+  438 op shl *tmp37 1 30
+  439 read *tmp35 BITMAP 4
+  440 op or *tmp38 *tmp35 1073741824
+  441 write *tmp38 BITMAP 4
   442 label *label534
   443 label *label535
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  444 op add :testAndSetMultiples.0:i 222 5
   445 label *label536
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  446 op idiv *tmp34 227 48
+  447 op mod *tmp36 227 48
+  448 op shl *tmp37 1 35
+  449 read *tmp35 BITMAP 4
+  450 op or *tmp38 *tmp35 34359738368
+  451 write *tmp38 BITMAP 4
   452 label *label537
   453 label *label538
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  454 op add :testAndSetMultiples.0:i 227 5
   455 label *label539
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  456 op idiv *tmp34 232 48
+  457 op mod *tmp36 232 48
+  458 op shl *tmp37 1 40
+  459 read *tmp35 BITMAP 4
+  460 op or *tmp38 *tmp35 1099511627776
+  461 write *tmp38 BITMAP 4
   462 label *label540
   463 label *label541
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  464 op add :testAndSetMultiples.0:i 232 5
   465 label *label542
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  466 op idiv *tmp34 237 48
+  467 op mod *tmp36 237 48
+  468 op shl *tmp37 1 45
+  469 read *tmp35 BITMAP 4
+  470 op or *tmp38 *tmp35 35184372088832
+  471 write *tmp38 BITMAP 4
   472 label *label543
   473 label *label544
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  474 op add :testAndSetMultiples.0:i 237 5
   475 label *label545
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  476 op idiv *tmp34 242 48
+  477 op mod *tmp36 242 48
+  478 op shl *tmp37 1 2
+  479 read *tmp35 BITMAP 5
+  480 op or *tmp38 *tmp35 4
+  481 write *tmp38 BITMAP 5
   482 label *label546
   483 label *label547
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  484 op add :testAndSetMultiples.0:i 242 5
   485 label *label548
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  486 op idiv *tmp34 247 48
+  487 op mod *tmp36 247 48
+  488 op shl *tmp37 1 7
+  489 read *tmp35 BITMAP 5
+  490 op or *tmp38 *tmp35 128
+  491 write *tmp38 BITMAP 5
   492 label *label549
   493 label *label550
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  494 op add :testAndSetMultiples.0:i 247 5
   495 label *label72
   496 label *label73
   497 label *label74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-193 instructions):
 
    10 label *label67
    11 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    12 jump *label73 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
    13 label *label406
    14 label *label407
-    * op idiv *tmp34 12 48
-    * op mod *tmp36 12 48
-    * op shl *tmp37 1 12
    15 read *tmp35 BITMAP 0
    16 op or *tmp38 *tmp35 4096
    17 write *tmp38 BITMAP 0
    18 label *label408
    19 label *label409
-    * op add :testAndSetMultiples.0:i 12 5
    20 label *label410
-    * op idiv *tmp34 17 48
-    * op mod *tmp36 17 48
-    * op shl *tmp37 1 17
    21 read *tmp35 BITMAP 0
    22 op or *tmp38 *tmp35 131072
    23 write *tmp38 BITMAP 0
    24 label *label411
    25 label *label412
-    * op add :testAndSetMultiples.0:i 17 5
    26 label *label413
-    * op idiv *tmp34 22 48
-    * op mod *tmp36 22 48
-    * op shl *tmp37 1 22
    27 read *tmp35 BITMAP 0
    28 op or *tmp38 *tmp35 4194304
    29 write *tmp38 BITMAP 0
    30 label *label414
    31 label *label415
-    * op add :testAndSetMultiples.0:i 22 5
    32 label *label416
-    * op idiv *tmp34 27 48
-    * op mod *tmp36 27 48
-    * op shl *tmp37 1 27
    33 read *tmp35 BITMAP 0
    34 op or *tmp38 *tmp35 134217728
    35 write *tmp38 BITMAP 0
    36 label *label417
    37 label *label418
-    * op add :testAndSetMultiples.0:i 27 5
    38 label *label419
-    * op idiv *tmp34 32 48
-    * op mod *tmp36 32 48
-    * op shl *tmp37 1 32
    39 read *tmp35 BITMAP 0
    40 op or *tmp38 *tmp35 4294967296
    41 write *tmp38 BITMAP 0
    42 label *label420
    43 label *label421
-    * op add :testAndSetMultiples.0:i 32 5
    44 label *label422
-    * op idiv *tmp34 37 48
-    * op mod *tmp36 37 48
-    * op shl *tmp37 1 37
    45 read *tmp35 BITMAP 0
    46 op or *tmp38 *tmp35 137438953472
    47 write *tmp38 BITMAP 0
    48 label *label423
    49 label *label424
-    * op add :testAndSetMultiples.0:i 37 5
    50 label *label425
-    * op idiv *tmp34 42 48
-    * op mod *tmp36 42 48
-    * op shl *tmp37 1 42
    51 read *tmp35 BITMAP 0
    52 op or *tmp38 *tmp35 4398046511104
    53 write *tmp38 BITMAP 0
    54 label *label426
    55 label *label427
-    * op add :testAndSetMultiples.0:i 42 5
    56 label *label428
-    * op idiv *tmp34 47 48
-    * op mod *tmp36 47 48
-    * op shl *tmp37 1 47
    57 read *tmp35 BITMAP 0
    58 op or *tmp38 *tmp35 140737488355328
    59 write *tmp38 BITMAP 0
    60 label *label429
    61 label *label430
-    * op add :testAndSetMultiples.0:i 47 5
    62 label *label431
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    63 read *tmp35 BITMAP 1
    64 op or *tmp38 *tmp35 16
    65 write *tmp38 BITMAP 1
    66 label *label432
    67 label *label433
-    * op add :testAndSetMultiples.0:i 52 5
    68 label *label434
-    * op idiv *tmp34 57 48
-    * op mod *tmp36 57 48
-    * op shl *tmp37 1 9
    69 read *tmp35 BITMAP 1
    70 op or *tmp38 *tmp35 512
    71 write *tmp38 BITMAP 1
    72 label *label435
    73 label *label436
-    * op add :testAndSetMultiples.0:i 57 5
    74 label *label437
-    * op idiv *tmp34 62 48
-    * op mod *tmp36 62 48
-    * op shl *tmp37 1 14
    75 read *tmp35 BITMAP 1
    76 op or *tmp38 *tmp35 16384
    77 write *tmp38 BITMAP 1
    78 label *label438
    79 label *label439
-    * op add :testAndSetMultiples.0:i 62 5
    80 label *label440
-    * op idiv *tmp34 67 48
-    * op mod *tmp36 67 48
-    * op shl *tmp37 1 19
    81 read *tmp35 BITMAP 1
    82 op or *tmp38 *tmp35 524288
    83 write *tmp38 BITMAP 1
    84 label *label441
    85 label *label442
-    * op add :testAndSetMultiples.0:i 67 5
    86 label *label443
-    * op idiv *tmp34 72 48
-    * op mod *tmp36 72 48
-    * op shl *tmp37 1 24
    87 read *tmp35 BITMAP 1
    88 op or *tmp38 *tmp35 16777216
    89 write *tmp38 BITMAP 1
    90 label *label444
    91 label *label445
-    * op add :testAndSetMultiples.0:i 72 5
    92 label *label446
-    * op idiv *tmp34 77 48
-    * op mod *tmp36 77 48
-    * op shl *tmp37 1 29
    93 read *tmp35 BITMAP 1
    94 op or *tmp38 *tmp35 536870912
    95 write *tmp38 BITMAP 1
    96 label *label447
    97 label *label448
-    * op add :testAndSetMultiples.0:i 77 5
    98 label *label449
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
    99 read *tmp35 BITMAP 1
   100 op or *tmp38 *tmp35 17179869184
   101 write *tmp38 BITMAP 1
   102 label *label450
   103 label *label451
-    * op add :testAndSetMultiples.0:i 82 5
   104 label *label452
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
   105 read *tmp35 BITMAP 1
   106 op or *tmp38 *tmp35 549755813888
   107 write *tmp38 BITMAP 1
   108 label *label453
   109 label *label454
-    * op add :testAndSetMultiples.0:i 87 5
   110 label *label455
-    * op idiv *tmp34 92 48
-    * op mod *tmp36 92 48
-    * op shl *tmp37 1 44
   111 read *tmp35 BITMAP 1
   112 op or *tmp38 *tmp35 17592186044416
   113 write *tmp38 BITMAP 1
   114 label *label456
   115 label *label457
-    * op add :testAndSetMultiples.0:i 92 5
   116 label *label458
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   117 read *tmp35 BITMAP 2
   118 op or *tmp38 *tmp35 2
   119 write *tmp38 BITMAP 2
   120 label *label459
   121 label *label460
-    * op add :testAndSetMultiples.0:i 97 5
   122 label *label461
-    * op idiv *tmp34 102 48
-    * op mod *tmp36 102 48
-    * op shl *tmp37 1 6
   123 read *tmp35 BITMAP 2
   124 op or *tmp38 *tmp35 64
   125 write *tmp38 BITMAP 2
   126 label *label462
   127 label *label463
-    * op add :testAndSetMultiples.0:i 102 5
   128 label *label464
-    * op idiv *tmp34 107 48
-    * op mod *tmp36 107 48
-    * op shl *tmp37 1 11
   129 read *tmp35 BITMAP 2
   130 op or *tmp38 *tmp35 2048
   131 write *tmp38 BITMAP 2
   132 label *label465
   133 label *label466
-    * op add :testAndSetMultiples.0:i 107 5
   134 label *label467
-    * op idiv *tmp34 112 48
-    * op mod *tmp36 112 48
-    * op shl *tmp37 1 16
   135 read *tmp35 BITMAP 2
   136 op or *tmp38 *tmp35 65536
   137 write *tmp38 BITMAP 2
   138 label *label468
   139 label *label469
-    * op add :testAndSetMultiples.0:i 112 5
   140 label *label470
-    * op idiv *tmp34 117 48
-    * op mod *tmp36 117 48
-    * op shl *tmp37 1 21
   141 read *tmp35 BITMAP 2
   142 op or *tmp38 *tmp35 2097152
   143 write *tmp38 BITMAP 2
   144 label *label471
   145 label *label472
-    * op add :testAndSetMultiples.0:i 117 5
   146 label *label473
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   147 read *tmp35 BITMAP 2
   148 op or *tmp38 *tmp35 67108864
   149 write *tmp38 BITMAP 2
   150 label *label474
   151 label *label475
-    * op add :testAndSetMultiples.0:i 122 5
   152 label *label476
-    * op idiv *tmp34 127 48
-    * op mod *tmp36 127 48
-    * op shl *tmp37 1 31
   153 read *tmp35 BITMAP 2
   154 op or *tmp38 *tmp35 2147483648
   155 write *tmp38 BITMAP 2
   156 label *label477
   157 label *label478
-    * op add :testAndSetMultiples.0:i 127 5
   158 label *label479
-    * op idiv *tmp34 132 48
-    * op mod *tmp36 132 48
-    * op shl *tmp37 1 36
   159 read *tmp35 BITMAP 2
   160 op or *tmp38 *tmp35 68719476736
   161 write *tmp38 BITMAP 2
   162 label *label480
   163 label *label481
-    * op add :testAndSetMultiples.0:i 132 5
   164 label *label482
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   165 read *tmp35 BITMAP 2
   166 op or *tmp38 *tmp35 2199023255552
   167 write *tmp38 BITMAP 2
   168 label *label483
   169 label *label484
-    * op add :testAndSetMultiples.0:i 137 5
   170 label *label485
-    * op idiv *tmp34 142 48
-    * op mod *tmp36 142 48
-    * op shl *tmp37 1 46
   171 read *tmp35 BITMAP 2
   172 op or *tmp38 *tmp35 70368744177664
   173 write *tmp38 BITMAP 2
   174 label *label486
   175 label *label487
-    * op add :testAndSetMultiples.0:i 142 5
   176 label *label488
-    * op idiv *tmp34 147 48
-    * op mod *tmp36 147 48
-    * op shl *tmp37 1 3
   177 read *tmp35 BITMAP 3
   178 op or *tmp38 *tmp35 8
   179 write *tmp38 BITMAP 3
   180 label *label489
   181 label *label490
-    * op add :testAndSetMultiples.0:i 147 5
   182 label *label491
-    * op idiv *tmp34 152 48
-    * op mod *tmp36 152 48
-    * op shl *tmp37 1 8
   183 read *tmp35 BITMAP 3
   184 op or *tmp38 *tmp35 256
   185 write *tmp38 BITMAP 3
   186 label *label492
   187 label *label493
-    * op add :testAndSetMultiples.0:i 152 5
   188 label *label494
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   189 read *tmp35 BITMAP 3
   190 op or *tmp38 *tmp35 8192
   191 write *tmp38 BITMAP 3
   192 label *label495
   193 label *label496
-    * op add :testAndSetMultiples.0:i 157 5
   194 label *label497
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   195 read *tmp35 BITMAP 3
   196 op or *tmp38 *tmp35 262144
   197 write *tmp38 BITMAP 3
   198 label *label498
   199 label *label499
-    * op add :testAndSetMultiples.0:i 162 5
   200 label *label500
-    * op idiv *tmp34 167 48
-    * op mod *tmp36 167 48
-    * op shl *tmp37 1 23
   201 read *tmp35 BITMAP 3
   202 op or *tmp38 *tmp35 8388608
   203 write *tmp38 BITMAP 3
   204 label *label501
   205 label *label502
-    * op add :testAndSetMultiples.0:i 167 5
   206 label *label503
-    * op idiv *tmp34 172 48
-    * op mod *tmp36 172 48
-    * op shl *tmp37 1 28
   207 read *tmp35 BITMAP 3
   208 op or *tmp38 *tmp35 268435456
   209 write *tmp38 BITMAP 3
   210 label *label504
   211 label *label505
-    * op add :testAndSetMultiples.0:i 172 5
   212 label *label506
-    * op idiv *tmp34 177 48
-    * op mod *tmp36 177 48
-    * op shl *tmp37 1 33
   213 read *tmp35 BITMAP 3
   214 op or *tmp38 *tmp35 8589934592
   215 write *tmp38 BITMAP 3
   216 label *label507
   217 label *label508
-    * op add :testAndSetMultiples.0:i 177 5
   218 label *label509
-    * op idiv *tmp34 182 48
-    * op mod *tmp36 182 48
-    * op shl *tmp37 1 38
   219 read *tmp35 BITMAP 3
   220 op or *tmp38 *tmp35 274877906944
   221 write *tmp38 BITMAP 3
   222 label *label510
   223 label *label511
-    * op add :testAndSetMultiples.0:i 182 5
   224 label *label512
-    * op idiv *tmp34 187 48
-    * op mod *tmp36 187 48
-    * op shl *tmp37 1 43
   225 read *tmp35 BITMAP 3
   226 op or *tmp38 *tmp35 8796093022208
   227 write *tmp38 BITMAP 3
   228 label *label513
   229 label *label514
-    * op add :testAndSetMultiples.0:i 187 5
   230 label *label515
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   231 read *tmp35 BITMAP 4
   232 op or *tmp38 *tmp35 1
   233 write *tmp38 BITMAP 4
   234 label *label516
   235 label *label517
-    * op add :testAndSetMultiples.0:i 192 5
   236 label *label518
-    * op idiv *tmp34 197 48
-    * op mod *tmp36 197 48
-    * op shl *tmp37 1 5
   237 read *tmp35 BITMAP 4
   238 op or *tmp38 *tmp35 32
   239 write *tmp38 BITMAP 4
   240 label *label519
   241 label *label520
-    * op add :testAndSetMultiples.0:i 197 5
   242 label *label521
-    * op idiv *tmp34 202 48
-    * op mod *tmp36 202 48
-    * op shl *tmp37 1 10
   243 read *tmp35 BITMAP 4
   244 op or *tmp38 *tmp35 1024
   245 write *tmp38 BITMAP 4
   246 label *label522
   247 label *label523
-    * op add :testAndSetMultiples.0:i 202 5
   248 label *label524
-    * op idiv *tmp34 207 48
-    * op mod *tmp36 207 48
-    * op shl *tmp37 1 15
   249 read *tmp35 BITMAP 4
   250 op or *tmp38 *tmp35 32768
   251 write *tmp38 BITMAP 4
   252 label *label525
   253 label *label526
-    * op add :testAndSetMultiples.0:i 207 5
   254 label *label527
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   255 read *tmp35 BITMAP 4
   256 op or *tmp38 *tmp35 1048576
   257 write *tmp38 BITMAP 4
   258 label *label528
   259 label *label529
-    * op add :testAndSetMultiples.0:i 212 5
   260 label *label530
-    * op idiv *tmp34 217 48
-    * op mod *tmp36 217 48
-    * op shl *tmp37 1 25
   261 read *tmp35 BITMAP 4
   262 op or *tmp38 *tmp35 33554432
   263 write *tmp38 BITMAP 4
   264 label *label531
   265 label *label532
-    * op add :testAndSetMultiples.0:i 217 5
   266 label *label533
-    * op idiv *tmp34 222 48
-    * op mod *tmp36 222 48
-    * op shl *tmp37 1 30
   267 read *tmp35 BITMAP 4
   268 op or *tmp38 *tmp35 1073741824
   269 write *tmp38 BITMAP 4
   270 label *label534
   271 label *label535
-    * op add :testAndSetMultiples.0:i 222 5
   272 label *label536
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   273 read *tmp35 BITMAP 4
   274 op or *tmp38 *tmp35 34359738368
   275 write *tmp38 BITMAP 4
   276 label *label537
   277 label *label538
-    * op add :testAndSetMultiples.0:i 227 5
   278 label *label539
-    * op idiv *tmp34 232 48
-    * op mod *tmp36 232 48
-    * op shl *tmp37 1 40
   279 read *tmp35 BITMAP 4
   280 op or *tmp38 *tmp35 1099511627776
   281 write *tmp38 BITMAP 4
   282 label *label540
   283 label *label541
-    * op add :testAndSetMultiples.0:i 232 5
   284 label *label542
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   285 read *tmp35 BITMAP 4
   286 op or *tmp38 *tmp35 35184372088832
   287 write *tmp38 BITMAP 4
   288 label *label543
   289 label *label544
-    * op add :testAndSetMultiples.0:i 237 5
   290 label *label545
-    * op idiv *tmp34 242 48
-    * op mod *tmp36 242 48
-    * op shl *tmp37 1 2
   291 read *tmp35 BITMAP 5
   292 op or *tmp38 *tmp35 4
   293 write *tmp38 BITMAP 5
   294 label *label546
   295 label *label547
-    * op add :testAndSetMultiples.0:i 242 5
   296 label *label548
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   297 read *tmp35 BITMAP 5
   298 op or *tmp38 *tmp35 128
   299 write *tmp38 BITMAP 5
   300 label *label549
   301 label *label550
-    * op add :testAndSetMultiples.0:i 247 5
   302 label *label72
   303 label *label73
   304 label *label74

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-1 instructions):
 
   864 jump *label157 equal :testAndSetMultiples.0:result false
   865 op idiv :testAndSetMultiples.0:i 529 2
   866 label *label152
-    * jump *label156 greaterThan 264 250
+  867 jump *label156 always
   868 label *label153
   869 op idiv *tmp34 :testAndSetMultiples.0:i 48
   870 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   895 jump *label170 equal :testAndSetMultiples.0:result false
   896 op idiv :testAndSetMultiples.0:i 625 2
   897 label *label165
-    * jump *label169 greaterThan 312 250
+  898 jump *label169 always
   899 label *label166
   900 op idiv *tmp34 :testAndSetMultiples.0:i 48
   901 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   919 label *label175
   920 label *label5
   921 label *label12
-    * jump *label14 greaterThan 29 500
   922 label *label33
   923 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
   924 setaddr :getBit.0*retaddr *label15 (h:*label15)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-14 instructions):
 
   862 label *label151
   863 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   864 jump *label157 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 529 2
   865 label *label152
   866 jump *label156 always
   867 label *label153
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
   868 write *tmp38 BITMAP *tmp34
   869 label *label154
   870 label *label155
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   871 jump *label153 lessThanEq :testAndSetMultiples.0:i 250
   872 label *label156
   873 label *label157
 
   886 label *label164
   887 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   888 jump *label170 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 625 2
   889 label *label165
   890 jump *label169 always
   891 label *label166
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
   892 write *tmp38 BITMAP *tmp34
   893 label *label167
   894 label *label168
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
   895 jump *label166 lessThanEq :testAndSetMultiples.0:i 250
   896 label *label169
   897 label *label170

Modifications by Final phase, Jump Threading, iteration 1:
 
     9 op and :getBit.0*retval *tmp21 4
    10 label *label67
    11 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label73 equal :testAndSetMultiples.0:result false
+   12 jump *label76 equal :testAndSetMultiples.0:result false
    13 label *label406
    14 label *label407
    15 read *tmp35 BITMAP 0
 
   315 op and :getBit.0*retval *tmp21 8
   316 label *label80
   317 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label86 equal :testAndSetMultiples.0:result false
+  318 jump *label89 equal :testAndSetMultiples.0:result false
   319 label *label306
   320 label *label307
   321 read *tmp35 BITMAP 0
 
   533 op and :getBit.0*retval *tmp21 32
   534 label *label95
   535 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label101 equal :testAndSetMultiples.0:result false
+  536 jump *label104 equal :testAndSetMultiples.0:result false
   537 label *label251
   538 label *label252
   539 read *tmp35 BITMAP 1
 
   659 op and :getBit.0*retval *tmp21 64
   660 label *label108
   661 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label114 equal :testAndSetMultiples.0:result false
+  662 jump *label117 equal :testAndSetMultiples.0:result false
   663 label *label211
   664 label *label212
   665 read *tmp35 BITMAP 1
 
   757 op and :getBit.0*retval *tmp21 256
   758 label *label123
   759 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label129 equal :testAndSetMultiples.0:result false
+  760 jump *label132 equal :testAndSetMultiples.0:result false
   761 label *label189
   762 label *label190
   763 read *tmp35 BITMAP 3
 
   817 op and :getBit.0*retval *tmp21 512
   818 label *label136
   819 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label142 equal :testAndSetMultiples.0:result false
+  820 jump *label145 equal :testAndSetMultiples.0:result false
   821 label *label176
   822 label *label177
   823 read *tmp35 BITMAP 3
 
   861 op and :getBit.0*retval *tmp21 2048
   862 label *label151
   863 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label157 equal :testAndSetMultiples.0:result false
+  864 jump *label160 equal :testAndSetMultiples.0:result false
   865 label *label152
   866 jump *label156 always
   867 label *label153
 
   885 op and :getBit.0*retval *tmp21 4096
   886 label *label164
   887 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label170 equal :testAndSetMultiples.0:result false
+  888 jump *label173 equal :testAndSetMultiples.0:result false
   889 label *label165
   890 jump *label169 always
   891 label *label166

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-4 instructions):
 
   864 jump *label160 equal :testAndSetMultiples.0:result false
   865 label *label152
   866 jump *label156 always
-    * label *label153
-    * write *tmp38 BITMAP *tmp34
-    * label *label154
-    * label *label155
-    * jump *label153 lessThanEq :testAndSetMultiples.0:i 250
   867 label *label156
   868 label *label157
   869 label *label158
 
   883 jump *label173 equal :testAndSetMultiples.0:result false
   884 label *label165
   885 jump *label169 always
-    * label *label166
-    * write *tmp38 BITMAP *tmp34
-    * label *label167
-    * label *label168
-    * jump *label166 lessThanEq :testAndSetMultiples.0:i 250
   886 label *label169
   887 label *label170
   888 label *label171

Modifications by Final phase, Dead Code Elimination, iteration 1 (-18 instructions):
 
     1 set :sumPrimesUpTo.0:sum 5
     2 label *label63
     3 label *label64
-    * setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
     4 label *label65
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
     5 label *label66
     6 read *tmp21 BITMAP 0
     7 op and :getBit.0*retval *tmp21 4
 
   305 op add :sumPrimesUpTo.0:sum 5 5
   306 label *label76
   307 label *label77
-    * setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   308 label *label78
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   309 label *label79
   310 read *tmp21 BITMAP 0
   311 op and :getBit.0*retval *tmp21 8
 
   521 label *label90
   522 label *label91
   523 label *label92
-    * setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   524 label *label93
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   525 label *label94
   526 read *tmp21 BITMAP 0
   527 op and :getBit.0*retval *tmp21 32
 
   645 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   646 label *label104
   647 label *label105
-    * setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   648 label *label106
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   649 label *label107
   650 read *tmp21 BITMAP 0
   651 op and :getBit.0*retval *tmp21 64
 
   741 label *label118
   742 label *label119
   743 label *label120
-    * setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   744 label *label121
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   745 label *label122
   746 read *tmp21 BITMAP 0
   747 op and :getBit.0*retval *tmp21 256
 
   799 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   800 label *label132
   801 label *label133
-    * setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   802 label *label134
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   803 label *label135
   804 read *tmp21 BITMAP 0
   805 op and :getBit.0*retval *tmp21 512
 
   841 label *label146
   842 label *label147
   843 label *label148
-    * setaddr :testAndSetMultiples.0*retaddr *label6 (h:*label6)
   844 label *label149
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   845 label *label150
   846 read *tmp21 BITMAP 0
   847 op and :getBit.0*retval *tmp21 2048
 
   858 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   859 label *label160
   860 label *label161
-    * setaddr :testAndSetMultiples.0*retaddr *label9 (h:*label9)
   861 label *label162
-    * setaddr :getBit.0*retaddr *label25 (h:*label25)
   862 label *label163
   863 read *tmp21 BITMAP 0
   864 op and :getBit.0*retval *tmp21 4096
 
   881 label *label12
   882 label *label33
   883 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * setaddr :getBit.0*retaddr *label15 (h:*label15)
   884 label *label35
   885 op idiv *tmp20 :getBit.0:bitIndex 48
   886 op mod *tmp22 :getBit.0:bitIndex 48
 
   894 label *label17
   895 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
   896 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * setaddr :getBit.0*retaddr *label18 (h:*label18)
   897 label *label37
   898 op idiv *tmp20 :getBit.0:bitIndex 48
   899 op mod *tmp22 :getBit.0:bitIndex 48

Modifications by Final phase, Single Step Elimination, iteration 1 (-9 instructions):
 
   301 label *label73
   302 label *label74
   303 label *label75
-    * jump *label76 equal :testAndSetMultiples.0:result false
   304 op add :sumPrimesUpTo.0:sum 5 5
   305 label *label76
   306 label *label77
 
   514 label *label86
   515 label *label87
   516 label *label88
-    * jump *label89 equal :testAndSetMultiples.0:result false
   517 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
   518 label *label89
   519 label *label90
 
   639 label *label101
   640 label *label102
   641 label *label103
-    * jump *label104 equal :testAndSetMultiples.0:result false
   642 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   643 label *label104
   644 label *label105
 
   732 label *label114
   733 label *label115
   734 label *label116
-    * jump *label117 equal :testAndSetMultiples.0:result false
   735 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   736 label *label117
   737 label *label118
 
   791 label *label129
   792 label *label130
   793 label *label131
-    * jump *label132 equal :testAndSetMultiples.0:result false
   794 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   795 label *label132
   796 label *label133
 
   830 label *label142
   831 label *label143
   832 label *label144
-    * jump *label145 equal :testAndSetMultiples.0:result false
   833 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   834 label *label145
   835 label *label146
 
   843 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   844 jump *label160 equal :testAndSetMultiples.0:result false
   845 label *label152
-    * jump *label156 always
   846 label *label156
   847 label *label157
   848 label *label158
 
   859 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   860 jump *label173 equal :testAndSetMultiples.0:result false
   861 label *label165
-    * jump *label169 always
   862 label *label169
   863 label *label170
   864 label *label171
 
   907 label *label2
   908 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   909 stop
-    * end

Modifications by Final phase, Single Step Elimination, iteration 2 (-2 instructions):
 
   841 op and :getBit.0*retval *tmp21 2048
   842 label *label151
   843 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label160 equal :testAndSetMultiples.0:result false
   844 label *label152
   845 label *label156
   846 label *label157
 
   856 op and :getBit.0*retval *tmp21 4096
   857 label *label164
   858 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label173 equal :testAndSetMultiples.0:result false
   859 label *label165
   860 label *label169
   861 label *label170

Final code before resolving virtual instructions:

set BITMAP bank1
set :sumPrimesUpTo.0:sum 5
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label76 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 0
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 536870912
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 65536
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8796093022208
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1024
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 4
write *tmp38 BITMAP 5
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum 5 5
label *label76
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 8
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label89 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 0
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 5
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
label *label89
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 32
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label104 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
label *label104
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 64
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label117 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
label *label117
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 256
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label132 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
label *label132
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 512
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label145 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
label *label145
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 2048
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label160 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
label *label160
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4096
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label173 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
label *label173
op add :sumPrimesUpTo.0:i 25 4
label *label33
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label16 notEqual :getBit.0*retval false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label16
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label19 notEqual :getBit.0*retval false
jump *label21 greaterThan :sumPrimesUpTo.0:i 500
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label21
label *label19
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
jump *label33 lessThanEq :sumPrimesUpTo.0:i 500
assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
stop
