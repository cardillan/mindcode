   117 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    23 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
   132 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 91):
  o Convert case at line 11:5 (segments: 30)                     size   -16, benefit     1048.3, efficiency   Infinity
  o Convert case at line 11:5 (segments: 4)                      size    +7, benefit     1053.9, efficiency    150.563
  * Convert case at line 11:5 (segments: 4, padded low)          size   +23, benefit     1054.0, efficiency     45.828 (+23 instructions)
  ! Convert case at line 11:5 (segments: 1, padded both)         size  +214, benefit     1069.6, efficiency      4.998

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     4 lookup block *tmp0 :i
     5 set :block *tmp0
     6 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @copper-wall
+    7 jump *label6 equal :identifyBlock:block @copper-wall
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000004
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal *tmp3 @copper-wall-large
+   13 jump *label8 equal :identifyBlock:block @copper-wall-large
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000008
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal *tmp3 @titanium-wall
+   19 jump *label10 equal :identifyBlock:block @titanium-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000010
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall-large
+   25 jump *label12 equal :identifyBlock:block @titanium-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000020
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal *tmp3 @plastanium-wall
+   31 jump *label14 equal :identifyBlock:block @plastanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000040
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall-large
+   37 jump *label16 equal :identifyBlock:block @plastanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000080
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal *tmp3 @thorium-wall
+   43 jump *label18 equal :identifyBlock:block @thorium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000100
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall-large
+   49 jump *label20 equal :identifyBlock:block @thorium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000200
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal *tmp3 @phase-wall
+   55 jump *label22 equal :identifyBlock:block @phase-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000400
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal *tmp3 @phase-wall-large
+   61 jump *label24 equal :identifyBlock:block @phase-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000800
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal *tmp3 @surge-wall
+   67 jump *label26 equal :identifyBlock:block @surge-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00001000
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal *tmp3 @surge-wall-large
+   73 jump *label28 equal :identifyBlock:block @surge-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal *tmp3 @scrap-wall
+   79 jump *label30 equal :identifyBlock:block @scrap-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00004000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall-large
+   85 jump *label32 equal :identifyBlock:block @scrap-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00008000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-huge
+   91 jump *label34 equal :identifyBlock:block @scrap-wall-huge
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00010000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-gigantic
+   97 jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00020000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal *tmp3 @tungsten-wall
+  103 jump *label38 equal :identifyBlock:block @tungsten-wall
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00040000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall-large
+  109 jump *label40 equal :identifyBlock:block @tungsten-wall-large
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00080000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal *tmp3 @beryllium-wall
+  115 jump *label42 equal :identifyBlock:block @beryllium-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00100000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall-large
+  121 jump *label44 equal :identifyBlock:block @beryllium-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00200000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal *tmp3 @carbide-wall
+  127 jump *label46 equal :identifyBlock:block @carbide-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00400000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall-large
+  133 jump *label48 equal :identifyBlock:block @carbide-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00800000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal *tmp3 @reinforced-surge-wall
+  139 jump *label50 equal :identifyBlock:block @reinforced-surge-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x01000000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall-large
+  145 jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   156 op and *tmp4 :total :bit
   157 jump *label53 equal *tmp4 false
   158 op or :total :total 0x800000000
-    * set *tmp5 :total
   159 jump *label54 always
   160 label *label53
   161 op or :total :total :bit
-    * set *tmp5 :total
   162 label *label54
   163 label *label1
   164 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 set :identifyBlock:block :block
     6 jump *label6 equal :identifyBlock:block @copper-wall
     7 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @copper-wall
+    6 jump *label6 equal :block @copper-wall
     7 jump *label5 always
     8 label *label6
     9 set *tmp2 0x00000004
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall-large
+   12 jump *label8 equal :block @copper-wall-large
    13 jump *label7 always
    14 label *label8
    15 set *tmp2 0x00000008
    16 jump *label4 always
    17 label *label7
-    * jump *label10 equal :identifyBlock:block @titanium-wall
+   18 jump *label10 equal :block @titanium-wall
    19 jump *label9 always
    20 label *label10
    21 set *tmp2 0x00000010
    22 jump *label4 always
    23 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall-large
+   24 jump *label12 equal :block @titanium-wall-large
    25 jump *label11 always
    26 label *label12
    27 set *tmp2 0x00000020
    28 jump *label4 always
    29 label *label11
-    * jump *label14 equal :identifyBlock:block @plastanium-wall
+   30 jump *label14 equal :block @plastanium-wall
    31 jump *label13 always
    32 label *label14
    33 set *tmp2 0x00000040
    34 jump *label4 always
    35 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall-large
+   36 jump *label16 equal :block @plastanium-wall-large
    37 jump *label15 always
    38 label *label16
    39 set *tmp2 0x00000080
    40 jump *label4 always
    41 label *label15
-    * jump *label18 equal :identifyBlock:block @thorium-wall
+   42 jump *label18 equal :block @thorium-wall
    43 jump *label17 always
    44 label *label18
    45 set *tmp2 0x00000100
    46 jump *label4 always
    47 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall-large
+   48 jump *label20 equal :block @thorium-wall-large
    49 jump *label19 always
    50 label *label20
    51 set *tmp2 0x00000200
    52 jump *label4 always
    53 label *label19
-    * jump *label22 equal :identifyBlock:block @phase-wall
+   54 jump *label22 equal :block @phase-wall
    55 jump *label21 always
    56 label *label22
    57 set *tmp2 0x00000400
    58 jump *label4 always
    59 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall-large
+   60 jump *label24 equal :block @phase-wall-large
    61 jump *label23 always
    62 label *label24
    63 set *tmp2 0x00000800
    64 jump *label4 always
    65 label *label23
-    * jump *label26 equal :identifyBlock:block @surge-wall
+   66 jump *label26 equal :block @surge-wall
    67 jump *label25 always
    68 label *label26
    69 set *tmp2 0x00001000
    70 jump *label4 always
    71 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall-large
+   72 jump *label28 equal :block @surge-wall-large
    73 jump *label27 always
    74 label *label28
    75 set *tmp2 0x00002000
    76 jump *label4 always
    77 label *label27
-    * jump *label30 equal :identifyBlock:block @scrap-wall
+   78 jump *label30 equal :block @scrap-wall
    79 jump *label29 always
    80 label *label30
    81 set *tmp2 0x00004000
    82 jump *label4 always
    83 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall-large
+   84 jump *label32 equal :block @scrap-wall-large
    85 jump *label31 always
    86 label *label32
    87 set *tmp2 0x00008000
    88 jump *label4 always
    89 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-huge
+   90 jump *label34 equal :block @scrap-wall-huge
    91 jump *label33 always
    92 label *label34
    93 set *tmp2 0x00010000
    94 jump *label4 always
    95 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
+   96 jump *label36 equal :block @scrap-wall-gigantic
    97 jump *label35 always
    98 label *label36
    99 set *tmp2 0x00020000
   100 jump *label4 always
   101 label *label35
-    * jump *label38 equal :identifyBlock:block @tungsten-wall
+  102 jump *label38 equal :block @tungsten-wall
   103 jump *label37 always
   104 label *label38
   105 set *tmp2 0x00040000
   106 jump *label4 always
   107 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall-large
+  108 jump *label40 equal :block @tungsten-wall-large
   109 jump *label39 always
   110 label *label40
   111 set *tmp2 0x00080000
   112 jump *label4 always
   113 label *label39
-    * jump *label42 equal :identifyBlock:block @beryllium-wall
+  114 jump *label42 equal :block @beryllium-wall
   115 jump *label41 always
   116 label *label42
   117 set *tmp2 0x00100000
   118 jump *label4 always
   119 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall-large
+  120 jump *label44 equal :block @beryllium-wall-large
   121 jump *label43 always
   122 label *label44
   123 set *tmp2 0x00200000
   124 jump *label4 always
   125 label *label43
-    * jump *label46 equal :identifyBlock:block @carbide-wall
+  126 jump *label46 equal :block @carbide-wall
   127 jump *label45 always
   128 label *label46
   129 set *tmp2 0x00400000
   130 jump *label4 always
   131 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall-large
+  132 jump *label48 equal :block @carbide-wall-large
   133 jump *label47 always
   134 label *label48
   135 set *tmp2 0x00800000
   136 jump *label4 always
   137 label *label47
-    * jump *label50 equal :identifyBlock:block @reinforced-surge-wall
+  138 jump *label50 equal :block @reinforced-surge-wall
   139 jump *label49 always
   140 label *label50
   141 set *tmp2 0x01000000
   142 jump *label4 always
   143 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
+  144 jump *label52 equal :block @reinforced-surge-wall-large
   145 jump *label51 always
   146 label *label52
   147 set *tmp2 0x02000000
 
   151 label *label4
   152 set *tmp1 *tmp2
   153 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  154 set :bit *tmp2
+  155 op and *tmp4 :total *tmp1
   156 jump *label53 equal *tmp4 false
   157 op or :total :total 0x800000000
   158 jump *label54 always
   159 label *label53
-    * op or :total :total :bit
+  160 op or :total :total *tmp1
   161 label *label54
   162 label *label1
   163 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
-    * set :identifyBlock:block :block
     5 jump *label6 equal :block @copper-wall
     6 jump *label5 always
     7 label *label6
 
   150 label *label4
   151 set *tmp1 *tmp2
   152 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  153 op and *tmp4 :total *tmp2
   154 jump *label53 equal *tmp4 false
   155 op or :total :total 0x800000000
   156 jump *label54 always
   157 label *label53
-    * op or :total :total *tmp1
+  158 op or :total :total *tmp2
   159 label *label54
   160 label *label1
   161 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   148 label *label51
   149 set *tmp2 0
   150 label *label4
-    * set *tmp1 *tmp2
   151 label *label3
   152 op and *tmp4 :total *tmp2
   153 jump *label53 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label55
     4 lookup block :block :i
     5 jump *label6 equal :block @copper-wall
     6 jump *label5 always
 
   158 label *label54
   159 label *label1
   160 op add :i :i 1
-    * jump *label0 always
+  161 jump *label55 lessThan :i @blockCount
   162 label *label2
   163 assertequals 0x03FFFFFC :total "Test selected blocks"
   164 end

Modifications by Convert case at line 11:5 (segments: 4, padded low) (+23 instructions):
 
     2 label *label0
     3 label *label55
     4 lookup block :block :i
-    * jump *label6 equal :block @copper-wall
-    * jump *label5 always
+    5 sensor *tmp6 :block @id
+    6 jump *label57 greaterThanEq *tmp6 203
+    7 jump *label56 greaterThanEq *tmp6 35
+    8 multijump *label58 *tmp6 0 (m:*label93)
+    9 multilabel *label58 (m:*label93)
+   10 jump *label56 always
+   11 multilabel *label59 (m:*label93)
+   12 jump *label56 always
+   13 multilabel *label60 (m:*label93)
+   14 jump *label56 always
+   15 multilabel *label61 (m:*label93)
+   16 jump *label56 always
+   17 multilabel *label62 (m:*label93)
+   18 jump *label56 always
+   19 multilabel *label63 (m:*label93)
+   20 jump *label56 always
+   21 multilabel *label64 (m:*label93)
+   22 jump *label56 always
+   23 multilabel *label65 (m:*label93)
+   24 jump *label56 always
+   25 multilabel *label66 (m:*label93)
+   26 jump *label56 always
+   27 multilabel *label67 (m:*label93)
+   28 jump *label56 always
+   29 multilabel *label68 (m:*label93)
+   30 jump *label56 always
+   31 multilabel *label69 (m:*label93)
+   32 jump *label56 always
+   33 multilabel *label70 (m:*label93)
+   34 jump *label56 always
+   35 multilabel *label71 (m:*label93)
+   36 jump *label56 always
+   37 multilabel *label72 (m:*label93)
+   38 jump *label56 always
+   39 multilabel *label73 (m:*label93)
+   40 jump *label56 always
+   41 multilabel *label74 (m:*label93)
+   42 jump *label56 always
+   43 multilabel *label75 (m:*label93)
+   44 jump *label6 always
+   45 multilabel *label76 (m:*label93)
+   46 jump *label8 always
+   47 multilabel *label77 (m:*label93)
+   48 jump *label10 always
+   49 multilabel *label78 (m:*label93)
+   50 jump *label12 always
+   51 multilabel *label79 (m:*label93)
+   52 jump *label14 always
+   53 multilabel *label80 (m:*label93)
+   54 jump *label16 always
+   55 multilabel *label81 (m:*label93)
+   56 jump *label18 always
+   57 multilabel *label82 (m:*label93)
+   58 jump *label20 always
+   59 multilabel *label83 (m:*label93)
+   60 jump *label22 always
+   61 multilabel *label84 (m:*label93)
+   62 jump *label24 always
+   63 multilabel *label85 (m:*label93)
+   64 jump *label26 always
+   65 multilabel *label86 (m:*label93)
+   66 jump *label28 always
+   67 multilabel *label87 (m:*label93)
+   68 jump *label56 always
+   69 multilabel *label88 (m:*label93)
+   70 jump *label56 always
+   71 multilabel *label89 (m:*label93)
+   72 jump *label30 always
+   73 multilabel *label90 (m:*label93)
+   74 jump *label32 always
+   75 multilabel *label91 (m:*label93)
+   76 jump *label34 always
+   77 multilabel *label92 (m:*label93)
+   78 label *label36
+   79 set *tmp2 0x00020000
+   80 jump *label4 always
+   81 label *label57
+   82 jump *label56 greaterThanEq *tmp6 235
+   83 jump *label38 lessThan *tmp6 204
+   84 multijump *label94 *tmp6 204 (m:*label125)
+   85 multilabel *label94 (m:*label125)
+   86 jump *label40 always
+   87 multilabel *label95 (m:*label125)
+   88 jump *label56 always
+   89 multilabel *label96 (m:*label125)
+   90 jump *label42 always
+   91 multilabel *label97 (m:*label125)
+   92 jump *label44 always
+   93 multilabel *label98 (m:*label125)
+   94 jump *label56 always
+   95 multilabel *label99 (m:*label125)
+   96 jump *label56 always
+   97 multilabel *label100 (m:*label125)
+   98 jump *label56 always
+   99 multilabel *label101 (m:*label125)
+  100 jump *label56 always
+  101 multilabel *label102 (m:*label125)
+  102 jump *label56 always
+  103 multilabel *label103 (m:*label125)
+  104 jump *label56 always
+  105 multilabel *label104 (m:*label125)
+  106 jump *label56 always
+  107 multilabel *label105 (m:*label125)
+  108 jump *label56 always
+  109 multilabel *label106 (m:*label125)
+  110 jump *label56 always
+  111 multilabel *label107 (m:*label125)
+  112 jump *label56 always
+  113 multilabel *label108 (m:*label125)
+  114 jump *label56 always
+  115 multilabel *label109 (m:*label125)
+  116 jump *label56 always
+  117 multilabel *label110 (m:*label125)
+  118 jump *label46 always
+  119 multilabel *label111 (m:*label125)
+  120 jump *label48 always
+  121 multilabel *label112 (m:*label125)
+  122 jump *label56 always
+  123 multilabel *label113 (m:*label125)
+  124 jump *label56 always
+  125 multilabel *label114 (m:*label125)
+  126 jump *label56 always
+  127 multilabel *label115 (m:*label125)
+  128 jump *label50 always
+  129 multilabel *label116 (m:*label125)
+  130 jump *label56 always
+  131 multilabel *label117 (m:*label125)
+  132 jump *label56 always
+  133 multilabel *label118 (m:*label125)
+  134 jump *label56 always
+  135 multilabel *label119 (m:*label125)
+  136 jump *label56 always
+  137 multilabel *label120 (m:*label125)
+  138 jump *label56 always
+  139 multilabel *label121 (m:*label125)
+  140 jump *label56 always
+  141 multilabel *label122 (m:*label125)
+  142 jump *label56 always
+  143 multilabel *label123 (m:*label125)
+  144 jump *label56 always
+  145 multilabel *label124 (m:*label125)
+  146 label *label52
+  147 set *tmp2 0x02000000
+  148 jump *label4 always
   149 label *label6
   150 set *tmp2 0x00000004
   151 jump *label4 always
   152 label *label5
-    * jump *label8 equal :block @copper-wall-large
-    * jump *label7 always
   153 label *label8
   154 set *tmp2 0x00000008
   155 jump *label4 always
   156 label *label7
-    * jump *label10 equal :block @titanium-wall
-    * jump *label9 always
   157 label *label10
   158 set *tmp2 0x00000010
   159 jump *label4 always
   160 label *label9
-    * jump *label12 equal :block @titanium-wall-large
-    * jump *label11 always
   161 label *label12
   162 set *tmp2 0x00000020
   163 jump *label4 always
   164 label *label11
-    * jump *label14 equal :block @plastanium-wall
-    * jump *label13 always
   165 label *label14
   166 set *tmp2 0x00000040
   167 jump *label4 always
   168 label *label13
-    * jump *label16 equal :block @plastanium-wall-large
-    * jump *label15 always
   169 label *label16
   170 set *tmp2 0x00000080
   171 jump *label4 always
   172 label *label15
-    * jump *label18 equal :block @thorium-wall
-    * jump *label17 always
   173 label *label18
   174 set *tmp2 0x00000100
   175 jump *label4 always
   176 label *label17
-    * jump *label20 equal :block @thorium-wall-large
-    * jump *label19 always
   177 label *label20
   178 set *tmp2 0x00000200
   179 jump *label4 always
   180 label *label19
-    * jump *label22 equal :block @phase-wall
-    * jump *label21 always
   181 label *label22
   182 set *tmp2 0x00000400
   183 jump *label4 always
   184 label *label21
-    * jump *label24 equal :block @phase-wall-large
-    * jump *label23 always
   185 label *label24
   186 set *tmp2 0x00000800
   187 jump *label4 always
   188 label *label23
-    * jump *label26 equal :block @surge-wall
-    * jump *label25 always
   189 label *label26
   190 set *tmp2 0x00001000
   191 jump *label4 always
   192 label *label25
-    * jump *label28 equal :block @surge-wall-large
-    * jump *label27 always
   193 label *label28
   194 set *tmp2 0x00002000
   195 jump *label4 always
   196 label *label27
-    * jump *label30 equal :block @scrap-wall
-    * jump *label29 always
   197 label *label30
   198 set *tmp2 0x00004000
   199 jump *label4 always
   200 label *label29
-    * jump *label32 equal :block @scrap-wall-large
-    * jump *label31 always
   201 label *label32
   202 set *tmp2 0x00008000
   203 jump *label4 always
   204 label *label31
-    * jump *label34 equal :block @scrap-wall-huge
-    * jump *label33 always
   205 label *label34
   206 set *tmp2 0x00010000
   207 jump *label4 always
   208 label *label33
-    * jump *label36 equal :block @scrap-wall-gigantic
-    * jump *label35 always
-    * label *label36
-    * set *tmp2 0x00020000
-    * jump *label4 always
   209 label *label35
-    * jump *label38 equal :block @tungsten-wall
-    * jump *label37 always
   210 label *label38
   211 set *tmp2 0x00040000
   212 jump *label4 always
   213 label *label37
-    * jump *label40 equal :block @tungsten-wall-large
-    * jump *label39 always
   214 label *label40
   215 set *tmp2 0x00080000
   216 jump *label4 always
   217 label *label39
-    * jump *label42 equal :block @beryllium-wall
-    * jump *label41 always
   218 label *label42
   219 set *tmp2 0x00100000
   220 jump *label4 always
   221 label *label41
-    * jump *label44 equal :block @beryllium-wall-large
-    * jump *label43 always
   222 label *label44
   223 set *tmp2 0x00200000
   224 jump *label4 always
   225 label *label43
-    * jump *label46 equal :block @carbide-wall
-    * jump *label45 always
   226 label *label46
   227 set *tmp2 0x00400000
   228 jump *label4 always
   229 label *label45
-    * jump *label48 equal :block @carbide-wall-large
-    * jump *label47 always
   230 label *label48
   231 set *tmp2 0x00800000
   232 jump *label4 always
   233 label *label47
-    * jump *label50 equal :block @reinforced-surge-wall
-    * jump *label49 always
   234 label *label50
   235 set *tmp2 0x01000000
   236 jump *label4 always
   237 label *label49
-    * jump *label52 equal :block @reinforced-surge-wall-large
-    * jump *label51 always
-    * label *label52
-    * set *tmp2 0x02000000
-    * jump *label4 always
   238 label *label51
+  239 label *label56
   240 set *tmp2 0
   241 label *label4
   242 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label55
     3 lookup block :block :i
     4 sensor *tmp6 :block @id
 
    74 multilabel *label91 (m:*label93)
    75 jump *label34 always
    76 multilabel *label92 (m:*label93)
-    * label *label36
    77 set *tmp2 0x00020000
    78 jump *label4 always
    79 label *label57
 
   141 multilabel *label123 (m:*label125)
   142 jump *label56 always
   143 multilabel *label124 (m:*label125)
-    * label *label52
   144 set *tmp2 0x02000000
   145 jump *label4 always
   146 label *label6
   147 set *tmp2 0x00000004
   148 jump *label4 always
-    * label *label5
   149 label *label8
   150 set *tmp2 0x00000008
   151 jump *label4 always
-    * label *label7
   152 label *label10
   153 set *tmp2 0x00000010
   154 jump *label4 always
-    * label *label9
   155 label *label12
   156 set *tmp2 0x00000020
   157 jump *label4 always
-    * label *label11
   158 label *label14
   159 set *tmp2 0x00000040
   160 jump *label4 always
-    * label *label13
   161 label *label16
   162 set *tmp2 0x00000080
   163 jump *label4 always
-    * label *label15
   164 label *label18
   165 set *tmp2 0x00000100
   166 jump *label4 always
-    * label *label17
   167 label *label20
   168 set *tmp2 0x00000200
   169 jump *label4 always
-    * label *label19
   170 label *label22
   171 set *tmp2 0x00000400
   172 jump *label4 always
-    * label *label21
   173 label *label24
   174 set *tmp2 0x00000800
   175 jump *label4 always
-    * label *label23
   176 label *label26
   177 set *tmp2 0x00001000
   178 jump *label4 always
-    * label *label25
   179 label *label28
   180 set *tmp2 0x00002000
   181 jump *label4 always
-    * label *label27
   182 label *label30
   183 set *tmp2 0x00004000
   184 jump *label4 always
-    * label *label29
   185 label *label32
   186 set *tmp2 0x00008000
   187 jump *label4 always
-    * label *label31
   188 label *label34
   189 set *tmp2 0x00010000
   190 jump *label4 always
-    * label *label33
-    * label *label35
   191 label *label38
   192 set *tmp2 0x00040000
   193 jump *label4 always
-    * label *label37
   194 label *label40
   195 set *tmp2 0x00080000
   196 jump *label4 always
-    * label *label39
   197 label *label42
   198 set *tmp2 0x00100000
   199 jump *label4 always
-    * label *label41
   200 label *label44
   201 set *tmp2 0x00200000
   202 jump *label4 always
-    * label *label43
   203 label *label46
   204 set *tmp2 0x00400000
   205 jump *label4 always
-    * label *label45
   206 label *label48
   207 set *tmp2 0x00800000
   208 jump *label4 always
-    * label *label47
   209 label *label50
   210 set *tmp2 0x01000000
   211 jump *label4 always
-    * label *label49
-    * label *label51
   212 label *label56
   213 set *tmp2 0
   214 label *label4
-    * label *label3
   215 op and *tmp4 :total *tmp2
   216 jump *label53 equal *tmp4 false
   217 op or :total :total 0x800000000
 
   219 label *label53
   220 op or :total :total *tmp2
   221 label *label54
-    * label *label1
   222 op add :i :i 1
   223 jump *label55 lessThan :i @blockCount
-    * label *label2
   224 assertequals 0x03FFFFFC :total "Test selected blocks"
   225 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label55
lookup block :block :i
sensor *tmp6 :block @id
jump *label57 greaterThanEq *tmp6 203
jump *label56 greaterThanEq *tmp6 35
multijump *label58 *tmp6 0
multilabel *label58
jump *label56 always
multilabel *label59
jump *label56 always
multilabel *label60
jump *label56 always
multilabel *label61
jump *label56 always
multilabel *label62
jump *label56 always
multilabel *label63
jump *label56 always
multilabel *label64
jump *label56 always
multilabel *label65
jump *label56 always
multilabel *label66
jump *label56 always
multilabel *label67
jump *label56 always
multilabel *label68
jump *label56 always
multilabel *label69
jump *label56 always
multilabel *label70
jump *label56 always
multilabel *label71
jump *label56 always
multilabel *label72
jump *label56 always
multilabel *label73
jump *label56 always
multilabel *label74
jump *label56 always
multilabel *label75
jump *label6 always
multilabel *label76
jump *label8 always
multilabel *label77
jump *label10 always
multilabel *label78
jump *label12 always
multilabel *label79
jump *label14 always
multilabel *label80
jump *label16 always
multilabel *label81
jump *label18 always
multilabel *label82
jump *label20 always
multilabel *label83
jump *label22 always
multilabel *label84
jump *label24 always
multilabel *label85
jump *label26 always
multilabel *label86
jump *label28 always
multilabel *label87
jump *label56 always
multilabel *label88
jump *label56 always
multilabel *label89
jump *label30 always
multilabel *label90
jump *label32 always
multilabel *label91
jump *label34 always
multilabel *label92
set *tmp2 0x00020000
jump *label4 always
label *label57
jump *label56 greaterThanEq *tmp6 235
jump *label38 lessThan *tmp6 204
multijump *label94 *tmp6 204
multilabel *label94
jump *label40 always
multilabel *label95
jump *label56 always
multilabel *label96
jump *label42 always
multilabel *label97
jump *label44 always
multilabel *label98
jump *label56 always
multilabel *label99
jump *label56 always
multilabel *label100
jump *label56 always
multilabel *label101
jump *label56 always
multilabel *label102
jump *label56 always
multilabel *label103
jump *label56 always
multilabel *label104
jump *label56 always
multilabel *label105
jump *label56 always
multilabel *label106
jump *label56 always
multilabel *label107
jump *label56 always
multilabel *label108
jump *label56 always
multilabel *label109
jump *label56 always
multilabel *label110
jump *label46 always
multilabel *label111
jump *label48 always
multilabel *label112
jump *label56 always
multilabel *label113
jump *label56 always
multilabel *label114
jump *label56 always
multilabel *label115
jump *label50 always
multilabel *label116
jump *label56 always
multilabel *label117
jump *label56 always
multilabel *label118
jump *label56 always
multilabel *label119
jump *label56 always
multilabel *label120
jump *label56 always
multilabel *label121
jump *label56 always
multilabel *label122
jump *label56 always
multilabel *label123
jump *label56 always
multilabel *label124
set *tmp2 0x02000000
jump *label4 always
label *label6
set *tmp2 0x00000004
jump *label4 always
label *label8
set *tmp2 0x00000008
jump *label4 always
label *label10
set *tmp2 0x00000010
jump *label4 always
label *label12
set *tmp2 0x00000020
jump *label4 always
label *label14
set *tmp2 0x00000040
jump *label4 always
label *label16
set *tmp2 0x00000080
jump *label4 always
label *label18
set *tmp2 0x00000100
jump *label4 always
label *label20
set *tmp2 0x00000200
jump *label4 always
label *label22
set *tmp2 0x00000400
jump *label4 always
label *label24
set *tmp2 0x00000800
jump *label4 always
label *label26
set *tmp2 0x00001000
jump *label4 always
label *label28
set *tmp2 0x00002000
jump *label4 always
label *label30
set *tmp2 0x00004000
jump *label4 always
label *label32
set *tmp2 0x00008000
jump *label4 always
label *label34
set *tmp2 0x00010000
jump *label4 always
label *label38
set *tmp2 0x00040000
jump *label4 always
label *label40
set *tmp2 0x00080000
jump *label4 always
label *label42
set *tmp2 0x00100000
jump *label4 always
label *label44
set *tmp2 0x00200000
jump *label4 always
label *label46
set *tmp2 0x00400000
jump *label4 always
label *label48
set *tmp2 0x00800000
jump *label4 always
label *label50
set *tmp2 0x01000000
jump *label4 always
label *label56
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label53 equal *tmp4 false
op or :total :total 0x800000000
jump *label54 always
label *label53
op or :total :total *tmp2
label *label54
op add :i :i 1
jump *label55 lessThan :i @blockCount
assertequals 0x03FFFFFC :total "Test selected blocks"
end
