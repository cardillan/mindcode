   588 instructions before optimizations.
    60 instructions eliminated by Temp Variables Elimination (7 iterations).
    15 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Single Step Elimination (7 iterations).
     8 instructions modified by Expression Optimization (2 passes, 4 iterations).
   132 instructions eliminated by If Expression Optimization (5 iterations).
   272 instructions eliminated by Data Flow Optimization (3 passes, 11 iterations).
    39 instructions eliminated by Print Merging.
    69 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-15 instructions):
 
    48 print *tmp8
    49 print *tmp11
    50 assertprints :compare:expected :compare:title
-    * set *tmp0 null
    51 label *label0
    52 set :compare.1:title "comparison 2"
    53 set :compare.1:a null
 
    99 print *tmp21
   100 print *tmp24
   101 assertprints :compare.1:expected :compare.1:title
-    * set *tmp13 null
   102 label *label13
   103 set :compare.2:title "comparison 3"
   104 set :compare.2:a null
 
   150 print *tmp34
   151 print *tmp37
   152 assertprints :compare.2:expected :compare.2:title
-    * set *tmp26 null
   153 label *label26
   154 set :compare.3:title "comparison 4"
   155 set :compare.3:a @coal
 
   201 print *tmp47
   202 print *tmp50
   203 assertprints :compare.3:expected :compare.3:title
-    * set *tmp39 null
   204 label *label39
   205 set :compare.4:title "comparison 5"
   206 set :compare.4:a @coal
 
   252 print *tmp60
   253 print *tmp63
   254 assertprints :compare.4:expected :compare.4:title
-    * set *tmp52 null
   255 label *label52
   256 set :compare.5:title "comparison 6"
   257 set :compare.5:a @coal
 
   303 print *tmp73
   304 print *tmp76
   305 assertprints :compare.5:expected :compare.5:title
-    * set *tmp65 null
   306 label *label65
   307 set :compare.6:title "comparison 7"
   308 set :compare.6:a @coal
 
   354 print *tmp86
   355 print *tmp89
   356 assertprints :compare.6:expected :compare.6:title
-    * set *tmp78 null
   357 label *label78
   358 set :compare.7:title "comparison 8"
   359 set :compare.7:a A
 
   405 print *tmp99
   406 print *tmp102
   407 assertprints :compare.7:expected :compare.7:title
-    * set *tmp91 null
   408 label *label91
   409 set :compare.8:title "comparison 9"
   410 set :compare.8:a A
 
   456 print *tmp112
   457 print *tmp115
   458 assertprints :compare.8:expected :compare.8:title
-    * set *tmp104 null
   459 label *label104
   460 set :compare.9:title "comparison 10"
   461 set :compare.9:a A
 
   507 print *tmp125
   508 print *tmp128
   509 assertprints :compare.9:expected :compare.9:title
-    * set *tmp117 null
   510 label *label117
   511 set :compare.10:title "comparison 11"
   512 set :compare.10:a "A"
 
   558 print *tmp138
   559 print *tmp141
   560 assertprints :compare.10:expected :compare.10:title
-    * set *tmp130 null
   561 label *label130
   562 set :compare.11:title "comparison 12"
   563 set :compare.11:a "A"
 
   609 print *tmp151
   610 print *tmp154
   611 assertprints :compare.11:expected :compare.11:title
-    * set *tmp143 null
   612 label *label143
   613 set :compare.12:title "comparison 13"
   614 set :compare.12:a "A"
 
   660 print *tmp164
   661 print *tmp167
   662 assertprints :compare.12:expected :compare.12:title
-    * set *tmp156 null
   663 label *label156
   664 set :compare.13:title "comparison 14"
   665 set :compare.13:a "A"
 
   711 print *tmp177
   712 print *tmp180
   713 assertprints :compare.13:expected :compare.13:title
-    * set *tmp169 null
   714 label *label169
   715 set :compare.14:title "comparison 15"
   716 set :compare.14:a "A"
 
   762 print *tmp190
   763 print *tmp193
   764 assertprints :compare.14:expected :compare.14:title
-    * set *tmp182 null
   765 label *label182
   766 stop
   767 end

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-60 instructions):
 
     3 set :compare:b 0
     4 set :compare:expected "TFFT"
     5 assertflush
-    * op equal *tmp1 :compare:a :compare:b
-    * set :eval:b *tmp1
+    6 op equal :eval:b :compare:a :compare:b
     7 jump *label2 equal :eval:b false
     8 set *tmp3 "T"
     9 jump *label3 always
 
    12 label *label3
    13 set *tmp2 *tmp3
    14 label *label1
-    * op notEqual *tmp4 :compare:a :compare:b
-    * set :eval.1:b *tmp4
+   15 op notEqual :eval.1:b :compare:a :compare:b
    16 jump *label5 equal :eval.1:b false
    17 set *tmp6 "T"
    18 jump *label6 always
 
    21 label *label6
    22 set *tmp5 *tmp6
    23 label *label4
-    * op strictEqual *tmp7 :compare:a :compare:b
-    * set :eval.2:b *tmp7
+   24 op strictEqual :eval.2:b :compare:a :compare:b
    25 jump *label8 equal :eval.2:b false
    26 set *tmp9 "T"
    27 jump *label9 always
 
    30 label *label9
    31 set *tmp8 *tmp9
    32 label *label7
-    * op strictNotEqual *tmp10 :compare:a :compare:b
-    * set :eval.3:b *tmp10
+   33 op strictNotEqual :eval.3:b :compare:a :compare:b
    34 jump *label11 equal :eval.3:b false
    35 set *tmp12 "T"
    36 jump *label12 always
 
    50 set :compare.1:b 1
    51 set :compare.1:expected "FTFT"
    52 assertflush
-    * op equal *tmp14 :compare.1:a :compare.1:b
-    * set :eval.4:b *tmp14
+   53 op equal :eval.4:b :compare.1:a :compare.1:b
    54 jump *label15 equal :eval.4:b false
    55 set *tmp16 "T"
    56 jump *label16 always
 
    59 label *label16
    60 set *tmp15 *tmp16
    61 label *label14
-    * op notEqual *tmp17 :compare.1:a :compare.1:b
-    * set :eval.5:b *tmp17
+   62 op notEqual :eval.5:b :compare.1:a :compare.1:b
    63 jump *label18 equal :eval.5:b false
    64 set *tmp19 "T"
    65 jump *label19 always
 
    68 label *label19
    69 set *tmp18 *tmp19
    70 label *label17
-    * op strictEqual *tmp20 :compare.1:a :compare.1:b
-    * set :eval.6:b *tmp20
+   71 op strictEqual :eval.6:b :compare.1:a :compare.1:b
    72 jump *label21 equal :eval.6:b false
    73 set *tmp22 "T"
    74 jump *label22 always
 
    77 label *label22
    78 set *tmp21 *tmp22
    79 label *label20
-    * op strictNotEqual *tmp23 :compare.1:a :compare.1:b
-    * set :eval.7:b *tmp23
+   80 op strictNotEqual :eval.7:b :compare.1:a :compare.1:b
    81 jump *label24 equal :eval.7:b false
    82 set *tmp25 "T"
    83 jump *label25 always
 
    97 set :compare.2:b 2
    98 set :compare.2:expected "FTFT"
    99 assertflush
-    * op equal *tmp27 :compare.2:a :compare.2:b
-    * set :eval.8:b *tmp27
+  100 op equal :eval.8:b :compare.2:a :compare.2:b
   101 jump *label28 equal :eval.8:b false
   102 set *tmp29 "T"
   103 jump *label29 always
 
   106 label *label29
   107 set *tmp28 *tmp29
   108 label *label27
-    * op notEqual *tmp30 :compare.2:a :compare.2:b
-    * set :eval.9:b *tmp30
+  109 op notEqual :eval.9:b :compare.2:a :compare.2:b
   110 jump *label31 equal :eval.9:b false
   111 set *tmp32 "T"
   112 jump *label32 always
 
   115 label *label32
   116 set *tmp31 *tmp32
   117 label *label30
-    * op strictEqual *tmp33 :compare.2:a :compare.2:b
-    * set :eval.10:b *tmp33
+  118 op strictEqual :eval.10:b :compare.2:a :compare.2:b
   119 jump *label34 equal :eval.10:b false
   120 set *tmp35 "T"
   121 jump *label35 always
 
   124 label *label35
   125 set *tmp34 *tmp35
   126 label *label33
-    * op strictNotEqual *tmp36 :compare.2:a :compare.2:b
-    * set :eval.11:b *tmp36
+  127 op strictNotEqual :eval.11:b :compare.2:a :compare.2:b
   128 jump *label37 equal :eval.11:b false
   129 set *tmp38 "T"
   130 jump *label38 always
 
   144 set :compare.3:b 0
   145 set :compare.3:expected "FTFT"
   146 assertflush
-    * op equal *tmp40 :compare.3:a :compare.3:b
-    * set :eval.12:b *tmp40
+  147 op equal :eval.12:b :compare.3:a :compare.3:b
   148 jump *label41 equal :eval.12:b false
   149 set *tmp42 "T"
   150 jump *label42 always
 
   153 label *label42
   154 set *tmp41 *tmp42
   155 label *label40
-    * op notEqual *tmp43 :compare.3:a :compare.3:b
-    * set :eval.13:b *tmp43
+  156 op notEqual :eval.13:b :compare.3:a :compare.3:b
   157 jump *label44 equal :eval.13:b false
   158 set *tmp45 "T"
   159 jump *label45 always
 
   162 label *label45
   163 set *tmp44 *tmp45
   164 label *label43
-    * op strictEqual *tmp46 :compare.3:a :compare.3:b
-    * set :eval.14:b *tmp46
+  165 op strictEqual :eval.14:b :compare.3:a :compare.3:b
   166 jump *label47 equal :eval.14:b false
   167 set *tmp48 "T"
   168 jump *label48 always
 
   171 label *label48
   172 set *tmp47 *tmp48
   173 label *label46
-    * op strictNotEqual *tmp49 :compare.3:a :compare.3:b
-    * set :eval.15:b *tmp49
+  174 op strictNotEqual :eval.15:b :compare.3:a :compare.3:b
   175 jump *label50 equal :eval.15:b false
   176 set *tmp51 "T"
   177 jump *label51 always
 
   191 set :compare.4:b 1
   192 set :compare.4:expected "TFFT"
   193 assertflush
-    * op equal *tmp53 :compare.4:a :compare.4:b
-    * set :eval.16:b *tmp53
+  194 op equal :eval.16:b :compare.4:a :compare.4:b
   195 jump *label54 equal :eval.16:b false
   196 set *tmp55 "T"
   197 jump *label55 always
 
   200 label *label55
   201 set *tmp54 *tmp55
   202 label *label53
-    * op notEqual *tmp56 :compare.4:a :compare.4:b
-    * set :eval.17:b *tmp56
+  203 op notEqual :eval.17:b :compare.4:a :compare.4:b
   204 jump *label57 equal :eval.17:b false
   205 set *tmp58 "T"
   206 jump *label58 always
 
   209 label *label58
   210 set *tmp57 *tmp58
   211 label *label56
-    * op strictEqual *tmp59 :compare.4:a :compare.4:b
-    * set :eval.18:b *tmp59
+  212 op strictEqual :eval.18:b :compare.4:a :compare.4:b
   213 jump *label60 equal :eval.18:b false
   214 set *tmp61 "T"
   215 jump *label61 always
 
   218 label *label61
   219 set *tmp60 *tmp61
   220 label *label59
-    * op strictNotEqual *tmp62 :compare.4:a :compare.4:b
-    * set :eval.19:b *tmp62
+  221 op strictNotEqual :eval.19:b :compare.4:a :compare.4:b
   222 jump *label63 equal :eval.19:b false
   223 set *tmp64 "T"
   224 jump *label64 always
 
   238 set :compare.5:b 2
   239 set :compare.5:expected "FTFT"
   240 assertflush
-    * op equal *tmp66 :compare.5:a :compare.5:b
-    * set :eval.20:b *tmp66
+  241 op equal :eval.20:b :compare.5:a :compare.5:b
   242 jump *label67 equal :eval.20:b false
   243 set *tmp68 "T"
   244 jump *label68 always
 
   247 label *label68
   248 set *tmp67 *tmp68
   249 label *label66
-    * op notEqual *tmp69 :compare.5:a :compare.5:b
-    * set :eval.21:b *tmp69
+  250 op notEqual :eval.21:b :compare.5:a :compare.5:b
   251 jump *label70 equal :eval.21:b false
   252 set *tmp71 "T"
   253 jump *label71 always
 
   256 label *label71
   257 set *tmp70 *tmp71
   258 label *label69
-    * op strictEqual *tmp72 :compare.5:a :compare.5:b
-    * set :eval.22:b *tmp72
+  259 op strictEqual :eval.22:b :compare.5:a :compare.5:b
   260 jump *label73 equal :eval.22:b false
   261 set *tmp74 "T"
   262 jump *label74 always
 
   265 label *label74
   266 set *tmp73 *tmp74
   267 label *label72
-    * op strictNotEqual *tmp75 :compare.5:a :compare.5:b
-    * set :eval.23:b *tmp75
+  268 op strictNotEqual :eval.23:b :compare.5:a :compare.5:b
   269 jump *label76 equal :eval.23:b false
   270 set *tmp77 "T"
   271 jump *label77 always
 
   285 set :compare.6:b @lead
   286 set :compare.6:expected "FTFT"
   287 assertflush
-    * op equal *tmp79 :compare.6:a :compare.6:b
-    * set :eval.24:b *tmp79
+  288 op equal :eval.24:b :compare.6:a :compare.6:b
   289 jump *label80 equal :eval.24:b false
   290 set *tmp81 "T"
   291 jump *label81 always
 
   294 label *label81
   295 set *tmp80 *tmp81
   296 label *label79
-    * op notEqual *tmp82 :compare.6:a :compare.6:b
-    * set :eval.25:b *tmp82
+  297 op notEqual :eval.25:b :compare.6:a :compare.6:b
   298 jump *label83 equal :eval.25:b false
   299 set *tmp84 "T"
   300 jump *label84 always
 
   303 label *label84
   304 set *tmp83 *tmp84
   305 label *label82
-    * op strictEqual *tmp85 :compare.6:a :compare.6:b
-    * set :eval.26:b *tmp85
+  306 op strictEqual :eval.26:b :compare.6:a :compare.6:b
   307 jump *label86 equal :eval.26:b false
   308 set *tmp87 "T"
   309 jump *label87 always
 
   312 label *label87
   313 set *tmp86 *tmp87
   314 label *label85
-    * op strictNotEqual *tmp88 :compare.6:a :compare.6:b
-    * set :eval.27:b *tmp88
+  315 op strictNotEqual :eval.27:b :compare.6:a :compare.6:b
   316 jump *label89 equal :eval.27:b false
   317 set *tmp90 "T"
   318 jump *label90 always
 
   332 set :compare.7:b A
   333 set :compare.7:expected "TFTF"
   334 assertflush
-    * op equal *tmp92 :compare.7:a :compare.7:b
-    * set :eval.28:b *tmp92
+  335 op equal :eval.28:b :compare.7:a :compare.7:b
   336 jump *label93 equal :eval.28:b false
   337 set *tmp94 "T"
   338 jump *label94 always
 
   341 label *label94
   342 set *tmp93 *tmp94
   343 label *label92
-    * op notEqual *tmp95 :compare.7:a :compare.7:b
-    * set :eval.29:b *tmp95
+  344 op notEqual :eval.29:b :compare.7:a :compare.7:b
   345 jump *label96 equal :eval.29:b false
   346 set *tmp97 "T"
   347 jump *label97 always
 
   350 label *label97
   351 set *tmp96 *tmp97
   352 label *label95
-    * op strictEqual *tmp98 :compare.7:a :compare.7:b
-    * set :eval.30:b *tmp98
+  353 op strictEqual :eval.30:b :compare.7:a :compare.7:b
   354 jump *label99 equal :eval.30:b false
   355 set *tmp100 "T"
   356 jump *label100 always
 
   359 label *label100
   360 set *tmp99 *tmp100
   361 label *label98
-    * op strictNotEqual *tmp101 :compare.7:a :compare.7:b
-    * set :eval.31:b *tmp101
+  362 op strictNotEqual :eval.31:b :compare.7:a :compare.7:b
   363 jump *label102 equal :eval.31:b false
   364 set *tmp103 "T"
   365 jump *label103 always
 
   379 set :compare.8:b 0
   380 set :compare.8:expected "TFTF"
   381 assertflush
-    * op equal *tmp105 :compare.8:a :compare.8:b
-    * set :eval.32:b *tmp105
+  382 op equal :eval.32:b :compare.8:a :compare.8:b
   383 jump *label106 equal :eval.32:b false
   384 set *tmp107 "T"
   385 jump *label107 always
 
   388 label *label107
   389 set *tmp106 *tmp107
   390 label *label105
-    * op notEqual *tmp108 :compare.8:a :compare.8:b
-    * set :eval.33:b *tmp108
+  391 op notEqual :eval.33:b :compare.8:a :compare.8:b
   392 jump *label109 equal :eval.33:b false
   393 set *tmp110 "T"
   394 jump *label110 always
 
   397 label *label110
   398 set *tmp109 *tmp110
   399 label *label108
-    * op strictEqual *tmp111 :compare.8:a :compare.8:b
-    * set :eval.34:b *tmp111
+  400 op strictEqual :eval.34:b :compare.8:a :compare.8:b
   401 jump *label112 equal :eval.34:b false
   402 set *tmp113 "T"
   403 jump *label113 always
 
   406 label *label113
   407 set *tmp112 *tmp113
   408 label *label111
-    * op strictNotEqual *tmp114 :compare.8:a :compare.8:b
-    * set :eval.35:b *tmp114
+  409 op strictNotEqual :eval.35:b :compare.8:a :compare.8:b
   410 jump *label115 equal :eval.35:b false
   411 set *tmp116 "T"
   412 jump *label116 always
 
   426 set :compare.9:b 1
   427 set :compare.9:expected "FTFT"
   428 assertflush
-    * op equal *tmp118 :compare.9:a :compare.9:b
-    * set :eval.36:b *tmp118
+  429 op equal :eval.36:b :compare.9:a :compare.9:b
   430 jump *label119 equal :eval.36:b false
   431 set *tmp120 "T"
   432 jump *label120 always
 
   435 label *label120
   436 set *tmp119 *tmp120
   437 label *label118
-    * op notEqual *tmp121 :compare.9:a :compare.9:b
-    * set :eval.37:b *tmp121
+  438 op notEqual :eval.37:b :compare.9:a :compare.9:b
   439 jump *label122 equal :eval.37:b false
   440 set *tmp123 "T"
   441 jump *label123 always
 
   444 label *label123
   445 set *tmp122 *tmp123
   446 label *label121
-    * op strictEqual *tmp124 :compare.9:a :compare.9:b
-    * set :eval.38:b *tmp124
+  447 op strictEqual :eval.38:b :compare.9:a :compare.9:b
   448 jump *label125 equal :eval.38:b false
   449 set *tmp126 "T"
   450 jump *label126 always
 
   453 label *label126
   454 set *tmp125 *tmp126
   455 label *label124
-    * op strictNotEqual *tmp127 :compare.9:a :compare.9:b
-    * set :eval.39:b *tmp127
+  456 op strictNotEqual :eval.39:b :compare.9:a :compare.9:b
   457 jump *label128 equal :eval.39:b false
   458 set *tmp129 "T"
   459 jump *label129 always
 
   473 set :compare.10:b 0
   474 set :compare.10:expected "FTFT"
   475 assertflush
-    * op equal *tmp131 :compare.10:a :compare.10:b
-    * set :eval.40:b *tmp131
+  476 op equal :eval.40:b :compare.10:a :compare.10:b
   477 jump *label132 equal :eval.40:b false
   478 set *tmp133 "T"
   479 jump *label133 always
 
   482 label *label133
   483 set *tmp132 *tmp133
   484 label *label131
-    * op notEqual *tmp134 :compare.10:a :compare.10:b
-    * set :eval.41:b *tmp134
+  485 op notEqual :eval.41:b :compare.10:a :compare.10:b
   486 jump *label135 equal :eval.41:b false
   487 set *tmp136 "T"
   488 jump *label136 always
 
   491 label *label136
   492 set *tmp135 *tmp136
   493 label *label134
-    * op strictEqual *tmp137 :compare.10:a :compare.10:b
-    * set :eval.42:b *tmp137
+  494 op strictEqual :eval.42:b :compare.10:a :compare.10:b
   495 jump *label138 equal :eval.42:b false
   496 set *tmp139 "T"
   497 jump *label139 always
 
   500 label *label139
   501 set *tmp138 *tmp139
   502 label *label137
-    * op strictNotEqual *tmp140 :compare.10:a :compare.10:b
-    * set :eval.43:b *tmp140
+  503 op strictNotEqual :eval.43:b :compare.10:a :compare.10:b
   504 jump *label141 equal :eval.43:b false
   505 set *tmp142 "T"
   506 jump *label142 always
 
   520 set :compare.11:b 1
   521 set :compare.11:expected "TFFT"
   522 assertflush
-    * op equal *tmp144 :compare.11:a :compare.11:b
-    * set :eval.44:b *tmp144
+  523 op equal :eval.44:b :compare.11:a :compare.11:b
   524 jump *label145 equal :eval.44:b false
   525 set *tmp146 "T"
   526 jump *label146 always
 
   529 label *label146
   530 set *tmp145 *tmp146
   531 label *label144
-    * op notEqual *tmp147 :compare.11:a :compare.11:b
-    * set :eval.45:b *tmp147
+  532 op notEqual :eval.45:b :compare.11:a :compare.11:b
   533 jump *label148 equal :eval.45:b false
   534 set *tmp149 "T"
   535 jump *label149 always
 
   538 label *label149
   539 set *tmp148 *tmp149
   540 label *label147
-    * op strictEqual *tmp150 :compare.11:a :compare.11:b
-    * set :eval.46:b *tmp150
+  541 op strictEqual :eval.46:b :compare.11:a :compare.11:b
   542 jump *label151 equal :eval.46:b false
   543 set *tmp152 "T"
   544 jump *label152 always
 
   547 label *label152
   548 set *tmp151 *tmp152
   549 label *label150
-    * op strictNotEqual *tmp153 :compare.11:a :compare.11:b
-    * set :eval.47:b *tmp153
+  550 op strictNotEqual :eval.47:b :compare.11:a :compare.11:b
   551 jump *label154 equal :eval.47:b false
   552 set *tmp155 "T"
   553 jump *label155 always
 
   567 set :compare.12:b 2
   568 set :compare.12:expected "FTFT"
   569 assertflush
-    * op equal *tmp157 :compare.12:a :compare.12:b
-    * set :eval.48:b *tmp157
+  570 op equal :eval.48:b :compare.12:a :compare.12:b
   571 jump *label158 equal :eval.48:b false
   572 set *tmp159 "T"
   573 jump *label159 always
 
   576 label *label159
   577 set *tmp158 *tmp159
   578 label *label157
-    * op notEqual *tmp160 :compare.12:a :compare.12:b
-    * set :eval.49:b *tmp160
+  579 op notEqual :eval.49:b :compare.12:a :compare.12:b
   580 jump *label161 equal :eval.49:b false
   581 set *tmp162 "T"
   582 jump *label162 always
 
   585 label *label162
   586 set *tmp161 *tmp162
   587 label *label160
-    * op strictEqual *tmp163 :compare.12:a :compare.12:b
-    * set :eval.50:b *tmp163
+  588 op strictEqual :eval.50:b :compare.12:a :compare.12:b
   589 jump *label164 equal :eval.50:b false
   590 set *tmp165 "T"
   591 jump *label165 always
 
   594 label *label165
   595 set *tmp164 *tmp165
   596 label *label163
-    * op strictNotEqual *tmp166 :compare.12:a :compare.12:b
-    * set :eval.51:b *tmp166
+  597 op strictNotEqual :eval.51:b :compare.12:a :compare.12:b
   598 jump *label167 equal :eval.51:b false
   599 set *tmp168 "T"
   600 jump *label168 always
 
   614 set :compare.13:b "B"
   615 set :compare.13:expected "FTFT"
   616 assertflush
-    * op equal *tmp170 :compare.13:a :compare.13:b
-    * set :eval.52:b *tmp170
+  617 op equal :eval.52:b :compare.13:a :compare.13:b
   618 jump *label171 equal :eval.52:b false
   619 set *tmp172 "T"
   620 jump *label172 always
 
   623 label *label172
   624 set *tmp171 *tmp172
   625 label *label170
-    * op notEqual *tmp173 :compare.13:a :compare.13:b
-    * set :eval.53:b *tmp173
+  626 op notEqual :eval.53:b :compare.13:a :compare.13:b
   627 jump *label174 equal :eval.53:b false
   628 set *tmp175 "T"
   629 jump *label175 always
 
   632 label *label175
   633 set *tmp174 *tmp175
   634 label *label173
-    * op strictEqual *tmp176 :compare.13:a :compare.13:b
-    * set :eval.54:b *tmp176
+  635 op strictEqual :eval.54:b :compare.13:a :compare.13:b
   636 jump *label177 equal :eval.54:b false
   637 set *tmp178 "T"
   638 jump *label178 always
 
   641 label *label178
   642 set *tmp177 *tmp178
   643 label *label176
-    * op strictNotEqual *tmp179 :compare.13:a :compare.13:b
-    * set :eval.55:b *tmp179
+  644 op strictNotEqual :eval.55:b :compare.13:a :compare.13:b
   645 jump *label180 equal :eval.55:b false
   646 set *tmp181 "T"
   647 jump *label181 always
 
   661 set :compare.14:b "A"
   662 set :compare.14:expected "TFTF"
   663 assertflush
-    * op equal *tmp183 :compare.14:a :compare.14:b
-    * set :eval.56:b *tmp183
+  664 op equal :eval.56:b :compare.14:a :compare.14:b
   665 jump *label184 equal :eval.56:b false
   666 set *tmp185 "T"
   667 jump *label185 always
 
   670 label *label185
   671 set *tmp184 *tmp185
   672 label *label183
-    * op notEqual *tmp186 :compare.14:a :compare.14:b
-    * set :eval.57:b *tmp186
+  673 op notEqual :eval.57:b :compare.14:a :compare.14:b
   674 jump *label187 equal :eval.57:b false
   675 set *tmp188 "T"
   676 jump *label188 always
 
   679 label *label188
   680 set *tmp187 *tmp188
   681 label *label186
-    * op strictEqual *tmp189 :compare.14:a :compare.14:b
-    * set :eval.58:b *tmp189
+  682 op strictEqual :eval.58:b :compare.14:a :compare.14:b
   683 jump *label190 equal :eval.58:b false
   684 set *tmp191 "T"
   685 jump *label191 always
 
   688 label *label191
   689 set *tmp190 *tmp191
   690 label *label189
-    * op strictNotEqual *tmp192 :compare.14:a :compare.14:b
-    * set :eval.59:b *tmp192
+  691 op strictNotEqual :eval.59:b :compare.14:a :compare.14:b
   692 jump *label193 equal :eval.59:b false
   693 set *tmp194 "T"
   694 jump *label194 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-12 instructions):
 
     3 set :compare:b 0
     4 set :compare:expected "TFFT"
     5 assertflush
-    * op equal :eval:b :compare:a :compare:b
-    * jump *label2 equal :eval:b false
+    6 op equal :eval:b null 0
+    7 jump *label2 equal true false
     8 set *tmp3 "T"
     9 jump *label3 always
    10 label *label2
-    * set *tmp3 "F"
    11 label *label3
-    * set *tmp2 *tmp3
+   12 set *tmp2 "T"
    13 label *label1
-    * op notEqual :eval.1:b :compare:a :compare:b
-    * jump *label5 equal :eval.1:b false
-    * set *tmp6 "T"
+   14 op notEqual :eval.1:b null 0
+   15 jump *label5 equal false false
    16 jump *label6 always
    17 label *label5
    18 set *tmp6 "F"
    19 label *label6
-    * set *tmp5 *tmp6
+   20 set *tmp5 "F"
    21 label *label4
-    * op strictEqual :eval.2:b :compare:a :compare:b
-    * jump *label8 equal :eval.2:b false
-    * set *tmp9 "T"
+   22 op strictEqual :eval.2:b null 0
+   23 jump *label8 equal false false
    24 jump *label9 always
    25 label *label8
    26 set *tmp9 "F"
    27 label *label9
-    * set *tmp8 *tmp9
+   28 set *tmp8 "F"
    29 label *label7
-    * op strictNotEqual :eval.3:b :compare:a :compare:b
-    * jump *label11 equal :eval.3:b false
+   30 op strictNotEqual :eval.3:b null 0
+   31 jump *label11 equal true false
    32 set *tmp12 "T"
    33 jump *label12 always
    34 label *label11
-    * set *tmp12 "F"
    35 label *label12
-    * set *tmp11 *tmp12
+   36 set *tmp11 "T"
    37 label *label10
-    * print *tmp2
-    * print *tmp5
-    * print *tmp8
-    * print *tmp11
-    * assertprints :compare:expected :compare:title
+   38 print *tmp3
+   39 print *tmp6
+   40 print *tmp9
+   41 print *tmp12
+   42 assertprints "TFFT" "comparison 1"
    43 label *label0
    44 set :compare.1:title "comparison 2"
    45 set :compare.1:a null
    46 set :compare.1:b 1
    47 set :compare.1:expected "FTFT"
    48 assertflush
-    * op equal :eval.4:b :compare.1:a :compare.1:b
-    * jump *label15 equal :eval.4:b false
-    * set *tmp16 "T"
+   49 op equal :eval.4:b null 1
+   50 jump *label15 equal false false
    51 jump *label16 always
    52 label *label15
    53 set *tmp16 "F"
    54 label *label16
-    * set *tmp15 *tmp16
+   55 set *tmp15 "F"
    56 label *label14
-    * op notEqual :eval.5:b :compare.1:a :compare.1:b
-    * jump *label18 equal :eval.5:b false
+   57 op notEqual :eval.5:b null 1
+   58 jump *label18 equal true false
    59 set *tmp19 "T"
    60 jump *label19 always
    61 label *label18
-    * set *tmp19 "F"
    62 label *label19
-    * set *tmp18 *tmp19
+   63 set *tmp18 "T"
    64 label *label17
-    * op strictEqual :eval.6:b :compare.1:a :compare.1:b
-    * jump *label21 equal :eval.6:b false
-    * set *tmp22 "T"
+   65 op strictEqual :eval.6:b null 1
+   66 jump *label21 equal false false
    67 jump *label22 always
    68 label *label21
    69 set *tmp22 "F"
    70 label *label22
-    * set *tmp21 *tmp22
+   71 set *tmp21 "F"
    72 label *label20
-    * op strictNotEqual :eval.7:b :compare.1:a :compare.1:b
-    * jump *label24 equal :eval.7:b false
+   73 op strictNotEqual :eval.7:b null 1
+   74 jump *label24 equal true false
    75 set *tmp25 "T"
    76 jump *label25 always
    77 label *label24
-    * set *tmp25 "F"
    78 label *label25
-    * set *tmp24 *tmp25
+   79 set *tmp24 "T"
    80 label *label23
-    * print *tmp15
-    * print *tmp18
-    * print *tmp21
-    * print *tmp24
-    * assertprints :compare.1:expected :compare.1:title
+   81 print *tmp16
+   82 print *tmp19
+   83 print *tmp22
+   84 print *tmp25
+   85 assertprints "FTFT" "comparison 2"
    86 label *label13
    87 set :compare.2:title "comparison 3"
    88 set :compare.2:a null
    89 set :compare.2:b 2
    90 set :compare.2:expected "FTFT"
    91 assertflush
-    * op equal :eval.8:b :compare.2:a :compare.2:b
-    * jump *label28 equal :eval.8:b false
-    * set *tmp29 "T"
+   92 op equal :eval.8:b null 2
+   93 jump *label28 equal false false
    94 jump *label29 always
    95 label *label28
    96 set *tmp29 "F"
    97 label *label29
-    * set *tmp28 *tmp29
+   98 set *tmp28 "F"
    99 label *label27
-    * op notEqual :eval.9:b :compare.2:a :compare.2:b
-    * jump *label31 equal :eval.9:b false
+  100 op notEqual :eval.9:b null 2
+  101 jump *label31 equal true false
   102 set *tmp32 "T"
   103 jump *label32 always
   104 label *label31
-    * set *tmp32 "F"
   105 label *label32
-    * set *tmp31 *tmp32
+  106 set *tmp31 "T"
   107 label *label30
-    * op strictEqual :eval.10:b :compare.2:a :compare.2:b
-    * jump *label34 equal :eval.10:b false
-    * set *tmp35 "T"
+  108 op strictEqual :eval.10:b null 2
+  109 jump *label34 equal false false
   110 jump *label35 always
   111 label *label34
   112 set *tmp35 "F"
   113 label *label35
-    * set *tmp34 *tmp35
+  114 set *tmp34 "F"
   115 label *label33
-    * op strictNotEqual :eval.11:b :compare.2:a :compare.2:b
-    * jump *label37 equal :eval.11:b false
+  116 op strictNotEqual :eval.11:b null 2
+  117 jump *label37 equal true false
   118 set *tmp38 "T"
   119 jump *label38 always
   120 label *label37
-    * set *tmp38 "F"
   121 label *label38
-    * set *tmp37 *tmp38
+  122 set *tmp37 "T"
   123 label *label36
-    * print *tmp28
-    * print *tmp31
-    * print *tmp34
-    * print *tmp37
-    * assertprints :compare.2:expected :compare.2:title
+  124 print *tmp29
+  125 print *tmp32
+  126 print *tmp35
+  127 print *tmp38
+  128 assertprints "FTFT" "comparison 3"
   129 label *label26
   130 set :compare.3:title "comparison 4"
   131 set :compare.3:a @coal
   132 set :compare.3:b 0
   133 set :compare.3:expected "FTFT"
   134 assertflush
-    * op equal :eval.12:b :compare.3:a :compare.3:b
+  135 op equal :eval.12:b @coal 0
   136 jump *label41 equal :eval.12:b false
   137 set *tmp42 "T"
   138 jump *label42 always
 
   141 label *label42
   142 set *tmp41 *tmp42
   143 label *label40
-    * op notEqual :eval.13:b :compare.3:a :compare.3:b
+  144 op notEqual :eval.13:b @coal 0
   145 jump *label44 equal :eval.13:b false
   146 set *tmp45 "T"
   147 jump *label45 always
 
   150 label *label45
   151 set *tmp44 *tmp45
   152 label *label43
-    * op strictEqual :eval.14:b :compare.3:a :compare.3:b
+  153 op strictEqual :eval.14:b @coal 0
   154 jump *label47 equal :eval.14:b false
   155 set *tmp48 "T"
   156 jump *label48 always
 
   159 label *label48
   160 set *tmp47 *tmp48
   161 label *label46
-    * op strictNotEqual :eval.15:b :compare.3:a :compare.3:b
+  162 op strictNotEqual :eval.15:b @coal 0
   163 jump *label50 equal :eval.15:b false
   164 set *tmp51 "T"
   165 jump *label51 always
 
   168 label *label51
   169 set *tmp50 *tmp51
   170 label *label49
-    * print *tmp41
-    * print *tmp44
-    * print *tmp47
-    * print *tmp50
-    * assertprints :compare.3:expected :compare.3:title
+  171 print *tmp42
+  172 print *tmp45
+  173 print *tmp48
+  174 print *tmp51
+  175 assertprints "FTFT" "comparison 4"
   176 label *label39
   177 set :compare.4:title "comparison 5"
   178 set :compare.4:a @coal
   179 set :compare.4:b 1
   180 set :compare.4:expected "TFFT"
   181 assertflush
-    * op equal :eval.16:b :compare.4:a :compare.4:b
+  182 op equal :eval.16:b @coal 1
   183 jump *label54 equal :eval.16:b false
   184 set *tmp55 "T"
   185 jump *label55 always
 
   188 label *label55
   189 set *tmp54 *tmp55
   190 label *label53
-    * op notEqual :eval.17:b :compare.4:a :compare.4:b
+  191 op notEqual :eval.17:b @coal 1
   192 jump *label57 equal :eval.17:b false
   193 set *tmp58 "T"
   194 jump *label58 always
 
   197 label *label58
   198 set *tmp57 *tmp58
   199 label *label56
-    * op strictEqual :eval.18:b :compare.4:a :compare.4:b
+  200 op strictEqual :eval.18:b @coal 1
   201 jump *label60 equal :eval.18:b false
   202 set *tmp61 "T"
   203 jump *label61 always
 
   206 label *label61
   207 set *tmp60 *tmp61
   208 label *label59
-    * op strictNotEqual :eval.19:b :compare.4:a :compare.4:b
+  209 op strictNotEqual :eval.19:b @coal 1
   210 jump *label63 equal :eval.19:b false
   211 set *tmp64 "T"
   212 jump *label64 always
 
   215 label *label64
   216 set *tmp63 *tmp64
   217 label *label62
-    * print *tmp54
-    * print *tmp57
-    * print *tmp60
-    * print *tmp63
-    * assertprints :compare.4:expected :compare.4:title
+  218 print *tmp55
+  219 print *tmp58
+  220 print *tmp61
+  221 print *tmp64
+  222 assertprints "TFFT" "comparison 5"
   223 label *label52
   224 set :compare.5:title "comparison 6"
   225 set :compare.5:a @coal
   226 set :compare.5:b 2
   227 set :compare.5:expected "FTFT"
   228 assertflush
-    * op equal :eval.20:b :compare.5:a :compare.5:b
+  229 op equal :eval.20:b @coal 2
   230 jump *label67 equal :eval.20:b false
   231 set *tmp68 "T"
   232 jump *label68 always
 
   235 label *label68
   236 set *tmp67 *tmp68
   237 label *label66
-    * op notEqual :eval.21:b :compare.5:a :compare.5:b
+  238 op notEqual :eval.21:b @coal 2
   239 jump *label70 equal :eval.21:b false
   240 set *tmp71 "T"
   241 jump *label71 always
 
   244 label *label71
   245 set *tmp70 *tmp71
   246 label *label69
-    * op strictEqual :eval.22:b :compare.5:a :compare.5:b
+  247 op strictEqual :eval.22:b @coal 2
   248 jump *label73 equal :eval.22:b false
   249 set *tmp74 "T"
   250 jump *label74 always
 
   253 label *label74
   254 set *tmp73 *tmp74
   255 label *label72
-    * op strictNotEqual :eval.23:b :compare.5:a :compare.5:b
+  256 op strictNotEqual :eval.23:b @coal 2
   257 jump *label76 equal :eval.23:b false
   258 set *tmp77 "T"
   259 jump *label77 always
 
   262 label *label77
   263 set *tmp76 *tmp77
   264 label *label75
-    * print *tmp67
-    * print *tmp70
-    * print *tmp73
-    * print *tmp76
-    * assertprints :compare.5:expected :compare.5:title
+  265 print *tmp68
+  266 print *tmp71
+  267 print *tmp74
+  268 print *tmp77
+  269 assertprints "FTFT" "comparison 6"
   270 label *label65
   271 set :compare.6:title "comparison 7"
   272 set :compare.6:a @coal
   273 set :compare.6:b @lead
   274 set :compare.6:expected "FTFT"
   275 assertflush
-    * op equal :eval.24:b :compare.6:a :compare.6:b
+  276 op equal :eval.24:b @coal @lead
   277 jump *label80 equal :eval.24:b false
   278 set *tmp81 "T"
   279 jump *label81 always
 
   282 label *label81
   283 set *tmp80 *tmp81
   284 label *label79
-    * op notEqual :eval.25:b :compare.6:a :compare.6:b
+  285 op notEqual :eval.25:b @coal @lead
   286 jump *label83 equal :eval.25:b false
   287 set *tmp84 "T"
   288 jump *label84 always
 
   291 label *label84
   292 set *tmp83 *tmp84
   293 label *label82
-    * op strictEqual :eval.26:b :compare.6:a :compare.6:b
+  294 op strictEqual :eval.26:b @coal @lead
   295 jump *label86 equal :eval.26:b false
   296 set *tmp87 "T"
   297 jump *label87 always
 
   300 label *label87
   301 set *tmp86 *tmp87
   302 label *label85
-    * op strictNotEqual :eval.27:b :compare.6:a :compare.6:b
+  303 op strictNotEqual :eval.27:b @coal @lead
   304 jump *label89 equal :eval.27:b false
   305 set *tmp90 "T"
   306 jump *label90 always
 
   309 label *label90
   310 set *tmp89 *tmp90
   311 label *label88
-    * print *tmp80
-    * print *tmp83
-    * print *tmp86
-    * print *tmp89
-    * assertprints :compare.6:expected :compare.6:title
+  312 print *tmp81
+  313 print *tmp84
+  314 print *tmp87
+  315 print *tmp90
+  316 assertprints "FTFT" "comparison 7"
   317 label *label78
   318 set :compare.7:title "comparison 8"
   319 set :compare.7:a A
   320 set :compare.7:b A
   321 set :compare.7:expected "TFTF"
   322 assertflush
-    * op equal :eval.28:b :compare.7:a :compare.7:b
+  323 op equal :eval.28:b A A
   324 jump *label93 equal :eval.28:b false
   325 set *tmp94 "T"
   326 jump *label94 always
 
   329 label *label94
   330 set *tmp93 *tmp94
   331 label *label92
-    * op notEqual :eval.29:b :compare.7:a :compare.7:b
+  332 op notEqual :eval.29:b A A
   333 jump *label96 equal :eval.29:b false
   334 set *tmp97 "T"
   335 jump *label97 always
 
   338 label *label97
   339 set *tmp96 *tmp97
   340 label *label95
-    * op strictEqual :eval.30:b :compare.7:a :compare.7:b
+  341 op strictEqual :eval.30:b A A
   342 jump *label99 equal :eval.30:b false
   343 set *tmp100 "T"
   344 jump *label100 always
 
   347 label *label100
   348 set *tmp99 *tmp100
   349 label *label98
-    * op strictNotEqual :eval.31:b :compare.7:a :compare.7:b
+  350 op strictNotEqual :eval.31:b A A
   351 jump *label102 equal :eval.31:b false
   352 set *tmp103 "T"
   353 jump *label103 always
 
   356 label *label103
   357 set *tmp102 *tmp103
   358 label *label101
-    * print *tmp93
-    * print *tmp96
-    * print *tmp99
-    * print *tmp102
-    * assertprints :compare.7:expected :compare.7:title
+  359 print *tmp94
+  360 print *tmp97
+  361 print *tmp100
+  362 print *tmp103
+  363 assertprints "TFTF" "comparison 8"
   364 label *label91
   365 set :compare.8:title "comparison 9"
   366 set :compare.8:a A
   367 set :compare.8:b 0
   368 set :compare.8:expected "TFTF"
   369 assertflush
-    * op equal :eval.32:b :compare.8:a :compare.8:b
+  370 op equal :eval.32:b A 0
   371 jump *label106 equal :eval.32:b false
   372 set *tmp107 "T"
   373 jump *label107 always
 
   376 label *label107
   377 set *tmp106 *tmp107
   378 label *label105
-    * op notEqual :eval.33:b :compare.8:a :compare.8:b
+  379 op notEqual :eval.33:b A 0
   380 jump *label109 equal :eval.33:b false
   381 set *tmp110 "T"
   382 jump *label110 always
 
   385 label *label110
   386 set *tmp109 *tmp110
   387 label *label108
-    * op strictEqual :eval.34:b :compare.8:a :compare.8:b
+  388 op strictEqual :eval.34:b A 0
   389 jump *label112 equal :eval.34:b false
   390 set *tmp113 "T"
   391 jump *label113 always
 
   394 label *label113
   395 set *tmp112 *tmp113
   396 label *label111
-    * op strictNotEqual :eval.35:b :compare.8:a :compare.8:b
+  397 op strictNotEqual :eval.35:b A 0
   398 jump *label115 equal :eval.35:b false
   399 set *tmp116 "T"
   400 jump *label116 always
 
   403 label *label116
   404 set *tmp115 *tmp116
   405 label *label114
-    * print *tmp106
-    * print *tmp109
-    * print *tmp112
-    * print *tmp115
-    * assertprints :compare.8:expected :compare.8:title
+  406 print *tmp107
+  407 print *tmp110
+  408 print *tmp113
+  409 print *tmp116
+  410 assertprints "TFTF" "comparison 9"
   411 label *label104
   412 set :compare.9:title "comparison 10"
   413 set :compare.9:a A
   414 set :compare.9:b 1
   415 set :compare.9:expected "FTFT"
   416 assertflush
-    * op equal :eval.36:b :compare.9:a :compare.9:b
+  417 op equal :eval.36:b A 1
   418 jump *label119 equal :eval.36:b false
   419 set *tmp120 "T"
   420 jump *label120 always
 
   423 label *label120
   424 set *tmp119 *tmp120
   425 label *label118
-    * op notEqual :eval.37:b :compare.9:a :compare.9:b
+  426 op notEqual :eval.37:b A 1
   427 jump *label122 equal :eval.37:b false
   428 set *tmp123 "T"
   429 jump *label123 always
 
   432 label *label123
   433 set *tmp122 *tmp123
   434 label *label121
-    * op strictEqual :eval.38:b :compare.9:a :compare.9:b
+  435 op strictEqual :eval.38:b A 1
   436 jump *label125 equal :eval.38:b false
   437 set *tmp126 "T"
   438 jump *label126 always
 
   441 label *label126
   442 set *tmp125 *tmp126
   443 label *label124
-    * op strictNotEqual :eval.39:b :compare.9:a :compare.9:b
+  444 op strictNotEqual :eval.39:b A 1
   445 jump *label128 equal :eval.39:b false
   446 set *tmp129 "T"
   447 jump *label129 always
 
   450 label *label129
   451 set *tmp128 *tmp129
   452 label *label127
-    * print *tmp119
-    * print *tmp122
-    * print *tmp125
-    * print *tmp128
-    * assertprints :compare.9:expected :compare.9:title
+  453 print *tmp120
+  454 print *tmp123
+  455 print *tmp126
+  456 print *tmp129
+  457 assertprints "FTFT" "comparison 10"
   458 label *label117
   459 set :compare.10:title "comparison 11"
   460 set :compare.10:a "A"
   461 set :compare.10:b 0
   462 set :compare.10:expected "FTFT"
   463 assertflush
-    * op equal :eval.40:b :compare.10:a :compare.10:b
+  464 op equal :eval.40:b "A" 0
   465 jump *label132 equal :eval.40:b false
   466 set *tmp133 "T"
   467 jump *label133 always
 
   470 label *label133
   471 set *tmp132 *tmp133
   472 label *label131
-    * op notEqual :eval.41:b :compare.10:a :compare.10:b
+  473 op notEqual :eval.41:b "A" 0
   474 jump *label135 equal :eval.41:b false
   475 set *tmp136 "T"
   476 jump *label136 always
 
   479 label *label136
   480 set *tmp135 *tmp136
   481 label *label134
-    * op strictEqual :eval.42:b :compare.10:a :compare.10:b
+  482 op strictEqual :eval.42:b "A" 0
   483 jump *label138 equal :eval.42:b false
   484 set *tmp139 "T"
   485 jump *label139 always
 
   488 label *label139
   489 set *tmp138 *tmp139
   490 label *label137
-    * op strictNotEqual :eval.43:b :compare.10:a :compare.10:b
+  491 op strictNotEqual :eval.43:b "A" 0
   492 jump *label141 equal :eval.43:b false
   493 set *tmp142 "T"
   494 jump *label142 always
 
   497 label *label142
   498 set *tmp141 *tmp142
   499 label *label140
-    * print *tmp132
-    * print *tmp135
-    * print *tmp138
-    * print *tmp141
-    * assertprints :compare.10:expected :compare.10:title
+  500 print *tmp133
+  501 print *tmp136
+  502 print *tmp139
+  503 print *tmp142
+  504 assertprints "FTFT" "comparison 11"
   505 label *label130
   506 set :compare.11:title "comparison 12"
   507 set :compare.11:a "A"
   508 set :compare.11:b 1
   509 set :compare.11:expected "TFFT"
   510 assertflush
-    * op equal :eval.44:b :compare.11:a :compare.11:b
+  511 op equal :eval.44:b "A" 1
   512 jump *label145 equal :eval.44:b false
   513 set *tmp146 "T"
   514 jump *label146 always
 
   517 label *label146
   518 set *tmp145 *tmp146
   519 label *label144
-    * op notEqual :eval.45:b :compare.11:a :compare.11:b
+  520 op notEqual :eval.45:b "A" 1
   521 jump *label148 equal :eval.45:b false
   522 set *tmp149 "T"
   523 jump *label149 always
 
   526 label *label149
   527 set *tmp148 *tmp149
   528 label *label147
-    * op strictEqual :eval.46:b :compare.11:a :compare.11:b
+  529 op strictEqual :eval.46:b "A" 1
   530 jump *label151 equal :eval.46:b false
   531 set *tmp152 "T"
   532 jump *label152 always
 
   535 label *label152
   536 set *tmp151 *tmp152
   537 label *label150
-    * op strictNotEqual :eval.47:b :compare.11:a :compare.11:b
+  538 op strictNotEqual :eval.47:b "A" 1
   539 jump *label154 equal :eval.47:b false
   540 set *tmp155 "T"
   541 jump *label155 always
 
   544 label *label155
   545 set *tmp154 *tmp155
   546 label *label153
-    * print *tmp145
-    * print *tmp148
-    * print *tmp151
-    * print *tmp154
-    * assertprints :compare.11:expected :compare.11:title
+  547 print *tmp146
+  548 print *tmp149
+  549 print *tmp152
+  550 print *tmp155
+  551 assertprints "TFFT" "comparison 12"
   552 label *label143
   553 set :compare.12:title "comparison 13"
   554 set :compare.12:a "A"
   555 set :compare.12:b 2
   556 set :compare.12:expected "FTFT"
   557 assertflush
-    * op equal :eval.48:b :compare.12:a :compare.12:b
+  558 op equal :eval.48:b "A" 2
   559 jump *label158 equal :eval.48:b false
   560 set *tmp159 "T"
   561 jump *label159 always
 
   564 label *label159
   565 set *tmp158 *tmp159
   566 label *label157
-    * op notEqual :eval.49:b :compare.12:a :compare.12:b
+  567 op notEqual :eval.49:b "A" 2
   568 jump *label161 equal :eval.49:b false
   569 set *tmp162 "T"
   570 jump *label162 always
 
   573 label *label162
   574 set *tmp161 *tmp162
   575 label *label160
-    * op strictEqual :eval.50:b :compare.12:a :compare.12:b
+  576 op strictEqual :eval.50:b "A" 2
   577 jump *label164 equal :eval.50:b false
   578 set *tmp165 "T"
   579 jump *label165 always
 
   582 label *label165
   583 set *tmp164 *tmp165
   584 label *label163
-    * op strictNotEqual :eval.51:b :compare.12:a :compare.12:b
+  585 op strictNotEqual :eval.51:b "A" 2
   586 jump *label167 equal :eval.51:b false
   587 set *tmp168 "T"
   588 jump *label168 always
 
   591 label *label168
   592 set *tmp167 *tmp168
   593 label *label166
-    * print *tmp158
-    * print *tmp161
-    * print *tmp164
-    * print *tmp167
-    * assertprints :compare.12:expected :compare.12:title
+  594 print *tmp159
+  595 print *tmp162
+  596 print *tmp165
+  597 print *tmp168
+  598 assertprints "FTFT" "comparison 13"
   599 label *label156
   600 set :compare.13:title "comparison 14"
   601 set :compare.13:a "A"
   602 set :compare.13:b "B"
   603 set :compare.13:expected "FTFT"
   604 assertflush
-    * op equal :eval.52:b :compare.13:a :compare.13:b
+  605 op equal :eval.52:b "A" "B"
   606 jump *label171 equal :eval.52:b false
   607 set *tmp172 "T"
   608 jump *label172 always
 
   611 label *label172
   612 set *tmp171 *tmp172
   613 label *label170
-    * op notEqual :eval.53:b :compare.13:a :compare.13:b
+  614 op notEqual :eval.53:b "A" "B"
   615 jump *label174 equal :eval.53:b false
   616 set *tmp175 "T"
   617 jump *label175 always
 
   620 label *label175
   621 set *tmp174 *tmp175
   622 label *label173
-    * op strictEqual :eval.54:b :compare.13:a :compare.13:b
+  623 op strictEqual :eval.54:b "A" "B"
   624 jump *label177 equal :eval.54:b false
   625 set *tmp178 "T"
   626 jump *label178 always
 
   629 label *label178
   630 set *tmp177 *tmp178
   631 label *label176
-    * op strictNotEqual :eval.55:b :compare.13:a :compare.13:b
+  632 op strictNotEqual :eval.55:b "A" "B"
   633 jump *label180 equal :eval.55:b false
   634 set *tmp181 "T"
   635 jump *label181 always
 
   638 label *label181
   639 set *tmp180 *tmp181
   640 label *label179
-    * print *tmp171
-    * print *tmp174
-    * print *tmp177
-    * print *tmp180
-    * assertprints :compare.13:expected :compare.13:title
+  641 print *tmp172
+  642 print *tmp175
+  643 print *tmp178
+  644 print *tmp181
+  645 assertprints "FTFT" "comparison 14"
   646 label *label169
   647 set :compare.14:title "comparison 15"
   648 set :compare.14:a "A"
   649 set :compare.14:b "A"
   650 set :compare.14:expected "TFTF"
   651 assertflush
-    * op equal :eval.56:b :compare.14:a :compare.14:b
+  652 op equal :eval.56:b "A" "A"
   653 jump *label184 equal :eval.56:b false
   654 set *tmp185 "T"
   655 jump *label185 always
 
   658 label *label185
   659 set *tmp184 *tmp185
   660 label *label183
-    * op notEqual :eval.57:b :compare.14:a :compare.14:b
+  661 op notEqual :eval.57:b "A" "A"
   662 jump *label187 equal :eval.57:b false
   663 set *tmp188 "T"
   664 jump *label188 always
 
   667 label *label188
   668 set *tmp187 *tmp188
   669 label *label186
-    * op strictEqual :eval.58:b :compare.14:a :compare.14:b
+  670 op strictEqual :eval.58:b "A" "A"
   671 jump *label190 equal :eval.58:b false
   672 set *tmp191 "T"
   673 jump *label191 always
 
   676 label *label191
   677 set *tmp190 *tmp191
   678 label *label189
-    * op strictNotEqual :eval.59:b :compare.14:a :compare.14:b
+  679 op strictNotEqual :eval.59:b "A" "A"
   680 jump *label193 equal :eval.59:b false
   681 set *tmp194 "T"
   682 jump *label194 always
 
   685 label *label194
   686 set *tmp193 *tmp194
   687 label *label192
-    * print *tmp184
-    * print *tmp187
-    * print *tmp190
-    * print *tmp193
-    * assertprints :compare.14:expected :compare.14:title
+  688 print *tmp185
+  689 print *tmp188
+  690 print *tmp191
+  691 print *tmp194
+  692 assertprints "TFTF" "comparison 15"
   693 label *label182
   694 stop
   695 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-132 instructions):
     0 set A 0
-    * set :compare:title "comparison 1"
-    * set :compare:a null
-    * set :compare:b 0
-    * set :compare:expected "TFFT"
     1 assertflush
-    * op equal :eval:b null 0
     2 jump *label2 equal true false
     3 set *tmp3 "T"
     4 jump *label3 always
     5 label *label2
     6 label *label3
-    * set *tmp2 "T"
     7 label *label1
-    * op notEqual :eval.1:b null 0
     8 jump *label5 equal false false
     9 jump *label6 always
    10 label *label5
    11 set *tmp6 "F"
    12 label *label6
-    * set *tmp5 "F"
    13 label *label4
-    * op strictEqual :eval.2:b null 0
    14 jump *label8 equal false false
    15 jump *label9 always
    16 label *label8
    17 set *tmp9 "F"
    18 label *label9
-    * set *tmp8 "F"
    19 label *label7
-    * op strictNotEqual :eval.3:b null 0
    20 jump *label11 equal true false
    21 set *tmp12 "T"
    22 jump *label12 always
    23 label *label11
    24 label *label12
-    * set *tmp11 "T"
    25 label *label10
-    * print *tmp3
-    * print *tmp6
-    * print *tmp9
-    * print *tmp12
+   26 print "T"
+   27 print "F"
+   28 print "F"
+   29 print "T"
    30 assertprints "TFFT" "comparison 1"
    31 label *label0
-    * set :compare.1:title "comparison 2"
-    * set :compare.1:a null
-    * set :compare.1:b 1
-    * set :compare.1:expected "FTFT"
    32 assertflush
-    * op equal :eval.4:b null 1
    33 jump *label15 equal false false
    34 jump *label16 always
    35 label *label15
    36 set *tmp16 "F"
    37 label *label16
-    * set *tmp15 "F"
    38 label *label14
-    * op notEqual :eval.5:b null 1
    39 jump *label18 equal true false
    40 set *tmp19 "T"
    41 jump *label19 always
    42 label *label18
    43 label *label19
-    * set *tmp18 "T"
    44 label *label17
-    * op strictEqual :eval.6:b null 1
    45 jump *label21 equal false false
    46 jump *label22 always
    47 label *label21
    48 set *tmp22 "F"
    49 label *label22
-    * set *tmp21 "F"
    50 label *label20
-    * op strictNotEqual :eval.7:b null 1
    51 jump *label24 equal true false
    52 set *tmp25 "T"
    53 jump *label25 always
    54 label *label24
    55 label *label25
-    * set *tmp24 "T"
    56 label *label23
-    * print *tmp16
-    * print *tmp19
-    * print *tmp22
-    * print *tmp25
+   57 print "F"
+   58 print "T"
+   59 print "F"
+   60 print "T"
    61 assertprints "FTFT" "comparison 2"
    62 label *label13
-    * set :compare.2:title "comparison 3"
-    * set :compare.2:a null
-    * set :compare.2:b 2
-    * set :compare.2:expected "FTFT"
    63 assertflush
-    * op equal :eval.8:b null 2
    64 jump *label28 equal false false
    65 jump *label29 always
    66 label *label28
    67 set *tmp29 "F"
    68 label *label29
-    * set *tmp28 "F"
    69 label *label27
-    * op notEqual :eval.9:b null 2
    70 jump *label31 equal true false
    71 set *tmp32 "T"
    72 jump *label32 always
    73 label *label31
    74 label *label32
-    * set *tmp31 "T"
    75 label *label30
-    * op strictEqual :eval.10:b null 2
    76 jump *label34 equal false false
    77 jump *label35 always
    78 label *label34
    79 set *tmp35 "F"
    80 label *label35
-    * set *tmp34 "F"
    81 label *label33
-    * op strictNotEqual :eval.11:b null 2
    82 jump *label37 equal true false
    83 set *tmp38 "T"
    84 jump *label38 always
    85 label *label37
    86 label *label38
-    * set *tmp37 "T"
    87 label *label36
-    * print *tmp29
-    * print *tmp32
-    * print *tmp35
-    * print *tmp38
+   88 print "F"
+   89 print "T"
+   90 print "F"
+   91 print "T"
    92 assertprints "FTFT" "comparison 3"
    93 label *label26
-    * set :compare.3:title "comparison 4"
-    * set :compare.3:a @coal
-    * set :compare.3:b 0
-    * set :compare.3:expected "FTFT"
    94 assertflush
    95 op equal :eval.12:b @coal 0
-    * jump *label41 equal :eval.12:b false
-    * set *tmp42 "T"
+   96 jump *label41 equal false false
    97 jump *label42 always
    98 label *label41
    99 set *tmp42 "F"
   100 label *label42
-    * set *tmp41 *tmp42
+  101 set *tmp41 "F"
   102 label *label40
   103 op notEqual :eval.13:b @coal 0
-    * jump *label44 equal :eval.13:b false
+  104 jump *label44 equal true false
   105 set *tmp45 "T"
   106 jump *label45 always
   107 label *label44
-    * set *tmp45 "F"
   108 label *label45
-    * set *tmp44 *tmp45
+  109 set *tmp44 "T"
   110 label *label43
   111 op strictEqual :eval.14:b @coal 0
-    * jump *label47 equal :eval.14:b false
-    * set *tmp48 "T"
+  112 jump *label47 equal false false
   113 jump *label48 always
   114 label *label47
   115 set *tmp48 "F"
   116 label *label48
-    * set *tmp47 *tmp48
+  117 set *tmp47 "F"
   118 label *label46
   119 op strictNotEqual :eval.15:b @coal 0
-    * jump *label50 equal :eval.15:b false
+  120 jump *label50 equal true false
   121 set *tmp51 "T"
   122 jump *label51 always
   123 label *label50
-    * set *tmp51 "F"
   124 label *label51
-    * set *tmp50 *tmp51
+  125 set *tmp50 "T"
   126 label *label49
-    * print *tmp42
-    * print *tmp45
-    * print *tmp48
-    * print *tmp51
+  127 print "F"
+  128 print "T"
+  129 print "F"
+  130 print "T"
   131 assertprints "FTFT" "comparison 4"
   132 label *label39
-    * set :compare.4:title "comparison 5"
-    * set :compare.4:a @coal
-    * set :compare.4:b 1
-    * set :compare.4:expected "TFFT"
   133 assertflush
   134 op equal :eval.16:b @coal 1
-    * jump *label54 equal :eval.16:b false
+  135 jump *label54 equal true false
   136 set *tmp55 "T"
   137 jump *label55 always
   138 label *label54
-    * set *tmp55 "F"
   139 label *label55
-    * set *tmp54 *tmp55
+  140 set *tmp54 "T"
   141 label *label53
   142 op notEqual :eval.17:b @coal 1
-    * jump *label57 equal :eval.17:b false
-    * set *tmp58 "T"
+  143 jump *label57 equal false false
   144 jump *label58 always
   145 label *label57
   146 set *tmp58 "F"
   147 label *label58
-    * set *tmp57 *tmp58
+  148 set *tmp57 "F"
   149 label *label56
   150 op strictEqual :eval.18:b @coal 1
-    * jump *label60 equal :eval.18:b false
-    * set *tmp61 "T"
+  151 jump *label60 equal false false
   152 jump *label61 always
   153 label *label60
   154 set *tmp61 "F"
   155 label *label61
-    * set *tmp60 *tmp61
+  156 set *tmp60 "F"
   157 label *label59
   158 op strictNotEqual :eval.19:b @coal 1
-    * jump *label63 equal :eval.19:b false
+  159 jump *label63 equal true false
   160 set *tmp64 "T"
   161 jump *label64 always
   162 label *label63
-    * set *tmp64 "F"
   163 label *label64
-    * set *tmp63 *tmp64
+  164 set *tmp63 "T"
   165 label *label62
-    * print *tmp55
-    * print *tmp58
-    * print *tmp61
-    * print *tmp64
+  166 print "T"
+  167 print "F"
+  168 print "F"
+  169 print "T"
   170 assertprints "TFFT" "comparison 5"
   171 label *label52
-    * set :compare.5:title "comparison 6"
-    * set :compare.5:a @coal
-    * set :compare.5:b 2
-    * set :compare.5:expected "FTFT"
   172 assertflush
   173 op equal :eval.20:b @coal 2
-    * jump *label67 equal :eval.20:b false
-    * set *tmp68 "T"
+  174 jump *label67 equal false false
   175 jump *label68 always
   176 label *label67
   177 set *tmp68 "F"
   178 label *label68
-    * set *tmp67 *tmp68
+  179 set *tmp67 "F"
   180 label *label66
   181 op notEqual :eval.21:b @coal 2
-    * jump *label70 equal :eval.21:b false
+  182 jump *label70 equal true false
   183 set *tmp71 "T"
   184 jump *label71 always
   185 label *label70
-    * set *tmp71 "F"
   186 label *label71
-    * set *tmp70 *tmp71
+  187 set *tmp70 "T"
   188 label *label69
   189 op strictEqual :eval.22:b @coal 2
-    * jump *label73 equal :eval.22:b false
-    * set *tmp74 "T"
+  190 jump *label73 equal false false
   191 jump *label74 always
   192 label *label73
   193 set *tmp74 "F"
   194 label *label74
-    * set *tmp73 *tmp74
+  195 set *tmp73 "F"
   196 label *label72
   197 op strictNotEqual :eval.23:b @coal 2
-    * jump *label76 equal :eval.23:b false
+  198 jump *label76 equal true false
   199 set *tmp77 "T"
   200 jump *label77 always
   201 label *label76
-    * set *tmp77 "F"
   202 label *label77
-    * set *tmp76 *tmp77
+  203 set *tmp76 "T"
   204 label *label75
-    * print *tmp68
-    * print *tmp71
-    * print *tmp74
-    * print *tmp77
+  205 print "F"
+  206 print "T"
+  207 print "F"
+  208 print "T"
   209 assertprints "FTFT" "comparison 6"
   210 label *label65
-    * set :compare.6:title "comparison 7"
-    * set :compare.6:a @coal
-    * set :compare.6:b @lead
-    * set :compare.6:expected "FTFT"
   211 assertflush
   212 op equal :eval.24:b @coal @lead
-    * jump *label80 equal :eval.24:b false
-    * set *tmp81 "T"
+  213 jump *label80 equal false false
   214 jump *label81 always
   215 label *label80
   216 set *tmp81 "F"
   217 label *label81
-    * set *tmp80 *tmp81
+  218 set *tmp80 "F"
   219 label *label79
   220 op notEqual :eval.25:b @coal @lead
-    * jump *label83 equal :eval.25:b false
+  221 jump *label83 equal true false
   222 set *tmp84 "T"
   223 jump *label84 always
   224 label *label83
-    * set *tmp84 "F"
   225 label *label84
-    * set *tmp83 *tmp84
+  226 set *tmp83 "T"
   227 label *label82
   228 op strictEqual :eval.26:b @coal @lead
-    * jump *label86 equal :eval.26:b false
-    * set *tmp87 "T"
+  229 jump *label86 equal false false
   230 jump *label87 always
   231 label *label86
   232 set *tmp87 "F"
   233 label *label87
-    * set *tmp86 *tmp87
+  234 set *tmp86 "F"
   235 label *label85
   236 op strictNotEqual :eval.27:b @coal @lead
-    * jump *label89 equal :eval.27:b false
+  237 jump *label89 equal true false
   238 set *tmp90 "T"
   239 jump *label90 always
   240 label *label89
-    * set *tmp90 "F"
   241 label *label90
-    * set *tmp89 *tmp90
+  242 set *tmp89 "T"
   243 label *label88
-    * print *tmp81
-    * print *tmp84
-    * print *tmp87
-    * print *tmp90
+  244 print "F"
+  245 print "T"
+  246 print "F"
+  247 print "T"
   248 assertprints "FTFT" "comparison 7"
   249 label *label78
-    * set :compare.7:title "comparison 8"
-    * set :compare.7:a A
-    * set :compare.7:b A
-    * set :compare.7:expected "TFTF"
   250 assertflush
   251 op equal :eval.28:b A A
   252 jump *label93 equal :eval.28:b false
 
   255 label *label93
   256 set *tmp94 "F"
   257 label *label94
-    * set *tmp93 *tmp94
   258 label *label92
   259 op notEqual :eval.29:b A A
   260 jump *label96 equal :eval.29:b false
 
   263 label *label96
   264 set *tmp97 "F"
   265 label *label97
-    * set *tmp96 *tmp97
   266 label *label95
   267 op strictEqual :eval.30:b A A
   268 jump *label99 equal :eval.30:b false
 
   271 label *label99
   272 set *tmp100 "F"
   273 label *label100
-    * set *tmp99 *tmp100
   274 label *label98
   275 op strictNotEqual :eval.31:b A A
   276 jump *label102 equal :eval.31:b false
 
   279 label *label102
   280 set *tmp103 "F"
   281 label *label103
-    * set *tmp102 *tmp103
   282 label *label101
   283 print *tmp94
   284 print *tmp97
 
   286 print *tmp103
   287 assertprints "TFTF" "comparison 8"
   288 label *label91
-    * set :compare.8:title "comparison 9"
-    * set :compare.8:a A
-    * set :compare.8:b 0
-    * set :compare.8:expected "TFTF"
   289 assertflush
   290 op equal :eval.32:b A 0
   291 jump *label106 equal :eval.32:b false
 
   294 label *label106
   295 set *tmp107 "F"
   296 label *label107
-    * set *tmp106 *tmp107
   297 label *label105
   298 op notEqual :eval.33:b A 0
   299 jump *label109 equal :eval.33:b false
 
   302 label *label109
   303 set *tmp110 "F"
   304 label *label110
-    * set *tmp109 *tmp110
   305 label *label108
   306 op strictEqual :eval.34:b A 0
   307 jump *label112 equal :eval.34:b false
 
   310 label *label112
   311 set *tmp113 "F"
   312 label *label113
-    * set *tmp112 *tmp113
   313 label *label111
   314 op strictNotEqual :eval.35:b A 0
   315 jump *label115 equal :eval.35:b false
 
   318 label *label115
   319 set *tmp116 "F"
   320 label *label116
-    * set *tmp115 *tmp116
   321 label *label114
   322 print *tmp107
   323 print *tmp110
 
   325 print *tmp116
   326 assertprints "TFTF" "comparison 9"
   327 label *label104
-    * set :compare.9:title "comparison 10"
-    * set :compare.9:a A
-    * set :compare.9:b 1
-    * set :compare.9:expected "FTFT"
   328 assertflush
   329 op equal :eval.36:b A 1
   330 jump *label119 equal :eval.36:b false
 
   333 label *label119
   334 set *tmp120 "F"
   335 label *label120
-    * set *tmp119 *tmp120
   336 label *label118
   337 op notEqual :eval.37:b A 1
   338 jump *label122 equal :eval.37:b false
 
   341 label *label122
   342 set *tmp123 "F"
   343 label *label123
-    * set *tmp122 *tmp123
   344 label *label121
   345 op strictEqual :eval.38:b A 1
   346 jump *label125 equal :eval.38:b false
 
   349 label *label125
   350 set *tmp126 "F"
   351 label *label126
-    * set *tmp125 *tmp126
   352 label *label124
   353 op strictNotEqual :eval.39:b A 1
   354 jump *label128 equal :eval.39:b false
 
   357 label *label128
   358 set *tmp129 "F"
   359 label *label129
-    * set *tmp128 *tmp129
   360 label *label127
   361 print *tmp120
   362 print *tmp123
 
   364 print *tmp129
   365 assertprints "FTFT" "comparison 10"
   366 label *label117
-    * set :compare.10:title "comparison 11"
-    * set :compare.10:a "A"
-    * set :compare.10:b 0
-    * set :compare.10:expected "FTFT"
   367 assertflush
   368 op equal :eval.40:b "A" 0
-    * jump *label132 equal :eval.40:b false
-    * set *tmp133 "T"
+  369 jump *label132 equal false false
   370 jump *label133 always
   371 label *label132
   372 set *tmp133 "F"
   373 label *label133
-    * set *tmp132 *tmp133
+  374 set *tmp132 "F"
   375 label *label131
   376 op notEqual :eval.41:b "A" 0
-    * jump *label135 equal :eval.41:b false
+  377 jump *label135 equal true false
   378 set *tmp136 "T"
   379 jump *label136 always
   380 label *label135
-    * set *tmp136 "F"
   381 label *label136
-    * set *tmp135 *tmp136
+  382 set *tmp135 "T"
   383 label *label134
   384 op strictEqual :eval.42:b "A" 0
-    * jump *label138 equal :eval.42:b false
-    * set *tmp139 "T"
+  385 jump *label138 equal false false
   386 jump *label139 always
   387 label *label138
   388 set *tmp139 "F"
   389 label *label139
-    * set *tmp138 *tmp139
+  390 set *tmp138 "F"
   391 label *label137
   392 op strictNotEqual :eval.43:b "A" 0
-    * jump *label141 equal :eval.43:b false
+  393 jump *label141 equal true false
   394 set *tmp142 "T"
   395 jump *label142 always
   396 label *label141
-    * set *tmp142 "F"
   397 label *label142
-    * set *tmp141 *tmp142
+  398 set *tmp141 "T"
   399 label *label140
-    * print *tmp133
-    * print *tmp136
-    * print *tmp139
-    * print *tmp142
+  400 print "F"
+  401 print "T"
+  402 print "F"
+  403 print "T"
   404 assertprints "FTFT" "comparison 11"
   405 label *label130
-    * set :compare.11:title "comparison 12"
-    * set :compare.11:a "A"
-    * set :compare.11:b 1
-    * set :compare.11:expected "TFFT"
   406 assertflush
   407 op equal :eval.44:b "A" 1
-    * jump *label145 equal :eval.44:b false
+  408 jump *label145 equal true false
   409 set *tmp146 "T"
   410 jump *label146 always
   411 label *label145
-    * set *tmp146 "F"
   412 label *label146
-    * set *tmp145 *tmp146
+  413 set *tmp145 "T"
   414 label *label144
   415 op notEqual :eval.45:b "A" 1
-    * jump *label148 equal :eval.45:b false
-    * set *tmp149 "T"
+  416 jump *label148 equal false false
   417 jump *label149 always
   418 label *label148
   419 set *tmp149 "F"
   420 label *label149
-    * set *tmp148 *tmp149
+  421 set *tmp148 "F"
   422 label *label147
   423 op strictEqual :eval.46:b "A" 1
-    * jump *label151 equal :eval.46:b false
-    * set *tmp152 "T"
+  424 jump *label151 equal false false
   425 jump *label152 always
   426 label *label151
   427 set *tmp152 "F"
   428 label *label152
-    * set *tmp151 *tmp152
+  429 set *tmp151 "F"
   430 label *label150
   431 op strictNotEqual :eval.47:b "A" 1
-    * jump *label154 equal :eval.47:b false
+  432 jump *label154 equal true false
   433 set *tmp155 "T"
   434 jump *label155 always
   435 label *label154
-    * set *tmp155 "F"
   436 label *label155
-    * set *tmp154 *tmp155
+  437 set *tmp154 "T"
   438 label *label153
-    * print *tmp146
-    * print *tmp149
-    * print *tmp152
-    * print *tmp155
+  439 print "T"
+  440 print "F"
+  441 print "F"
+  442 print "T"
   443 assertprints "TFFT" "comparison 12"
   444 label *label143
-    * set :compare.12:title "comparison 13"
-    * set :compare.12:a "A"
-    * set :compare.12:b 2
-    * set :compare.12:expected "FTFT"
   445 assertflush
   446 op equal :eval.48:b "A" 2
-    * jump *label158 equal :eval.48:b false
-    * set *tmp159 "T"
+  447 jump *label158 equal false false
   448 jump *label159 always
   449 label *label158
   450 set *tmp159 "F"
   451 label *label159
-    * set *tmp158 *tmp159
+  452 set *tmp158 "F"
   453 label *label157
   454 op notEqual :eval.49:b "A" 2
-    * jump *label161 equal :eval.49:b false
+  455 jump *label161 equal true false
   456 set *tmp162 "T"
   457 jump *label162 always
   458 label *label161
-    * set *tmp162 "F"
   459 label *label162
-    * set *tmp161 *tmp162
+  460 set *tmp161 "T"
   461 label *label160
   462 op strictEqual :eval.50:b "A" 2
-    * jump *label164 equal :eval.50:b false
-    * set *tmp165 "T"
+  463 jump *label164 equal false false
   464 jump *label165 always
   465 label *label164
   466 set *tmp165 "F"
   467 label *label165
-    * set *tmp164 *tmp165
+  468 set *tmp164 "F"
   469 label *label163
   470 op strictNotEqual :eval.51:b "A" 2
-    * jump *label167 equal :eval.51:b false
+  471 jump *label167 equal true false
   472 set *tmp168 "T"
   473 jump *label168 always
   474 label *label167
-    * set *tmp168 "F"
   475 label *label168
-    * set *tmp167 *tmp168
+  476 set *tmp167 "T"
   477 label *label166
-    * print *tmp159
-    * print *tmp162
-    * print *tmp165
-    * print *tmp168
+  478 print "F"
+  479 print "T"
+  480 print "F"
+  481 print "T"
   482 assertprints "FTFT" "comparison 13"
   483 label *label156
-    * set :compare.13:title "comparison 14"
-    * set :compare.13:a "A"
-    * set :compare.13:b "B"
-    * set :compare.13:expected "FTFT"
   484 assertflush
   485 op equal :eval.52:b "A" "B"
-    * jump *label171 equal :eval.52:b false
-    * set *tmp172 "T"
+  486 jump *label171 equal false false
   487 jump *label172 always
   488 label *label171
   489 set *tmp172 "F"
   490 label *label172
-    * set *tmp171 *tmp172
+  491 set *tmp171 "F"
   492 label *label170
   493 op notEqual :eval.53:b "A" "B"
-    * jump *label174 equal :eval.53:b false
+  494 jump *label174 equal true false
   495 set *tmp175 "T"
   496 jump *label175 always
   497 label *label174
-    * set *tmp175 "F"
   498 label *label175
-    * set *tmp174 *tmp175
+  499 set *tmp174 "T"
   500 label *label173
   501 op strictEqual :eval.54:b "A" "B"
-    * jump *label177 equal :eval.54:b false
-    * set *tmp178 "T"
+  502 jump *label177 equal false false
   503 jump *label178 always
   504 label *label177
   505 set *tmp178 "F"
   506 label *label178
-    * set *tmp177 *tmp178
+  507 set *tmp177 "F"
   508 label *label176
   509 op strictNotEqual :eval.55:b "A" "B"
-    * jump *label180 equal :eval.55:b false
+  510 jump *label180 equal true false
   511 set *tmp181 "T"
   512 jump *label181 always
   513 label *label180
-    * set *tmp181 "F"
   514 label *label181
-    * set *tmp180 *tmp181
+  515 set *tmp180 "T"
   516 label *label179
-    * print *tmp172
-    * print *tmp175
-    * print *tmp178
-    * print *tmp181
+  517 print "F"
+  518 print "T"
+  519 print "F"
+  520 print "T"
   521 assertprints "FTFT" "comparison 14"
   522 label *label169
-    * set :compare.14:title "comparison 15"
-    * set :compare.14:a "A"
-    * set :compare.14:b "A"
-    * set :compare.14:expected "TFTF"
   523 assertflush
   524 op equal :eval.56:b "A" "A"
-    * jump *label184 equal :eval.56:b false
+  525 jump *label184 equal true false
   526 set *tmp185 "T"
   527 jump *label185 always
   528 label *label184
-    * set *tmp185 "F"
   529 label *label185
-    * set *tmp184 *tmp185
+  530 set *tmp184 "T"
   531 label *label183
   532 op notEqual :eval.57:b "A" "A"
-    * jump *label187 equal :eval.57:b false
-    * set *tmp188 "T"
+  533 jump *label187 equal false false
   534 jump *label188 always
   535 label *label187
   536 set *tmp188 "F"
   537 label *label188
-    * set *tmp187 *tmp188
+  538 set *tmp187 "F"
   539 label *label186
   540 op strictEqual :eval.58:b "A" "A"
-    * jump *label190 equal :eval.58:b false
+  541 jump *label190 equal true false
   542 set *tmp191 "T"
   543 jump *label191 always
   544 label *label190
-    * set *tmp191 "F"
   545 label *label191
-    * set *tmp190 *tmp191
+  546 set *tmp190 "T"
   547 label *label189
   548 op strictNotEqual :eval.59:b "A" "A"
-    * jump *label193 equal :eval.59:b false
-    * set *tmp194 "T"
+  549 jump *label193 equal false false
   550 jump *label194 always
   551 label *label193
   552 set *tmp194 "F"
   553 label *label194
-    * set *tmp193 *tmp194
+  554 set *tmp193 "F"
   555 label *label192
-    * print *tmp185
-    * print *tmp188
-    * print *tmp191
-    * print *tmp194
+  556 print "T"
+  557 print "F"
+  558 print "T"
+  559 print "F"
   560 assertprints "TFTF" "comparison 15"
   561 label *label182
   562 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-120 instructions):
     0 set A 0
     1 assertflush
     2 jump *label2 equal true false
-    * set *tmp3 "T"
     3 jump *label3 always
     4 label *label2
     5 label *label3
 
     7 jump *label5 equal false false
     8 jump *label6 always
     9 label *label5
-    * set *tmp6 "F"
    10 label *label6
    11 label *label4
    12 jump *label8 equal false false
    13 jump *label9 always
    14 label *label8
-    * set *tmp9 "F"
    15 label *label9
    16 label *label7
    17 jump *label11 equal true false
-    * set *tmp12 "T"
    18 jump *label12 always
    19 label *label11
    20 label *label12
 
    29 jump *label15 equal false false
    30 jump *label16 always
    31 label *label15
-    * set *tmp16 "F"
    32 label *label16
    33 label *label14
    34 jump *label18 equal true false
-    * set *tmp19 "T"
    35 jump *label19 always
    36 label *label18
    37 label *label19
 
    39 jump *label21 equal false false
    40 jump *label22 always
    41 label *label21
-    * set *tmp22 "F"
    42 label *label22
    43 label *label20
    44 jump *label24 equal true false
-    * set *tmp25 "T"
    45 jump *label25 always
    46 label *label24
    47 label *label25
 
    56 jump *label28 equal false false
    57 jump *label29 always
    58 label *label28
-    * set *tmp29 "F"
    59 label *label29
    60 label *label27
    61 jump *label31 equal true false
-    * set *tmp32 "T"
    62 jump *label32 always
    63 label *label31
    64 label *label32
 
    66 jump *label34 equal false false
    67 jump *label35 always
    68 label *label34
-    * set *tmp35 "F"
    69 label *label35
    70 label *label33
    71 jump *label37 equal true false
-    * set *tmp38 "T"
    72 jump *label38 always
    73 label *label37
    74 label *label38
 
    80 assertprints "FTFT" "comparison 3"
    81 label *label26
    82 assertflush
-    * op equal :eval.12:b @coal 0
    83 jump *label41 equal false false
    84 jump *label42 always
    85 label *label41
-    * set *tmp42 "F"
    86 label *label42
-    * set *tmp41 "F"
    87 label *label40
-    * op notEqual :eval.13:b @coal 0
    88 jump *label44 equal true false
-    * set *tmp45 "T"
    89 jump *label45 always
    90 label *label44
    91 label *label45
-    * set *tmp44 "T"
    92 label *label43
-    * op strictEqual :eval.14:b @coal 0
    93 jump *label47 equal false false
    94 jump *label48 always
    95 label *label47
-    * set *tmp48 "F"
    96 label *label48
-    * set *tmp47 "F"
    97 label *label46
-    * op strictNotEqual :eval.15:b @coal 0
    98 jump *label50 equal true false
-    * set *tmp51 "T"
    99 jump *label51 always
   100 label *label50
   101 label *label51
-    * set *tmp50 "T"
   102 label *label49
   103 print "F"
   104 print "T"
 
   107 assertprints "FTFT" "comparison 4"
   108 label *label39
   109 assertflush
-    * op equal :eval.16:b @coal 1
   110 jump *label54 equal true false
-    * set *tmp55 "T"
   111 jump *label55 always
   112 label *label54
   113 label *label55
-    * set *tmp54 "T"
   114 label *label53
-    * op notEqual :eval.17:b @coal 1
   115 jump *label57 equal false false
   116 jump *label58 always
   117 label *label57
-    * set *tmp58 "F"
   118 label *label58
-    * set *tmp57 "F"
   119 label *label56
-    * op strictEqual :eval.18:b @coal 1
   120 jump *label60 equal false false
   121 jump *label61 always
   122 label *label60
-    * set *tmp61 "F"
   123 label *label61
-    * set *tmp60 "F"
   124 label *label59
-    * op strictNotEqual :eval.19:b @coal 1
   125 jump *label63 equal true false
-    * set *tmp64 "T"
   126 jump *label64 always
   127 label *label63
   128 label *label64
-    * set *tmp63 "T"
   129 label *label62
   130 print "T"
   131 print "F"
 
   134 assertprints "TFFT" "comparison 5"
   135 label *label52
   136 assertflush
-    * op equal :eval.20:b @coal 2
   137 jump *label67 equal false false
   138 jump *label68 always
   139 label *label67
-    * set *tmp68 "F"
   140 label *label68
-    * set *tmp67 "F"
   141 label *label66
-    * op notEqual :eval.21:b @coal 2
   142 jump *label70 equal true false
-    * set *tmp71 "T"
   143 jump *label71 always
   144 label *label70
   145 label *label71
-    * set *tmp70 "T"
   146 label *label69
-    * op strictEqual :eval.22:b @coal 2
   147 jump *label73 equal false false
   148 jump *label74 always
   149 label *label73
-    * set *tmp74 "F"
   150 label *label74
-    * set *tmp73 "F"
   151 label *label72
-    * op strictNotEqual :eval.23:b @coal 2
   152 jump *label76 equal true false
-    * set *tmp77 "T"
   153 jump *label77 always
   154 label *label76
   155 label *label77
-    * set *tmp76 "T"
   156 label *label75
   157 print "F"
   158 print "T"
 
   161 assertprints "FTFT" "comparison 6"
   162 label *label65
   163 assertflush
-    * op equal :eval.24:b @coal @lead
   164 jump *label80 equal false false
   165 jump *label81 always
   166 label *label80
-    * set *tmp81 "F"
   167 label *label81
-    * set *tmp80 "F"
   168 label *label79
-    * op notEqual :eval.25:b @coal @lead
   169 jump *label83 equal true false
-    * set *tmp84 "T"
   170 jump *label84 always
   171 label *label83
   172 label *label84
-    * set *tmp83 "T"
   173 label *label82
-    * op strictEqual :eval.26:b @coal @lead
   174 jump *label86 equal false false
   175 jump *label87 always
   176 label *label86
-    * set *tmp87 "F"
   177 label *label87
-    * set *tmp86 "F"
   178 label *label85
-    * op strictNotEqual :eval.27:b @coal @lead
   179 jump *label89 equal true false
-    * set *tmp90 "T"
   180 jump *label90 always
   181 label *label89
   182 label *label90
-    * set *tmp89 "T"
   183 label *label88
   184 print "F"
   185 print "T"
 
   305 assertprints "FTFT" "comparison 10"
   306 label *label117
   307 assertflush
-    * op equal :eval.40:b "A" 0
   308 jump *label132 equal false false
   309 jump *label133 always
   310 label *label132
-    * set *tmp133 "F"
   311 label *label133
-    * set *tmp132 "F"
   312 label *label131
-    * op notEqual :eval.41:b "A" 0
   313 jump *label135 equal true false
-    * set *tmp136 "T"
   314 jump *label136 always
   315 label *label135
   316 label *label136
-    * set *tmp135 "T"
   317 label *label134
-    * op strictEqual :eval.42:b "A" 0
   318 jump *label138 equal false false
   319 jump *label139 always
   320 label *label138
-    * set *tmp139 "F"
   321 label *label139
-    * set *tmp138 "F"
   322 label *label137
-    * op strictNotEqual :eval.43:b "A" 0
   323 jump *label141 equal true false
-    * set *tmp142 "T"
   324 jump *label142 always
   325 label *label141
   326 label *label142
-    * set *tmp141 "T"
   327 label *label140
   328 print "F"
   329 print "T"
 
   332 assertprints "FTFT" "comparison 11"
   333 label *label130
   334 assertflush
-    * op equal :eval.44:b "A" 1
   335 jump *label145 equal true false
-    * set *tmp146 "T"
   336 jump *label146 always
   337 label *label145
   338 label *label146
-    * set *tmp145 "T"
   339 label *label144
-    * op notEqual :eval.45:b "A" 1
   340 jump *label148 equal false false
   341 jump *label149 always
   342 label *label148
-    * set *tmp149 "F"
   343 label *label149
-    * set *tmp148 "F"
   344 label *label147
-    * op strictEqual :eval.46:b "A" 1
   345 jump *label151 equal false false
   346 jump *label152 always
   347 label *label151
-    * set *tmp152 "F"
   348 label *label152
-    * set *tmp151 "F"
   349 label *label150
-    * op strictNotEqual :eval.47:b "A" 1
   350 jump *label154 equal true false
-    * set *tmp155 "T"
   351 jump *label155 always
   352 label *label154
   353 label *label155
-    * set *tmp154 "T"
   354 label *label153
   355 print "T"
   356 print "F"
 
   359 assertprints "TFFT" "comparison 12"
   360 label *label143
   361 assertflush
-    * op equal :eval.48:b "A" 2
   362 jump *label158 equal false false
   363 jump *label159 always
   364 label *label158
-    * set *tmp159 "F"
   365 label *label159
-    * set *tmp158 "F"
   366 label *label157
-    * op notEqual :eval.49:b "A" 2
   367 jump *label161 equal true false
-    * set *tmp162 "T"
   368 jump *label162 always
   369 label *label161
   370 label *label162
-    * set *tmp161 "T"
   371 label *label160
-    * op strictEqual :eval.50:b "A" 2
   372 jump *label164 equal false false
   373 jump *label165 always
   374 label *label164
-    * set *tmp165 "F"
   375 label *label165
-    * set *tmp164 "F"
   376 label *label163
-    * op strictNotEqual :eval.51:b "A" 2
   377 jump *label167 equal true false
-    * set *tmp168 "T"
   378 jump *label168 always
   379 label *label167
   380 label *label168
-    * set *tmp167 "T"
   381 label *label166
   382 print "F"
   383 print "T"
 
   386 assertprints "FTFT" "comparison 13"
   387 label *label156
   388 assertflush
-    * op equal :eval.52:b "A" "B"
   389 jump *label171 equal false false
   390 jump *label172 always
   391 label *label171
-    * set *tmp172 "F"
   392 label *label172
-    * set *tmp171 "F"
   393 label *label170
-    * op notEqual :eval.53:b "A" "B"
   394 jump *label174 equal true false
-    * set *tmp175 "T"
   395 jump *label175 always
   396 label *label174
   397 label *label175
-    * set *tmp174 "T"
   398 label *label173
-    * op strictEqual :eval.54:b "A" "B"
   399 jump *label177 equal false false
   400 jump *label178 always
   401 label *label177
-    * set *tmp178 "F"
   402 label *label178
-    * set *tmp177 "F"
   403 label *label176
-    * op strictNotEqual :eval.55:b "A" "B"
   404 jump *label180 equal true false
-    * set *tmp181 "T"
   405 jump *label181 always
   406 label *label180
   407 label *label181
-    * set *tmp180 "T"
   408 label *label179
   409 print "F"
   410 print "T"
 
   413 assertprints "FTFT" "comparison 14"
   414 label *label169
   415 assertflush
-    * op equal :eval.56:b "A" "A"
   416 jump *label184 equal true false
-    * set *tmp185 "T"
   417 jump *label185 always
   418 label *label184
   419 label *label185
-    * set *tmp184 "T"
   420 label *label183
-    * op notEqual :eval.57:b "A" "A"
   421 jump *label187 equal false false
   422 jump *label188 always
   423 label *label187
-    * set *tmp188 "F"
   424 label *label188
-    * set *tmp187 "F"
   425 label *label186
-    * op strictEqual :eval.58:b "A" "A"
   426 jump *label190 equal true false
-    * set *tmp191 "T"
   427 jump *label191 always
   428 label *label190
   429 label *label191
-    * set *tmp190 "T"
   430 label *label189
-    * op strictNotEqual :eval.59:b "A" "A"
   431 jump *label193 equal false false
   432 jump *label194 always
   433 label *label193
-    * set *tmp194 "F"
   434 label *label194
-    * set *tmp193 "F"
   435 label *label192
   436 print "T"
   437 print "F"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-132 instructions):
     0 set A 0
     1 assertflush
-    * jump *label2 equal true false
-    * jump *label3 always
-    * label *label2
-    * label *label3
     2 label *label1
-    * jump *label5 equal false false
-    * jump *label6 always
-    * label *label5
-    * label *label6
     3 label *label4
-    * jump *label8 equal false false
-    * jump *label9 always
-    * label *label8
-    * label *label9
     4 label *label7
-    * jump *label11 equal true false
-    * jump *label12 always
-    * label *label11
-    * label *label12
     5 label *label10
     6 print "T"
     7 print "F"
 
    10 assertprints "TFFT" "comparison 1"
    11 label *label0
    12 assertflush
-    * jump *label15 equal false false
-    * jump *label16 always
-    * label *label15
-    * label *label16
    13 label *label14
-    * jump *label18 equal true false
-    * jump *label19 always
-    * label *label18
-    * label *label19
    14 label *label17
-    * jump *label21 equal false false
-    * jump *label22 always
-    * label *label21
-    * label *label22
    15 label *label20
-    * jump *label24 equal true false
-    * jump *label25 always
-    * label *label24
-    * label *label25
    16 label *label23
    17 print "F"
    18 print "T"
 
    21 assertprints "FTFT" "comparison 2"
    22 label *label13
    23 assertflush
-    * jump *label28 equal false false
-    * jump *label29 always
-    * label *label28
-    * label *label29
    24 label *label27
-    * jump *label31 equal true false
-    * jump *label32 always
-    * label *label31
-    * label *label32
    25 label *label30
-    * jump *label34 equal false false
-    * jump *label35 always
-    * label *label34
-    * label *label35
    26 label *label33
-    * jump *label37 equal true false
-    * jump *label38 always
-    * label *label37
-    * label *label38
    27 label *label36
    28 print "F"
    29 print "T"
 
    32 assertprints "FTFT" "comparison 3"
    33 label *label26
    34 assertflush
-    * jump *label41 equal false false
-    * jump *label42 always
-    * label *label41
-    * label *label42
    35 label *label40
-    * jump *label44 equal true false
-    * jump *label45 always
-    * label *label44
-    * label *label45
    36 label *label43
-    * jump *label47 equal false false
-    * jump *label48 always
-    * label *label47
-    * label *label48
    37 label *label46
-    * jump *label50 equal true false
-    * jump *label51 always
-    * label *label50
-    * label *label51
    38 label *label49
    39 print "F"
    40 print "T"
 
    43 assertprints "FTFT" "comparison 4"
    44 label *label39
    45 assertflush
-    * jump *label54 equal true false
-    * jump *label55 always
-    * label *label54
-    * label *label55
    46 label *label53
-    * jump *label57 equal false false
-    * jump *label58 always
-    * label *label57
-    * label *label58
    47 label *label56
-    * jump *label60 equal false false
-    * jump *label61 always
-    * label *label60
-    * label *label61
    48 label *label59
-    * jump *label63 equal true false
-    * jump *label64 always
-    * label *label63
-    * label *label64
    49 label *label62
    50 print "T"
    51 print "F"
 
    54 assertprints "TFFT" "comparison 5"
    55 label *label52
    56 assertflush
-    * jump *label67 equal false false
-    * jump *label68 always
-    * label *label67
-    * label *label68
    57 label *label66
-    * jump *label70 equal true false
-    * jump *label71 always
-    * label *label70
-    * label *label71
    58 label *label69
-    * jump *label73 equal false false
-    * jump *label74 always
-    * label *label73
-    * label *label74
    59 label *label72
-    * jump *label76 equal true false
-    * jump *label77 always
-    * label *label76
-    * label *label77
    60 label *label75
    61 print "F"
    62 print "T"
 
    65 assertprints "FTFT" "comparison 6"
    66 label *label65
    67 assertflush
-    * jump *label80 equal false false
-    * jump *label81 always
-    * label *label80
-    * label *label81
    68 label *label79
-    * jump *label83 equal true false
-    * jump *label84 always
-    * label *label83
-    * label *label84
    69 label *label82
-    * jump *label86 equal false false
-    * jump *label87 always
-    * label *label86
-    * label *label87
    70 label *label85
-    * jump *label89 equal true false
-    * jump *label90 always
-    * label *label89
-    * label *label90
    71 label *label88
    72 print "F"
    73 print "T"
 
    77 label *label78
    78 assertflush
    79 op equal :eval.28:b A A
-    * jump *label93 equal :eval.28:b false
-    * set *tmp94 "T"
-    * jump *label94 always
-    * label *label93
-    * set *tmp94 "F"
-    * label *label94
+   80 select *tmp94 notEqual :eval.28:b false "T" "F"
    81 label *label92
    82 op notEqual :eval.29:b A A
-    * jump *label96 equal :eval.29:b false
-    * set *tmp97 "T"
-    * jump *label97 always
-    * label *label96
-    * set *tmp97 "F"
-    * label *label97
+   83 select *tmp97 notEqual :eval.29:b false "T" "F"
    84 label *label95
    85 op strictEqual :eval.30:b A A
-    * jump *label99 equal :eval.30:b false
-    * set *tmp100 "T"
-    * jump *label100 always
-    * label *label99
-    * set *tmp100 "F"
-    * label *label100
+   86 select *tmp100 notEqual :eval.30:b false "T" "F"
    87 label *label98
    88 op strictNotEqual :eval.31:b A A
-    * jump *label102 equal :eval.31:b false
-    * set *tmp103 "T"
-    * jump *label103 always
-    * label *label102
-    * set *tmp103 "F"
-    * label *label103
+   89 select *tmp103 notEqual :eval.31:b false "T" "F"
    90 label *label101
    91 print *tmp94
    92 print *tmp97
 
    96 label *label91
    97 assertflush
    98 op equal :eval.32:b A 0
-    * jump *label106 equal :eval.32:b false
-    * set *tmp107 "T"
-    * jump *label107 always
-    * label *label106
-    * set *tmp107 "F"
-    * label *label107
+   99 select *tmp107 notEqual :eval.32:b false "T" "F"
   100 label *label105
   101 op notEqual :eval.33:b A 0
-    * jump *label109 equal :eval.33:b false
-    * set *tmp110 "T"
-    * jump *label110 always
-    * label *label109
-    * set *tmp110 "F"
-    * label *label110
+  102 select *tmp110 notEqual :eval.33:b false "T" "F"
   103 label *label108
   104 op strictEqual :eval.34:b A 0
-    * jump *label112 equal :eval.34:b false
-    * set *tmp113 "T"
-    * jump *label113 always
-    * label *label112
-    * set *tmp113 "F"
-    * label *label113
+  105 select *tmp113 notEqual :eval.34:b false "T" "F"
   106 label *label111
   107 op strictNotEqual :eval.35:b A 0
-    * jump *label115 equal :eval.35:b false
-    * set *tmp116 "T"
-    * jump *label116 always
-    * label *label115
-    * set *tmp116 "F"
-    * label *label116
+  108 select *tmp116 notEqual :eval.35:b false "T" "F"
   109 label *label114
   110 print *tmp107
   111 print *tmp110
 
   115 label *label104
   116 assertflush
   117 op equal :eval.36:b A 1
-    * jump *label119 equal :eval.36:b false
-    * set *tmp120 "T"
-    * jump *label120 always
-    * label *label119
-    * set *tmp120 "F"
-    * label *label120
+  118 select *tmp120 notEqual :eval.36:b false "T" "F"
   119 label *label118
   120 op notEqual :eval.37:b A 1
-    * jump *label122 equal :eval.37:b false
-    * set *tmp123 "T"
-    * jump *label123 always
-    * label *label122
-    * set *tmp123 "F"
-    * label *label123
+  121 select *tmp123 notEqual :eval.37:b false "T" "F"
   122 label *label121
   123 op strictEqual :eval.38:b A 1
-    * jump *label125 equal :eval.38:b false
-    * set *tmp126 "T"
-    * jump *label126 always
-    * label *label125
-    * set *tmp126 "F"
-    * label *label126
+  124 select *tmp126 notEqual :eval.38:b false "T" "F"
   125 label *label124
   126 op strictNotEqual :eval.39:b A 1
-    * jump *label128 equal :eval.39:b false
-    * set *tmp129 "T"
-    * jump *label129 always
-    * label *label128
-    * set *tmp129 "F"
-    * label *label129
+  127 select *tmp129 notEqual :eval.39:b false "T" "F"
   128 label *label127
   129 print *tmp120
   130 print *tmp123
 
   133 assertprints "FTFT" "comparison 10"
   134 label *label117
   135 assertflush
-    * jump *label132 equal false false
-    * jump *label133 always
-    * label *label132
-    * label *label133
   136 label *label131
-    * jump *label135 equal true false
-    * jump *label136 always
-    * label *label135
-    * label *label136
   137 label *label134
-    * jump *label138 equal false false
-    * jump *label139 always
-    * label *label138
-    * label *label139
   138 label *label137
-    * jump *label141 equal true false
-    * jump *label142 always
-    * label *label141
-    * label *label142
   139 label *label140
   140 print "F"
   141 print "T"
 
   144 assertprints "FTFT" "comparison 11"
   145 label *label130
   146 assertflush
-    * jump *label145 equal true false
-    * jump *label146 always
-    * label *label145
-    * label *label146
   147 label *label144
-    * jump *label148 equal false false
-    * jump *label149 always
-    * label *label148
-    * label *label149
   148 label *label147
-    * jump *label151 equal false false
-    * jump *label152 always
-    * label *label151
-    * label *label152
   149 label *label150
-    * jump *label154 equal true false
-    * jump *label155 always
-    * label *label154
-    * label *label155
   150 label *label153
   151 print "T"
   152 print "F"
 
   155 assertprints "TFFT" "comparison 12"
   156 label *label143
   157 assertflush
-    * jump *label158 equal false false
-    * jump *label159 always
-    * label *label158
-    * label *label159
   158 label *label157
-    * jump *label161 equal true false
-    * jump *label162 always
-    * label *label161
-    * label *label162
   159 label *label160
-    * jump *label164 equal false false
-    * jump *label165 always
-    * label *label164
-    * label *label165
   160 label *label163
-    * jump *label167 equal true false
-    * jump *label168 always
-    * label *label167
-    * label *label168
   161 label *label166
   162 print "F"
   163 print "T"
 
   166 assertprints "FTFT" "comparison 13"
   167 label *label156
   168 assertflush
-    * jump *label171 equal false false
-    * jump *label172 always
-    * label *label171
-    * label *label172
   169 label *label170
-    * jump *label174 equal true false
-    * jump *label175 always
-    * label *label174
-    * label *label175
   170 label *label173
-    * jump *label177 equal false false
-    * jump *label178 always
-    * label *label177
-    * label *label178
   171 label *label176
-    * jump *label180 equal true false
-    * jump *label181 always
-    * label *label180
-    * label *label181
   172 label *label179
   173 print "F"
   174 print "T"
 
   177 assertprints "FTFT" "comparison 14"
   178 label *label169
   179 assertflush
-    * jump *label184 equal true false
-    * jump *label185 always
-    * label *label184
-    * label *label185
   180 label *label183
-    * jump *label187 equal false false
-    * jump *label188 always
-    * label *label187
-    * label *label188
   181 label *label186
-    * jump *label190 equal true false
-    * jump *label191 always
-    * label *label190
-    * label *label191
   182 label *label189
-    * jump *label193 equal false false
-    * jump *label194 always
-    * label *label193
-    * label *label194
   183 label *label192
   184 print "T"
   185 print "F"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    76 assertprints "FTFT" "comparison 7"
    77 label *label78
    78 assertflush
-    * op equal :eval.28:b A A
+   79 set :eval.28:b true
    80 select *tmp94 notEqual :eval.28:b false "T" "F"
    81 label *label92
-    * op notEqual :eval.29:b A A
+   82 set :eval.29:b false
    83 select *tmp97 notEqual :eval.29:b false "T" "F"
    84 label *label95
-    * op strictEqual :eval.30:b A A
+   85 set :eval.30:b true
    86 select *tmp100 notEqual :eval.30:b false "T" "F"
    87 label *label98
-    * op strictNotEqual :eval.31:b A A
+   88 set :eval.31:b false
    89 select *tmp103 notEqual :eval.31:b false "T" "F"
    90 label *label101
    91 print *tmp94

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    77 label *label78
    78 assertflush
    79 set :eval.28:b true
-    * select *tmp94 notEqual :eval.28:b false "T" "F"
+   80 select *tmp94 notEqual true false "T" "F"
    81 label *label92
    82 set :eval.29:b false
-    * select *tmp97 notEqual :eval.29:b false "T" "F"
+   83 select *tmp97 notEqual false false "T" "F"
    84 label *label95
    85 set :eval.30:b true
-    * select *tmp100 notEqual :eval.30:b false "T" "F"
+   86 select *tmp100 notEqual true false "T" "F"
    87 label *label98
    88 set :eval.31:b false
-    * select *tmp103 notEqual :eval.31:b false "T" "F"
+   89 select *tmp103 notEqual false false "T" "F"
    90 label *label101
    91 print *tmp94
    92 print *tmp97

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
    76 assertprints "FTFT" "comparison 7"
    77 label *label78
    78 assertflush
-    * set :eval.28:b true
    79 select *tmp94 notEqual true false "T" "F"
    80 label *label92
-    * set :eval.29:b false
    81 select *tmp97 notEqual false false "T" "F"
    82 label *label95
-    * set :eval.30:b true
    83 select *tmp100 notEqual true false "T" "F"
    84 label *label98
-    * set :eval.31:b false
    85 select *tmp103 notEqual false false "T" "F"
    86 label *label101
    87 print *tmp94

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1:
 
    76 assertprints "FTFT" "comparison 7"
    77 label *label78
    78 assertflush
-    * select *tmp94 notEqual true false "T" "F"
+   79 set *tmp94 "T"
    80 label *label92
-    * select *tmp97 notEqual false false "T" "F"
+   81 set *tmp97 "F"
    82 label *label95
-    * select *tmp100 notEqual true false "T" "F"
+   83 set *tmp100 "T"
    84 label *label98
-    * select *tmp103 notEqual false false "T" "F"
+   85 set *tmp103 "F"
    86 label *label101
    87 print *tmp94
    88 print *tmp97

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1:
 
    84 label *label98
    85 set *tmp103 "F"
    86 label *label101
-    * print *tmp94
-    * print *tmp97
-    * print *tmp100
-    * print *tmp103
+   87 print "T"
+   88 print "F"
+   89 print "T"
+   90 print "F"
    91 assertprints "TFTF" "comparison 8"
    92 label *label91
    93 assertflush

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 2 (-4 instructions):
 
    76 assertprints "FTFT" "comparison 7"
    77 label *label78
    78 assertflush
-    * set *tmp94 "T"
    79 label *label92
-    * set *tmp97 "F"
    80 label *label95
-    * set *tmp100 "T"
    81 label *label98
-    * set *tmp103 "F"
    82 label *label101
    83 print "T"
    84 print "F"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
     0 set A 0
     1 assertflush
-    * label *label1
-    * label *label4
-    * label *label7
-    * label *label10
     2 print "T"
     3 print "F"
     4 print "F"
     5 print "T"
     6 assertprints "TFFT" "comparison 1"
-    * label *label0
     7 assertflush
-    * label *label14
-    * label *label17
-    * label *label20
-    * label *label23
     8 print "F"
     9 print "T"
    10 print "F"
    11 print "T"
    12 assertprints "FTFT" "comparison 2"
-    * label *label13
    13 assertflush
-    * label *label27
-    * label *label30
-    * label *label33
-    * label *label36
    14 print "F"
    15 print "T"
    16 print "F"
    17 print "T"
    18 assertprints "FTFT" "comparison 3"
-    * label *label26
    19 assertflush
-    * label *label40
-    * label *label43
-    * label *label46
-    * label *label49
    20 print "F"
    21 print "T"
    22 print "F"
    23 print "T"
    24 assertprints "FTFT" "comparison 4"
-    * label *label39
    25 assertflush
-    * label *label53
-    * label *label56
-    * label *label59
-    * label *label62
    26 print "T"
    27 print "F"
    28 print "F"
    29 print "T"
    30 assertprints "TFFT" "comparison 5"
-    * label *label52
    31 assertflush
-    * label *label66
-    * label *label69
-    * label *label72
-    * label *label75
    32 print "F"
    33 print "T"
    34 print "F"
    35 print "T"
    36 assertprints "FTFT" "comparison 6"
-    * label *label65
    37 assertflush
-    * label *label79
-    * label *label82
-    * label *label85
-    * label *label88
    38 print "F"
    39 print "T"
    40 print "F"
    41 print "T"
    42 assertprints "FTFT" "comparison 7"
-    * label *label78
    43 assertflush
-    * label *label92
-    * label *label95
-    * label *label98
-    * label *label101
    44 print "T"
    45 print "F"
    46 print "T"
    47 print "F"
    48 assertprints "TFTF" "comparison 8"
-    * label *label91
    49 assertflush
    50 op equal :eval.32:b A 0
    51 select *tmp107 notEqual :eval.32:b false "T" "F"
-    * label *label105
    52 op notEqual :eval.33:b A 0
    53 select *tmp110 notEqual :eval.33:b false "T" "F"
-    * label *label108
    54 op strictEqual :eval.34:b A 0
    55 select *tmp113 notEqual :eval.34:b false "T" "F"
-    * label *label111
    56 op strictNotEqual :eval.35:b A 0
    57 select *tmp116 notEqual :eval.35:b false "T" "F"
-    * label *label114
    58 print *tmp107
    59 print *tmp110
    60 print *tmp113
    61 print *tmp116
    62 assertprints "TFTF" "comparison 9"
-    * label *label104
    63 assertflush
    64 op equal :eval.36:b A 1
    65 select *tmp120 notEqual :eval.36:b false "T" "F"
-    * label *label118
    66 op notEqual :eval.37:b A 1
    67 select *tmp123 notEqual :eval.37:b false "T" "F"
-    * label *label121
    68 op strictEqual :eval.38:b A 1
    69 select *tmp126 notEqual :eval.38:b false "T" "F"
-    * label *label124
    70 op strictNotEqual :eval.39:b A 1
    71 select *tmp129 notEqual :eval.39:b false "T" "F"
-    * label *label127
    72 print *tmp120
    73 print *tmp123
    74 print *tmp126
    75 print *tmp129
    76 assertprints "FTFT" "comparison 10"
-    * label *label117
    77 assertflush
-    * label *label131
-    * label *label134
-    * label *label137
-    * label *label140
    78 print "F"
    79 print "T"
    80 print "F"
    81 print "T"
    82 assertprints "FTFT" "comparison 11"
-    * label *label130
    83 assertflush
-    * label *label144
-    * label *label147
-    * label *label150
-    * label *label153
    84 print "T"
    85 print "F"
    86 print "F"
    87 print "T"
    88 assertprints "TFFT" "comparison 12"
-    * label *label143
    89 assertflush
-    * label *label157
-    * label *label160
-    * label *label163
-    * label *label166
    90 print "F"
    91 print "T"
    92 print "F"
    93 print "T"
    94 assertprints "FTFT" "comparison 13"
-    * label *label156
    95 assertflush
-    * label *label170
-    * label *label173
-    * label *label176
-    * label *label179
    96 print "F"
    97 print "T"
    98 print "F"
    99 print "T"
   100 assertprints "FTFT" "comparison 14"
-    * label *label169
   101 assertflush
-    * label *label183
-    * label *label186
-    * label *label189
-    * label *label192
   102 print "T"
   103 print "F"
   104 print "T"
   105 print "F"
   106 assertprints "TFTF" "comparison 15"
-    * label *label182
   107 stop
   108 end

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-1 instructions):
 
   105 print "F"
   106 assertprints "TFTF" "comparison 15"
   107 stop
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
     0 set A 0
     1 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+    2 print "TFFT"
     3 assertprints "TFFT" "comparison 1"
     4 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+    5 print "FTFT"
     6 assertprints "FTFT" "comparison 2"
     7 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+    8 print "FTFT"
     9 assertprints "FTFT" "comparison 3"
    10 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   11 print "FTFT"
    12 assertprints "FTFT" "comparison 4"
    13 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   14 print "TFFT"
    15 assertprints "TFFT" "comparison 5"
    16 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   17 print "FTFT"
    18 assertprints "FTFT" "comparison 6"
    19 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   20 print "FTFT"
    21 assertprints "FTFT" "comparison 7"
    22 assertflush
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   23 print "TFTF"
    24 assertprints "TFTF" "comparison 8"
    25 assertflush
    26 op equal :eval.32:b A 0
 
    51 print *tmp129
    52 assertprints "FTFT" "comparison 10"
    53 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   54 print "FTFT"
    55 assertprints "FTFT" "comparison 11"
    56 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   57 print "TFFT"
    58 assertprints "TFFT" "comparison 12"
    59 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   60 print "FTFT"
    61 assertprints "FTFT" "comparison 13"
    62 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   63 print "FTFT"
    64 assertprints "FTFT" "comparison 14"
    65 assertflush
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   66 print "TFTF"
    67 assertprints "TFTF" "comparison 15"
    68 stop

Final code before resolving virtual instructions:

set A 0
assertflush
print "TFFT"
assertprints "TFFT" "comparison 1"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 2"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 3"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 4"
assertflush
print "TFFT"
assertprints "TFFT" "comparison 5"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 6"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 7"
assertflush
print "TFTF"
assertprints "TFTF" "comparison 8"
assertflush
op equal :eval.32:b A 0
select *tmp107 notEqual :eval.32:b false "T" "F"
op notEqual :eval.33:b A 0
select *tmp110 notEqual :eval.33:b false "T" "F"
op strictEqual :eval.34:b A 0
select *tmp113 notEqual :eval.34:b false "T" "F"
op strictNotEqual :eval.35:b A 0
select *tmp116 notEqual :eval.35:b false "T" "F"
print *tmp107
print *tmp110
print *tmp113
print *tmp116
assertprints "TFTF" "comparison 9"
assertflush
op equal :eval.36:b A 1
select *tmp120 notEqual :eval.36:b false "T" "F"
op notEqual :eval.37:b A 1
select *tmp123 notEqual :eval.37:b false "T" "F"
op strictEqual :eval.38:b A 1
select *tmp126 notEqual :eval.38:b false "T" "F"
op strictNotEqual :eval.39:b A 1
select *tmp129 notEqual :eval.39:b false "T" "F"
print *tmp120
print *tmp123
print *tmp126
print *tmp129
assertprints "FTFT" "comparison 10"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 11"
assertflush
print "TFFT"
assertprints "TFFT" "comparison 12"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 13"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 14"
assertflush
print "TFTF"
assertprints "TFTF" "comparison 15"
stop
