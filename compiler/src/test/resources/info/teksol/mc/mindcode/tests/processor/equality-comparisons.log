   603 instructions before optimizations.
    60 instructions eliminated by Temp Variables Elimination.
    15 instructions eliminated by Dead Code Elimination (4 iterations).
    26 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    87 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     3 instructions modified by Expression Optimization (4 iterations).
    12 instructions modified by If Expression Optimization (4 iterations).
   291 instructions eliminated by Data Flow Optimization (2 passes, 9 iterations).
    39 instructions eliminated by Print Merging.
    85 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-15 instructions):
 
    49 print *tmp8
    50 print *tmp12
    51 assertprints :compare:expected :compare:title
-    * set *tmp0 null
    52 label *label0
    53 set :compare47:title "comparison 2"
    54 set :compare47:a null
 
   101 print *tmp22
   102 print *tmp26
   103 assertprints :compare47:expected :compare47:title
-    * set *tmp14 null
   104 label *label13
   105 set :compare48:title "comparison 3"
   106 set :compare48:a null
 
   153 print *tmp36
   154 print *tmp40
   155 assertprints :compare48:expected :compare48:title
-    * set *tmp28 null
   156 label *label26
   157 set :compare49:title "comparison 4"
   158 set :compare49:a @coal
 
   205 print *tmp50
   206 print *tmp54
   207 assertprints :compare49:expected :compare49:title
-    * set *tmp42 null
   208 label *label39
   209 set :compare50:title "comparison 5"
   210 set :compare50:a @coal
 
   257 print *tmp64
   258 print *tmp68
   259 assertprints :compare50:expected :compare50:title
-    * set *tmp56 null
   260 label *label52
   261 set :compare51:title "comparison 6"
   262 set :compare51:a @coal
 
   309 print *tmp78
   310 print *tmp82
   311 assertprints :compare51:expected :compare51:title
-    * set *tmp70 null
   312 label *label65
   313 set :compare52:title "comparison 7"
   314 set :compare52:a @coal
 
   361 print *tmp92
   362 print *tmp96
   363 assertprints :compare52:expected :compare52:title
-    * set *tmp84 null
   364 label *label78
   365 set :compare53:title "comparison 8"
   366 set :compare53:a A
 
   413 print *tmp106
   414 print *tmp110
   415 assertprints :compare53:expected :compare53:title
-    * set *tmp98 null
   416 label *label91
   417 set :compare54:title "comparison 9"
   418 set :compare54:a A
 
   465 print *tmp120
   466 print *tmp124
   467 assertprints :compare54:expected :compare54:title
-    * set *tmp112 null
   468 label *label104
   469 set :compare55:title "comparison 10"
   470 set :compare55:a A
 
   517 print *tmp134
   518 print *tmp138
   519 assertprints :compare55:expected :compare55:title
-    * set *tmp126 null
   520 label *label117
   521 set :compare56:title "comparison 11"
   522 set :compare56:a "A"
 
   569 print *tmp148
   570 print *tmp152
   571 assertprints :compare56:expected :compare56:title
-    * set *tmp140 null
   572 label *label130
   573 set :compare57:title "comparison 12"
   574 set :compare57:a "A"
 
   621 print *tmp162
   622 print *tmp166
   623 assertprints :compare57:expected :compare57:title
-    * set *tmp154 null
   624 label *label143
   625 set :compare58:title "comparison 13"
   626 set :compare58:a "A"
 
   673 print *tmp176
   674 print *tmp180
   675 assertprints :compare58:expected :compare58:title
-    * set *tmp168 null
   676 label *label156
   677 set :compare59:title "comparison 14"
   678 set :compare59:a "A"
 
   725 print *tmp190
   726 print *tmp194
   727 assertprints :compare59:expected :compare59:title
-    * set *tmp182 null
   728 label *label169
   729 set :compare60:title "comparison 15"
   730 set :compare60:a "A"
 
   777 print *tmp204
   778 print *tmp208
   779 assertprints :compare60:expected :compare60:title
-    * set *tmp196 null
   780 label *label182
   781 stop
   782 end

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-60 instructions):
 
     3 set :compare:b 0
     4 set :compare:expected "TFFT"
     5 assertflush
-    * op equal *tmp1 :compare:a :compare:b
-    * set :eval:b *tmp1
+    6 op equal :eval:b :compare:a :compare:b
     7 jump *label2 equal :eval:b false
     8 set *tmp3 "T"
     9 jump *label3 always
 
    12 label *label3
    13 set *tmp2 *tmp3
    14 label *label1
-    * op notEqual *tmp4 :compare:a :compare:b
-    * set :eval47:b *tmp4
+   15 op notEqual :eval47:b :compare:a :compare:b
    16 jump *label5 equal :eval47:b false
    17 set *tmp6 "T"
    18 jump *label6 always
 
    21 label *label6
    22 set *tmp5 *tmp6
    23 label *label4
-    * op strictEqual *tmp7 :compare:a :compare:b
-    * set :eval48:b *tmp7
+   24 op strictEqual :eval48:b :compare:a :compare:b
    25 jump *label8 equal :eval48:b false
    26 set *tmp9 "T"
    27 jump *label9 always
 
    31 set *tmp8 *tmp9
    32 label *label7
    33 op strictEqual *tmp11 :compare:a :compare:b
-    * op equal *tmp10 *tmp11 false
-    * set :eval49:b *tmp10
+   34 op equal :eval49:b *tmp11 false
    35 jump *label11 equal :eval49:b false
    36 set *tmp13 "T"
    37 jump *label12 always
 
    51 set :compare47:b 1
    52 set :compare47:expected "FTFT"
    53 assertflush
-    * op equal *tmp15 :compare47:a :compare47:b
-    * set :eval50:b *tmp15
+   54 op equal :eval50:b :compare47:a :compare47:b
    55 jump *label15 equal :eval50:b false
    56 set *tmp17 "T"
    57 jump *label16 always
 
    60 label *label16
    61 set *tmp16 *tmp17
    62 label *label14
-    * op notEqual *tmp18 :compare47:a :compare47:b
-    * set :eval51:b *tmp18
+   63 op notEqual :eval51:b :compare47:a :compare47:b
    64 jump *label18 equal :eval51:b false
    65 set *tmp20 "T"
    66 jump *label19 always
 
    69 label *label19
    70 set *tmp19 *tmp20
    71 label *label17
-    * op strictEqual *tmp21 :compare47:a :compare47:b
-    * set :eval52:b *tmp21
+   72 op strictEqual :eval52:b :compare47:a :compare47:b
    73 jump *label21 equal :eval52:b false
    74 set *tmp23 "T"
    75 jump *label22 always
 
    79 set *tmp22 *tmp23
    80 label *label20
    81 op strictEqual *tmp25 :compare47:a :compare47:b
-    * op equal *tmp24 *tmp25 false
-    * set :eval53:b *tmp24
+   82 op equal :eval53:b *tmp25 false
    83 jump *label24 equal :eval53:b false
    84 set *tmp27 "T"
    85 jump *label25 always
 
    99 set :compare48:b 2
   100 set :compare48:expected "FTFT"
   101 assertflush
-    * op equal *tmp29 :compare48:a :compare48:b
-    * set :eval54:b *tmp29
+  102 op equal :eval54:b :compare48:a :compare48:b
   103 jump *label28 equal :eval54:b false
   104 set *tmp31 "T"
   105 jump *label29 always
 
   108 label *label29
   109 set *tmp30 *tmp31
   110 label *label27
-    * op notEqual *tmp32 :compare48:a :compare48:b
-    * set :eval55:b *tmp32
+  111 op notEqual :eval55:b :compare48:a :compare48:b
   112 jump *label31 equal :eval55:b false
   113 set *tmp34 "T"
   114 jump *label32 always
 
   117 label *label32
   118 set *tmp33 *tmp34
   119 label *label30
-    * op strictEqual *tmp35 :compare48:a :compare48:b
-    * set :eval56:b *tmp35
+  120 op strictEqual :eval56:b :compare48:a :compare48:b
   121 jump *label34 equal :eval56:b false
   122 set *tmp37 "T"
   123 jump *label35 always
 
   127 set *tmp36 *tmp37
   128 label *label33
   129 op strictEqual *tmp39 :compare48:a :compare48:b
-    * op equal *tmp38 *tmp39 false
-    * set :eval57:b *tmp38
+  130 op equal :eval57:b *tmp39 false
   131 jump *label37 equal :eval57:b false
   132 set *tmp41 "T"
   133 jump *label38 always
 
   147 set :compare49:b 0
   148 set :compare49:expected "FTFT"
   149 assertflush
-    * op equal *tmp43 :compare49:a :compare49:b
-    * set :eval58:b *tmp43
+  150 op equal :eval58:b :compare49:a :compare49:b
   151 jump *label41 equal :eval58:b false
   152 set *tmp45 "T"
   153 jump *label42 always
 
   156 label *label42
   157 set *tmp44 *tmp45
   158 label *label40
-    * op notEqual *tmp46 :compare49:a :compare49:b
-    * set :eval59:b *tmp46
+  159 op notEqual :eval59:b :compare49:a :compare49:b
   160 jump *label44 equal :eval59:b false
   161 set *tmp48 "T"
   162 jump *label45 always
 
   165 label *label45
   166 set *tmp47 *tmp48
   167 label *label43
-    * op strictEqual *tmp49 :compare49:a :compare49:b
-    * set :eval60:b *tmp49
+  168 op strictEqual :eval60:b :compare49:a :compare49:b
   169 jump *label47 equal :eval60:b false
   170 set *tmp51 "T"
   171 jump *label48 always
 
   175 set *tmp50 *tmp51
   176 label *label46
   177 op strictEqual *tmp53 :compare49:a :compare49:b
-    * op equal *tmp52 *tmp53 false
-    * set :eval61:b *tmp52
+  178 op equal :eval61:b *tmp53 false
   179 jump *label50 equal :eval61:b false
   180 set *tmp55 "T"
   181 jump *label51 always
 
   195 set :compare50:b 1
   196 set :compare50:expected "TFFT"
   197 assertflush
-    * op equal *tmp57 :compare50:a :compare50:b
-    * set :eval62:b *tmp57
+  198 op equal :eval62:b :compare50:a :compare50:b
   199 jump *label54 equal :eval62:b false
   200 set *tmp59 "T"
   201 jump *label55 always
 
   204 label *label55
   205 set *tmp58 *tmp59
   206 label *label53
-    * op notEqual *tmp60 :compare50:a :compare50:b
-    * set :eval63:b *tmp60
+  207 op notEqual :eval63:b :compare50:a :compare50:b
   208 jump *label57 equal :eval63:b false
   209 set *tmp62 "T"
   210 jump *label58 always
 
   213 label *label58
   214 set *tmp61 *tmp62
   215 label *label56
-    * op strictEqual *tmp63 :compare50:a :compare50:b
-    * set :eval64:b *tmp63
+  216 op strictEqual :eval64:b :compare50:a :compare50:b
   217 jump *label60 equal :eval64:b false
   218 set *tmp65 "T"
   219 jump *label61 always
 
   223 set *tmp64 *tmp65
   224 label *label59
   225 op strictEqual *tmp67 :compare50:a :compare50:b
-    * op equal *tmp66 *tmp67 false
-    * set :eval65:b *tmp66
+  226 op equal :eval65:b *tmp67 false
   227 jump *label63 equal :eval65:b false
   228 set *tmp69 "T"
   229 jump *label64 always
 
   243 set :compare51:b 2
   244 set :compare51:expected "FTFT"
   245 assertflush
-    * op equal *tmp71 :compare51:a :compare51:b
-    * set :eval66:b *tmp71
+  246 op equal :eval66:b :compare51:a :compare51:b
   247 jump *label67 equal :eval66:b false
   248 set *tmp73 "T"
   249 jump *label68 always
 
   252 label *label68
   253 set *tmp72 *tmp73
   254 label *label66
-    * op notEqual *tmp74 :compare51:a :compare51:b
-    * set :eval67:b *tmp74
+  255 op notEqual :eval67:b :compare51:a :compare51:b
   256 jump *label70 equal :eval67:b false
   257 set *tmp76 "T"
   258 jump *label71 always
 
   261 label *label71
   262 set *tmp75 *tmp76
   263 label *label69
-    * op strictEqual *tmp77 :compare51:a :compare51:b
-    * set :eval68:b *tmp77
+  264 op strictEqual :eval68:b :compare51:a :compare51:b
   265 jump *label73 equal :eval68:b false
   266 set *tmp79 "T"
   267 jump *label74 always
 
   271 set *tmp78 *tmp79
   272 label *label72
   273 op strictEqual *tmp81 :compare51:a :compare51:b
-    * op equal *tmp80 *tmp81 false
-    * set :eval69:b *tmp80
+  274 op equal :eval69:b *tmp81 false
   275 jump *label76 equal :eval69:b false
   276 set *tmp83 "T"
   277 jump *label77 always
 
   291 set :compare52:b @lead
   292 set :compare52:expected "FTFT"
   293 assertflush
-    * op equal *tmp85 :compare52:a :compare52:b
-    * set :eval70:b *tmp85
+  294 op equal :eval70:b :compare52:a :compare52:b
   295 jump *label80 equal :eval70:b false
   296 set *tmp87 "T"
   297 jump *label81 always
 
   300 label *label81
   301 set *tmp86 *tmp87
   302 label *label79
-    * op notEqual *tmp88 :compare52:a :compare52:b
-    * set :eval71:b *tmp88
+  303 op notEqual :eval71:b :compare52:a :compare52:b
   304 jump *label83 equal :eval71:b false
   305 set *tmp90 "T"
   306 jump *label84 always
 
   309 label *label84
   310 set *tmp89 *tmp90
   311 label *label82
-    * op strictEqual *tmp91 :compare52:a :compare52:b
-    * set :eval72:b *tmp91
+  312 op strictEqual :eval72:b :compare52:a :compare52:b
   313 jump *label86 equal :eval72:b false
   314 set *tmp93 "T"
   315 jump *label87 always
 
   319 set *tmp92 *tmp93
   320 label *label85
   321 op strictEqual *tmp95 :compare52:a :compare52:b
-    * op equal *tmp94 *tmp95 false
-    * set :eval73:b *tmp94
+  322 op equal :eval73:b *tmp95 false
   323 jump *label89 equal :eval73:b false
   324 set *tmp97 "T"
   325 jump *label90 always
 
   339 set :compare53:b A
   340 set :compare53:expected "TFTF"
   341 assertflush
-    * op equal *tmp99 :compare53:a :compare53:b
-    * set :eval74:b *tmp99
+  342 op equal :eval74:b :compare53:a :compare53:b
   343 jump *label93 equal :eval74:b false
   344 set *tmp101 "T"
   345 jump *label94 always
 
   348 label *label94
   349 set *tmp100 *tmp101
   350 label *label92
-    * op notEqual *tmp102 :compare53:a :compare53:b
-    * set :eval75:b *tmp102
+  351 op notEqual :eval75:b :compare53:a :compare53:b
   352 jump *label96 equal :eval75:b false
   353 set *tmp104 "T"
   354 jump *label97 always
 
   357 label *label97
   358 set *tmp103 *tmp104
   359 label *label95
-    * op strictEqual *tmp105 :compare53:a :compare53:b
-    * set :eval76:b *tmp105
+  360 op strictEqual :eval76:b :compare53:a :compare53:b
   361 jump *label99 equal :eval76:b false
   362 set *tmp107 "T"
   363 jump *label100 always
 
   367 set *tmp106 *tmp107
   368 label *label98
   369 op strictEqual *tmp109 :compare53:a :compare53:b
-    * op equal *tmp108 *tmp109 false
-    * set :eval77:b *tmp108
+  370 op equal :eval77:b *tmp109 false
   371 jump *label102 equal :eval77:b false
   372 set *tmp111 "T"
   373 jump *label103 always
 
   387 set :compare54:b 0
   388 set :compare54:expected "TFTF"
   389 assertflush
-    * op equal *tmp113 :compare54:a :compare54:b
-    * set :eval78:b *tmp113
+  390 op equal :eval78:b :compare54:a :compare54:b
   391 jump *label106 equal :eval78:b false
   392 set *tmp115 "T"
   393 jump *label107 always
 
   396 label *label107
   397 set *tmp114 *tmp115
   398 label *label105
-    * op notEqual *tmp116 :compare54:a :compare54:b
-    * set :eval79:b *tmp116
+  399 op notEqual :eval79:b :compare54:a :compare54:b
   400 jump *label109 equal :eval79:b false
   401 set *tmp118 "T"
   402 jump *label110 always
 
   405 label *label110
   406 set *tmp117 *tmp118
   407 label *label108
-    * op strictEqual *tmp119 :compare54:a :compare54:b
-    * set :eval80:b *tmp119
+  408 op strictEqual :eval80:b :compare54:a :compare54:b
   409 jump *label112 equal :eval80:b false
   410 set *tmp121 "T"
   411 jump *label113 always
 
   415 set *tmp120 *tmp121
   416 label *label111
   417 op strictEqual *tmp123 :compare54:a :compare54:b
-    * op equal *tmp122 *tmp123 false
-    * set :eval81:b *tmp122
+  418 op equal :eval81:b *tmp123 false
   419 jump *label115 equal :eval81:b false
   420 set *tmp125 "T"
   421 jump *label116 always
 
   435 set :compare55:b 1
   436 set :compare55:expected "FTFT"
   437 assertflush
-    * op equal *tmp127 :compare55:a :compare55:b
-    * set :eval82:b *tmp127
+  438 op equal :eval82:b :compare55:a :compare55:b
   439 jump *label119 equal :eval82:b false
   440 set *tmp129 "T"
   441 jump *label120 always
 
   444 label *label120
   445 set *tmp128 *tmp129
   446 label *label118
-    * op notEqual *tmp130 :compare55:a :compare55:b
-    * set :eval83:b *tmp130
+  447 op notEqual :eval83:b :compare55:a :compare55:b
   448 jump *label122 equal :eval83:b false
   449 set *tmp132 "T"
   450 jump *label123 always
 
   453 label *label123
   454 set *tmp131 *tmp132
   455 label *label121
-    * op strictEqual *tmp133 :compare55:a :compare55:b
-    * set :eval84:b *tmp133
+  456 op strictEqual :eval84:b :compare55:a :compare55:b
   457 jump *label125 equal :eval84:b false
   458 set *tmp135 "T"
   459 jump *label126 always
 
   463 set *tmp134 *tmp135
   464 label *label124
   465 op strictEqual *tmp137 :compare55:a :compare55:b
-    * op equal *tmp136 *tmp137 false
-    * set :eval85:b *tmp136
+  466 op equal :eval85:b *tmp137 false
   467 jump *label128 equal :eval85:b false
   468 set *tmp139 "T"
   469 jump *label129 always
 
   483 set :compare56:b 0
   484 set :compare56:expected "FTFT"
   485 assertflush
-    * op equal *tmp141 :compare56:a :compare56:b
-    * set :eval86:b *tmp141
+  486 op equal :eval86:b :compare56:a :compare56:b
   487 jump *label132 equal :eval86:b false
   488 set *tmp143 "T"
   489 jump *label133 always
 
   492 label *label133
   493 set *tmp142 *tmp143
   494 label *label131
-    * op notEqual *tmp144 :compare56:a :compare56:b
-    * set :eval87:b *tmp144
+  495 op notEqual :eval87:b :compare56:a :compare56:b
   496 jump *label135 equal :eval87:b false
   497 set *tmp146 "T"
   498 jump *label136 always
 
   501 label *label136
   502 set *tmp145 *tmp146
   503 label *label134
-    * op strictEqual *tmp147 :compare56:a :compare56:b
-    * set :eval88:b *tmp147
+  504 op strictEqual :eval88:b :compare56:a :compare56:b
   505 jump *label138 equal :eval88:b false
   506 set *tmp149 "T"
   507 jump *label139 always
 
   511 set *tmp148 *tmp149
   512 label *label137
   513 op strictEqual *tmp151 :compare56:a :compare56:b
-    * op equal *tmp150 *tmp151 false
-    * set :eval89:b *tmp150
+  514 op equal :eval89:b *tmp151 false
   515 jump *label141 equal :eval89:b false
   516 set *tmp153 "T"
   517 jump *label142 always
 
   531 set :compare57:b 1
   532 set :compare57:expected "TFFT"
   533 assertflush
-    * op equal *tmp155 :compare57:a :compare57:b
-    * set :eval90:b *tmp155
+  534 op equal :eval90:b :compare57:a :compare57:b
   535 jump *label145 equal :eval90:b false
   536 set *tmp157 "T"
   537 jump *label146 always
 
   540 label *label146
   541 set *tmp156 *tmp157
   542 label *label144
-    * op notEqual *tmp158 :compare57:a :compare57:b
-    * set :eval91:b *tmp158
+  543 op notEqual :eval91:b :compare57:a :compare57:b
   544 jump *label148 equal :eval91:b false
   545 set *tmp160 "T"
   546 jump *label149 always
 
   549 label *label149
   550 set *tmp159 *tmp160
   551 label *label147
-    * op strictEqual *tmp161 :compare57:a :compare57:b
-    * set :eval92:b *tmp161
+  552 op strictEqual :eval92:b :compare57:a :compare57:b
   553 jump *label151 equal :eval92:b false
   554 set *tmp163 "T"
   555 jump *label152 always
 
   559 set *tmp162 *tmp163
   560 label *label150
   561 op strictEqual *tmp165 :compare57:a :compare57:b
-    * op equal *tmp164 *tmp165 false
-    * set :eval93:b *tmp164
+  562 op equal :eval93:b *tmp165 false
   563 jump *label154 equal :eval93:b false
   564 set *tmp167 "T"
   565 jump *label155 always
 
   579 set :compare58:b 2
   580 set :compare58:expected "FTFT"
   581 assertflush
-    * op equal *tmp169 :compare58:a :compare58:b
-    * set :eval94:b *tmp169
+  582 op equal :eval94:b :compare58:a :compare58:b
   583 jump *label158 equal :eval94:b false
   584 set *tmp171 "T"
   585 jump *label159 always
 
   588 label *label159
   589 set *tmp170 *tmp171
   590 label *label157
-    * op notEqual *tmp172 :compare58:a :compare58:b
-    * set :eval95:b *tmp172
+  591 op notEqual :eval95:b :compare58:a :compare58:b
   592 jump *label161 equal :eval95:b false
   593 set *tmp174 "T"
   594 jump *label162 always
 
   597 label *label162
   598 set *tmp173 *tmp174
   599 label *label160
-    * op strictEqual *tmp175 :compare58:a :compare58:b
-    * set :eval96:b *tmp175
+  600 op strictEqual :eval96:b :compare58:a :compare58:b
   601 jump *label164 equal :eval96:b false
   602 set *tmp177 "T"
   603 jump *label165 always
 
   607 set *tmp176 *tmp177
   608 label *label163
   609 op strictEqual *tmp179 :compare58:a :compare58:b
-    * op equal *tmp178 *tmp179 false
-    * set :eval97:b *tmp178
+  610 op equal :eval97:b *tmp179 false
   611 jump *label167 equal :eval97:b false
   612 set *tmp181 "T"
   613 jump *label168 always
 
   627 set :compare59:b "B"
   628 set :compare59:expected "FTFT"
   629 assertflush
-    * op equal *tmp183 :compare59:a :compare59:b
-    * set :eval98:b *tmp183
+  630 op equal :eval98:b :compare59:a :compare59:b
   631 jump *label171 equal :eval98:b false
   632 set *tmp185 "T"
   633 jump *label172 always
 
   636 label *label172
   637 set *tmp184 *tmp185
   638 label *label170
-    * op notEqual *tmp186 :compare59:a :compare59:b
-    * set :eval99:b *tmp186
+  639 op notEqual :eval99:b :compare59:a :compare59:b
   640 jump *label174 equal :eval99:b false
   641 set *tmp188 "T"
   642 jump *label175 always
 
   645 label *label175
   646 set *tmp187 *tmp188
   647 label *label173
-    * op strictEqual *tmp189 :compare59:a :compare59:b
-    * set :eval100:b *tmp189
+  648 op strictEqual :eval100:b :compare59:a :compare59:b
   649 jump *label177 equal :eval100:b false
   650 set *tmp191 "T"
   651 jump *label178 always
 
   655 set *tmp190 *tmp191
   656 label *label176
   657 op strictEqual *tmp193 :compare59:a :compare59:b
-    * op equal *tmp192 *tmp193 false
-    * set :eval101:b *tmp192
+  658 op equal :eval101:b *tmp193 false
   659 jump *label180 equal :eval101:b false
   660 set *tmp195 "T"
   661 jump *label181 always
 
   675 set :compare60:b "A"
   676 set :compare60:expected "TFTF"
   677 assertflush
-    * op equal *tmp197 :compare60:a :compare60:b
-    * set :eval102:b *tmp197
+  678 op equal :eval102:b :compare60:a :compare60:b
   679 jump *label184 equal :eval102:b false
   680 set *tmp199 "T"
   681 jump *label185 always
 
   684 label *label185
   685 set *tmp198 *tmp199
   686 label *label183
-    * op notEqual *tmp200 :compare60:a :compare60:b
-    * set :eval103:b *tmp200
+  687 op notEqual :eval103:b :compare60:a :compare60:b
   688 jump *label187 equal :eval103:b false
   689 set *tmp202 "T"
   690 jump *label188 always
 
   693 label *label188
   694 set *tmp201 *tmp202
   695 label *label186
-    * op strictEqual *tmp203 :compare60:a :compare60:b
-    * set :eval104:b *tmp203
+  696 op strictEqual :eval104:b :compare60:a :compare60:b
   697 jump *label190 equal :eval104:b false
   698 set *tmp205 "T"
   699 jump *label191 always
 
   703 set *tmp204 *tmp205
   704 label *label189
   705 op strictEqual *tmp207 :compare60:a :compare60:b
-    * op equal *tmp206 *tmp207 false
-    * set :eval105:b *tmp206
+  706 op equal :eval105:b *tmp207 false
   707 jump *label193 equal :eval105:b false
   708 set *tmp209 "T"
   709 jump *label194 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-12 instructions):
 
     3 set :compare:b 0
     4 set :compare:expected "TFFT"
     5 assertflush
-    * op equal :eval:b :compare:a :compare:b
-    * jump *label2 equal :eval:b false
+    6 op equal :eval:b null 0
+    7 jump *label2 equal true false
     8 set *tmp3 "T"
     9 jump *label3 always
    10 label *label2
-    * set *tmp3 "F"
    11 label *label3
-    * set *tmp2 *tmp3
+   12 set *tmp2 "T"
    13 label *label1
-    * op notEqual :eval47:b :compare:a :compare:b
-    * jump *label5 equal :eval47:b false
-    * set *tmp6 "T"
+   14 op notEqual :eval47:b null 0
+   15 jump *label5 equal false false
    16 jump *label6 always
    17 label *label5
    18 set *tmp6 "F"
    19 label *label6
-    * set *tmp5 *tmp6
+   20 set *tmp5 "F"
    21 label *label4
-    * op strictEqual :eval48:b :compare:a :compare:b
-    * jump *label8 equal :eval48:b false
-    * set *tmp9 "T"
+   22 op strictEqual :eval48:b null 0
+   23 jump *label8 equal false false
    24 jump *label9 always
    25 label *label8
    26 set *tmp9 "F"
    27 label *label9
-    * set *tmp8 *tmp9
+   28 set *tmp8 "F"
    29 label *label7
-    * op strictEqual *tmp11 :compare:a :compare:b
-    * op equal :eval49:b *tmp11 false
-    * jump *label11 equal :eval49:b false
+   30 op strictEqual *tmp11 null 0
+   31 op equal :eval49:b false false
+   32 jump *label11 equal true false
    33 set *tmp13 "T"
    34 jump *label12 always
    35 label *label11
-    * set *tmp13 "F"
    36 label *label12
-    * set *tmp12 *tmp13
+   37 set *tmp12 "T"
    38 label *label10
-    * print *tmp2
-    * print *tmp5
-    * print *tmp8
-    * print *tmp12
-    * assertprints :compare:expected :compare:title
+   39 print *tmp3
+   40 print *tmp6
+   41 print *tmp9
+   42 print *tmp13
+   43 assertprints "TFFT" "comparison 1"
    44 label *label0
    45 set :compare47:title "comparison 2"
    46 set :compare47:a null
    47 set :compare47:b 1
    48 set :compare47:expected "FTFT"
    49 assertflush
-    * op equal :eval50:b :compare47:a :compare47:b
-    * jump *label15 equal :eval50:b false
-    * set *tmp17 "T"
+   50 op equal :eval50:b null 1
+   51 jump *label15 equal false false
    52 jump *label16 always
    53 label *label15
    54 set *tmp17 "F"
    55 label *label16
-    * set *tmp16 *tmp17
+   56 set *tmp16 "F"
    57 label *label14
-    * op notEqual :eval51:b :compare47:a :compare47:b
-    * jump *label18 equal :eval51:b false
+   58 op notEqual :eval51:b null 1
+   59 jump *label18 equal true false
    60 set *tmp20 "T"
    61 jump *label19 always
    62 label *label18
-    * set *tmp20 "F"
    63 label *label19
-    * set *tmp19 *tmp20
+   64 set *tmp19 "T"
    65 label *label17
-    * op strictEqual :eval52:b :compare47:a :compare47:b
-    * jump *label21 equal :eval52:b false
-    * set *tmp23 "T"
+   66 op strictEqual :eval52:b null 1
+   67 jump *label21 equal false false
    68 jump *label22 always
    69 label *label21
    70 set *tmp23 "F"
    71 label *label22
-    * set *tmp22 *tmp23
+   72 set *tmp22 "F"
    73 label *label20
-    * op strictEqual *tmp25 :compare47:a :compare47:b
-    * op equal :eval53:b *tmp25 false
-    * jump *label24 equal :eval53:b false
+   74 op strictEqual *tmp25 null 1
+   75 op equal :eval53:b false false
+   76 jump *label24 equal true false
    77 set *tmp27 "T"
    78 jump *label25 always
    79 label *label24
-    * set *tmp27 "F"
    80 label *label25
-    * set *tmp26 *tmp27
+   81 set *tmp26 "T"
    82 label *label23
-    * print *tmp16
-    * print *tmp19
-    * print *tmp22
-    * print *tmp26
-    * assertprints :compare47:expected :compare47:title
+   83 print *tmp17
+   84 print *tmp20
+   85 print *tmp23
+   86 print *tmp27
+   87 assertprints "FTFT" "comparison 2"
    88 label *label13
    89 set :compare48:title "comparison 3"
    90 set :compare48:a null
    91 set :compare48:b 2
    92 set :compare48:expected "FTFT"
    93 assertflush
-    * op equal :eval54:b :compare48:a :compare48:b
-    * jump *label28 equal :eval54:b false
-    * set *tmp31 "T"
+   94 op equal :eval54:b null 2
+   95 jump *label28 equal false false
    96 jump *label29 always
    97 label *label28
    98 set *tmp31 "F"
    99 label *label29
-    * set *tmp30 *tmp31
+  100 set *tmp30 "F"
   101 label *label27
-    * op notEqual :eval55:b :compare48:a :compare48:b
-    * jump *label31 equal :eval55:b false
+  102 op notEqual :eval55:b null 2
+  103 jump *label31 equal true false
   104 set *tmp34 "T"
   105 jump *label32 always
   106 label *label31
-    * set *tmp34 "F"
   107 label *label32
-    * set *tmp33 *tmp34
+  108 set *tmp33 "T"
   109 label *label30
-    * op strictEqual :eval56:b :compare48:a :compare48:b
-    * jump *label34 equal :eval56:b false
-    * set *tmp37 "T"
+  110 op strictEqual :eval56:b null 2
+  111 jump *label34 equal false false
   112 jump *label35 always
   113 label *label34
   114 set *tmp37 "F"
   115 label *label35
-    * set *tmp36 *tmp37
+  116 set *tmp36 "F"
   117 label *label33
-    * op strictEqual *tmp39 :compare48:a :compare48:b
-    * op equal :eval57:b *tmp39 false
-    * jump *label37 equal :eval57:b false
+  118 op strictEqual *tmp39 null 2
+  119 op equal :eval57:b false false
+  120 jump *label37 equal true false
   121 set *tmp41 "T"
   122 jump *label38 always
   123 label *label37
-    * set *tmp41 "F"
   124 label *label38
-    * set *tmp40 *tmp41
+  125 set *tmp40 "T"
   126 label *label36
-    * print *tmp30
-    * print *tmp33
-    * print *tmp36
-    * print *tmp40
-    * assertprints :compare48:expected :compare48:title
+  127 print *tmp31
+  128 print *tmp34
+  129 print *tmp37
+  130 print *tmp41
+  131 assertprints "FTFT" "comparison 3"
   132 label *label26
   133 set :compare49:title "comparison 4"
   134 set :compare49:a @coal
   135 set :compare49:b 0
   136 set :compare49:expected "FTFT"
   137 assertflush
-    * op equal :eval58:b :compare49:a :compare49:b
+  138 op equal :eval58:b @coal 0
   139 jump *label41 equal :eval58:b false
   140 set *tmp45 "T"
   141 jump *label42 always
 
   144 label *label42
   145 set *tmp44 *tmp45
   146 label *label40
-    * op notEqual :eval59:b :compare49:a :compare49:b
+  147 op notEqual :eval59:b @coal 0
   148 jump *label44 equal :eval59:b false
   149 set *tmp48 "T"
   150 jump *label45 always
 
   153 label *label45
   154 set *tmp47 *tmp48
   155 label *label43
-    * op strictEqual :eval60:b :compare49:a :compare49:b
+  156 op strictEqual :eval60:b @coal 0
   157 jump *label47 equal :eval60:b false
   158 set *tmp51 "T"
   159 jump *label48 always
 
   162 label *label48
   163 set *tmp50 *tmp51
   164 label *label46
-    * op strictEqual *tmp53 :compare49:a :compare49:b
-    * op equal :eval61:b *tmp53 false
+  165 op strictEqual *tmp53 @coal 0
+  166 op equal :eval61:b :eval60:b false
   167 jump *label50 equal :eval61:b false
   168 set *tmp55 "T"
   169 jump *label51 always
 
   172 label *label51
   173 set *tmp54 *tmp55
   174 label *label49
-    * print *tmp44
-    * print *tmp47
-    * print *tmp50
-    * print *tmp54
-    * assertprints :compare49:expected :compare49:title
+  175 print *tmp45
+  176 print *tmp48
+  177 print *tmp51
+  178 print *tmp55
+  179 assertprints "FTFT" "comparison 4"
   180 label *label39
   181 set :compare50:title "comparison 5"
   182 set :compare50:a @coal
   183 set :compare50:b 1
   184 set :compare50:expected "TFFT"
   185 assertflush
-    * op equal :eval62:b :compare50:a :compare50:b
+  186 op equal :eval62:b @coal 1
   187 jump *label54 equal :eval62:b false
   188 set *tmp59 "T"
   189 jump *label55 always
 
   192 label *label55
   193 set *tmp58 *tmp59
   194 label *label53
-    * op notEqual :eval63:b :compare50:a :compare50:b
+  195 op notEqual :eval63:b @coal 1
   196 jump *label57 equal :eval63:b false
   197 set *tmp62 "T"
   198 jump *label58 always
 
   201 label *label58
   202 set *tmp61 *tmp62
   203 label *label56
-    * op strictEqual :eval64:b :compare50:a :compare50:b
+  204 op strictEqual :eval64:b @coal 1
   205 jump *label60 equal :eval64:b false
   206 set *tmp65 "T"
   207 jump *label61 always
 
   210 label *label61
   211 set *tmp64 *tmp65
   212 label *label59
-    * op strictEqual *tmp67 :compare50:a :compare50:b
-    * op equal :eval65:b *tmp67 false
+  213 op strictEqual *tmp67 @coal 1
+  214 op equal :eval65:b :eval64:b false
   215 jump *label63 equal :eval65:b false
   216 set *tmp69 "T"
   217 jump *label64 always
 
   220 label *label64
   221 set *tmp68 *tmp69
   222 label *label62
-    * print *tmp58
-    * print *tmp61
-    * print *tmp64
-    * print *tmp68
-    * assertprints :compare50:expected :compare50:title
+  223 print *tmp59
+  224 print *tmp62
+  225 print *tmp65
+  226 print *tmp69
+  227 assertprints "TFFT" "comparison 5"
   228 label *label52
   229 set :compare51:title "comparison 6"
   230 set :compare51:a @coal
   231 set :compare51:b 2
   232 set :compare51:expected "FTFT"
   233 assertflush
-    * op equal :eval66:b :compare51:a :compare51:b
+  234 op equal :eval66:b @coal 2
   235 jump *label67 equal :eval66:b false
   236 set *tmp73 "T"
   237 jump *label68 always
 
   240 label *label68
   241 set *tmp72 *tmp73
   242 label *label66
-    * op notEqual :eval67:b :compare51:a :compare51:b
+  243 op notEqual :eval67:b @coal 2
   244 jump *label70 equal :eval67:b false
   245 set *tmp76 "T"
   246 jump *label71 always
 
   249 label *label71
   250 set *tmp75 *tmp76
   251 label *label69
-    * op strictEqual :eval68:b :compare51:a :compare51:b
+  252 op strictEqual :eval68:b @coal 2
   253 jump *label73 equal :eval68:b false
   254 set *tmp79 "T"
   255 jump *label74 always
 
   258 label *label74
   259 set *tmp78 *tmp79
   260 label *label72
-    * op strictEqual *tmp81 :compare51:a :compare51:b
-    * op equal :eval69:b *tmp81 false
+  261 op strictEqual *tmp81 @coal 2
+  262 op equal :eval69:b :eval68:b false
   263 jump *label76 equal :eval69:b false
   264 set *tmp83 "T"
   265 jump *label77 always
 
   268 label *label77
   269 set *tmp82 *tmp83
   270 label *label75
-    * print *tmp72
-    * print *tmp75
-    * print *tmp78
-    * print *tmp82
-    * assertprints :compare51:expected :compare51:title
+  271 print *tmp73
+  272 print *tmp76
+  273 print *tmp79
+  274 print *tmp83
+  275 assertprints "FTFT" "comparison 6"
   276 label *label65
   277 set :compare52:title "comparison 7"
   278 set :compare52:a @coal
   279 set :compare52:b @lead
   280 set :compare52:expected "FTFT"
   281 assertflush
-    * op equal :eval70:b :compare52:a :compare52:b
+  282 op equal :eval70:b @coal @lead
   283 jump *label80 equal :eval70:b false
   284 set *tmp87 "T"
   285 jump *label81 always
 
   288 label *label81
   289 set *tmp86 *tmp87
   290 label *label79
-    * op notEqual :eval71:b :compare52:a :compare52:b
+  291 op notEqual :eval71:b @coal @lead
   292 jump *label83 equal :eval71:b false
   293 set *tmp90 "T"
   294 jump *label84 always
 
   297 label *label84
   298 set *tmp89 *tmp90
   299 label *label82
-    * op strictEqual :eval72:b :compare52:a :compare52:b
+  300 op strictEqual :eval72:b @coal @lead
   301 jump *label86 equal :eval72:b false
   302 set *tmp93 "T"
   303 jump *label87 always
 
   306 label *label87
   307 set *tmp92 *tmp93
   308 label *label85
-    * op strictEqual *tmp95 :compare52:a :compare52:b
-    * op equal :eval73:b *tmp95 false
+  309 op strictEqual *tmp95 @coal @lead
+  310 op equal :eval73:b :eval72:b false
   311 jump *label89 equal :eval73:b false
   312 set *tmp97 "T"
   313 jump *label90 always
 
   316 label *label90
   317 set *tmp96 *tmp97
   318 label *label88
-    * print *tmp86
-    * print *tmp89
-    * print *tmp92
-    * print *tmp96
-    * assertprints :compare52:expected :compare52:title
+  319 print *tmp87
+  320 print *tmp90
+  321 print *tmp93
+  322 print *tmp97
+  323 assertprints "FTFT" "comparison 7"
   324 label *label78
   325 set :compare53:title "comparison 8"
   326 set :compare53:a A
   327 set :compare53:b A
   328 set :compare53:expected "TFTF"
   329 assertflush
-    * op equal :eval74:b :compare53:a :compare53:b
+  330 op equal :eval74:b A A
   331 jump *label93 equal :eval74:b false
   332 set *tmp101 "T"
   333 jump *label94 always
 
   336 label *label94
   337 set *tmp100 *tmp101
   338 label *label92
-    * op notEqual :eval75:b :compare53:a :compare53:b
+  339 op notEqual :eval75:b A A
   340 jump *label96 equal :eval75:b false
   341 set *tmp104 "T"
   342 jump *label97 always
 
   345 label *label97
   346 set *tmp103 *tmp104
   347 label *label95
-    * op strictEqual :eval76:b :compare53:a :compare53:b
+  348 op strictEqual :eval76:b A A
   349 jump *label99 equal :eval76:b false
   350 set *tmp107 "T"
   351 jump *label100 always
 
   354 label *label100
   355 set *tmp106 *tmp107
   356 label *label98
-    * op strictEqual *tmp109 :compare53:a :compare53:b
-    * op equal :eval77:b *tmp109 false
+  357 op strictEqual *tmp109 A A
+  358 op equal :eval77:b :eval76:b false
   359 jump *label102 equal :eval77:b false
   360 set *tmp111 "T"
   361 jump *label103 always
 
   364 label *label103
   365 set *tmp110 *tmp111
   366 label *label101
-    * print *tmp100
-    * print *tmp103
-    * print *tmp106
-    * print *tmp110
-    * assertprints :compare53:expected :compare53:title
+  367 print *tmp101
+  368 print *tmp104
+  369 print *tmp107
+  370 print *tmp111
+  371 assertprints "TFTF" "comparison 8"
   372 label *label91
   373 set :compare54:title "comparison 9"
   374 set :compare54:a A
   375 set :compare54:b 0
   376 set :compare54:expected "TFTF"
   377 assertflush
-    * op equal :eval78:b :compare54:a :compare54:b
+  378 op equal :eval78:b A 0
   379 jump *label106 equal :eval78:b false
   380 set *tmp115 "T"
   381 jump *label107 always
 
   384 label *label107
   385 set *tmp114 *tmp115
   386 label *label105
-    * op notEqual :eval79:b :compare54:a :compare54:b
+  387 op notEqual :eval79:b A 0
   388 jump *label109 equal :eval79:b false
   389 set *tmp118 "T"
   390 jump *label110 always
 
   393 label *label110
   394 set *tmp117 *tmp118
   395 label *label108
-    * op strictEqual :eval80:b :compare54:a :compare54:b
+  396 op strictEqual :eval80:b A 0
   397 jump *label112 equal :eval80:b false
   398 set *tmp121 "T"
   399 jump *label113 always
 
   402 label *label113
   403 set *tmp120 *tmp121
   404 label *label111
-    * op strictEqual *tmp123 :compare54:a :compare54:b
-    * op equal :eval81:b *tmp123 false
+  405 op strictEqual *tmp123 A 0
+  406 op equal :eval81:b :eval80:b false
   407 jump *label115 equal :eval81:b false
   408 set *tmp125 "T"
   409 jump *label116 always
 
   412 label *label116
   413 set *tmp124 *tmp125
   414 label *label114
-    * print *tmp114
-    * print *tmp117
-    * print *tmp120
-    * print *tmp124
-    * assertprints :compare54:expected :compare54:title
+  415 print *tmp115
+  416 print *tmp118
+  417 print *tmp121
+  418 print *tmp125
+  419 assertprints "TFTF" "comparison 9"
   420 label *label104
   421 set :compare55:title "comparison 10"
   422 set :compare55:a A
   423 set :compare55:b 1
   424 set :compare55:expected "FTFT"
   425 assertflush
-    * op equal :eval82:b :compare55:a :compare55:b
+  426 op equal :eval82:b A 1
   427 jump *label119 equal :eval82:b false
   428 set *tmp129 "T"
   429 jump *label120 always
 
   432 label *label120
   433 set *tmp128 *tmp129
   434 label *label118
-    * op notEqual :eval83:b :compare55:a :compare55:b
+  435 op notEqual :eval83:b A 1
   436 jump *label122 equal :eval83:b false
   437 set *tmp132 "T"
   438 jump *label123 always
 
   441 label *label123
   442 set *tmp131 *tmp132
   443 label *label121
-    * op strictEqual :eval84:b :compare55:a :compare55:b
+  444 op strictEqual :eval84:b A 1
   445 jump *label125 equal :eval84:b false
   446 set *tmp135 "T"
   447 jump *label126 always
 
   450 label *label126
   451 set *tmp134 *tmp135
   452 label *label124
-    * op strictEqual *tmp137 :compare55:a :compare55:b
-    * op equal :eval85:b *tmp137 false
+  453 op strictEqual *tmp137 A 1
+  454 op equal :eval85:b :eval84:b false
   455 jump *label128 equal :eval85:b false
   456 set *tmp139 "T"
   457 jump *label129 always
 
   460 label *label129
   461 set *tmp138 *tmp139
   462 label *label127
-    * print *tmp128
-    * print *tmp131
-    * print *tmp134
-    * print *tmp138
-    * assertprints :compare55:expected :compare55:title
+  463 print *tmp129
+  464 print *tmp132
+  465 print *tmp135
+  466 print *tmp139
+  467 assertprints "FTFT" "comparison 10"
   468 label *label117
   469 set :compare56:title "comparison 11"
   470 set :compare56:a "A"
   471 set :compare56:b 0
   472 set :compare56:expected "FTFT"
   473 assertflush
-    * op equal :eval86:b :compare56:a :compare56:b
+  474 op equal :eval86:b "A" 0
   475 jump *label132 equal :eval86:b false
   476 set *tmp143 "T"
   477 jump *label133 always
 
   480 label *label133
   481 set *tmp142 *tmp143
   482 label *label131
-    * op notEqual :eval87:b :compare56:a :compare56:b
+  483 op notEqual :eval87:b "A" 0
   484 jump *label135 equal :eval87:b false
   485 set *tmp146 "T"
   486 jump *label136 always
 
   489 label *label136
   490 set *tmp145 *tmp146
   491 label *label134
-    * op strictEqual :eval88:b :compare56:a :compare56:b
+  492 op strictEqual :eval88:b "A" 0
   493 jump *label138 equal :eval88:b false
   494 set *tmp149 "T"
   495 jump *label139 always
 
   498 label *label139
   499 set *tmp148 *tmp149
   500 label *label137
-    * op strictEqual *tmp151 :compare56:a :compare56:b
-    * op equal :eval89:b *tmp151 false
+  501 op strictEqual *tmp151 "A" 0
+  502 op equal :eval89:b :eval88:b false
   503 jump *label141 equal :eval89:b false
   504 set *tmp153 "T"
   505 jump *label142 always
 
   508 label *label142
   509 set *tmp152 *tmp153
   510 label *label140
-    * print *tmp142
-    * print *tmp145
-    * print *tmp148
-    * print *tmp152
-    * assertprints :compare56:expected :compare56:title
+  511 print *tmp143
+  512 print *tmp146
+  513 print *tmp149
+  514 print *tmp153
+  515 assertprints "FTFT" "comparison 11"
   516 label *label130
   517 set :compare57:title "comparison 12"
   518 set :compare57:a "A"
   519 set :compare57:b 1
   520 set :compare57:expected "TFFT"
   521 assertflush
-    * op equal :eval90:b :compare57:a :compare57:b
+  522 op equal :eval90:b "A" 1
   523 jump *label145 equal :eval90:b false
   524 set *tmp157 "T"
   525 jump *label146 always
 
   528 label *label146
   529 set *tmp156 *tmp157
   530 label *label144
-    * op notEqual :eval91:b :compare57:a :compare57:b
+  531 op notEqual :eval91:b "A" 1
   532 jump *label148 equal :eval91:b false
   533 set *tmp160 "T"
   534 jump *label149 always
 
   537 label *label149
   538 set *tmp159 *tmp160
   539 label *label147
-    * op strictEqual :eval92:b :compare57:a :compare57:b
+  540 op strictEqual :eval92:b "A" 1
   541 jump *label151 equal :eval92:b false
   542 set *tmp163 "T"
   543 jump *label152 always
 
   546 label *label152
   547 set *tmp162 *tmp163
   548 label *label150
-    * op strictEqual *tmp165 :compare57:a :compare57:b
-    * op equal :eval93:b *tmp165 false
+  549 op strictEqual *tmp165 "A" 1
+  550 op equal :eval93:b :eval92:b false
   551 jump *label154 equal :eval93:b false
   552 set *tmp167 "T"
   553 jump *label155 always
 
   556 label *label155
   557 set *tmp166 *tmp167
   558 label *label153
-    * print *tmp156
-    * print *tmp159
-    * print *tmp162
-    * print *tmp166
-    * assertprints :compare57:expected :compare57:title
+  559 print *tmp157
+  560 print *tmp160
+  561 print *tmp163
+  562 print *tmp167
+  563 assertprints "TFFT" "comparison 12"
   564 label *label143
   565 set :compare58:title "comparison 13"
   566 set :compare58:a "A"
   567 set :compare58:b 2
   568 set :compare58:expected "FTFT"
   569 assertflush
-    * op equal :eval94:b :compare58:a :compare58:b
+  570 op equal :eval94:b "A" 2
   571 jump *label158 equal :eval94:b false
   572 set *tmp171 "T"
   573 jump *label159 always
 
   576 label *label159
   577 set *tmp170 *tmp171
   578 label *label157
-    * op notEqual :eval95:b :compare58:a :compare58:b
+  579 op notEqual :eval95:b "A" 2
   580 jump *label161 equal :eval95:b false
   581 set *tmp174 "T"
   582 jump *label162 always
 
   585 label *label162
   586 set *tmp173 *tmp174
   587 label *label160
-    * op strictEqual :eval96:b :compare58:a :compare58:b
+  588 op strictEqual :eval96:b "A" 2
   589 jump *label164 equal :eval96:b false
   590 set *tmp177 "T"
   591 jump *label165 always
 
   594 label *label165
   595 set *tmp176 *tmp177
   596 label *label163
-    * op strictEqual *tmp179 :compare58:a :compare58:b
-    * op equal :eval97:b *tmp179 false
+  597 op strictEqual *tmp179 "A" 2
+  598 op equal :eval97:b :eval96:b false
   599 jump *label167 equal :eval97:b false
   600 set *tmp181 "T"
   601 jump *label168 always
 
   604 label *label168
   605 set *tmp180 *tmp181
   606 label *label166
-    * print *tmp170
-    * print *tmp173
-    * print *tmp176
-    * print *tmp180
-    * assertprints :compare58:expected :compare58:title
+  607 print *tmp171
+  608 print *tmp174
+  609 print *tmp177
+  610 print *tmp181
+  611 assertprints "FTFT" "comparison 13"
   612 label *label156
   613 set :compare59:title "comparison 14"
   614 set :compare59:a "A"
   615 set :compare59:b "B"
   616 set :compare59:expected "FTFT"
   617 assertflush
-    * op equal :eval98:b :compare59:a :compare59:b
+  618 op equal :eval98:b "A" "B"
   619 jump *label171 equal :eval98:b false
   620 set *tmp185 "T"
   621 jump *label172 always
 
   624 label *label172
   625 set *tmp184 *tmp185
   626 label *label170
-    * op notEqual :eval99:b :compare59:a :compare59:b
+  627 op notEqual :eval99:b "A" "B"
   628 jump *label174 equal :eval99:b false
   629 set *tmp188 "T"
   630 jump *label175 always
 
   633 label *label175
   634 set *tmp187 *tmp188
   635 label *label173
-    * op strictEqual :eval100:b :compare59:a :compare59:b
+  636 op strictEqual :eval100:b "A" "B"
   637 jump *label177 equal :eval100:b false
   638 set *tmp191 "T"
   639 jump *label178 always
 
   642 label *label178
   643 set *tmp190 *tmp191
   644 label *label176
-    * op strictEqual *tmp193 :compare59:a :compare59:b
-    * op equal :eval101:b *tmp193 false
+  645 op strictEqual *tmp193 "A" "B"
+  646 op equal :eval101:b :eval100:b false
   647 jump *label180 equal :eval101:b false
   648 set *tmp195 "T"
   649 jump *label181 always
 
   652 label *label181
   653 set *tmp194 *tmp195
   654 label *label179
-    * print *tmp184
-    * print *tmp187
-    * print *tmp190
-    * print *tmp194
-    * assertprints :compare59:expected :compare59:title
+  655 print *tmp185
+  656 print *tmp188
+  657 print *tmp191
+  658 print *tmp195
+  659 assertprints "FTFT" "comparison 14"
   660 label *label169
   661 set :compare60:title "comparison 15"
   662 set :compare60:a "A"
   663 set :compare60:b "A"
   664 set :compare60:expected "TFTF"
   665 assertflush
-    * op equal :eval102:b :compare60:a :compare60:b
+  666 op equal :eval102:b "A" "A"
   667 jump *label184 equal :eval102:b false
   668 set *tmp199 "T"
   669 jump *label185 always
 
   672 label *label185
   673 set *tmp198 *tmp199
   674 label *label183
-    * op notEqual :eval103:b :compare60:a :compare60:b
+  675 op notEqual :eval103:b "A" "A"
   676 jump *label187 equal :eval103:b false
   677 set *tmp202 "T"
   678 jump *label188 always
 
   681 label *label188
   682 set *tmp201 *tmp202
   683 label *label186
-    * op strictEqual :eval104:b :compare60:a :compare60:b
+  684 op strictEqual :eval104:b "A" "A"
   685 jump *label190 equal :eval104:b false
   686 set *tmp205 "T"
   687 jump *label191 always
 
   690 label *label191
   691 set *tmp204 *tmp205
   692 label *label189
-    * op strictEqual *tmp207 :compare60:a :compare60:b
-    * op equal :eval105:b *tmp207 false
+  693 op strictEqual *tmp207 "A" "A"
+  694 op equal :eval105:b :eval104:b false
   695 jump *label193 equal :eval105:b false
   696 set *tmp209 "T"
   697 jump *label194 always
 
   700 label *label194
   701 set *tmp208 *tmp209
   702 label *label192
-    * print *tmp198
-    * print *tmp201
-    * print *tmp204
-    * print *tmp208
-    * assertprints :compare60:expected :compare60:title
+  703 print *tmp199
+  704 print *tmp202
+  705 print *tmp205
+  706 print *tmp209
+  707 assertprints "TFTF" "comparison 15"
   708 label *label182
   709 stop
   710 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-147 instructions):
     0 set A 0
-    * set :compare:title "comparison 1"
-    * set :compare:a null
-    * set :compare:b 0
-    * set :compare:expected "TFFT"
     1 assertflush
-    * op equal :eval:b null 0
     2 jump *label2 equal true false
     3 set *tmp3 "T"
     4 jump *label3 always
     5 label *label2
     6 label *label3
-    * set *tmp2 "T"
     7 label *label1
-    * op notEqual :eval47:b null 0
     8 jump *label5 equal false false
     9 jump *label6 always
    10 label *label5
    11 set *tmp6 "F"
    12 label *label6
-    * set *tmp5 "F"
    13 label *label4
-    * op strictEqual :eval48:b null 0
    14 jump *label8 equal false false
    15 jump *label9 always
    16 label *label8
    17 set *tmp9 "F"
    18 label *label9
-    * set *tmp8 "F"
    19 label *label7
-    * op strictEqual *tmp11 null 0
-    * op equal :eval49:b false false
    20 jump *label11 equal true false
    21 set *tmp13 "T"
    22 jump *label12 always
    23 label *label11
    24 label *label12
-    * set *tmp12 "T"
    25 label *label10
-    * print *tmp3
-    * print *tmp6
-    * print *tmp9
-    * print *tmp13
+   26 print "T"
+   27 print "F"
+   28 print "F"
+   29 print "T"
    30 assertprints "TFFT" "comparison 1"
    31 label *label0
-    * set :compare47:title "comparison 2"
-    * set :compare47:a null
-    * set :compare47:b 1
-    * set :compare47:expected "FTFT"
    32 assertflush
-    * op equal :eval50:b null 1
    33 jump *label15 equal false false
    34 jump *label16 always
    35 label *label15
    36 set *tmp17 "F"
    37 label *label16
-    * set *tmp16 "F"
    38 label *label14
-    * op notEqual :eval51:b null 1
    39 jump *label18 equal true false
    40 set *tmp20 "T"
    41 jump *label19 always
    42 label *label18
    43 label *label19
-    * set *tmp19 "T"
    44 label *label17
-    * op strictEqual :eval52:b null 1
    45 jump *label21 equal false false
    46 jump *label22 always
    47 label *label21
    48 set *tmp23 "F"
    49 label *label22
-    * set *tmp22 "F"
    50 label *label20
-    * op strictEqual *tmp25 null 1
-    * op equal :eval53:b false false
    51 jump *label24 equal true false
    52 set *tmp27 "T"
    53 jump *label25 always
    54 label *label24
    55 label *label25
-    * set *tmp26 "T"
    56 label *label23
-    * print *tmp17
-    * print *tmp20
-    * print *tmp23
-    * print *tmp27
+   57 print "F"
+   58 print "T"
+   59 print "F"
+   60 print "T"
    61 assertprints "FTFT" "comparison 2"
    62 label *label13
-    * set :compare48:title "comparison 3"
-    * set :compare48:a null
-    * set :compare48:b 2
-    * set :compare48:expected "FTFT"
    63 assertflush
-    * op equal :eval54:b null 2
    64 jump *label28 equal false false
    65 jump *label29 always
    66 label *label28
    67 set *tmp31 "F"
    68 label *label29
-    * set *tmp30 "F"
    69 label *label27
-    * op notEqual :eval55:b null 2
    70 jump *label31 equal true false
    71 set *tmp34 "T"
    72 jump *label32 always
    73 label *label31
    74 label *label32
-    * set *tmp33 "T"
    75 label *label30
-    * op strictEqual :eval56:b null 2
    76 jump *label34 equal false false
    77 jump *label35 always
    78 label *label34
    79 set *tmp37 "F"
    80 label *label35
-    * set *tmp36 "F"
    81 label *label33
-    * op strictEqual *tmp39 null 2
-    * op equal :eval57:b false false
    82 jump *label37 equal true false
    83 set *tmp41 "T"
    84 jump *label38 always
    85 label *label37
    86 label *label38
-    * set *tmp40 "T"
    87 label *label36
-    * print *tmp31
-    * print *tmp34
-    * print *tmp37
-    * print *tmp41
+   88 print "F"
+   89 print "T"
+   90 print "F"
+   91 print "T"
    92 assertprints "FTFT" "comparison 3"
    93 label *label26
-    * set :compare49:title "comparison 4"
-    * set :compare49:a @coal
-    * set :compare49:b 0
-    * set :compare49:expected "FTFT"
    94 assertflush
    95 op equal :eval58:b @coal 0
-    * jump *label41 equal :eval58:b false
-    * set *tmp45 "T"
+   96 jump *label41 equal false false
    97 jump *label42 always
    98 label *label41
    99 set *tmp45 "F"
   100 label *label42
-    * set *tmp44 *tmp45
+  101 set *tmp44 "F"
   102 label *label40
   103 op notEqual :eval59:b @coal 0
-    * jump *label44 equal :eval59:b false
+  104 jump *label44 equal true false
   105 set *tmp48 "T"
   106 jump *label45 always
   107 label *label44
-    * set *tmp48 "F"
   108 label *label45
-    * set *tmp47 *tmp48
+  109 set *tmp47 "T"
   110 label *label43
   111 op strictEqual :eval60:b @coal 0
-    * jump *label47 equal :eval60:b false
-    * set *tmp51 "T"
+  112 jump *label47 equal false false
   113 jump *label48 always
   114 label *label47
   115 set *tmp51 "F"
   116 label *label48
-    * set *tmp50 *tmp51
+  117 set *tmp50 "F"
   118 label *label46
-    * op strictEqual *tmp53 @coal 0
-    * op equal :eval61:b :eval60:b false
-    * jump *label50 equal :eval61:b false
+  119 op equal :eval61:b false false
+  120 jump *label50 equal true false
   121 set *tmp55 "T"
   122 jump *label51 always
   123 label *label50
-    * set *tmp55 "F"
   124 label *label51
-    * set *tmp54 *tmp55
+  125 set *tmp54 "T"
   126 label *label49
-    * print *tmp45
-    * print *tmp48
-    * print *tmp51
-    * print *tmp55
+  127 print "F"
+  128 print "T"
+  129 print "F"
+  130 print "T"
   131 assertprints "FTFT" "comparison 4"
   132 label *label39
-    * set :compare50:title "comparison 5"
-    * set :compare50:a @coal
-    * set :compare50:b 1
-    * set :compare50:expected "TFFT"
   133 assertflush
   134 op equal :eval62:b @coal 1
-    * jump *label54 equal :eval62:b false
+  135 jump *label54 equal true false
   136 set *tmp59 "T"
   137 jump *label55 always
   138 label *label54
-    * set *tmp59 "F"
   139 label *label55
-    * set *tmp58 *tmp59
+  140 set *tmp58 "T"
   141 label *label53
   142 op notEqual :eval63:b @coal 1
-    * jump *label57 equal :eval63:b false
-    * set *tmp62 "T"
+  143 jump *label57 equal false false
   144 jump *label58 always
   145 label *label57
   146 set *tmp62 "F"
   147 label *label58
-    * set *tmp61 *tmp62
+  148 set *tmp61 "F"
   149 label *label56
   150 op strictEqual :eval64:b @coal 1
-    * jump *label60 equal :eval64:b false
-    * set *tmp65 "T"
+  151 jump *label60 equal false false
   152 jump *label61 always
   153 label *label60
   154 set *tmp65 "F"
   155 label *label61
-    * set *tmp64 *tmp65
+  156 set *tmp64 "F"
   157 label *label59
-    * op strictEqual *tmp67 @coal 1
-    * op equal :eval65:b :eval64:b false
-    * jump *label63 equal :eval65:b false
+  158 op equal :eval65:b false false
+  159 jump *label63 equal true false
   160 set *tmp69 "T"
   161 jump *label64 always
   162 label *label63
-    * set *tmp69 "F"
   163 label *label64
-    * set *tmp68 *tmp69
+  164 set *tmp68 "T"
   165 label *label62
-    * print *tmp59
-    * print *tmp62
-    * print *tmp65
-    * print *tmp69
+  166 print "T"
+  167 print "F"
+  168 print "F"
+  169 print "T"
   170 assertprints "TFFT" "comparison 5"
   171 label *label52
-    * set :compare51:title "comparison 6"
-    * set :compare51:a @coal
-    * set :compare51:b 2
-    * set :compare51:expected "FTFT"
   172 assertflush
   173 op equal :eval66:b @coal 2
-    * jump *label67 equal :eval66:b false
-    * set *tmp73 "T"
+  174 jump *label67 equal false false
   175 jump *label68 always
   176 label *label67
   177 set *tmp73 "F"
   178 label *label68
-    * set *tmp72 *tmp73
+  179 set *tmp72 "F"
   180 label *label66
   181 op notEqual :eval67:b @coal 2
-    * jump *label70 equal :eval67:b false
+  182 jump *label70 equal true false
   183 set *tmp76 "T"
   184 jump *label71 always
   185 label *label70
-    * set *tmp76 "F"
   186 label *label71
-    * set *tmp75 *tmp76
+  187 set *tmp75 "T"
   188 label *label69
   189 op strictEqual :eval68:b @coal 2
-    * jump *label73 equal :eval68:b false
-    * set *tmp79 "T"
+  190 jump *label73 equal false false
   191 jump *label74 always
   192 label *label73
   193 set *tmp79 "F"
   194 label *label74
-    * set *tmp78 *tmp79
+  195 set *tmp78 "F"
   196 label *label72
-    * op strictEqual *tmp81 @coal 2
-    * op equal :eval69:b :eval68:b false
-    * jump *label76 equal :eval69:b false
+  197 op equal :eval69:b false false
+  198 jump *label76 equal true false
   199 set *tmp83 "T"
   200 jump *label77 always
   201 label *label76
-    * set *tmp83 "F"
   202 label *label77
-    * set *tmp82 *tmp83
+  203 set *tmp82 "T"
   204 label *label75
-    * print *tmp73
-    * print *tmp76
-    * print *tmp79
-    * print *tmp83
+  205 print "F"
+  206 print "T"
+  207 print "F"
+  208 print "T"
   209 assertprints "FTFT" "comparison 6"
   210 label *label65
-    * set :compare52:title "comparison 7"
-    * set :compare52:a @coal
-    * set :compare52:b @lead
-    * set :compare52:expected "FTFT"
   211 assertflush
   212 op equal :eval70:b @coal @lead
-    * jump *label80 equal :eval70:b false
-    * set *tmp87 "T"
+  213 jump *label80 equal false false
   214 jump *label81 always
   215 label *label80
   216 set *tmp87 "F"
   217 label *label81
-    * set *tmp86 *tmp87
+  218 set *tmp86 "F"
   219 label *label79
   220 op notEqual :eval71:b @coal @lead
-    * jump *label83 equal :eval71:b false
+  221 jump *label83 equal true false
   222 set *tmp90 "T"
   223 jump *label84 always
   224 label *label83
-    * set *tmp90 "F"
   225 label *label84
-    * set *tmp89 *tmp90
+  226 set *tmp89 "T"
   227 label *label82
   228 op strictEqual :eval72:b @coal @lead
-    * jump *label86 equal :eval72:b false
-    * set *tmp93 "T"
+  229 jump *label86 equal false false
   230 jump *label87 always
   231 label *label86
   232 set *tmp93 "F"
   233 label *label87
-    * set *tmp92 *tmp93
+  234 set *tmp92 "F"
   235 label *label85
-    * op strictEqual *tmp95 @coal @lead
-    * op equal :eval73:b :eval72:b false
-    * jump *label89 equal :eval73:b false
+  236 op equal :eval73:b false false
+  237 jump *label89 equal true false
   238 set *tmp97 "T"
   239 jump *label90 always
   240 label *label89
-    * set *tmp97 "F"
   241 label *label90
-    * set *tmp96 *tmp97
+  242 set *tmp96 "T"
   243 label *label88
-    * print *tmp87
-    * print *tmp90
-    * print *tmp93
-    * print *tmp97
+  244 print "F"
+  245 print "T"
+  246 print "F"
+  247 print "T"
   248 assertprints "FTFT" "comparison 7"
   249 label *label78
-    * set :compare53:title "comparison 8"
-    * set :compare53:a A
-    * set :compare53:b A
-    * set :compare53:expected "TFTF"
   250 assertflush
   251 op equal :eval74:b A A
   252 jump *label93 equal :eval74:b false
 
   255 label *label93
   256 set *tmp101 "F"
   257 label *label94
-    * set *tmp100 *tmp101
   258 label *label92
   259 op notEqual :eval75:b A A
   260 jump *label96 equal :eval75:b false
 
   263 label *label96
   264 set *tmp104 "F"
   265 label *label97
-    * set *tmp103 *tmp104
   266 label *label95
   267 op strictEqual :eval76:b A A
   268 jump *label99 equal :eval76:b false
 
   271 label *label99
   272 set *tmp107 "F"
   273 label *label100
-    * set *tmp106 *tmp107
   274 label *label98
-    * op strictEqual *tmp109 A A
   275 op equal :eval77:b :eval76:b false
   276 jump *label102 equal :eval77:b false
   277 set *tmp111 "T"
 
   279 label *label102
   280 set *tmp111 "F"
   281 label *label103
-    * set *tmp110 *tmp111
   282 label *label101
   283 print *tmp101
   284 print *tmp104
 
   286 print *tmp111
   287 assertprints "TFTF" "comparison 8"
   288 label *label91
-    * set :compare54:title "comparison 9"
-    * set :compare54:a A
-    * set :compare54:b 0
-    * set :compare54:expected "TFTF"
   289 assertflush
   290 op equal :eval78:b A 0
   291 jump *label106 equal :eval78:b false
 
   294 label *label106
   295 set *tmp115 "F"
   296 label *label107
-    * set *tmp114 *tmp115
   297 label *label105
   298 op notEqual :eval79:b A 0
   299 jump *label109 equal :eval79:b false
 
   302 label *label109
   303 set *tmp118 "F"
   304 label *label110
-    * set *tmp117 *tmp118
   305 label *label108
   306 op strictEqual :eval80:b A 0
   307 jump *label112 equal :eval80:b false
 
   310 label *label112
   311 set *tmp121 "F"
   312 label *label113
-    * set *tmp120 *tmp121
   313 label *label111
-    * op strictEqual *tmp123 A 0
   314 op equal :eval81:b :eval80:b false
   315 jump *label115 equal :eval81:b false
   316 set *tmp125 "T"
 
   318 label *label115
   319 set *tmp125 "F"
   320 label *label116
-    * set *tmp124 *tmp125
   321 label *label114
   322 print *tmp115
   323 print *tmp118
 
   325 print *tmp125
   326 assertprints "TFTF" "comparison 9"
   327 label *label104
-    * set :compare55:title "comparison 10"
-    * set :compare55:a A
-    * set :compare55:b 1
-    * set :compare55:expected "FTFT"
   328 assertflush
   329 op equal :eval82:b A 1
   330 jump *label119 equal :eval82:b false
 
   333 label *label119
   334 set *tmp129 "F"
   335 label *label120
-    * set *tmp128 *tmp129
   336 label *label118
   337 op notEqual :eval83:b A 1
   338 jump *label122 equal :eval83:b false
 
   341 label *label122
   342 set *tmp132 "F"
   343 label *label123
-    * set *tmp131 *tmp132
   344 label *label121
   345 op strictEqual :eval84:b A 1
   346 jump *label125 equal :eval84:b false
 
   349 label *label125
   350 set *tmp135 "F"
   351 label *label126
-    * set *tmp134 *tmp135
   352 label *label124
-    * op strictEqual *tmp137 A 1
   353 op equal :eval85:b :eval84:b false
   354 jump *label128 equal :eval85:b false
   355 set *tmp139 "T"
 
   357 label *label128
   358 set *tmp139 "F"
   359 label *label129
-    * set *tmp138 *tmp139
   360 label *label127
   361 print *tmp129
   362 print *tmp132
 
   364 print *tmp139
   365 assertprints "FTFT" "comparison 10"
   366 label *label117
-    * set :compare56:title "comparison 11"
-    * set :compare56:a "A"
-    * set :compare56:b 0
-    * set :compare56:expected "FTFT"
   367 assertflush
   368 op equal :eval86:b "A" 0
-    * jump *label132 equal :eval86:b false
-    * set *tmp143 "T"
+  369 jump *label132 equal false false
   370 jump *label133 always
   371 label *label132
   372 set *tmp143 "F"
   373 label *label133
-    * set *tmp142 *tmp143
+  374 set *tmp142 "F"
   375 label *label131
   376 op notEqual :eval87:b "A" 0
-    * jump *label135 equal :eval87:b false
+  377 jump *label135 equal true false
   378 set *tmp146 "T"
   379 jump *label136 always
   380 label *label135
-    * set *tmp146 "F"
   381 label *label136
-    * set *tmp145 *tmp146
+  382 set *tmp145 "T"
   383 label *label134
   384 op strictEqual :eval88:b "A" 0
-    * jump *label138 equal :eval88:b false
-    * set *tmp149 "T"
+  385 jump *label138 equal false false
   386 jump *label139 always
   387 label *label138
   388 set *tmp149 "F"
   389 label *label139
-    * set *tmp148 *tmp149
+  390 set *tmp148 "F"
   391 label *label137
-    * op strictEqual *tmp151 "A" 0
-    * op equal :eval89:b :eval88:b false
-    * jump *label141 equal :eval89:b false
+  392 op equal :eval89:b false false
+  393 jump *label141 equal true false
   394 set *tmp153 "T"
   395 jump *label142 always
   396 label *label141
-    * set *tmp153 "F"
   397 label *label142
-    * set *tmp152 *tmp153
+  398 set *tmp152 "T"
   399 label *label140
-    * print *tmp143
-    * print *tmp146
-    * print *tmp149
-    * print *tmp153
+  400 print "F"
+  401 print "T"
+  402 print "F"
+  403 print "T"
   404 assertprints "FTFT" "comparison 11"
   405 label *label130
-    * set :compare57:title "comparison 12"
-    * set :compare57:a "A"
-    * set :compare57:b 1
-    * set :compare57:expected "TFFT"
   406 assertflush
   407 op equal :eval90:b "A" 1
-    * jump *label145 equal :eval90:b false
+  408 jump *label145 equal true false
   409 set *tmp157 "T"
   410 jump *label146 always
   411 label *label145
-    * set *tmp157 "F"
   412 label *label146
-    * set *tmp156 *tmp157
+  413 set *tmp156 "T"
   414 label *label144
   415 op notEqual :eval91:b "A" 1
-    * jump *label148 equal :eval91:b false
-    * set *tmp160 "T"
+  416 jump *label148 equal false false
   417 jump *label149 always
   418 label *label148
   419 set *tmp160 "F"
   420 label *label149
-    * set *tmp159 *tmp160
+  421 set *tmp159 "F"
   422 label *label147
   423 op strictEqual :eval92:b "A" 1
-    * jump *label151 equal :eval92:b false
-    * set *tmp163 "T"
+  424 jump *label151 equal false false
   425 jump *label152 always
   426 label *label151
   427 set *tmp163 "F"
   428 label *label152
-    * set *tmp162 *tmp163
+  429 set *tmp162 "F"
   430 label *label150
-    * op strictEqual *tmp165 "A" 1
-    * op equal :eval93:b :eval92:b false
-    * jump *label154 equal :eval93:b false
+  431 op equal :eval93:b false false
+  432 jump *label154 equal true false
   433 set *tmp167 "T"
   434 jump *label155 always
   435 label *label154
-    * set *tmp167 "F"
   436 label *label155
-    * set *tmp166 *tmp167
+  437 set *tmp166 "T"
   438 label *label153
-    * print *tmp157
-    * print *tmp160
-    * print *tmp163
-    * print *tmp167
+  439 print "T"
+  440 print "F"
+  441 print "F"
+  442 print "T"
   443 assertprints "TFFT" "comparison 12"
   444 label *label143
-    * set :compare58:title "comparison 13"
-    * set :compare58:a "A"
-    * set :compare58:b 2
-    * set :compare58:expected "FTFT"
   445 assertflush
   446 op equal :eval94:b "A" 2
-    * jump *label158 equal :eval94:b false
-    * set *tmp171 "T"
+  447 jump *label158 equal false false
   448 jump *label159 always
   449 label *label158
   450 set *tmp171 "F"
   451 label *label159
-    * set *tmp170 *tmp171
+  452 set *tmp170 "F"
   453 label *label157
   454 op notEqual :eval95:b "A" 2
-    * jump *label161 equal :eval95:b false
+  455 jump *label161 equal true false
   456 set *tmp174 "T"
   457 jump *label162 always
   458 label *label161
-    * set *tmp174 "F"
   459 label *label162
-    * set *tmp173 *tmp174
+  460 set *tmp173 "T"
   461 label *label160
   462 op strictEqual :eval96:b "A" 2
-    * jump *label164 equal :eval96:b false
-    * set *tmp177 "T"
+  463 jump *label164 equal false false
   464 jump *label165 always
   465 label *label164
   466 set *tmp177 "F"
   467 label *label165
-    * set *tmp176 *tmp177
+  468 set *tmp176 "F"
   469 label *label163
-    * op strictEqual *tmp179 "A" 2
-    * op equal :eval97:b :eval96:b false
-    * jump *label167 equal :eval97:b false
+  470 op equal :eval97:b false false
+  471 jump *label167 equal true false
   472 set *tmp181 "T"
   473 jump *label168 always
   474 label *label167
-    * set *tmp181 "F"
   475 label *label168
-    * set *tmp180 *tmp181
+  476 set *tmp180 "T"
   477 label *label166
-    * print *tmp171
-    * print *tmp174
-    * print *tmp177
-    * print *tmp181
+  478 print "F"
+  479 print "T"
+  480 print "F"
+  481 print "T"
   482 assertprints "FTFT" "comparison 13"
   483 label *label156
-    * set :compare59:title "comparison 14"
-    * set :compare59:a "A"
-    * set :compare59:b "B"
-    * set :compare59:expected "FTFT"
   484 assertflush
   485 op equal :eval98:b "A" "B"
-    * jump *label171 equal :eval98:b false
-    * set *tmp185 "T"
+  486 jump *label171 equal false false
   487 jump *label172 always
   488 label *label171
   489 set *tmp185 "F"
   490 label *label172
-    * set *tmp184 *tmp185
+  491 set *tmp184 "F"
   492 label *label170
   493 op notEqual :eval99:b "A" "B"
-    * jump *label174 equal :eval99:b false
+  494 jump *label174 equal true false
   495 set *tmp188 "T"
   496 jump *label175 always
   497 label *label174
-    * set *tmp188 "F"
   498 label *label175
-    * set *tmp187 *tmp188
+  499 set *tmp187 "T"
   500 label *label173
   501 op strictEqual :eval100:b "A" "B"
-    * jump *label177 equal :eval100:b false
-    * set *tmp191 "T"
+  502 jump *label177 equal false false
   503 jump *label178 always
   504 label *label177
   505 set *tmp191 "F"
   506 label *label178
-    * set *tmp190 *tmp191
+  507 set *tmp190 "F"
   508 label *label176
-    * op strictEqual *tmp193 "A" "B"
-    * op equal :eval101:b :eval100:b false
-    * jump *label180 equal :eval101:b false
+  509 op equal :eval101:b false false
+  510 jump *label180 equal true false
   511 set *tmp195 "T"
   512 jump *label181 always
   513 label *label180
-    * set *tmp195 "F"
   514 label *label181
-    * set *tmp194 *tmp195
+  515 set *tmp194 "T"
   516 label *label179
-    * print *tmp185
-    * print *tmp188
-    * print *tmp191
-    * print *tmp195
+  517 print "F"
+  518 print "T"
+  519 print "F"
+  520 print "T"
   521 assertprints "FTFT" "comparison 14"
   522 label *label169
-    * set :compare60:title "comparison 15"
-    * set :compare60:a "A"
-    * set :compare60:b "A"
-    * set :compare60:expected "TFTF"
   523 assertflush
   524 op equal :eval102:b "A" "A"
-    * jump *label184 equal :eval102:b false
+  525 jump *label184 equal true false
   526 set *tmp199 "T"
   527 jump *label185 always
   528 label *label184
-    * set *tmp199 "F"
   529 label *label185
-    * set *tmp198 *tmp199
+  530 set *tmp198 "T"
   531 label *label183
   532 op notEqual :eval103:b "A" "A"
-    * jump *label187 equal :eval103:b false
-    * set *tmp202 "T"
+  533 jump *label187 equal false false
   534 jump *label188 always
   535 label *label187
   536 set *tmp202 "F"
   537 label *label188
-    * set *tmp201 *tmp202
+  538 set *tmp201 "F"
   539 label *label186
   540 op strictEqual :eval104:b "A" "A"
-    * jump *label190 equal :eval104:b false
+  541 jump *label190 equal true false
   542 set *tmp205 "T"
   543 jump *label191 always
   544 label *label190
-    * set *tmp205 "F"
   545 label *label191
-    * set *tmp204 *tmp205
+  546 set *tmp204 "T"
   547 label *label189
-    * op strictEqual *tmp207 "A" "A"
-    * op equal :eval105:b :eval104:b false
-    * jump *label193 equal :eval105:b false
-    * set *tmp209 "T"
+  548 op equal :eval105:b true false
+  549 jump *label193 equal false false
   550 jump *label194 always
   551 label *label193
   552 set *tmp209 "F"
   553 label *label194
-    * set *tmp208 *tmp209
+  554 set *tmp208 "F"
   555 label *label192
-    * print *tmp199
-    * print *tmp202
-    * print *tmp205
-    * print *tmp209
+  556 print "T"
+  557 print "F"
+  558 print "T"
+  559 print "F"
   560 assertprints "TFTF" "comparison 15"
   561 label *label182
   562 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-120 instructions):
     0 set A 0
     1 assertflush
     2 jump *label2 equal true false
-    * set *tmp3 "T"
     3 jump *label3 always
     4 label *label2
     5 label *label3
 
     7 jump *label5 equal false false
     8 jump *label6 always
     9 label *label5
-    * set *tmp6 "F"
    10 label *label6
    11 label *label4
    12 jump *label8 equal false false
    13 jump *label9 always
    14 label *label8
-    * set *tmp9 "F"
    15 label *label9
    16 label *label7
    17 jump *label11 equal true false
-    * set *tmp13 "T"
    18 jump *label12 always
    19 label *label11
    20 label *label12
 
    29 jump *label15 equal false false
    30 jump *label16 always
    31 label *label15
-    * set *tmp17 "F"
    32 label *label16
    33 label *label14
    34 jump *label18 equal true false
-    * set *tmp20 "T"
    35 jump *label19 always
    36 label *label18
    37 label *label19
 
    39 jump *label21 equal false false
    40 jump *label22 always
    41 label *label21
-    * set *tmp23 "F"
    42 label *label22
    43 label *label20
    44 jump *label24 equal true false
-    * set *tmp27 "T"
    45 jump *label25 always
    46 label *label24
    47 label *label25
 
    56 jump *label28 equal false false
    57 jump *label29 always
    58 label *label28
-    * set *tmp31 "F"
    59 label *label29
    60 label *label27
    61 jump *label31 equal true false
-    * set *tmp34 "T"
    62 jump *label32 always
    63 label *label31
    64 label *label32
 
    66 jump *label34 equal false false
    67 jump *label35 always
    68 label *label34
-    * set *tmp37 "F"
    69 label *label35
    70 label *label33
    71 jump *label37 equal true false
-    * set *tmp41 "T"
    72 jump *label38 always
    73 label *label37
    74 label *label38
 
    80 assertprints "FTFT" "comparison 3"
    81 label *label26
    82 assertflush
-    * op equal :eval58:b @coal 0
    83 jump *label41 equal false false
    84 jump *label42 always
    85 label *label41
-    * set *tmp45 "F"
    86 label *label42
-    * set *tmp44 "F"
    87 label *label40
-    * op notEqual :eval59:b @coal 0
    88 jump *label44 equal true false
-    * set *tmp48 "T"
    89 jump *label45 always
    90 label *label44
    91 label *label45
-    * set *tmp47 "T"
    92 label *label43
-    * op strictEqual :eval60:b @coal 0
    93 jump *label47 equal false false
    94 jump *label48 always
    95 label *label47
-    * set *tmp51 "F"
    96 label *label48
-    * set *tmp50 "F"
    97 label *label46
-    * op equal :eval61:b false false
    98 jump *label50 equal true false
-    * set *tmp55 "T"
    99 jump *label51 always
   100 label *label50
   101 label *label51
-    * set *tmp54 "T"
   102 label *label49
   103 print "F"
   104 print "T"
 
   107 assertprints "FTFT" "comparison 4"
   108 label *label39
   109 assertflush
-    * op equal :eval62:b @coal 1
   110 jump *label54 equal true false
-    * set *tmp59 "T"
   111 jump *label55 always
   112 label *label54
   113 label *label55
-    * set *tmp58 "T"
   114 label *label53
-    * op notEqual :eval63:b @coal 1
   115 jump *label57 equal false false
   116 jump *label58 always
   117 label *label57
-    * set *tmp62 "F"
   118 label *label58
-    * set *tmp61 "F"
   119 label *label56
-    * op strictEqual :eval64:b @coal 1
   120 jump *label60 equal false false
   121 jump *label61 always
   122 label *label60
-    * set *tmp65 "F"
   123 label *label61
-    * set *tmp64 "F"
   124 label *label59
-    * op equal :eval65:b false false
   125 jump *label63 equal true false
-    * set *tmp69 "T"
   126 jump *label64 always
   127 label *label63
   128 label *label64
-    * set *tmp68 "T"
   129 label *label62
   130 print "T"
   131 print "F"
 
   134 assertprints "TFFT" "comparison 5"
   135 label *label52
   136 assertflush
-    * op equal :eval66:b @coal 2
   137 jump *label67 equal false false
   138 jump *label68 always
   139 label *label67
-    * set *tmp73 "F"
   140 label *label68
-    * set *tmp72 "F"
   141 label *label66
-    * op notEqual :eval67:b @coal 2
   142 jump *label70 equal true false
-    * set *tmp76 "T"
   143 jump *label71 always
   144 label *label70
   145 label *label71
-    * set *tmp75 "T"
   146 label *label69
-    * op strictEqual :eval68:b @coal 2
   147 jump *label73 equal false false
   148 jump *label74 always
   149 label *label73
-    * set *tmp79 "F"
   150 label *label74
-    * set *tmp78 "F"
   151 label *label72
-    * op equal :eval69:b false false
   152 jump *label76 equal true false
-    * set *tmp83 "T"
   153 jump *label77 always
   154 label *label76
   155 label *label77
-    * set *tmp82 "T"
   156 label *label75
   157 print "F"
   158 print "T"
 
   161 assertprints "FTFT" "comparison 6"
   162 label *label65
   163 assertflush
-    * op equal :eval70:b @coal @lead
   164 jump *label80 equal false false
   165 jump *label81 always
   166 label *label80
-    * set *tmp87 "F"
   167 label *label81
-    * set *tmp86 "F"
   168 label *label79
-    * op notEqual :eval71:b @coal @lead
   169 jump *label83 equal true false
-    * set *tmp90 "T"
   170 jump *label84 always
   171 label *label83
   172 label *label84
-    * set *tmp89 "T"
   173 label *label82
-    * op strictEqual :eval72:b @coal @lead
   174 jump *label86 equal false false
   175 jump *label87 always
   176 label *label86
-    * set *tmp93 "F"
   177 label *label87
-    * set *tmp92 "F"
   178 label *label85
-    * op equal :eval73:b false false
   179 jump *label89 equal true false
-    * set *tmp97 "T"
   180 jump *label90 always
   181 label *label89
   182 label *label90
-    * set *tmp96 "T"
   183 label *label88
   184 print "F"
   185 print "T"
 
   305 assertprints "FTFT" "comparison 10"
   306 label *label117
   307 assertflush
-    * op equal :eval86:b "A" 0
   308 jump *label132 equal false false
   309 jump *label133 always
   310 label *label132
-    * set *tmp143 "F"
   311 label *label133
-    * set *tmp142 "F"
   312 label *label131
-    * op notEqual :eval87:b "A" 0
   313 jump *label135 equal true false
-    * set *tmp146 "T"
   314 jump *label136 always
   315 label *label135
   316 label *label136
-    * set *tmp145 "T"
   317 label *label134
-    * op strictEqual :eval88:b "A" 0
   318 jump *label138 equal false false
   319 jump *label139 always
   320 label *label138
-    * set *tmp149 "F"
   321 label *label139
-    * set *tmp148 "F"
   322 label *label137
-    * op equal :eval89:b false false
   323 jump *label141 equal true false
-    * set *tmp153 "T"
   324 jump *label142 always
   325 label *label141
   326 label *label142
-    * set *tmp152 "T"
   327 label *label140
   328 print "F"
   329 print "T"
 
   332 assertprints "FTFT" "comparison 11"
   333 label *label130
   334 assertflush
-    * op equal :eval90:b "A" 1
   335 jump *label145 equal true false
-    * set *tmp157 "T"
   336 jump *label146 always
   337 label *label145
   338 label *label146
-    * set *tmp156 "T"
   339 label *label144
-    * op notEqual :eval91:b "A" 1
   340 jump *label148 equal false false
   341 jump *label149 always
   342 label *label148
-    * set *tmp160 "F"
   343 label *label149
-    * set *tmp159 "F"
   344 label *label147
-    * op strictEqual :eval92:b "A" 1
   345 jump *label151 equal false false
   346 jump *label152 always
   347 label *label151
-    * set *tmp163 "F"
   348 label *label152
-    * set *tmp162 "F"
   349 label *label150
-    * op equal :eval93:b false false
   350 jump *label154 equal true false
-    * set *tmp167 "T"
   351 jump *label155 always
   352 label *label154
   353 label *label155
-    * set *tmp166 "T"
   354 label *label153
   355 print "T"
   356 print "F"
 
   359 assertprints "TFFT" "comparison 12"
   360 label *label143
   361 assertflush
-    * op equal :eval94:b "A" 2
   362 jump *label158 equal false false
   363 jump *label159 always
   364 label *label158
-    * set *tmp171 "F"
   365 label *label159
-    * set *tmp170 "F"
   366 label *label157
-    * op notEqual :eval95:b "A" 2
   367 jump *label161 equal true false
-    * set *tmp174 "T"
   368 jump *label162 always
   369 label *label161
   370 label *label162
-    * set *tmp173 "T"
   371 label *label160
-    * op strictEqual :eval96:b "A" 2
   372 jump *label164 equal false false
   373 jump *label165 always
   374 label *label164
-    * set *tmp177 "F"
   375 label *label165
-    * set *tmp176 "F"
   376 label *label163
-    * op equal :eval97:b false false
   377 jump *label167 equal true false
-    * set *tmp181 "T"
   378 jump *label168 always
   379 label *label167
   380 label *label168
-    * set *tmp180 "T"
   381 label *label166
   382 print "F"
   383 print "T"
 
   386 assertprints "FTFT" "comparison 13"
   387 label *label156
   388 assertflush
-    * op equal :eval98:b "A" "B"
   389 jump *label171 equal false false
   390 jump *label172 always
   391 label *label171
-    * set *tmp185 "F"
   392 label *label172
-    * set *tmp184 "F"
   393 label *label170
-    * op notEqual :eval99:b "A" "B"
   394 jump *label174 equal true false
-    * set *tmp188 "T"
   395 jump *label175 always
   396 label *label174
   397 label *label175
-    * set *tmp187 "T"
   398 label *label173
-    * op strictEqual :eval100:b "A" "B"
   399 jump *label177 equal false false
   400 jump *label178 always
   401 label *label177
-    * set *tmp191 "F"
   402 label *label178
-    * set *tmp190 "F"
   403 label *label176
-    * op equal :eval101:b false false
   404 jump *label180 equal true false
-    * set *tmp195 "T"
   405 jump *label181 always
   406 label *label180
   407 label *label181
-    * set *tmp194 "T"
   408 label *label179
   409 print "F"
   410 print "T"
 
   413 assertprints "FTFT" "comparison 14"
   414 label *label169
   415 assertflush
-    * op equal :eval102:b "A" "A"
   416 jump *label184 equal true false
-    * set *tmp199 "T"
   417 jump *label185 always
   418 label *label184
   419 label *label185
-    * set *tmp198 "T"
   420 label *label183
-    * op notEqual :eval103:b "A" "A"
   421 jump *label187 equal false false
   422 jump *label188 always
   423 label *label187
-    * set *tmp202 "F"
   424 label *label188
-    * set *tmp201 "F"
   425 label *label186
-    * op strictEqual :eval104:b "A" "A"
   426 jump *label190 equal true false
-    * set *tmp205 "T"
   427 jump *label191 always
   428 label *label190
   429 label *label191
-    * set *tmp204 "T"
   430 label *label189
-    * op equal :eval105:b true false
   431 jump *label193 equal false false
   432 jump *label194 always
   433 label *label193
-    * set *tmp209 "F"
   434 label *label194
-    * set *tmp208 "F"
   435 label *label192
   436 print "T"
   437 print "F"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
   189 label *label78
   190 assertflush
   191 op equal :eval74:b A A
-    * jump *label93 equal :eval74:b false
+  192 set *tmp101 "F"
+  193 jump *label94 equal :eval74:b false
   194 set *tmp101 "T"
   195 jump *label94 always
-    * label *label93
-    * set *tmp101 "F"
   196 label *label94
   197 label *label92
   198 op notEqual :eval75:b A A
-    * jump *label96 equal :eval75:b false
+  199 set *tmp104 "F"
+  200 jump *label97 equal :eval75:b false
   201 set *tmp104 "T"
   202 jump *label97 always
-    * label *label96
-    * set *tmp104 "F"
   203 label *label97
   204 label *label95
   205 op strictEqual :eval76:b A A
-    * jump *label99 equal :eval76:b false
+  206 set *tmp107 "F"
+  207 jump *label100 equal :eval76:b false
   208 set *tmp107 "T"
   209 jump *label100 always
-    * label *label99
-    * set *tmp107 "F"
   210 label *label100
   211 label *label98
   212 op equal :eval77:b :eval76:b false
-    * jump *label102 equal :eval77:b false
+  213 set *tmp111 "F"
+  214 jump *label103 equal :eval77:b false
   215 set *tmp111 "T"
   216 jump *label103 always
-    * label *label102
-    * set *tmp111 "F"
   217 label *label103
   218 label *label101
   219 print *tmp101
 
   224 label *label91
   225 assertflush
   226 op equal :eval78:b A 0
-    * jump *label106 equal :eval78:b false
+  227 set *tmp115 "F"
+  228 jump *label107 equal :eval78:b false
   229 set *tmp115 "T"
   230 jump *label107 always
-    * label *label106
-    * set *tmp115 "F"
   231 label *label107
   232 label *label105
   233 op notEqual :eval79:b A 0
-    * jump *label109 equal :eval79:b false
+  234 set *tmp118 "F"
+  235 jump *label110 equal :eval79:b false
   236 set *tmp118 "T"
   237 jump *label110 always
-    * label *label109
-    * set *tmp118 "F"
   238 label *label110
   239 label *label108
   240 op strictEqual :eval80:b A 0
-    * jump *label112 equal :eval80:b false
+  241 set *tmp121 "F"
+  242 jump *label113 equal :eval80:b false
   243 set *tmp121 "T"
   244 jump *label113 always
-    * label *label112
-    * set *tmp121 "F"
   245 label *label113
   246 label *label111
   247 op equal :eval81:b :eval80:b false
-    * jump *label115 equal :eval81:b false
+  248 set *tmp125 "F"
+  249 jump *label116 equal :eval81:b false
   250 set *tmp125 "T"
   251 jump *label116 always
-    * label *label115
-    * set *tmp125 "F"
   252 label *label116
   253 label *label114
   254 print *tmp115
 
   259 label *label104
   260 assertflush
   261 op equal :eval82:b A 1
-    * jump *label119 equal :eval82:b false
+  262 set *tmp129 "F"
+  263 jump *label120 equal :eval82:b false
   264 set *tmp129 "T"
   265 jump *label120 always
-    * label *label119
-    * set *tmp129 "F"
   266 label *label120
   267 label *label118
   268 op notEqual :eval83:b A 1
-    * jump *label122 equal :eval83:b false
+  269 set *tmp132 "F"
+  270 jump *label123 equal :eval83:b false
   271 set *tmp132 "T"
   272 jump *label123 always
-    * label *label122
-    * set *tmp132 "F"
   273 label *label123
   274 label *label121
   275 op strictEqual :eval84:b A 1
-    * jump *label125 equal :eval84:b false
+  276 set *tmp135 "F"
+  277 jump *label126 equal :eval84:b false
   278 set *tmp135 "T"
   279 jump *label126 always
-    * label *label125
-    * set *tmp135 "F"
   280 label *label126
   281 label *label124
   282 op equal :eval85:b :eval84:b false
-    * jump *label128 equal :eval85:b false
+  283 set *tmp139 "F"
+  284 jump *label129 equal :eval85:b false
   285 set *tmp139 "T"
   286 jump *label129 always
-    * label *label128
-    * set *tmp139 "F"
   287 label *label129
   288 label *label127
   289 print *tmp129

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-24 instructions):
     0 set A 0
     1 assertflush
-    * jump *label2 equal true false
     2 jump *label3 always
     3 label *label2
     4 label *label3
     5 label *label1
-    * jump *label5 equal false false
+    6 jump *label5 always
     7 jump *label6 always
     8 label *label5
     9 label *label6
    10 label *label4
-    * jump *label8 equal false false
+   11 jump *label8 always
    12 jump *label9 always
    13 label *label8
    14 label *label9
    15 label *label7
-    * jump *label11 equal true false
    16 jump *label12 always
    17 label *label11
    18 label *label12
 
    24 assertprints "TFFT" "comparison 1"
    25 label *label0
    26 assertflush
-    * jump *label15 equal false false
+   27 jump *label15 always
    28 jump *label16 always
    29 label *label15
    30 label *label16
    31 label *label14
-    * jump *label18 equal true false
    32 jump *label19 always
    33 label *label18
    34 label *label19
    35 label *label17
-    * jump *label21 equal false false
+   36 jump *label21 always
    37 jump *label22 always
    38 label *label21
    39 label *label22
    40 label *label20
-    * jump *label24 equal true false
    41 jump *label25 always
    42 label *label24
    43 label *label25
 
    49 assertprints "FTFT" "comparison 2"
    50 label *label13
    51 assertflush
-    * jump *label28 equal false false
+   52 jump *label28 always
    53 jump *label29 always
    54 label *label28
    55 label *label29
    56 label *label27
-    * jump *label31 equal true false
    57 jump *label32 always
    58 label *label31
    59 label *label32
    60 label *label30
-    * jump *label34 equal false false
+   61 jump *label34 always
    62 jump *label35 always
    63 label *label34
    64 label *label35
    65 label *label33
-    * jump *label37 equal true false
    66 jump *label38 always
    67 label *label37
    68 label *label38
 
    74 assertprints "FTFT" "comparison 3"
    75 label *label26
    76 assertflush
-    * jump *label41 equal false false
+   77 jump *label41 always
    78 jump *label42 always
    79 label *label41
    80 label *label42
    81 label *label40
-    * jump *label44 equal true false
    82 jump *label45 always
    83 label *label44
    84 label *label45
    85 label *label43
-    * jump *label47 equal false false
+   86 jump *label47 always
    87 jump *label48 always
    88 label *label47
    89 label *label48
    90 label *label46
-    * jump *label50 equal true false
    91 jump *label51 always
    92 label *label50
    93 label *label51
 
    99 assertprints "FTFT" "comparison 4"
   100 label *label39
   101 assertflush
-    * jump *label54 equal true false
   102 jump *label55 always
   103 label *label54
   104 label *label55
   105 label *label53
-    * jump *label57 equal false false
+  106 jump *label57 always
   107 jump *label58 always
   108 label *label57
   109 label *label58
   110 label *label56
-    * jump *label60 equal false false
+  111 jump *label60 always
   112 jump *label61 always
   113 label *label60
   114 label *label61
   115 label *label59
-    * jump *label63 equal true false
   116 jump *label64 always
   117 label *label63
   118 label *label64
 
   124 assertprints "TFFT" "comparison 5"
   125 label *label52
   126 assertflush
-    * jump *label67 equal false false
+  127 jump *label67 always
   128 jump *label68 always
   129 label *label67
   130 label *label68
   131 label *label66
-    * jump *label70 equal true false
   132 jump *label71 always
   133 label *label70
   134 label *label71
   135 label *label69
-    * jump *label73 equal false false
+  136 jump *label73 always
   137 jump *label74 always
   138 label *label73
   139 label *label74
   140 label *label72
-    * jump *label76 equal true false
   141 jump *label77 always
   142 label *label76
   143 label *label77
 
   149 assertprints "FTFT" "comparison 6"
   150 label *label65
   151 assertflush
-    * jump *label80 equal false false
+  152 jump *label80 always
   153 jump *label81 always
   154 label *label80
   155 label *label81
   156 label *label79
-    * jump *label83 equal true false
   157 jump *label84 always
   158 label *label83
   159 label *label84
   160 label *label82
-    * jump *label86 equal false false
+  161 jump *label86 always
   162 jump *label87 always
   163 label *label86
   164 label *label87
   165 label *label85
-    * jump *label89 equal true false
   166 jump *label90 always
   167 label *label89
   168 label *label90
 
   279 assertprints "FTFT" "comparison 10"
   280 label *label117
   281 assertflush
-    * jump *label132 equal false false
+  282 jump *label132 always
   283 jump *label133 always
   284 label *label132
   285 label *label133
   286 label *label131
-    * jump *label135 equal true false
   287 jump *label136 always
   288 label *label135
   289 label *label136
   290 label *label134
-    * jump *label138 equal false false
+  291 jump *label138 always
   292 jump *label139 always
   293 label *label138
   294 label *label139
   295 label *label137
-    * jump *label141 equal true false
   296 jump *label142 always
   297 label *label141
   298 label *label142
 
   304 assertprints "FTFT" "comparison 11"
   305 label *label130
   306 assertflush
-    * jump *label145 equal true false
   307 jump *label146 always
   308 label *label145
   309 label *label146
   310 label *label144
-    * jump *label148 equal false false
+  311 jump *label148 always
   312 jump *label149 always
   313 label *label148
   314 label *label149
   315 label *label147
-    * jump *label151 equal false false
+  316 jump *label151 always
   317 jump *label152 always
   318 label *label151
   319 label *label152
   320 label *label150
-    * jump *label154 equal true false
   321 jump *label155 always
   322 label *label154
   323 label *label155
 
   329 assertprints "TFFT" "comparison 12"
   330 label *label143
   331 assertflush
-    * jump *label158 equal false false
+  332 jump *label158 always
   333 jump *label159 always
   334 label *label158
   335 label *label159
   336 label *label157
-    * jump *label161 equal true false
   337 jump *label162 always
   338 label *label161
   339 label *label162
   340 label *label160
-    * jump *label164 equal false false
+  341 jump *label164 always
   342 jump *label165 always
   343 label *label164
   344 label *label165
   345 label *label163
-    * jump *label167 equal true false
   346 jump *label168 always
   347 label *label167
   348 label *label168
 
   354 assertprints "FTFT" "comparison 13"
   355 label *label156
   356 assertflush
-    * jump *label171 equal false false
+  357 jump *label171 always
   358 jump *label172 always
   359 label *label171
   360 label *label172
   361 label *label170
-    * jump *label174 equal true false
   362 jump *label175 always
   363 label *label174
   364 label *label175
   365 label *label173
-    * jump *label177 equal false false
+  366 jump *label177 always
   367 jump *label178 always
   368 label *label177
   369 label *label178
   370 label *label176
-    * jump *label180 equal true false
   371 jump *label181 always
   372 label *label180
   373 label *label181
 
   379 assertprints "FTFT" "comparison 14"
   380 label *label169
   381 assertflush
-    * jump *label184 equal true false
   382 jump *label185 always
   383 label *label184
   384 label *label185
   385 label *label183
-    * jump *label187 equal false false
+  386 jump *label187 always
   387 jump *label188 always
   388 label *label187
   389 label *label188
   390 label *label186
-    * jump *label190 equal true false
   391 jump *label191 always
   392 label *label190
   393 label *label191
   394 label *label189
-    * jump *label193 equal false false
+  395 jump *label193 always
   396 jump *label194 always
   397 label *label193
   398 label *label194

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-60 instructions):
     0 set A 0
     1 assertflush
-    * jump *label3 always
     2 label *label2
     3 label *label3
     4 label *label1
     5 jump *label5 always
-    * jump *label6 always
     6 label *label5
     7 label *label6
     8 label *label4
     9 jump *label8 always
-    * jump *label9 always
    10 label *label8
    11 label *label9
    12 label *label7
-    * jump *label12 always
    13 label *label11
    14 label *label12
    15 label *label10
 
    21 label *label0
    22 assertflush
    23 jump *label15 always
-    * jump *label16 always
    24 label *label15
    25 label *label16
    26 label *label14
-    * jump *label19 always
    27 label *label18
    28 label *label19
    29 label *label17
    30 jump *label21 always
-    * jump *label22 always
    31 label *label21
    32 label *label22
    33 label *label20
-    * jump *label25 always
    34 label *label24
    35 label *label25
    36 label *label23
 
    42 label *label13
    43 assertflush
    44 jump *label28 always
-    * jump *label29 always
    45 label *label28
    46 label *label29
    47 label *label27
-    * jump *label32 always
    48 label *label31
    49 label *label32
    50 label *label30
    51 jump *label34 always
-    * jump *label35 always
    52 label *label34
    53 label *label35
    54 label *label33
-    * jump *label38 always
    55 label *label37
    56 label *label38
    57 label *label36
 
    63 label *label26
    64 assertflush
    65 jump *label41 always
-    * jump *label42 always
    66 label *label41
    67 label *label42
    68 label *label40
-    * jump *label45 always
    69 label *label44
    70 label *label45
    71 label *label43
    72 jump *label47 always
-    * jump *label48 always
    73 label *label47
    74 label *label48
    75 label *label46
-    * jump *label51 always
    76 label *label50
    77 label *label51
    78 label *label49
 
    83 assertprints "FTFT" "comparison 4"
    84 label *label39
    85 assertflush
-    * jump *label55 always
    86 label *label54
    87 label *label55
    88 label *label53
    89 jump *label57 always
-    * jump *label58 always
    90 label *label57
    91 label *label58
    92 label *label56
    93 jump *label60 always
-    * jump *label61 always
    94 label *label60
    95 label *label61
    96 label *label59
-    * jump *label64 always
    97 label *label63
    98 label *label64
    99 label *label62
 
   105 label *label52
   106 assertflush
   107 jump *label67 always
-    * jump *label68 always
   108 label *label67
   109 label *label68
   110 label *label66
-    * jump *label71 always
   111 label *label70
   112 label *label71
   113 label *label69
   114 jump *label73 always
-    * jump *label74 always
   115 label *label73
   116 label *label74
   117 label *label72
-    * jump *label77 always
   118 label *label76
   119 label *label77
   120 label *label75
 
   126 label *label65
   127 assertflush
   128 jump *label80 always
-    * jump *label81 always
   129 label *label80
   130 label *label81
   131 label *label79
-    * jump *label84 always
   132 label *label83
   133 label *label84
   134 label *label82
   135 jump *label86 always
-    * jump *label87 always
   136 label *label86
   137 label *label87
   138 label *label85
-    * jump *label90 always
   139 label *label89
   140 label *label90
   141 label *label88
 
   150 set *tmp101 "F"
   151 jump *label94 equal :eval74:b false
   152 set *tmp101 "T"
-    * jump *label94 always
   153 label *label94
   154 label *label92
   155 op notEqual :eval75:b A A
   156 set *tmp104 "F"
   157 jump *label97 equal :eval75:b false
   158 set *tmp104 "T"
-    * jump *label97 always
   159 label *label97
   160 label *label95
   161 op strictEqual :eval76:b A A
   162 set *tmp107 "F"
   163 jump *label100 equal :eval76:b false
   164 set *tmp107 "T"
-    * jump *label100 always
   165 label *label100
   166 label *label98
   167 op equal :eval77:b :eval76:b false
   168 set *tmp111 "F"
   169 jump *label103 equal :eval77:b false
   170 set *tmp111 "T"
-    * jump *label103 always
   171 label *label103
   172 label *label101
   173 print *tmp101
 
   181 set *tmp115 "F"
   182 jump *label107 equal :eval78:b false
   183 set *tmp115 "T"
-    * jump *label107 always
   184 label *label107
   185 label *label105
   186 op notEqual :eval79:b A 0
   187 set *tmp118 "F"
   188 jump *label110 equal :eval79:b false
   189 set *tmp118 "T"
-    * jump *label110 always
   190 label *label110
   191 label *label108
   192 op strictEqual :eval80:b A 0
   193 set *tmp121 "F"
   194 jump *label113 equal :eval80:b false
   195 set *tmp121 "T"
-    * jump *label113 always
   196 label *label113
   197 label *label111
   198 op equal :eval81:b :eval80:b false
   199 set *tmp125 "F"
   200 jump *label116 equal :eval81:b false
   201 set *tmp125 "T"
-    * jump *label116 always
   202 label *label116
   203 label *label114
   204 print *tmp115
 
   212 set *tmp129 "F"
   213 jump *label120 equal :eval82:b false
   214 set *tmp129 "T"
-    * jump *label120 always
   215 label *label120
   216 label *label118
   217 op notEqual :eval83:b A 1
   218 set *tmp132 "F"
   219 jump *label123 equal :eval83:b false
   220 set *tmp132 "T"
-    * jump *label123 always
   221 label *label123
   222 label *label121
   223 op strictEqual :eval84:b A 1
   224 set *tmp135 "F"
   225 jump *label126 equal :eval84:b false
   226 set *tmp135 "T"
-    * jump *label126 always
   227 label *label126
   228 label *label124
   229 op equal :eval85:b :eval84:b false
   230 set *tmp139 "F"
   231 jump *label129 equal :eval85:b false
   232 set *tmp139 "T"
-    * jump *label129 always
   233 label *label129
   234 label *label127
   235 print *tmp129
 
   240 label *label117
   241 assertflush
   242 jump *label132 always
-    * jump *label133 always
   243 label *label132
   244 label *label133
   245 label *label131
-    * jump *label136 always
   246 label *label135
   247 label *label136
   248 label *label134
   249 jump *label138 always
-    * jump *label139 always
   250 label *label138
   251 label *label139
   252 label *label137
-    * jump *label142 always
   253 label *label141
   254 label *label142
   255 label *label140
 
   260 assertprints "FTFT" "comparison 11"
   261 label *label130
   262 assertflush
-    * jump *label146 always
   263 label *label145
   264 label *label146
   265 label *label144
   266 jump *label148 always
-    * jump *label149 always
   267 label *label148
   268 label *label149
   269 label *label147
   270 jump *label151 always
-    * jump *label152 always
   271 label *label151
   272 label *label152
   273 label *label150
-    * jump *label155 always
   274 label *label154
   275 label *label155
   276 label *label153
 
   282 label *label143
   283 assertflush
   284 jump *label158 always
-    * jump *label159 always
   285 label *label158
   286 label *label159
   287 label *label157
-    * jump *label162 always
   288 label *label161
   289 label *label162
   290 label *label160
   291 jump *label164 always
-    * jump *label165 always
   292 label *label164
   293 label *label165
   294 label *label163
-    * jump *label168 always
   295 label *label167
   296 label *label168
   297 label *label166
 
   303 label *label156
   304 assertflush
   305 jump *label171 always
-    * jump *label172 always
   306 label *label171
   307 label *label172
   308 label *label170
-    * jump *label175 always
   309 label *label174
   310 label *label175
   311 label *label173
   312 jump *label177 always
-    * jump *label178 always
   313 label *label177
   314 label *label178
   315 label *label176
-    * jump *label181 always
   316 label *label180
   317 label *label181
   318 label *label179
 
   323 assertprints "FTFT" "comparison 14"
   324 label *label169
   325 assertflush
-    * jump *label185 always
   326 label *label184
   327 label *label185
   328 label *label183
   329 jump *label187 always
-    * jump *label188 always
   330 label *label187
   331 label *label188
   332 label *label186
-    * jump *label191 always
   333 label *label190
   334 label *label191
   335 label *label189
   336 jump *label193 always
-    * jump *label194 always
   337 label *label193
   338 label *label194
   339 label *label192

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-24 instructions):
 
     2 label *label2
     3 label *label3
     4 label *label1
-    * jump *label5 always
     5 label *label5
     6 label *label6
     7 label *label4
-    * jump *label8 always
     8 label *label8
     9 label *label9
    10 label *label7
 
    18 assertprints "TFFT" "comparison 1"
    19 label *label0
    20 assertflush
-    * jump *label15 always
    21 label *label15
    22 label *label16
    23 label *label14
    24 label *label18
    25 label *label19
    26 label *label17
-    * jump *label21 always
    27 label *label21
    28 label *label22
    29 label *label20
 
    37 assertprints "FTFT" "comparison 2"
    38 label *label13
    39 assertflush
-    * jump *label28 always
    40 label *label28
    41 label *label29
    42 label *label27
    43 label *label31
    44 label *label32
    45 label *label30
-    * jump *label34 always
    46 label *label34
    47 label *label35
    48 label *label33
 
    56 assertprints "FTFT" "comparison 3"
    57 label *label26
    58 assertflush
-    * jump *label41 always
    59 label *label41
    60 label *label42
    61 label *label40
    62 label *label44
    63 label *label45
    64 label *label43
-    * jump *label47 always
    65 label *label47
    66 label *label48
    67 label *label46
 
    78 label *label54
    79 label *label55
    80 label *label53
-    * jump *label57 always
    81 label *label57
    82 label *label58
    83 label *label56
-    * jump *label60 always
    84 label *label60
    85 label *label61
    86 label *label59
 
    94 assertprints "TFFT" "comparison 5"
    95 label *label52
    96 assertflush
-    * jump *label67 always
    97 label *label67
    98 label *label68
    99 label *label66
   100 label *label70
   101 label *label71
   102 label *label69
-    * jump *label73 always
   103 label *label73
   104 label *label74
   105 label *label72
 
   113 assertprints "FTFT" "comparison 6"
   114 label *label65
   115 assertflush
-    * jump *label80 always
   116 label *label80
   117 label *label81
   118 label *label79
   119 label *label83
   120 label *label84
   121 label *label82
-    * jump *label86 always
   122 label *label86
   123 label *label87
   124 label *label85
 
   225 assertprints "FTFT" "comparison 10"
   226 label *label117
   227 assertflush
-    * jump *label132 always
   228 label *label132
   229 label *label133
   230 label *label131
   231 label *label135
   232 label *label136
   233 label *label134
-    * jump *label138 always
   234 label *label138
   235 label *label139
   236 label *label137
 
   247 label *label145
   248 label *label146
   249 label *label144
-    * jump *label148 always
   250 label *label148
   251 label *label149
   252 label *label147
-    * jump *label151 always
   253 label *label151
   254 label *label152
   255 label *label150
 
   263 assertprints "TFFT" "comparison 12"
   264 label *label143
   265 assertflush
-    * jump *label158 always
   266 label *label158
   267 label *label159
   268 label *label157
   269 label *label161
   270 label *label162
   271 label *label160
-    * jump *label164 always
   272 label *label164
   273 label *label165
   274 label *label163
 
   282 assertprints "FTFT" "comparison 13"
   283 label *label156
   284 assertflush
-    * jump *label171 always
   285 label *label171
   286 label *label172
   287 label *label170
   288 label *label174
   289 label *label175
   290 label *label173
-    * jump *label177 always
   291 label *label177
   292 label *label178
   293 label *label176
 
   304 label *label184
   305 label *label185
   306 label *label183
-    * jump *label187 always
   307 label *label187
   308 label *label188
   309 label *label186
   310 label *label190
   311 label *label191
   312 label *label189
-    * jump *label193 always
   313 label *label193
   314 label *label194
   315 label *label192

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   132 assertprints "FTFT" "comparison 7"
   133 label *label78
   134 assertflush
-    * op equal :eval74:b A A
+  135 set :eval74:b true
   136 set *tmp101 "F"
   137 jump *label94 equal :eval74:b false
   138 set *tmp101 "T"
   139 label *label94
   140 label *label92
-    * op notEqual :eval75:b A A
+  141 set :eval75:b false
   142 set *tmp104 "F"
   143 jump *label97 equal :eval75:b false
   144 set *tmp104 "T"
   145 label *label97
   146 label *label95
-    * op strictEqual :eval76:b A A
+  147 set :eval76:b true
   148 set *tmp107 "F"
   149 jump *label100 equal :eval76:b false
   150 set *tmp107 "T"

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-4 instructions):
 
   133 label *label78
   134 assertflush
   135 set :eval74:b true
-    * set *tmp101 "F"
-    * jump *label94 equal :eval74:b false
+  136 jump *label94 equal true false
   137 set *tmp101 "T"
   138 label *label94
   139 label *label92
   140 set :eval75:b false
   141 set *tmp104 "F"
-    * jump *label97 equal :eval75:b false
-    * set *tmp104 "T"
+  142 jump *label97 equal false false
   143 label *label97
   144 label *label95
   145 set :eval76:b true
-    * set *tmp107 "F"
-    * jump *label100 equal :eval76:b false
+  146 jump *label100 equal true false
   147 set *tmp107 "T"
   148 label *label100
   149 label *label98
-    * op equal :eval77:b :eval76:b false
+  150 op equal :eval77:b true false
   151 set *tmp111 "F"
-    * jump *label103 equal :eval77:b false
-    * set *tmp111 "T"
+  152 jump *label103 equal false false
   153 label *label103
   154 label *label101
-    * print *tmp101
-    * print *tmp104
-    * print *tmp107
-    * print *tmp111
+  155 print "T"
+  156 print "F"
+  157 print "T"
+  158 print "F"
   159 assertprints "TFTF" "comparison 8"
   160 label *label91
   161 assertflush

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
   132 assertprints "FTFT" "comparison 7"
   133 label *label78
   134 assertflush
-    * set :eval74:b true
   135 jump *label94 equal true false
-    * set *tmp101 "T"
   136 label *label94
   137 label *label92
-    * set :eval75:b false
-    * set *tmp104 "F"
   138 jump *label97 equal false false
   139 label *label97
   140 label *label95
-    * set :eval76:b true
   141 jump *label100 equal true false
-    * set *tmp107 "T"
   142 label *label100
   143 label *label98
-    * op equal :eval77:b true false
-    * set *tmp111 "F"
   144 jump *label103 equal false false
   145 label *label103
   146 label *label101

Modifications by Iterated phase, Jump Normalization, pass 3, iteration 1 (-2 instructions):
 
   132 assertprints "FTFT" "comparison 7"
   133 label *label78
   134 assertflush
-    * jump *label94 equal true false
   135 label *label94
   136 label *label92
-    * jump *label97 equal false false
+  137 jump *label97 always
   138 label *label97
   139 label *label95
-    * jump *label100 equal true false
   140 label *label100
   141 label *label98
-    * jump *label103 equal false false
+  142 jump *label103 always
   143 label *label103
   144 label *label101
   145 print "T"

Modifications by Iterated phase, Single Step Elimination, pass 3, iteration 1 (-2 instructions):
 
   134 assertflush
   135 label *label94
   136 label *label92
-    * jump *label97 always
   137 label *label97
   138 label *label95
   139 label *label100
   140 label *label98
-    * jump *label103 always
   141 label *label103
   142 label *label101
   143 print "T"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
     0 set A 0
     1 assertflush
-    * label *label2
-    * label *label3
-    * label *label1
-    * label *label5
-    * label *label6
-    * label *label4
-    * label *label8
-    * label *label9
-    * label *label7
-    * label *label11
-    * label *label12
-    * label *label10
     2 print "T"
     3 print "F"
     4 print "F"
     5 print "T"
     6 assertprints "TFFT" "comparison 1"
-    * label *label0
     7 assertflush
-    * label *label15
-    * label *label16
-    * label *label14
-    * label *label18
-    * label *label19
-    * label *label17
-    * label *label21
-    * label *label22
-    * label *label20
-    * label *label24
-    * label *label25
-    * label *label23
     8 print "F"
     9 print "T"
    10 print "F"
    11 print "T"
    12 assertprints "FTFT" "comparison 2"
-    * label *label13
    13 assertflush
-    * label *label28
-    * label *label29
-    * label *label27
-    * label *label31
-    * label *label32
-    * label *label30
-    * label *label34
-    * label *label35
-    * label *label33
-    * label *label37
-    * label *label38
-    * label *label36
    14 print "F"
    15 print "T"
    16 print "F"
    17 print "T"
    18 assertprints "FTFT" "comparison 3"
-    * label *label26
    19 assertflush
-    * label *label41
-    * label *label42
-    * label *label40
-    * label *label44
-    * label *label45
-    * label *label43
-    * label *label47
-    * label *label48
-    * label *label46
-    * label *label50
-    * label *label51
-    * label *label49
    20 print "F"
    21 print "T"
    22 print "F"
    23 print "T"
    24 assertprints "FTFT" "comparison 4"
-    * label *label39
    25 assertflush
-    * label *label54
-    * label *label55
-    * label *label53
-    * label *label57
-    * label *label58
-    * label *label56
-    * label *label60
-    * label *label61
-    * label *label59
-    * label *label63
-    * label *label64
-    * label *label62
    26 print "T"
    27 print "F"
    28 print "F"
    29 print "T"
    30 assertprints "TFFT" "comparison 5"
-    * label *label52
    31 assertflush
-    * label *label67
-    * label *label68
-    * label *label66
-    * label *label70
-    * label *label71
-    * label *label69
-    * label *label73
-    * label *label74
-    * label *label72
-    * label *label76
-    * label *label77
-    * label *label75
    32 print "F"
    33 print "T"
    34 print "F"
    35 print "T"
    36 assertprints "FTFT" "comparison 6"
-    * label *label65
    37 assertflush
-    * label *label80
-    * label *label81
-    * label *label79
-    * label *label83
-    * label *label84
-    * label *label82
-    * label *label86
-    * label *label87
-    * label *label85
-    * label *label89
-    * label *label90
-    * label *label88
    38 print "F"
    39 print "T"
    40 print "F"
    41 print "T"
    42 assertprints "FTFT" "comparison 7"
-    * label *label78
    43 assertflush
-    * label *label94
-    * label *label92
-    * label *label97
-    * label *label95
-    * label *label100
-    * label *label98
-    * label *label103
-    * label *label101
    44 print "T"
    45 print "F"
    46 print "T"
    47 print "F"
    48 assertprints "TFTF" "comparison 8"
-    * label *label91
    49 assertflush
    50 op equal :eval78:b A 0
    51 set *tmp115 "F"
    52 jump *label107 equal :eval78:b false
    53 set *tmp115 "T"
    54 label *label107
-    * label *label105
    55 op notEqual :eval79:b A 0
    56 set *tmp118 "F"
    57 jump *label110 equal :eval79:b false
    58 set *tmp118 "T"
    59 label *label110
-    * label *label108
    60 op strictEqual :eval80:b A 0
    61 set *tmp121 "F"
    62 jump *label113 equal :eval80:b false
    63 set *tmp121 "T"
    64 label *label113
-    * label *label111
    65 op equal :eval81:b :eval80:b false
    66 set *tmp125 "F"
    67 jump *label116 equal :eval81:b false
    68 set *tmp125 "T"
    69 label *label116
-    * label *label114
    70 print *tmp115
    71 print *tmp118
    72 print *tmp121
    73 print *tmp125
    74 assertprints "TFTF" "comparison 9"
-    * label *label104
    75 assertflush
    76 op equal :eval82:b A 1
    77 set *tmp129 "F"
    78 jump *label120 equal :eval82:b false
    79 set *tmp129 "T"
    80 label *label120
-    * label *label118
    81 op notEqual :eval83:b A 1
    82 set *tmp132 "F"
    83 jump *label123 equal :eval83:b false
    84 set *tmp132 "T"
    85 label *label123
-    * label *label121
    86 op strictEqual :eval84:b A 1
    87 set *tmp135 "F"
    88 jump *label126 equal :eval84:b false
    89 set *tmp135 "T"
    90 label *label126
-    * label *label124
    91 op equal :eval85:b :eval84:b false
    92 set *tmp139 "F"
    93 jump *label129 equal :eval85:b false
    94 set *tmp139 "T"
    95 label *label129
-    * label *label127
    96 print *tmp129
    97 print *tmp132
    98 print *tmp135
    99 print *tmp139
   100 assertprints "FTFT" "comparison 10"
-    * label *label117
   101 assertflush
-    * label *label132
-    * label *label133
-    * label *label131
-    * label *label135
-    * label *label136
-    * label *label134
-    * label *label138
-    * label *label139
-    * label *label137
-    * label *label141
-    * label *label142
-    * label *label140
   102 print "F"
   103 print "T"
   104 print "F"
   105 print "T"
   106 assertprints "FTFT" "comparison 11"
-    * label *label130
   107 assertflush
-    * label *label145
-    * label *label146
-    * label *label144
-    * label *label148
-    * label *label149
-    * label *label147
-    * label *label151
-    * label *label152
-    * label *label150
-    * label *label154
-    * label *label155
-    * label *label153
   108 print "T"
   109 print "F"
   110 print "F"
   111 print "T"
   112 assertprints "TFFT" "comparison 12"
-    * label *label143
   113 assertflush
-    * label *label158
-    * label *label159
-    * label *label157
-    * label *label161
-    * label *label162
-    * label *label160
-    * label *label164
-    * label *label165
-    * label *label163
-    * label *label167
-    * label *label168
-    * label *label166
   114 print "F"
   115 print "T"
   116 print "F"
   117 print "T"
   118 assertprints "FTFT" "comparison 13"
-    * label *label156
   119 assertflush
-    * label *label171
-    * label *label172
-    * label *label170
-    * label *label174
-    * label *label175
-    * label *label173
-    * label *label177
-    * label *label178
-    * label *label176
-    * label *label180
-    * label *label181
-    * label *label179
   120 print "F"
   121 print "T"
   122 print "F"
   123 print "T"
   124 assertprints "FTFT" "comparison 14"
-    * label *label169
   125 assertflush
-    * label *label184
-    * label *label185
-    * label *label183
-    * label *label187
-    * label *label188
-    * label *label186
-    * label *label190
-    * label *label191
-    * label *label189
-    * label *label193
-    * label *label194
-    * label *label192
   126 print "T"
   127 print "F"
   128 print "T"
   129 print "F"
   130 assertprints "TFTF" "comparison 15"
-    * label *label182
   131 stop
   132 end

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-1 instructions):
 
   129 print "F"
   130 assertprints "TFTF" "comparison 15"
   131 stop
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
     0 set A 0
     1 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+    2 print "TFFT"
     3 assertprints "TFFT" "comparison 1"
     4 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+    5 print "FTFT"
     6 assertprints "FTFT" "comparison 2"
     7 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+    8 print "FTFT"
     9 assertprints "FTFT" "comparison 3"
    10 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   11 print "FTFT"
    12 assertprints "FTFT" "comparison 4"
    13 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   14 print "TFFT"
    15 assertprints "TFFT" "comparison 5"
    16 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   17 print "FTFT"
    18 assertprints "FTFT" "comparison 6"
    19 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   20 print "FTFT"
    21 assertprints "FTFT" "comparison 7"
    22 assertflush
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   23 print "TFTF"
    24 assertprints "TFTF" "comparison 8"
    25 assertflush
    26 op equal :eval78:b A 0
 
    75 print *tmp139
    76 assertprints "FTFT" "comparison 10"
    77 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   78 print "FTFT"
    79 assertprints "FTFT" "comparison 11"
    80 assertflush
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   81 print "TFFT"
    82 assertprints "TFFT" "comparison 12"
    83 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   84 print "FTFT"
    85 assertprints "FTFT" "comparison 13"
    86 assertflush
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   87 print "FTFT"
    88 assertprints "FTFT" "comparison 14"
    89 assertflush
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   90 print "TFTF"
    91 assertprints "TFTF" "comparison 15"
    92 stop

Final code before resolving virtual instructions:

set A 0
assertflush
print "TFFT"
assertprints "TFFT" "comparison 1"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 2"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 3"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 4"
assertflush
print "TFFT"
assertprints "TFFT" "comparison 5"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 6"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 7"
assertflush
print "TFTF"
assertprints "TFTF" "comparison 8"
assertflush
op equal :eval78:b A 0
set *tmp115 "F"
jump *label107 equal :eval78:b false
set *tmp115 "T"
label *label107
op notEqual :eval79:b A 0
set *tmp118 "F"
jump *label110 equal :eval79:b false
set *tmp118 "T"
label *label110
op strictEqual :eval80:b A 0
set *tmp121 "F"
jump *label113 equal :eval80:b false
set *tmp121 "T"
label *label113
op equal :eval81:b :eval80:b false
set *tmp125 "F"
jump *label116 equal :eval81:b false
set *tmp125 "T"
label *label116
print *tmp115
print *tmp118
print *tmp121
print *tmp125
assertprints "TFTF" "comparison 9"
assertflush
op equal :eval82:b A 1
set *tmp129 "F"
jump *label120 equal :eval82:b false
set *tmp129 "T"
label *label120
op notEqual :eval83:b A 1
set *tmp132 "F"
jump *label123 equal :eval83:b false
set *tmp132 "T"
label *label123
op strictEqual :eval84:b A 1
set *tmp135 "F"
jump *label126 equal :eval84:b false
set *tmp135 "T"
label *label126
op equal :eval85:b :eval84:b false
set *tmp139 "F"
jump *label129 equal :eval85:b false
set *tmp139 "T"
label *label129
print *tmp129
print *tmp132
print *tmp135
print *tmp139
assertprints "FTFT" "comparison 10"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 11"
assertflush
print "TFFT"
assertprints "TFFT" "comparison 12"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 13"
assertflush
print "FTFT"
assertprints "FTFT" "comparison 14"
assertflush
print "TFTF"
assertprints "TFTF" "comparison 15"
stop
