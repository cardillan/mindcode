   171 instructions before optimizations.
    12 instructions eliminated by Temp Variables Elimination.
     2 instructions eliminated by Case Expression Optimization.
    10 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
    17 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     2 loops improved by Loop Optimization.
   144 instructions added by Case Switching (4 iterations).
     1 case expressions converted to switched jumps Case Switching.
     8 instructions eliminated by Jump Straightening (4 iterations).
     5 instructions updated by JumpThreading.
    26 instructions eliminated by Print Merging.
   237 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 881):
  * Replicate loop condition at line 68:1                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  o Convert case at line 17:9 (segments: 3, padded low)          size    +5, benefit      221.2, efficiency     44.231
  o Convert case at line 17:9 (segments: 4)                      size    +6, benefit      413.5, efficiency     68.910
  o Convert case at line 17:9 (segments: 5)                      size    +7, benefit      423.1, efficiency     60.440
    Convert case at line 17:9 (segments: 1, padded low)          size  +144, benefit      538.5, efficiency      3.739

Pass 1: speed optimization selection (cost limit 880):
  o Convert case at line 17:9 (segments: 3, padded low)          size    +5, benefit      221.2, efficiency     44.231
  o Convert case at line 17:9 (segments: 4)                      size    +6, benefit      413.5, efficiency     68.910
  o Convert case at line 17:9 (segments: 5)                      size    +7, benefit      423.1, efficiency     60.440
  * Convert case at line 17:9 (segments: 1, padded low)          size  +144, benefit      538.5, efficiency      3.739 (+144 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-2 instructions):
 
    21 getlink *tmp3 :n
    22 set :block *tmp3
    23 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   24 jump *label8 equal *tmp5 @message
    25 jump *label7 always
    26 label *label8
    27 set .MESSAGE :block
    28 set *tmp4 .MESSAGE
    29 jump *label6 always
    30 label *label7
-    * jump *label10 equal *tmp6 @switch
+   31 jump *label10 equal *tmp5 @switch
    32 jump *label9 always
    33 label *label10
    34 set .SWITCH :block
    35 set *tmp4 .SWITCH
    36 jump *label6 always
    37 label *label9
-    * jump *label12 equal *tmp6 @mass-driver
+   38 jump *label12 equal *tmp5 @mass-driver
    39 jump *label11 always
    40 label *label12
    41 sensor *tmp8 :block @firstItem
-    * set *tmp9 *tmp8
-    * jump *label15 equal *tmp9 @titanium
+   42 jump *label15 equal *tmp8 @titanium
    43 jump *label14 always
    44 label *label15
    45 set .TITANIUM :block
    46 set *tmp7 .TITANIUM
    47 jump *label13 always
    48 label *label14
-    * jump *label17 equal *tmp9 @silicon
+   49 jump *label17 equal *tmp8 @silicon
    50 jump *label16 always
    51 label *label17
    52 set .SILICON :block
    53 set *tmp7 .SILICON
    54 jump *label13 always
    55 label *label16
-    * jump *label19 equal *tmp9 @copper
+   56 jump *label19 equal *tmp8 @copper
    57 jump *label18 always
    58 label *label19
    59 set .COPPER :block
    60 set *tmp7 .COPPER
    61 jump *label13 always
    62 label *label18
-    * jump *label21 equal *tmp9 @lead
+   63 jump *label21 equal *tmp8 @lead
    64 jump *label20 always
    65 label *label21
    66 set .LEAD :block
 
    72 set *tmp4 *tmp7
    73 jump *label6 always
    74 label *label11
-    * jump *label23 equal *tmp6 @logic-display
+   75 jump *label23 equal *tmp5 @logic-display
    76 jump *label22 always
    77 label *label23
    78 set .DISPLAY :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-5 instructions):
 
    25 jump *label7 always
    26 label *label8
    27 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    28 jump *label6 always
    29 label *label7
    30 jump *label10 equal *tmp5 @switch
    31 jump *label9 always
    32 label *label10
    33 set .SWITCH :block
-    * set *tmp4 .SWITCH
    34 jump *label6 always
    35 label *label9
    36 jump *label12 equal *tmp5 @mass-driver
 
    67 label *label20
    68 set *tmp7 null
    69 label *label13
-    * set *tmp4 *tmp7
    70 jump *label6 always
    71 label *label11
    72 jump *label23 equal *tmp5 @logic-display
    73 jump *label22 always
    74 label *label23
    75 set .DISPLAY :block
-    * set *tmp4 .DISPLAY
    76 jump *label6 always
    77 label *label22
    78 print "\n"
    79 print :block
    80 print " is not supported."
-    * set *tmp4 " is not supported."
    81 label *label6
    82 print "\n"
    83 print "Nominal production: "

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-5 instructions):
 
    41 jump *label14 always
    42 label *label15
    43 set .TITANIUM :block
-    * set *tmp7 .TITANIUM
    44 jump *label13 always
    45 label *label14
    46 jump *label17 equal *tmp8 @silicon
    47 jump *label16 always
    48 label *label17
    49 set .SILICON :block
-    * set *tmp7 .SILICON
    50 jump *label13 always
    51 label *label16
    52 jump *label19 equal *tmp8 @copper
    53 jump *label18 always
    54 label *label19
    55 set .COPPER :block
-    * set *tmp7 .COPPER
    56 jump *label13 always
    57 label *label18
    58 jump *label21 equal *tmp8 @lead
    59 jump *label20 always
    60 label *label21
    61 set .LEAD :block
-    * set *tmp7 .LEAD
    62 jump *label13 always
    63 label *label20
-    * set *tmp7 null
    64 label *label13
    65 jump *label6 always
    66 label *label11

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-12 instructions):
 
    11 print "\n"
    12 print "Configuring..."
    13 print "\n"
-    * set *tmp0 @links
-    * set :n *tmp0
+   14 set :n @links
    15 label *label3
    16 op greaterThan *tmp1 :n 0
    17 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   18 op sub :n :n 1
+   19 getlink :block :n
    20 sensor *tmp5 :block @type
    21 jump *label8 equal *tmp5 @message
    22 jump *label7 always
 
   121 set .ICON_SIZE 16
   122 set .ICON_X 11
   123 set .ICON_Y1 11
-    * op add *tmp17 .ICON_Y1 .ROW_HEIGHT
-    * set .ICON_Y2 *tmp17
-    * op add *tmp18 .ICON_Y2 .ROW_HEIGHT
-    * set .ICON_Y3 *tmp18
-    * op add *tmp19 .ICON_Y3 .ROW_HEIGHT
-    * set .ICON_Y4 *tmp19
+  124 op add .ICON_Y2 .ICON_Y1 .ROW_HEIGHT
+  125 op add .ICON_Y3 .ICON_Y2 .ROW_HEIGHT
+  126 op add .ICON_Y4 .ICON_Y3 .ROW_HEIGHT
   127 set .BAR_X 20
   128 set .BAR_Y1 4
-    * op add *tmp20 .BAR_Y1 .ROW_HEIGHT
-    * set .BAR_Y2 *tmp20
-    * op add *tmp21 .BAR_Y2 .ROW_HEIGHT
-    * set .BAR_Y3 *tmp21
-    * op add *tmp22 .BAR_Y3 .ROW_HEIGHT
-    * set .BAR_Y4 *tmp22
+  129 op add .BAR_Y2 .BAR_Y1 .ROW_HEIGHT
+  130 op add .BAR_Y3 .BAR_Y2 .ROW_HEIGHT
+  131 op add .BAR_Y4 .BAR_Y3 .ROW_HEIGHT
   132 set .BAR_LENGTH 56
-    * op div *tmp23 .BAR_LENGTH 200
-    * set .MULTIPLICATOR *tmp23
-    * set *tmp24 .SWITCH
-    * control enabled *tmp24 0
+  133 op div .MULTIPLICATOR .BAR_LENGTH 200
+  134 control enabled .SWITCH 0
   135 label *label24
   136 sensor *tmp26 .SWITCH @enabled
   137 op equal *tmp27 *tmp26 0
   138 jump *label26 equal *tmp27 false
-    * set *tmp28 @time
-    * set :start *tmp28
+  139 set :start @time
   140 draw clear 0 0 80
   141 draw color 255 255 255 255
   142 draw image .ICON_X .ICON_Y4 @titanium .ICON_SIZE 0

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-8 instructions):
 
    18 op sub :n :n 1
    19 getlink :block :n
    20 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   21 jump *label7 notEqual *tmp5 @message
    22 label *label8
    23 set .MESSAGE :block
    24 jump *label6 always
    25 label *label7
-    * jump *label10 equal *tmp5 @switch
-    * jump *label9 always
+   26 jump *label9 notEqual *tmp5 @switch
    27 label *label10
    28 set .SWITCH :block
    29 jump *label6 always
    30 label *label9
-    * jump *label12 equal *tmp5 @mass-driver
-    * jump *label11 always
+   31 jump *label11 notEqual *tmp5 @mass-driver
    32 label *label12
    33 sensor *tmp8 :block @firstItem
-    * jump *label15 equal *tmp8 @titanium
-    * jump *label14 always
+   34 jump *label14 notEqual *tmp8 @titanium
    35 label *label15
    36 set .TITANIUM :block
    37 jump *label13 always
    38 label *label14
-    * jump *label17 equal *tmp8 @silicon
-    * jump *label16 always
+   39 jump *label16 notEqual *tmp8 @silicon
    40 label *label17
    41 set .SILICON :block
    42 jump *label13 always
    43 label *label16
-    * jump *label19 equal *tmp8 @copper
-    * jump *label18 always
+   44 jump *label18 notEqual *tmp8 @copper
    45 label *label19
    46 set .COPPER :block
    47 jump *label13 always
    48 label *label18
-    * jump *label21 equal *tmp8 @lead
-    * jump *label20 always
+   49 jump *label20 notEqual *tmp8 @lead
    50 label *label21
    51 set .LEAD :block
    52 jump *label13 always
 
    54 label *label13
    55 jump *label6 always
    56 label *label11
-    * jump *label23 equal *tmp5 @logic-display
-    * jump *label22 always
+   57 jump *label22 notEqual *tmp5 @logic-display
    58 label *label23
    59 set .DISPLAY :block
    60 jump *label6 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
    13 print "\n"
    14 set :n @links
    15 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   16 jump *label5 lessThanEq :n 0
    17 op sub :n :n 1
    18 getlink :block :n
    19 sensor *tmp5 :block @type
 
   125 control enabled .SWITCH 0
   126 label *label24
   127 sensor *tmp26 .SWITCH @enabled
-    * op equal *tmp27 *tmp26 0
-    * jump *label26 equal *tmp27 false
+  128 jump *label26 notEqual *tmp26 0
   129 set :start @time
   130 draw clear 0 0 80
   131 draw color 255 255 255 255

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
    48 jump *label20 notEqual *tmp8 @lead
    49 label *label21
    50 set .LEAD :block
-    * jump *label13 always
    51 label *label20
    52 label *label13
    53 jump *label6 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set .EXPECTED_FLOW_STR null
     1 set :flow_str null
     2 set .SWITCH null
-    * set .DISPLAY .SWITCH
-    * set .MESSAGE .DISPLAY
+    3 set .DISPLAY null
+    4 set .MESSAGE .SWITCH
     5 label *label0
     6 set .TITANIUM null
     7 set .SILICON null
 
    63 label *label6
    64 print "\n"
    65 print "Nominal production: "
-    * print .EXPECTED_FLOW_STR
+   66 print null
    67 print "/"
    68 print "min"
    69 print "\n"
    70 print "Actual production: "
-    * print :flow_str
+   71 print null
    72 print "/"
    73 print "min"
    74 label *label4
 
   111 set .ICON_SIZE 16
   112 set .ICON_X 11
   113 set .ICON_Y1 11
-    * op add .ICON_Y2 .ICON_Y1 .ROW_HEIGHT
-    * op add .ICON_Y3 .ICON_Y2 .ROW_HEIGHT
-    * op add .ICON_Y4 .ICON_Y3 .ROW_HEIGHT
+  114 op add .ICON_Y2 11 19
+  115 op add .ICON_Y3 30 19
+  116 op add .ICON_Y4 49 19
   117 set .BAR_X 20
   118 set .BAR_Y1 4
-    * op add .BAR_Y2 .BAR_Y1 .ROW_HEIGHT
-    * op add .BAR_Y3 .BAR_Y2 .ROW_HEIGHT
-    * op add .BAR_Y4 .BAR_Y3 .ROW_HEIGHT
+  119 op add .BAR_Y2 4 19
+  120 op add .BAR_Y3 23 19
+  121 op add .BAR_Y4 42 19
   122 set .BAR_LENGTH 56
-    * op div .MULTIPLICATOR .BAR_LENGTH 200
+  123 op div .MULTIPLICATOR 56 200
   124 control enabled .SWITCH 0
   125 label *label24
   126 sensor *tmp26 .SWITCH @enabled
 
   128 set :start @time
   129 draw clear 0 0 80
   130 draw color 255 255 255 255
-    * draw image .ICON_X .ICON_Y4 @titanium .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y3 @silicon .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y2 @copper .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y1 @lead .ICON_SIZE 0
+  131 draw image 11 68 @titanium 16 0
+  132 draw image 11 49 @silicon 16 0
+  133 draw image 11 30 @copper 16 0
+  134 draw image 11 11 @lead 16 0
   135 draw color 0 128 0 255
   136 sensor *tmp29 .TITANIUM @totalItems
-    * op mul *tmp30 *tmp29 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y4 *tmp30 .BAR_HEIGHT
+  137 op mul *tmp30 *tmp29 0.28
+  138 draw rect 20 61 *tmp30 14
   139 sensor *tmp31 .SILICON @totalItems
-    * op mul *tmp32 *tmp31 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y3 *tmp32 .BAR_HEIGHT
+  140 op mul *tmp32 *tmp31 0.28
+  141 draw rect 20 42 *tmp32 14
   142 sensor *tmp33 .COPPER @totalItems
-    * op mul *tmp34 *tmp33 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y2 *tmp34 .BAR_HEIGHT
+  143 op mul *tmp34 *tmp33 0.28
+  144 draw rect 20 23 *tmp34 14
   145 sensor *tmp35 .LEAD @totalItems
-    * op mul *tmp36 *tmp35 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y1 *tmp36 .BAR_HEIGHT
+  146 op mul *tmp36 *tmp35 0.28
+  147 draw rect 20 4 *tmp36 14
   148 draw color 0 255 0 255
-    * draw lineRect .BAR_X .BAR_Y4 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y3 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y2 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y1 .BAR_LENGTH .BAR_HEIGHT
+  149 draw lineRect 20 61 56 14
+  150 draw lineRect 20 42 56 14
+  151 draw lineRect 20 23 56 14
+  152 draw lineRect 20 4 56 14
   153 drawflush .DISPLAY
   154 print "Surge Alloy Factory Driver Monitor\nElapsed (ms): "
   155 op sub *tmp37 @time :start

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
-    * set .EXPECTED_FLOW_STR null
-    * set :flow_str null
     0 set .SWITCH null
     1 set .DISPLAY null
-    * set .MESSAGE .SWITCH
+    2 set .MESSAGE null
     3 label *label0
     4 set .TITANIUM null
     5 set .SILICON null
 
   104 op or *tmp16 *tmp14 *tmp15
   105 jump *label0 notEqual *tmp16 false
   106 label *label2
-    * set .ROW_HEIGHT 19
-    * set .BAR_HEIGHT 14
-    * set .ICON_SIZE 16
-    * set .ICON_X 11
-    * set .ICON_Y1 11
-    * op add .ICON_Y2 11 19
-    * op add .ICON_Y3 30 19
-    * op add .ICON_Y4 49 19
-    * set .BAR_X 20
-    * set .BAR_Y1 4
-    * op add .BAR_Y2 4 19
-    * op add .BAR_Y3 23 19
-    * op add .BAR_Y4 42 19
-    * set .BAR_LENGTH 56
-    * op div .MULTIPLICATOR 56 200
   107 control enabled .SWITCH 0
   108 label *label24
   109 sensor *tmp26 .SWITCH @enabled

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    12 set :n @links
    13 label *label3
    14 jump *label5 lessThanEq :n 0
+   15 label *label27
    16 op sub :n :n 1
    17 getlink :block :n
    18 sensor *tmp5 :block @type
 
    71 print "/"
    72 print "min"
    73 label *label4
-    * jump *label3 always
+   74 jump *label27 greaterThan :n 0
    75 label *label5
    76 print "Message: "
    77 print .MESSAGE

Modifications by Replicate loop condition at line 68:1 (+1 instructions):
 
   109 label *label24
   110 sensor *tmp26 .SWITCH @enabled
   111 jump *label26 notEqual *tmp26 0
+  112 label *label28
   113 set :start @time
   114 draw clear 0 0 80
   115 draw color 255 255 255 255
 
   142 print *tmp38
   143 printflush .MESSAGE
   144 label *label25
-    * jump *label24 always
+  145 sensor *tmp26 .SWITCH @enabled
+  146 jump *label28 equal *tmp26 0
   147 label *label26
   148 end

Modifications by Convert case at line 17:9 (segments: 1, padded low) (+144 instructions):
 
    16 op sub :n :n 1
    17 getlink :block :n
    18 sensor *tmp5 :block @type
-    * jump *label7 notEqual *tmp5 @message
+   19 sensor *tmp39 *tmp5 @id
+   20 jump *label29 greaterThanEq *tmp39 145
+   21 multijump *label30 *tmp39 0 (m:*label175)
+   22 multilabel *label30 (m:*label175)
+   23 jump *label29 always
+   24 multilabel *label31 (m:*label175)
+   25 jump *label29 always
+   26 multilabel *label32 (m:*label175)
+   27 jump *label29 always
+   28 multilabel *label33 (m:*label175)
+   29 jump *label29 always
+   30 multilabel *label34 (m:*label175)
+   31 jump *label29 always
+   32 multilabel *label35 (m:*label175)
+   33 jump *label29 always
+   34 multilabel *label36 (m:*label175)
+   35 jump *label29 always
+   36 multilabel *label37 (m:*label175)
+   37 jump *label29 always
+   38 multilabel *label38 (m:*label175)
+   39 jump *label29 always
+   40 multilabel *label39 (m:*label175)
+   41 jump *label29 always
+   42 multilabel *label40 (m:*label175)
+   43 jump *label29 always
+   44 multilabel *label41 (m:*label175)
+   45 jump *label29 always
+   46 multilabel *label42 (m:*label175)
+   47 jump *label29 always
+   48 multilabel *label43 (m:*label175)
+   49 jump *label29 always
+   50 multilabel *label44 (m:*label175)
+   51 jump *label29 always
+   52 multilabel *label45 (m:*label175)
+   53 jump *label29 always
+   54 multilabel *label46 (m:*label175)
+   55 jump *label29 always
+   56 multilabel *label47 (m:*label175)
+   57 jump *label29 always
+   58 multilabel *label48 (m:*label175)
+   59 jump *label29 always
+   60 multilabel *label49 (m:*label175)
+   61 jump *label29 always
+   62 multilabel *label50 (m:*label175)
+   63 jump *label29 always
+   64 multilabel *label51 (m:*label175)
+   65 jump *label29 always
+   66 multilabel *label52 (m:*label175)
+   67 jump *label29 always
+   68 multilabel *label53 (m:*label175)
+   69 jump *label29 always
+   70 multilabel *label54 (m:*label175)
+   71 jump *label29 always
+   72 multilabel *label55 (m:*label175)
+   73 jump *label29 always
+   74 multilabel *label56 (m:*label175)
+   75 jump *label29 always
+   76 multilabel *label57 (m:*label175)
+   77 jump *label29 always
+   78 multilabel *label58 (m:*label175)
+   79 jump *label29 always
+   80 multilabel *label59 (m:*label175)
+   81 jump *label29 always
+   82 multilabel *label60 (m:*label175)
+   83 jump *label29 always
+   84 multilabel *label61 (m:*label175)
+   85 jump *label29 always
+   86 multilabel *label62 (m:*label175)
+   87 jump *label29 always
+   88 multilabel *label63 (m:*label175)
+   89 jump *label29 always
+   90 multilabel *label64 (m:*label175)
+   91 jump *label29 always
+   92 multilabel *label65 (m:*label175)
+   93 jump *label29 always
+   94 multilabel *label66 (m:*label175)
+   95 jump *label29 always
+   96 multilabel *label67 (m:*label175)
+   97 jump *label29 always
+   98 multilabel *label68 (m:*label175)
+   99 jump *label29 always
+  100 multilabel *label69 (m:*label175)
+  101 jump *label29 always
+  102 multilabel *label70 (m:*label175)
+  103 jump *label29 always
+  104 multilabel *label71 (m:*label175)
+  105 jump *label29 always
+  106 multilabel *label72 (m:*label175)
+  107 jump *label29 always
+  108 multilabel *label73 (m:*label175)
+  109 jump *label29 always
+  110 multilabel *label74 (m:*label175)
+  111 jump *label29 always
+  112 multilabel *label75 (m:*label175)
+  113 jump *label29 always
+  114 multilabel *label76 (m:*label175)
+  115 jump *label29 always
+  116 multilabel *label77 (m:*label175)
+  117 jump *label29 always
+  118 multilabel *label78 (m:*label175)
+  119 jump *label29 always
+  120 multilabel *label79 (m:*label175)
+  121 jump *label29 always
+  122 multilabel *label80 (m:*label175)
+  123 jump *label29 always
+  124 multilabel *label81 (m:*label175)
+  125 jump *label29 always
+  126 multilabel *label82 (m:*label175)
+  127 jump *label29 always
+  128 multilabel *label83 (m:*label175)
+  129 jump *label29 always
+  130 multilabel *label84 (m:*label175)
+  131 jump *label12 always
+  132 multilabel *label85 (m:*label175)
+  133 jump *label29 always
+  134 multilabel *label86 (m:*label175)
+  135 jump *label29 always
+  136 multilabel *label87 (m:*label175)
+  137 jump *label29 always
+  138 multilabel *label88 (m:*label175)
+  139 jump *label29 always
+  140 multilabel *label89 (m:*label175)
+  141 jump *label29 always
+  142 multilabel *label90 (m:*label175)
+  143 jump *label29 always
+  144 multilabel *label91 (m:*label175)
+  145 jump *label29 always
+  146 multilabel *label92 (m:*label175)
+  147 jump *label29 always
+  148 multilabel *label93 (m:*label175)
+  149 jump *label29 always
+  150 multilabel *label94 (m:*label175)
+  151 jump *label29 always
+  152 multilabel *label95 (m:*label175)
+  153 jump *label29 always
+  154 multilabel *label96 (m:*label175)
+  155 jump *label29 always
+  156 multilabel *label97 (m:*label175)
+  157 jump *label29 always
+  158 multilabel *label98 (m:*label175)
+  159 jump *label29 always
+  160 multilabel *label99 (m:*label175)
+  161 jump *label29 always
+  162 multilabel *label100 (m:*label175)
+  163 jump *label29 always
+  164 multilabel *label101 (m:*label175)
+  165 jump *label29 always
+  166 multilabel *label102 (m:*label175)
+  167 jump *label29 always
+  168 multilabel *label103 (m:*label175)
+  169 jump *label29 always
+  170 multilabel *label104 (m:*label175)
+  171 jump *label29 always
+  172 multilabel *label105 (m:*label175)
+  173 jump *label29 always
+  174 multilabel *label106 (m:*label175)
+  175 jump *label29 always
+  176 multilabel *label107 (m:*label175)
+  177 jump *label29 always
+  178 multilabel *label108 (m:*label175)
+  179 jump *label29 always
+  180 multilabel *label109 (m:*label175)
+  181 jump *label29 always
+  182 multilabel *label110 (m:*label175)
+  183 jump *label29 always
+  184 multilabel *label111 (m:*label175)
+  185 jump *label29 always
+  186 multilabel *label112 (m:*label175)
+  187 jump *label29 always
+  188 multilabel *label113 (m:*label175)
+  189 jump *label29 always
+  190 multilabel *label114 (m:*label175)
+  191 jump *label29 always
+  192 multilabel *label115 (m:*label175)
+  193 jump *label29 always
+  194 multilabel *label116 (m:*label175)
+  195 jump *label29 always
+  196 multilabel *label117 (m:*label175)
+  197 jump *label29 always
+  198 multilabel *label118 (m:*label175)
+  199 jump *label29 always
+  200 multilabel *label119 (m:*label175)
+  201 jump *label29 always
+  202 multilabel *label120 (m:*label175)
+  203 jump *label29 always
+  204 multilabel *label121 (m:*label175)
+  205 jump *label29 always
+  206 multilabel *label122 (m:*label175)
+  207 jump *label29 always
+  208 multilabel *label123 (m:*label175)
+  209 jump *label29 always
+  210 multilabel *label124 (m:*label175)
+  211 jump *label29 always
+  212 multilabel *label125 (m:*label175)
+  213 jump *label29 always
+  214 multilabel *label126 (m:*label175)
+  215 jump *label29 always
+  216 multilabel *label127 (m:*label175)
+  217 jump *label29 always
+  218 multilabel *label128 (m:*label175)
+  219 jump *label29 always
+  220 multilabel *label129 (m:*label175)
+  221 jump *label29 always
+  222 multilabel *label130 (m:*label175)
+  223 jump *label29 always
+  224 multilabel *label131 (m:*label175)
+  225 jump *label29 always
+  226 multilabel *label132 (m:*label175)
+  227 jump *label29 always
+  228 multilabel *label133 (m:*label175)
+  229 jump *label29 always
+  230 multilabel *label134 (m:*label175)
+  231 jump *label29 always
+  232 multilabel *label135 (m:*label175)
+  233 jump *label29 always
+  234 multilabel *label136 (m:*label175)
+  235 jump *label29 always
+  236 multilabel *label137 (m:*label175)
+  237 jump *label29 always
+  238 multilabel *label138 (m:*label175)
+  239 jump *label29 always
+  240 multilabel *label139 (m:*label175)
+  241 jump *label29 always
+  242 multilabel *label140 (m:*label175)
+  243 jump *label29 always
+  244 multilabel *label141 (m:*label175)
+  245 jump *label29 always
+  246 multilabel *label142 (m:*label175)
+  247 jump *label29 always
+  248 multilabel *label143 (m:*label175)
+  249 jump *label29 always
+  250 multilabel *label144 (m:*label175)
+  251 jump *label29 always
+  252 multilabel *label145 (m:*label175)
+  253 jump *label29 always
+  254 multilabel *label146 (m:*label175)
+  255 jump *label29 always
+  256 multilabel *label147 (m:*label175)
+  257 jump *label29 always
+  258 multilabel *label148 (m:*label175)
+  259 jump *label29 always
+  260 multilabel *label149 (m:*label175)
+  261 jump *label29 always
+  262 multilabel *label150 (m:*label175)
+  263 jump *label29 always
+  264 multilabel *label151 (m:*label175)
+  265 jump *label29 always
+  266 multilabel *label152 (m:*label175)
+  267 jump *label29 always
+  268 multilabel *label153 (m:*label175)
+  269 jump *label29 always
+  270 multilabel *label154 (m:*label175)
+  271 jump *label29 always
+  272 multilabel *label155 (m:*label175)
+  273 jump *label29 always
+  274 multilabel *label156 (m:*label175)
+  275 jump *label29 always
+  276 multilabel *label157 (m:*label175)
+  277 jump *label29 always
+  278 multilabel *label158 (m:*label175)
+  279 jump *label29 always
+  280 multilabel *label159 (m:*label175)
+  281 jump *label29 always
+  282 multilabel *label160 (m:*label175)
+  283 jump *label29 always
+  284 multilabel *label161 (m:*label175)
+  285 jump *label29 always
+  286 multilabel *label162 (m:*label175)
+  287 jump *label29 always
+  288 multilabel *label163 (m:*label175)
+  289 jump *label29 always
+  290 multilabel *label164 (m:*label175)
+  291 jump *label29 always
+  292 multilabel *label165 (m:*label175)
+  293 jump *label29 always
+  294 multilabel *label166 (m:*label175)
+  295 jump *label29 always
+  296 multilabel *label167 (m:*label175)
+  297 jump *label8 always
+  298 multilabel *label168 (m:*label175)
+  299 jump *label10 always
+  300 multilabel *label169 (m:*label175)
+  301 jump *label29 always
+  302 multilabel *label170 (m:*label175)
+  303 jump *label29 always
+  304 multilabel *label171 (m:*label175)
+  305 jump *label29 always
+  306 multilabel *label172 (m:*label175)
+  307 jump *label29 always
+  308 multilabel *label173 (m:*label175)
+  309 jump *label29 always
+  310 multilabel *label174 (m:*label175)
+  311 jump *label23 always
   312 label *label8
   313 set .MESSAGE :block
   314 jump *label6 always
   315 label *label7
-    * jump *label9 notEqual *tmp5 @switch
   316 label *label10
   317 set .SWITCH :block
   318 jump *label6 always
   319 label *label9
-    * jump *label11 notEqual *tmp5 @mass-driver
   320 label *label12
   321 sensor *tmp8 :block @firstItem
   322 jump *label14 notEqual *tmp8 @titanium
 
   341 label *label13
   342 jump *label6 always
   343 label *label11
-    * jump *label22 notEqual *tmp5 @logic-display
   344 label *label23
   345 set .DISPLAY :block
   346 jump *label6 always
   347 label *label22
+  348 label *label29
   349 print "\n"
   350 print :block
   351 print " is not supported."

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
    10 print "Configuring..."
    11 print "\n"
    12 set :n @links
-    * label *label3
    13 jump *label5 lessThanEq :n 0
    14 label *label27
    15 op sub :n :n 1
 
   311 label *label8
   312 set .MESSAGE :block
   313 jump *label6 always
-    * label *label7
   314 label *label10
   315 set .SWITCH :block
   316 jump *label6 always
-    * label *label9
   317 label *label12
   318 sensor *tmp8 :block @firstItem
   319 jump *label14 notEqual *tmp8 @titanium
-    * label *label15
   320 set .TITANIUM :block
   321 jump *label13 always
   322 label *label14
   323 jump *label16 notEqual *tmp8 @silicon
-    * label *label17
   324 set .SILICON :block
   325 jump *label13 always
   326 label *label16
   327 jump *label18 notEqual *tmp8 @copper
-    * label *label19
   328 set .COPPER :block
   329 jump *label13 always
   330 label *label18
   331 jump *label20 notEqual *tmp8 @lead
-    * label *label21
   332 set .LEAD :block
   333 label *label20
   334 label *label13
   335 jump *label6 always
-    * label *label11
   336 label *label23
   337 set .DISPLAY :block
   338 jump *label6 always
-    * label *label22
   339 label *label29
   340 print "\n"
   341 print :block
 
   351 print null
   352 print "/"
   353 print "min"
-    * label *label4
   354 jump *label27 greaterThan :n 0
   355 label *label5
   356 print "Message: "
 
   375 print .LEAD
   376 print "\n"
   377 printflush .MESSAGE
-    * label *label1
   378 op equal *tmp10 .TITANIUM null
   379 op equal *tmp11 .SILICON null
   380 op or *tmp12 *tmp10 *tmp11
 
   383 op equal *tmp15 .LEAD null
   384 op or *tmp16 *tmp14 *tmp15
   385 jump *label0 notEqual *tmp16 false
-    * label *label2
   386 control enabled .SWITCH 0
-    * label *label24
   387 sensor *tmp26 .SWITCH @enabled
   388 jump *label26 notEqual *tmp26 0
   389 label *label28
 
   418 op floor *tmp38 *tmp37
   419 print *tmp38
   420 printflush .MESSAGE
-    * label *label25
   421 sensor *tmp26 .SWITCH @enabled
   422 jump *label28 equal *tmp26 0
   423 label *label26

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
+    0 label __start__
     1 set .SWITCH null
     2 set .DISPLAY null
     3 set .MESSAGE null
 
   319 sensor *tmp8 :block @firstItem
   320 jump *label14 notEqual *tmp8 @titanium
   321 set .TITANIUM :block
-    * jump *label13 always
+  322 jump *label6 always
   323 label *label14
   324 jump *label16 notEqual *tmp8 @silicon
   325 set .SILICON :block
-    * jump *label13 always
+  326 jump *label6 always
   327 label *label16
   328 jump *label18 notEqual *tmp8 @copper
   329 set .COPPER :block
-    * jump *label13 always
+  330 jump *label6 always
   331 label *label18
-    * jump *label20 notEqual *tmp8 @lead
+  332 jump *label6 notEqual *tmp8 @lead
   333 set .LEAD :block
   334 label *label20
   335 label *label13
 
   386 jump *label0 notEqual *tmp16 false
   387 control enabled .SWITCH 0
   388 sensor *tmp26 .SWITCH @enabled
-    * jump *label26 notEqual *tmp26 0
+  389 jump __start__ notEqual *tmp26 0
   390 label *label28
   391 set :start @time
   392 draw clear 0 0 80

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1:
 
   331 label *label18
   332 jump *label6 notEqual *tmp8 @lead
   333 set .LEAD :block
-    * label *label20
-    * label *label13
   334 jump *label6 always
   335 label *label23
   336 set .DISPLAY :block
 
   419 printflush .MESSAGE
   420 sensor *tmp26 .SWITCH @enabled
   421 jump *label28 equal *tmp26 0
-    * label *label26
   422 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   419 printflush .MESSAGE
   420 sensor *tmp26 .SWITCH @enabled
   421 jump *label28 equal *tmp26 0
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-26 instructions):
 
     6 set .SILICON null
     7 set .COPPER null
     8 set .LEAD null
-    * print "Surge Alloy Factory Driver Monitor"
-    * print "\n"
-    * print "Configuring..."
-    * print "\n"
+    9 print "Surge Alloy Factory Driver Monitor\nConfiguring...\n"
    10 set :n @links
    11 jump *label5 lessThanEq :n 0
    12 label *label27
 
   333 set .DISPLAY :block
   334 jump *label6 always
   335 label *label29
-    * print "\n"
-    * print :block
-    * print " is not supported."
+  336 print "\n{0} is not supported."
+  337 format :block
   338 label *label6
-    * print "\n"
-    * print "Nominal production: "
-    * print null
-    * print "/"
-    * print "min"
-    * print "\n"
-    * print "Actual production: "
-    * print null
-    * print "/"
-    * print "min"
+  339 print "\nNominal production: null/min\nActual production: null/min"
   340 jump *label27 greaterThan :n 0
   341 label *label5
-    * print "Message: "
-    * print .MESSAGE
-    * print "\n"
-    * print "Switch: "
-    * print .SWITCH
-    * print "\n"
-    * print "Display: "
-    * print .DISPLAY
-    * print "\n"
-    * print "Titanium: "
-    * print .TITANIUM
-    * print "\n"
-    * print "Silicon: "
-    * print .SILICON
-    * print "\n"
-    * print "Copper: "
-    * print .COPPER
-    * print "\n"
-    * print "Lead: "
-    * print .LEAD
-    * print "\n"
+  342 print "Message: {0}\nSwitch: {0}\nDisplay: {0}\nTitanium: {0}\nSilicon: {0}\nCopper: {0}\nLead: {0}\n"
+  343 format .MESSAGE
+  344 format .SWITCH
+  345 format .DISPLAY
+  346 format .TITANIUM
+  347 format .SILICON
+  348 format .COPPER
+  349 format .LEAD
   350 printflush .MESSAGE
   351 op equal *tmp10 .TITANIUM null
   352 op equal *tmp11 .SILICON null

Final code before resolving virtual instructions:

label __start__
set .SWITCH null
set .DISPLAY null
set .MESSAGE null
label *label0
set .TITANIUM null
set .SILICON null
set .COPPER null
set .LEAD null
print "Surge Alloy Factory Driver Monitor\nConfiguring...\n"
set :n @links
jump *label5 lessThanEq :n 0
label *label27
op sub :n :n 1
getlink :block :n
sensor *tmp5 :block @type
sensor *tmp39 *tmp5 @id
jump *label29 greaterThanEq *tmp39 145
multijump *label30 *tmp39 0
multilabel *label30
jump *label29 always
multilabel *label31
jump *label29 always
multilabel *label32
jump *label29 always
multilabel *label33
jump *label29 always
multilabel *label34
jump *label29 always
multilabel *label35
jump *label29 always
multilabel *label36
jump *label29 always
multilabel *label37
jump *label29 always
multilabel *label38
jump *label29 always
multilabel *label39
jump *label29 always
multilabel *label40
jump *label29 always
multilabel *label41
jump *label29 always
multilabel *label42
jump *label29 always
multilabel *label43
jump *label29 always
multilabel *label44
jump *label29 always
multilabel *label45
jump *label29 always
multilabel *label46
jump *label29 always
multilabel *label47
jump *label29 always
multilabel *label48
jump *label29 always
multilabel *label49
jump *label29 always
multilabel *label50
jump *label29 always
multilabel *label51
jump *label29 always
multilabel *label52
jump *label29 always
multilabel *label53
jump *label29 always
multilabel *label54
jump *label29 always
multilabel *label55
jump *label29 always
multilabel *label56
jump *label29 always
multilabel *label57
jump *label29 always
multilabel *label58
jump *label29 always
multilabel *label59
jump *label29 always
multilabel *label60
jump *label29 always
multilabel *label61
jump *label29 always
multilabel *label62
jump *label29 always
multilabel *label63
jump *label29 always
multilabel *label64
jump *label29 always
multilabel *label65
jump *label29 always
multilabel *label66
jump *label29 always
multilabel *label67
jump *label29 always
multilabel *label68
jump *label29 always
multilabel *label69
jump *label29 always
multilabel *label70
jump *label29 always
multilabel *label71
jump *label29 always
multilabel *label72
jump *label29 always
multilabel *label73
jump *label29 always
multilabel *label74
jump *label29 always
multilabel *label75
jump *label29 always
multilabel *label76
jump *label29 always
multilabel *label77
jump *label29 always
multilabel *label78
jump *label29 always
multilabel *label79
jump *label29 always
multilabel *label80
jump *label29 always
multilabel *label81
jump *label29 always
multilabel *label82
jump *label29 always
multilabel *label83
jump *label29 always
multilabel *label84
jump *label12 always
multilabel *label85
jump *label29 always
multilabel *label86
jump *label29 always
multilabel *label87
jump *label29 always
multilabel *label88
jump *label29 always
multilabel *label89
jump *label29 always
multilabel *label90
jump *label29 always
multilabel *label91
jump *label29 always
multilabel *label92
jump *label29 always
multilabel *label93
jump *label29 always
multilabel *label94
jump *label29 always
multilabel *label95
jump *label29 always
multilabel *label96
jump *label29 always
multilabel *label97
jump *label29 always
multilabel *label98
jump *label29 always
multilabel *label99
jump *label29 always
multilabel *label100
jump *label29 always
multilabel *label101
jump *label29 always
multilabel *label102
jump *label29 always
multilabel *label103
jump *label29 always
multilabel *label104
jump *label29 always
multilabel *label105
jump *label29 always
multilabel *label106
jump *label29 always
multilabel *label107
jump *label29 always
multilabel *label108
jump *label29 always
multilabel *label109
jump *label29 always
multilabel *label110
jump *label29 always
multilabel *label111
jump *label29 always
multilabel *label112
jump *label29 always
multilabel *label113
jump *label29 always
multilabel *label114
jump *label29 always
multilabel *label115
jump *label29 always
multilabel *label116
jump *label29 always
multilabel *label117
jump *label29 always
multilabel *label118
jump *label29 always
multilabel *label119
jump *label29 always
multilabel *label120
jump *label29 always
multilabel *label121
jump *label29 always
multilabel *label122
jump *label29 always
multilabel *label123
jump *label29 always
multilabel *label124
jump *label29 always
multilabel *label125
jump *label29 always
multilabel *label126
jump *label29 always
multilabel *label127
jump *label29 always
multilabel *label128
jump *label29 always
multilabel *label129
jump *label29 always
multilabel *label130
jump *label29 always
multilabel *label131
jump *label29 always
multilabel *label132
jump *label29 always
multilabel *label133
jump *label29 always
multilabel *label134
jump *label29 always
multilabel *label135
jump *label29 always
multilabel *label136
jump *label29 always
multilabel *label137
jump *label29 always
multilabel *label138
jump *label29 always
multilabel *label139
jump *label29 always
multilabel *label140
jump *label29 always
multilabel *label141
jump *label29 always
multilabel *label142
jump *label29 always
multilabel *label143
jump *label29 always
multilabel *label144
jump *label29 always
multilabel *label145
jump *label29 always
multilabel *label146
jump *label29 always
multilabel *label147
jump *label29 always
multilabel *label148
jump *label29 always
multilabel *label149
jump *label29 always
multilabel *label150
jump *label29 always
multilabel *label151
jump *label29 always
multilabel *label152
jump *label29 always
multilabel *label153
jump *label29 always
multilabel *label154
jump *label29 always
multilabel *label155
jump *label29 always
multilabel *label156
jump *label29 always
multilabel *label157
jump *label29 always
multilabel *label158
jump *label29 always
multilabel *label159
jump *label29 always
multilabel *label160
jump *label29 always
multilabel *label161
jump *label29 always
multilabel *label162
jump *label29 always
multilabel *label163
jump *label29 always
multilabel *label164
jump *label29 always
multilabel *label165
jump *label29 always
multilabel *label166
jump *label29 always
multilabel *label167
jump *label8 always
multilabel *label168
jump *label10 always
multilabel *label169
jump *label29 always
multilabel *label170
jump *label29 always
multilabel *label171
jump *label29 always
multilabel *label172
jump *label29 always
multilabel *label173
jump *label29 always
multilabel *label174
jump *label23 always
label *label8
set .MESSAGE :block
jump *label6 always
label *label10
set .SWITCH :block
jump *label6 always
label *label12
sensor *tmp8 :block @firstItem
jump *label14 notEqual *tmp8 @titanium
set .TITANIUM :block
jump *label6 always
label *label14
jump *label16 notEqual *tmp8 @silicon
set .SILICON :block
jump *label6 always
label *label16
jump *label18 notEqual *tmp8 @copper
set .COPPER :block
jump *label6 always
label *label18
jump *label6 notEqual *tmp8 @lead
set .LEAD :block
jump *label6 always
label *label23
set .DISPLAY :block
jump *label6 always
label *label29
print "\n{0} is not supported."
format :block
label *label6
print "\nNominal production: null/min\nActual production: null/min"
jump *label27 greaterThan :n 0
label *label5
print "Message: {0}\nSwitch: {0}\nDisplay: {0}\nTitanium: {0}\nSilicon: {0}\nCopper: {0}\nLead: {0}\n"
format .MESSAGE
format .SWITCH
format .DISPLAY
format .TITANIUM
format .SILICON
format .COPPER
format .LEAD
printflush .MESSAGE
op equal *tmp10 .TITANIUM null
op equal *tmp11 .SILICON null
op or *tmp12 *tmp10 *tmp11
op equal *tmp13 .COPPER null
op or *tmp14 *tmp12 *tmp13
op equal *tmp15 .LEAD null
op or *tmp16 *tmp14 *tmp15
jump *label0 notEqual *tmp16 false
control enabled .SWITCH 0
sensor *tmp26 .SWITCH @enabled
jump __start__ notEqual *tmp26 0
label *label28
set :start @time
draw clear 0 0 80
draw color 255 255 255 255
draw image 11 68 @titanium 16 0
draw image 11 49 @silicon 16 0
draw image 11 30 @copper 16 0
draw image 11 11 @lead 16 0
draw color 0 128 0 255
sensor *tmp29 .TITANIUM @totalItems
op mul *tmp30 *tmp29 0.28
draw rect 20 61 *tmp30 14
sensor *tmp31 .SILICON @totalItems
op mul *tmp32 *tmp31 0.28
draw rect 20 42 *tmp32 14
sensor *tmp33 .COPPER @totalItems
op mul *tmp34 *tmp33 0.28
draw rect 20 23 *tmp34 14
sensor *tmp35 .LEAD @totalItems
op mul *tmp36 *tmp35 0.28
draw rect 20 4 *tmp36 14
draw color 0 255 0 255
draw lineRect 20 61 56 14
draw lineRect 20 42 56 14
draw lineRect 20 23 56 14
draw lineRect 20 4 56 14
drawflush .DISPLAY
print "Surge Alloy Factory Driver Monitor\nElapsed (ms): "
op sub *tmp37 @time :start
op floor *tmp38 *tmp37
print *tmp38
printflush .MESSAGE
sensor *tmp26 .SWITCH @enabled
jump *label28 equal *tmp26 0
