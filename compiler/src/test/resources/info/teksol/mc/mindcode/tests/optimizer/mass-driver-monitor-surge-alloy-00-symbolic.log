   171 instructions before optimizations.
    12 instructions eliminated by Temp Variables Elimination (2 iterations).
     2 instructions eliminated by Case Expression Optimization.
    26 instructions eliminated by Dead Code Elimination (2 passes, 6 iterations).
     2 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     1 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     2 loops improved by Loop Optimization.
   143 instructions added by Case Switching (4 iterations).
     1 case expressions converted to switched jumps Case Switching.
     8 instructions eliminated by Jump Straightening (4 iterations).
     5 instructions updated by Jump Threading.
    26 instructions eliminated by Print Merging.
   236 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 865):
  * Replicate loop condition at line 68:1                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  o Convert case at line 17:9 (segments: 6)                      size    +4, benefit      439.9, efficiency    109.976
    Convert case at line 17:9 (segments: 1, padded low)          size  +143, benefit      540.9, efficiency      3.782

Pass 1: speed optimization selection (cost limit 864):
  o Convert case at line 17:9 (segments: 6)                      size    +4, benefit      439.9, efficiency    109.976
  * Convert case at line 17:9 (segments: 1, padded low)          size  +143, benefit      540.9, efficiency      3.782 (+143 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-2 instructions):
 
    21 getlink *tmp3 :n
    22 set :block *tmp3
    23 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   24 jump *label8 equal *tmp5 @message
    25 jump *label7 always
    26 label *label8
    27 set .MESSAGE :block
    28 set *tmp4 .MESSAGE
    29 jump *label6 always
    30 label *label7
-    * jump *label10 equal *tmp6 @switch
+   31 jump *label10 equal *tmp5 @switch
    32 jump *label9 always
    33 label *label10
    34 set .SWITCH :block
    35 set *tmp4 .SWITCH
    36 jump *label6 always
    37 label *label9
-    * jump *label12 equal *tmp6 @mass-driver
+   38 jump *label12 equal *tmp5 @mass-driver
    39 jump *label11 always
    40 label *label12
    41 sensor *tmp8 :block @firstItem
-    * set *tmp9 *tmp8
-    * jump *label15 equal *tmp9 @titanium
+   42 jump *label15 equal *tmp8 @titanium
    43 jump *label14 always
    44 label *label15
    45 set .TITANIUM :block
    46 set *tmp7 .TITANIUM
    47 jump *label13 always
    48 label *label14
-    * jump *label17 equal *tmp9 @silicon
+   49 jump *label17 equal *tmp8 @silicon
    50 jump *label16 always
    51 label *label17
    52 set .SILICON :block
    53 set *tmp7 .SILICON
    54 jump *label13 always
    55 label *label16
-    * jump *label19 equal *tmp9 @copper
+   56 jump *label19 equal *tmp8 @copper
    57 jump *label18 always
    58 label *label19
    59 set .COPPER :block
    60 set *tmp7 .COPPER
    61 jump *label13 always
    62 label *label18
-    * jump *label21 equal *tmp9 @lead
+   63 jump *label21 equal *tmp8 @lead
    64 jump *label20 always
    65 label *label21
    66 set .LEAD :block
 
    72 set *tmp4 *tmp7
    73 jump *label6 always
    74 label *label11
-    * jump *label23 equal *tmp6 @logic-display
+   75 jump *label23 equal *tmp5 @logic-display
    76 jump *label22 always
    77 label *label23
    78 set .DISPLAY :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-5 instructions):
 
    25 jump *label7 always
    26 label *label8
    27 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    28 jump *label6 always
    29 label *label7
    30 jump *label10 equal *tmp5 @switch
    31 jump *label9 always
    32 label *label10
    33 set .SWITCH :block
-    * set *tmp4 .SWITCH
    34 jump *label6 always
    35 label *label9
    36 jump *label12 equal *tmp5 @mass-driver
 
    67 label *label20
    68 set *tmp7 null
    69 label *label13
-    * set *tmp4 *tmp7
    70 jump *label6 always
    71 label *label11
    72 jump *label23 equal *tmp5 @logic-display
    73 jump *label22 always
    74 label *label23
    75 set .DISPLAY :block
-    * set *tmp4 .DISPLAY
    76 jump *label6 always
    77 label *label22
    78 print "\n"
    79 print :block
    80 print " is not supported."
-    * set *tmp4 " is not supported."
    81 label *label6
    82 print "\n"
    83 print "Nominal production: "

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-5 instructions):
 
    41 jump *label14 always
    42 label *label15
    43 set .TITANIUM :block
-    * set *tmp7 .TITANIUM
    44 jump *label13 always
    45 label *label14
    46 jump *label17 equal *tmp8 @silicon
    47 jump *label16 always
    48 label *label17
    49 set .SILICON :block
-    * set *tmp7 .SILICON
    50 jump *label13 always
    51 label *label16
    52 jump *label19 equal *tmp8 @copper
    53 jump *label18 always
    54 label *label19
    55 set .COPPER :block
-    * set *tmp7 .COPPER
    56 jump *label13 always
    57 label *label18
    58 jump *label21 equal *tmp8 @lead
    59 jump *label20 always
    60 label *label21
    61 set .LEAD :block
-    * set *tmp7 .LEAD
    62 jump *label13 always
    63 label *label20
-    * set *tmp7 null
    64 label *label13
    65 jump *label6 always
    66 label *label11

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-12 instructions):
 
    11 print "\n"
    12 print "Configuring..."
    13 print "\n"
-    * set *tmp0 @links
-    * set :n *tmp0
+   14 set :n @links
    15 label *label3
    16 op greaterThan *tmp1 :n 0
    17 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   18 op sub :n :n 1
+   19 getlink :block :n
    20 sensor *tmp5 :block @type
    21 jump *label8 equal *tmp5 @message
    22 jump *label7 always
 
   121 set .ICON_SIZE 16
   122 set .ICON_X 11
   123 set .ICON_Y1 11
-    * op add *tmp17 .ICON_Y1 .ROW_HEIGHT
-    * set .ICON_Y2 *tmp17
-    * op add *tmp18 .ICON_Y2 .ROW_HEIGHT
-    * set .ICON_Y3 *tmp18
-    * op add *tmp19 .ICON_Y3 .ROW_HEIGHT
-    * set .ICON_Y4 *tmp19
+  124 op add .ICON_Y2 .ICON_Y1 .ROW_HEIGHT
+  125 op add .ICON_Y3 .ICON_Y2 .ROW_HEIGHT
+  126 op add .ICON_Y4 .ICON_Y3 .ROW_HEIGHT
   127 set .BAR_X 20
   128 set .BAR_Y1 4
-    * op add *tmp20 .BAR_Y1 .ROW_HEIGHT
-    * set .BAR_Y2 *tmp20
-    * op add *tmp21 .BAR_Y2 .ROW_HEIGHT
-    * set .BAR_Y3 *tmp21
-    * op add *tmp22 .BAR_Y3 .ROW_HEIGHT
-    * set .BAR_Y4 *tmp22
+  129 op add .BAR_Y2 .BAR_Y1 .ROW_HEIGHT
+  130 op add .BAR_Y3 .BAR_Y2 .ROW_HEIGHT
+  131 op add .BAR_Y4 .BAR_Y3 .ROW_HEIGHT
   132 set .BAR_LENGTH 56
-    * op div *tmp23 .BAR_LENGTH 200
-    * set .MULTIPLICATOR *tmp23
-    * set *tmp24 .SWITCH
-    * control enabled *tmp24 0
+  133 op div .MULTIPLICATOR .BAR_LENGTH 200
+  134 control enabled .SWITCH 0
   135 label *label24
   136 sensor *tmp26 .SWITCH @enabled
   137 op equal *tmp27 *tmp26 0
   138 jump *label26 equal *tmp27 false
-    * set *tmp28 @time
-    * set :start *tmp28
+  139 set :start @time
   140 draw clear 0 0 80
   141 draw color 255 255 255 255
   142 draw image .ICON_X .ICON_Y4 @titanium .ICON_SIZE 0

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-8 instructions):
 
    18 op sub :n :n 1
    19 getlink :block :n
    20 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   21 jump *label7 notEqual *tmp5 @message
    22 label *label8
    23 set .MESSAGE :block
    24 jump *label6 always
    25 label *label7
-    * jump *label10 equal *tmp5 @switch
-    * jump *label9 always
+   26 jump *label9 notEqual *tmp5 @switch
    27 label *label10
    28 set .SWITCH :block
    29 jump *label6 always
    30 label *label9
-    * jump *label12 equal *tmp5 @mass-driver
-    * jump *label11 always
+   31 jump *label11 notEqual *tmp5 @mass-driver
    32 label *label12
    33 sensor *tmp8 :block @firstItem
-    * jump *label15 equal *tmp8 @titanium
-    * jump *label14 always
+   34 jump *label14 notEqual *tmp8 @titanium
    35 label *label15
    36 set .TITANIUM :block
    37 jump *label13 always
    38 label *label14
-    * jump *label17 equal *tmp8 @silicon
-    * jump *label16 always
+   39 jump *label16 notEqual *tmp8 @silicon
    40 label *label17
    41 set .SILICON :block
    42 jump *label13 always
    43 label *label16
-    * jump *label19 equal *tmp8 @copper
-    * jump *label18 always
+   44 jump *label18 notEqual *tmp8 @copper
    45 label *label19
    46 set .COPPER :block
    47 jump *label13 always
    48 label *label18
-    * jump *label21 equal *tmp8 @lead
-    * jump *label20 always
+   49 jump *label20 notEqual *tmp8 @lead
    50 label *label21
    51 set .LEAD :block
    52 jump *label13 always
 
    54 label *label13
    55 jump *label6 always
    56 label *label11
-    * jump *label23 equal *tmp5 @logic-display
-    * jump *label22 always
+   57 jump *label22 notEqual *tmp5 @logic-display
    58 label *label23
    59 set .DISPLAY :block
    60 jump *label6 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
    13 print "\n"
    14 set :n @links
    15 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   16 jump *label5 lessThanEq :n 0
    17 op sub :n :n 1
    18 getlink :block :n
    19 sensor *tmp5 :block @type
 
   125 control enabled .SWITCH 0
   126 label *label24
   127 sensor *tmp26 .SWITCH @enabled
-    * op equal *tmp27 *tmp26 0
-    * jump *label26 equal *tmp27 false
+  128 jump *label26 notEqual *tmp26 0
   129 set :start @time
   130 draw clear 0 0 80
   131 draw color 255 255 255 255

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
    48 jump *label20 notEqual *tmp8 @lead
    49 label *label21
    50 set .LEAD :block
-    * jump *label13 always
    51 label *label20
    52 label *label13
    53 jump *label6 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set .EXPECTED_FLOW_STR null
     1 set :flow_str null
     2 set .SWITCH null
-    * set .DISPLAY .SWITCH
-    * set .MESSAGE .DISPLAY
+    3 set .DISPLAY null
+    4 set .MESSAGE .SWITCH
     5 label *label0
     6 set .TITANIUM null
     7 set .SILICON null
 
    63 label *label6
    64 print "\n"
    65 print "Nominal production: "
-    * print .EXPECTED_FLOW_STR
+   66 print null
    67 print "/"
    68 print "min"
    69 print "\n"
    70 print "Actual production: "
-    * print :flow_str
+   71 print null
    72 print "/"
    73 print "min"
    74 label *label4
 
   111 set .ICON_SIZE 16
   112 set .ICON_X 11
   113 set .ICON_Y1 11
-    * op add .ICON_Y2 .ICON_Y1 .ROW_HEIGHT
-    * op add .ICON_Y3 .ICON_Y2 .ROW_HEIGHT
-    * op add .ICON_Y4 .ICON_Y3 .ROW_HEIGHT
+  114 op add .ICON_Y2 11 19
+  115 op add .ICON_Y3 30 19
+  116 op add .ICON_Y4 49 19
   117 set .BAR_X 20
   118 set .BAR_Y1 4
-    * op add .BAR_Y2 .BAR_Y1 .ROW_HEIGHT
-    * op add .BAR_Y3 .BAR_Y2 .ROW_HEIGHT
-    * op add .BAR_Y4 .BAR_Y3 .ROW_HEIGHT
+  119 op add .BAR_Y2 4 19
+  120 op add .BAR_Y3 23 19
+  121 op add .BAR_Y4 42 19
   122 set .BAR_LENGTH 56
-    * op div .MULTIPLICATOR .BAR_LENGTH 200
+  123 op div .MULTIPLICATOR 56 200
   124 control enabled .SWITCH 0
   125 label *label24
   126 sensor *tmp26 .SWITCH @enabled
 
   128 set :start @time
   129 draw clear 0 0 80
   130 draw color 255 255 255 255
-    * draw image .ICON_X .ICON_Y4 @titanium .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y3 @silicon .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y2 @copper .ICON_SIZE 0
-    * draw image .ICON_X .ICON_Y1 @lead .ICON_SIZE 0
+  131 draw image 11 68 @titanium 16 0
+  132 draw image 11 49 @silicon 16 0
+  133 draw image 11 30 @copper 16 0
+  134 draw image 11 11 @lead 16 0
   135 draw color 0 128 0 255
   136 sensor *tmp29 .TITANIUM @totalItems
-    * op mul *tmp30 *tmp29 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y4 *tmp30 .BAR_HEIGHT
+  137 op mul *tmp30 *tmp29 0.28
+  138 draw rect 20 61 *tmp30 14
   139 sensor *tmp31 .SILICON @totalItems
-    * op mul *tmp32 *tmp31 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y3 *tmp32 .BAR_HEIGHT
+  140 op mul *tmp32 *tmp31 0.28
+  141 draw rect 20 42 *tmp32 14
   142 sensor *tmp33 .COPPER @totalItems
-    * op mul *tmp34 *tmp33 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y2 *tmp34 .BAR_HEIGHT
+  143 op mul *tmp34 *tmp33 0.28
+  144 draw rect 20 23 *tmp34 14
   145 sensor *tmp35 .LEAD @totalItems
-    * op mul *tmp36 *tmp35 .MULTIPLICATOR
-    * draw rect .BAR_X .BAR_Y1 *tmp36 .BAR_HEIGHT
+  146 op mul *tmp36 *tmp35 0.28
+  147 draw rect 20 4 *tmp36 14
   148 draw color 0 255 0 255
-    * draw lineRect .BAR_X .BAR_Y4 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y3 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y2 .BAR_LENGTH .BAR_HEIGHT
-    * draw lineRect .BAR_X .BAR_Y1 .BAR_LENGTH .BAR_HEIGHT
+  149 draw lineRect 20 61 56 14
+  150 draw lineRect 20 42 56 14
+  151 draw lineRect 20 23 56 14
+  152 draw lineRect 20 4 56 14
   153 drawflush .DISPLAY
   154 print "Surge Alloy Factory Driver Monitor\nElapsed (ms): "
   155 op sub *tmp37 @time :start

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
     0 set .EXPECTED_FLOW_STR null
-    * set :flow_str null
     1 set .SWITCH null
     2 set .DISPLAY null
-    * set .MESSAGE .SWITCH
+    3 set .MESSAGE null
     4 label *label0
     5 set .TITANIUM null
     6 set .SILICON null

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    13 set :n @links
    14 label *label3
    15 jump *label5 lessThanEq :n 0
+   16 label *label27
    17 op sub :n :n 1
    18 getlink :block :n
    19 sensor *tmp5 :block @type
 
    72 print "/"
    73 print "min"
    74 label *label4
-    * jump *label3 always
+   75 jump *label27 greaterThan :n 0
    76 label *label5
    77 print "Message: "
    78 print .MESSAGE

Modifications by Replicate loop condition at line 68:1 (+1 instructions):
 
   125 label *label24
   126 sensor *tmp26 .SWITCH @enabled
   127 jump *label26 notEqual *tmp26 0
+  128 label *label28
   129 set :start @time
   130 draw clear 0 0 80
   131 draw color 255 255 255 255
 
   158 print *tmp38
   159 printflush .MESSAGE
   160 label *label25
-    * jump *label24 always
+  161 sensor *tmp26 .SWITCH @enabled
+  162 jump *label28 equal *tmp26 0
   163 label *label26
   164 end

Modifications by Convert case at line 17:9 (segments: 1, padded low) (+143 instructions):
 
    17 op sub :n :n 1
    18 getlink :block :n
    19 sensor *tmp5 :block @type
-    * jump *label7 notEqual *tmp5 @message
+   20 sensor *tmp39 *tmp5 @id
+   21 jump *label29 greaterThanEq *tmp39 145
+   22 multijump *label31 *tmp39 0 (m:*label30)
+   23 multilabel *label31 (m:*label30)
+   24 jump *label29 always
+   25 multilabel *label32 (m:*label30)
+   26 jump *label29 always
+   27 multilabel *label33 (m:*label30)
+   28 jump *label29 always
+   29 multilabel *label34 (m:*label30)
+   30 jump *label29 always
+   31 multilabel *label35 (m:*label30)
+   32 jump *label29 always
+   33 multilabel *label36 (m:*label30)
+   34 jump *label29 always
+   35 multilabel *label37 (m:*label30)
+   36 jump *label29 always
+   37 multilabel *label38 (m:*label30)
+   38 jump *label29 always
+   39 multilabel *label39 (m:*label30)
+   40 jump *label29 always
+   41 multilabel *label40 (m:*label30)
+   42 jump *label29 always
+   43 multilabel *label41 (m:*label30)
+   44 jump *label29 always
+   45 multilabel *label42 (m:*label30)
+   46 jump *label29 always
+   47 multilabel *label43 (m:*label30)
+   48 jump *label29 always
+   49 multilabel *label44 (m:*label30)
+   50 jump *label29 always
+   51 multilabel *label45 (m:*label30)
+   52 jump *label29 always
+   53 multilabel *label46 (m:*label30)
+   54 jump *label29 always
+   55 multilabel *label47 (m:*label30)
+   56 jump *label29 always
+   57 multilabel *label48 (m:*label30)
+   58 jump *label29 always
+   59 multilabel *label49 (m:*label30)
+   60 jump *label29 always
+   61 multilabel *label50 (m:*label30)
+   62 jump *label29 always
+   63 multilabel *label51 (m:*label30)
+   64 jump *label29 always
+   65 multilabel *label52 (m:*label30)
+   66 jump *label29 always
+   67 multilabel *label53 (m:*label30)
+   68 jump *label29 always
+   69 multilabel *label54 (m:*label30)
+   70 jump *label29 always
+   71 multilabel *label55 (m:*label30)
+   72 jump *label29 always
+   73 multilabel *label56 (m:*label30)
+   74 jump *label29 always
+   75 multilabel *label57 (m:*label30)
+   76 jump *label29 always
+   77 multilabel *label58 (m:*label30)
+   78 jump *label29 always
+   79 multilabel *label59 (m:*label30)
+   80 jump *label29 always
+   81 multilabel *label60 (m:*label30)
+   82 jump *label29 always
+   83 multilabel *label61 (m:*label30)
+   84 jump *label29 always
+   85 multilabel *label62 (m:*label30)
+   86 jump *label29 always
+   87 multilabel *label63 (m:*label30)
+   88 jump *label29 always
+   89 multilabel *label64 (m:*label30)
+   90 jump *label29 always
+   91 multilabel *label65 (m:*label30)
+   92 jump *label29 always
+   93 multilabel *label66 (m:*label30)
+   94 jump *label29 always
+   95 multilabel *label67 (m:*label30)
+   96 jump *label29 always
+   97 multilabel *label68 (m:*label30)
+   98 jump *label29 always
+   99 multilabel *label69 (m:*label30)
+  100 jump *label29 always
+  101 multilabel *label70 (m:*label30)
+  102 jump *label29 always
+  103 multilabel *label71 (m:*label30)
+  104 jump *label29 always
+  105 multilabel *label72 (m:*label30)
+  106 jump *label29 always
+  107 multilabel *label73 (m:*label30)
+  108 jump *label29 always
+  109 multilabel *label74 (m:*label30)
+  110 jump *label29 always
+  111 multilabel *label75 (m:*label30)
+  112 jump *label29 always
+  113 multilabel *label76 (m:*label30)
+  114 jump *label29 always
+  115 multilabel *label77 (m:*label30)
+  116 jump *label29 always
+  117 multilabel *label78 (m:*label30)
+  118 jump *label29 always
+  119 multilabel *label79 (m:*label30)
+  120 jump *label29 always
+  121 multilabel *label80 (m:*label30)
+  122 jump *label29 always
+  123 multilabel *label81 (m:*label30)
+  124 jump *label29 always
+  125 multilabel *label82 (m:*label30)
+  126 jump *label29 always
+  127 multilabel *label83 (m:*label30)
+  128 jump *label29 always
+  129 multilabel *label84 (m:*label30)
+  130 jump *label29 always
+  131 multilabel *label85 (m:*label30)
+  132 jump *label12 always
+  133 multilabel *label86 (m:*label30)
+  134 jump *label29 always
+  135 multilabel *label87 (m:*label30)
+  136 jump *label29 always
+  137 multilabel *label88 (m:*label30)
+  138 jump *label29 always
+  139 multilabel *label89 (m:*label30)
+  140 jump *label29 always
+  141 multilabel *label90 (m:*label30)
+  142 jump *label29 always
+  143 multilabel *label91 (m:*label30)
+  144 jump *label29 always
+  145 multilabel *label92 (m:*label30)
+  146 jump *label29 always
+  147 multilabel *label93 (m:*label30)
+  148 jump *label29 always
+  149 multilabel *label94 (m:*label30)
+  150 jump *label29 always
+  151 multilabel *label95 (m:*label30)
+  152 jump *label29 always
+  153 multilabel *label96 (m:*label30)
+  154 jump *label29 always
+  155 multilabel *label97 (m:*label30)
+  156 jump *label29 always
+  157 multilabel *label98 (m:*label30)
+  158 jump *label29 always
+  159 multilabel *label99 (m:*label30)
+  160 jump *label29 always
+  161 multilabel *label100 (m:*label30)
+  162 jump *label29 always
+  163 multilabel *label101 (m:*label30)
+  164 jump *label29 always
+  165 multilabel *label102 (m:*label30)
+  166 jump *label29 always
+  167 multilabel *label103 (m:*label30)
+  168 jump *label29 always
+  169 multilabel *label104 (m:*label30)
+  170 jump *label29 always
+  171 multilabel *label105 (m:*label30)
+  172 jump *label29 always
+  173 multilabel *label106 (m:*label30)
+  174 jump *label29 always
+  175 multilabel *label107 (m:*label30)
+  176 jump *label29 always
+  177 multilabel *label108 (m:*label30)
+  178 jump *label29 always
+  179 multilabel *label109 (m:*label30)
+  180 jump *label29 always
+  181 multilabel *label110 (m:*label30)
+  182 jump *label29 always
+  183 multilabel *label111 (m:*label30)
+  184 jump *label29 always
+  185 multilabel *label112 (m:*label30)
+  186 jump *label29 always
+  187 multilabel *label113 (m:*label30)
+  188 jump *label29 always
+  189 multilabel *label114 (m:*label30)
+  190 jump *label29 always
+  191 multilabel *label115 (m:*label30)
+  192 jump *label29 always
+  193 multilabel *label116 (m:*label30)
+  194 jump *label29 always
+  195 multilabel *label117 (m:*label30)
+  196 jump *label29 always
+  197 multilabel *label118 (m:*label30)
+  198 jump *label29 always
+  199 multilabel *label119 (m:*label30)
+  200 jump *label29 always
+  201 multilabel *label120 (m:*label30)
+  202 jump *label29 always
+  203 multilabel *label121 (m:*label30)
+  204 jump *label29 always
+  205 multilabel *label122 (m:*label30)
+  206 jump *label29 always
+  207 multilabel *label123 (m:*label30)
+  208 jump *label29 always
+  209 multilabel *label124 (m:*label30)
+  210 jump *label29 always
+  211 multilabel *label125 (m:*label30)
+  212 jump *label29 always
+  213 multilabel *label126 (m:*label30)
+  214 jump *label29 always
+  215 multilabel *label127 (m:*label30)
+  216 jump *label29 always
+  217 multilabel *label128 (m:*label30)
+  218 jump *label29 always
+  219 multilabel *label129 (m:*label30)
+  220 jump *label29 always
+  221 multilabel *label130 (m:*label30)
+  222 jump *label29 always
+  223 multilabel *label131 (m:*label30)
+  224 jump *label29 always
+  225 multilabel *label132 (m:*label30)
+  226 jump *label29 always
+  227 multilabel *label133 (m:*label30)
+  228 jump *label29 always
+  229 multilabel *label134 (m:*label30)
+  230 jump *label29 always
+  231 multilabel *label135 (m:*label30)
+  232 jump *label29 always
+  233 multilabel *label136 (m:*label30)
+  234 jump *label29 always
+  235 multilabel *label137 (m:*label30)
+  236 jump *label29 always
+  237 multilabel *label138 (m:*label30)
+  238 jump *label29 always
+  239 multilabel *label139 (m:*label30)
+  240 jump *label29 always
+  241 multilabel *label140 (m:*label30)
+  242 jump *label29 always
+  243 multilabel *label141 (m:*label30)
+  244 jump *label29 always
+  245 multilabel *label142 (m:*label30)
+  246 jump *label29 always
+  247 multilabel *label143 (m:*label30)
+  248 jump *label29 always
+  249 multilabel *label144 (m:*label30)
+  250 jump *label29 always
+  251 multilabel *label145 (m:*label30)
+  252 jump *label29 always
+  253 multilabel *label146 (m:*label30)
+  254 jump *label29 always
+  255 multilabel *label147 (m:*label30)
+  256 jump *label29 always
+  257 multilabel *label148 (m:*label30)
+  258 jump *label29 always
+  259 multilabel *label149 (m:*label30)
+  260 jump *label29 always
+  261 multilabel *label150 (m:*label30)
+  262 jump *label29 always
+  263 multilabel *label151 (m:*label30)
+  264 jump *label29 always
+  265 multilabel *label152 (m:*label30)
+  266 jump *label29 always
+  267 multilabel *label153 (m:*label30)
+  268 jump *label29 always
+  269 multilabel *label154 (m:*label30)
+  270 jump *label29 always
+  271 multilabel *label155 (m:*label30)
+  272 jump *label29 always
+  273 multilabel *label156 (m:*label30)
+  274 jump *label29 always
+  275 multilabel *label157 (m:*label30)
+  276 jump *label29 always
+  277 multilabel *label158 (m:*label30)
+  278 jump *label29 always
+  279 multilabel *label159 (m:*label30)
+  280 jump *label29 always
+  281 multilabel *label160 (m:*label30)
+  282 jump *label29 always
+  283 multilabel *label161 (m:*label30)
+  284 jump *label29 always
+  285 multilabel *label162 (m:*label30)
+  286 jump *label29 always
+  287 multilabel *label163 (m:*label30)
+  288 jump *label29 always
+  289 multilabel *label164 (m:*label30)
+  290 jump *label29 always
+  291 multilabel *label165 (m:*label30)
+  292 jump *label29 always
+  293 multilabel *label166 (m:*label30)
+  294 jump *label29 always
+  295 multilabel *label167 (m:*label30)
+  296 jump *label29 always
+  297 multilabel *label168 (m:*label30)
+  298 jump *label8 always
+  299 multilabel *label169 (m:*label30)
+  300 jump *label10 always
+  301 multilabel *label170 (m:*label30)
+  302 jump *label29 always
+  303 multilabel *label171 (m:*label30)
+  304 jump *label29 always
+  305 multilabel *label172 (m:*label30)
+  306 jump *label29 always
+  307 multilabel *label173 (m:*label30)
+  308 jump *label29 always
+  309 multilabel *label174 (m:*label30)
+  310 jump *label29 always
+  311 multilabel *label175 (m:*label30)
+  312 label *label23
+  313 set .DISPLAY :block
+  314 jump *label6 always
   315 label *label8
   316 set .MESSAGE :block
   317 jump *label6 always
   318 label *label7
-    * jump *label9 notEqual *tmp5 @switch
   319 label *label10
   320 set .SWITCH :block
   321 jump *label6 always
   322 label *label9
-    * jump *label11 notEqual *tmp5 @mass-driver
   323 label *label12
   324 sensor *tmp8 :block @firstItem
   325 jump *label14 notEqual *tmp8 @titanium
 
   344 label *label13
   345 jump *label6 always
   346 label *label11
-    * jump *label22 notEqual *tmp5 @logic-display
-    * label *label23
-    * set .DISPLAY :block
-    * jump *label6 always
   347 label *label22
+  348 label *label29
   349 print "\n"
   350 print :block
   351 print " is not supported."

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
    11 print "Configuring..."
    12 print "\n"
    13 set :n @links
-    * label *label3
    14 jump *label5 lessThanEq :n 0
    15 label *label27
    16 op sub :n :n 1
 
   308 multilabel *label174 (m:*label30)
   309 jump *label29 always
   310 multilabel *label175 (m:*label30)
-    * label *label23
   311 set .DISPLAY :block
   312 jump *label6 always
   313 label *label8
   314 set .MESSAGE :block
   315 jump *label6 always
-    * label *label7
   316 label *label10
   317 set .SWITCH :block
   318 jump *label6 always
-    * label *label9
   319 label *label12
   320 sensor *tmp8 :block @firstItem
   321 jump *label14 notEqual *tmp8 @titanium
-    * label *label15
   322 set .TITANIUM :block
   323 jump *label13 always
   324 label *label14
   325 jump *label16 notEqual *tmp8 @silicon
-    * label *label17
   326 set .SILICON :block
   327 jump *label13 always
   328 label *label16
   329 jump *label18 notEqual *tmp8 @copper
-    * label *label19
   330 set .COPPER :block
   331 jump *label13 always
   332 label *label18
   333 jump *label20 notEqual *tmp8 @lead
-    * label *label21
   334 set .LEAD :block
   335 label *label20
   336 label *label13
   337 jump *label6 always
-    * label *label11
-    * label *label22
   338 label *label29
   339 print "\n"
   340 print :block
 
   350 print null
   351 print "/"
   352 print "min"
-    * label *label4
   353 jump *label27 greaterThan :n 0
   354 label *label5
   355 print "Message: "
 
   374 print .LEAD
   375 print "\n"
   376 printflush .MESSAGE
-    * label *label1
   377 op equal *tmp10 .TITANIUM null
   378 op equal *tmp11 .SILICON null
   379 op or *tmp12 *tmp10 *tmp11
 
   382 op equal *tmp15 .LEAD null
   383 op or *tmp16 *tmp14 *tmp15
   384 jump *label0 notEqual *tmp16 false
-    * label *label2
   385 set .ROW_HEIGHT 19
   386 set .BAR_HEIGHT 14
   387 set .ICON_SIZE 16
 
   398 set .BAR_LENGTH 56
   399 op div .MULTIPLICATOR 56 200
   400 control enabled .SWITCH 0
-    * label *label24
   401 sensor *tmp26 .SWITCH @enabled
   402 jump *label26 notEqual *tmp26 0
   403 label *label28
 
   432 op floor *tmp38 *tmp37
   433 print *tmp38
   434 printflush .MESSAGE
-    * label *label25
   435 sensor *tmp26 .SWITCH @enabled
   436 jump *label28 equal *tmp26 0
   437 label *label26

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
+    0 label __start__
     1 set .EXPECTED_FLOW_STR null
     2 set .SWITCH null
     3 set .DISPLAY null
 
   321 sensor *tmp8 :block @firstItem
   322 jump *label14 notEqual *tmp8 @titanium
   323 set .TITANIUM :block
-    * jump *label13 always
+  324 jump *label6 always
   325 label *label14
   326 jump *label16 notEqual *tmp8 @silicon
   327 set .SILICON :block
-    * jump *label13 always
+  328 jump *label6 always
   329 label *label16
   330 jump *label18 notEqual *tmp8 @copper
   331 set .COPPER :block
-    * jump *label13 always
+  332 jump *label6 always
   333 label *label18
-    * jump *label20 notEqual *tmp8 @lead
+  334 jump *label6 notEqual *tmp8 @lead
   335 set .LEAD :block
   336 label *label20
   337 label *label13
 
   400 op div .MULTIPLICATOR 56 200
   401 control enabled .SWITCH 0
   402 sensor *tmp26 .SWITCH @enabled
-    * jump *label26 notEqual *tmp26 0
+  403 jump __start__ notEqual *tmp26 0
   404 label *label28
   405 set :start @time
   406 draw clear 0 0 80

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1:
 
   333 label *label18
   334 jump *label6 notEqual *tmp8 @lead
   335 set .LEAD :block
-    * label *label20
-    * label *label13
   336 jump *label6 always
   337 label *label29
   338 print "\n"
 
   433 printflush .MESSAGE
   434 sensor *tmp26 .SWITCH @enabled
   435 jump *label28 equal *tmp26 0
-    * label *label26
   436 end

Modifications by Jumps phase, Dead Code Elimination, pass 3, iteration 1 (-16 instructions):
     0 label __start__
-    * set .EXPECTED_FLOW_STR null
     1 set .SWITCH null
     2 set .DISPLAY null
     3 set .MESSAGE null
 
   380 op equal *tmp15 .LEAD null
   381 op or *tmp16 *tmp14 *tmp15
   382 jump *label0 notEqual *tmp16 false
-    * set .ROW_HEIGHT 19
-    * set .BAR_HEIGHT 14
-    * set .ICON_SIZE 16
-    * set .ICON_X 11
-    * set .ICON_Y1 11
-    * op add .ICON_Y2 11 19
-    * op add .ICON_Y3 30 19
-    * op add .ICON_Y4 49 19
-    * set .BAR_X 20
-    * set .BAR_Y1 4
-    * op add .BAR_Y2 4 19
-    * op add .BAR_Y3 23 19
-    * op add .BAR_Y4 42 19
-    * set .BAR_LENGTH 56
-    * op div .MULTIPLICATOR 56 200
   383 control enabled .SWITCH 0
   384 sensor *tmp26 .SWITCH @enabled
   385 jump __start__ notEqual *tmp26 0

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   417 printflush .MESSAGE
   418 sensor *tmp26 .SWITCH @enabled
   419 jump *label28 equal *tmp26 0
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-26 instructions):
 
     6 set .SILICON null
     7 set .COPPER null
     8 set .LEAD null
-    * print "Surge Alloy Factory Driver Monitor"
-    * print "\n"
-    * print "Configuring..."
-    * print "\n"
+    9 print "Surge Alloy Factory Driver Monitor\nConfiguring...\n"
    10 set :n @links
    11 jump *label5 lessThanEq :n 0
    12 label *label27
 
   331 set .LEAD :block
   332 jump *label6 always
   333 label *label29
-    * print "\n"
-    * print :block
-    * print " is not supported."
+  334 print "\n{0} is not supported."
+  335 format :block
   336 label *label6
-    * print "\n"
-    * print "Nominal production: "
-    * print null
-    * print "/"
-    * print "min"
-    * print "\n"
-    * print "Actual production: "
-    * print null
-    * print "/"
-    * print "min"
+  337 print "\nNominal production: null/min\nActual production: null/min"
   338 jump *label27 greaterThan :n 0
   339 label *label5
-    * print "Message: "
-    * print .MESSAGE
-    * print "\n"
-    * print "Switch: "
-    * print .SWITCH
-    * print "\n"
-    * print "Display: "
-    * print .DISPLAY
-    * print "\n"
-    * print "Titanium: "
-    * print .TITANIUM
-    * print "\n"
-    * print "Silicon: "
-    * print .SILICON
-    * print "\n"
-    * print "Copper: "
-    * print .COPPER
-    * print "\n"
-    * print "Lead: "
-    * print .LEAD
-    * print "\n"
+  340 print "Message: {0}\nSwitch: {0}\nDisplay: {0}\nTitanium: {0}\nSilicon: {0}\nCopper: {0}\nLead: {0}\n"
+  341 format .MESSAGE
+  342 format .SWITCH
+  343 format .DISPLAY
+  344 format .TITANIUM
+  345 format .SILICON
+  346 format .COPPER
+  347 format .LEAD
   348 printflush .MESSAGE
   349 op equal *tmp10 .TITANIUM null
   350 op equal *tmp11 .SILICON null

Final code before resolving virtual instructions:

label __start__
set .SWITCH null
set .DISPLAY null
set .MESSAGE null
label *label0
set .TITANIUM null
set .SILICON null
set .COPPER null
set .LEAD null
print "Surge Alloy Factory Driver Monitor\nConfiguring...\n"
set :n @links
jump *label5 lessThanEq :n 0
label *label27
op sub :n :n 1
getlink :block :n
sensor *tmp5 :block @type
sensor *tmp39 *tmp5 @id
jump *label29 greaterThanEq *tmp39 145
multijump *label31 *tmp39 0
multilabel *label31
jump *label29 always
multilabel *label32
jump *label29 always
multilabel *label33
jump *label29 always
multilabel *label34
jump *label29 always
multilabel *label35
jump *label29 always
multilabel *label36
jump *label29 always
multilabel *label37
jump *label29 always
multilabel *label38
jump *label29 always
multilabel *label39
jump *label29 always
multilabel *label40
jump *label29 always
multilabel *label41
jump *label29 always
multilabel *label42
jump *label29 always
multilabel *label43
jump *label29 always
multilabel *label44
jump *label29 always
multilabel *label45
jump *label29 always
multilabel *label46
jump *label29 always
multilabel *label47
jump *label29 always
multilabel *label48
jump *label29 always
multilabel *label49
jump *label29 always
multilabel *label50
jump *label29 always
multilabel *label51
jump *label29 always
multilabel *label52
jump *label29 always
multilabel *label53
jump *label29 always
multilabel *label54
jump *label29 always
multilabel *label55
jump *label29 always
multilabel *label56
jump *label29 always
multilabel *label57
jump *label29 always
multilabel *label58
jump *label29 always
multilabel *label59
jump *label29 always
multilabel *label60
jump *label29 always
multilabel *label61
jump *label29 always
multilabel *label62
jump *label29 always
multilabel *label63
jump *label29 always
multilabel *label64
jump *label29 always
multilabel *label65
jump *label29 always
multilabel *label66
jump *label29 always
multilabel *label67
jump *label29 always
multilabel *label68
jump *label29 always
multilabel *label69
jump *label29 always
multilabel *label70
jump *label29 always
multilabel *label71
jump *label29 always
multilabel *label72
jump *label29 always
multilabel *label73
jump *label29 always
multilabel *label74
jump *label29 always
multilabel *label75
jump *label29 always
multilabel *label76
jump *label29 always
multilabel *label77
jump *label29 always
multilabel *label78
jump *label29 always
multilabel *label79
jump *label29 always
multilabel *label80
jump *label29 always
multilabel *label81
jump *label29 always
multilabel *label82
jump *label29 always
multilabel *label83
jump *label29 always
multilabel *label84
jump *label29 always
multilabel *label85
jump *label12 always
multilabel *label86
jump *label29 always
multilabel *label87
jump *label29 always
multilabel *label88
jump *label29 always
multilabel *label89
jump *label29 always
multilabel *label90
jump *label29 always
multilabel *label91
jump *label29 always
multilabel *label92
jump *label29 always
multilabel *label93
jump *label29 always
multilabel *label94
jump *label29 always
multilabel *label95
jump *label29 always
multilabel *label96
jump *label29 always
multilabel *label97
jump *label29 always
multilabel *label98
jump *label29 always
multilabel *label99
jump *label29 always
multilabel *label100
jump *label29 always
multilabel *label101
jump *label29 always
multilabel *label102
jump *label29 always
multilabel *label103
jump *label29 always
multilabel *label104
jump *label29 always
multilabel *label105
jump *label29 always
multilabel *label106
jump *label29 always
multilabel *label107
jump *label29 always
multilabel *label108
jump *label29 always
multilabel *label109
jump *label29 always
multilabel *label110
jump *label29 always
multilabel *label111
jump *label29 always
multilabel *label112
jump *label29 always
multilabel *label113
jump *label29 always
multilabel *label114
jump *label29 always
multilabel *label115
jump *label29 always
multilabel *label116
jump *label29 always
multilabel *label117
jump *label29 always
multilabel *label118
jump *label29 always
multilabel *label119
jump *label29 always
multilabel *label120
jump *label29 always
multilabel *label121
jump *label29 always
multilabel *label122
jump *label29 always
multilabel *label123
jump *label29 always
multilabel *label124
jump *label29 always
multilabel *label125
jump *label29 always
multilabel *label126
jump *label29 always
multilabel *label127
jump *label29 always
multilabel *label128
jump *label29 always
multilabel *label129
jump *label29 always
multilabel *label130
jump *label29 always
multilabel *label131
jump *label29 always
multilabel *label132
jump *label29 always
multilabel *label133
jump *label29 always
multilabel *label134
jump *label29 always
multilabel *label135
jump *label29 always
multilabel *label136
jump *label29 always
multilabel *label137
jump *label29 always
multilabel *label138
jump *label29 always
multilabel *label139
jump *label29 always
multilabel *label140
jump *label29 always
multilabel *label141
jump *label29 always
multilabel *label142
jump *label29 always
multilabel *label143
jump *label29 always
multilabel *label144
jump *label29 always
multilabel *label145
jump *label29 always
multilabel *label146
jump *label29 always
multilabel *label147
jump *label29 always
multilabel *label148
jump *label29 always
multilabel *label149
jump *label29 always
multilabel *label150
jump *label29 always
multilabel *label151
jump *label29 always
multilabel *label152
jump *label29 always
multilabel *label153
jump *label29 always
multilabel *label154
jump *label29 always
multilabel *label155
jump *label29 always
multilabel *label156
jump *label29 always
multilabel *label157
jump *label29 always
multilabel *label158
jump *label29 always
multilabel *label159
jump *label29 always
multilabel *label160
jump *label29 always
multilabel *label161
jump *label29 always
multilabel *label162
jump *label29 always
multilabel *label163
jump *label29 always
multilabel *label164
jump *label29 always
multilabel *label165
jump *label29 always
multilabel *label166
jump *label29 always
multilabel *label167
jump *label29 always
multilabel *label168
jump *label8 always
multilabel *label169
jump *label10 always
multilabel *label170
jump *label29 always
multilabel *label171
jump *label29 always
multilabel *label172
jump *label29 always
multilabel *label173
jump *label29 always
multilabel *label174
jump *label29 always
multilabel *label175
set .DISPLAY :block
jump *label6 always
label *label8
set .MESSAGE :block
jump *label6 always
label *label10
set .SWITCH :block
jump *label6 always
label *label12
sensor *tmp8 :block @firstItem
jump *label14 notEqual *tmp8 @titanium
set .TITANIUM :block
jump *label6 always
label *label14
jump *label16 notEqual *tmp8 @silicon
set .SILICON :block
jump *label6 always
label *label16
jump *label18 notEqual *tmp8 @copper
set .COPPER :block
jump *label6 always
label *label18
jump *label6 notEqual *tmp8 @lead
set .LEAD :block
jump *label6 always
label *label29
print "\n{0} is not supported."
format :block
label *label6
print "\nNominal production: null/min\nActual production: null/min"
jump *label27 greaterThan :n 0
label *label5
print "Message: {0}\nSwitch: {0}\nDisplay: {0}\nTitanium: {0}\nSilicon: {0}\nCopper: {0}\nLead: {0}\n"
format .MESSAGE
format .SWITCH
format .DISPLAY
format .TITANIUM
format .SILICON
format .COPPER
format .LEAD
printflush .MESSAGE
op equal *tmp10 .TITANIUM null
op equal *tmp11 .SILICON null
op or *tmp12 *tmp10 *tmp11
op equal *tmp13 .COPPER null
op or *tmp14 *tmp12 *tmp13
op equal *tmp15 .LEAD null
op or *tmp16 *tmp14 *tmp15
jump *label0 notEqual *tmp16 false
control enabled .SWITCH 0
sensor *tmp26 .SWITCH @enabled
jump __start__ notEqual *tmp26 0
label *label28
set :start @time
draw clear 0 0 80
draw color 255 255 255 255
draw image 11 68 @titanium 16 0
draw image 11 49 @silicon 16 0
draw image 11 30 @copper 16 0
draw image 11 11 @lead 16 0
draw color 0 128 0 255
sensor *tmp29 .TITANIUM @totalItems
op mul *tmp30 *tmp29 0.28
draw rect 20 61 *tmp30 14
sensor *tmp31 .SILICON @totalItems
op mul *tmp32 *tmp31 0.28
draw rect 20 42 *tmp32 14
sensor *tmp33 .COPPER @totalItems
op mul *tmp34 *tmp33 0.28
draw rect 20 23 *tmp34 14
sensor *tmp35 .LEAD @totalItems
op mul *tmp36 *tmp35 0.28
draw rect 20 4 *tmp36 14
draw color 0 255 0 255
draw lineRect 20 61 56 14
draw lineRect 20 42 56 14
draw lineRect 20 23 56 14
draw lineRect 20 4 56 14
drawflush .DISPLAY
print "Surge Alloy Factory Driver Monitor\nElapsed (ms): "
op sub *tmp37 @time :start
op floor *tmp38 *tmp37
print *tmp38
printflush .MESSAGE
sensor *tmp26 .SWITCH @enabled
jump *label28 equal *tmp26 0
