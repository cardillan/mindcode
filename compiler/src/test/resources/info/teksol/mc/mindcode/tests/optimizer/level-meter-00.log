   222 instructions before optimizations.
    16 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    17 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     6 instructions eliminated by Jump Optimization (4 iterations).
     6 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
    20 instructions modified by Data Flow Optimization (7 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
   133 instructions added by Case Switching (4 iterations).
     1 case expressions converted to switched jumps Case Switching.
     8 instructions eliminated by Jump Straightening (4 iterations).
     2 instructions updated by JumpThreading.
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   287 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 831):
  * Replicate loop condition at line 122:1                       cost     1, benefit       25.0, efficiency     25.000 (+1 instructions)
  o Convert case at line 34:9 (segments: 6)                      cost     7, benefit      673.1, efficiency     96.154
  o Convert case at line 34:9 (segments: 5)                      cost    11, benefit      961.5, efficiency     87.413
  o Convert case at line 34:9 (segments: 4)                      cost    13, benefit     1105.8, efficiency     85.059
  o Convert case at line 34:9 (segments: 3)                      cost    30, benefit     1298.1, efficiency     43.269
    Convert case at line 34:9 (segments: 2)                      cost    70, benefit     1394.2, efficiency     19.918
    Convert case at line 34:9 (segments: 3, zero extension)      cost    93, benefit     1682.7, efficiency     18.093
    Convert case at line 34:9 (segments: 2, zero extension)      cost   133, benefit     1875.0, efficiency     14.098

Pass 1: speed optimization selection (cost limit 830):
  o Convert case at line 34:9 (segments: 6)                      cost     7, benefit      673.1, efficiency     96.154
  o Convert case at line 34:9 (segments: 5)                      cost    11, benefit      961.5, efficiency     87.413
  o Convert case at line 34:9 (segments: 4)                      cost    13, benefit     1105.8, efficiency     85.059
  o Convert case at line 34:9 (segments: 3)                      cost    30, benefit     1298.1, efficiency     43.269
  o Convert case at line 34:9 (segments: 2)                      cost    70, benefit     1394.2, efficiency     19.918
  o Convert case at line 34:9 (segments: 3, zero extension)      cost    93, benefit     1682.7, efficiency     18.093
  * Convert case at line 34:9 (segments: 2, zero extension)      cost   133, benefit     1875.0, efficiency     14.098 (+133 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
    30 print "\nFound: "
    31 print :block
    32 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   33 jump *label8 equal *tmp5 @message
    34 jump *label7 always
    35 label *label8
    36 set .MESSAGE :block
    37 set *tmp4 .MESSAGE
    38 jump *label6 always
    39 label *label7
-    * jump *label10 equal *tmp6 @switch
+   40 jump *label10 equal *tmp5 @switch
    41 jump *label9 always
    42 label *label10
    43 set .SWITCH :block
    44 set *tmp4 .SWITCH
    45 jump *label6 always
    46 label *label9
-    * jump *label12 equal *tmp6 @memory-bank
+   47 jump *label12 equal *tmp5 @memory-bank
    48 jump *label11 always
    49 label *label12
    50 set .MEMORY :block
 
    54 set *tmp4 .SIZE
    55 jump *label6 always
    56 label *label11
-    * jump *label14 equal *tmp6 @memory-cell
+   57 jump *label14 equal *tmp5 @memory-cell
    58 jump *label13 always
    59 label *label14
    60 set .MEMORY :block
 
    64 set *tmp4 .SIZE
    65 jump *label6 always
    66 label *label13
-    * jump *label16 equal *tmp6 @vault
-    * jump *label16 equal *tmp6 @container
+   67 jump *label16 equal *tmp5 @vault
+   68 jump *label16 equal *tmp5 @container
    69 jump *label15 always
    70 label *label16
    71 set .CONTAINER :block
 
    80 set *tmp4 .B1
    81 jump *label6 always
    82 label *label15
-    * jump *label18 equal *tmp6 @battery
-    * jump *label18 equal *tmp6 @battery-large
+   83 jump *label18 equal *tmp5 @battery
+   84 jump *label18 equal *tmp5 @battery-large
    85 jump *label17 always
    86 label *label18
    87 set .CONTAINER :block
 
    96 set *tmp4 .B1
    97 jump *label6 always
    98 label *label17
-    * jump *label20 equal *tmp6 @liquid-tank
-    * jump *label20 equal *tmp6 @liquid-container
+   99 jump *label20 equal *tmp5 @liquid-tank
+  100 jump *label20 equal *tmp5 @liquid-container
   101 jump *label19 always
   102 label *label20
   103 set .CONTAINER :block
 
   112 set *tmp4 .B1
   113 jump *label6 always
   114 label *label19
-    * jump *label22 equal *tmp6 @power-node
-    * jump *label22 equal *tmp6 @power-node-large
-    * jump *label22 equal *tmp6 @surge-tower
+  115 jump *label22 equal *tmp5 @power-node
+  116 jump *label22 equal *tmp5 @power-node-large
+  117 jump *label22 equal *tmp5 @surge-tower
   118 jump *label21 always
   119 label *label22
   120 set .CONTAINER :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-17 instructions):
 
    34 jump *label7 always
    35 label *label8
    36 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    37 jump *label6 always
    38 label *label7
    39 jump *label10 equal *tmp5 @switch
    40 jump *label9 always
    41 label *label10
    42 set .SWITCH :block
-    * set *tmp4 .SWITCH
    43 jump *label6 always
    44 label *label9
    45 jump *label12 equal *tmp5 @memory-bank
 
    49 set .START_INDEX 264
    50 set .END_INDEX 511
    51 set .SIZE 248
-    * set *tmp4 .SIZE
    52 jump *label6 always
    53 label *label11
    54 jump *label14 equal *tmp5 @memory-cell
 
    58 set .START_INDEX 40
    59 set .END_INDEX 63
    60 set .SIZE 24
-    * set *tmp4 .SIZE
    61 jump *label6 always
    62 label *label13
    63 jump *label16 equal *tmp5 @vault
 
    73 set .R1 80
    74 set .G1 255
    75 set .B1 80
-    * set *tmp4 .B1
    76 jump *label6 always
    77 label *label15
    78 jump *label18 equal *tmp5 @battery
 
    88 set .R1 255
    89 set .G1 255
    90 set .B1 80
-    * set *tmp4 .B1
    91 jump *label6 always
    92 label *label17
    93 jump *label20 equal *tmp5 @liquid-tank
 
   103 set .R1 192
   104 set .G1 192
   105 set .B1 255
-    * set *tmp4 .B1
   106 jump *label6 always
   107 label *label19
   108 jump *label22 equal *tmp5 @power-node
 
   119 set .R1 255
   120 set .G1 255
   121 set .B1 80
-    * set *tmp4 .B1
   122 jump *label6 always
   123 label *label21
-    * set *tmp4 null
   124 label *label6
   125 label *label4
   126 jump *label3 always
 
   139 jump *label23 equal *tmp9 false
   140 print "\nNo memory or container."
   141 printflush .MESSAGE
-    * set *tmp10 null
   142 jump *label24 always
   143 label *label23
   144 printflush .MESSAGE
   145 jump *label2 always
-    * set *tmp10 null
   146 label *label24
   147 label *label1
   148 jump *label0 always
 
   179 set :prevTick *tmp32
   180 op add *tmp33 :prevTick TICKS
   181 set :nextTick *tmp33
-    * set *tmp31 :nextTick
   182 jump *label29 always
   183 label *label28
-    * set *tmp31 null
   184 label *label29
   185 label *label30
   186 op lessThan *tmp34 @tick :nextTick
 
   188 op lessThan *tmp35 @tick :prevTick
   189 jump *label33 equal *tmp35 false
   190 end
-    * set *tmp36 null
   191 jump *label34 always
   192 label *label33
-    * set *tmp36 null
   193 label *label34
   194 label *label31
   195 jump *label30 always
 
   207 op greaterThan *tmp43 :index .END_INDEX
   208 jump *label35 equal *tmp43 false
   209 set :index .START_INDEX
-    * set *tmp44 :index
   210 jump *label36 always
   211 label *label35
-    * set *tmp44 null
   212 label *label36
   213 write :index .MEMORY 0
   214 set *tmp46 :index

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-16 instructions):
 
    18 print "Item/Liquid/Energy Level Meter"
    19 set .CONTAINER null
    20 set .MEMORY null
-    * set *tmp0 @links
-    * set :n *tmp0
+   21 set :n @links
    22 label *label3
    23 op greaterThan *tmp1 :n 0
    24 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   25 op sub :n :n 1
+   26 getlink :block :n
    27 print "\nFound: "
    28 print :block
    29 sensor *tmp5 :block @type
 
   154 write .B1 .MEMORY 8
   155 read *tmp19 .MEMORY 1
   156 op max *tmp20 .START_INDEX *tmp19
-    * op min *tmp21 *tmp20 .END_INDEX
-    * set :index *tmp21
-    * set *tmp22 @tick
-    * set :nextTick *tmp22
-    * set *tmp23 .SWITCH
-    * control enabled *tmp23 0
+  157 op min :index *tmp20 .END_INDEX
+  158 set :nextTick @tick
+  159 control enabled .SWITCH 0
   160 label *label25
   161 sensor *tmp25 .SWITCH @enabled
   162 op equal *tmp26 *tmp25 0
   163 jump *label27 equal *tmp26 false
-    * set *tmp27 @time
-    * set :startTime *tmp27
+  164 set :startTime @time
   165 set :prevTick :nextTick
-    * op add *tmp28 :nextTick TICKS
-    * set :nextTick *tmp28
+  166 op add :nextTick :nextTick TICKS
   167 op add *tmp29 :nextTick TICKS
   168 op greaterThan *tmp30 @tick *tmp29
   169 jump *label28 equal *tmp30 false
-    * set *tmp32 @tick
-    * set :prevTick *tmp32
-    * op add *tmp33 :prevTick TICKS
-    * set :nextTick *tmp33
+  170 set :prevTick @tick
+  171 op add :nextTick :prevTick TICKS
   172 jump *label29 always
   173 label *label28
   174 label *label29
 
   184 label *label31
   185 jump *label30 always
   186 label *label32
-    * sensor *tmp37 .CONTAINER .SENSOR
-    * set :amount *tmp37
-    * sensor *tmp38 .CONTAINER .MAXIMUM
-    * set :max *tmp38
+  187 sensor :amount .CONTAINER .SENSOR
+  188 sensor :max .CONTAINER .MAXIMUM
   189 op mul *tmp39 :amount 150
   190 op div *tmp40 *tmp39 :max
-    * op add *tmp41 10 *tmp40
-    * set :scaled *tmp41
-    * op add *tmp42 :index 1
-    * set :index *tmp42
+  191 op add :scaled 10 *tmp40
+  192 op add :index :index 1
   193 op greaterThan *tmp43 :index .END_INDEX
   194 jump *label35 equal *tmp43 false
   195 set :index .START_INDEX
 
   197 label *label35
   198 label *label36
   199 write :index .MEMORY 0
-    * set *tmp46 :index
-    * write :scaled .MEMORY *tmp46
-    * op sub *tmp48 :index .SIZE
-    * set *tmp49 *tmp48
+  200 write :scaled .MEMORY :index
+  201 op sub *tmp49 :index .SIZE
   202 write :scaled .MEMORY *tmp49
   203 print "Item/Liquid/Energy Level Meter\n"
   204 print "StartIndex: "

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    14 set .G0 .B0
    15 set .R0 .G0
    16 label *label0
-    * jump *label2 equal true false
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null
    19 set .MEMORY null

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-8 instructions):
 
    26 print "\nFound: "
    27 print :block
    28 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   29 jump *label7 notEqual *tmp5 @message
    30 label *label8
    31 set .MESSAGE :block
    32 jump *label6 always
    33 label *label7
-    * jump *label10 equal *tmp5 @switch
-    * jump *label9 always
+   34 jump *label9 notEqual *tmp5 @switch
    35 label *label10
    36 set .SWITCH :block
    37 jump *label6 always
    38 label *label9
-    * jump *label12 equal *tmp5 @memory-bank
-    * jump *label11 always
+   39 jump *label11 notEqual *tmp5 @memory-bank
    40 label *label12
    41 set .MEMORY :block
    42 set .START_INDEX 264
 
    44 set .SIZE 248
    45 jump *label6 always
    46 label *label11
-    * jump *label14 equal *tmp5 @memory-cell
-    * jump *label13 always
+   47 jump *label13 notEqual *tmp5 @memory-cell
    48 label *label14
    49 set .MEMORY :block
    50 set .START_INDEX 40
 
    53 jump *label6 always
    54 label *label13
    55 jump *label16 equal *tmp5 @vault
-    * jump *label16 equal *tmp5 @container
-    * jump *label15 always
+   56 jump *label15 notEqual *tmp5 @container
    57 label *label16
    58 set .CONTAINER :block
    59 set .SENSOR @totalItems
 
    67 jump *label6 always
    68 label *label15
    69 jump *label18 equal *tmp5 @battery
-    * jump *label18 equal *tmp5 @battery-large
-    * jump *label17 always
+   70 jump *label17 notEqual *tmp5 @battery-large
    71 label *label18
    72 set .CONTAINER :block
    73 set .SENSOR @totalPower
 
    81 jump *label6 always
    82 label *label17
    83 jump *label20 equal *tmp5 @liquid-tank
-    * jump *label20 equal *tmp5 @liquid-container
-    * jump *label19 always
+   84 jump *label19 notEqual *tmp5 @liquid-container
    85 label *label20
    86 set .CONTAINER :block
    87 set .SENSOR @totalLiquids
 
    96 label *label19
    97 jump *label22 equal *tmp5 @power-node
    98 jump *label22 equal *tmp5 @power-node-large
-    * jump *label22 equal *tmp5 @surge-tower
-    * jump *label21 always
+   99 jump *label21 notEqual *tmp5 @surge-tower
   100 label *label22
   101 set .CONTAINER :block
   102 set .SENSOR @powerNetStored

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
    19 set .MEMORY null
    20 set :n @links
    21 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   22 jump *label5 lessThanEq :n 0
    23 op sub :n :n 1
    24 getlink :block :n
    25 print "\nFound: "
 
   149 control enabled .SWITCH 0
   150 label *label25
   151 sensor *tmp25 .SWITCH @enabled
-    * op equal *tmp26 *tmp25 0
-    * jump *label27 equal *tmp26 false
+  152 jump *label27 notEqual *tmp25 0
   153 set :startTime @time
   154 set :prevTick :nextTick
   155 op add :nextTick :nextTick TICKS
   156 op add *tmp29 :nextTick TICKS
-    * op greaterThan *tmp30 @tick *tmp29
-    * jump *label28 equal *tmp30 false
+  157 jump *label28 lessThanEq @tick *tmp29
   158 set :prevTick @tick
   159 op add :nextTick :prevTick TICKS
   160 jump *label29 always
   161 label *label28
   162 label *label29
   163 label *label30
-    * op lessThan *tmp34 @tick :nextTick
-    * jump *label32 equal *tmp34 false
-    * op lessThan *tmp35 @tick :prevTick
-    * jump *label33 equal *tmp35 false
+  164 jump *label32 greaterThanEq @tick :nextTick
+  165 jump *label33 greaterThanEq @tick :prevTick
   166 end
   167 jump *label34 always
   168 label *label33
 
   176 op div *tmp40 *tmp39 :max
   177 op add :scaled 10 *tmp40
   178 op add :index :index 1
-    * op greaterThan *tmp43 :index .END_INDEX
-    * jump *label35 equal *tmp43 false
+  179 jump *label35 lessThanEq :index .END_INDEX
   180 set :index .START_INDEX
   181 jump *label36 always
   182 label *label35

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
   106 set .R1 255
   107 set .G1 255
   108 set .B1 80
-    * jump *label6 always
   109 label *label21
   110 label *label6
   111 label *label4
 
   156 jump *label28 lessThanEq @tick *tmp29
   157 set :prevTick @tick
   158 op add :nextTick :prevTick TICKS
-    * jump *label29 always
   159 label *label28
   160 label *label29
   161 label *label30
   162 jump *label32 greaterThanEq @tick :nextTick
   163 jump *label33 greaterThanEq @tick :prevTick
   164 end
-    * jump *label34 always
   165 label *label33
   166 label *label34
   167 label *label31
 
   175 op add :index :index 1
   176 jump *label35 lessThanEq :index .END_INDEX
   177 set :index .START_INDEX
-    * jump *label36 always
   178 label *label35
   179 label *label36
   180 write :index .MEMORY 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set TICKS 60
     1 set .MEMORY null
-    * set .SWITCH .MEMORY
-    * set .MESSAGE .SWITCH
+    2 set .SWITCH null
+    3 set .MESSAGE .MEMORY
     4 set .SIZE null
-    * set .END_INDEX .SIZE
-    * set .START_INDEX .END_INDEX
+    5 set .END_INDEX null
+    6 set .START_INDEX .SIZE
     7 set .SENSOR null
-    * set .MAXIMUM .SENSOR
-    * set .CONTAINER .MAXIMUM
+    8 set .MAXIMUM null
+    9 set .CONTAINER .SENSOR
    10 set .B1 null
-    * set .G1 .B1
-    * set .R1 .G1
-    * set .B0 .R1
-    * set .G0 .B0
-    * set .R0 .G0
+   11 set .G1 null
+   12 set .R1 .B1
+   13 set .B0 .G1
+   14 set .G0 .R1
+   15 set .R0 .B0
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2:
     0 set TICKS 60
     1 set .MEMORY null
     2 set .SWITCH null
-    * set .MESSAGE .MEMORY
+    3 set .MESSAGE null
     4 set .SIZE null
     5 set .END_INDEX null
-    * set .START_INDEX .SIZE
+    6 set .START_INDEX null
     7 set .SENSOR null
     8 set .MAXIMUM null
-    * set .CONTAINER .SENSOR
+    9 set .CONTAINER null
    10 set .B1 null
    11 set .G1 null
-    * set .R1 .B1
-    * set .B0 .G1
-    * set .G0 .R1
-    * set .R0 .B0
+   12 set .R1 null
+   13 set .B0 null
+   14 set .G0 .B1
+   15 set .R0 .G1
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    11 set .G1 null
    12 set .R1 null
    13 set .B0 null
-    * set .G0 .B1
-    * set .R0 .G1
+   14 set .G0 null
+   15 set .R0 null
    16 label *label0
    17 print "Item/Liquid/Energy Level Meter"
    18 set .CONTAINER null

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    20 set :n @links
    21 label *label3
    22 jump *label5 lessThanEq :n 0
+   23 label *label37
    24 op sub :n :n 1
    25 getlink :block :n
    26 print "\nFound: "
 
   110 label *label21
   111 label *label6
   112 label *label4
-    * jump *label3 always
+  113 jump *label37 greaterThan :n 0
   114 label *label5
   115 print "\nMessage: "
   116 print .MESSAGE
 
   161 label *label29
   162 label *label30
   163 jump *label32 greaterThanEq @tick :nextTick
+  164 label *label38
   165 jump *label33 greaterThanEq @tick :prevTick
   166 end
   167 label *label33
   168 label *label34
   169 label *label31
-    * jump *label30 always
+  170 jump *label38 lessThan @tick :nextTick
   171 label *label32
   172 sensor :amount .CONTAINER .SENSOR
   173 sensor :max .CONTAINER .MAXIMUM

Modifications by Replicate loop condition at line 122:1 (+1 instructions):
 
   150 label *label25
   151 sensor *tmp25 .SWITCH @enabled
   152 jump *label27 notEqual *tmp25 0
+  153 label *label39
   154 set :startTime @time
   155 set :prevTick :nextTick
   156 op add :nextTick :nextTick TICKS
 
   203 print "\n"
   204 printflush .MESSAGE
   205 label *label26
-    * jump *label25 always
+  206 sensor *tmp25 .SWITCH @enabled
+  207 jump *label39 equal *tmp25 0
   208 label *label27
   209 end

Modifications by Convert case at line 34:9 (segments: 2, zero extension) (+133 instructions):
 
    26 print "\nFound: "
    27 print :block
    28 sensor *tmp5 :block @type
-    * jump *label7 notEqual *tmp5 @message
+   29 sensor *tmp52 *tmp5 @id
+   30 jump *label41 greaterThanEq *tmp52 139
+   31 multijump *label42 *tmp52 0 (m:*label181)
+   32 multilabel *label42 (m:*label181)
+   33 jump *label40 always
+   34 multilabel *label43 (m:*label181)
+   35 jump *label40 always
+   36 multilabel *label44 (m:*label181)
+   37 jump *label40 always
+   38 multilabel *label45 (m:*label181)
+   39 jump *label40 always
+   40 multilabel *label46 (m:*label181)
+   41 jump *label40 always
+   42 multilabel *label47 (m:*label181)
+   43 jump *label40 always
+   44 multilabel *label48 (m:*label181)
+   45 jump *label40 always
+   46 multilabel *label49 (m:*label181)
+   47 jump *label40 always
+   48 multilabel *label50 (m:*label181)
+   49 jump *label40 always
+   50 multilabel *label51 (m:*label181)
+   51 jump *label40 always
+   52 multilabel *label52 (m:*label181)
+   53 jump *label40 always
+   54 multilabel *label53 (m:*label181)
+   55 jump *label40 always
+   56 multilabel *label54 (m:*label181)
+   57 jump *label40 always
+   58 multilabel *label55 (m:*label181)
+   59 jump *label40 always
+   60 multilabel *label56 (m:*label181)
+   61 jump *label40 always
+   62 multilabel *label57 (m:*label181)
+   63 jump *label40 always
+   64 multilabel *label58 (m:*label181)
+   65 jump *label40 always
+   66 multilabel *label59 (m:*label181)
+   67 jump *label40 always
+   68 multilabel *label60 (m:*label181)
+   69 jump *label40 always
+   70 multilabel *label61 (m:*label181)
+   71 jump *label40 always
+   72 multilabel *label62 (m:*label181)
+   73 jump *label40 always
+   74 multilabel *label63 (m:*label181)
+   75 jump *label40 always
+   76 multilabel *label64 (m:*label181)
+   77 jump *label40 always
+   78 multilabel *label65 (m:*label181)
+   79 jump *label40 always
+   80 multilabel *label66 (m:*label181)
+   81 jump *label40 always
+   82 multilabel *label67 (m:*label181)
+   83 jump *label40 always
+   84 multilabel *label68 (m:*label181)
+   85 jump *label40 always
+   86 multilabel *label69 (m:*label181)
+   87 jump *label40 always
+   88 multilabel *label70 (m:*label181)
+   89 jump *label40 always
+   90 multilabel *label71 (m:*label181)
+   91 jump *label40 always
+   92 multilabel *label72 (m:*label181)
+   93 jump *label40 always
+   94 multilabel *label73 (m:*label181)
+   95 jump *label40 always
+   96 multilabel *label74 (m:*label181)
+   97 jump *label40 always
+   98 multilabel *label75 (m:*label181)
+   99 jump *label40 always
+  100 multilabel *label76 (m:*label181)
+  101 jump *label40 always
+  102 multilabel *label77 (m:*label181)
+  103 jump *label40 always
+  104 multilabel *label78 (m:*label181)
+  105 jump *label40 always
+  106 multilabel *label79 (m:*label181)
+  107 jump *label40 always
+  108 multilabel *label80 (m:*label181)
+  109 jump *label40 always
+  110 multilabel *label81 (m:*label181)
+  111 jump *label40 always
+  112 multilabel *label82 (m:*label181)
+  113 jump *label40 always
+  114 multilabel *label83 (m:*label181)
+  115 jump *label40 always
+  116 multilabel *label84 (m:*label181)
+  117 jump *label40 always
+  118 multilabel *label85 (m:*label181)
+  119 jump *label40 always
+  120 multilabel *label86 (m:*label181)
+  121 jump *label40 always
+  122 multilabel *label87 (m:*label181)
+  123 jump *label40 always
+  124 multilabel *label88 (m:*label181)
+  125 jump *label40 always
+  126 multilabel *label89 (m:*label181)
+  127 jump *label40 always
+  128 multilabel *label90 (m:*label181)
+  129 jump *label40 always
+  130 multilabel *label91 (m:*label181)
+  131 jump *label40 always
+  132 multilabel *label92 (m:*label181)
+  133 jump *label40 always
+  134 multilabel *label93 (m:*label181)
+  135 jump *label40 always
+  136 multilabel *label94 (m:*label181)
+  137 jump *label40 always
+  138 multilabel *label95 (m:*label181)
+  139 jump *label40 always
+  140 multilabel *label96 (m:*label181)
+  141 jump *label40 always
+  142 multilabel *label97 (m:*label181)
+  143 jump *label40 always
+  144 multilabel *label98 (m:*label181)
+  145 jump *label40 always
+  146 multilabel *label99 (m:*label181)
+  147 jump *label40 always
+  148 multilabel *label100 (m:*label181)
+  149 jump *label40 always
+  150 multilabel *label101 (m:*label181)
+  151 jump *label40 always
+  152 multilabel *label102 (m:*label181)
+  153 jump *label40 always
+  154 multilabel *label103 (m:*label181)
+  155 jump *label40 always
+  156 multilabel *label104 (m:*label181)
+  157 jump *label40 always
+  158 multilabel *label105 (m:*label181)
+  159 jump *label40 always
+  160 multilabel *label106 (m:*label181)
+  161 jump *label20 always
+  162 multilabel *label107 (m:*label181)
+  163 jump *label40 always
+  164 multilabel *label108 (m:*label181)
+  165 jump *label40 always
+  166 multilabel *label109 (m:*label181)
+  167 jump *label40 always
+  168 multilabel *label110 (m:*label181)
+  169 jump *label22 always
+  170 multilabel *label111 (m:*label181)
+  171 jump *label22 always
+  172 multilabel *label112 (m:*label181)
+  173 jump *label22 always
+  174 multilabel *label113 (m:*label181)
+  175 jump *label40 always
+  176 multilabel *label114 (m:*label181)
+  177 jump *label18 always
+  178 multilabel *label115 (m:*label181)
+  179 jump *label18 always
+  180 multilabel *label116 (m:*label181)
+  181 jump *label40 always
+  182 multilabel *label117 (m:*label181)
+  183 jump *label40 always
+  184 multilabel *label118 (m:*label181)
+  185 jump *label40 always
+  186 multilabel *label119 (m:*label181)
+  187 jump *label40 always
+  188 multilabel *label120 (m:*label181)
+  189 jump *label40 always
+  190 multilabel *label121 (m:*label181)
+  191 jump *label40 always
+  192 multilabel *label122 (m:*label181)
+  193 jump *label40 always
+  194 multilabel *label123 (m:*label181)
+  195 jump *label40 always
+  196 multilabel *label124 (m:*label181)
+  197 jump *label40 always
+  198 multilabel *label125 (m:*label181)
+  199 jump *label40 always
+  200 multilabel *label126 (m:*label181)
+  201 jump *label40 always
+  202 multilabel *label127 (m:*label181)
+  203 jump *label40 always
+  204 multilabel *label128 (m:*label181)
+  205 jump *label40 always
+  206 multilabel *label129 (m:*label181)
+  207 jump *label40 always
+  208 multilabel *label130 (m:*label181)
+  209 jump *label40 always
+  210 multilabel *label131 (m:*label181)
+  211 jump *label40 always
+  212 multilabel *label132 (m:*label181)
+  213 jump *label40 always
+  214 multilabel *label133 (m:*label181)
+  215 jump *label40 always
+  216 multilabel *label134 (m:*label181)
+  217 jump *label40 always
+  218 multilabel *label135 (m:*label181)
+  219 jump *label16 always
+  220 multilabel *label136 (m:*label181)
+  221 jump *label16 always
+  222 multilabel *label137 (m:*label181)
+  223 jump *label40 always
+  224 multilabel *label138 (m:*label181)
+  225 jump *label40 always
+  226 multilabel *label139 (m:*label181)
+  227 jump *label40 always
+  228 multilabel *label140 (m:*label181)
+  229 jump *label40 always
+  230 multilabel *label141 (m:*label181)
+  231 jump *label40 always
+  232 multilabel *label142 (m:*label181)
+  233 jump *label40 always
+  234 multilabel *label143 (m:*label181)
+  235 jump *label40 always
+  236 multilabel *label144 (m:*label181)
+  237 jump *label40 always
+  238 multilabel *label145 (m:*label181)
+  239 jump *label40 always
+  240 multilabel *label146 (m:*label181)
+  241 jump *label40 always
+  242 multilabel *label147 (m:*label181)
+  243 jump *label40 always
+  244 multilabel *label148 (m:*label181)
+  245 jump *label40 always
+  246 multilabel *label149 (m:*label181)
+  247 jump *label40 always
+  248 multilabel *label150 (m:*label181)
+  249 jump *label40 always
+  250 multilabel *label151 (m:*label181)
+  251 jump *label40 always
+  252 multilabel *label152 (m:*label181)
+  253 jump *label40 always
+  254 multilabel *label153 (m:*label181)
+  255 jump *label40 always
+  256 multilabel *label154 (m:*label181)
+  257 jump *label40 always
+  258 multilabel *label155 (m:*label181)
+  259 jump *label40 always
+  260 multilabel *label156 (m:*label181)
+  261 jump *label40 always
+  262 multilabel *label157 (m:*label181)
+  263 jump *label40 always
+  264 multilabel *label158 (m:*label181)
+  265 jump *label40 always
+  266 multilabel *label159 (m:*label181)
+  267 jump *label40 always
+  268 multilabel *label160 (m:*label181)
+  269 jump *label40 always
+  270 multilabel *label161 (m:*label181)
+  271 jump *label40 always
+  272 multilabel *label162 (m:*label181)
+  273 jump *label40 always
+  274 multilabel *label163 (m:*label181)
+  275 jump *label40 always
+  276 multilabel *label164 (m:*label181)
+  277 jump *label40 always
+  278 multilabel *label165 (m:*label181)
+  279 jump *label40 always
+  280 multilabel *label166 (m:*label181)
+  281 jump *label40 always
+  282 multilabel *label167 (m:*label181)
+  283 jump *label40 always
+  284 multilabel *label168 (m:*label181)
+  285 jump *label40 always
+  286 multilabel *label169 (m:*label181)
+  287 jump *label40 always
+  288 multilabel *label170 (m:*label181)
+  289 jump *label40 always
+  290 multilabel *label171 (m:*label181)
+  291 jump *label40 always
+  292 multilabel *label172 (m:*label181)
+  293 jump *label40 always
+  294 multilabel *label173 (m:*label181)
+  295 jump *label40 always
+  296 multilabel *label174 (m:*label181)
+  297 jump *label40 always
+  298 multilabel *label175 (m:*label181)
+  299 jump *label40 always
+  300 multilabel *label176 (m:*label181)
+  301 jump *label40 always
+  302 multilabel *label177 (m:*label181)
+  303 jump *label40 always
+  304 multilabel *label178 (m:*label181)
+  305 jump *label40 always
+  306 multilabel *label179 (m:*label181)
+  307 jump *label8 always
+  308 multilabel *label180 (m:*label181)
+  309 jump *label10 always
+  310 label *label41
+  311 jump *label14 equal *tmp52 142
+  312 jump *label12 equal *tmp52 143
+  313 jump *label20 equal *tmp52 146
+  314 jump *label40 always
   315 label *label8
   316 set .MESSAGE :block
   317 jump *label6 always
   318 label *label7
-    * jump *label9 notEqual *tmp5 @switch
   319 label *label10
   320 set .SWITCH :block
   321 jump *label6 always
   322 label *label9
-    * jump *label11 notEqual *tmp5 @memory-bank
   323 label *label12
   324 set .MEMORY :block
   325 set .START_INDEX 264
 
   327 set .SIZE 248
   328 jump *label6 always
   329 label *label11
-    * jump *label13 notEqual *tmp5 @memory-cell
   330 label *label14
   331 set .MEMORY :block
   332 set .START_INDEX 40
 
   334 set .SIZE 24
   335 jump *label6 always
   336 label *label13
-    * jump *label16 equal *tmp5 @vault
-    * jump *label15 notEqual *tmp5 @container
   337 label *label16
   338 set .CONTAINER :block
   339 set .SENSOR @totalItems
 
   346 set .B1 80
   347 jump *label6 always
   348 label *label15
-    * jump *label18 equal *tmp5 @battery
-    * jump *label17 notEqual *tmp5 @battery-large
   349 label *label18
   350 set .CONTAINER :block
   351 set .SENSOR @totalPower
 
   358 set .B1 80
   359 jump *label6 always
   360 label *label17
-    * jump *label20 equal *tmp5 @liquid-tank
-    * jump *label19 notEqual *tmp5 @liquid-container
   361 label *label20
   362 set .CONTAINER :block
   363 set .SENSOR @totalLiquids
 
   370 set .B1 255
   371 jump *label6 always
   372 label *label19
-    * jump *label22 equal *tmp5 @power-node
-    * jump *label22 equal *tmp5 @power-node-large
-    * jump *label21 notEqual *tmp5 @surge-tower
   373 label *label22
   374 set .CONTAINER :block
   375 set .SENSOR @powerNetStored
 
   381 set .G1 255
   382 set .B1 80
   383 label *label21
+  384 label *label40
   385 label *label6
   386 label *label4
   387 jump *label37 greaterThan :n 0

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
    18 set .CONTAINER null
    19 set .MEMORY null
    20 set :n @links
-    * label *label3
    21 jump *label5 lessThanEq :n 0
    22 label *label37
    23 op sub :n :n 1
 
   314 label *label8
   315 set .MESSAGE :block
   316 jump *label6 always
-    * label *label7
   317 label *label10
   318 set .SWITCH :block
   319 jump *label6 always
-    * label *label9
   320 label *label12
   321 set .MEMORY :block
   322 set .START_INDEX 264
   323 set .END_INDEX 511
   324 set .SIZE 248
   325 jump *label6 always
-    * label *label11
   326 label *label14
   327 set .MEMORY :block
   328 set .START_INDEX 40
   329 set .END_INDEX 63
   330 set .SIZE 24
   331 jump *label6 always
-    * label *label13
   332 label *label16
   333 set .CONTAINER :block
   334 set .SENSOR @totalItems
 
   340 set .G1 255
   341 set .B1 80
   342 jump *label6 always
-    * label *label15
   343 label *label18
   344 set .CONTAINER :block
   345 set .SENSOR @totalPower
 
   351 set .G1 255
   352 set .B1 80
   353 jump *label6 always
-    * label *label17
   354 label *label20
   355 set .CONTAINER :block
   356 set .SENSOR @totalLiquids
 
   362 set .G1 192
   363 set .B1 255
   364 jump *label6 always
-    * label *label19
   365 label *label22
   366 set .CONTAINER :block
   367 set .SENSOR @powerNetStored
 
   372 set .R1 255
   373 set .G1 255
   374 set .B1 80
-    * label *label21
   375 label *label40
   376 label *label6
-    * label *label4
   377 jump *label37 greaterThan :n 0
   378 label *label5
   379 print "\nMessage: "
 
   395 printflush .MESSAGE
   396 jump *label2 always
   397 label *label24
-    * label *label1
   398 jump *label0 always
   399 label *label2
   400 write .START_INDEX .MEMORY 0
 
   410 op min :index *tmp20 .END_INDEX
   411 set :nextTick @tick
   412 control enabled .SWITCH 0
-    * label *label25
   413 sensor *tmp25 .SWITCH @enabled
   414 jump *label27 notEqual *tmp25 0
   415 label *label39
 
   421 set :prevTick @tick
   422 op add :nextTick :prevTick TICKS
   423 label *label28
-    * label *label29
-    * label *label30
   424 jump *label32 greaterThanEq @tick :nextTick
   425 label *label38
   426 jump *label33 greaterThanEq @tick :prevTick
   427 end
   428 label *label33
-    * label *label34
-    * label *label31
   429 jump *label38 lessThan @tick :nextTick
   430 label *label32
   431 sensor :amount .CONTAINER .SENSOR
 
   437 jump *label35 lessThanEq :index .END_INDEX
   438 set :index .START_INDEX
   439 label *label35
-    * label *label36
   440 write :index .MEMORY 0
   441 write :scaled .MEMORY :index
   442 op sub *tmp49 :index .SIZE
 
   459 print *tmp51
   460 print "\n"
   461 printflush .MESSAGE
-    * label *label26
   462 sensor *tmp25 .SWITCH @enabled
   463 jump *label39 equal *tmp25 0
   464 label *label27

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
+    0 label __start__
     1 set TICKS 60
     2 set .MEMORY null
     3 set .SWITCH null
 
   391 jump *label23 equal *tmp9 false
   392 print "\nNo memory or container."
   393 printflush .MESSAGE
-    * jump *label24 always
+  394 jump *label0 always
   395 label *label23
   396 printflush .MESSAGE
   397 jump *label2 always
 
   412 set :nextTick @tick
   413 control enabled .SWITCH 0
   414 sensor *tmp25 .SWITCH @enabled
-    * jump *label27 notEqual *tmp25 0
+  415 jump __start__ notEqual *tmp25 0
   416 label *label39
   417 set :startTime @time
   418 set :prevTick :nextTick

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1 (-1 instructions):
 
   395 label *label23
   396 printflush .MESSAGE
   397 jump *label2 always
-    * label *label24
-    * jump *label0 always
   398 label *label2
   399 write .START_INDEX .MEMORY 0
   400 write .END_INDEX .MEMORY 2
 
   460 printflush .MESSAGE
   461 sensor *tmp25 .SWITCH @enabled
   462 jump *label39 equal *tmp25 0
-    * label *label27
   463 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-2 instructions):
 
   394 jump *label0 always
   395 label *label23
   396 printflush .MESSAGE
-    * jump *label2 always
   397 label *label2
   398 write .START_INDEX .MEMORY 0
   399 write .END_INDEX .MEMORY 2
 
   459 printflush .MESSAGE
   460 sensor *tmp25 .SWITCH @enabled
   461 jump *label39 equal *tmp25 0
-    * end

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
   394 jump *label0 always
   395 label *label23
   396 printflush .MESSAGE
-    * label *label2
   397 write .START_INDEX .MEMORY 0
   398 write .END_INDEX .MEMORY 2
   399 write .R0 .MEMORY 3

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   377 label *label6
   378 jump *label37 greaterThan :n 0
   379 label *label5
-    * print "\nMessage: "
-    * print .MESSAGE
-    * print "\nSwitch: "
-    * print .SWITCH
-    * print "\nMemory: "
-    * print .MEMORY
-    * print "\nContainer: "
+  380 print "\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nContainer: "
+  381 format .MESSAGE
+  382 format .SWITCH
+  383 format .MEMORY
   384 print .CONTAINER
   385 op equal *tmp7 .CONTAINER null
   386 op equal *tmp8 .MEMORY null
 
   435 write :scaled .MEMORY :index
   436 op sub *tmp49 :index .SIZE
   437 write :scaled .MEMORY *tmp49
-    * print "Item/Liquid/Energy Level Meter\n"
-    * print "StartIndex: "
-    * print .START_INDEX
-    * print "\n"
-    * print "Index: "
-    * print :index
-    * print "\n"
-    * print "Amount: "
-    * print :amount
-    * print "\n"
-    * print "Scaled: "
-    * print :scaled
-    * print "\n"
+  438 print "Item/Liquid/Energy Level Meter\nStartIndex: {0}\nIndex: {0}\nAmount: {0}\nScaled: {0}\nElapsed: {0}\n"
+  439 format .START_INDEX
+  440 format :index
+  441 format :amount
+  442 format :scaled
   443 op sub *tmp51 @time :startTime
-    * print "Elapsed: "
-    * print *tmp51
-    * print "\n"
+  444 format *tmp51
   445 printflush .MESSAGE
   446 sensor *tmp25 .SWITCH @enabled
   447 jump *label39 equal *tmp25 0

Final code before resolving virtual instructions:

label __start__
set TICKS 60
set .MEMORY null
set .SWITCH null
set .MESSAGE null
set .SIZE null
set .END_INDEX null
set .START_INDEX null
set .SENSOR null
set .MAXIMUM null
set .CONTAINER null
set .B1 null
set .G1 null
set .R1 null
set .B0 null
set .G0 null
set .R0 null
label *label0
print "Item/Liquid/Energy Level Meter"
set .CONTAINER null
set .MEMORY null
set :n @links
jump *label5 lessThanEq :n 0
label *label37
op sub :n :n 1
getlink :block :n
print "\nFound: "
print :block
sensor *tmp5 :block @type
sensor *tmp52 *tmp5 @id
jump *label41 greaterThanEq *tmp52 139
multijump *label42 *tmp52 0
multilabel *label42
jump *label40 always
multilabel *label43
jump *label40 always
multilabel *label44
jump *label40 always
multilabel *label45
jump *label40 always
multilabel *label46
jump *label40 always
multilabel *label47
jump *label40 always
multilabel *label48
jump *label40 always
multilabel *label49
jump *label40 always
multilabel *label50
jump *label40 always
multilabel *label51
jump *label40 always
multilabel *label52
jump *label40 always
multilabel *label53
jump *label40 always
multilabel *label54
jump *label40 always
multilabel *label55
jump *label40 always
multilabel *label56
jump *label40 always
multilabel *label57
jump *label40 always
multilabel *label58
jump *label40 always
multilabel *label59
jump *label40 always
multilabel *label60
jump *label40 always
multilabel *label61
jump *label40 always
multilabel *label62
jump *label40 always
multilabel *label63
jump *label40 always
multilabel *label64
jump *label40 always
multilabel *label65
jump *label40 always
multilabel *label66
jump *label40 always
multilabel *label67
jump *label40 always
multilabel *label68
jump *label40 always
multilabel *label69
jump *label40 always
multilabel *label70
jump *label40 always
multilabel *label71
jump *label40 always
multilabel *label72
jump *label40 always
multilabel *label73
jump *label40 always
multilabel *label74
jump *label40 always
multilabel *label75
jump *label40 always
multilabel *label76
jump *label40 always
multilabel *label77
jump *label40 always
multilabel *label78
jump *label40 always
multilabel *label79
jump *label40 always
multilabel *label80
jump *label40 always
multilabel *label81
jump *label40 always
multilabel *label82
jump *label40 always
multilabel *label83
jump *label40 always
multilabel *label84
jump *label40 always
multilabel *label85
jump *label40 always
multilabel *label86
jump *label40 always
multilabel *label87
jump *label40 always
multilabel *label88
jump *label40 always
multilabel *label89
jump *label40 always
multilabel *label90
jump *label40 always
multilabel *label91
jump *label40 always
multilabel *label92
jump *label40 always
multilabel *label93
jump *label40 always
multilabel *label94
jump *label40 always
multilabel *label95
jump *label40 always
multilabel *label96
jump *label40 always
multilabel *label97
jump *label40 always
multilabel *label98
jump *label40 always
multilabel *label99
jump *label40 always
multilabel *label100
jump *label40 always
multilabel *label101
jump *label40 always
multilabel *label102
jump *label40 always
multilabel *label103
jump *label40 always
multilabel *label104
jump *label40 always
multilabel *label105
jump *label40 always
multilabel *label106
jump *label20 always
multilabel *label107
jump *label40 always
multilabel *label108
jump *label40 always
multilabel *label109
jump *label40 always
multilabel *label110
jump *label22 always
multilabel *label111
jump *label22 always
multilabel *label112
jump *label22 always
multilabel *label113
jump *label40 always
multilabel *label114
jump *label18 always
multilabel *label115
jump *label18 always
multilabel *label116
jump *label40 always
multilabel *label117
jump *label40 always
multilabel *label118
jump *label40 always
multilabel *label119
jump *label40 always
multilabel *label120
jump *label40 always
multilabel *label121
jump *label40 always
multilabel *label122
jump *label40 always
multilabel *label123
jump *label40 always
multilabel *label124
jump *label40 always
multilabel *label125
jump *label40 always
multilabel *label126
jump *label40 always
multilabel *label127
jump *label40 always
multilabel *label128
jump *label40 always
multilabel *label129
jump *label40 always
multilabel *label130
jump *label40 always
multilabel *label131
jump *label40 always
multilabel *label132
jump *label40 always
multilabel *label133
jump *label40 always
multilabel *label134
jump *label40 always
multilabel *label135
jump *label16 always
multilabel *label136
jump *label16 always
multilabel *label137
jump *label40 always
multilabel *label138
jump *label40 always
multilabel *label139
jump *label40 always
multilabel *label140
jump *label40 always
multilabel *label141
jump *label40 always
multilabel *label142
jump *label40 always
multilabel *label143
jump *label40 always
multilabel *label144
jump *label40 always
multilabel *label145
jump *label40 always
multilabel *label146
jump *label40 always
multilabel *label147
jump *label40 always
multilabel *label148
jump *label40 always
multilabel *label149
jump *label40 always
multilabel *label150
jump *label40 always
multilabel *label151
jump *label40 always
multilabel *label152
jump *label40 always
multilabel *label153
jump *label40 always
multilabel *label154
jump *label40 always
multilabel *label155
jump *label40 always
multilabel *label156
jump *label40 always
multilabel *label157
jump *label40 always
multilabel *label158
jump *label40 always
multilabel *label159
jump *label40 always
multilabel *label160
jump *label40 always
multilabel *label161
jump *label40 always
multilabel *label162
jump *label40 always
multilabel *label163
jump *label40 always
multilabel *label164
jump *label40 always
multilabel *label165
jump *label40 always
multilabel *label166
jump *label40 always
multilabel *label167
jump *label40 always
multilabel *label168
jump *label40 always
multilabel *label169
jump *label40 always
multilabel *label170
jump *label40 always
multilabel *label171
jump *label40 always
multilabel *label172
jump *label40 always
multilabel *label173
jump *label40 always
multilabel *label174
jump *label40 always
multilabel *label175
jump *label40 always
multilabel *label176
jump *label40 always
multilabel *label177
jump *label40 always
multilabel *label178
jump *label40 always
multilabel *label179
jump *label8 always
multilabel *label180
jump *label10 always
label *label41
jump *label14 equal *tmp52 142
jump *label12 equal *tmp52 143
jump *label20 equal *tmp52 146
jump *label40 always
label *label8
set .MESSAGE :block
jump *label6 always
label *label10
set .SWITCH :block
jump *label6 always
label *label12
set .MEMORY :block
set .START_INDEX 264
set .END_INDEX 511
set .SIZE 248
jump *label6 always
label *label14
set .MEMORY :block
set .START_INDEX 40
set .END_INDEX 63
set .SIZE 24
jump *label6 always
label *label16
set .CONTAINER :block
set .SENSOR @totalItems
set .MAXIMUM @itemCapacity
set .R0 0
set .G0 80
set .B0 0
set .R1 80
set .G1 255
set .B1 80
jump *label6 always
label *label18
set .CONTAINER :block
set .SENSOR @totalPower
set .MAXIMUM @powerCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
jump *label6 always
label *label20
set .CONTAINER :block
set .SENSOR @totalLiquids
set .MAXIMUM @liquidCapacity
set .R0 0
set .G0 0
set .B0 192
set .R1 192
set .G1 192
set .B1 255
jump *label6 always
label *label22
set .CONTAINER :block
set .SENSOR @powerNetStored
set .MAXIMUM @powerNetCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
label *label40
label *label6
jump *label37 greaterThan :n 0
label *label5
print "\nMessage: {0}\nSwitch: {0}\nMemory: {0}\nContainer: "
format .MESSAGE
format .SWITCH
format .MEMORY
print .CONTAINER
op equal *tmp7 .CONTAINER null
op equal *tmp8 .MEMORY null
op or *tmp9 *tmp7 *tmp8
jump *label23 equal *tmp9 false
print "\nNo memory or container."
printflush .MESSAGE
jump *label0 always
label *label23
printflush .MESSAGE
write .START_INDEX .MEMORY 0
write .END_INDEX .MEMORY 2
write .R0 .MEMORY 3
write .G0 .MEMORY 4
write .B0 .MEMORY 5
write .R1 .MEMORY 6
write .G1 .MEMORY 7
write .B1 .MEMORY 8
read *tmp19 .MEMORY 1
op max *tmp20 .START_INDEX *tmp19
op min :index *tmp20 .END_INDEX
set :nextTick @tick
control enabled .SWITCH 0
sensor *tmp25 .SWITCH @enabled
jump __start__ notEqual *tmp25 0
label *label39
set :startTime @time
set :prevTick :nextTick
op add :nextTick :nextTick TICKS
op add *tmp29 :nextTick TICKS
jump *label28 lessThanEq @tick *tmp29
set :prevTick @tick
op add :nextTick :prevTick TICKS
label *label28
jump *label32 greaterThanEq @tick :nextTick
label *label38
jump *label33 greaterThanEq @tick :prevTick
end
label *label33
jump *label38 lessThan @tick :nextTick
label *label32
sensor :amount .CONTAINER .SENSOR
sensor :max .CONTAINER .MAXIMUM
op mul *tmp39 :amount 150
op div *tmp40 *tmp39 :max
op add :scaled 10 *tmp40
op add :index :index 1
jump *label35 lessThanEq :index .END_INDEX
set :index .START_INDEX
label *label35
write :index .MEMORY 0
write :scaled .MEMORY :index
op sub *tmp49 :index .SIZE
write :scaled .MEMORY *tmp49
print "Item/Liquid/Energy Level Meter\nStartIndex: {0}\nIndex: {0}\nAmount: {0}\nScaled: {0}\nElapsed: {0}\n"
format .START_INDEX
format :index
format :amount
format :scaled
op sub *tmp51 @time :startTime
format *tmp51
printflush .MESSAGE
sensor *tmp25 .SWITCH @enabled
jump *label39 equal *tmp25 0
