   636 instructions before optimizations.
    60 instructions eliminated by Temp Variables Elimination.
     4 instructions eliminated by Case Expression Optimization.
    85 instructions eliminated by Dead Code Elimination (7 iterations).
     1 instructions eliminated by Jump Normalization (6 iterations).
    25 instructions eliminated by Jump Optimization (6 iterations).
    31 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
     1 instructions eliminated by Expression Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (2 passes, 4 iterations).
     6 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions eliminated by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
    58 instructions added by Case Switching (5 iterations).
     1 case expressions converted to switched jumps Case Switching.
    12 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    11 instructions updated by JumpThreading.
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    39 instructions eliminated by Print Merging.
   426 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 587):
  o Convert case at line 419:9 (segments: 3)                     cost     1, benefit      875.0, efficiency    875.000
  * Convert case at line 419:9 (segments: 2, zero extension)     cost    58, benefit     1000.0, efficiency     17.241 (+57 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-4 instructions):
 
    21 print :block
    22 print "\n"
    23 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label9 equal *tmp6 @impact-reactor
+   24 jump *label9 equal *tmp5 @impact-reactor
    25 jump *label8 always
    26 label *label9
    27 set .START :n
 
    29 set *tmp4 :reactors
    30 jump *label7 always
    31 label *label8
-    * jump *label11 equal *tmp6 @overdrive-projector
-    * jump *label11 equal *tmp6 @overdrive-dome
+   32 jump *label11 equal *tmp5 @overdrive-projector
+   33 jump *label11 equal *tmp5 @overdrive-dome
    34 jump *label10 always
    35 label *label11
    36 set .START :n
 
   180 label *label19
   181 set *tmp44 null
   182 label *label20
-    * set *tmp63 .MODE
-    * jump *label29 equal *tmp63 0
+  183 jump *label29 equal .MODE 0
   184 jump *label28 always
   185 label *label29
   186 set *tmp62 "[salmon]SHUTDOWN[]"
   187 jump *label27 always
   188 label *label28
-    * jump *label31 equal *tmp63 1
+  189 jump *label31 equal .MODE 1
   190 jump *label30 always
   191 label *label31
   192 set *tmp62 "[gold]STARTUP[]"
   193 jump *label27 always
   194 label *label30
-    * jump *label33 equal *tmp63 2
+  195 jump *label33 equal .MODE 2
   196 jump *label32 always
   197 label *label33
   198 set *tmp62 "[green]RUNNING[]"
 
   279 print :net_power
   280 print "["
   281 print "]"
-    * set *tmp79 .MODE
-    * jump *label44 equal *tmp79 0
+  282 jump *label44 equal .MODE 0
   283 jump *label43 always
   284 label *label44
   285 set .REACTORS_ON 0
 
   310 set *tmp78 *tmp84
   311 jump *label42 always
   312 label *label43
-    * jump *label48 equal *tmp79 1
+  313 jump *label48 equal .MODE 1
   314 jump *label47 always
   315 label *label48
   316 jump *label49 equal .OUTPUT_1 false
 
   456 set *tmp78 *tmp92
   457 jump *label42 always
   458 label *label47
-    * jump *label74 equal *tmp79 2
+  459 jump *label74 equal .MODE 2
   460 jump *label73 always
   461 label *label74
   462 sensor *tmp131 tank1 @totalLiquids
 
   659 getlink *tmp202 :n
   660 set :block *tmp202
   661 sensor *tmp204 :block @type
-    * set *tmp205 *tmp204
-    * jump *label108 equal *tmp205 @impact-reactor
+  662 jump *label108 equal *tmp204 @impact-reactor
   663 jump *label107 always
   664 label *label108
   665 op add :reactors :reactors 1
 
   678 set *tmp203 *tmp209
   679 jump *label106 always
   680 label *label107
-    * jump *label112 equal *tmp205 @overdrive-projector
-    * jump *label112 equal *tmp205 @overdrive-dome
+  681 jump *label112 equal *tmp204 @overdrive-projector
+  682 jump *label112 equal *tmp204 @overdrive-dome
   683 jump *label111 always
   684 label *label112
   685 set *tmp211 :block
 
   687 set *tmp203 .OVERDRIVE
   688 jump *label106 always
   689 label *label111
-    * jump *label114 equal *tmp205 @conduit
-    * jump *label114 equal *tmp205 @pulse-conduit
-    * jump *label114 equal *tmp205 @plated-conduit
-    * jump *label114 equal *tmp205 @conveyor
-    * jump *label114 equal *tmp205 @titanium-conveyor
-    * jump *label114 equal *tmp205 @plastanium-conveyor
-    * jump *label114 equal *tmp205 @armored-conveyor
+  690 jump *label114 equal *tmp204 @conduit
+  691 jump *label114 equal *tmp204 @pulse-conduit
+  692 jump *label114 equal *tmp204 @plated-conduit
+  693 jump *label114 equal *tmp204 @conveyor
+  694 jump *label114 equal *tmp204 @titanium-conveyor
+  695 jump *label114 equal *tmp204 @plastanium-conveyor
+  696 jump *label114 equal *tmp204 @armored-conveyor
   697 jump *label113 always
   698 label *label114
   699 set *tmp213 :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-57 instructions):
 
    26 label *label9
    27 set .START :n
    28 op add :reactors :reactors 1
-    * set *tmp4 :reactors
    29 jump *label7 always
    30 label *label8
    31 jump *label11 equal *tmp5 @overdrive-projector
 
    33 jump *label10 always
    34 label *label11
    35 set .START :n
-    * set *tmp4 .START
    36 jump *label7 always
    37 label *label10
-    * set *tmp4 null
    38 label *label7
    39 label *label5
    40 jump *label4 always
 
    44 op equal *tmp8 :reactors 0
    45 jump *label12 equal *tmp8 false
    46 print "No reactor."
-    * set *tmp9 "No reactor."
    47 jump *label13 always
    48 label *label12
-    * set *tmp9 null
    49 label *label13
    50 printflush message1
    51 label *label2
 
    77 op equal *tmp21 .MODE 0
    78 jump *label14 equal *tmp21 false
    79 set .REASON "Processor reset"
-    * set *tmp22 .REASON
    80 jump *label15 always
    81 label *label14
    82 set .REASON "Reason unknown -- out of power?"
-    * set *tmp22 .REASON
    83 label *label15
    84 op notEqual *tmp24 .MODE 0
    85 control enabled switch1 *tmp24
 
   168 label *label24
   169 set *tmp47 *tmp56
   170 label *label22
-    * set *tmp44 *tmp47
   171 jump *label20 always
   172 label *label19
-    * set *tmp44 null
   173 label *label20
   174 jump *label29 equal .MODE 0
   175 jump *label28 always
 
   210 print " ([gold]"
   211 print :multiplier
   212 print "x[])"
-    * set *tmp64 "x[])"
   213 jump *label35 always
   214 label *label34
-    * set *tmp64 null
   215 label *label35
   216 print "\n=================================="
   217 sensor *tmp70 tank1 @totalLiquids
   218 op lessThan *tmp71 *tmp70 750
   219 jump *label36 equal *tmp71 false
   220 print "\n[salmon]Cryofluid level critical![]"
-    * set *tmp72 "\n[salmon]Cryofluid level critical![]"
   221 jump *label37 always
   222 label *label36
-    * set *tmp72 null
   223 label *label37
   224 sensor *tmp73 vault1 @blast-compound
   225 op lessThan *tmp74 *tmp73 700
   226 jump *label38 equal *tmp74 false
   227 print "\n[salmon]Blast compound level critical![]"
-    * set *tmp75 "\n[salmon]Blast compound level critical![]"
   228 jump *label39 always
   229 label *label38
-    * set *tmp75 null
   230 label *label39
   231 op equal *tmp76 :enough_battery false
   232 jump *label40 equal *tmp76 false
 
   236 print :missing_battery
   237 print " "
   238 print "K[] of additional storage to internal battery."
-    * set *tmp77 null
   239 jump *label41 always
   240 label *label40
-    * set *tmp77 null
   241 label *label41
   242 print "\n"
   243 print "Internal battery:    [gold]"
 
   290 label *label45
   291 set *tmp84 null
   292 label *label46
-    * set *tmp78 *tmp84
   293 jump *label42 always
   294 label *label43
   295 jump *label48 equal .MODE 1
 
   346 print :neededPower
   347 print "["
   348 print "]"
-    * set *tmp99 null
   349 jump *label58 always
   350 label *label57
-    * set *tmp99 null
   351 label *label58
   352 op greaterThan *tmp100 :net_power 100
   353 jump *label59 equal *tmp100 false
   354 set .OVERDRIVE true
-    * set *tmp101 .OVERDRIVE
   355 jump *label60 always
   356 label *label59
-    * set *tmp101 null
   357 label *label60
   358 op lessThan *tmp102 .REACTORS_ON :reactors
   359 op greaterThan *tmp103 :net_power 1000
 
   366 set .OUTPUT_3 .OUTPUT_2
   367 set .OUTPUT_2 .OUTPUT_1
   368 set .OUTPUT_1 1
-    * set *tmp108 .OUTPUT_1
   369 jump *label62 always
   370 label *label61
-    * set *tmp108 null
   371 label *label62
   372 op equal *tmp109 .OUTPUT_1 0
   373 jump *label63 equal *tmp109 false
 
   384 label *label65
   385 set *tmp114 null
   386 label *label66
-    * set *tmp110 *tmp114
   387 jump *label64 always
   388 label *label63
-    * set *tmp110 null
   389 label *label64
   390 op greaterThan *tmp116 @time :nextStart
   391 op land *tmp117 :canStart *tmp116
 
   403 set .REACTORS_ON *tmp122
   404 op add *tmp123 @time 2000
   405 set :nextStart *tmp123
-    * set *tmp118 :nextStart
   406 jump *label68 always
   407 label *label67
-    * set *tmp118 null
   408 label *label68
   409 op greaterThanEq *tmp124 .REACTORS_ON :reactors
   410 op greaterThan *tmp125 @time :nextStart
 
   425 label *label72
   426 set *tmp92 *tmp129
   427 label *label54
-    * set *tmp78 *tmp92
   428 jump *label42 always
   429 label *label47
   430 jump *label74 equal .MODE 2
 
   437 set .MODE 0
   438 control enabled switch1 false
   439 set .REASON "Cryo level too low"
-    * set *tmp134 .REASON
   440 jump *label76 always
   441 label *label75
-    * set *tmp134 null
   442 label *label76
   443 sensor *tmp136 vault1 @blast-compound
   444 op lessThan *tmp137 *tmp136 700
 
   447 set .MODE 0
   448 control enabled switch1 false
   449 set .REASON "Blast compound level too low"
-    * set *tmp139 .REASON
   450 jump *label78 always
   451 label *label77
-    * set *tmp139 null
   452 label *label78
   453 sensor *tmp141 tank1 @totalLiquids
   454 op greaterThan *tmp142 *tmp141 1000
 
   482 op idiv *tmp163 :commit_level 1000
   483 print "\nCommit threshold:   [gold]"
   484 print *tmp163
-    * set *tmp155 *tmp163
   485 jump *label82 always
   486 label *label81
-    * set *tmp155 null
   487 label *label82
   488 op equal *tmp164 :commit_level 0
   489 jump *label83 equal *tmp164 false
   490 op idiv *tmp166 :min_level 1000
   491 print "\nRestart threshold: [gold]"
   492 print *tmp166
-    * set *tmp165 *tmp166
   493 jump *label84 always
   494 label *label83
-    * set *tmp165 null
   495 label *label84
   496 print "[] K"
   497 op lessThan *tmp167 :total_battery :min_level
 
   514 jump *label87 equal *tmp176 false
   515 op add *tmp178 @time 6000
   516 set :nextDecommit *tmp178
-    * set *tmp177 :nextDecommit
   517 jump *label88 always
   518 label *label87
-    * set *tmp177 null
   519 label *label88
   520 op greaterThan *tmp179 @time :nextDecommit
   521 jump *label89 equal *tmp179 false
   522 jump *label91 equal .OVERDRIVE false
   523 set .OVERDRIVE false
-    * set *tmp181 .OVERDRIVE
   524 jump *label92 always
   525 label *label91
   526 op sub *tmp182 .REACTORS_ON 1
   527 op max *tmp183 *tmp182 1
   528 set .REACTORS_ON *tmp183
   529 set .CAN_COMMIT true
-    * set *tmp181 .CAN_COMMIT
   530 label *label92
   531 op add *tmp184 @time 6000
   532 set :nextDecommit *tmp184
 
   547 label *label90
   548 set *tmp171 *tmp180
   549 label *label86
-    * set *tmp149 *tmp171
   550 jump *label80 always
   551 label *label79
   552 sensor *tmp187 switch2 @enabled
   553 jump *label95 equal *tmp187 false
   554 print "\n[salmon]Load adapting not possible.[]"
-    * set *tmp188 "\n[salmon]Load adapting not possible.[]"
   555 jump *label96 always
   556 label *label95
   557 print "\n[gold]Load adapting not active.[]"
-    * set *tmp188 "\n[gold]Load adapting not active.[]"
   558 label *label96
   559 set .REACTORS_ON :reactors
   560 set .OVERDRIVE true
-    * set *tmp149 .OVERDRIVE
   561 label *label80
   562 op mul *tmp189 PLANT_PROTECTION 47500
   563 op lessThan *tmp190 :total_battery *tmp189
   564 jump *label97 equal *tmp190 false
   565 set .OUTPUT_2 0
   566 set .OUTPUT_3 0
-    * set *tmp191 .OUTPUT_3
   567 jump *label98 always
   568 label *label97
-    * set *tmp191 null
   569 label *label98
   570 op equal *tmp192 .OUTPUT_2 0
   571 jump *label99 equal *tmp192 false
 
   584 label *label99
   585 set *tmp193 null
   586 label *label100
-    * set *tmp78 *tmp193
   587 jump *label42 always
   588 label *label73
-    * set *tmp78 null
   589 label *label42
   590 print "\n"
   591 print .STARTUPS
 
   626 label *label109
   627 set *tmp209 null
   628 label *label110
-    * set *tmp203 *tmp209
   629 jump *label106 always
   630 label *label107
   631 jump *label112 equal *tmp204 @overdrive-projector
 
   634 label *label112
   635 set *tmp211 :block
   636 control enabled *tmp211 .OVERDRIVE
-    * set *tmp203 .OVERDRIVE
   637 jump *label106 always
   638 label *label111
   639 jump *label114 equal *tmp204 @conduit
 
   647 label *label114
   648 set *tmp213 :block
   649 control enabled *tmp213 :startup
-    * set *tmp203 :startup
   650 jump *label106 always
   651 label *label113
-    * set *tmp203 null
   652 label *label106
   653 label *label104
   654 op add :n :n 1
 
   663 op add :reactors :reactors *tmp220
   664 read *tmp221 cell2 4
   665 op add :boosts :boosts *tmp221
-    * set *tmp216 :boosts
   666 jump *label116 always
   667 label *label115
-    * set *tmp216 null
   668 label *label116
   669 op min *tmp222 .REACTORS_ON :reactors
   670 set .REACTORS_ON *tmp222
 
   673 set .STARTUPS 0
   674 set .RESETS 0
   675 set .COMMITS 0
-    * set *tmp224 .COMMITS
   676 jump *label118 always
   677 label *label117
   678 write .MODE cell1 0
 
   686 write .STARTUPS cell1 8
   687 write .RESETS cell1 9
   688 write .COMMITS cell1 10
-    * set *tmp224 .COMMITS
   689 label *label118
   690 label *label17
   691 jump *label16 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
   127 jump *label21 equal *tmp46 false
   128 set .MODE 0
   129 set .REASON "Manual power off"
-    * set *tmp47 .REASON
   130 jump *label22 always
   131 label *label21
   132 op mul *tmp48 .REACTORS_ON 1200
 
   165 set :failure_cnt 0
   166 set *tmp56 :failure_cnt
   167 label *label24
-    * set *tmp47 *tmp56
   168 label *label22
   169 jump *label20 always
   170 label *label19
 
   283 set :failure_cnt 0
   284 set .GENERATOR true
   285 set .REASON "Unknown -- out of power?"
-    * set *tmp84 .REASON
   286 jump *label46 always
   287 label *label45
-    * set *tmp84 null
   288 label *label46
   289 jump *label42 always
   290 label *label43
 
   324 print " K[]"
   325 set *tmp94 " K[]"
   326 label *label56
-    * set *tmp92 *tmp94
   327 jump *label54 always
   328 label *label53
   329 op add *tmp96 .OUTPUT_1 .OUTPUT_2
 
   374 jump *label65 equal *tmp113 false
   375 op add *tmp115 @time 2000
   376 set :nextStart *tmp115
-    * set *tmp114 :nextStart
   377 jump *label66 always
   378 label *label65
-    * set *tmp114 null
   379 label *label66
   380 jump *label64 always
   381 label *label63
 
   416 label *label71
   417 set *tmp129 null
   418 label *label72
-    * set *tmp92 *tmp129
   419 label *label54
   420 jump *label42 always
   421 label *label47
 
   497 set .REACTORS_ON :reactors
   498 op add *tmp173 @time 6000
   499 set :nextDecommit *tmp173
-    * set *tmp171 :nextDecommit
   500 jump *label86 always
   501 label *label85
   502 op lessThan *tmp174 :battery_level 47500
 
   536 label *label94
   537 set *tmp180 *tmp186
   538 label *label90
-    * set *tmp171 *tmp180
   539 label *label86
   540 jump *label80 always
   541 label *label79
 
   569 print "\n*** [gold]Surge tower 2 offline[] ***"
   570 set *tmp195 "\n*** [gold]Surge tower 2 offline[] ***"
   571 label *label102
-    * set *tmp193 *tmp195
   572 jump *label100 always
   573 label *label99
-    * set *tmp193 null
   574 label *label100
   575 jump *label42 always
   576 label *label73
 
   609 jump *label109 equal :enabled false
   610 sensor *tmp210 :block @timescale
   611 op add :boosts :boosts *tmp210
-    * set *tmp209 :boosts
   612 jump *label110 always
   613 label *label109
-    * set *tmp209 null
   614 label *label110
   615 jump *label106 always
   616 label *label107

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   159 label *label25
   160 set *tmp60 null
   161 label *label26
-    * set *tmp56 *tmp60
   162 jump *label24 always
   163 label *label23
   164 set :failure_cnt 0
-    * set *tmp56 :failure_cnt
   165 label *label24
   166 label *label22
   167 jump *label20 always
 
   314 set .REACTORS_ON 1
   315 op add *tmp95 @time 2000
   316 set :nextStart *tmp95
-    * set *tmp94 :nextStart
   317 jump *label56 always
   318 label *label55
   319 print "\nRequired startup energy: [gold]"
   320 print 25
   321 print " K[]"
-    * set *tmp94 " K[]"
   322 label *label56
   323 jump *label54 always
   324 label *label53
 
   407 set .COOLANT_FLAG 0
   408 set .FUEL_FLAG 0
   409 set .GENERATOR false
-    * set *tmp129 .GENERATOR
   410 jump *label72 always
   411 label *label71
-    * set *tmp129 null
   412 label *label72
   413 label *label54
   414 jump *label42 always
 
   515 label *label92
   516 op add *tmp184 @time 6000
   517 set :nextDecommit *tmp184
-    * set *tmp180 :nextDecommit
   518 jump *label90 always
   519 label *label89
   520 op lessThan *tmp185 :total_battery :commit_level
 
   527 label *label93
   528 set *tmp186 null
   529 label *label94
-    * set *tmp180 *tmp186
   530 label *label90
   531 label *label86
   532 jump *label80 always
 
   555 jump *label101 equal *tmp194 false
   556 set .OUTPUT_2 1
   557 set .OUTPUT_3 1
-    * set *tmp195 .OUTPUT_3
   558 jump *label102 always
   559 label *label101
   560 print "\n*** [gold]Surge tower 2 offline[] ***"
-    * set *tmp195 "\n*** [gold]Surge tower 2 offline[] ***"
   561 label *label102
   562 jump *label100 always
   563 label *label99

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   154 print "\nMin. consumption: "
   155 print :min_consumption
   156 printflush message2
-    * set *tmp60 null
   157 jump *label26 always
   158 label *label25
-    * set *tmp60 null
   159 label *label26
   160 jump *label24 always
   161 label *label23
 
   520 op add .REACTORS_ON .REACTORS_ON 1
   521 op add .COMMITS .COMMITS 1
   522 set .CAN_COMMIT false
-    * set *tmp186 .CAN_COMMIT
   523 jump *label94 always
   524 label *label93
-    * set *tmp186 null
   525 label *label94
   526 label *label90
   527 label *label86

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-60 instructions):
 
     9 op equal *tmp0 :reactors 0
    10 jump *label3 equal *tmp0 false
    11 set :reactors 0
-    * set *tmp1 @links
-    * set :n *tmp1
+   12 set :n @links
    13 label *label4
    14 op greaterThan *tmp2 :n 0
    15 jump *label6 equal *tmp2 false
    16 op sub :n :n 1
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   17 getlink :block :n
    18 print "Found: "
    19 print :block
    20 print "\n"
 
    49 label *label2
    50 jump *label1 always
    51 label *label3
-    * read *tmp10 cell1 0
-    * set .MODE *tmp10
-    * read *tmp11 cell1 1
-    * set .OUTPUT_1 *tmp11
-    * read *tmp12 cell1 2
-    * set .OUTPUT_2 *tmp12
-    * read *tmp13 cell1 3
-    * set .OUTPUT_3 *tmp13
-    * read *tmp14 cell1 4
-    * set .REACTORS_ON *tmp14
-    * read *tmp15 cell1 5
-    * set .OVERDRIVE *tmp15
-    * read *tmp16 cell1 6
-    * set .GENERATOR *tmp16
-    * read *tmp17 cell1 7
-    * set .CAN_COMMIT *tmp17
-    * read *tmp18 cell1 8
-    * set .STARTUPS *tmp18
-    * read *tmp19 cell1 9
-    * set .RESETS *tmp19
-    * read *tmp20 cell1 10
-    * set .COMMITS *tmp20
+   52 read .MODE cell1 0
+   53 read .OUTPUT_1 cell1 1
+   54 read .OUTPUT_2 cell1 2
+   55 read .OUTPUT_3 cell1 3
+   56 read .REACTORS_ON cell1 4
+   57 read .OVERDRIVE cell1 5
+   58 read .GENERATOR cell1 6
+   59 read .CAN_COMMIT cell1 7
+   60 read .STARTUPS cell1 8
+   61 read .RESETS cell1 9
+   62 read .COMMITS cell1 10
    63 set :reactors .REACTORS_ON
    64 op equal *tmp21 .MODE 0
    65 jump *label14 equal *tmp21 false
 
    73 set :failure_cnt 0
    74 set :boosts 0
    75 set :nextStart 0
-    * op add *tmp25 @time 6000
-    * set :nextDecommit *tmp25
+   76 op add :nextDecommit @time 6000
    77 label *label16
    78 jump *label18 equal true false
    79 sensor *tmp26 battery1 @totalPower
-    * op floor *tmp27 *tmp26
-    * set :battery_level *tmp27
-    * op idiv *tmp28 :battery_level 1000
-    * set :battery_level_str *tmp28
+   80 op floor :battery_level *tmp26
+   81 op idiv :battery_level_str :battery_level 1000
    82 sensor *tmp29 battery1 @powerNetStored
-    * op floor *tmp30 *tmp29
-    * set :total_battery *tmp30
-    * op idiv *tmp31 :total_battery 1000
-    * set :total_battery_str *tmp31
-    * sensor *tmp32 battery1 @powerNetOut
-    * set :consumption *tmp32
-    * read *tmp33 bank1 509
-    * set :production *tmp33
-    * read *tmp34 bank1 510
-    * set :net_power *tmp34
-    * read *tmp35 bank1 511
-    * set :battery_change *tmp35
-    * sensor *tmp36 battery1 @powerNetCapacity
-    * set :total_capacity *tmp36
-    * op idiv *tmp37 :total_capacity 1000
-    * set :total_capacity_str *tmp37
-    * op mul *tmp38 100000 :reactors
-    * set :required_capacity *tmp38
-    * op greaterThanEq *tmp39 :total_capacity :required_capacity
-    * set :enough_battery *tmp39
+   83 op floor :total_battery *tmp29
+   84 op idiv :total_battery_str :total_battery 1000
+   85 sensor :consumption battery1 @powerNetOut
+   86 read :production bank1 509
+   87 read :net_power bank1 510
+   88 read :battery_change bank1 511
+   89 sensor :total_capacity battery1 @powerNetCapacity
+   90 op idiv :total_capacity_str :total_capacity 1000
+   91 op mul :required_capacity 100000 :reactors
+   92 op greaterThanEq :enough_battery :total_capacity :required_capacity
    93 op sub *tmp40 :required_capacity :total_capacity
    94 op div *tmp41 *tmp40 1000
-    * op ceil *tmp42 *tmp41
-    * set :missing_battery *tmp42
+   95 op ceil :missing_battery *tmp41
    96 op notEqual *tmp43 .MODE 0
    97 jump *label19 equal *tmp43 false
    98 sensor *tmp45 switch1 @enabled
 
   102 set .REASON "Manual power off"
   103 jump *label22 always
   104 label *label21
-    * op mul *tmp48 .REACTORS_ON 1200
-    * set :min_consumption *tmp48
-    * op lessThan *tmp49 :consumption :min_consumption
-    * set :failure1 *tmp49
+  105 op mul :min_consumption .REACTORS_ON 1200
+  106 op lessThan :failure1 :consumption :min_consumption
   107 op equal *tmp50 :battery_level 0
   108 op greaterThan *tmp51 :consumption 0
   109 op land *tmp52 *tmp50 *tmp51
   110 op equal *tmp53 :production 0
-    * op land *tmp54 *tmp52 *tmp53
-    * set :failure2 *tmp54
+  111 op land :failure2 *tmp52 *tmp53
   112 op or *tmp55 :failure1 :failure2
   113 jump *label23 equal *tmp55 false
   114 op add :failure_cnt :failure_cnt 1
 
   169 op div *tmp66 *tmp65 .REACTORS_ON
   170 op add *tmp67 *tmp66 0.5
   171 op floor *tmp68 *tmp67
-    * op div *tmp69 *tmp68 100
-    * set :multiplier *tmp69
+  172 op div :multiplier *tmp68 100
   173 print " ([gold]"
   174 print :multiplier
   175 print "x[])"
 
   235 set .OUTPUT_3 0
   236 op greaterThanEq *tmp80 :net_power -150
   237 op lessThan *tmp81 :total_battery 47500
-    * op land *tmp82 *tmp80 *tmp81
-    * set .GENERATOR *tmp82
+  238 op land .GENERATOR *tmp80 *tmp81
   239 print "\nShutdown reason: [gold]"
   240 print .REASON
   241 print "[]"
 
   271 sensor *tmp87 :nextBattery @powerNetOut
   272 op mul *tmp88 *tmp87 1.05
   273 op floor *tmp89 *tmp88
-    * op max *tmp90 *tmp89 1000
-    * set :neededPower *tmp90
+  274 op max :neededPower *tmp89 1000
   275 op equal *tmp91 .REACTORS_ON 0
   276 jump *label53 equal *tmp91 false
   277 op greaterThanEq *tmp93 :total_battery 25000
   278 jump *label55 equal *tmp93 false
   279 set .REACTORS_ON 1
-    * op add *tmp95 @time 2000
-    * set :nextStart *tmp95
+  280 op add :nextStart @time 2000
   281 jump *label56 always
   282 label *label55
   283 print "\nRequired startup energy: [gold]"
 
   287 jump *label54 always
   288 label *label53
   289 op add *tmp96 .OUTPUT_1 .OUTPUT_2
-    * op add *tmp97 *tmp96 .OUTPUT_3
-    * set :outputs *tmp97
+  290 op add :outputs *tmp96 .OUTPUT_3
   291 print "\n"
   292 print "[gold]"
   293 print :outputs
 
   313 op greaterThan *tmp103 :net_power 1000
   314 op land *tmp104 *tmp102 *tmp103
   315 op greaterThanEq *tmp105 :total_battery 25000
-    * op land *tmp106 *tmp104 *tmp105
-    * set :canStart *tmp106
+  316 op land :canStart *tmp104 *tmp105
   317 op greaterThanEq *tmp107 :net_power :neededPower
   318 jump *label61 equal *tmp107 false
   319 set .OUTPUT_3 .OUTPUT_2
 
   324 label *label62
   325 op equal *tmp109 .OUTPUT_1 0
   326 jump *label63 equal *tmp109 false
-    * op mul *tmp111 6300 :boosts
-    * set :availablePower *tmp111
-    * op div *tmp112 :neededPower :availablePower
-    * set :ratio *tmp112
+  327 op mul :availablePower 6300 :boosts
+  328 op div :ratio :neededPower :availablePower
   329 op lessThan *tmp113 :ratio 1
   330 jump *label65 equal *tmp113 false
-    * op add *tmp115 @time 2000
-    * set :nextStart *tmp115
+  331 op add :nextStart @time 2000
   332 jump *label66 always
   333 label *label65
   334 label *label66
 
   339 op land *tmp117 :canStart *tmp116
   340 jump *label67 equal *tmp117 false
   341 jump *label69 equal FAST_START false
-    * op idiv *tmp120 :total_battery 25000
-    * set *tmp119 *tmp120
+  342 op idiv *tmp119 :total_battery 25000
   343 jump *label70 always
   344 label *label69
   345 set *tmp119 1
   346 label *label70
   347 set :start_at_once *tmp119
   348 op add *tmp121 .REACTORS_ON :start_at_once
-    * op min *tmp122 *tmp121 :reactors
-    * set .REACTORS_ON *tmp122
-    * op add *tmp123 @time 2000
-    * set :nextStart *tmp123
+  349 op min .REACTORS_ON *tmp121 :reactors
+  350 op add :nextStart @time 2000
   351 jump *label68 always
   352 label *label67
   353 label *label68
 
   358 op land *tmp128 *tmp126 *tmp127
   359 jump *label71 equal *tmp128 false
   360 set .MODE 2
-    * op add *tmp130 @time 6000
-    * set :nextDecommit *tmp130
+  361 op add :nextDecommit @time 6000
   362 set .COOLANT_FLAG 0
   363 set .FUEL_FLAG 0
   364 set .GENERATOR false
 
   393 label *label78
   394 sensor *tmp141 tank1 @totalLiquids
   395 op greaterThan *tmp142 *tmp141 1000
-    * op or *tmp143 .COOLANT_FLAG *tmp142
-    * set .COOLANT_FLAG *tmp143
+  396 op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
   397 sensor *tmp144 vault1 @blast-compound
   398 op greaterThan *tmp145 *tmp144 800
-    * op or *tmp146 .FUEL_FLAG *tmp145
-    * set .FUEL_FLAG *tmp146
+  399 op or .FUEL_FLAG .FUEL_FLAG *tmp145
   400 sensor *tmp147 switch2 @enabled
   401 op land *tmp148 :enough_battery *tmp147
   402 jump *label79 equal *tmp148 false
-    * op mul *tmp150 0.5 :required_capacity
-    * set :min_level *tmp150
+  403 op mul :min_level 0.5 :required_capacity
   404 set :commit_level 0
   405 op lessThan *tmp151 :battery_change 0
   406 op land *tmp152 .CAN_COMMIT *tmp151
 
   408 op land *tmp154 *tmp152 *tmp153
   409 jump *label81 equal *tmp154 false
   410 op sub *tmp156 :battery_change 1500
-    * op sub *tmp157 *tmp156 1000
-    * set :p *tmp157
+  411 op sub :p *tmp156 1000
   412 op mul *tmp158 :p 0.00472972972972973
   413 op add *tmp159 -5 *tmp158
   414 op mul *tmp160 :p *tmp159
-    * op add *tmp161 25000 *tmp160
-    * set :commit_margin *tmp161
-    * op add *tmp162 :min_level :commit_margin
-    * set :commit_level *tmp162
+  415 op add :commit_margin 25000 *tmp160
+  416 op add :commit_level :min_level :commit_margin
   417 op idiv *tmp163 :commit_level 1000
   418 print "\nCommit threshold:   [gold]"
   419 print *tmp163
 
   438 op add .RESETS .RESETS *tmp172
   439 set .OVERDRIVE true
   440 set .REACTORS_ON :reactors
-    * op add *tmp173 @time 6000
-    * set :nextDecommit *tmp173
+  441 op add :nextDecommit @time 6000
   442 jump *label86 always
   443 label *label85
   444 op lessThan *tmp174 :battery_level 47500
   445 op lessThan *tmp175 :battery_change -100
   446 op or *tmp176 *tmp174 *tmp175
   447 jump *label87 equal *tmp176 false
-    * op add *tmp178 @time 6000
-    * set :nextDecommit *tmp178
+  448 op add :nextDecommit @time 6000
   449 jump *label88 always
   450 label *label87
   451 label *label88
 
   456 jump *label92 always
   457 label *label91
   458 op sub *tmp182 .REACTORS_ON 1
-    * op max *tmp183 *tmp182 1
-    * set .REACTORS_ON *tmp183
+  459 op max .REACTORS_ON *tmp182 1
   460 set .CAN_COMMIT true
   461 label *label92
-    * op add *tmp184 @time 6000
-    * set :nextDecommit *tmp184
+  462 op add :nextDecommit @time 6000
   463 jump *label90 always
   464 label *label89
   465 op lessThan *tmp185 :total_battery :commit_level
 
   520 control enabled diode3 .OUTPUT_3
   521 control enabled generator1 .GENERATOR
   522 control enabled generator2 .GENERATOR
-    * op equal *tmp201 .MODE 1
-    * set :startup *tmp201
+  523 op equal :startup .MODE 1
   524 set :reactors 0
   525 set :boosts 0
   526 set :enabled true
   527 set :n .START
   528 label *label103
   529 jump *label105 greaterThanEq :n @links
-    * getlink *tmp202 :n
-    * set :block *tmp202
+  530 getlink :block :n
   531 sensor *tmp204 :block @type
   532 jump *label108 equal *tmp204 @impact-reactor
   533 jump *label107 always
   534 label *label108
   535 op add :reactors :reactors 1
-    * op lessThanEq *tmp206 :reactors .REACTORS_ON
-    * set :enabled *tmp206
-    * set *tmp207 :block
-    * control enabled *tmp207 :enabled
+  536 op lessThanEq :enabled :reactors .REACTORS_ON
+  537 control enabled :block :enabled
   538 jump *label109 equal :enabled false
   539 sensor *tmp210 :block @timescale
   540 op add :boosts :boosts *tmp210
 
   547 jump *label112 equal *tmp204 @overdrive-dome
   548 jump *label111 always
   549 label *label112
-    * set *tmp211 :block
-    * control enabled *tmp211 .OVERDRIVE
+  550 control enabled :block .OVERDRIVE
   551 jump *label106 always
   552 label *label111
   553 jump *label114 equal *tmp204 @conduit
 
   559 jump *label114 equal *tmp204 @armored-conveyor
   560 jump *label113 always
   561 label *label114
-    * set *tmp213 :block
-    * control enabled *tmp213 :startup
+  562 control enabled :block :startup
   563 jump *label106 always
   564 label *label113
   565 label *label106
 
   579 jump *label116 always
   580 label *label115
   581 label *label116
-    * op min *tmp222 .REACTORS_ON :reactors
-    * set .REACTORS_ON *tmp222
+  582 op min .REACTORS_ON .REACTORS_ON :reactors
   583 op equal *tmp223 cell1 null
   584 jump *label117 equal *tmp223 false
   585 set .STARTUPS 0

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    75 set :nextStart 0
    76 op add :nextDecommit @time 6000
    77 label *label16
-    * jump *label18 equal true false
    78 sensor *tmp26 battery1 @totalPower
    79 op floor :battery_level *tmp26
    80 op idiv :battery_level_str :battery_level 1000

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-11 instructions):
 
    19 print :block
    20 print "\n"
    21 sensor *tmp5 :block @type
-    * jump *label9 equal *tmp5 @impact-reactor
-    * jump *label8 always
+   22 jump *label8 notEqual *tmp5 @impact-reactor
    23 label *label9
    24 set .START :n
    25 op add :reactors :reactors 1
    26 jump *label7 always
    27 label *label8
    28 jump *label11 equal *tmp5 @overdrive-projector
-    * jump *label11 equal *tmp5 @overdrive-dome
-    * jump *label10 always
+   29 jump *label10 notEqual *tmp5 @overdrive-dome
    30 label *label11
    31 set .START :n
    32 jump *label7 always
 
   132 jump *label20 always
   133 label *label19
   134 label *label20
-    * jump *label29 equal .MODE 0
-    * jump *label28 always
+  135 jump *label28 notEqual .MODE 0
   136 label *label29
   137 set *tmp62 "[salmon]SHUTDOWN[]"
   138 jump *label27 always
   139 label *label28
-    * jump *label31 equal .MODE 1
-    * jump *label30 always
+  140 jump *label30 notEqual .MODE 1
   141 label *label31
   142 set *tmp62 "[gold]STARTUP[]"
   143 jump *label27 always
   144 label *label30
-    * jump *label33 equal .MODE 2
-    * jump *label32 always
+  145 jump *label32 notEqual .MODE 2
   146 label *label33
   147 set *tmp62 "[green]RUNNING[]"
   148 jump *label27 always
 
   219 print :net_power
   220 print "["
   221 print "]"
-    * jump *label44 equal .MODE 0
-    * jump *label43 always
+  222 jump *label43 notEqual .MODE 0
   223 label *label44
   224 set .REACTORS_ON 0
   225 set .OVERDRIVE 0
 
   245 label *label46
   246 jump *label42 always
   247 label *label43
-    * jump *label48 equal .MODE 1
-    * jump *label47 always
+  248 jump *label47 notEqual .MODE 1
   249 label *label48
   250 jump *label49 equal .OUTPUT_1 false
   251 jump *label51 equal .OUTPUT_2 false
 
   360 label *label54
   361 jump *label42 always
   362 label *label47
-    * jump *label74 equal .MODE 2
-    * jump *label73 always
+  363 jump *label73 notEqual .MODE 2
   364 label *label74
   365 sensor *tmp131 tank1 @totalLiquids
   366 op lessThan *tmp132 *tmp131 750
 
   520 jump *label105 greaterThanEq :n @links
   521 getlink :block :n
   522 sensor *tmp204 :block @type
-    * jump *label108 equal *tmp204 @impact-reactor
-    * jump *label107 always
+  523 jump *label107 notEqual *tmp204 @impact-reactor
   524 label *label108
   525 op add :reactors :reactors 1
   526 op lessThanEq :enabled :reactors .REACTORS_ON
 
   534 jump *label106 always
   535 label *label107
   536 jump *label112 equal *tmp204 @overdrive-projector
-    * jump *label112 equal *tmp204 @overdrive-dome
-    * jump *label111 always
+  537 jump *label111 notEqual *tmp204 @overdrive-dome
   538 label *label112
   539 control enabled :block .OVERDRIVE
   540 jump *label106 always
 
   545 jump *label114 equal *tmp204 @conveyor
   546 jump *label114 equal *tmp204 @titanium-conveyor
   547 jump *label114 equal *tmp204 @plastanium-conveyor
-    * jump *label114 equal *tmp204 @armored-conveyor
-    * jump *label113 always
+  548 jump *label113 notEqual *tmp204 @armored-conveyor
   549 label *label114
   550 control enabled :block :startup
   551 jump *label106 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-25 instructions):
 
     6 set .COOLANT_FLAG .FUEL_FLAG
     7 set :reactors 0
     8 label *label1
-    * op equal *tmp0 :reactors 0
-    * jump *label3 equal *tmp0 false
+    9 jump *label3 notEqual :reactors 0
    10 set :reactors 0
    11 set :n @links
    12 label *label4
-    * op greaterThan *tmp2 :n 0
-    * jump *label6 equal *tmp2 false
+   13 jump *label6 lessThanEq :n 0
    14 op sub :n :n 1
    15 getlink :block :n
    16 print "Found: "
 
    35 label *label6
    36 read *tmp7 cell2 1
    37 op add :reactors :reactors *tmp7
-    * op equal *tmp8 :reactors 0
-    * jump *label12 equal *tmp8 false
+   38 jump *label12 notEqual :reactors 0
    39 print "No reactor."
    40 jump *label13 always
    41 label *label12
 
    56 read .RESETS cell1 9
    57 read .COMMITS cell1 10
    58 set :reactors .REACTORS_ON
-    * op equal *tmp21 .MODE 0
-    * jump *label14 equal *tmp21 false
+   59 jump *label14 notEqual .MODE 0
    60 set .REASON "Processor reset"
    61 jump *label15 always
    62 label *label14
 
    86 op sub *tmp40 :required_capacity :total_capacity
    87 op div *tmp41 *tmp40 1000
    88 op ceil :missing_battery *tmp41
-    * op notEqual *tmp43 .MODE 0
-    * jump *label19 equal *tmp43 false
+   89 jump *label19 equal .MODE 0
    90 sensor *tmp45 switch1 @enabled
-    * op equal *tmp46 *tmp45 false
-    * jump *label21 equal *tmp46 false
+   91 jump *label21 notEqual *tmp45 false
    92 set .MODE 0
    93 set .REASON "Manual power off"
    94 jump *label22 always
 
   105 op add :failure_cnt :failure_cnt 1
   106 read *tmp57 cell2 1
   107 op add *tmp58 10 *tmp57
-    * op greaterThan *tmp59 :failure_cnt *tmp58
-    * jump *label25 equal *tmp59 false
+  108 jump *label25 lessThanEq :failure_cnt *tmp58
   109 set .MODE 0
   110 control enabled switch1 false
   111 set .REASON "Unknown -- out of power?"
 
   165 label *label35
   166 print "\n=================================="
   167 sensor *tmp70 tank1 @totalLiquids
-    * op lessThan *tmp71 *tmp70 750
-    * jump *label36 equal *tmp71 false
+  168 jump *label36 greaterThanEq *tmp70 750
   169 print "\n[salmon]Cryofluid level critical![]"
   170 jump *label37 always
   171 label *label36
   172 label *label37
   173 sensor *tmp73 vault1 @blast-compound
-    * op lessThan *tmp74 *tmp73 700
-    * jump *label38 equal *tmp74 false
+  174 jump *label38 greaterThanEq *tmp73 700
   175 print "\n[salmon]Blast compound level critical![]"
   176 jump *label39 always
   177 label *label38
   178 label *label39
-    * op equal *tmp76 :enough_battery false
-    * jump *label40 equal *tmp76 false
+  179 jump *label40 notEqual :enough_battery false
   180 print "\n[salmon]Insufficient battery storage![]"
   181 print "\n"
   182 print "Link [gold]"
 
   254 op mul *tmp88 *tmp87 1.05
   255 op floor *tmp89 *tmp88
   256 op max :neededPower *tmp89 1000
-    * op equal *tmp91 .REACTORS_ON 0
-    * jump *label53 equal *tmp91 false
-    * op greaterThanEq *tmp93 :total_battery 25000
-    * jump *label55 equal *tmp93 false
+  257 jump *label53 notEqual .REACTORS_ON 0
+  258 jump *label55 lessThan :total_battery 25000
   259 set .REACTORS_ON 1
   260 op add :nextStart @time 2000
   261 jump *label56 always
 
   273 print :outputs
   274 print "["
   275 print "] surge tower(s) online"
-    * op equal *tmp98 .OUTPUT_3 0
-    * jump *label57 equal *tmp98 false
+  276 jump *label57 notEqual .OUTPUT_3 0
   277 print "\n"
   278 print "Required power level: [gold]"
   279 print :neededPower
 
   282 jump *label58 always
   283 label *label57
   284 label *label58
-    * op greaterThan *tmp100 :net_power 100
-    * jump *label59 equal *tmp100 false
+  285 jump *label59 lessThanEq :net_power 100
   286 set .OVERDRIVE true
   287 jump *label60 always
   288 label *label59
 
   292 op land *tmp104 *tmp102 *tmp103
   293 op greaterThanEq *tmp105 :total_battery 25000
   294 op land :canStart *tmp104 *tmp105
-    * op greaterThanEq *tmp107 :net_power :neededPower
-    * jump *label61 equal *tmp107 false
+  295 jump *label61 lessThan :net_power :neededPower
   296 set .OUTPUT_3 .OUTPUT_2
   297 set .OUTPUT_2 .OUTPUT_1
   298 set .OUTPUT_1 1
   299 jump *label62 always
   300 label *label61
   301 label *label62
-    * op equal *tmp109 .OUTPUT_1 0
-    * jump *label63 equal *tmp109 false
+  302 jump *label63 notEqual .OUTPUT_1 0
   303 op mul :availablePower 6300 :boosts
   304 op div :ratio :neededPower :availablePower
-    * op lessThan *tmp113 :ratio 1
-    * jump *label65 equal *tmp113 false
+  305 jump *label65 greaterThanEq :ratio 1
   306 op add :nextStart @time 2000
   307 jump *label66 always
   308 label *label65
 
   394 jump *label82 always
   395 label *label81
   396 label *label82
-    * op equal *tmp164 :commit_level 0
-    * jump *label83 equal *tmp164 false
+  397 jump *label83 notEqual :commit_level 0
   398 op idiv *tmp166 :min_level 1000
   399 print "\nRestart threshold: [gold]"
   400 print *tmp166
 
   422 jump *label88 always
   423 label *label87
   424 label *label88
-    * op greaterThan *tmp179 @time :nextDecommit
-    * jump *label89 equal *tmp179 false
+  425 jump *label89 lessThanEq @time :nextDecommit
   426 jump *label91 equal .OVERDRIVE false
   427 set .OVERDRIVE false
   428 jump *label92 always
 
   434 op add :nextDecommit @time 6000
   435 jump *label90 always
   436 label *label89
-    * op lessThan *tmp185 :total_battery :commit_level
-    * jump *label93 equal *tmp185 false
+  437 jump *label93 greaterThanEq :total_battery :commit_level
   438 op add .REACTORS_ON .REACTORS_ON 1
   439 op add .COMMITS .COMMITS 1
   440 set .CAN_COMMIT false
 
   456 set .OVERDRIVE true
   457 label *label80
   458 op mul *tmp189 PLANT_PROTECTION 47500
-    * op lessThan *tmp190 :total_battery *tmp189
-    * jump *label97 equal *tmp190 false
+  459 jump *label97 greaterThanEq :total_battery *tmp189
   460 set .OUTPUT_2 0
   461 set .OUTPUT_3 0
   462 jump *label98 always
   463 label *label97
   464 label *label98
-    * op equal *tmp192 .OUTPUT_2 0
-    * jump *label99 equal *tmp192 false
-    * op greaterThan *tmp194 :total_battery 47500
-    * jump *label101 equal *tmp194 false
+  465 jump *label99 notEqual .OUTPUT_2 0
+  466 jump *label101 lessThanEq :total_battery 47500
   467 set .OUTPUT_2 1
   468 set .OUTPUT_3 1
   469 jump *label102 always
 
   532 op add :n :n 1
   533 jump *label103 always
   534 label *label105
-    * op notEqual *tmp215 cell2 null
-    * jump *label115 equal *tmp215 false
+  535 jump *label115 equal cell2 null
   536 write :reactors cell2 0
   537 write .REACTORS_ON cell2 2
   538 write .OVERDRIVE cell2 3
 
   544 label *label115
   545 label *label116
   546 op min .REACTORS_ON .REACTORS_ON :reactors
-    * op equal *tmp223 cell1 null
-    * jump *label117 equal *tmp223 false
+  547 jump *label117 notEqual cell1 null
   548 set .STARTUPS 0
   549 set .RESETS 0
   550 set .COMMITS 0

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-28 instructions):
 
    27 jump *label10 notEqual *tmp5 @overdrive-dome
    28 label *label11
    29 set .START :n
-    * jump *label7 always
    30 label *label10
    31 label *label7
    32 label *label5
 
    36 op add :reactors :reactors *tmp7
    37 jump *label12 notEqual :reactors 0
    38 print "No reactor."
-    * jump *label13 always
    39 label *label12
    40 label *label13
    41 printflush message1
 
   112 print "\nMin. consumption: "
   113 print :min_consumption
   114 printflush message2
-    * jump *label26 always
   115 label *label25
   116 label *label26
   117 jump *label24 always
 
   119 set :failure_cnt 0
   120 label *label24
   121 label *label22
-    * jump *label20 always
   122 label *label19
   123 label *label20
   124 jump *label28 notEqual .MODE 0
 
   156 print " ([gold]"
   157 print :multiplier
   158 print "x[])"
-    * jump *label35 always
   159 label *label34
   160 label *label35
   161 print "\n=================================="
   162 sensor *tmp70 tank1 @totalLiquids
   163 jump *label36 greaterThanEq *tmp70 750
   164 print "\n[salmon]Cryofluid level critical![]"
-    * jump *label37 always
   165 label *label36
   166 label *label37
   167 sensor *tmp73 vault1 @blast-compound
   168 jump *label38 greaterThanEq *tmp73 700
   169 print "\n[salmon]Blast compound level critical![]"
-    * jump *label39 always
   170 label *label38
   171 label *label39
   172 jump *label40 notEqual :enough_battery false
 
   176 print :missing_battery
   177 print " "
   178 print "K[] of additional storage to internal battery."
-    * jump *label41 always
   179 label *label40
   180 label *label41
   181 print "\n"
 
   222 set :failure_cnt 0
   223 set .GENERATOR true
   224 set .REASON "Unknown -- out of power?"
-    * jump *label46 always
   225 label *label45
   226 label *label46
   227 jump *label42 always
 
   270 print :neededPower
   271 print "["
   272 print "]"
-    * jump *label58 always
   273 label *label57
   274 label *label58
   275 jump *label59 lessThanEq :net_power 100
   276 set .OVERDRIVE true
-    * jump *label60 always
   277 label *label59
   278 label *label60
   279 op lessThan *tmp102 .REACTORS_ON :reactors
 
   285 set .OUTPUT_3 .OUTPUT_2
   286 set .OUTPUT_2 .OUTPUT_1
   287 set .OUTPUT_1 1
-    * jump *label62 always
   288 label *label61
   289 label *label62
   290 jump *label63 notEqual .OUTPUT_1 0
 
   292 op div :ratio :neededPower :availablePower
   293 jump *label65 greaterThanEq :ratio 1
   294 op add :nextStart @time 2000
-    * jump *label66 always
   295 label *label65
   296 label *label66
-    * jump *label64 always
   297 label *label63
   298 label *label64
   299 op greaterThan *tmp116 @time :nextStart
 
   309 op add *tmp121 .REACTORS_ON :start_at_once
   310 op min .REACTORS_ON *tmp121 :reactors
   311 op add :nextStart @time 2000
-    * jump *label68 always
   312 label *label67
   313 label *label68
   314 op greaterThanEq *tmp124 .REACTORS_ON :reactors
 
   322 set .COOLANT_FLAG 0
   323 set .FUEL_FLAG 0
   324 set .GENERATOR false
-    * jump *label72 always
   325 label *label71
   326 label *label72
   327 label *label54
 
   336 set .MODE 0
   337 control enabled switch1 false
   338 set .REASON "Cryo level too low"
-    * jump *label76 always
   339 label *label75
   340 label *label76
   341 sensor *tmp136 vault1 @blast-compound
 
   345 set .MODE 0
   346 control enabled switch1 false
   347 set .REASON "Blast compound level too low"
-    * jump *label78 always
   348 label *label77
   349 label *label78
   350 sensor *tmp141 tank1 @totalLiquids
 
   373 op idiv *tmp163 :commit_level 1000
   374 print "\nCommit threshold:   [gold]"
   375 print *tmp163
-    * jump *label82 always
   376 label *label81
   377 label *label82
   378 jump *label83 notEqual :commit_level 0
   379 op idiv *tmp166 :min_level 1000
   380 print "\nRestart threshold: [gold]"
   381 print *tmp166
-    * jump *label84 always
   382 label *label83
   383 label *label84
   384 print "[] K"
 
   399 op or *tmp176 *tmp174 *tmp175
   400 jump *label87 equal *tmp176 false
   401 op add :nextDecommit @time 6000
-    * jump *label88 always
   402 label *label87
   403 label *label88
   404 jump *label89 lessThanEq @time :nextDecommit
 
   417 op add .REACTORS_ON .REACTORS_ON 1
   418 op add .COMMITS .COMMITS 1
   419 set .CAN_COMMIT false
-    * jump *label94 always
   420 label *label93
   421 label *label94
   422 label *label90
 
   437 jump *label97 greaterThanEq :total_battery *tmp189
   438 set .OUTPUT_2 0
   439 set .OUTPUT_3 0
-    * jump *label98 always
   440 label *label97
   441 label *label98
   442 jump *label99 notEqual .OUTPUT_2 0
 
   447 label *label101
   448 print "\n*** [gold]Surge tower 2 offline[] ***"
   449 label *label102
-    * jump *label100 always
   450 label *label99
   451 label *label100
-    * jump *label42 always
   452 label *label73
   453 label *label42
   454 print "\n"
 
   480 jump *label109 equal :enabled false
   481 sensor *tmp210 :block @timescale
   482 op add :boosts :boosts *tmp210
-    * jump *label110 always
   483 label *label109
   484 label *label110
   485 jump *label106 always
 
   499 jump *label113 notEqual *tmp204 @armored-conveyor
   500 label *label114
   501 control enabled :block :startup
-    * jump *label106 always
   502 label *label113
   503 label *label106
   504 label *label104
 
   513 op add :reactors :reactors *tmp220
   514 read *tmp221 cell2 4
   515 op add :boosts :boosts *tmp221
-    * jump *label116 always
   516 label *label115
   517 label *label116
   518 op min .REACTORS_ON .REACTORS_ON :reactors

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   242 label *label50
   243 set :nextBattery *tmp85
   244 sensor *tmp87 :nextBattery @powerNetOut
-    * op mul *tmp88 *tmp87 1.05
-    * op floor *tmp89 *tmp88
+  245 op idiv *tmp89 *tmp87 0.9523809523809523
   246 op max :neededPower *tmp89 1000
   247 jump *label53 notEqual .REACTORS_ON 0
   248 jump *label55 lessThan :total_battery 25000

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     2 label *label0
     3 jump *label0 equal cell1 null
     4 set .START 0
-    * set .FUEL_FLAG .START
-    * set .COOLANT_FLAG .FUEL_FLAG
+    5 set .FUEL_FLAG 0
+    6 set .COOLANT_FLAG .START
     7 set :reactors 0
     8 label *label1
     9 jump *label3 notEqual :reactors 0
 
   139 set *tmp62 null
   140 label *label27
   141 set .STR_MODE *tmp62
-    * print .STR_MODE
+  142 print *tmp62
   143 print ","
   144 print " reactors [green]"
   145 print .REACTORS_ON
 
   241 set *tmp85 battery2
   242 label *label50
   243 set :nextBattery *tmp85
-    * sensor *tmp87 :nextBattery @powerNetOut
+  244 sensor *tmp87 *tmp85 @powerNetOut
   245 op idiv *tmp89 *tmp87 0.9523809523809523
   246 op max :neededPower *tmp89 1000
   247 jump *label53 notEqual .REACTORS_ON 0
 
   305 set *tmp119 1
   306 label *label70
   307 set :start_at_once *tmp119
-    * op add *tmp121 .REACTORS_ON :start_at_once
+  308 op add *tmp121 .REACTORS_ON *tmp119
   309 op min .REACTORS_ON *tmp121 :reactors
   310 op add :nextStart @time 2000
   311 label *label67
 
   355 sensor *tmp147 switch2 @enabled
   356 op land *tmp148 :enough_battery *tmp147
   357 jump *label79 equal *tmp148 false
-    * op mul :min_level 0.5 :required_capacity
+  358 op mul :min_level :reactors 50000
   359 set :commit_level 0
   360 op lessThan *tmp151 :battery_change 0
   361 op land *tmp152 .CAN_COMMIT *tmp151
 
   363 op land *tmp154 *tmp152 *tmp153
   364 jump *label81 equal *tmp154 false
   365 op sub *tmp156 :battery_change 1500
-    * op sub :p *tmp156 1000
+  366 op sub :p :battery_change 2500
   367 op mul *tmp158 :p 0.00472972972972973
   368 op add *tmp159 -5 *tmp158
   369 op mul *tmp160 :p *tmp159
 
   465 op equal :startup .MODE 1
   466 set :reactors 0
   467 set :boosts 0
-    * set :enabled true
   468 set :n .START
   469 label *label103
   470 jump *label105 greaterThanEq :n @links

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
     3 jump *label0 equal cell1 null
     4 set .START 0
     5 set .FUEL_FLAG 0
-    * set .COOLANT_FLAG .START
+    6 set .COOLANT_FLAG 0
     7 set :reactors 0
     8 label *label1
     9 jump *label3 notEqual :reactors 0
 
   138 label *label32
   139 set *tmp62 null
   140 label *label27
-    * set .STR_MODE *tmp62
   141 print *tmp62
   142 print ","
   143 print " reactors [green]"
 
   239 label *label49
   240 set *tmp85 battery2
   241 label *label50
-    * set :nextBattery *tmp85
   242 sensor *tmp87 *tmp85 @powerNetOut
   243 op idiv *tmp89 *tmp87 0.9523809523809523
   244 op max :neededPower *tmp89 1000
 
   302 label *label69
   303 set *tmp119 1
   304 label *label70
-    * set :start_at_once *tmp119
   305 op add *tmp121 .REACTORS_ON *tmp119
   306 op min .REACTORS_ON *tmp121 :reactors
   307 op add :nextStart @time 2000
 
   359 op lessThan *tmp153 .REACTORS_ON :reactors
   360 op land *tmp154 *tmp152 *tmp153
   361 jump *label81 equal *tmp154 false
-    * op sub *tmp156 :battery_change 1500
   362 op sub :p :battery_change 2500
   363 op mul *tmp158 :p 0.00472972972972973
   364 op add *tmp159 -5 *tmp158

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     6 set .COOLANT_FLAG 0
     7 set :reactors 0
     8 label *label1
-    * jump *label3 notEqual :reactors 0
+    9 label *label119
    10 set :reactors 0
    11 set :n @links
    12 label *label4
    13 jump *label6 lessThanEq :n 0
+   14 label *label120
    15 op sub :n :n 1
    16 getlink :block :n
    17 print "Found: "
 
    31 label *label10
    32 label *label7
    33 label *label5
-    * jump *label4 always
+   34 jump *label120 greaterThan :n 0
    35 label *label6
    36 read *tmp7 cell2 1
    37 op add :reactors :reactors *tmp7
 
    41 label *label13
    42 printflush message1
    43 label *label2
-    * jump *label1 always
+   44 jump *label119 equal :reactors 0
    45 label *label3
    46 read .MODE cell1 0
    47 read .OUTPUT_1 cell1 1
 
   465 set :n .START
   466 label *label103
   467 jump *label105 greaterThanEq :n @links
+  468 label *label121
   469 getlink :block :n
   470 sensor *tmp204 :block @type
   471 jump *label107 notEqual *tmp204 @impact-reactor
 
   499 label *label106
   500 label *label104
   501 op add :n :n 1
-    * jump *label103 always
+  502 jump *label121 lessThan :n @links
   503 label *label105
   504 jump *label115 equal cell2 null
   505 write :reactors cell2 0

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
    55 read .RESETS cell1 9
    56 read .COMMITS cell1 10
    57 set :reactors .REACTORS_ON
-    * jump *label14 notEqual .MODE 0
+   58 set .REASON "Reason unknown -- out of power?"
+   59 jump *label15 notEqual .MODE 0
    60 set .REASON "Processor reset"
    61 jump *label15 always
-    * label *label14
-    * set .REASON "Reason unknown -- out of power?"
    62 label *label15
    63 op notEqual *tmp24 .MODE 0
    64 control enabled switch1 *tmp24
 
   229 label *label48
   230 jump *label49 equal .OUTPUT_1 false
   231 jump *label51 equal .OUTPUT_2 false
-    * set *tmp86 battery4
+  232 sensor *tmp87 battery4 @powerNetOut
   233 jump *label52 always
   234 label *label51
-    * set *tmp86 battery3
+  235 sensor *tmp87 battery3 @powerNetOut
   236 label *label52
-    * set *tmp85 *tmp86
   237 jump *label50 always
   238 label *label49
-    * set *tmp85 battery2
+  239 sensor *tmp87 battery2 @powerNetOut
   240 label *label50
-    * sensor *tmp87 *tmp85 @powerNetOut
   241 op idiv *tmp89 *tmp87 0.9523809523809523
   242 op max :neededPower *tmp89 1000
   243 jump *label53 notEqual .REACTORS_ON 0
 
   294 op greaterThan *tmp116 @time :nextStart
   295 op land *tmp117 :canStart *tmp116
   296 jump *label67 equal *tmp117 false
-    * jump *label69 equal FAST_START false
+  297 set *tmp119 1
+  298 jump *label70 equal FAST_START false
   299 op idiv *tmp119 :total_battery 25000
   300 jump *label70 always
-    * label *label69
-    * set *tmp119 1
   301 label *label70
   302 op add *tmp121 .REACTORS_ON *tmp119
   303 op min .REACTORS_ON *tmp121 :reactors

Modifications by Convert case at line 419:9 (segments: 2, zero extension) (+58 instructions):
 
   464 label *label121
   465 getlink :block :n
   466 sensor *tmp204 :block @type
-    * jump *label107 notEqual *tmp204 @impact-reactor
+  467 sensor *tmp225 *tmp204 @id
+  468 jump *label123 greaterThanEq *tmp225 63
+  469 multijump *label124 *tmp225 0 (m:*label187)
+  470 multilabel *label124 (m:*label187)
+  471 jump *label122 always
+  472 multilabel *label125 (m:*label187)
+  473 jump *label122 always
+  474 multilabel *label126 (m:*label187)
+  475 jump *label122 always
+  476 multilabel *label127 (m:*label187)
+  477 jump *label122 always
+  478 multilabel *label128 (m:*label187)
+  479 jump *label122 always
+  480 multilabel *label129 (m:*label187)
+  481 jump *label122 always
+  482 multilabel *label130 (m:*label187)
+  483 jump *label122 always
+  484 multilabel *label131 (m:*label187)
+  485 jump *label122 always
+  486 multilabel *label132 (m:*label187)
+  487 jump *label122 always
+  488 multilabel *label133 (m:*label187)
+  489 jump *label122 always
+  490 multilabel *label134 (m:*label187)
+  491 jump *label122 always
+  492 multilabel *label135 (m:*label187)
+  493 jump *label122 always
+  494 multilabel *label136 (m:*label187)
+  495 jump *label122 always
+  496 multilabel *label137 (m:*label187)
+  497 jump *label122 always
+  498 multilabel *label138 (m:*label187)
+  499 jump *label122 always
+  500 multilabel *label139 (m:*label187)
+  501 jump *label122 always
+  502 multilabel *label140 (m:*label187)
+  503 jump *label122 always
+  504 multilabel *label141 (m:*label187)
+  505 jump *label122 always
+  506 multilabel *label142 (m:*label187)
+  507 jump *label122 always
+  508 multilabel *label143 (m:*label187)
+  509 jump *label122 always
+  510 multilabel *label144 (m:*label187)
+  511 jump *label122 always
+  512 multilabel *label145 (m:*label187)
+  513 jump *label122 always
+  514 multilabel *label146 (m:*label187)
+  515 jump *label122 always
+  516 multilabel *label147 (m:*label187)
+  517 jump *label122 always
+  518 multilabel *label148 (m:*label187)
+  519 jump *label122 always
+  520 multilabel *label149 (m:*label187)
+  521 jump *label122 always
+  522 multilabel *label150 (m:*label187)
+  523 jump *label122 always
+  524 multilabel *label151 (m:*label187)
+  525 jump *label122 always
+  526 multilabel *label152 (m:*label187)
+  527 jump *label122 always
+  528 multilabel *label153 (m:*label187)
+  529 jump *label122 always
+  530 multilabel *label154 (m:*label187)
+  531 jump *label122 always
+  532 multilabel *label155 (m:*label187)
+  533 jump *label122 always
+  534 multilabel *label156 (m:*label187)
+  535 jump *label122 always
+  536 multilabel *label157 (m:*label187)
+  537 jump *label122 always
+  538 multilabel *label158 (m:*label187)
+  539 jump *label122 always
+  540 multilabel *label159 (m:*label187)
+  541 jump *label122 always
+  542 multilabel *label160 (m:*label187)
+  543 jump *label122 always
+  544 multilabel *label161 (m:*label187)
+  545 jump *label112 always
+  546 multilabel *label162 (m:*label187)
+  547 jump *label112 always
+  548 multilabel *label163 (m:*label187)
+  549 jump *label122 always
+  550 multilabel *label164 (m:*label187)
+  551 jump *label122 always
+  552 multilabel *label165 (m:*label187)
+  553 jump *label114 always
+  554 multilabel *label166 (m:*label187)
+  555 jump *label114 always
+  556 multilabel *label167 (m:*label187)
+  557 jump *label114 always
+  558 multilabel *label168 (m:*label187)
+  559 jump *label114 always
+  560 multilabel *label169 (m:*label187)
+  561 jump *label122 always
+  562 multilabel *label170 (m:*label187)
+  563 jump *label122 always
+  564 multilabel *label171 (m:*label187)
+  565 jump *label122 always
+  566 multilabel *label172 (m:*label187)
+  567 jump *label122 always
+  568 multilabel *label173 (m:*label187)
+  569 jump *label122 always
+  570 multilabel *label174 (m:*label187)
+  571 jump *label122 always
+  572 multilabel *label175 (m:*label187)
+  573 jump *label122 always
+  574 multilabel *label176 (m:*label187)
+  575 jump *label122 always
+  576 multilabel *label177 (m:*label187)
+  577 jump *label122 always
+  578 multilabel *label178 (m:*label187)
+  579 jump *label122 always
+  580 multilabel *label179 (m:*label187)
+  581 jump *label122 always
+  582 multilabel *label180 (m:*label187)
+  583 jump *label122 always
+  584 multilabel *label181 (m:*label187)
+  585 jump *label122 always
+  586 multilabel *label182 (m:*label187)
+  587 jump *label122 always
+  588 multilabel *label183 (m:*label187)
+  589 jump *label122 always
+  590 multilabel *label184 (m:*label187)
+  591 jump *label114 always
+  592 multilabel *label185 (m:*label187)
+  593 jump *label114 always
+  594 multilabel *label186 (m:*label187)
+  595 jump *label114 always
+  596 label *label123
+  597 jump *label108 equal *tmp225 82
+  598 jump *label122 always
   599 label *label108
   600 op add :reactors :reactors 1
   601 op lessThanEq :enabled :reactors .REACTORS_ON
 
   607 label *label110
   608 jump *label106 always
   609 label *label107
-    * jump *label112 equal *tmp204 @overdrive-projector
-    * jump *label111 notEqual *tmp204 @overdrive-dome
   610 label *label112
   611 control enabled :block .OVERDRIVE
   612 jump *label106 always
   613 label *label111
-    * jump *label114 equal *tmp204 @conduit
-    * jump *label114 equal *tmp204 @pulse-conduit
-    * jump *label114 equal *tmp204 @plated-conduit
-    * jump *label114 equal *tmp204 @conveyor
-    * jump *label114 equal *tmp204 @titanium-conveyor
-    * jump *label114 equal *tmp204 @plastanium-conveyor
-    * jump *label113 notEqual *tmp204 @armored-conveyor
   614 label *label114
   615 control enabled :block :startup
   616 label *label113
+  617 label *label122
   618 label *label106
   619 label *label104
   620 op add :n :n 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     4 set .START 0
     5 set .FUEL_FLAG 0
     6 set .COOLANT_FLAG 0
-    * set :reactors 0
     7 label *label1
     8 label *label119
     9 set :reactors 0
 
   459 set :boosts 0
   460 set :n .START
   461 label *label103
-    * jump *label105 greaterThanEq :n @links
+  462 jump *label105 greaterThanEq .START @links
   463 label *label121
   464 getlink :block :n
   465 sensor *tmp204 :block @type

Modifications by Iterated phase, Jump Straightening, pass 2, iteration 1 (-1 instructions):
 
   593 multilabel *label186 (m:*label187)
   594 jump *label114 always
   595 label *label123
-    * jump *label108 equal *tmp225 82
-    * jump *label122 always
+  596 jump *label122 notEqual *tmp225 82
   597 label *label108
   598 op add :reactors :reactors 1
   599 op lessThanEq :enabled :reactors .REACTORS_ON

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
    57 set .REASON "Reason unknown -- out of power?"
    58 jump *label15 notEqual .MODE 0
    59 set .REASON "Processor reset"
-    * jump *label15 always
    60 label *label15
    61 op notEqual *tmp24 .MODE 0
    62 control enabled switch1 *tmp24
 
   295 set *tmp119 1
   296 jump *label70 equal FAST_START false
   297 op idiv *tmp119 :total_battery 25000
-    * jump *label70 always
   298 label *label70
   299 op add *tmp121 .REACTORS_ON *tmp119
   300 op min .REACTORS_ON *tmp121 :reactors

Modifications by Iterated phase, If Expression Optimization, pass 2, iteration 1:
 
   226 jump *label47 notEqual .MODE 1
   227 label *label48
   228 jump *label49 equal .OUTPUT_1 false
-    * jump *label51 equal .OUTPUT_2 false
+  229 sensor *tmp87 battery3 @powerNetOut
+  230 jump *label52 equal .OUTPUT_2 false
   231 sensor *tmp87 battery4 @powerNetOut
   232 jump *label52 always
-    * label *label51
-    * sensor *tmp87 battery3 @powerNetOut
   233 label *label52
   234 jump *label50 always
   235 label *label49

Modifications by Iterated phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   229 sensor *tmp87 battery3 @powerNetOut
   230 jump *label52 equal .OUTPUT_2 false
   231 sensor *tmp87 battery4 @powerNetOut
-    * jump *label52 always
   232 label *label52
   233 jump *label50 always
   234 label *label49

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     4 set .START 0
     5 set .FUEL_FLAG 0
     6 set .COOLANT_FLAG 0
-    * label *label1
     7 label *label119
     8 set :reactors 0
     9 set :n @links
-    * label *label4
    10 jump *label6 lessThanEq :n 0
    11 label *label120
    12 op sub :n :n 1
 
    16 print "\n"
    17 sensor *tmp5 :block @type
    18 jump *label8 notEqual *tmp5 @impact-reactor
-    * label *label9
    19 set .START :n
    20 op add :reactors :reactors 1
    21 jump *label7 always
 
    26 set .START :n
    27 label *label10
    28 label *label7
-    * label *label5
    29 jump *label120 greaterThan :n 0
    30 label *label6
    31 read *tmp7 cell2 1
 
    33 jump *label12 notEqual :reactors 0
    34 print "No reactor."
    35 label *label12
-    * label *label13
    36 printflush message1
-    * label *label2
    37 jump *label119 equal :reactors 0
-    * label *label3
    38 read .MODE cell1 0
    39 read .OUTPUT_1 cell1 1
    40 read .OUTPUT_2 cell1 2
 
   104 print :min_consumption
   105 printflush message2
   106 label *label25
-    * label *label26
   107 jump *label24 always
   108 label *label23
   109 set :failure_cnt 0
   110 label *label24
   111 label *label22
   112 label *label19
-    * label *label20
   113 jump *label28 notEqual .MODE 0
-    * label *label29
   114 set *tmp62 "[salmon]SHUTDOWN[]"
   115 jump *label27 always
   116 label *label28
   117 jump *label30 notEqual .MODE 1
-    * label *label31
   118 set *tmp62 "[gold]STARTUP[]"
   119 jump *label27 always
   120 label *label30
   121 jump *label32 notEqual .MODE 2
-    * label *label33
   122 set *tmp62 "[green]RUNNING[]"
   123 jump *label27 always
   124 label *label32
 
   142 print :multiplier
   143 print "x[])"
   144 label *label34
-    * label *label35
   145 print "\n=================================="
   146 sensor *tmp70 tank1 @totalLiquids
   147 jump *label36 greaterThanEq *tmp70 750
   148 print "\n[salmon]Cryofluid level critical![]"
   149 label *label36
-    * label *label37
   150 sensor *tmp73 vault1 @blast-compound
   151 jump *label38 greaterThanEq *tmp73 700
   152 print "\n[salmon]Blast compound level critical![]"
   153 label *label38
-    * label *label39
   154 jump *label40 notEqual :enough_battery false
   155 print "\n[salmon]Insufficient battery storage![]"
   156 print "\n"
 
   159 print " "
   160 print "K[] of additional storage to internal battery."
   161 label *label40
-    * label *label41
   162 print "\n"
   163 print "Internal battery:    [gold]"
   164 print :battery_level_str
 
   183 print "["
   184 print "]"
   185 jump *label43 notEqual .MODE 0
-    * label *label44
   186 set .REACTORS_ON 0
   187 set .OVERDRIVE 0
   188 set .OUTPUT_1 0
 
   203 set .GENERATOR true
   204 set .REASON "Unknown -- out of power?"
   205 label *label45
-    * label *label46
   206 jump *label42 always
   207 label *label43
   208 jump *label47 notEqual .MODE 1
-    * label *label48
   209 jump *label49 equal .OUTPUT_1 false
   210 sensor *tmp87 battery3 @powerNetOut
   211 jump *label52 equal .OUTPUT_2 false
 
   243 print "["
   244 print "]"
   245 label *label57
-    * label *label58
   246 jump *label59 lessThanEq :net_power 100
   247 set .OVERDRIVE true
   248 label *label59
-    * label *label60
   249 op lessThan *tmp102 .REACTORS_ON :reactors
   250 op greaterThan *tmp103 :net_power 1000
   251 op land *tmp104 *tmp102 *tmp103
 
   256 set .OUTPUT_2 .OUTPUT_1
   257 set .OUTPUT_1 1
   258 label *label61
-    * label *label62
   259 jump *label63 notEqual .OUTPUT_1 0
   260 op mul :availablePower 6300 :boosts
   261 op div :ratio :neededPower :availablePower
   262 jump *label65 greaterThanEq :ratio 1
   263 op add :nextStart @time 2000
   264 label *label65
-    * label *label66
   265 label *label63
-    * label *label64
   266 op greaterThan *tmp116 @time :nextStart
   267 op land *tmp117 :canStart *tmp116
   268 jump *label67 equal *tmp117 false
 
   274 op min .REACTORS_ON *tmp121 :reactors
   275 op add :nextStart @time 2000
   276 label *label67
-    * label *label68
   277 op greaterThanEq *tmp124 .REACTORS_ON :reactors
   278 op greaterThan *tmp125 @time :nextStart
   279 op land *tmp126 *tmp124 *tmp125
 
   286 set .FUEL_FLAG 0
   287 set .GENERATOR false
   288 label *label71
-    * label *label72
   289 label *label54
   290 jump *label42 always
   291 label *label47
   292 jump *label73 notEqual .MODE 2
-    * label *label74
   293 sensor *tmp131 tank1 @totalLiquids
   294 op lessThan *tmp132 *tmp131 750
   295 op land *tmp133 .COOLANT_FLAG *tmp132
 
   298 control enabled switch1 false
   299 set .REASON "Cryo level too low"
   300 label *label75
-    * label *label76
   301 sensor *tmp136 vault1 @blast-compound
   302 op lessThan *tmp137 *tmp136 700
   303 op land *tmp138 .FUEL_FLAG *tmp137
 
   306 control enabled switch1 false
   307 set .REASON "Blast compound level too low"
   308 label *label77
-    * label *label78
   309 sensor *tmp141 tank1 @totalLiquids
   310 op greaterThan *tmp142 *tmp141 1000
   311 op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
 
   332 print "\nCommit threshold:   [gold]"
   333 print *tmp163
   334 label *label81
-    * label *label82
   335 jump *label83 notEqual :commit_level 0
   336 op idiv *tmp166 :min_level 1000
   337 print "\nRestart threshold: [gold]"
   338 print *tmp166
   339 label *label83
-    * label *label84
   340 print "[] K"
   341 op lessThan *tmp167 :total_battery :min_level
   342 op mul *tmp168 .REACTORS_ON -2500
 
   356 jump *label87 equal *tmp176 false
   357 op add :nextDecommit @time 6000
   358 label *label87
-    * label *label88
   359 jump *label89 lessThanEq @time :nextDecommit
   360 jump *label91 equal .OVERDRIVE false
   361 set .OVERDRIVE false
 
   373 op add .COMMITS .COMMITS 1
   374 set .CAN_COMMIT false
   375 label *label93
-    * label *label94
   376 label *label90
   377 label *label86
   378 jump *label80 always
 
   392 set .OUTPUT_2 0
   393 set .OUTPUT_3 0
   394 label *label97
-    * label *label98
   395 jump *label99 notEqual .OUTPUT_2 0
   396 jump *label101 lessThanEq :total_battery 47500
   397 set .OUTPUT_2 1
 
   401 print "\n*** [gold]Surge tower 2 offline[] ***"
   402 label *label102
   403 label *label99
-    * label *label100
   404 label *label73
   405 label *label42
   406 print "\n"
 
   419 set :reactors 0
   420 set :boosts 0
   421 set :n .START
-    * label *label103
   422 jump *label105 greaterThanEq .START @links
   423 label *label121
   424 getlink :block :n
 
   554 jump *label114 always
   555 label *label123
   556 jump *label122 notEqual *tmp225 82
-    * label *label108
   557 op add :reactors :reactors 1
   558 op lessThanEq :enabled :reactors .REACTORS_ON
   559 control enabled :block :enabled
 
   561 sensor *tmp210 :block @timescale
   562 op add :boosts :boosts *tmp210
   563 label *label109
-    * label *label110
   564 jump *label106 always
-    * label *label107
   565 label *label112
   566 control enabled :block .OVERDRIVE
   567 jump *label106 always
-    * label *label111
   568 label *label114
   569 control enabled :block :startup
-    * label *label113
   570 label *label122
   571 label *label106
-    * label *label104
   572 op add :n :n 1
   573 jump *label121 lessThan :n @links
   574 label *label105
 
   581 read *tmp221 cell2 4
   582 op add :boosts :boosts *tmp221
   583 label *label115
-    * label *label116
   584 op min .REACTORS_ON .REACTORS_ON :reactors
   585 jump *label117 notEqual cell1 null
   586 set .STARTUPS 0
 
   600 write .RESETS cell1 9
   601 write .COMMITS cell1 10
   602 label *label118
-    * label *label17
   603 jump *label16 always
-    * label *label18
   604 end

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
    94 op add :failure_cnt :failure_cnt 1
    95 read *tmp57 cell2 1
    96 op add *tmp58 10 *tmp57
-    * jump *label25 lessThanEq :failure_cnt *tmp58
+   97 jump *label24 lessThanEq :failure_cnt *tmp58
    98 set .MODE 0
    99 control enabled switch1 false
   100 set .REASON "Unknown -- out of power?"
 
   195 print .REASON
   196 print "[]"
   197 sensor *tmp83 switch1 @enabled
-    * jump *label45 equal *tmp83 false
+  198 jump *label42 equal *tmp83 false
   199 set .MODE 1
   200 op add .STARTUPS .STARTUPS 1
   201 set :nextStart 0
 
   208 jump *label47 notEqual .MODE 1
   209 jump *label49 equal .OUTPUT_1 false
   210 sensor *tmp87 battery3 @powerNetOut
-    * jump *label52 equal .OUTPUT_2 false
+  211 jump *label50 equal .OUTPUT_2 false
   212 sensor *tmp87 battery4 @powerNetOut
   213 label *label52
   214 jump *label50 always
 
   221 jump *label55 lessThan :total_battery 25000
   222 set .REACTORS_ON 1
   223 op add :nextStart @time 2000
-    * jump *label56 always
+  224 jump *label42 always
   225 label *label55
   226 print "\nRequired startup energy: [gold]"
   227 print 25
   228 print " K[]"
   229 label *label56
-    * jump *label54 always
+  230 jump *label42 always
   231 label *label53
   232 op add *tmp96 .OUTPUT_1 .OUTPUT_2
   233 op add :outputs *tmp96 .OUTPUT_3
 
   279 op land *tmp126 *tmp124 *tmp125
   280 op greaterThan *tmp127 .OUTPUT_3 0
   281 op land *tmp128 *tmp126 *tmp127
-    * jump *label71 equal *tmp128 false
+  282 jump *label42 equal *tmp128 false
   283 set .MODE 2
   284 op add :nextDecommit @time 6000
   285 set .COOLANT_FLAG 0
 
   348 set .OVERDRIVE true
   349 set .REACTORS_ON :reactors
   350 op add :nextDecommit @time 6000
-    * jump *label86 always
+  351 jump *label80 always
   352 label *label85
   353 op lessThan *tmp174 :battery_level 47500
   354 op lessThan *tmp175 :battery_change -100
 
   366 set .CAN_COMMIT true
   367 label *label92
   368 op add :nextDecommit @time 6000
-    * jump *label90 always
+  369 jump *label80 always
   370 label *label89
-    * jump *label93 greaterThanEq :total_battery :commit_level
+  371 jump *label80 greaterThanEq :total_battery :commit_level
   372 op add .REACTORS_ON .REACTORS_ON 1
   373 op add .COMMITS .COMMITS 1
   374 set .CAN_COMMIT false
 
   557 op add :reactors :reactors 1
   558 op lessThanEq :enabled :reactors .REACTORS_ON
   559 control enabled :block :enabled
-    * jump *label109 equal :enabled false
+  560 jump *label106 equal :enabled false
   561 sensor *tmp210 :block @timescale
   562 op add :boosts :boosts *tmp210
   563 label *label109
 
   586 set .STARTUPS 0
   587 set .RESETS 0
   588 set .COMMITS 0
-    * jump *label118 always
+  589 jump *label16 always
   590 label *label117
   591 write .MODE cell1 0
   592 write .OUTPUT_1 cell1 1

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-1 instructions):
 
   103 print "\nMin. consumption: "
   104 print :min_consumption
   105 printflush message2
-    * label *label25
   106 jump *label24 always
   107 label *label23
   108 set :failure_cnt 0
 
   201 set :failure_cnt 0
   202 set .GENERATOR true
   203 set .REASON "Unknown -- out of power?"
-    * label *label45
   204 jump *label42 always
   205 label *label43
   206 jump *label47 notEqual .MODE 1
 
   208 sensor *tmp87 battery3 @powerNetOut
   209 jump *label50 equal .OUTPUT_2 false
   210 sensor *tmp87 battery4 @powerNetOut
-    * label *label52
   211 jump *label50 always
   212 label *label49
   213 sensor *tmp87 battery2 @powerNetOut
 
   223 print "\nRequired startup energy: [gold]"
   224 print 25
   225 print " K[]"
-    * label *label56
   226 jump *label42 always
   227 label *label53
   228 op add *tmp96 .OUTPUT_1 .OUTPUT_2
 
   281 set .COOLANT_FLAG 0
   282 set .FUEL_FLAG 0
   283 set .GENERATOR false
-    * label *label71
-    * label *label54
   284 jump *label42 always
   285 label *label47
   286 jump *label73 notEqual .MODE 2
 
   366 op add .REACTORS_ON .REACTORS_ON 1
   367 op add .COMMITS .COMMITS 1
   368 set .CAN_COMMIT false
-    * label *label93
-    * label *label90
-    * label *label86
   369 jump *label80 always
   370 label *label79
   371 sensor *tmp187 switch2 @enabled
 
   551 jump *label106 equal :enabled false
   552 sensor *tmp210 :block @timescale
   553 op add :boosts :boosts *tmp210
-    * label *label109
   554 jump *label106 always
   555 label *label112
   556 control enabled :block .OVERDRIVE
 
   589 write .STARTUPS cell1 8
   590 write .RESETS cell1 9
   591 write .COMMITS cell1 10
-    * label *label118
   592 jump *label16 always
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
 
    11 label *label120
    12 op sub :n :n 1
    13 getlink :block :n
-    * print "Found: "
-    * print :block
-    * print "\n"
+   14 print "Found: {0}\n"
+   15 format :block
    16 sensor *tmp5 :block @type
    17 jump *label8 notEqual *tmp5 @impact-reactor
    18 set .START :n
 
    97 set .MODE 0
    98 control enabled switch1 false
    99 set .REASON "Unknown -- out of power?"
-    * print "Consumption: "
-    * print :consumption
-    * print "\nMin. consumption: "
+  100 print "Consumption: {0}\nMin. consumption: "
+  101 format :consumption
   102 print :min_consumption
   103 printflush message2
   104 jump *label24 always
 
   122 set *tmp62 null
   123 label *label27
   124 print *tmp62
-    * print ","
-    * print " reactors [green]"
-    * print .REACTORS_ON
-    * print "/"
-    * print :reactors
-    * print "["
-    * print "]"
+  125 print ", reactors [green]{0}/{0}[]"
+  126 format .REACTORS_ON
+  127 format :reactors
   128 jump *label34 equal .OVERDRIVE false
   129 op mul *tmp65 100 :boosts
   130 op div *tmp66 *tmp65 .REACTORS_ON
   131 op add *tmp67 *tmp66 0.5
   132 op floor *tmp68 *tmp67
   133 op div :multiplier *tmp68 100
-    * print " ([gold]"
-    * print :multiplier
-    * print "x[])"
+  134 print " ([gold]{0}x[])"
+  135 format :multiplier
   136 label *label34
   137 print "\n=================================="
   138 sensor *tmp70 tank1 @totalLiquids
 
   144 print "\n[salmon]Blast compound level critical![]"
   145 label *label38
   146 jump *label40 notEqual :enough_battery false
-    * print "\n[salmon]Insufficient battery storage![]"
-    * print "\n"
-    * print "Link [gold]"
-    * print :missing_battery
-    * print " "
-    * print "K[] of additional storage to internal battery."
+  147 print "\n[salmon]Insufficient battery storage![]\nLink [gold]{0} K[] of additional storage to internal battery."
+  148 format :missing_battery
   149 label *label40
-    * print "\n"
-    * print "Internal battery:    [gold]"
-    * print :battery_level_str
-    * print "["
-    * print "]/[green]50[] K"
-    * print "\n"
-    * print "Total battery:        [gold]"
-    * print :total_battery_str
-    * print "["
-    * print "]/[green]"
-    * print :total_capacity_str
-    * print "["
-    * print "] K"
-    * print "\n"
-    * print "Battery change:     [gold]"
-    * print :battery_change
-    * print "["
-    * print "]"
-    * print "\n"
-    * print "Power balance:       [gold]"
-    * print :net_power
-    * print "["
-    * print "]"
+  150 print "\nInternal battery:    [gold]{0}[]/[green]50[] K\nTotal battery:        [gold]{0}[]/[green]{0}[] K\nBattery change:     [gold]{0}[]\nPower balance:       [gold]{0}[]"
+  151 format :battery_level_str
+  152 format :total_battery_str
+  153 format :total_capacity_str
+  154 format :battery_change
+  155 format :net_power
   156 jump *label43 notEqual .MODE 0
   157 set .REACTORS_ON 0
   158 set .OVERDRIVE 0
 
   162 op greaterThanEq *tmp80 :net_power -150
   163 op lessThan *tmp81 :total_battery 47500
   164 op land .GENERATOR *tmp80 *tmp81
-    * print "\nShutdown reason: [gold]"
-    * print .REASON
-    * print "[]"
+  165 print "\nShutdown reason: [gold]{0}[]"
+  166 format .REASON
   167 sensor *tmp83 switch1 @enabled
   168 jump *label42 equal *tmp83 false
   169 set .MODE 1
 
   191 op add :nextStart @time 2000
   192 jump *label42 always
   193 label *label55
-    * print "\nRequired startup energy: [gold]"
-    * print 25
-    * print " K[]"
+  194 print "\nRequired startup energy: [gold]25 K[]"
   195 jump *label42 always
   196 label *label53
   197 op add *tmp96 .OUTPUT_1 .OUTPUT_2
   198 op add :outputs *tmp96 .OUTPUT_3
-    * print "\n"
-    * print "[gold]"
-    * print :outputs
-    * print "["
-    * print "] surge tower(s) online"
+  199 print "\n[gold]{0}[] surge tower(s) online"
+  200 format :outputs
   201 jump *label57 notEqual .OUTPUT_3 0
-    * print "\n"
-    * print "Required power level: [gold]"
-    * print :neededPower
-    * print "["
-    * print "]"
+  202 print "\nRequired power level: [gold]{0}[]"
+  203 format :neededPower
   204 label *label57
   205 jump *label59 lessThanEq :net_power 100
   206 set .OVERDRIVE true
 
   357 label *label99
   358 label *label73
   359 label *label42
-    * print "\n"
-    * print .STARTUPS
-    * print "-"
-    * print .RESETS
-    * print "-"
+  360 print "\n{0}-{0}-"
+  361 format .STARTUPS
+  362 format .RESETS
   363 print .COMMITS
   364 printflush message1
   365 control enabled diode1 .OUTPUT_1

Final code before resolving virtual instructions:

set PLANT_PROTECTION 1
set FAST_START 1
label *label0
jump *label0 equal cell1 null
set .START 0
set .FUEL_FLAG 0
set .COOLANT_FLAG 0
label *label119
set :reactors 0
set :n @links
jump *label6 lessThanEq :n 0
label *label120
op sub :n :n 1
getlink :block :n
print "Found: {0}\n"
format :block
sensor *tmp5 :block @type
jump *label8 notEqual *tmp5 @impact-reactor
set .START :n
op add :reactors :reactors 1
jump *label7 always
label *label8
jump *label11 equal *tmp5 @overdrive-projector
jump *label10 notEqual *tmp5 @overdrive-dome
label *label11
set .START :n
label *label10
label *label7
jump *label120 greaterThan :n 0
label *label6
read *tmp7 cell2 1
op add :reactors :reactors *tmp7
jump *label12 notEqual :reactors 0
print "No reactor."
label *label12
printflush message1
jump *label119 equal :reactors 0
read .MODE cell1 0
read .OUTPUT_1 cell1 1
read .OUTPUT_2 cell1 2
read .OUTPUT_3 cell1 3
read .REACTORS_ON cell1 4
read .OVERDRIVE cell1 5
read .GENERATOR cell1 6
read .CAN_COMMIT cell1 7
read .STARTUPS cell1 8
read .RESETS cell1 9
read .COMMITS cell1 10
set :reactors .REACTORS_ON
set .REASON "Reason unknown -- out of power?"
jump *label15 notEqual .MODE 0
set .REASON "Processor reset"
label *label15
op notEqual *tmp24 .MODE 0
control enabled switch1 *tmp24
set :failure_cnt 0
set :boosts 0
set :nextStart 0
op add :nextDecommit @time 6000
label *label16
sensor *tmp26 battery1 @totalPower
op floor :battery_level *tmp26
op idiv :battery_level_str :battery_level 1000
sensor *tmp29 battery1 @powerNetStored
op floor :total_battery *tmp29
op idiv :total_battery_str :total_battery 1000
sensor :consumption battery1 @powerNetOut
read :production bank1 509
read :net_power bank1 510
read :battery_change bank1 511
sensor :total_capacity battery1 @powerNetCapacity
op idiv :total_capacity_str :total_capacity 1000
op mul :required_capacity 100000 :reactors
op greaterThanEq :enough_battery :total_capacity :required_capacity
op sub *tmp40 :required_capacity :total_capacity
op div *tmp41 *tmp40 1000
op ceil :missing_battery *tmp41
jump *label19 equal .MODE 0
sensor *tmp45 switch1 @enabled
jump *label21 notEqual *tmp45 false
set .MODE 0
set .REASON "Manual power off"
jump *label22 always
label *label21
op mul :min_consumption .REACTORS_ON 1200
op lessThan :failure1 :consumption :min_consumption
op equal *tmp50 :battery_level 0
op greaterThan *tmp51 :consumption 0
op land *tmp52 *tmp50 *tmp51
op equal *tmp53 :production 0
op land :failure2 *tmp52 *tmp53
op or *tmp55 :failure1 :failure2
jump *label23 equal *tmp55 false
op add :failure_cnt :failure_cnt 1
read *tmp57 cell2 1
op add *tmp58 10 *tmp57
jump *label24 lessThanEq :failure_cnt *tmp58
set .MODE 0
control enabled switch1 false
set .REASON "Unknown -- out of power?"
print "Consumption: {0}\nMin. consumption: "
format :consumption
print :min_consumption
printflush message2
jump *label24 always
label *label23
set :failure_cnt 0
label *label24
label *label22
label *label19
jump *label28 notEqual .MODE 0
set *tmp62 "[salmon]SHUTDOWN[]"
jump *label27 always
label *label28
jump *label30 notEqual .MODE 1
set *tmp62 "[gold]STARTUP[]"
jump *label27 always
label *label30
jump *label32 notEqual .MODE 2
set *tmp62 "[green]RUNNING[]"
jump *label27 always
label *label32
set *tmp62 null
label *label27
print *tmp62
print ", reactors [green]{0}/{0}[]"
format .REACTORS_ON
format :reactors
jump *label34 equal .OVERDRIVE false
op mul *tmp65 100 :boosts
op div *tmp66 *tmp65 .REACTORS_ON
op add *tmp67 *tmp66 0.5
op floor *tmp68 *tmp67
op div :multiplier *tmp68 100
print " ([gold]{0}x[])"
format :multiplier
label *label34
print "\n=================================="
sensor *tmp70 tank1 @totalLiquids
jump *label36 greaterThanEq *tmp70 750
print "\n[salmon]Cryofluid level critical![]"
label *label36
sensor *tmp73 vault1 @blast-compound
jump *label38 greaterThanEq *tmp73 700
print "\n[salmon]Blast compound level critical![]"
label *label38
jump *label40 notEqual :enough_battery false
print "\n[salmon]Insufficient battery storage![]\nLink [gold]{0} K[] of additional storage to internal battery."
format :missing_battery
label *label40
print "\nInternal battery:    [gold]{0}[]/[green]50[] K\nTotal battery:        [gold]{0}[]/[green]{0}[] K\nBattery change:     [gold]{0}[]\nPower balance:       [gold]{0}[]"
format :battery_level_str
format :total_battery_str
format :total_capacity_str
format :battery_change
format :net_power
jump *label43 notEqual .MODE 0
set .REACTORS_ON 0
set .OVERDRIVE 0
set .OUTPUT_1 0
set .OUTPUT_2 0
set .OUTPUT_3 0
op greaterThanEq *tmp80 :net_power -150
op lessThan *tmp81 :total_battery 47500
op land .GENERATOR *tmp80 *tmp81
print "\nShutdown reason: [gold]{0}[]"
format .REASON
sensor *tmp83 switch1 @enabled
jump *label42 equal *tmp83 false
set .MODE 1
op add .STARTUPS .STARTUPS 1
set :nextStart 0
set :failure_cnt 0
set .GENERATOR true
set .REASON "Unknown -- out of power?"
jump *label42 always
label *label43
jump *label47 notEqual .MODE 1
jump *label49 equal .OUTPUT_1 false
sensor *tmp87 battery3 @powerNetOut
jump *label50 equal .OUTPUT_2 false
sensor *tmp87 battery4 @powerNetOut
jump *label50 always
label *label49
sensor *tmp87 battery2 @powerNetOut
label *label50
op idiv *tmp89 *tmp87 0.9523809523809523
op max :neededPower *tmp89 1000
jump *label53 notEqual .REACTORS_ON 0
jump *label55 lessThan :total_battery 25000
set .REACTORS_ON 1
op add :nextStart @time 2000
jump *label42 always
label *label55
print "\nRequired startup energy: [gold]25 K[]"
jump *label42 always
label *label53
op add *tmp96 .OUTPUT_1 .OUTPUT_2
op add :outputs *tmp96 .OUTPUT_3
print "\n[gold]{0}[] surge tower(s) online"
format :outputs
jump *label57 notEqual .OUTPUT_3 0
print "\nRequired power level: [gold]{0}[]"
format :neededPower
label *label57
jump *label59 lessThanEq :net_power 100
set .OVERDRIVE true
label *label59
op lessThan *tmp102 .REACTORS_ON :reactors
op greaterThan *tmp103 :net_power 1000
op land *tmp104 *tmp102 *tmp103
op greaterThanEq *tmp105 :total_battery 25000
op land :canStart *tmp104 *tmp105
jump *label61 lessThan :net_power :neededPower
set .OUTPUT_3 .OUTPUT_2
set .OUTPUT_2 .OUTPUT_1
set .OUTPUT_1 1
label *label61
jump *label63 notEqual .OUTPUT_1 0
op mul :availablePower 6300 :boosts
op div :ratio :neededPower :availablePower
jump *label65 greaterThanEq :ratio 1
op add :nextStart @time 2000
label *label65
label *label63
op greaterThan *tmp116 @time :nextStart
op land *tmp117 :canStart *tmp116
jump *label67 equal *tmp117 false
set *tmp119 1
jump *label70 equal FAST_START false
op idiv *tmp119 :total_battery 25000
label *label70
op add *tmp121 .REACTORS_ON *tmp119
op min .REACTORS_ON *tmp121 :reactors
op add :nextStart @time 2000
label *label67
op greaterThanEq *tmp124 .REACTORS_ON :reactors
op greaterThan *tmp125 @time :nextStart
op land *tmp126 *tmp124 *tmp125
op greaterThan *tmp127 .OUTPUT_3 0
op land *tmp128 *tmp126 *tmp127
jump *label42 equal *tmp128 false
set .MODE 2
op add :nextDecommit @time 6000
set .COOLANT_FLAG 0
set .FUEL_FLAG 0
set .GENERATOR false
jump *label42 always
label *label47
jump *label73 notEqual .MODE 2
sensor *tmp131 tank1 @totalLiquids
op lessThan *tmp132 *tmp131 750
op land *tmp133 .COOLANT_FLAG *tmp132
jump *label75 equal *tmp133 false
set .MODE 0
control enabled switch1 false
set .REASON "Cryo level too low"
label *label75
sensor *tmp136 vault1 @blast-compound
op lessThan *tmp137 *tmp136 700
op land *tmp138 .FUEL_FLAG *tmp137
jump *label77 equal *tmp138 false
set .MODE 0
control enabled switch1 false
set .REASON "Blast compound level too low"
label *label77
sensor *tmp141 tank1 @totalLiquids
op greaterThan *tmp142 *tmp141 1000
op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
sensor *tmp144 vault1 @blast-compound
op greaterThan *tmp145 *tmp144 800
op or .FUEL_FLAG .FUEL_FLAG *tmp145
sensor *tmp147 switch2 @enabled
op land *tmp148 :enough_battery *tmp147
jump *label79 equal *tmp148 false
op mul :min_level :reactors 50000
set :commit_level 0
op lessThan *tmp151 :battery_change 0
op land *tmp152 .CAN_COMMIT *tmp151
op lessThan *tmp153 .REACTORS_ON :reactors
op land *tmp154 *tmp152 *tmp153
jump *label81 equal *tmp154 false
op sub :p :battery_change 2500
op mul *tmp158 :p 0.00472972972972973
op add *tmp159 -5 *tmp158
op mul *tmp160 :p *tmp159
op add :commit_margin 25000 *tmp160
op add :commit_level :min_level :commit_margin
op idiv *tmp163 :commit_level 1000
print "\nCommit threshold:   [gold]"
print *tmp163
label *label81
jump *label83 notEqual :commit_level 0
op idiv *tmp166 :min_level 1000
print "\nRestart threshold: [gold]"
print *tmp166
label *label83
print "[] K"
op lessThan *tmp167 :total_battery :min_level
op mul *tmp168 .REACTORS_ON -2500
op lessThan *tmp169 :battery_change *tmp168
op or *tmp170 *tmp167 *tmp169
jump *label85 equal *tmp170 false
op equal *tmp172 .OVERDRIVE false
op add .RESETS .RESETS *tmp172
set .OVERDRIVE true
set .REACTORS_ON :reactors
op add :nextDecommit @time 6000
jump *label80 always
label *label85
op lessThan *tmp174 :battery_level 47500
op lessThan *tmp175 :battery_change -100
op or *tmp176 *tmp174 *tmp175
jump *label87 equal *tmp176 false
op add :nextDecommit @time 6000
label *label87
jump *label89 lessThanEq @time :nextDecommit
jump *label91 equal .OVERDRIVE false
set .OVERDRIVE false
jump *label92 always
label *label91
op sub *tmp182 .REACTORS_ON 1
op max .REACTORS_ON *tmp182 1
set .CAN_COMMIT true
label *label92
op add :nextDecommit @time 6000
jump *label80 always
label *label89
jump *label80 greaterThanEq :total_battery :commit_level
op add .REACTORS_ON .REACTORS_ON 1
op add .COMMITS .COMMITS 1
set .CAN_COMMIT false
jump *label80 always
label *label79
sensor *tmp187 switch2 @enabled
jump *label95 equal *tmp187 false
print "\n[salmon]Load adapting not possible.[]"
jump *label96 always
label *label95
print "\n[gold]Load adapting not active.[]"
label *label96
set .REACTORS_ON :reactors
set .OVERDRIVE true
label *label80
op mul *tmp189 PLANT_PROTECTION 47500
jump *label97 greaterThanEq :total_battery *tmp189
set .OUTPUT_2 0
set .OUTPUT_3 0
label *label97
jump *label99 notEqual .OUTPUT_2 0
jump *label101 lessThanEq :total_battery 47500
set .OUTPUT_2 1
set .OUTPUT_3 1
jump *label102 always
label *label101
print "\n*** [gold]Surge tower 2 offline[] ***"
label *label102
label *label99
label *label73
label *label42
print "\n{0}-{0}-"
format .STARTUPS
format .RESETS
print .COMMITS
printflush message1
control enabled diode1 .OUTPUT_1
control enabled diode2 .OUTPUT_2
control enabled diode3 .OUTPUT_3
control enabled generator1 .GENERATOR
control enabled generator2 .GENERATOR
op equal :startup .MODE 1
set :reactors 0
set :boosts 0
set :n .START
jump *label105 greaterThanEq .START @links
label *label121
getlink :block :n
sensor *tmp204 :block @type
sensor *tmp225 *tmp204 @id
jump *label123 greaterThanEq *tmp225 63
multijump *label124 *tmp225 0
multilabel *label124
jump *label122 always
multilabel *label125
jump *label122 always
multilabel *label126
jump *label122 always
multilabel *label127
jump *label122 always
multilabel *label128
jump *label122 always
multilabel *label129
jump *label122 always
multilabel *label130
jump *label122 always
multilabel *label131
jump *label122 always
multilabel *label132
jump *label122 always
multilabel *label133
jump *label122 always
multilabel *label134
jump *label122 always
multilabel *label135
jump *label122 always
multilabel *label136
jump *label122 always
multilabel *label137
jump *label122 always
multilabel *label138
jump *label122 always
multilabel *label139
jump *label122 always
multilabel *label140
jump *label122 always
multilabel *label141
jump *label122 always
multilabel *label142
jump *label122 always
multilabel *label143
jump *label122 always
multilabel *label144
jump *label122 always
multilabel *label145
jump *label122 always
multilabel *label146
jump *label122 always
multilabel *label147
jump *label122 always
multilabel *label148
jump *label122 always
multilabel *label149
jump *label122 always
multilabel *label150
jump *label122 always
multilabel *label151
jump *label122 always
multilabel *label152
jump *label122 always
multilabel *label153
jump *label122 always
multilabel *label154
jump *label122 always
multilabel *label155
jump *label122 always
multilabel *label156
jump *label122 always
multilabel *label157
jump *label122 always
multilabel *label158
jump *label122 always
multilabel *label159
jump *label122 always
multilabel *label160
jump *label122 always
multilabel *label161
jump *label112 always
multilabel *label162
jump *label112 always
multilabel *label163
jump *label122 always
multilabel *label164
jump *label122 always
multilabel *label165
jump *label114 always
multilabel *label166
jump *label114 always
multilabel *label167
jump *label114 always
multilabel *label168
jump *label114 always
multilabel *label169
jump *label122 always
multilabel *label170
jump *label122 always
multilabel *label171
jump *label122 always
multilabel *label172
jump *label122 always
multilabel *label173
jump *label122 always
multilabel *label174
jump *label122 always
multilabel *label175
jump *label122 always
multilabel *label176
jump *label122 always
multilabel *label177
jump *label122 always
multilabel *label178
jump *label122 always
multilabel *label179
jump *label122 always
multilabel *label180
jump *label122 always
multilabel *label181
jump *label122 always
multilabel *label182
jump *label122 always
multilabel *label183
jump *label122 always
multilabel *label184
jump *label114 always
multilabel *label185
jump *label114 always
multilabel *label186
jump *label114 always
label *label123
jump *label122 notEqual *tmp225 82
op add :reactors :reactors 1
op lessThanEq :enabled :reactors .REACTORS_ON
control enabled :block :enabled
jump *label106 equal :enabled false
sensor *tmp210 :block @timescale
op add :boosts :boosts *tmp210
jump *label106 always
label *label112
control enabled :block .OVERDRIVE
jump *label106 always
label *label114
control enabled :block :startup
label *label122
label *label106
op add :n :n 1
jump *label121 lessThan :n @links
label *label105
jump *label115 equal cell2 null
write :reactors cell2 0
write .REACTORS_ON cell2 2
write .OVERDRIVE cell2 3
read *tmp220 cell2 1
op add :reactors :reactors *tmp220
read *tmp221 cell2 4
op add :boosts :boosts *tmp221
label *label115
op min .REACTORS_ON .REACTORS_ON :reactors
jump *label117 notEqual cell1 null
set .STARTUPS 0
set .RESETS 0
set .COMMITS 0
jump *label16 always
label *label117
write .MODE cell1 0
write .OUTPUT_1 cell1 1
write .OUTPUT_2 cell1 2
write .OUTPUT_3 cell1 3
write .REACTORS_ON cell1 4
write .OVERDRIVE cell1 5
write .GENERATOR cell1 6
write .CAN_COMMIT cell1 7
write .STARTUPS cell1 8
write .RESETS cell1 9
write .COMMITS cell1 10
jump *label16 always
