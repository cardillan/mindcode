   635 instructions before optimizations.
    60 instructions eliminated by Temp Variables Elimination.
     4 instructions eliminated by Case Expression Optimization.
    85 instructions eliminated by Dead Code Elimination (7 iterations).
     1 instructions eliminated by Jump Normalization (6 iterations).
    25 instructions eliminated by Jump Optimization (6 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
     1 instructions eliminated by Expression Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (2 passes, 4 iterations).
     6 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions eliminated by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
    76 instructions added by Case Switching (5 iterations).
     1 case expressions converted to switched jumps Case Switching.
    11 instructions eliminated by Jump Straightening (6 iterations).
    11 instructions updated by JumpThreading.
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    39 instructions eliminated by Print Merging.
   443 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 588):
  o Convert case at line 419:9 (segments: 3)                     size    +1, benefit     1516.8, efficiency   1516.827
  o Convert case at line 419:9 (segments: 4)                     size    +3, benefit     2456.7, efficiency    818.910
  o Convert case at line 419:9 (segments: 3)                     size    +9, benefit     3125.0, efficiency    347.222
  o Convert case at line 419:9 (segments: 2)                     size   +22, benefit     3670.7, efficiency    166.849
  o Convert case at line 419:9 (segments: 1)                     size   +40, benefit     4471.2, efficiency    111.779
  * Convert case at line 419:9 (segments: 1, zero based)         size   +76, benefit     4492.8, efficiency     59.116 (+75 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-4 instructions):
 
    19 print :block
    20 print "\n"
    21 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @impact-reactor
+   22 jump *label8 equal *tmp5 @impact-reactor
    23 jump *label7 always
    24 label *label8
    25 set .START :n
 
    27 set *tmp4 :reactors
    28 jump *label6 always
    29 label *label7
-    * jump *label10 equal *tmp6 @overdrive-projector
-    * jump *label10 equal *tmp6 @overdrive-dome
+   30 jump *label10 equal *tmp5 @overdrive-projector
+   31 jump *label10 equal *tmp5 @overdrive-dome
    32 jump *label9 always
    33 label *label10
    34 set .START :n
 
   178 label *label18
   179 set *tmp44 null
   180 label *label19
-    * set *tmp63 .MODE
-    * jump *label28 equal *tmp63 0
+  181 jump *label28 equal .MODE 0
   182 jump *label27 always
   183 label *label28
   184 set *tmp62 "[salmon]SHUTDOWN[]"
   185 jump *label26 always
   186 label *label27
-    * jump *label30 equal *tmp63 1
+  187 jump *label30 equal .MODE 1
   188 jump *label29 always
   189 label *label30
   190 set *tmp62 "[gold]STARTUP[]"
   191 jump *label26 always
   192 label *label29
-    * jump *label32 equal *tmp63 2
+  193 jump *label32 equal .MODE 2
   194 jump *label31 always
   195 label *label32
   196 set *tmp62 "[green]RUNNING[]"
 
   277 print :net_power
   278 print "["
   279 print "]"
-    * set *tmp79 .MODE
-    * jump *label43 equal *tmp79 0
+  280 jump *label43 equal .MODE 0
   281 jump *label42 always
   282 label *label43
   283 set .REACTORS_ON 0
 
   308 set *tmp78 *tmp84
   309 jump *label41 always
   310 label *label42
-    * jump *label47 equal *tmp79 1
+  311 jump *label47 equal .MODE 1
   312 jump *label46 always
   313 label *label47
   314 jump *label48 equal .OUTPUT_1 false
 
   454 set *tmp78 *tmp92
   455 jump *label41 always
   456 label *label46
-    * jump *label73 equal *tmp79 2
+  457 jump *label73 equal .MODE 2
   458 jump *label72 always
   459 label *label73
   460 sensor *tmp131 tank1 @totalLiquids
 
   657 getlink *tmp202 :n
   658 set :block *tmp202
   659 sensor *tmp204 :block @type
-    * set *tmp205 *tmp204
-    * jump *label107 equal *tmp205 @impact-reactor
+  660 jump *label107 equal *tmp204 @impact-reactor
   661 jump *label106 always
   662 label *label107
   663 op add :reactors :reactors 1
 
   676 set *tmp203 *tmp209
   677 jump *label105 always
   678 label *label106
-    * jump *label111 equal *tmp205 @overdrive-projector
-    * jump *label111 equal *tmp205 @overdrive-dome
+  679 jump *label111 equal *tmp204 @overdrive-projector
+  680 jump *label111 equal *tmp204 @overdrive-dome
   681 jump *label110 always
   682 label *label111
   683 set *tmp211 :block
 
   685 set *tmp203 .OVERDRIVE
   686 jump *label105 always
   687 label *label110
-    * jump *label113 equal *tmp205 @conduit
-    * jump *label113 equal *tmp205 @pulse-conduit
-    * jump *label113 equal *tmp205 @plated-conduit
-    * jump *label113 equal *tmp205 @conveyor
-    * jump *label113 equal *tmp205 @titanium-conveyor
-    * jump *label113 equal *tmp205 @plastanium-conveyor
-    * jump *label113 equal *tmp205 @armored-conveyor
+  688 jump *label113 equal *tmp204 @conduit
+  689 jump *label113 equal *tmp204 @pulse-conduit
+  690 jump *label113 equal *tmp204 @plated-conduit
+  691 jump *label113 equal *tmp204 @conveyor
+  692 jump *label113 equal *tmp204 @titanium-conveyor
+  693 jump *label113 equal *tmp204 @plastanium-conveyor
+  694 jump *label113 equal *tmp204 @armored-conveyor
   695 jump *label112 always
   696 label *label113
   697 set *tmp213 :block

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-57 instructions):
 
    24 label *label8
    25 set .START :n
    26 op add :reactors :reactors 1
-    * set *tmp4 :reactors
    27 jump *label6 always
    28 label *label7
    29 jump *label10 equal *tmp5 @overdrive-projector
 
    31 jump *label9 always
    32 label *label10
    33 set .START :n
-    * set *tmp4 .START
    34 jump *label6 always
    35 label *label9
-    * set *tmp4 null
    36 label *label6
    37 label *label4
    38 jump *label3 always
 
    42 op equal *tmp8 :reactors 0
    43 jump *label11 equal *tmp8 false
    44 print "No reactor."
-    * set *tmp9 "No reactor."
    45 jump *label12 always
    46 label *label11
-    * set *tmp9 null
    47 label *label12
    48 printflush message1
    49 label *label1
 
    75 op equal *tmp21 .MODE 0
    76 jump *label13 equal *tmp21 false
    77 set .REASON "Processor reset"
-    * set *tmp22 .REASON
    78 jump *label14 always
    79 label *label13
    80 set .REASON "Reason unknown -- out of power?"
-    * set *tmp22 .REASON
    81 label *label14
    82 op notEqual *tmp24 .MODE 0
    83 control enabled switch1 *tmp24
 
   166 label *label23
   167 set *tmp47 *tmp56
   168 label *label21
-    * set *tmp44 *tmp47
   169 jump *label19 always
   170 label *label18
-    * set *tmp44 null
   171 label *label19
   172 jump *label28 equal .MODE 0
   173 jump *label27 always
 
   208 print " ([gold]"
   209 print :multiplier
   210 print "x[])"
-    * set *tmp64 "x[])"
   211 jump *label34 always
   212 label *label33
-    * set *tmp64 null
   213 label *label34
   214 print "\n=================================="
   215 sensor *tmp70 tank1 @totalLiquids
   216 op lessThan *tmp71 *tmp70 750
   217 jump *label35 equal *tmp71 false
   218 print "\n[salmon]Cryofluid level critical![]"
-    * set *tmp72 "\n[salmon]Cryofluid level critical![]"
   219 jump *label36 always
   220 label *label35
-    * set *tmp72 null
   221 label *label36
   222 sensor *tmp73 vault1 @blast-compound
   223 op lessThan *tmp74 *tmp73 700
   224 jump *label37 equal *tmp74 false
   225 print "\n[salmon]Blast compound level critical![]"
-    * set *tmp75 "\n[salmon]Blast compound level critical![]"
   226 jump *label38 always
   227 label *label37
-    * set *tmp75 null
   228 label *label38
   229 op equal *tmp76 :enough_battery false
   230 jump *label39 equal *tmp76 false
 
   234 print :missing_battery
   235 print " "
   236 print "K[] of additional storage to internal battery."
-    * set *tmp77 null
   237 jump *label40 always
   238 label *label39
-    * set *tmp77 null
   239 label *label40
   240 print "\n"
   241 print "Internal battery:    [gold]"
 
   288 label *label44
   289 set *tmp84 null
   290 label *label45
-    * set *tmp78 *tmp84
   291 jump *label41 always
   292 label *label42
   293 jump *label47 equal .MODE 1
 
   344 print :neededPower
   345 print "["
   346 print "]"
-    * set *tmp99 null
   347 jump *label57 always
   348 label *label56
-    * set *tmp99 null
   349 label *label57
   350 op greaterThan *tmp100 :net_power 100
   351 jump *label58 equal *tmp100 false
   352 set .OVERDRIVE true
-    * set *tmp101 .OVERDRIVE
   353 jump *label59 always
   354 label *label58
-    * set *tmp101 null
   355 label *label59
   356 op lessThan *tmp102 .REACTORS_ON :reactors
   357 op greaterThan *tmp103 :net_power 1000
 
   364 set .OUTPUT_3 .OUTPUT_2
   365 set .OUTPUT_2 .OUTPUT_1
   366 set .OUTPUT_1 1
-    * set *tmp108 .OUTPUT_1
   367 jump *label61 always
   368 label *label60
-    * set *tmp108 null
   369 label *label61
   370 op equal *tmp109 .OUTPUT_1 0
   371 jump *label62 equal *tmp109 false
 
   382 label *label64
   383 set *tmp114 null
   384 label *label65
-    * set *tmp110 *tmp114
   385 jump *label63 always
   386 label *label62
-    * set *tmp110 null
   387 label *label63
   388 op greaterThan *tmp116 @time :nextStart
   389 op land *tmp117 :canStart *tmp116
 
   401 set .REACTORS_ON *tmp122
   402 op add *tmp123 @time 2000
   403 set :nextStart *tmp123
-    * set *tmp118 :nextStart
   404 jump *label67 always
   405 label *label66
-    * set *tmp118 null
   406 label *label67
   407 op greaterThanEq *tmp124 .REACTORS_ON :reactors
   408 op greaterThan *tmp125 @time :nextStart
 
   423 label *label71
   424 set *tmp92 *tmp129
   425 label *label53
-    * set *tmp78 *tmp92
   426 jump *label41 always
   427 label *label46
   428 jump *label73 equal .MODE 2
 
   435 set .MODE 0
   436 control enabled switch1 false
   437 set .REASON "Cryo level too low"
-    * set *tmp134 .REASON
   438 jump *label75 always
   439 label *label74
-    * set *tmp134 null
   440 label *label75
   441 sensor *tmp136 vault1 @blast-compound
   442 op lessThan *tmp137 *tmp136 700
 
   445 set .MODE 0
   446 control enabled switch1 false
   447 set .REASON "Blast compound level too low"
-    * set *tmp139 .REASON
   448 jump *label77 always
   449 label *label76
-    * set *tmp139 null
   450 label *label77
   451 sensor *tmp141 tank1 @totalLiquids
   452 op greaterThan *tmp142 *tmp141 1000
 
   480 op idiv *tmp163 :commit_level 1000
   481 print "\nCommit threshold:   [gold]"
   482 print *tmp163
-    * set *tmp155 *tmp163
   483 jump *label81 always
   484 label *label80
-    * set *tmp155 null
   485 label *label81
   486 op equal *tmp164 :commit_level 0
   487 jump *label82 equal *tmp164 false
   488 op idiv *tmp166 :min_level 1000
   489 print "\nRestart threshold: [gold]"
   490 print *tmp166
-    * set *tmp165 *tmp166
   491 jump *label83 always
   492 label *label82
-    * set *tmp165 null
   493 label *label83
   494 print "[] K"
   495 op lessThan *tmp167 :total_battery :min_level
 
   512 jump *label86 equal *tmp176 false
   513 op add *tmp178 @time 6000
   514 set :nextDecommit *tmp178
-    * set *tmp177 :nextDecommit
   515 jump *label87 always
   516 label *label86
-    * set *tmp177 null
   517 label *label87
   518 op greaterThan *tmp179 @time :nextDecommit
   519 jump *label88 equal *tmp179 false
   520 jump *label90 equal .OVERDRIVE false
   521 set .OVERDRIVE false
-    * set *tmp181 .OVERDRIVE
   522 jump *label91 always
   523 label *label90
   524 op sub *tmp182 .REACTORS_ON 1
   525 op max *tmp183 *tmp182 1
   526 set .REACTORS_ON *tmp183
   527 set .CAN_COMMIT true
-    * set *tmp181 .CAN_COMMIT
   528 label *label91
   529 op add *tmp184 @time 6000
   530 set :nextDecommit *tmp184
 
   545 label *label89
   546 set *tmp171 *tmp180
   547 label *label85
-    * set *tmp149 *tmp171
   548 jump *label79 always
   549 label *label78
   550 sensor *tmp187 switch2 @enabled
   551 jump *label94 equal *tmp187 false
   552 print "\n[salmon]Load adapting not possible.[]"
-    * set *tmp188 "\n[salmon]Load adapting not possible.[]"
   553 jump *label95 always
   554 label *label94
   555 print "\n[gold]Load adapting not active.[]"
-    * set *tmp188 "\n[gold]Load adapting not active.[]"
   556 label *label95
   557 set .REACTORS_ON :reactors
   558 set .OVERDRIVE true
-    * set *tmp149 .OVERDRIVE
   559 label *label79
   560 op mul *tmp189 PLANT_PROTECTION 47500
   561 op lessThan *tmp190 :total_battery *tmp189
   562 jump *label96 equal *tmp190 false
   563 set .OUTPUT_2 0
   564 set .OUTPUT_3 0
-    * set *tmp191 .OUTPUT_3
   565 jump *label97 always
   566 label *label96
-    * set *tmp191 null
   567 label *label97
   568 op equal *tmp192 .OUTPUT_2 0
   569 jump *label98 equal *tmp192 false
 
   582 label *label98
   583 set *tmp193 null
   584 label *label99
-    * set *tmp78 *tmp193
   585 jump *label41 always
   586 label *label72
-    * set *tmp78 null
   587 label *label41
   588 print "\n"
   589 print .STARTUPS
 
   624 label *label108
   625 set *tmp209 null
   626 label *label109
-    * set *tmp203 *tmp209
   627 jump *label105 always
   628 label *label106
   629 jump *label111 equal *tmp204 @overdrive-projector
 
   632 label *label111
   633 set *tmp211 :block
   634 control enabled *tmp211 .OVERDRIVE
-    * set *tmp203 .OVERDRIVE
   635 jump *label105 always
   636 label *label110
   637 jump *label113 equal *tmp204 @conduit
 
   645 label *label113
   646 set *tmp213 :block
   647 control enabled *tmp213 :startup
-    * set *tmp203 :startup
   648 jump *label105 always
   649 label *label112
-    * set *tmp203 null
   650 label *label105
   651 label *label103
   652 op add :n :n 1
 
   661 op add :reactors :reactors *tmp220
   662 read *tmp221 cell2 4
   663 op add :boosts :boosts *tmp221
-    * set *tmp216 :boosts
   664 jump *label115 always
   665 label *label114
-    * set *tmp216 null
   666 label *label115
   667 op min *tmp222 .REACTORS_ON :reactors
   668 set .REACTORS_ON *tmp222
 
   671 set .STARTUPS 0
   672 set .RESETS 0
   673 set .COMMITS 0
-    * set *tmp224 .COMMITS
   674 jump *label117 always
   675 label *label116
   676 write .MODE cell1 0
 
   684 write .STARTUPS cell1 8
   685 write .RESETS cell1 9
   686 write .COMMITS cell1 10
-    * set *tmp224 .COMMITS
   687 label *label117
   688 label *label16
   689 jump *label15 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
   125 jump *label20 equal *tmp46 false
   126 set .MODE 0
   127 set .REASON "Manual power off"
-    * set *tmp47 .REASON
   128 jump *label21 always
   129 label *label20
   130 op mul *tmp48 .REACTORS_ON 1200
 
   163 set :failure_cnt 0
   164 set *tmp56 :failure_cnt
   165 label *label23
-    * set *tmp47 *tmp56
   166 label *label21
   167 jump *label19 always
   168 label *label18
 
   281 set :failure_cnt 0
   282 set .GENERATOR true
   283 set .REASON "Unknown -- out of power?"
-    * set *tmp84 .REASON
   284 jump *label45 always
   285 label *label44
-    * set *tmp84 null
   286 label *label45
   287 jump *label41 always
   288 label *label42
 
   322 print " K[]"
   323 set *tmp94 " K[]"
   324 label *label55
-    * set *tmp92 *tmp94
   325 jump *label53 always
   326 label *label52
   327 op add *tmp96 .OUTPUT_1 .OUTPUT_2
 
   372 jump *label64 equal *tmp113 false
   373 op add *tmp115 @time 2000
   374 set :nextStart *tmp115
-    * set *tmp114 :nextStart
   375 jump *label65 always
   376 label *label64
-    * set *tmp114 null
   377 label *label65
   378 jump *label63 always
   379 label *label62
 
   414 label *label70
   415 set *tmp129 null
   416 label *label71
-    * set *tmp92 *tmp129
   417 label *label53
   418 jump *label41 always
   419 label *label46
 
   495 set .REACTORS_ON :reactors
   496 op add *tmp173 @time 6000
   497 set :nextDecommit *tmp173
-    * set *tmp171 :nextDecommit
   498 jump *label85 always
   499 label *label84
   500 op lessThan *tmp174 :battery_level 47500
 
   534 label *label93
   535 set *tmp180 *tmp186
   536 label *label89
-    * set *tmp171 *tmp180
   537 label *label85
   538 jump *label79 always
   539 label *label78
 
   567 print "\n*** [gold]Surge tower 2 offline[] ***"
   568 set *tmp195 "\n*** [gold]Surge tower 2 offline[] ***"
   569 label *label101
-    * set *tmp193 *tmp195
   570 jump *label99 always
   571 label *label98
-    * set *tmp193 null
   572 label *label99
   573 jump *label41 always
   574 label *label72
 
   607 jump *label108 equal :enabled false
   608 sensor *tmp210 :block @timescale
   609 op add :boosts :boosts *tmp210
-    * set *tmp209 :boosts
   610 jump *label109 always
   611 label *label108
-    * set *tmp209 null
   612 label *label109
   613 jump *label105 always
   614 label *label106

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   157 label *label24
   158 set *tmp60 null
   159 label *label25
-    * set *tmp56 *tmp60
   160 jump *label23 always
   161 label *label22
   162 set :failure_cnt 0
-    * set *tmp56 :failure_cnt
   163 label *label23
   164 label *label21
   165 jump *label19 always
 
   312 set .REACTORS_ON 1
   313 op add *tmp95 @time 2000
   314 set :nextStart *tmp95
-    * set *tmp94 :nextStart
   315 jump *label55 always
   316 label *label54
   317 print "\nRequired startup energy: [gold]"
   318 print 25
   319 print " K[]"
-    * set *tmp94 " K[]"
   320 label *label55
   321 jump *label53 always
   322 label *label52
 
   405 set .COOLANT_FLAG 0
   406 set .FUEL_FLAG 0
   407 set .GENERATOR false
-    * set *tmp129 .GENERATOR
   408 jump *label71 always
   409 label *label70
-    * set *tmp129 null
   410 label *label71
   411 label *label53
   412 jump *label41 always
 
   513 label *label91
   514 op add *tmp184 @time 6000
   515 set :nextDecommit *tmp184
-    * set *tmp180 :nextDecommit
   516 jump *label89 always
   517 label *label88
   518 op lessThan *tmp185 :total_battery :commit_level
 
   525 label *label92
   526 set *tmp186 null
   527 label *label93
-    * set *tmp180 *tmp186
   528 label *label89
   529 label *label85
   530 jump *label79 always
 
   553 jump *label100 equal *tmp194 false
   554 set .OUTPUT_2 1
   555 set .OUTPUT_3 1
-    * set *tmp195 .OUTPUT_3
   556 jump *label101 always
   557 label *label100
   558 print "\n*** [gold]Surge tower 2 offline[] ***"
-    * set *tmp195 "\n*** [gold]Surge tower 2 offline[] ***"
   559 label *label101
   560 jump *label99 always
   561 label *label98

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   152 print "\nMin. consumption: "
   153 print :min_consumption
   154 printflush message2
-    * set *tmp60 null
   155 jump *label25 always
   156 label *label24
-    * set *tmp60 null
   157 label *label25
   158 jump *label23 always
   159 label *label22
 
   518 op add .REACTORS_ON .REACTORS_ON 1
   519 op add .COMMITS .COMMITS 1
   520 set .CAN_COMMIT false
-    * set *tmp186 .CAN_COMMIT
   521 jump *label93 always
   522 label *label92
-    * set *tmp186 null
   523 label *label93
   524 label *label89
   525 label *label85

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-60 instructions):
 
     7 op equal *tmp0 :reactors 0
     8 jump *label2 equal *tmp0 false
     9 set :reactors 0
-    * set *tmp1 @links
-    * set :n *tmp1
+   10 set :n @links
    11 label *label3
    12 op greaterThan *tmp2 :n 0
    13 jump *label5 equal *tmp2 false
    14 op sub :n :n 1
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   15 getlink :block :n
    16 print "Found: "
    17 print :block
    18 print "\n"
 
    47 label *label1
    48 jump *label0 always
    49 label *label2
-    * read *tmp10 cell1 0
-    * set .MODE *tmp10
-    * read *tmp11 cell1 1
-    * set .OUTPUT_1 *tmp11
-    * read *tmp12 cell1 2
-    * set .OUTPUT_2 *tmp12
-    * read *tmp13 cell1 3
-    * set .OUTPUT_3 *tmp13
-    * read *tmp14 cell1 4
-    * set .REACTORS_ON *tmp14
-    * read *tmp15 cell1 5
-    * set .OVERDRIVE *tmp15
-    * read *tmp16 cell1 6
-    * set .GENERATOR *tmp16
-    * read *tmp17 cell1 7
-    * set .CAN_COMMIT *tmp17
-    * read *tmp18 cell1 8
-    * set .STARTUPS *tmp18
-    * read *tmp19 cell1 9
-    * set .RESETS *tmp19
-    * read *tmp20 cell1 10
-    * set .COMMITS *tmp20
+   50 read .MODE cell1 0
+   51 read .OUTPUT_1 cell1 1
+   52 read .OUTPUT_2 cell1 2
+   53 read .OUTPUT_3 cell1 3
+   54 read .REACTORS_ON cell1 4
+   55 read .OVERDRIVE cell1 5
+   56 read .GENERATOR cell1 6
+   57 read .CAN_COMMIT cell1 7
+   58 read .STARTUPS cell1 8
+   59 read .RESETS cell1 9
+   60 read .COMMITS cell1 10
    61 set :reactors .REACTORS_ON
    62 op equal *tmp21 .MODE 0
    63 jump *label13 equal *tmp21 false
 
    71 set :failure_cnt 0
    72 set :boosts 0
    73 set :nextStart 0
-    * op add *tmp25 @time 6000
-    * set :nextDecommit *tmp25
+   74 op add :nextDecommit @time 6000
    75 label *label15
    76 jump *label17 equal true false
    77 sensor *tmp26 battery1 @totalPower
-    * op floor *tmp27 *tmp26
-    * set :battery_level *tmp27
-    * op idiv *tmp28 :battery_level 1000
-    * set :battery_level_str *tmp28
+   78 op floor :battery_level *tmp26
+   79 op idiv :battery_level_str :battery_level 1000
    80 sensor *tmp29 battery1 @powerNetStored
-    * op floor *tmp30 *tmp29
-    * set :total_battery *tmp30
-    * op idiv *tmp31 :total_battery 1000
-    * set :total_battery_str *tmp31
-    * sensor *tmp32 battery1 @powerNetOut
-    * set :consumption *tmp32
-    * read *tmp33 bank1 509
-    * set :production *tmp33
-    * read *tmp34 bank1 510
-    * set :net_power *tmp34
-    * read *tmp35 bank1 511
-    * set :battery_change *tmp35
-    * sensor *tmp36 battery1 @powerNetCapacity
-    * set :total_capacity *tmp36
-    * op idiv *tmp37 :total_capacity 1000
-    * set :total_capacity_str *tmp37
-    * op mul *tmp38 100000 :reactors
-    * set :required_capacity *tmp38
-    * op greaterThanEq *tmp39 :total_capacity :required_capacity
-    * set :enough_battery *tmp39
+   81 op floor :total_battery *tmp29
+   82 op idiv :total_battery_str :total_battery 1000
+   83 sensor :consumption battery1 @powerNetOut
+   84 read :production bank1 509
+   85 read :net_power bank1 510
+   86 read :battery_change bank1 511
+   87 sensor :total_capacity battery1 @powerNetCapacity
+   88 op idiv :total_capacity_str :total_capacity 1000
+   89 op mul :required_capacity 100000 :reactors
+   90 op greaterThanEq :enough_battery :total_capacity :required_capacity
    91 op sub *tmp40 :required_capacity :total_capacity
    92 op div *tmp41 *tmp40 1000
-    * op ceil *tmp42 *tmp41
-    * set :missing_battery *tmp42
+   93 op ceil :missing_battery *tmp41
    94 op notEqual *tmp43 .MODE 0
    95 jump *label18 equal *tmp43 false
    96 sensor *tmp45 switch1 @enabled
 
   100 set .REASON "Manual power off"
   101 jump *label21 always
   102 label *label20
-    * op mul *tmp48 .REACTORS_ON 1200
-    * set :min_consumption *tmp48
-    * op lessThan *tmp49 :consumption :min_consumption
-    * set :failure1 *tmp49
+  103 op mul :min_consumption .REACTORS_ON 1200
+  104 op lessThan :failure1 :consumption :min_consumption
   105 op equal *tmp50 :battery_level 0
   106 op greaterThan *tmp51 :consumption 0
   107 op land *tmp52 *tmp50 *tmp51
   108 op equal *tmp53 :production 0
-    * op land *tmp54 *tmp52 *tmp53
-    * set :failure2 *tmp54
+  109 op land :failure2 *tmp52 *tmp53
   110 op or *tmp55 :failure1 :failure2
   111 jump *label22 equal *tmp55 false
   112 op add :failure_cnt :failure_cnt 1
 
   167 op div *tmp66 *tmp65 .REACTORS_ON
   168 op add *tmp67 *tmp66 0.5
   169 op floor *tmp68 *tmp67
-    * op div *tmp69 *tmp68 100
-    * set :multiplier *tmp69
+  170 op div :multiplier *tmp68 100
   171 print " ([gold]"
   172 print :multiplier
   173 print "x[])"
 
   233 set .OUTPUT_3 0
   234 op greaterThanEq *tmp80 :net_power -150
   235 op lessThan *tmp81 :total_battery 47500
-    * op land *tmp82 *tmp80 *tmp81
-    * set .GENERATOR *tmp82
+  236 op land .GENERATOR *tmp80 *tmp81
   237 print "\nShutdown reason: [gold]"
   238 print .REASON
   239 print "[]"
 
   269 sensor *tmp87 :nextBattery @powerNetOut
   270 op mul *tmp88 *tmp87 1.05
   271 op floor *tmp89 *tmp88
-    * op max *tmp90 *tmp89 1000
-    * set :neededPower *tmp90
+  272 op max :neededPower *tmp89 1000
   273 op equal *tmp91 .REACTORS_ON 0
   274 jump *label52 equal *tmp91 false
   275 op greaterThanEq *tmp93 :total_battery 25000
   276 jump *label54 equal *tmp93 false
   277 set .REACTORS_ON 1
-    * op add *tmp95 @time 2000
-    * set :nextStart *tmp95
+  278 op add :nextStart @time 2000
   279 jump *label55 always
   280 label *label54
   281 print "\nRequired startup energy: [gold]"
 
   285 jump *label53 always
   286 label *label52
   287 op add *tmp96 .OUTPUT_1 .OUTPUT_2
-    * op add *tmp97 *tmp96 .OUTPUT_3
-    * set :outputs *tmp97
+  288 op add :outputs *tmp96 .OUTPUT_3
   289 print "\n"
   290 print "[gold]"
   291 print :outputs
 
   311 op greaterThan *tmp103 :net_power 1000
   312 op land *tmp104 *tmp102 *tmp103
   313 op greaterThanEq *tmp105 :total_battery 25000
-    * op land *tmp106 *tmp104 *tmp105
-    * set :canStart *tmp106
+  314 op land :canStart *tmp104 *tmp105
   315 op greaterThanEq *tmp107 :net_power :neededPower
   316 jump *label60 equal *tmp107 false
   317 set .OUTPUT_3 .OUTPUT_2
 
   322 label *label61
   323 op equal *tmp109 .OUTPUT_1 0
   324 jump *label62 equal *tmp109 false
-    * op mul *tmp111 6300 :boosts
-    * set :availablePower *tmp111
-    * op div *tmp112 :neededPower :availablePower
-    * set :ratio *tmp112
+  325 op mul :availablePower 6300 :boosts
+  326 op div :ratio :neededPower :availablePower
   327 op lessThan *tmp113 :ratio 1
   328 jump *label64 equal *tmp113 false
-    * op add *tmp115 @time 2000
-    * set :nextStart *tmp115
+  329 op add :nextStart @time 2000
   330 jump *label65 always
   331 label *label64
   332 label *label65
 
   337 op land *tmp117 :canStart *tmp116
   338 jump *label66 equal *tmp117 false
   339 jump *label68 equal FAST_START false
-    * op idiv *tmp120 :total_battery 25000
-    * set *tmp119 *tmp120
+  340 op idiv *tmp119 :total_battery 25000
   341 jump *label69 always
   342 label *label68
   343 set *tmp119 1
   344 label *label69
   345 set :start_at_once *tmp119
   346 op add *tmp121 .REACTORS_ON :start_at_once
-    * op min *tmp122 *tmp121 :reactors
-    * set .REACTORS_ON *tmp122
-    * op add *tmp123 @time 2000
-    * set :nextStart *tmp123
+  347 op min .REACTORS_ON *tmp121 :reactors
+  348 op add :nextStart @time 2000
   349 jump *label67 always
   350 label *label66
   351 label *label67
 
   356 op land *tmp128 *tmp126 *tmp127
   357 jump *label70 equal *tmp128 false
   358 set .MODE 2
-    * op add *tmp130 @time 6000
-    * set :nextDecommit *tmp130
+  359 op add :nextDecommit @time 6000
   360 set .COOLANT_FLAG 0
   361 set .FUEL_FLAG 0
   362 set .GENERATOR false
 
   391 label *label77
   392 sensor *tmp141 tank1 @totalLiquids
   393 op greaterThan *tmp142 *tmp141 1000
-    * op or *tmp143 .COOLANT_FLAG *tmp142
-    * set .COOLANT_FLAG *tmp143
+  394 op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
   395 sensor *tmp144 vault1 @blast-compound
   396 op greaterThan *tmp145 *tmp144 800
-    * op or *tmp146 .FUEL_FLAG *tmp145
-    * set .FUEL_FLAG *tmp146
+  397 op or .FUEL_FLAG .FUEL_FLAG *tmp145
   398 sensor *tmp147 switch2 @enabled
   399 op land *tmp148 :enough_battery *tmp147
   400 jump *label78 equal *tmp148 false
-    * op mul *tmp150 0.5 :required_capacity
-    * set :min_level *tmp150
+  401 op mul :min_level 0.5 :required_capacity
   402 set :commit_level 0
   403 op lessThan *tmp151 :battery_change 0
   404 op land *tmp152 .CAN_COMMIT *tmp151
 
   406 op land *tmp154 *tmp152 *tmp153
   407 jump *label80 equal *tmp154 false
   408 op sub *tmp156 :battery_change 1500
-    * op sub *tmp157 *tmp156 1000
-    * set :p *tmp157
+  409 op sub :p *tmp156 1000
   410 op mul *tmp158 :p 0.00472972972972973
   411 op add *tmp159 -5 *tmp158
   412 op mul *tmp160 :p *tmp159
-    * op add *tmp161 25000 *tmp160
-    * set :commit_margin *tmp161
-    * op add *tmp162 :min_level :commit_margin
-    * set :commit_level *tmp162
+  413 op add :commit_margin 25000 *tmp160
+  414 op add :commit_level :min_level :commit_margin
   415 op idiv *tmp163 :commit_level 1000
   416 print "\nCommit threshold:   [gold]"
   417 print *tmp163
 
   436 op add .RESETS .RESETS *tmp172
   437 set .OVERDRIVE true
   438 set .REACTORS_ON :reactors
-    * op add *tmp173 @time 6000
-    * set :nextDecommit *tmp173
+  439 op add :nextDecommit @time 6000
   440 jump *label85 always
   441 label *label84
   442 op lessThan *tmp174 :battery_level 47500
   443 op lessThan *tmp175 :battery_change -100
   444 op or *tmp176 *tmp174 *tmp175
   445 jump *label86 equal *tmp176 false
-    * op add *tmp178 @time 6000
-    * set :nextDecommit *tmp178
+  446 op add :nextDecommit @time 6000
   447 jump *label87 always
   448 label *label86
   449 label *label87
 
   454 jump *label91 always
   455 label *label90
   456 op sub *tmp182 .REACTORS_ON 1
-    * op max *tmp183 *tmp182 1
-    * set .REACTORS_ON *tmp183
+  457 op max .REACTORS_ON *tmp182 1
   458 set .CAN_COMMIT true
   459 label *label91
-    * op add *tmp184 @time 6000
-    * set :nextDecommit *tmp184
+  460 op add :nextDecommit @time 6000
   461 jump *label89 always
   462 label *label88
   463 op lessThan *tmp185 :total_battery :commit_level
 
   518 control enabled diode3 .OUTPUT_3
   519 control enabled generator1 .GENERATOR
   520 control enabled generator2 .GENERATOR
-    * op equal *tmp201 .MODE 1
-    * set :startup *tmp201
+  521 op equal :startup .MODE 1
   522 set :reactors 0
   523 set :boosts 0
   524 set :enabled true
   525 set :n .START
   526 label *label102
   527 jump *label104 greaterThanEq :n @links
-    * getlink *tmp202 :n
-    * set :block *tmp202
+  528 getlink :block :n
   529 sensor *tmp204 :block @type
   530 jump *label107 equal *tmp204 @impact-reactor
   531 jump *label106 always
   532 label *label107
   533 op add :reactors :reactors 1
-    * op lessThanEq *tmp206 :reactors .REACTORS_ON
-    * set :enabled *tmp206
-    * set *tmp207 :block
-    * control enabled *tmp207 :enabled
+  534 op lessThanEq :enabled :reactors .REACTORS_ON
+  535 control enabled :block :enabled
   536 jump *label108 equal :enabled false
   537 sensor *tmp210 :block @timescale
   538 op add :boosts :boosts *tmp210
 
   545 jump *label111 equal *tmp204 @overdrive-dome
   546 jump *label110 always
   547 label *label111
-    * set *tmp211 :block
-    * control enabled *tmp211 .OVERDRIVE
+  548 control enabled :block .OVERDRIVE
   549 jump *label105 always
   550 label *label110
   551 jump *label113 equal *tmp204 @conduit
 
   557 jump *label113 equal *tmp204 @armored-conveyor
   558 jump *label112 always
   559 label *label113
-    * set *tmp213 :block
-    * control enabled *tmp213 :startup
+  560 control enabled :block :startup
   561 jump *label105 always
   562 label *label112
   563 label *label105
 
   577 jump *label115 always
   578 label *label114
   579 label *label115
-    * op min *tmp222 .REACTORS_ON :reactors
-    * set .REACTORS_ON *tmp222
+  580 op min .REACTORS_ON .REACTORS_ON :reactors
   581 op equal *tmp223 cell1 null
   582 jump *label116 equal *tmp223 false
   583 set .STARTUPS 0

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    73 set :nextStart 0
    74 op add :nextDecommit @time 6000
    75 label *label15
-    * jump *label17 equal true false
    76 sensor *tmp26 battery1 @totalPower
    77 op floor :battery_level *tmp26
    78 op idiv :battery_level_str :battery_level 1000

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-11 instructions):
 
    17 print :block
    18 print "\n"
    19 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @impact-reactor
-    * jump *label7 always
+   20 jump *label7 notEqual *tmp5 @impact-reactor
    21 label *label8
    22 set .START :n
    23 op add :reactors :reactors 1
    24 jump *label6 always
    25 label *label7
    26 jump *label10 equal *tmp5 @overdrive-projector
-    * jump *label10 equal *tmp5 @overdrive-dome
-    * jump *label9 always
+   27 jump *label9 notEqual *tmp5 @overdrive-dome
    28 label *label10
    29 set .START :n
    30 jump *label6 always
 
   130 jump *label19 always
   131 label *label18
   132 label *label19
-    * jump *label28 equal .MODE 0
-    * jump *label27 always
+  133 jump *label27 notEqual .MODE 0
   134 label *label28
   135 set *tmp62 "[salmon]SHUTDOWN[]"
   136 jump *label26 always
   137 label *label27
-    * jump *label30 equal .MODE 1
-    * jump *label29 always
+  138 jump *label29 notEqual .MODE 1
   139 label *label30
   140 set *tmp62 "[gold]STARTUP[]"
   141 jump *label26 always
   142 label *label29
-    * jump *label32 equal .MODE 2
-    * jump *label31 always
+  143 jump *label31 notEqual .MODE 2
   144 label *label32
   145 set *tmp62 "[green]RUNNING[]"
   146 jump *label26 always
 
   217 print :net_power
   218 print "["
   219 print "]"
-    * jump *label43 equal .MODE 0
-    * jump *label42 always
+  220 jump *label42 notEqual .MODE 0
   221 label *label43
   222 set .REACTORS_ON 0
   223 set .OVERDRIVE 0
 
   243 label *label45
   244 jump *label41 always
   245 label *label42
-    * jump *label47 equal .MODE 1
-    * jump *label46 always
+  246 jump *label46 notEqual .MODE 1
   247 label *label47
   248 jump *label48 equal .OUTPUT_1 false
   249 jump *label50 equal .OUTPUT_2 false
 
   358 label *label53
   359 jump *label41 always
   360 label *label46
-    * jump *label73 equal .MODE 2
-    * jump *label72 always
+  361 jump *label72 notEqual .MODE 2
   362 label *label73
   363 sensor *tmp131 tank1 @totalLiquids
   364 op lessThan *tmp132 *tmp131 750
 
   518 jump *label104 greaterThanEq :n @links
   519 getlink :block :n
   520 sensor *tmp204 :block @type
-    * jump *label107 equal *tmp204 @impact-reactor
-    * jump *label106 always
+  521 jump *label106 notEqual *tmp204 @impact-reactor
   522 label *label107
   523 op add :reactors :reactors 1
   524 op lessThanEq :enabled :reactors .REACTORS_ON
 
   532 jump *label105 always
   533 label *label106
   534 jump *label111 equal *tmp204 @overdrive-projector
-    * jump *label111 equal *tmp204 @overdrive-dome
-    * jump *label110 always
+  535 jump *label110 notEqual *tmp204 @overdrive-dome
   536 label *label111
   537 control enabled :block .OVERDRIVE
   538 jump *label105 always
 
   543 jump *label113 equal *tmp204 @conveyor
   544 jump *label113 equal *tmp204 @titanium-conveyor
   545 jump *label113 equal *tmp204 @plastanium-conveyor
-    * jump *label113 equal *tmp204 @armored-conveyor
-    * jump *label112 always
+  546 jump *label112 notEqual *tmp204 @armored-conveyor
   547 label *label113
   548 control enabled :block :startup
   549 jump *label105 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-25 instructions):
 
     4 set .COOLANT_FLAG .FUEL_FLAG
     5 set :reactors 0
     6 label *label0
-    * op equal *tmp0 :reactors 0
-    * jump *label2 equal *tmp0 false
+    7 jump *label2 notEqual :reactors 0
     8 set :reactors 0
     9 set :n @links
    10 label *label3
-    * op greaterThan *tmp2 :n 0
-    * jump *label5 equal *tmp2 false
+   11 jump *label5 lessThanEq :n 0
    12 op sub :n :n 1
    13 getlink :block :n
    14 print "Found: "
 
    33 label *label5
    34 read *tmp7 cell2 1
    35 op add :reactors :reactors *tmp7
-    * op equal *tmp8 :reactors 0
-    * jump *label11 equal *tmp8 false
+   36 jump *label11 notEqual :reactors 0
    37 print "No reactor."
    38 jump *label12 always
    39 label *label11
 
    54 read .RESETS cell1 9
    55 read .COMMITS cell1 10
    56 set :reactors .REACTORS_ON
-    * op equal *tmp21 .MODE 0
-    * jump *label13 equal *tmp21 false
+   57 jump *label13 notEqual .MODE 0
    58 set .REASON "Processor reset"
    59 jump *label14 always
    60 label *label13
 
    84 op sub *tmp40 :required_capacity :total_capacity
    85 op div *tmp41 *tmp40 1000
    86 op ceil :missing_battery *tmp41
-    * op notEqual *tmp43 .MODE 0
-    * jump *label18 equal *tmp43 false
+   87 jump *label18 equal .MODE 0
    88 sensor *tmp45 switch1 @enabled
-    * op equal *tmp46 *tmp45 false
-    * jump *label20 equal *tmp46 false
+   89 jump *label20 notEqual *tmp45 false
    90 set .MODE 0
    91 set .REASON "Manual power off"
    92 jump *label21 always
 
   103 op add :failure_cnt :failure_cnt 1
   104 read *tmp57 cell2 1
   105 op add *tmp58 10 *tmp57
-    * op greaterThan *tmp59 :failure_cnt *tmp58
-    * jump *label24 equal *tmp59 false
+  106 jump *label24 lessThanEq :failure_cnt *tmp58
   107 set .MODE 0
   108 control enabled switch1 false
   109 set .REASON "Unknown -- out of power?"
 
   163 label *label34
   164 print "\n=================================="
   165 sensor *tmp70 tank1 @totalLiquids
-    * op lessThan *tmp71 *tmp70 750
-    * jump *label35 equal *tmp71 false
+  166 jump *label35 greaterThanEq *tmp70 750
   167 print "\n[salmon]Cryofluid level critical![]"
   168 jump *label36 always
   169 label *label35
   170 label *label36
   171 sensor *tmp73 vault1 @blast-compound
-    * op lessThan *tmp74 *tmp73 700
-    * jump *label37 equal *tmp74 false
+  172 jump *label37 greaterThanEq *tmp73 700
   173 print "\n[salmon]Blast compound level critical![]"
   174 jump *label38 always
   175 label *label37
   176 label *label38
-    * op equal *tmp76 :enough_battery false
-    * jump *label39 equal *tmp76 false
+  177 jump *label39 notEqual :enough_battery false
   178 print "\n[salmon]Insufficient battery storage![]"
   179 print "\n"
   180 print "Link [gold]"
 
   252 op mul *tmp88 *tmp87 1.05
   253 op floor *tmp89 *tmp88
   254 op max :neededPower *tmp89 1000
-    * op equal *tmp91 .REACTORS_ON 0
-    * jump *label52 equal *tmp91 false
-    * op greaterThanEq *tmp93 :total_battery 25000
-    * jump *label54 equal *tmp93 false
+  255 jump *label52 notEqual .REACTORS_ON 0
+  256 jump *label54 lessThan :total_battery 25000
   257 set .REACTORS_ON 1
   258 op add :nextStart @time 2000
   259 jump *label55 always
 
   271 print :outputs
   272 print "["
   273 print "] surge tower(s) online"
-    * op equal *tmp98 .OUTPUT_3 0
-    * jump *label56 equal *tmp98 false
+  274 jump *label56 notEqual .OUTPUT_3 0
   275 print "\n"
   276 print "Required power level: [gold]"
   277 print :neededPower
 
   280 jump *label57 always
   281 label *label56
   282 label *label57
-    * op greaterThan *tmp100 :net_power 100
-    * jump *label58 equal *tmp100 false
+  283 jump *label58 lessThanEq :net_power 100
   284 set .OVERDRIVE true
   285 jump *label59 always
   286 label *label58
 
   290 op land *tmp104 *tmp102 *tmp103
   291 op greaterThanEq *tmp105 :total_battery 25000
   292 op land :canStart *tmp104 *tmp105
-    * op greaterThanEq *tmp107 :net_power :neededPower
-    * jump *label60 equal *tmp107 false
+  293 jump *label60 lessThan :net_power :neededPower
   294 set .OUTPUT_3 .OUTPUT_2
   295 set .OUTPUT_2 .OUTPUT_1
   296 set .OUTPUT_1 1
   297 jump *label61 always
   298 label *label60
   299 label *label61
-    * op equal *tmp109 .OUTPUT_1 0
-    * jump *label62 equal *tmp109 false
+  300 jump *label62 notEqual .OUTPUT_1 0
   301 op mul :availablePower 6300 :boosts
   302 op div :ratio :neededPower :availablePower
-    * op lessThan *tmp113 :ratio 1
-    * jump *label64 equal *tmp113 false
+  303 jump *label64 greaterThanEq :ratio 1
   304 op add :nextStart @time 2000
   305 jump *label65 always
   306 label *label64
 
   392 jump *label81 always
   393 label *label80
   394 label *label81
-    * op equal *tmp164 :commit_level 0
-    * jump *label82 equal *tmp164 false
+  395 jump *label82 notEqual :commit_level 0
   396 op idiv *tmp166 :min_level 1000
   397 print "\nRestart threshold: [gold]"
   398 print *tmp166
 
   420 jump *label87 always
   421 label *label86
   422 label *label87
-    * op greaterThan *tmp179 @time :nextDecommit
-    * jump *label88 equal *tmp179 false
+  423 jump *label88 lessThanEq @time :nextDecommit
   424 jump *label90 equal .OVERDRIVE false
   425 set .OVERDRIVE false
   426 jump *label91 always
 
   432 op add :nextDecommit @time 6000
   433 jump *label89 always
   434 label *label88
-    * op lessThan *tmp185 :total_battery :commit_level
-    * jump *label92 equal *tmp185 false
+  435 jump *label92 greaterThanEq :total_battery :commit_level
   436 op add .REACTORS_ON .REACTORS_ON 1
   437 op add .COMMITS .COMMITS 1
   438 set .CAN_COMMIT false
 
   454 set .OVERDRIVE true
   455 label *label79
   456 op mul *tmp189 PLANT_PROTECTION 47500
-    * op lessThan *tmp190 :total_battery *tmp189
-    * jump *label96 equal *tmp190 false
+  457 jump *label96 greaterThanEq :total_battery *tmp189
   458 set .OUTPUT_2 0
   459 set .OUTPUT_3 0
   460 jump *label97 always
   461 label *label96
   462 label *label97
-    * op equal *tmp192 .OUTPUT_2 0
-    * jump *label98 equal *tmp192 false
-    * op greaterThan *tmp194 :total_battery 47500
-    * jump *label100 equal *tmp194 false
+  463 jump *label98 notEqual .OUTPUT_2 0
+  464 jump *label100 lessThanEq :total_battery 47500
   465 set .OUTPUT_2 1
   466 set .OUTPUT_3 1
   467 jump *label101 always
 
   530 op add :n :n 1
   531 jump *label102 always
   532 label *label104
-    * op notEqual *tmp215 cell2 null
-    * jump *label114 equal *tmp215 false
+  533 jump *label114 equal cell2 null
   534 write :reactors cell2 0
   535 write .REACTORS_ON cell2 2
   536 write .OVERDRIVE cell2 3
 
   542 label *label114
   543 label *label115
   544 op min .REACTORS_ON .REACTORS_ON :reactors
-    * op equal *tmp223 cell1 null
-    * jump *label116 equal *tmp223 false
+  545 jump *label116 notEqual cell1 null
   546 set .STARTUPS 0
   547 set .RESETS 0
   548 set .COMMITS 0

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-28 instructions):
 
    25 jump *label9 notEqual *tmp5 @overdrive-dome
    26 label *label10
    27 set .START :n
-    * jump *label6 always
    28 label *label9
    29 label *label6
    30 label *label4
 
    34 op add :reactors :reactors *tmp7
    35 jump *label11 notEqual :reactors 0
    36 print "No reactor."
-    * jump *label12 always
    37 label *label11
    38 label *label12
    39 printflush message1
 
   110 print "\nMin. consumption: "
   111 print :min_consumption
   112 printflush message2
-    * jump *label25 always
   113 label *label24
   114 label *label25
   115 jump *label23 always
 
   117 set :failure_cnt 0
   118 label *label23
   119 label *label21
-    * jump *label19 always
   120 label *label18
   121 label *label19
   122 jump *label27 notEqual .MODE 0
 
   154 print " ([gold]"
   155 print :multiplier
   156 print "x[])"
-    * jump *label34 always
   157 label *label33
   158 label *label34
   159 print "\n=================================="
   160 sensor *tmp70 tank1 @totalLiquids
   161 jump *label35 greaterThanEq *tmp70 750
   162 print "\n[salmon]Cryofluid level critical![]"
-    * jump *label36 always
   163 label *label35
   164 label *label36
   165 sensor *tmp73 vault1 @blast-compound
   166 jump *label37 greaterThanEq *tmp73 700
   167 print "\n[salmon]Blast compound level critical![]"
-    * jump *label38 always
   168 label *label37
   169 label *label38
   170 jump *label39 notEqual :enough_battery false
 
   174 print :missing_battery
   175 print " "
   176 print "K[] of additional storage to internal battery."
-    * jump *label40 always
   177 label *label39
   178 label *label40
   179 print "\n"
 
   220 set :failure_cnt 0
   221 set .GENERATOR true
   222 set .REASON "Unknown -- out of power?"
-    * jump *label45 always
   223 label *label44
   224 label *label45
   225 jump *label41 always
 
   268 print :neededPower
   269 print "["
   270 print "]"
-    * jump *label57 always
   271 label *label56
   272 label *label57
   273 jump *label58 lessThanEq :net_power 100
   274 set .OVERDRIVE true
-    * jump *label59 always
   275 label *label58
   276 label *label59
   277 op lessThan *tmp102 .REACTORS_ON :reactors
 
   283 set .OUTPUT_3 .OUTPUT_2
   284 set .OUTPUT_2 .OUTPUT_1
   285 set .OUTPUT_1 1
-    * jump *label61 always
   286 label *label60
   287 label *label61
   288 jump *label62 notEqual .OUTPUT_1 0
 
   290 op div :ratio :neededPower :availablePower
   291 jump *label64 greaterThanEq :ratio 1
   292 op add :nextStart @time 2000
-    * jump *label65 always
   293 label *label64
   294 label *label65
-    * jump *label63 always
   295 label *label62
   296 label *label63
   297 op greaterThan *tmp116 @time :nextStart
 
   307 op add *tmp121 .REACTORS_ON :start_at_once
   308 op min .REACTORS_ON *tmp121 :reactors
   309 op add :nextStart @time 2000
-    * jump *label67 always
   310 label *label66
   311 label *label67
   312 op greaterThanEq *tmp124 .REACTORS_ON :reactors
 
   320 set .COOLANT_FLAG 0
   321 set .FUEL_FLAG 0
   322 set .GENERATOR false
-    * jump *label71 always
   323 label *label70
   324 label *label71
   325 label *label53
 
   334 set .MODE 0
   335 control enabled switch1 false
   336 set .REASON "Cryo level too low"
-    * jump *label75 always
   337 label *label74
   338 label *label75
   339 sensor *tmp136 vault1 @blast-compound
 
   343 set .MODE 0
   344 control enabled switch1 false
   345 set .REASON "Blast compound level too low"
-    * jump *label77 always
   346 label *label76
   347 label *label77
   348 sensor *tmp141 tank1 @totalLiquids
 
   371 op idiv *tmp163 :commit_level 1000
   372 print "\nCommit threshold:   [gold]"
   373 print *tmp163
-    * jump *label81 always
   374 label *label80
   375 label *label81
   376 jump *label82 notEqual :commit_level 0
   377 op idiv *tmp166 :min_level 1000
   378 print "\nRestart threshold: [gold]"
   379 print *tmp166
-    * jump *label83 always
   380 label *label82
   381 label *label83
   382 print "[] K"
 
   397 op or *tmp176 *tmp174 *tmp175
   398 jump *label86 equal *tmp176 false
   399 op add :nextDecommit @time 6000
-    * jump *label87 always
   400 label *label86
   401 label *label87
   402 jump *label88 lessThanEq @time :nextDecommit
 
   415 op add .REACTORS_ON .REACTORS_ON 1
   416 op add .COMMITS .COMMITS 1
   417 set .CAN_COMMIT false
-    * jump *label93 always
   418 label *label92
   419 label *label93
   420 label *label89
 
   435 jump *label96 greaterThanEq :total_battery *tmp189
   436 set .OUTPUT_2 0
   437 set .OUTPUT_3 0
-    * jump *label97 always
   438 label *label96
   439 label *label97
   440 jump *label98 notEqual .OUTPUT_2 0
 
   445 label *label100
   446 print "\n*** [gold]Surge tower 2 offline[] ***"
   447 label *label101
-    * jump *label99 always
   448 label *label98
   449 label *label99
-    * jump *label41 always
   450 label *label72
   451 label *label41
   452 print "\n"
 
   478 jump *label108 equal :enabled false
   479 sensor *tmp210 :block @timescale
   480 op add :boosts :boosts *tmp210
-    * jump *label109 always
   481 label *label108
   482 label *label109
   483 jump *label105 always
 
   497 jump *label112 notEqual *tmp204 @armored-conveyor
   498 label *label113
   499 control enabled :block :startup
-    * jump *label105 always
   500 label *label112
   501 label *label105
   502 label *label103
 
   511 op add :reactors :reactors *tmp220
   512 read *tmp221 cell2 4
   513 op add :boosts :boosts *tmp221
-    * jump *label115 always
   514 label *label114
   515 label *label115
   516 op min .REACTORS_ON .REACTORS_ON :reactors

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   240 label *label49
   241 set :nextBattery *tmp85
   242 sensor *tmp87 :nextBattery @powerNetOut
-    * op mul *tmp88 *tmp87 1.05
-    * op floor *tmp89 *tmp88
+  243 op idiv *tmp89 *tmp87 0.9523809523809523
   244 op max :neededPower *tmp89 1000
   245 jump *label52 notEqual .REACTORS_ON 0
   246 jump *label54 lessThan :total_battery 25000

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
     0 set PLANT_PROTECTION 1
     1 set FAST_START 1
     2 set .START 0
-    * set .FUEL_FLAG .START
-    * set .COOLANT_FLAG .FUEL_FLAG
+    3 set .FUEL_FLAG 0
+    4 set .COOLANT_FLAG .START
     5 set :reactors 0
     6 label *label0
     7 jump *label2 notEqual :reactors 0
 
   137 set *tmp62 null
   138 label *label26
   139 set .STR_MODE *tmp62
-    * print .STR_MODE
+  140 print *tmp62
   141 print ","
   142 print " reactors [green]"
   143 print .REACTORS_ON
 
   239 set *tmp85 battery2
   240 label *label49
   241 set :nextBattery *tmp85
-    * sensor *tmp87 :nextBattery @powerNetOut
+  242 sensor *tmp87 *tmp85 @powerNetOut
   243 op idiv *tmp89 *tmp87 0.9523809523809523
   244 op max :neededPower *tmp89 1000
   245 jump *label52 notEqual .REACTORS_ON 0
 
   303 set *tmp119 1
   304 label *label69
   305 set :start_at_once *tmp119
-    * op add *tmp121 .REACTORS_ON :start_at_once
+  306 op add *tmp121 .REACTORS_ON *tmp119
   307 op min .REACTORS_ON *tmp121 :reactors
   308 op add :nextStart @time 2000
   309 label *label66
 
   353 sensor *tmp147 switch2 @enabled
   354 op land *tmp148 :enough_battery *tmp147
   355 jump *label78 equal *tmp148 false
-    * op mul :min_level 0.5 :required_capacity
+  356 op mul :min_level :reactors 50000
   357 set :commit_level 0
   358 op lessThan *tmp151 :battery_change 0
   359 op land *tmp152 .CAN_COMMIT *tmp151
 
   361 op land *tmp154 *tmp152 *tmp153
   362 jump *label80 equal *tmp154 false
   363 op sub *tmp156 :battery_change 1500
-    * op sub :p *tmp156 1000
+  364 op sub :p :battery_change 2500
   365 op mul *tmp158 :p 0.00472972972972973
   366 op add *tmp159 -5 *tmp158
   367 op mul *tmp160 :p *tmp159
 
   463 op equal :startup .MODE 1
   464 set :reactors 0
   465 set :boosts 0
-    * set :enabled true
   466 set :n .START
   467 label *label102
   468 jump *label104 greaterThanEq :n @links

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
     1 set FAST_START 1
     2 set .START 0
     3 set .FUEL_FLAG 0
-    * set .COOLANT_FLAG .START
+    4 set .COOLANT_FLAG 0
     5 set :reactors 0
     6 label *label0
     7 jump *label2 notEqual :reactors 0
 
   136 label *label31
   137 set *tmp62 null
   138 label *label26
-    * set .STR_MODE *tmp62
   139 print *tmp62
   140 print ","
   141 print " reactors [green]"
 
   237 label *label48
   238 set *tmp85 battery2
   239 label *label49
-    * set :nextBattery *tmp85
   240 sensor *tmp87 *tmp85 @powerNetOut
   241 op idiv *tmp89 *tmp87 0.9523809523809523
   242 op max :neededPower *tmp89 1000
 
   300 label *label68
   301 set *tmp119 1
   302 label *label69
-    * set :start_at_once *tmp119
   303 op add *tmp121 .REACTORS_ON *tmp119
   304 op min .REACTORS_ON *tmp121 :reactors
   305 op add :nextStart @time 2000
 
   357 op lessThan *tmp153 .REACTORS_ON :reactors
   358 op land *tmp154 *tmp152 *tmp153
   359 jump *label80 equal *tmp154 false
-    * op sub *tmp156 :battery_change 1500
   360 op sub :p :battery_change 2500
   361 op mul *tmp158 :p 0.00472972972972973
   362 op add *tmp159 -5 *tmp158

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     4 set .COOLANT_FLAG 0
     5 set :reactors 0
     6 label *label0
-    * jump *label2 notEqual :reactors 0
+    7 label *label118
     8 set :reactors 0
     9 set :n @links
    10 label *label3
    11 jump *label5 lessThanEq :n 0
+   12 label *label119
    13 op sub :n :n 1
    14 getlink :block :n
    15 print "Found: "
 
    29 label *label9
    30 label *label6
    31 label *label4
-    * jump *label3 always
+   32 jump *label119 greaterThan :n 0
    33 label *label5
    34 read *tmp7 cell2 1
    35 op add :reactors :reactors *tmp7
 
    39 label *label12
    40 printflush message1
    41 label *label1
-    * jump *label0 always
+   42 jump *label118 equal :reactors 0
    43 label *label2
    44 read .MODE cell1 0
    45 read .OUTPUT_1 cell1 1
 
   463 set :n .START
   464 label *label102
   465 jump *label104 greaterThanEq :n @links
+  466 label *label120
   467 getlink :block :n
   468 sensor *tmp204 :block @type
   469 jump *label106 notEqual *tmp204 @impact-reactor
 
   497 label *label105
   498 label *label103
   499 op add :n :n 1
-    * jump *label102 always
+  500 jump *label120 lessThan :n @links
   501 label *label104
   502 jump *label114 equal cell2 null
   503 write :reactors cell2 0

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
    53 read .RESETS cell1 9
    54 read .COMMITS cell1 10
    55 set :reactors .REACTORS_ON
-    * jump *label13 notEqual .MODE 0
+   56 set .REASON "Reason unknown -- out of power?"
+   57 jump *label14 notEqual .MODE 0
    58 set .REASON "Processor reset"
    59 jump *label14 always
-    * label *label13
-    * set .REASON "Reason unknown -- out of power?"
    60 label *label14
    61 op notEqual *tmp24 .MODE 0
    62 control enabled switch1 *tmp24
 
   227 label *label47
   228 jump *label48 equal .OUTPUT_1 false
   229 jump *label50 equal .OUTPUT_2 false
-    * set *tmp86 battery4
+  230 sensor *tmp87 battery4 @powerNetOut
   231 jump *label51 always
   232 label *label50
-    * set *tmp86 battery3
+  233 sensor *tmp87 battery3 @powerNetOut
   234 label *label51
-    * set *tmp85 *tmp86
   235 jump *label49 always
   236 label *label48
-    * set *tmp85 battery2
+  237 sensor *tmp87 battery2 @powerNetOut
   238 label *label49
-    * sensor *tmp87 *tmp85 @powerNetOut
   239 op idiv *tmp89 *tmp87 0.9523809523809523
   240 op max :neededPower *tmp89 1000
   241 jump *label52 notEqual .REACTORS_ON 0
 
   292 op greaterThan *tmp116 @time :nextStart
   293 op land *tmp117 :canStart *tmp116
   294 jump *label66 equal *tmp117 false
-    * jump *label68 equal FAST_START false
+  295 set *tmp119 1
+  296 jump *label69 equal FAST_START false
   297 op idiv *tmp119 :total_battery 25000
   298 jump *label69 always
-    * label *label68
-    * set *tmp119 1
   299 label *label69
   300 op add *tmp121 .REACTORS_ON *tmp119
   301 op min .REACTORS_ON *tmp121 :reactors

Modifications by Convert case at line 419:9 (segments: 1, zero based) (+76 instructions):
 
   462 label *label120
   463 getlink :block :n
   464 sensor *tmp204 :block @type
-    * jump *label106 notEqual *tmp204 @impact-reactor
+  465 sensor *tmp225 *tmp204 @id
+  466 jump *label121 greaterThanEq *tmp225 83
+  467 multijump *label122 *tmp225 0 (m:*label205)
+  468 multilabel *label122 (m:*label205)
+  469 jump *label121 always
+  470 multilabel *label123 (m:*label205)
+  471 jump *label121 always
+  472 multilabel *label124 (m:*label205)
+  473 jump *label121 always
+  474 multilabel *label125 (m:*label205)
+  475 jump *label121 always
+  476 multilabel *label126 (m:*label205)
+  477 jump *label121 always
+  478 multilabel *label127 (m:*label205)
+  479 jump *label121 always
+  480 multilabel *label128 (m:*label205)
+  481 jump *label121 always
+  482 multilabel *label129 (m:*label205)
+  483 jump *label121 always
+  484 multilabel *label130 (m:*label205)
+  485 jump *label121 always
+  486 multilabel *label131 (m:*label205)
+  487 jump *label121 always
+  488 multilabel *label132 (m:*label205)
+  489 jump *label121 always
+  490 multilabel *label133 (m:*label205)
+  491 jump *label121 always
+  492 multilabel *label134 (m:*label205)
+  493 jump *label121 always
+  494 multilabel *label135 (m:*label205)
+  495 jump *label121 always
+  496 multilabel *label136 (m:*label205)
+  497 jump *label121 always
+  498 multilabel *label137 (m:*label205)
+  499 jump *label121 always
+  500 multilabel *label138 (m:*label205)
+  501 jump *label121 always
+  502 multilabel *label139 (m:*label205)
+  503 jump *label121 always
+  504 multilabel *label140 (m:*label205)
+  505 jump *label121 always
+  506 multilabel *label141 (m:*label205)
+  507 jump *label121 always
+  508 multilabel *label142 (m:*label205)
+  509 jump *label121 always
+  510 multilabel *label143 (m:*label205)
+  511 jump *label121 always
+  512 multilabel *label144 (m:*label205)
+  513 jump *label121 always
+  514 multilabel *label145 (m:*label205)
+  515 jump *label121 always
+  516 multilabel *label146 (m:*label205)
+  517 jump *label121 always
+  518 multilabel *label147 (m:*label205)
+  519 jump *label121 always
+  520 multilabel *label148 (m:*label205)
+  521 jump *label121 always
+  522 multilabel *label149 (m:*label205)
+  523 jump *label121 always
+  524 multilabel *label150 (m:*label205)
+  525 jump *label121 always
+  526 multilabel *label151 (m:*label205)
+  527 jump *label121 always
+  528 multilabel *label152 (m:*label205)
+  529 jump *label121 always
+  530 multilabel *label153 (m:*label205)
+  531 jump *label121 always
+  532 multilabel *label154 (m:*label205)
+  533 jump *label121 always
+  534 multilabel *label155 (m:*label205)
+  535 jump *label121 always
+  536 multilabel *label156 (m:*label205)
+  537 jump *label121 always
+  538 multilabel *label157 (m:*label205)
+  539 jump *label121 always
+  540 multilabel *label158 (m:*label205)
+  541 jump *label121 always
+  542 multilabel *label159 (m:*label205)
+  543 jump *label111 always
+  544 multilabel *label160 (m:*label205)
+  545 jump *label111 always
+  546 multilabel *label161 (m:*label205)
+  547 jump *label121 always
+  548 multilabel *label162 (m:*label205)
+  549 jump *label121 always
+  550 multilabel *label163 (m:*label205)
+  551 jump *label113 always
+  552 multilabel *label164 (m:*label205)
+  553 jump *label113 always
+  554 multilabel *label165 (m:*label205)
+  555 jump *label113 always
+  556 multilabel *label166 (m:*label205)
+  557 jump *label113 always
+  558 multilabel *label167 (m:*label205)
+  559 jump *label121 always
+  560 multilabel *label168 (m:*label205)
+  561 jump *label121 always
+  562 multilabel *label169 (m:*label205)
+  563 jump *label121 always
+  564 multilabel *label170 (m:*label205)
+  565 jump *label121 always
+  566 multilabel *label171 (m:*label205)
+  567 jump *label121 always
+  568 multilabel *label172 (m:*label205)
+  569 jump *label121 always
+  570 multilabel *label173 (m:*label205)
+  571 jump *label121 always
+  572 multilabel *label174 (m:*label205)
+  573 jump *label121 always
+  574 multilabel *label175 (m:*label205)
+  575 jump *label121 always
+  576 multilabel *label176 (m:*label205)
+  577 jump *label121 always
+  578 multilabel *label177 (m:*label205)
+  579 jump *label121 always
+  580 multilabel *label178 (m:*label205)
+  581 jump *label121 always
+  582 multilabel *label179 (m:*label205)
+  583 jump *label121 always
+  584 multilabel *label180 (m:*label205)
+  585 jump *label121 always
+  586 multilabel *label181 (m:*label205)
+  587 jump *label121 always
+  588 multilabel *label182 (m:*label205)
+  589 jump *label113 always
+  590 multilabel *label183 (m:*label205)
+  591 jump *label113 always
+  592 multilabel *label184 (m:*label205)
+  593 jump *label113 always
+  594 multilabel *label185 (m:*label205)
+  595 jump *label121 always
+  596 multilabel *label186 (m:*label205)
+  597 jump *label121 always
+  598 multilabel *label187 (m:*label205)
+  599 jump *label121 always
+  600 multilabel *label188 (m:*label205)
+  601 jump *label121 always
+  602 multilabel *label189 (m:*label205)
+  603 jump *label121 always
+  604 multilabel *label190 (m:*label205)
+  605 jump *label121 always
+  606 multilabel *label191 (m:*label205)
+  607 jump *label121 always
+  608 multilabel *label192 (m:*label205)
+  609 jump *label121 always
+  610 multilabel *label193 (m:*label205)
+  611 jump *label121 always
+  612 multilabel *label194 (m:*label205)
+  613 jump *label121 always
+  614 multilabel *label195 (m:*label205)
+  615 jump *label121 always
+  616 multilabel *label196 (m:*label205)
+  617 jump *label121 always
+  618 multilabel *label197 (m:*label205)
+  619 jump *label121 always
+  620 multilabel *label198 (m:*label205)
+  621 jump *label121 always
+  622 multilabel *label199 (m:*label205)
+  623 jump *label121 always
+  624 multilabel *label200 (m:*label205)
+  625 jump *label121 always
+  626 multilabel *label201 (m:*label205)
+  627 jump *label121 always
+  628 multilabel *label202 (m:*label205)
+  629 jump *label121 always
+  630 multilabel *label203 (m:*label205)
+  631 jump *label121 always
+  632 multilabel *label204 (m:*label205)
+  633 jump *label107 always
   634 label *label107
   635 op add :reactors :reactors 1
   636 op lessThanEq :enabled :reactors .REACTORS_ON
 
   642 label *label109
   643 jump *label105 always
   644 label *label106
-    * jump *label111 equal *tmp204 @overdrive-projector
-    * jump *label110 notEqual *tmp204 @overdrive-dome
   645 label *label111
   646 control enabled :block .OVERDRIVE
   647 jump *label105 always
   648 label *label110
-    * jump *label113 equal *tmp204 @conduit
-    * jump *label113 equal *tmp204 @pulse-conduit
-    * jump *label113 equal *tmp204 @plated-conduit
-    * jump *label113 equal *tmp204 @conveyor
-    * jump *label113 equal *tmp204 @titanium-conveyor
-    * jump *label113 equal *tmp204 @plastanium-conveyor
-    * jump *label112 notEqual *tmp204 @armored-conveyor
   649 label *label113
   650 control enabled :block :startup
   651 label *label112
+  652 label *label121
   653 label *label105
   654 label *label103
   655 op add :n :n 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     2 set .START 0
     3 set .FUEL_FLAG 0
     4 set .COOLANT_FLAG 0
-    * set :reactors 0
     5 label *label0
     6 label *label118
     7 set :reactors 0
 
   457 set :boosts 0
   458 set :n .START
   459 label *label102
-    * jump *label104 greaterThanEq :n @links
+  460 jump *label104 greaterThanEq .START @links
   461 label *label120
   462 getlink :block :n
   463 sensor *tmp204 :block @type

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
    55 set .REASON "Reason unknown -- out of power?"
    56 jump *label14 notEqual .MODE 0
    57 set .REASON "Processor reset"
-    * jump *label14 always
    58 label *label14
    59 op notEqual *tmp24 .MODE 0
    60 control enabled switch1 *tmp24
 
   293 set *tmp119 1
   294 jump *label69 equal FAST_START false
   295 op idiv *tmp119 :total_battery 25000
-    * jump *label69 always
   296 label *label69
   297 op add *tmp121 .REACTORS_ON *tmp119
   298 op min .REACTORS_ON *tmp121 :reactors
 
   627 multilabel *label203 (m:*label205)
   628 jump *label121 always
   629 multilabel *label204 (m:*label205)
-    * jump *label107 always
   630 label *label107
   631 op add :reactors :reactors 1
   632 op lessThanEq :enabled :reactors .REACTORS_ON

Modifications by Iterated phase, If Expression Optimization, pass 2, iteration 1:
 
   224 jump *label46 notEqual .MODE 1
   225 label *label47
   226 jump *label48 equal .OUTPUT_1 false
-    * jump *label50 equal .OUTPUT_2 false
+  227 sensor *tmp87 battery3 @powerNetOut
+  228 jump *label51 equal .OUTPUT_2 false
   229 sensor *tmp87 battery4 @powerNetOut
   230 jump *label51 always
-    * label *label50
-    * sensor *tmp87 battery3 @powerNetOut
   231 label *label51
   232 jump *label49 always
   233 label *label48

Modifications by Iterated phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   227 sensor *tmp87 battery3 @powerNetOut
   228 jump *label51 equal .OUTPUT_2 false
   229 sensor *tmp87 battery4 @powerNetOut
-    * jump *label51 always
   230 label *label51
   231 jump *label49 always
   232 label *label48

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     2 set .START 0
     3 set .FUEL_FLAG 0
     4 set .COOLANT_FLAG 0
-    * label *label0
     5 label *label118
     6 set :reactors 0
     7 set :n @links
-    * label *label3
     8 jump *label5 lessThanEq :n 0
     9 label *label119
    10 op sub :n :n 1
 
    14 print "\n"
    15 sensor *tmp5 :block @type
    16 jump *label7 notEqual *tmp5 @impact-reactor
-    * label *label8
    17 set .START :n
    18 op add :reactors :reactors 1
    19 jump *label6 always
 
    24 set .START :n
    25 label *label9
    26 label *label6
-    * label *label4
    27 jump *label119 greaterThan :n 0
    28 label *label5
    29 read *tmp7 cell2 1
 
    31 jump *label11 notEqual :reactors 0
    32 print "No reactor."
    33 label *label11
-    * label *label12
    34 printflush message1
-    * label *label1
    35 jump *label118 equal :reactors 0
-    * label *label2
    36 read .MODE cell1 0
    37 read .OUTPUT_1 cell1 1
    38 read .OUTPUT_2 cell1 2
 
   102 print :min_consumption
   103 printflush message2
   104 label *label24
-    * label *label25
   105 jump *label23 always
   106 label *label22
   107 set :failure_cnt 0
   108 label *label23
   109 label *label21
   110 label *label18
-    * label *label19
   111 jump *label27 notEqual .MODE 0
-    * label *label28
   112 set *tmp62 "[salmon]SHUTDOWN[]"
   113 jump *label26 always
   114 label *label27
   115 jump *label29 notEqual .MODE 1
-    * label *label30
   116 set *tmp62 "[gold]STARTUP[]"
   117 jump *label26 always
   118 label *label29
   119 jump *label31 notEqual .MODE 2
-    * label *label32
   120 set *tmp62 "[green]RUNNING[]"
   121 jump *label26 always
   122 label *label31
 
   140 print :multiplier
   141 print "x[])"
   142 label *label33
-    * label *label34
   143 print "\n=================================="
   144 sensor *tmp70 tank1 @totalLiquids
   145 jump *label35 greaterThanEq *tmp70 750
   146 print "\n[salmon]Cryofluid level critical![]"
   147 label *label35
-    * label *label36
   148 sensor *tmp73 vault1 @blast-compound
   149 jump *label37 greaterThanEq *tmp73 700
   150 print "\n[salmon]Blast compound level critical![]"
   151 label *label37
-    * label *label38
   152 jump *label39 notEqual :enough_battery false
   153 print "\n[salmon]Insufficient battery storage![]"
   154 print "\n"
 
   157 print " "
   158 print "K[] of additional storage to internal battery."
   159 label *label39
-    * label *label40
   160 print "\n"
   161 print "Internal battery:    [gold]"
   162 print :battery_level_str
 
   181 print "["
   182 print "]"
   183 jump *label42 notEqual .MODE 0
-    * label *label43
   184 set .REACTORS_ON 0
   185 set .OVERDRIVE 0
   186 set .OUTPUT_1 0
 
   201 set .GENERATOR true
   202 set .REASON "Unknown -- out of power?"
   203 label *label44
-    * label *label45
   204 jump *label41 always
   205 label *label42
   206 jump *label46 notEqual .MODE 1
-    * label *label47
   207 jump *label48 equal .OUTPUT_1 false
   208 sensor *tmp87 battery3 @powerNetOut
   209 jump *label51 equal .OUTPUT_2 false
 
   241 print "["
   242 print "]"
   243 label *label56
-    * label *label57
   244 jump *label58 lessThanEq :net_power 100
   245 set .OVERDRIVE true
   246 label *label58
-    * label *label59
   247 op lessThan *tmp102 .REACTORS_ON :reactors
   248 op greaterThan *tmp103 :net_power 1000
   249 op land *tmp104 *tmp102 *tmp103
 
   254 set .OUTPUT_2 .OUTPUT_1
   255 set .OUTPUT_1 1
   256 label *label60
-    * label *label61
   257 jump *label62 notEqual .OUTPUT_1 0
   258 op mul :availablePower 6300 :boosts
   259 op div :ratio :neededPower :availablePower
   260 jump *label64 greaterThanEq :ratio 1
   261 op add :nextStart @time 2000
   262 label *label64
-    * label *label65
   263 label *label62
-    * label *label63
   264 op greaterThan *tmp116 @time :nextStart
   265 op land *tmp117 :canStart *tmp116
   266 jump *label66 equal *tmp117 false
 
   272 op min .REACTORS_ON *tmp121 :reactors
   273 op add :nextStart @time 2000
   274 label *label66
-    * label *label67
   275 op greaterThanEq *tmp124 .REACTORS_ON :reactors
   276 op greaterThan *tmp125 @time :nextStart
   277 op land *tmp126 *tmp124 *tmp125
 
   284 set .FUEL_FLAG 0
   285 set .GENERATOR false
   286 label *label70
-    * label *label71
   287 label *label53
   288 jump *label41 always
   289 label *label46
   290 jump *label72 notEqual .MODE 2
-    * label *label73
   291 sensor *tmp131 tank1 @totalLiquids
   292 op lessThan *tmp132 *tmp131 750
   293 op land *tmp133 .COOLANT_FLAG *tmp132
 
   296 control enabled switch1 false
   297 set .REASON "Cryo level too low"
   298 label *label74
-    * label *label75
   299 sensor *tmp136 vault1 @blast-compound
   300 op lessThan *tmp137 *tmp136 700
   301 op land *tmp138 .FUEL_FLAG *tmp137
 
   304 control enabled switch1 false
   305 set .REASON "Blast compound level too low"
   306 label *label76
-    * label *label77
   307 sensor *tmp141 tank1 @totalLiquids
   308 op greaterThan *tmp142 *tmp141 1000
   309 op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
 
   330 print "\nCommit threshold:   [gold]"
   331 print *tmp163
   332 label *label80
-    * label *label81
   333 jump *label82 notEqual :commit_level 0
   334 op idiv *tmp166 :min_level 1000
   335 print "\nRestart threshold: [gold]"
   336 print *tmp166
   337 label *label82
-    * label *label83
   338 print "[] K"
   339 op lessThan *tmp167 :total_battery :min_level
   340 op mul *tmp168 .REACTORS_ON -2500
 
   354 jump *label86 equal *tmp176 false
   355 op add :nextDecommit @time 6000
   356 label *label86
-    * label *label87
   357 jump *label88 lessThanEq @time :nextDecommit
   358 jump *label90 equal .OVERDRIVE false
   359 set .OVERDRIVE false
 
   371 op add .COMMITS .COMMITS 1
   372 set .CAN_COMMIT false
   373 label *label92
-    * label *label93
   374 label *label89
   375 label *label85
   376 jump *label79 always
 
   390 set .OUTPUT_2 0
   391 set .OUTPUT_3 0
   392 label *label96
-    * label *label97
   393 jump *label98 notEqual .OUTPUT_2 0
   394 jump *label100 lessThanEq :total_battery 47500
   395 set .OUTPUT_2 1
 
   399 print "\n*** [gold]Surge tower 2 offline[] ***"
   400 label *label101
   401 label *label98
-    * label *label99
   402 label *label72
   403 label *label41
   404 print "\n"
 
   417 set :reactors 0
   418 set :boosts 0
   419 set :n .START
-    * label *label102
   420 jump *label104 greaterThanEq .START @links
   421 label *label120
   422 getlink :block :n
 
   589 multilabel *label203 (m:*label205)
   590 jump *label121 always
   591 multilabel *label204 (m:*label205)
-    * label *label107
   592 op add :reactors :reactors 1
   593 op lessThanEq :enabled :reactors .REACTORS_ON
   594 control enabled :block :enabled
 
   596 sensor *tmp210 :block @timescale
   597 op add :boosts :boosts *tmp210
   598 label *label108
-    * label *label109
   599 jump *label105 always
-    * label *label106
   600 label *label111
   601 control enabled :block .OVERDRIVE
   602 jump *label105 always
-    * label *label110
   603 label *label113
   604 control enabled :block :startup
-    * label *label112
   605 label *label121
   606 label *label105
-    * label *label103
   607 op add :n :n 1
   608 jump *label120 lessThan :n @links
   609 label *label104
 
   616 read *tmp221 cell2 4
   617 op add :boosts :boosts *tmp221
   618 label *label114
-    * label *label115
   619 op min .REACTORS_ON .REACTORS_ON :reactors
   620 jump *label116 notEqual cell1 null
   621 set .STARTUPS 0
 
   635 write .RESETS cell1 9
   636 write .COMMITS cell1 10
   637 label *label117
-    * label *label16
   638 jump *label15 always
-    * label *label17
   639 end

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
    92 op add :failure_cnt :failure_cnt 1
    93 read *tmp57 cell2 1
    94 op add *tmp58 10 *tmp57
-    * jump *label24 lessThanEq :failure_cnt *tmp58
+   95 jump *label23 lessThanEq :failure_cnt *tmp58
    96 set .MODE 0
    97 control enabled switch1 false
    98 set .REASON "Unknown -- out of power?"
 
   193 print .REASON
   194 print "[]"
   195 sensor *tmp83 switch1 @enabled
-    * jump *label44 equal *tmp83 false
+  196 jump *label41 equal *tmp83 false
   197 set .MODE 1
   198 op add .STARTUPS .STARTUPS 1
   199 set :nextStart 0
 
   206 jump *label46 notEqual .MODE 1
   207 jump *label48 equal .OUTPUT_1 false
   208 sensor *tmp87 battery3 @powerNetOut
-    * jump *label51 equal .OUTPUT_2 false
+  209 jump *label49 equal .OUTPUT_2 false
   210 sensor *tmp87 battery4 @powerNetOut
   211 label *label51
   212 jump *label49 always
 
   219 jump *label54 lessThan :total_battery 25000
   220 set .REACTORS_ON 1
   221 op add :nextStart @time 2000
-    * jump *label55 always
+  222 jump *label41 always
   223 label *label54
   224 print "\nRequired startup energy: [gold]"
   225 print 25
   226 print " K[]"
   227 label *label55
-    * jump *label53 always
+  228 jump *label41 always
   229 label *label52
   230 op add *tmp96 .OUTPUT_1 .OUTPUT_2
   231 op add :outputs *tmp96 .OUTPUT_3
 
   277 op land *tmp126 *tmp124 *tmp125
   278 op greaterThan *tmp127 .OUTPUT_3 0
   279 op land *tmp128 *tmp126 *tmp127
-    * jump *label70 equal *tmp128 false
+  280 jump *label41 equal *tmp128 false
   281 set .MODE 2
   282 op add :nextDecommit @time 6000
   283 set .COOLANT_FLAG 0
 
   346 set .OVERDRIVE true
   347 set .REACTORS_ON :reactors
   348 op add :nextDecommit @time 6000
-    * jump *label85 always
+  349 jump *label79 always
   350 label *label84
   351 op lessThan *tmp174 :battery_level 47500
   352 op lessThan *tmp175 :battery_change -100
 
   364 set .CAN_COMMIT true
   365 label *label91
   366 op add :nextDecommit @time 6000
-    * jump *label89 always
+  367 jump *label79 always
   368 label *label88
-    * jump *label92 greaterThanEq :total_battery :commit_level
+  369 jump *label79 greaterThanEq :total_battery :commit_level
   370 op add .REACTORS_ON .REACTORS_ON 1
   371 op add .COMMITS .COMMITS 1
   372 set .CAN_COMMIT false
 
   592 op add :reactors :reactors 1
   593 op lessThanEq :enabled :reactors .REACTORS_ON
   594 control enabled :block :enabled
-    * jump *label108 equal :enabled false
+  595 jump *label105 equal :enabled false
   596 sensor *tmp210 :block @timescale
   597 op add :boosts :boosts *tmp210
   598 label *label108
 
   621 set .STARTUPS 0
   622 set .RESETS 0
   623 set .COMMITS 0
-    * jump *label117 always
+  624 jump *label15 always
   625 label *label116
   626 write .MODE cell1 0
   627 write .OUTPUT_1 cell1 1

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-1 instructions):
 
   101 print "\nMin. consumption: "
   102 print :min_consumption
   103 printflush message2
-    * label *label24
   104 jump *label23 always
   105 label *label22
   106 set :failure_cnt 0
 
   199 set :failure_cnt 0
   200 set .GENERATOR true
   201 set .REASON "Unknown -- out of power?"
-    * label *label44
   202 jump *label41 always
   203 label *label42
   204 jump *label46 notEqual .MODE 1
 
   206 sensor *tmp87 battery3 @powerNetOut
   207 jump *label49 equal .OUTPUT_2 false
   208 sensor *tmp87 battery4 @powerNetOut
-    * label *label51
   209 jump *label49 always
   210 label *label48
   211 sensor *tmp87 battery2 @powerNetOut
 
   221 print "\nRequired startup energy: [gold]"
   222 print 25
   223 print " K[]"
-    * label *label55
   224 jump *label41 always
   225 label *label52
   226 op add *tmp96 .OUTPUT_1 .OUTPUT_2
 
   279 set .COOLANT_FLAG 0
   280 set .FUEL_FLAG 0
   281 set .GENERATOR false
-    * label *label70
-    * label *label53
   282 jump *label41 always
   283 label *label46
   284 jump *label72 notEqual .MODE 2
 
   364 op add .REACTORS_ON .REACTORS_ON 1
   365 op add .COMMITS .COMMITS 1
   366 set .CAN_COMMIT false
-    * label *label92
-    * label *label89
-    * label *label85
   367 jump *label79 always
   368 label *label78
   369 sensor *tmp187 switch2 @enabled
 
   586 jump *label105 equal :enabled false
   587 sensor *tmp210 :block @timescale
   588 op add :boosts :boosts *tmp210
-    * label *label108
   589 jump *label105 always
   590 label *label111
   591 control enabled :block .OVERDRIVE
 
   624 write .STARTUPS cell1 8
   625 write .RESETS cell1 9
   626 write .COMMITS cell1 10
-    * label *label117
   627 jump *label15 always
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
 
     9 label *label119
    10 op sub :n :n 1
    11 getlink :block :n
-    * print "Found: "
-    * print :block
-    * print "\n"
+   12 print "Found: {0}\n"
+   13 format :block
    14 sensor *tmp5 :block @type
    15 jump *label7 notEqual *tmp5 @impact-reactor
    16 set .START :n
 
    95 set .MODE 0
    96 control enabled switch1 false
    97 set .REASON "Unknown -- out of power?"
-    * print "Consumption: "
-    * print :consumption
-    * print "\nMin. consumption: "
+   98 print "Consumption: {0}\nMin. consumption: "
+   99 format :consumption
   100 print :min_consumption
   101 printflush message2
   102 jump *label23 always
 
   120 set *tmp62 null
   121 label *label26
   122 print *tmp62
-    * print ","
-    * print " reactors [green]"
-    * print .REACTORS_ON
-    * print "/"
-    * print :reactors
-    * print "["
-    * print "]"
+  123 print ", reactors [green]{0}/{0}[]"
+  124 format .REACTORS_ON
+  125 format :reactors
   126 jump *label33 equal .OVERDRIVE false
   127 op mul *tmp65 100 :boosts
   128 op div *tmp66 *tmp65 .REACTORS_ON
   129 op add *tmp67 *tmp66 0.5
   130 op floor *tmp68 *tmp67
   131 op div :multiplier *tmp68 100
-    * print " ([gold]"
-    * print :multiplier
-    * print "x[])"
+  132 print " ([gold]{0}x[])"
+  133 format :multiplier
   134 label *label33
   135 print "\n=================================="
   136 sensor *tmp70 tank1 @totalLiquids
 
   142 print "\n[salmon]Blast compound level critical![]"
   143 label *label37
   144 jump *label39 notEqual :enough_battery false
-    * print "\n[salmon]Insufficient battery storage![]"
-    * print "\n"
-    * print "Link [gold]"
-    * print :missing_battery
-    * print " "
-    * print "K[] of additional storage to internal battery."
+  145 print "\n[salmon]Insufficient battery storage![]\nLink [gold]{0} K[] of additional storage to internal battery."
+  146 format :missing_battery
   147 label *label39
-    * print "\n"
-    * print "Internal battery:    [gold]"
-    * print :battery_level_str
-    * print "["
-    * print "]/[green]50[] K"
-    * print "\n"
-    * print "Total battery:        [gold]"
-    * print :total_battery_str
-    * print "["
-    * print "]/[green]"
-    * print :total_capacity_str
-    * print "["
-    * print "] K"
-    * print "\n"
-    * print "Battery change:     [gold]"
-    * print :battery_change
-    * print "["
-    * print "]"
-    * print "\n"
-    * print "Power balance:       [gold]"
-    * print :net_power
-    * print "["
-    * print "]"
+  148 print "\nInternal battery:    [gold]{0}[]/[green]50[] K\nTotal battery:        [gold]{0}[]/[green]{0}[] K\nBattery change:     [gold]{0}[]\nPower balance:       [gold]{0}[]"
+  149 format :battery_level_str
+  150 format :total_battery_str
+  151 format :total_capacity_str
+  152 format :battery_change
+  153 format :net_power
   154 jump *label42 notEqual .MODE 0
   155 set .REACTORS_ON 0
   156 set .OVERDRIVE 0
 
   160 op greaterThanEq *tmp80 :net_power -150
   161 op lessThan *tmp81 :total_battery 47500
   162 op land .GENERATOR *tmp80 *tmp81
-    * print "\nShutdown reason: [gold]"
-    * print .REASON
-    * print "[]"
+  163 print "\nShutdown reason: [gold]{0}[]"
+  164 format .REASON
   165 sensor *tmp83 switch1 @enabled
   166 jump *label41 equal *tmp83 false
   167 set .MODE 1
 
   189 op add :nextStart @time 2000
   190 jump *label41 always
   191 label *label54
-    * print "\nRequired startup energy: [gold]"
-    * print 25
-    * print " K[]"
+  192 print "\nRequired startup energy: [gold]25 K[]"
   193 jump *label41 always
   194 label *label52
   195 op add *tmp96 .OUTPUT_1 .OUTPUT_2
   196 op add :outputs *tmp96 .OUTPUT_3
-    * print "\n"
-    * print "[gold]"
-    * print :outputs
-    * print "["
-    * print "] surge tower(s) online"
+  197 print "\n[gold]{0}[] surge tower(s) online"
+  198 format :outputs
   199 jump *label56 notEqual .OUTPUT_3 0
-    * print "\n"
-    * print "Required power level: [gold]"
-    * print :neededPower
-    * print "["
-    * print "]"
+  200 print "\nRequired power level: [gold]{0}[]"
+  201 format :neededPower
   202 label *label56
   203 jump *label58 lessThanEq :net_power 100
   204 set .OVERDRIVE true
 
   355 label *label98
   356 label *label72
   357 label *label41
-    * print "\n"
-    * print .STARTUPS
-    * print "-"
-    * print .RESETS
-    * print "-"
+  358 print "\n{0}-{0}-"
+  359 format .STARTUPS
+  360 format .RESETS
   361 print .COMMITS
   362 printflush message1
   363 control enabled diode1 .OUTPUT_1

Final code before resolving virtual instructions:

set PLANT_PROTECTION 1
set FAST_START 1
set .START 0
set .FUEL_FLAG 0
set .COOLANT_FLAG 0
label *label118
set :reactors 0
set :n @links
jump *label5 lessThanEq :n 0
label *label119
op sub :n :n 1
getlink :block :n
print "Found: {0}\n"
format :block
sensor *tmp5 :block @type
jump *label7 notEqual *tmp5 @impact-reactor
set .START :n
op add :reactors :reactors 1
jump *label6 always
label *label7
jump *label10 equal *tmp5 @overdrive-projector
jump *label9 notEqual *tmp5 @overdrive-dome
label *label10
set .START :n
label *label9
label *label6
jump *label119 greaterThan :n 0
label *label5
read *tmp7 cell2 1
op add :reactors :reactors *tmp7
jump *label11 notEqual :reactors 0
print "No reactor."
label *label11
printflush message1
jump *label118 equal :reactors 0
read .MODE cell1 0
read .OUTPUT_1 cell1 1
read .OUTPUT_2 cell1 2
read .OUTPUT_3 cell1 3
read .REACTORS_ON cell1 4
read .OVERDRIVE cell1 5
read .GENERATOR cell1 6
read .CAN_COMMIT cell1 7
read .STARTUPS cell1 8
read .RESETS cell1 9
read .COMMITS cell1 10
set :reactors .REACTORS_ON
set .REASON "Reason unknown -- out of power?"
jump *label14 notEqual .MODE 0
set .REASON "Processor reset"
label *label14
op notEqual *tmp24 .MODE 0
control enabled switch1 *tmp24
set :failure_cnt 0
set :boosts 0
set :nextStart 0
op add :nextDecommit @time 6000
label *label15
sensor *tmp26 battery1 @totalPower
op floor :battery_level *tmp26
op idiv :battery_level_str :battery_level 1000
sensor *tmp29 battery1 @powerNetStored
op floor :total_battery *tmp29
op idiv :total_battery_str :total_battery 1000
sensor :consumption battery1 @powerNetOut
read :production bank1 509
read :net_power bank1 510
read :battery_change bank1 511
sensor :total_capacity battery1 @powerNetCapacity
op idiv :total_capacity_str :total_capacity 1000
op mul :required_capacity 100000 :reactors
op greaterThanEq :enough_battery :total_capacity :required_capacity
op sub *tmp40 :required_capacity :total_capacity
op div *tmp41 *tmp40 1000
op ceil :missing_battery *tmp41
jump *label18 equal .MODE 0
sensor *tmp45 switch1 @enabled
jump *label20 notEqual *tmp45 false
set .MODE 0
set .REASON "Manual power off"
jump *label21 always
label *label20
op mul :min_consumption .REACTORS_ON 1200
op lessThan :failure1 :consumption :min_consumption
op equal *tmp50 :battery_level 0
op greaterThan *tmp51 :consumption 0
op land *tmp52 *tmp50 *tmp51
op equal *tmp53 :production 0
op land :failure2 *tmp52 *tmp53
op or *tmp55 :failure1 :failure2
jump *label22 equal *tmp55 false
op add :failure_cnt :failure_cnt 1
read *tmp57 cell2 1
op add *tmp58 10 *tmp57
jump *label23 lessThanEq :failure_cnt *tmp58
set .MODE 0
control enabled switch1 false
set .REASON "Unknown -- out of power?"
print "Consumption: {0}\nMin. consumption: "
format :consumption
print :min_consumption
printflush message2
jump *label23 always
label *label22
set :failure_cnt 0
label *label23
label *label21
label *label18
jump *label27 notEqual .MODE 0
set *tmp62 "[salmon]SHUTDOWN[]"
jump *label26 always
label *label27
jump *label29 notEqual .MODE 1
set *tmp62 "[gold]STARTUP[]"
jump *label26 always
label *label29
jump *label31 notEqual .MODE 2
set *tmp62 "[green]RUNNING[]"
jump *label26 always
label *label31
set *tmp62 null
label *label26
print *tmp62
print ", reactors [green]{0}/{0}[]"
format .REACTORS_ON
format :reactors
jump *label33 equal .OVERDRIVE false
op mul *tmp65 100 :boosts
op div *tmp66 *tmp65 .REACTORS_ON
op add *tmp67 *tmp66 0.5
op floor *tmp68 *tmp67
op div :multiplier *tmp68 100
print " ([gold]{0}x[])"
format :multiplier
label *label33
print "\n=================================="
sensor *tmp70 tank1 @totalLiquids
jump *label35 greaterThanEq *tmp70 750
print "\n[salmon]Cryofluid level critical![]"
label *label35
sensor *tmp73 vault1 @blast-compound
jump *label37 greaterThanEq *tmp73 700
print "\n[salmon]Blast compound level critical![]"
label *label37
jump *label39 notEqual :enough_battery false
print "\n[salmon]Insufficient battery storage![]\nLink [gold]{0} K[] of additional storage to internal battery."
format :missing_battery
label *label39
print "\nInternal battery:    [gold]{0}[]/[green]50[] K\nTotal battery:        [gold]{0}[]/[green]{0}[] K\nBattery change:     [gold]{0}[]\nPower balance:       [gold]{0}[]"
format :battery_level_str
format :total_battery_str
format :total_capacity_str
format :battery_change
format :net_power
jump *label42 notEqual .MODE 0
set .REACTORS_ON 0
set .OVERDRIVE 0
set .OUTPUT_1 0
set .OUTPUT_2 0
set .OUTPUT_3 0
op greaterThanEq *tmp80 :net_power -150
op lessThan *tmp81 :total_battery 47500
op land .GENERATOR *tmp80 *tmp81
print "\nShutdown reason: [gold]{0}[]"
format .REASON
sensor *tmp83 switch1 @enabled
jump *label41 equal *tmp83 false
set .MODE 1
op add .STARTUPS .STARTUPS 1
set :nextStart 0
set :failure_cnt 0
set .GENERATOR true
set .REASON "Unknown -- out of power?"
jump *label41 always
label *label42
jump *label46 notEqual .MODE 1
jump *label48 equal .OUTPUT_1 false
sensor *tmp87 battery3 @powerNetOut
jump *label49 equal .OUTPUT_2 false
sensor *tmp87 battery4 @powerNetOut
jump *label49 always
label *label48
sensor *tmp87 battery2 @powerNetOut
label *label49
op idiv *tmp89 *tmp87 0.9523809523809523
op max :neededPower *tmp89 1000
jump *label52 notEqual .REACTORS_ON 0
jump *label54 lessThan :total_battery 25000
set .REACTORS_ON 1
op add :nextStart @time 2000
jump *label41 always
label *label54
print "\nRequired startup energy: [gold]25 K[]"
jump *label41 always
label *label52
op add *tmp96 .OUTPUT_1 .OUTPUT_2
op add :outputs *tmp96 .OUTPUT_3
print "\n[gold]{0}[] surge tower(s) online"
format :outputs
jump *label56 notEqual .OUTPUT_3 0
print "\nRequired power level: [gold]{0}[]"
format :neededPower
label *label56
jump *label58 lessThanEq :net_power 100
set .OVERDRIVE true
label *label58
op lessThan *tmp102 .REACTORS_ON :reactors
op greaterThan *tmp103 :net_power 1000
op land *tmp104 *tmp102 *tmp103
op greaterThanEq *tmp105 :total_battery 25000
op land :canStart *tmp104 *tmp105
jump *label60 lessThan :net_power :neededPower
set .OUTPUT_3 .OUTPUT_2
set .OUTPUT_2 .OUTPUT_1
set .OUTPUT_1 1
label *label60
jump *label62 notEqual .OUTPUT_1 0
op mul :availablePower 6300 :boosts
op div :ratio :neededPower :availablePower
jump *label64 greaterThanEq :ratio 1
op add :nextStart @time 2000
label *label64
label *label62
op greaterThan *tmp116 @time :nextStart
op land *tmp117 :canStart *tmp116
jump *label66 equal *tmp117 false
set *tmp119 1
jump *label69 equal FAST_START false
op idiv *tmp119 :total_battery 25000
label *label69
op add *tmp121 .REACTORS_ON *tmp119
op min .REACTORS_ON *tmp121 :reactors
op add :nextStart @time 2000
label *label66
op greaterThanEq *tmp124 .REACTORS_ON :reactors
op greaterThan *tmp125 @time :nextStart
op land *tmp126 *tmp124 *tmp125
op greaterThan *tmp127 .OUTPUT_3 0
op land *tmp128 *tmp126 *tmp127
jump *label41 equal *tmp128 false
set .MODE 2
op add :nextDecommit @time 6000
set .COOLANT_FLAG 0
set .FUEL_FLAG 0
set .GENERATOR false
jump *label41 always
label *label46
jump *label72 notEqual .MODE 2
sensor *tmp131 tank1 @totalLiquids
op lessThan *tmp132 *tmp131 750
op land *tmp133 .COOLANT_FLAG *tmp132
jump *label74 equal *tmp133 false
set .MODE 0
control enabled switch1 false
set .REASON "Cryo level too low"
label *label74
sensor *tmp136 vault1 @blast-compound
op lessThan *tmp137 *tmp136 700
op land *tmp138 .FUEL_FLAG *tmp137
jump *label76 equal *tmp138 false
set .MODE 0
control enabled switch1 false
set .REASON "Blast compound level too low"
label *label76
sensor *tmp141 tank1 @totalLiquids
op greaterThan *tmp142 *tmp141 1000
op or .COOLANT_FLAG .COOLANT_FLAG *tmp142
sensor *tmp144 vault1 @blast-compound
op greaterThan *tmp145 *tmp144 800
op or .FUEL_FLAG .FUEL_FLAG *tmp145
sensor *tmp147 switch2 @enabled
op land *tmp148 :enough_battery *tmp147
jump *label78 equal *tmp148 false
op mul :min_level :reactors 50000
set :commit_level 0
op lessThan *tmp151 :battery_change 0
op land *tmp152 .CAN_COMMIT *tmp151
op lessThan *tmp153 .REACTORS_ON :reactors
op land *tmp154 *tmp152 *tmp153
jump *label80 equal *tmp154 false
op sub :p :battery_change 2500
op mul *tmp158 :p 0.00472972972972973
op add *tmp159 -5 *tmp158
op mul *tmp160 :p *tmp159
op add :commit_margin 25000 *tmp160
op add :commit_level :min_level :commit_margin
op idiv *tmp163 :commit_level 1000
print "\nCommit threshold:   [gold]"
print *tmp163
label *label80
jump *label82 notEqual :commit_level 0
op idiv *tmp166 :min_level 1000
print "\nRestart threshold: [gold]"
print *tmp166
label *label82
print "[] K"
op lessThan *tmp167 :total_battery :min_level
op mul *tmp168 .REACTORS_ON -2500
op lessThan *tmp169 :battery_change *tmp168
op or *tmp170 *tmp167 *tmp169
jump *label84 equal *tmp170 false
op equal *tmp172 .OVERDRIVE false
op add .RESETS .RESETS *tmp172
set .OVERDRIVE true
set .REACTORS_ON :reactors
op add :nextDecommit @time 6000
jump *label79 always
label *label84
op lessThan *tmp174 :battery_level 47500
op lessThan *tmp175 :battery_change -100
op or *tmp176 *tmp174 *tmp175
jump *label86 equal *tmp176 false
op add :nextDecommit @time 6000
label *label86
jump *label88 lessThanEq @time :nextDecommit
jump *label90 equal .OVERDRIVE false
set .OVERDRIVE false
jump *label91 always
label *label90
op sub *tmp182 .REACTORS_ON 1
op max .REACTORS_ON *tmp182 1
set .CAN_COMMIT true
label *label91
op add :nextDecommit @time 6000
jump *label79 always
label *label88
jump *label79 greaterThanEq :total_battery :commit_level
op add .REACTORS_ON .REACTORS_ON 1
op add .COMMITS .COMMITS 1
set .CAN_COMMIT false
jump *label79 always
label *label78
sensor *tmp187 switch2 @enabled
jump *label94 equal *tmp187 false
print "\n[salmon]Load adapting not possible.[]"
jump *label95 always
label *label94
print "\n[gold]Load adapting not active.[]"
label *label95
set .REACTORS_ON :reactors
set .OVERDRIVE true
label *label79
op mul *tmp189 PLANT_PROTECTION 47500
jump *label96 greaterThanEq :total_battery *tmp189
set .OUTPUT_2 0
set .OUTPUT_3 0
label *label96
jump *label98 notEqual .OUTPUT_2 0
jump *label100 lessThanEq :total_battery 47500
set .OUTPUT_2 1
set .OUTPUT_3 1
jump *label101 always
label *label100
print "\n*** [gold]Surge tower 2 offline[] ***"
label *label101
label *label98
label *label72
label *label41
print "\n{0}-{0}-"
format .STARTUPS
format .RESETS
print .COMMITS
printflush message1
control enabled diode1 .OUTPUT_1
control enabled diode2 .OUTPUT_2
control enabled diode3 .OUTPUT_3
control enabled generator1 .GENERATOR
control enabled generator2 .GENERATOR
op equal :startup .MODE 1
set :reactors 0
set :boosts 0
set :n .START
jump *label104 greaterThanEq .START @links
label *label120
getlink :block :n
sensor *tmp204 :block @type
sensor *tmp225 *tmp204 @id
jump *label121 greaterThanEq *tmp225 83
multijump *label122 *tmp225 0
multilabel *label122
jump *label121 always
multilabel *label123
jump *label121 always
multilabel *label124
jump *label121 always
multilabel *label125
jump *label121 always
multilabel *label126
jump *label121 always
multilabel *label127
jump *label121 always
multilabel *label128
jump *label121 always
multilabel *label129
jump *label121 always
multilabel *label130
jump *label121 always
multilabel *label131
jump *label121 always
multilabel *label132
jump *label121 always
multilabel *label133
jump *label121 always
multilabel *label134
jump *label121 always
multilabel *label135
jump *label121 always
multilabel *label136
jump *label121 always
multilabel *label137
jump *label121 always
multilabel *label138
jump *label121 always
multilabel *label139
jump *label121 always
multilabel *label140
jump *label121 always
multilabel *label141
jump *label121 always
multilabel *label142
jump *label121 always
multilabel *label143
jump *label121 always
multilabel *label144
jump *label121 always
multilabel *label145
jump *label121 always
multilabel *label146
jump *label121 always
multilabel *label147
jump *label121 always
multilabel *label148
jump *label121 always
multilabel *label149
jump *label121 always
multilabel *label150
jump *label121 always
multilabel *label151
jump *label121 always
multilabel *label152
jump *label121 always
multilabel *label153
jump *label121 always
multilabel *label154
jump *label121 always
multilabel *label155
jump *label121 always
multilabel *label156
jump *label121 always
multilabel *label157
jump *label121 always
multilabel *label158
jump *label121 always
multilabel *label159
jump *label111 always
multilabel *label160
jump *label111 always
multilabel *label161
jump *label121 always
multilabel *label162
jump *label121 always
multilabel *label163
jump *label113 always
multilabel *label164
jump *label113 always
multilabel *label165
jump *label113 always
multilabel *label166
jump *label113 always
multilabel *label167
jump *label121 always
multilabel *label168
jump *label121 always
multilabel *label169
jump *label121 always
multilabel *label170
jump *label121 always
multilabel *label171
jump *label121 always
multilabel *label172
jump *label121 always
multilabel *label173
jump *label121 always
multilabel *label174
jump *label121 always
multilabel *label175
jump *label121 always
multilabel *label176
jump *label121 always
multilabel *label177
jump *label121 always
multilabel *label178
jump *label121 always
multilabel *label179
jump *label121 always
multilabel *label180
jump *label121 always
multilabel *label181
jump *label121 always
multilabel *label182
jump *label113 always
multilabel *label183
jump *label113 always
multilabel *label184
jump *label113 always
multilabel *label185
jump *label121 always
multilabel *label186
jump *label121 always
multilabel *label187
jump *label121 always
multilabel *label188
jump *label121 always
multilabel *label189
jump *label121 always
multilabel *label190
jump *label121 always
multilabel *label191
jump *label121 always
multilabel *label192
jump *label121 always
multilabel *label193
jump *label121 always
multilabel *label194
jump *label121 always
multilabel *label195
jump *label121 always
multilabel *label196
jump *label121 always
multilabel *label197
jump *label121 always
multilabel *label198
jump *label121 always
multilabel *label199
jump *label121 always
multilabel *label200
jump *label121 always
multilabel *label201
jump *label121 always
multilabel *label202
jump *label121 always
multilabel *label203
jump *label121 always
multilabel *label204
op add :reactors :reactors 1
op lessThanEq :enabled :reactors .REACTORS_ON
control enabled :block :enabled
jump *label105 equal :enabled false
sensor *tmp210 :block @timescale
op add :boosts :boosts *tmp210
jump *label105 always
label *label111
control enabled :block .OVERDRIVE
jump *label105 always
label *label113
control enabled :block :startup
label *label121
label *label105
op add :n :n 1
jump *label120 lessThan :n @links
label *label104
jump *label114 equal cell2 null
write :reactors cell2 0
write .REACTORS_ON cell2 2
write .OVERDRIVE cell2 3
read *tmp220 cell2 1
op add :reactors :reactors *tmp220
read *tmp221 cell2 4
op add :boosts :boosts *tmp221
label *label114
op min .REACTORS_ON .REACTORS_ON :reactors
jump *label116 notEqual cell1 null
set .STARTUPS 0
set .RESETS 0
set .COMMITS 0
jump *label15 always
label *label116
write .MODE cell1 0
write .OUTPUT_1 cell1 1
write .OUTPUT_2 cell1 2
write .OUTPUT_3 cell1 3
write .REACTORS_ON cell1 4
write .OVERDRIVE cell1 5
write .GENERATOR cell1 6
write .CAN_COMMIT cell1 7
write .STARTUPS cell1 8
write .RESETS cell1 9
write .COMMITS cell1 10
jump *label15 always
