   108 instructions before optimizations.
    14 instructions eliminated by Temp Variables Elimination.
    13 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
     6 instructions eliminated by Jump Optimization (5 iterations).
    17 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
   573 instructions eliminated by Data Flow Optimization (10 passes, 31 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   938 instructions added by Loop Unrolling (12 iterations).
     7 loops unrolled by Loop Unrolling.
    17 instructions added by Function Inlining (12 iterations).
     5 function calls inlined by Function Inlining.
     8 instructions updated by JumpThreading.
     4 instructions eliminated by Unreachable Code Elimination (2 iterations).
   434 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 937):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'getBit' defined at line 10:1                cost     7, benefit      350.0, efficiency       50.0 (+2 instructions)
    Inline function 'testAndSetMultiples' defined at line 14:1   cost    16, benefit      200.0, efficiency       12.5
    Inline function call at line 30:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 34:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 41:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 45:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 15:18                           cost     4, benefit      175.0, efficiency       43.8

Pass 1: speed optimization selection (cost limit 935):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'testAndSetMultiples' defined at line 14:1   cost    19, benefit      200.0, efficiency       10.5 (+7 instructions)
    Inline function call at line 30:12                           cost    20, benefit      100.0, efficiency        5.0
    Inline function call at line 34:12                           cost    20, benefit      100.0, efficiency        5.0

Pass 1: speed optimization selection (cost limit 928):
  * Unroll loop at line 29:5                                     cost   123, benefit      300.0, efficiency        2.4 (+83 instructions)

Pass 1: speed optimization selection (cost limit 845):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
    Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5
  * Unroll loop at line 17:9                                     cost    14, benefit      100.0, efficiency        7.1 (+2 instructions)
  ! Unroll loop at line 40:5                                     cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 843):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
  * Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5 (+11 instructions)
  ! Unroll loop at line 40:5                                     cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 832):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
  * Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8 (+29 instructions)

Pass 1: speed optimization selection (cost limit 803):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
  * Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6 (+44 instructions)

Pass 1: speed optimization selection (cost limit 759):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
  * Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4 (+89 instructions)

Pass 1: speed optimization selection (cost limit 670):
  * Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3 (+134 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-11 instructions):
 
    14 set *tmp4 :testAndSetMultiples.0*retval
    15 jump *label6 equal *tmp4 false
    16 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp5 :sumPrimesUpTo.0:sum
    17 jump *label7 always
    18 label *label6
-    * set *tmp5 null
    19 label *label7
    20 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    21 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    24 set *tmp6 :testAndSetMultiples.0*retval
    25 jump *label8 equal *tmp6 false
    26 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp7 :sumPrimesUpTo.0:sum
    27 jump *label9 always
    28 label *label8
-    * set *tmp7 null
    29 label *label9
    30 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    31 label *label4
 
    41 op equal *tmp11 *tmp10 false
    42 jump *label13 equal *tmp11 false
    43 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp12 :sumPrimesUpTo.0:sum
    44 jump *label14 always
    45 label *label13
-    * set *tmp12 null
    46 label *label14
    47 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    48 op idiv *tmp13 :sumPrimesUpTo.0:i 2
 
    59 label *label17
    60 set *tmp18 null
    61 label *label18
-    * set *tmp16 *tmp18
    62 jump *label16 always
    63 label *label15
-    * set *tmp16 null
    64 label *label16
    65 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    66 label *label11
 
   108 read *tmp35 BITMAP *tmp34
   109 op or *tmp38 *tmp35 *tmp37
   110 write *tmp38 BITMAP *tmp34
-    * set *tmp32 *tmp38
   111 label *label26
   112 label *label24
   113 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
   114 jump *label23 always
   115 label *label25
-    * set *tmp27 null
   116 jump *label22 always
   117 label *label21
-    * set *tmp27 null
   118 label *label22
   119 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
   120 label *label20

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    54 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    55 jump *label17 equal *tmp17 false
    56 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp18 :sumPrimesUpTo.0:sum
    57 jump *label18 always
    58 label *label17
-    * set *tmp18 null
    59 label *label18
    60 jump *label16 always
    61 label *label15

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-14 instructions):
 
     3 set :sumPrimesUpTo.0:sum 5
     4 set :sumPrimesUpTo.0:i 5
     5 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil *tmp2 *tmp1
-    * set :sumPrimesUpTo.0:sqrtMax *tmp2
+    6 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     7 label *label3
     8 op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     9 jump *label5 equal *tmp3 false
    10 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    11 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    12 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
-    * set *tmp4 :testAndSetMultiples.0*retval
-    * jump *label6 equal *tmp4 false
+   13 jump *label6 equal :testAndSetMultiples.0*retval false
    14 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    15 jump *label7 always
    16 label *label6
 
    19 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    20 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    21 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
-    * set *tmp6 :testAndSetMultiples.0*retval
-    * jump *label8 equal *tmp6 false
+   22 jump *label8 equal :testAndSetMultiples.0*retval false
    23 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    24 jump *label9 always
    25 label *label8
 
    31 label *label10
    32 op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    33 jump *label12 equal *tmp8 false
-    * op idiv *tmp9 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp9
+   34 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    35 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * set *tmp10 :getBit.0*retval
-    * op equal *tmp11 *tmp10 false
+   36 op equal *tmp11 :getBit.0*retval false
    37 jump *label13 equal *tmp11 false
    38 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    39 jump *label14 always
    40 label *label13
    41 label *label14
    42 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * op idiv *tmp13 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp13
+   43 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    44 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * set *tmp14 :getBit.0*retval
-    * op equal *tmp15 *tmp14 false
+   45 op equal *tmp15 :getBit.0*retval false
    46 jump *label15 equal *tmp15 false
    47 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    48 jump *label17 equal *tmp17 false
 
    64 end
    65 label *label0
    66 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp19 :getBit.0:bitIndex 48
-    * set *tmp20 *tmp19
+   67 op idiv *tmp20 :getBit.0:bitIndex 48
    68 op mod *tmp22 :getBit.0:bitIndex 48
    69 op shl *tmp23 1 *tmp22
    70 read *tmp21 BITMAP *tmp20
-    * op and *tmp24 *tmp21 *tmp23
-    * set :getBit.0*retval *tmp24
+   71 op and :getBit.0*retval *tmp21 *tmp23
    72 label *label19
    73 return :getBit.0*retaddr
    74 end
    75 label *label1
    76 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv *tmp25 :testAndSetMultiples.0:n 2
-    * set :getBit.0:bitIndex *tmp25
+   77 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
    78 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp26 :getBit.0*retval false
-    * set :testAndSetMultiples.0:result *tmp26
+   79 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    80 jump *label21 equal :testAndSetMultiples.0:result false
-    * op idiv *tmp28 :testAndSetMultiples.0:maximum 2
-    * set :testAndSetMultiples.0:max *tmp28
+   81 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
    82 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv *tmp30 *tmp29 2
-    * set :testAndSetMultiples.0:i *tmp30
+   83 op idiv :testAndSetMultiples.0:i *tmp29 2
    84 label *label23
    85 op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    86 jump *label25 equal *tmp31 false
    87 # "Function: def setBit(in bitIndex)"
    88 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp33 :setBit.0:bitIndex 48
-    * set *tmp34 *tmp33
+   89 op idiv *tmp34 :setBit.0:bitIndex 48
    90 op mod *tmp36 :setBit.0:bitIndex 48
    91 op shl *tmp37 1 *tmp36
    92 read *tmp35 BITMAP *tmp34

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
     5 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
     6 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     7 label *label3
-    * op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
-    * jump *label5 equal *tmp3 false
+    8 jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     9 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    10 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    11 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
 
    28 jump *label3 always
    29 label *label5
    30 label *label10
-    * op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label12 equal *tmp8 false
+   31 jump *label12 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    32 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    33 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp11 :getBit.0*retval false
-    * jump *label13 equal *tmp11 false
+   34 jump *label13 notEqual :getBit.0*retval false
    35 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    36 jump *label14 always
    37 label *label13
 
    39 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    40 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    41 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp15 :getBit.0*retval false
-    * jump *label15 equal *tmp15 false
-    * op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label17 equal *tmp17 false
+   42 jump *label15 notEqual :getBit.0*retval false
+   43 jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    44 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    45 jump *label18 always
    46 label *label17
 
    77 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
    78 op idiv :testAndSetMultiples.0:i *tmp29 2
    79 label *label23
-    * op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * jump *label25 equal *tmp31 false
+   80 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    81 # "Function: def setBit(in bitIndex)"
    82 set :setBit.0:bitIndex :testAndSetMultiples.0:i
    83 op idiv *tmp34 :setBit.0:bitIndex 48

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    11 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    12 jump *label6 equal :testAndSetMultiples.0*retval false
    13 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label7 always
    14 label *label6
    15 label *label7
    16 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    19 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    20 jump *label8 equal :testAndSetMultiples.0*retval false
    21 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label9 always
    22 label *label8
    23 label *label9
    24 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    31 call *label0 :getBit.0*retaddr :getBit.0*retval
    32 jump *label13 notEqual :getBit.0*retval false
    33 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label14 always
    34 label *label13
    35 label *label14
    36 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    39 jump *label15 notEqual :getBit.0*retval false
    40 jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    41 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label18 always
    42 label *label17
    43 label *label18
-    * jump *label16 always
    44 label *label15
    45 label *label16
    46 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    86 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
    87 jump *label23 always
    88 label *label25
-    * jump *label22 always
    89 label *label21
    90 label *label22
    91 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     2 set :sumPrimesUpTo.0:maximum 500
     3 set :sumPrimesUpTo.0:sum 5
     4 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
+    5 op sqrt *tmp1 500
+    6 op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     7 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
+    8 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     9 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+   10 set :testAndSetMultiples.0:maximum 500
    11 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    12 jump *label6 equal :testAndSetMultiples.0*retval false
    13 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    15 label *label7
    16 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    17 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+   18 set :testAndSetMultiples.0:maximum 500
    19 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    20 jump *label8 equal :testAndSetMultiples.0*retval false
    21 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    26 jump *label3 always
    27 label *label5
    28 label *label10
-    * jump *label12 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   29 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
    30 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    31 call *label0 :getBit.0*retaddr :getBit.0*retval
    32 jump *label13 notEqual :getBit.0*retval false
 
    37 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    38 call *label0 :getBit.0*retaddr :getBit.0*retval
    39 jump *label15 notEqual :getBit.0*retval false
-    * jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   40 jump *label17 greaterThan :sumPrimesUpTo.0:i 500
    41 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    42 label *label17
    43 label *label18
 
    49 label *label12
    50 set *tmp0 :sumPrimesUpTo.0:sum
    51 label *label2
-    * assertequals 21536 *tmp0 "sumPrimesUpTo(500)"
+   52 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    53 stop
    54 end
    55 label *label0
 
    75 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    76 # "Function: def setBit(in bitIndex)"
    77 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp34 :setBit.0:bitIndex 48
-    * op mod *tmp36 :setBit.0:bitIndex 48
+   78 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   79 op mod *tmp36 :testAndSetMultiples.0:i 48
    80 op shl *tmp37 1 *tmp36
    81 read *tmp35 BITMAP *tmp34
    82 op or *tmp38 *tmp35 *tmp37

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
     0 set BITMAP bank1
     1 # "Function: def sumPrimesUpTo(in maximum)"
-    * set :sumPrimesUpTo.0:maximum 500
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 500
-    * op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     4 label *label3
     5 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     6 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    44 label *label11
    45 jump *label10 always
    46 label *label12
-    * set *tmp0 :sumPrimesUpTo.0:sum
    47 label *label2
    48 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    49 stop
 
    70 label *label23
    71 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    72 # "Function: def setBit(in bitIndex)"
-    * set :setBit.0:bitIndex :testAndSetMultiples.0:i
    73 op idiv *tmp34 :testAndSetMultiples.0:i 48
    74 op mod *tmp36 :testAndSetMultiples.0:i 48
    75 op shl *tmp37 1 *tmp36

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
     4 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i 23
+    5 label *label27
     6 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     7 set :testAndSetMultiples.0:maximum 500
     8 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
 
    20 label *label9
    21 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    22 label *label4
-    * jump *label3 always
+   23 jump *label27 lessThanEq :sumPrimesUpTo.0:i 23
    24 label *label5
    25 label *label10
    26 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
+   27 label *label28
    28 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    29 call *label0 :getBit.0*retaddr :getBit.0*retval
    30 jump *label13 notEqual :getBit.0*retval false
 
    43 label *label16
    44 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    45 label *label11
-    * jump *label10 always
+   46 jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
    47 label *label12
    48 label *label2
    49 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
 
    70 op idiv :testAndSetMultiples.0:i *tmp29 2
    71 label *label23
    72 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   73 label *label29
    74 # "Function: def setBit(in bitIndex)"
    75 op idiv *tmp34 :testAndSetMultiples.0:i 48
    76 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    81 label *label26
    82 label *label24
    83 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label23 always
+   84 jump *label29 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    85 label *label25
    86 label *label21
    87 label *label22

Modifications by Inline function 'getBit' defined at line 10:1 (+2 instructions):
 
    26 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
    27 label *label28
    28 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   29 label *label30
+   30 # "Function: def getBit(in bitIndex)"
+   31 op idiv *tmp20 :getBit.0:bitIndex 48
+   32 op mod *tmp22 :getBit.0:bitIndex 48
+   33 op shl *tmp23 1 *tmp22
+   34 read *tmp21 BITMAP *tmp20
+   35 op and :getBit.0*retval *tmp21 *tmp23
+   36 label *label31
    37 jump *label13 notEqual :getBit.0*retval false
    38 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    39 label *label13
    40 label *label14
    41 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    42 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   43 label *label32
+   44 # "Function: def getBit(in bitIndex)"
+   45 op idiv *tmp20 :getBit.0:bitIndex 48
+   46 op mod *tmp22 :getBit.0:bitIndex 48
+   47 op shl *tmp23 1 *tmp22
+   48 read *tmp21 BITMAP *tmp20
+   49 op and :getBit.0*retval *tmp21 *tmp23
+   50 label *label33
    51 jump *label15 notEqual :getBit.0*retval false
    52 jump *label17 greaterThan :sumPrimesUpTo.0:i 500
    53 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    63 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    64 stop
    65 end
-    * label *label0
-    * # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label19
-    * return :getBit.0*retaddr
-    * end
    66 label *label1
    67 # "Function: def testAndSetMultiples(in n, in maximum)"
    68 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   69 label *label34
+   70 # "Function: def getBit(in bitIndex)"
+   71 op idiv *tmp20 :getBit.0:bitIndex 48
+   72 op mod *tmp22 :getBit.0:bitIndex 48
+   73 op shl *tmp23 1 *tmp22
+   74 read *tmp21 BITMAP *tmp20
+   75 op and :getBit.0*retval *tmp21 *tmp23
+   76 label *label35
    77 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    78 jump *label21 equal :testAndSetMultiples.0:result false
    79 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2

Modifications by Inline function 'testAndSetMultiples' defined at line 14:1 (+15 instructions):
 
     5 label *label27
     6 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     7 set :testAndSetMultiples.0:maximum 500
-    * call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
+    8 label *label36
+    9 # "Function: def testAndSetMultiples(in n, in maximum)"
+   10 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   11 label *label37
+   12 # "Function: def getBit(in bitIndex)"
+   13 op idiv *tmp20 :getBit.0:bitIndex 48
+   14 op mod *tmp22 :getBit.0:bitIndex 48
+   15 op shl *tmp23 1 *tmp22
+   16 read *tmp21 BITMAP *tmp20
+   17 op and :getBit.0*retval *tmp21 *tmp23
+   18 label *label38
+   19 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   20 jump *label44 equal :testAndSetMultiples.0:result false
+   21 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   22 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   23 op idiv :testAndSetMultiples.0:i *tmp29 2
+   24 label *label39
+   25 jump *label43 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   26 label *label40
+   27 # "Function: def setBit(in bitIndex)"
+   28 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   29 op mod *tmp36 :testAndSetMultiples.0:i 48
+   30 op shl *tmp37 1 *tmp36
+   31 read *tmp35 BITMAP *tmp34
+   32 op or *tmp38 *tmp35 *tmp37
+   33 write *tmp38 BITMAP *tmp34
+   34 label *label41
+   35 label *label42
+   36 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   37 jump *label40 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   38 label *label43
+   39 label *label44
+   40 label *label45
+   41 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   42 label *label46
    43 jump *label6 equal :testAndSetMultiples.0*retval false
    44 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    45 label *label6
 
    47 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    48 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    49 set :testAndSetMultiples.0:maximum 500
-    * call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
+   50 label *label47
+   51 # "Function: def testAndSetMultiples(in n, in maximum)"
+   52 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   53 label *label48
+   54 # "Function: def getBit(in bitIndex)"
+   55 op idiv *tmp20 :getBit.0:bitIndex 48
+   56 op mod *tmp22 :getBit.0:bitIndex 48
+   57 op shl *tmp23 1 *tmp22
+   58 read *tmp21 BITMAP *tmp20
+   59 op and :getBit.0*retval *tmp21 *tmp23
+   60 label *label49
+   61 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   62 jump *label55 equal :testAndSetMultiples.0:result false
+   63 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   64 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   65 op idiv :testAndSetMultiples.0:i *tmp29 2
+   66 label *label50
+   67 jump *label54 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   68 label *label51
+   69 # "Function: def setBit(in bitIndex)"
+   70 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   71 op mod *tmp36 :testAndSetMultiples.0:i 48
+   72 op shl *tmp37 1 *tmp36
+   73 read *tmp35 BITMAP *tmp34
+   74 op or *tmp38 *tmp35 *tmp37
+   75 write *tmp38 BITMAP *tmp34
+   76 label *label52
+   77 label *label53
+   78 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   79 jump *label51 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   80 label *label54
+   81 label *label55
+   82 label *label56
+   83 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   84 label *label57
    85 jump *label8 equal :testAndSetMultiples.0*retval false
    86 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    87 label *label8
 
   131 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   132 stop
   133 end
-    * label *label1
-    * # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
-    * label *label34
-    * # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label35
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label21 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label23
-    * jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label29
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label26
-    * label *label24
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label29 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label25
-    * label *label21
-    * label *label22
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
-    * label *label20
-    * return :testAndSetMultiples.0*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     7 set :testAndSetMultiples.0:maximum 500
     8 label *label36
     9 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   10 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    11 label *label37
    12 # "Function: def getBit(in bitIndex)"
    13 op idiv *tmp20 :getBit.0:bitIndex 48
 
    18 label *label38
    19 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    20 jump *label44 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   21 op idiv :testAndSetMultiples.0:max 500 2
+   22 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    23 op idiv :testAndSetMultiples.0:i *tmp29 2
    24 label *label39
-    * jump *label43 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   25 jump *label43 greaterThan :testAndSetMultiples.0:i 250
    26 label *label40
    27 # "Function: def setBit(in bitIndex)"
    28 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
    33 write *tmp38 BITMAP *tmp34
    34 label *label41
    35 label *label42
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label40 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   36 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   37 jump *label40 lessThanEq :testAndSetMultiples.0:i 250
    38 label *label43
    39 label *label44
    40 label *label45
    41 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    42 label *label46
-    * jump *label6 equal :testAndSetMultiples.0*retval false
+   43 jump *label6 equal :testAndSetMultiples.0:result false
    44 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    45 label *label6
    46 label *label7
 
    49 set :testAndSetMultiples.0:maximum 500
    50 label *label47
    51 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   52 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    53 label *label48
    54 # "Function: def getBit(in bitIndex)"
    55 op idiv *tmp20 :getBit.0:bitIndex 48
 
    60 label *label49
    61 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    62 jump *label55 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   63 op idiv :testAndSetMultiples.0:max 500 2
+   64 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    65 op idiv :testAndSetMultiples.0:i *tmp29 2
    66 label *label50
-    * jump *label54 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   67 jump *label54 greaterThan :testAndSetMultiples.0:i 250
    68 label *label51
    69 # "Function: def setBit(in bitIndex)"
    70 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
    75 write *tmp38 BITMAP *tmp34
    76 label *label52
    77 label *label53
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label51 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   78 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   79 jump *label51 lessThanEq :testAndSetMultiples.0:i 250
    80 label *label54
    81 label *label55
    82 label *label56
    83 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    84 label *label57
-    * jump *label8 equal :testAndSetMultiples.0*retval false
+   85 jump *label8 equal :testAndSetMultiples.0:result false
    86 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    87 label *label8
    88 label *label9

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
     3 set :sumPrimesUpTo.0:i 5
     4 label *label3
     5 label *label27
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
     6 label *label36
     7 # "Function: def testAndSetMultiples(in n, in maximum)"
     8 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
 
    16 label *label38
    17 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    18 jump *label44 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    19 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    20 op idiv :testAndSetMultiples.0:i *tmp29 2
    21 label *label39
 
    35 label *label43
    36 label *label44
    37 label *label45
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    38 label *label46
    39 jump *label6 equal :testAndSetMultiples.0:result false
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    41 label *label6
    42 label *label7
    43 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
    44 label *label47
    45 # "Function: def testAndSetMultiples(in n, in maximum)"
    46 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
 
    54 label *label49
    55 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    56 jump *label55 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    57 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    58 op idiv :testAndSetMultiples.0:i *tmp29 2
    59 label *label50
 
    73 label *label54
    74 label *label55
    75 label *label56
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    76 label *label57
    77 jump *label8 equal :testAndSetMultiples.0:result false
    78 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i

Modifications by Unroll loop at line 29:5 (+131 instructions):
 
     1 # "Function: def sumPrimesUpTo(in maximum)"
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
-    * label *label3
-    * label *label27
-    * label *label36
-    * # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label37
-    * # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label38
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label44 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label39
-    * jump *label43 greaterThan :testAndSetMultiples.0:i 250
-    * label *label40
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label41
-    * label *label42
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label40 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label43
-    * label *label44
-    * label *label45
-    * label *label46
-    * jump *label6 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label6
-    * label *label7
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * label *label47
-    * # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label48
-    * # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label49
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label55 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label50
-    * jump *label54 greaterThan :testAndSetMultiples.0:i 250
-    * label *label51
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label52
-    * label *label53
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label51 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label54
-    * label *label55
-    * label *label56
-    * label *label57
-    * jump *label8 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label8
-    * label *label9
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
-    * label *label4
-    * jump *label27 lessThanEq :sumPrimesUpTo.0:i 23
-    * label *label5
+    4 label *label58
+    5 label *label59
+    6 label *label60
+    7 # "Function: def testAndSetMultiples(in n, in maximum)"
+    8 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    9 label *label61
+   10 # "Function: def getBit(in bitIndex)"
+   11 op idiv *tmp20 :getBit.0:bitIndex 48
+   12 op mod *tmp22 :getBit.0:bitIndex 48
+   13 op shl *tmp23 1 *tmp22
+   14 read *tmp21 BITMAP *tmp20
+   15 op and :getBit.0*retval *tmp21 *tmp23
+   16 label *label62
+   17 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   18 jump *label68 equal :testAndSetMultiples.0:result false
+   19 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   20 op idiv :testAndSetMultiples.0:i *tmp29 2
+   21 label *label63
+   22 jump *label67 greaterThan :testAndSetMultiples.0:i 250
+   23 label *label64
+   24 # "Function: def setBit(in bitIndex)"
+   25 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   26 op mod *tmp36 :testAndSetMultiples.0:i 48
+   27 op shl *tmp37 1 *tmp36
+   28 read *tmp35 BITMAP *tmp34
+   29 op or *tmp38 *tmp35 *tmp37
+   30 write *tmp38 BITMAP *tmp34
+   31 label *label65
+   32 label *label66
+   33 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   34 jump *label64 lessThanEq :testAndSetMultiples.0:i 250
+   35 label *label67
+   36 label *label68
+   37 label *label69
+   38 label *label70
+   39 jump *label71 equal :testAndSetMultiples.0:result false
+   40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   41 label *label71
+   42 label *label72
+   43 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   44 label *label73
+   45 # "Function: def testAndSetMultiples(in n, in maximum)"
+   46 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   47 label *label74
+   48 # "Function: def getBit(in bitIndex)"
+   49 op idiv *tmp20 :getBit.0:bitIndex 48
+   50 op mod *tmp22 :getBit.0:bitIndex 48
+   51 op shl *tmp23 1 *tmp22
+   52 read *tmp21 BITMAP *tmp20
+   53 op and :getBit.0*retval *tmp21 *tmp23
+   54 label *label75
+   55 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   56 jump *label81 equal :testAndSetMultiples.0:result false
+   57 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   58 op idiv :testAndSetMultiples.0:i *tmp29 2
+   59 label *label76
+   60 jump *label80 greaterThan :testAndSetMultiples.0:i 250
+   61 label *label77
+   62 # "Function: def setBit(in bitIndex)"
+   63 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   64 op mod *tmp36 :testAndSetMultiples.0:i 48
+   65 op shl *tmp37 1 *tmp36
+   66 read *tmp35 BITMAP *tmp34
+   67 op or *tmp38 *tmp35 *tmp37
+   68 write *tmp38 BITMAP *tmp34
+   69 label *label78
+   70 label *label79
+   71 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   72 jump *label77 lessThanEq :testAndSetMultiples.0:i 250
+   73 label *label80
+   74 label *label81
+   75 label *label82
+   76 label *label83
+   77 jump *label84 equal :testAndSetMultiples.0:result false
+   78 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   79 label *label84
+   80 label *label85
+   81 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   82 label *label86
+   83 label *label87
+   84 label *label88
+   85 # "Function: def testAndSetMultiples(in n, in maximum)"
+   86 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   87 label *label89
+   88 # "Function: def getBit(in bitIndex)"
+   89 op idiv *tmp20 :getBit.0:bitIndex 48
+   90 op mod *tmp22 :getBit.0:bitIndex 48
+   91 op shl *tmp23 1 *tmp22
+   92 read *tmp21 BITMAP *tmp20
+   93 op and :getBit.0*retval *tmp21 *tmp23
+   94 label *label90
+   95 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   96 jump *label96 equal :testAndSetMultiples.0:result false
+   97 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   98 op idiv :testAndSetMultiples.0:i *tmp29 2
+   99 label *label91
+  100 jump *label95 greaterThan :testAndSetMultiples.0:i 250
+  101 label *label92
+  102 # "Function: def setBit(in bitIndex)"
+  103 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  104 op mod *tmp36 :testAndSetMultiples.0:i 48
+  105 op shl *tmp37 1 *tmp36
+  106 read *tmp35 BITMAP *tmp34
+  107 op or *tmp38 *tmp35 *tmp37
+  108 write *tmp38 BITMAP *tmp34
+  109 label *label93
+  110 label *label94
+  111 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  112 jump *label92 lessThanEq :testAndSetMultiples.0:i 250
+  113 label *label95
+  114 label *label96
+  115 label *label97
+  116 label *label98
+  117 jump *label99 equal :testAndSetMultiples.0:result false
+  118 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  119 label *label99
+  120 label *label100
+  121 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  122 label *label101
+  123 # "Function: def testAndSetMultiples(in n, in maximum)"
+  124 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  125 label *label102
+  126 # "Function: def getBit(in bitIndex)"
+  127 op idiv *tmp20 :getBit.0:bitIndex 48
+  128 op mod *tmp22 :getBit.0:bitIndex 48
+  129 op shl *tmp23 1 *tmp22
+  130 read *tmp21 BITMAP *tmp20
+  131 op and :getBit.0*retval *tmp21 *tmp23
+  132 label *label103
+  133 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  134 jump *label109 equal :testAndSetMultiples.0:result false
+  135 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  136 op idiv :testAndSetMultiples.0:i *tmp29 2
+  137 label *label104
+  138 jump *label108 greaterThan :testAndSetMultiples.0:i 250
+  139 label *label105
+  140 # "Function: def setBit(in bitIndex)"
+  141 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  142 op mod *tmp36 :testAndSetMultiples.0:i 48
+  143 op shl *tmp37 1 *tmp36
+  144 read *tmp35 BITMAP *tmp34
+  145 op or *tmp38 *tmp35 *tmp37
+  146 write *tmp38 BITMAP *tmp34
+  147 label *label106
+  148 label *label107
+  149 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  150 jump *label105 lessThanEq :testAndSetMultiples.0:i 250
+  151 label *label108
+  152 label *label109
+  153 label *label110
+  154 label *label111
+  155 jump *label112 equal :testAndSetMultiples.0:result false
+  156 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  157 label *label112
+  158 label *label113
+  159 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  160 label *label114
+  161 label *label115
+  162 label *label116
+  163 # "Function: def testAndSetMultiples(in n, in maximum)"
+  164 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  165 label *label117
+  166 # "Function: def getBit(in bitIndex)"
+  167 op idiv *tmp20 :getBit.0:bitIndex 48
+  168 op mod *tmp22 :getBit.0:bitIndex 48
+  169 op shl *tmp23 1 *tmp22
+  170 read *tmp21 BITMAP *tmp20
+  171 op and :getBit.0*retval *tmp21 *tmp23
+  172 label *label118
+  173 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  174 jump *label124 equal :testAndSetMultiples.0:result false
+  175 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  176 op idiv :testAndSetMultiples.0:i *tmp29 2
+  177 label *label119
+  178 jump *label123 greaterThan :testAndSetMultiples.0:i 250
+  179 label *label120
+  180 # "Function: def setBit(in bitIndex)"
+  181 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  182 op mod *tmp36 :testAndSetMultiples.0:i 48
+  183 op shl *tmp37 1 *tmp36
+  184 read *tmp35 BITMAP *tmp34
+  185 op or *tmp38 *tmp35 *tmp37
+  186 write *tmp38 BITMAP *tmp34
+  187 label *label121
+  188 label *label122
+  189 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  190 jump *label120 lessThanEq :testAndSetMultiples.0:i 250
+  191 label *label123
+  192 label *label124
+  193 label *label125
+  194 label *label126
+  195 jump *label127 equal :testAndSetMultiples.0:result false
+  196 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  197 label *label127
+  198 label *label128
+  199 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  200 label *label129
+  201 # "Function: def testAndSetMultiples(in n, in maximum)"
+  202 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  203 label *label130
+  204 # "Function: def getBit(in bitIndex)"
+  205 op idiv *tmp20 :getBit.0:bitIndex 48
+  206 op mod *tmp22 :getBit.0:bitIndex 48
+  207 op shl *tmp23 1 *tmp22
+  208 read *tmp21 BITMAP *tmp20
+  209 op and :getBit.0*retval *tmp21 *tmp23
+  210 label *label131
+  211 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  212 jump *label137 equal :testAndSetMultiples.0:result false
+  213 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  214 op idiv :testAndSetMultiples.0:i *tmp29 2
+  215 label *label132
+  216 jump *label136 greaterThan :testAndSetMultiples.0:i 250
+  217 label *label133
+  218 # "Function: def setBit(in bitIndex)"
+  219 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  220 op mod *tmp36 :testAndSetMultiples.0:i 48
+  221 op shl *tmp37 1 *tmp36
+  222 read *tmp35 BITMAP *tmp34
+  223 op or *tmp38 *tmp35 *tmp37
+  224 write *tmp38 BITMAP *tmp34
+  225 label *label134
+  226 label *label135
+  227 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  228 jump *label133 lessThanEq :testAndSetMultiples.0:i 250
+  229 label *label136
+  230 label *label137
+  231 label *label138
+  232 label *label139
+  233 jump *label140 equal :testAndSetMultiples.0:result false
+  234 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  235 label *label140
+  236 label *label141
+  237 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  238 label *label142
+  239 label *label143
+  240 label *label144
+  241 # "Function: def testAndSetMultiples(in n, in maximum)"
+  242 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  243 label *label145
+  244 # "Function: def getBit(in bitIndex)"
+  245 op idiv *tmp20 :getBit.0:bitIndex 48
+  246 op mod *tmp22 :getBit.0:bitIndex 48
+  247 op shl *tmp23 1 *tmp22
+  248 read *tmp21 BITMAP *tmp20
+  249 op and :getBit.0*retval *tmp21 *tmp23
+  250 label *label146
+  251 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  252 jump *label152 equal :testAndSetMultiples.0:result false
+  253 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  254 op idiv :testAndSetMultiples.0:i *tmp29 2
+  255 label *label147
+  256 jump *label151 greaterThan :testAndSetMultiples.0:i 250
+  257 label *label148
+  258 # "Function: def setBit(in bitIndex)"
+  259 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  260 op mod *tmp36 :testAndSetMultiples.0:i 48
+  261 op shl *tmp37 1 *tmp36
+  262 read *tmp35 BITMAP *tmp34
+  263 op or *tmp38 *tmp35 *tmp37
+  264 write *tmp38 BITMAP *tmp34
+  265 label *label149
+  266 label *label150
+  267 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  268 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
+  269 label *label151
+  270 label *label152
+  271 label *label153
+  272 label *label154
+  273 jump *label155 equal :testAndSetMultiples.0:result false
+  274 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  275 label *label155
+  276 label *label156
+  277 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  278 label *label157
+  279 # "Function: def testAndSetMultiples(in n, in maximum)"
+  280 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  281 label *label158
+  282 # "Function: def getBit(in bitIndex)"
+  283 op idiv *tmp20 :getBit.0:bitIndex 48
+  284 op mod *tmp22 :getBit.0:bitIndex 48
+  285 op shl *tmp23 1 *tmp22
+  286 read *tmp21 BITMAP *tmp20
+  287 op and :getBit.0*retval *tmp21 *tmp23
+  288 label *label159
+  289 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  290 jump *label165 equal :testAndSetMultiples.0:result false
+  291 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  292 op idiv :testAndSetMultiples.0:i *tmp29 2
+  293 label *label160
+  294 jump *label164 greaterThan :testAndSetMultiples.0:i 250
+  295 label *label161
+  296 # "Function: def setBit(in bitIndex)"
+  297 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  298 op mod *tmp36 :testAndSetMultiples.0:i 48
+  299 op shl *tmp37 1 *tmp36
+  300 read *tmp35 BITMAP *tmp34
+  301 op or *tmp38 *tmp35 *tmp37
+  302 write *tmp38 BITMAP *tmp34
+  303 label *label162
+  304 label *label163
+  305 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  306 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
+  307 label *label164
+  308 label *label165
+  309 label *label166
+  310 label *label167
+  311 jump *label168 equal :testAndSetMultiples.0:result false
+  312 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  313 label *label168
+  314 label *label169
+  315 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  316 label *label170
+  317 label *label5
   318 label *label10
   319 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
   320 label *label28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 label *label59
     6 label *label60
     7 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    8 op idiv :getBit.0:bitIndex 5 2
     9 label *label61
    10 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   11 op idiv *tmp20 2 48
+   12 op mod *tmp22 2 48
+   13 op shl *tmp23 1 2
+   14 read *tmp21 BITMAP 0
+   15 op and :getBit.0*retval *tmp21 4
    16 label *label62
    17 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    18 jump *label68 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   19 op mul *tmp29 5 5
+   20 op idiv :testAndSetMultiples.0:i 25 2
    21 label *label63
-    * jump *label67 greaterThan :testAndSetMultiples.0:i 250
+   22 jump *label67 greaterThan 12 250
    23 label *label64
    24 # "Function: def setBit(in bitIndex)"
    25 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
    30 write *tmp38 BITMAP *tmp34
    31 label *label65
    32 label *label66
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   33 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
    34 jump *label64 lessThanEq :testAndSetMultiples.0:i 250
    35 label *label67
    36 label *label68
    37 label *label69
    38 label *label70
    39 jump *label71 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   40 op add :sumPrimesUpTo.0:sum 5 5
    41 label *label71
    42 label *label72
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   43 op add :sumPrimesUpTo.0:i 5 2
    44 label *label73
    45 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   46 op idiv :getBit.0:bitIndex 7 2
    47 label *label74
    48 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   49 op idiv *tmp20 3 48
+   50 op mod *tmp22 3 48
+   51 op shl *tmp23 1 3
+   52 read *tmp21 BITMAP 0
+   53 op and :getBit.0*retval *tmp21 8
    54 label *label75
    55 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    56 jump *label81 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   57 op mul *tmp29 7 7
+   58 op idiv :testAndSetMultiples.0:i 49 2
    59 label *label76
-    * jump *label80 greaterThan :testAndSetMultiples.0:i 250
+   60 jump *label80 greaterThan 24 250
    61 label *label77
    62 # "Function: def setBit(in bitIndex)"
    63 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
    68 write *tmp38 BITMAP *tmp34
    69 label *label78
    70 label *label79
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   71 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
    72 jump *label77 lessThanEq :testAndSetMultiples.0:i 250
    73 label *label80
    74 label *label81
    75 label *label82
    76 label *label83
    77 jump *label84 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   78 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    79 label *label84
    80 label *label85
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   81 op add :sumPrimesUpTo.0:i 7 4
    82 label *label86
    83 label *label87
    84 label *label88
    85 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   86 op idiv :getBit.0:bitIndex 11 2
    87 label *label89
    88 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   89 op idiv *tmp20 5 48
+   90 op mod *tmp22 5 48
+   91 op shl *tmp23 1 5
+   92 read *tmp21 BITMAP 0
+   93 op and :getBit.0*retval *tmp21 32
    94 label *label90
    95 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    96 jump *label96 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   97 op mul *tmp29 11 11
+   98 op idiv :testAndSetMultiples.0:i 121 2
    99 label *label91
-    * jump *label95 greaterThan :testAndSetMultiples.0:i 250
+  100 jump *label95 greaterThan 60 250
   101 label *label92
   102 # "Function: def setBit(in bitIndex)"
   103 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   108 write *tmp38 BITMAP *tmp34
   109 label *label93
   110 label *label94
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  111 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
   112 jump *label92 lessThanEq :testAndSetMultiples.0:i 250
   113 label *label95
   114 label *label96
   115 label *label97
   116 label *label98
   117 jump *label99 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  118 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   119 label *label99
   120 label *label100
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  121 op add :sumPrimesUpTo.0:i 11 2
   122 label *label101
   123 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  124 op idiv :getBit.0:bitIndex 13 2
   125 label *label102
   126 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  127 op idiv *tmp20 6 48
+  128 op mod *tmp22 6 48
+  129 op shl *tmp23 1 6
+  130 read *tmp21 BITMAP 0
+  131 op and :getBit.0*retval *tmp21 64
   132 label *label103
   133 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   134 jump *label109 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  135 op mul *tmp29 13 13
+  136 op idiv :testAndSetMultiples.0:i 169 2
   137 label *label104
-    * jump *label108 greaterThan :testAndSetMultiples.0:i 250
+  138 jump *label108 greaterThan 84 250
   139 label *label105
   140 # "Function: def setBit(in bitIndex)"
   141 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   146 write *tmp38 BITMAP *tmp34
   147 label *label106
   148 label *label107
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  149 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
   150 jump *label105 lessThanEq :testAndSetMultiples.0:i 250
   151 label *label108
   152 label *label109
   153 label *label110
   154 label *label111
   155 jump *label112 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  156 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   157 label *label112
   158 label *label113
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  159 op add :sumPrimesUpTo.0:i 13 4
   160 label *label114
   161 label *label115
   162 label *label116
   163 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  164 op idiv :getBit.0:bitIndex 17 2
   165 label *label117
   166 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  167 op idiv *tmp20 8 48
+  168 op mod *tmp22 8 48
+  169 op shl *tmp23 1 8
+  170 read *tmp21 BITMAP 0
+  171 op and :getBit.0*retval *tmp21 256
   172 label *label118
   173 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   174 jump *label124 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  175 op mul *tmp29 17 17
+  176 op idiv :testAndSetMultiples.0:i 289 2
   177 label *label119
-    * jump *label123 greaterThan :testAndSetMultiples.0:i 250
+  178 jump *label123 greaterThan 144 250
   179 label *label120
   180 # "Function: def setBit(in bitIndex)"
   181 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   186 write *tmp38 BITMAP *tmp34
   187 label *label121
   188 label *label122
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  189 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
   190 jump *label120 lessThanEq :testAndSetMultiples.0:i 250
   191 label *label123
   192 label *label124
   193 label *label125
   194 label *label126
   195 jump *label127 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  196 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   197 label *label127
   198 label *label128
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  199 op add :sumPrimesUpTo.0:i 17 2
   200 label *label129
   201 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  202 op idiv :getBit.0:bitIndex 19 2
   203 label *label130
   204 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  205 op idiv *tmp20 9 48
+  206 op mod *tmp22 9 48
+  207 op shl *tmp23 1 9
+  208 read *tmp21 BITMAP 0
+  209 op and :getBit.0*retval *tmp21 512
   210 label *label131
   211 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   212 jump *label137 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  213 op mul *tmp29 19 19
+  214 op idiv :testAndSetMultiples.0:i 361 2
   215 label *label132
-    * jump *label136 greaterThan :testAndSetMultiples.0:i 250
+  216 jump *label136 greaterThan 180 250
   217 label *label133
   218 # "Function: def setBit(in bitIndex)"
   219 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   224 write *tmp38 BITMAP *tmp34
   225 label *label134
   226 label *label135
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  227 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
   228 jump *label133 lessThanEq :testAndSetMultiples.0:i 250
   229 label *label136
   230 label *label137
   231 label *label138
   232 label *label139
   233 jump *label140 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  234 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   235 label *label140
   236 label *label141
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  237 op add :sumPrimesUpTo.0:i 19 4
   238 label *label142
   239 label *label143
   240 label *label144
   241 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  242 op idiv :getBit.0:bitIndex 23 2
   243 label *label145
   244 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  245 op idiv *tmp20 11 48
+  246 op mod *tmp22 11 48
+  247 op shl *tmp23 1 11
+  248 read *tmp21 BITMAP 0
+  249 op and :getBit.0*retval *tmp21 2048
   250 label *label146
   251 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   252 jump *label152 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  253 op mul *tmp29 23 23
+  254 op idiv :testAndSetMultiples.0:i 529 2
   255 label *label147
-    * jump *label151 greaterThan :testAndSetMultiples.0:i 250
+  256 jump *label151 greaterThan 264 250
   257 label *label148
   258 # "Function: def setBit(in bitIndex)"
   259 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   264 write *tmp38 BITMAP *tmp34
   265 label *label149
   266 label *label150
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  267 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   268 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   269 label *label151
   270 label *label152
   271 label *label153
   272 label *label154
   273 jump *label155 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  274 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   275 label *label155
   276 label *label156
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  277 op add :sumPrimesUpTo.0:i 23 2
   278 label *label157
   279 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  280 op idiv :getBit.0:bitIndex 25 2
   281 label *label158
   282 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  283 op idiv *tmp20 12 48
+  284 op mod *tmp22 12 48
+  285 op shl *tmp23 1 12
+  286 read *tmp21 BITMAP 0
+  287 op and :getBit.0*retval *tmp21 4096
   288 label *label159
   289 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   290 jump *label165 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  291 op mul *tmp29 25 25
+  292 op idiv :testAndSetMultiples.0:i 625 2
   293 label *label160
-    * jump *label164 greaterThan :testAndSetMultiples.0:i 250
+  294 jump *label164 greaterThan 312 250
   295 label *label161
   296 # "Function: def setBit(in bitIndex)"
   297 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
   302 write *tmp38 BITMAP *tmp34
   303 label *label162
   304 label *label163
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  305 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
   306 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   307 label *label164
   308 label *label165
   309 label *label166
   310 label *label167
   311 jump *label168 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  312 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   313 label *label168
   314 label *label169
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  315 op add :sumPrimesUpTo.0:i 25 4
   316 label *label170
   317 label *label5
   318 label *label10
-    * jump *label12 greaterThan :sumPrimesUpTo.0:i 500
+  319 jump *label12 greaterThan 29 500
   320 label *label28
   321 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
   322 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-48 instructions):
     0 set BITMAP bank1
     1 # "Function: def sumPrimesUpTo(in maximum)"
     2 set :sumPrimesUpTo.0:sum 5
-    * set :sumPrimesUpTo.0:i 5
     3 label *label58
     4 label *label59
     5 label *label60
     6 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 5 2
     7 label *label61
     8 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 2 48
-    * op mod *tmp22 2 48
-    * op shl *tmp23 1 2
     9 read *tmp21 BITMAP 0
    10 op and :getBit.0*retval *tmp21 4
    11 label *label62
    12 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    13 jump *label68 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 5 5
    14 op idiv :testAndSetMultiples.0:i 25 2
    15 label *label63
    16 jump *label67 greaterThan 12 250
 
    34 op add :sumPrimesUpTo.0:sum 5 5
    35 label *label71
    36 label *label72
-    * op add :sumPrimesUpTo.0:i 5 2
    37 label *label73
    38 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 7 2
    39 label *label74
    40 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 3 48
-    * op mod *tmp22 3 48
-    * op shl *tmp23 1 3
    41 read *tmp21 BITMAP 0
    42 op and :getBit.0*retval *tmp21 8
    43 label *label75
    44 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    45 jump *label81 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 7 7
    46 op idiv :testAndSetMultiples.0:i 49 2
    47 label *label76
    48 jump *label80 greaterThan 24 250
 
    66 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    67 label *label84
    68 label *label85
-    * op add :sumPrimesUpTo.0:i 7 4
    69 label *label86
    70 label *label87
    71 label *label88
    72 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 11 2
    73 label *label89
    74 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 5 48
-    * op mod *tmp22 5 48
-    * op shl *tmp23 1 5
    75 read *tmp21 BITMAP 0
    76 op and :getBit.0*retval *tmp21 32
    77 label *label90
    78 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    79 jump *label96 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 11 11
    80 op idiv :testAndSetMultiples.0:i 121 2
    81 label *label91
    82 jump *label95 greaterThan 60 250
 
   100 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   101 label *label99
   102 label *label100
-    * op add :sumPrimesUpTo.0:i 11 2
   103 label *label101
   104 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 13 2
   105 label *label102
   106 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 6 48
-    * op mod *tmp22 6 48
-    * op shl *tmp23 1 6
   107 read *tmp21 BITMAP 0
   108 op and :getBit.0*retval *tmp21 64
   109 label *label103
   110 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   111 jump *label109 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 13 13
   112 op idiv :testAndSetMultiples.0:i 169 2
   113 label *label104
   114 jump *label108 greaterThan 84 250
 
   132 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   133 label *label112
   134 label *label113
-    * op add :sumPrimesUpTo.0:i 13 4
   135 label *label114
   136 label *label115
   137 label *label116
   138 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 17 2
   139 label *label117
   140 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 8 48
-    * op mod *tmp22 8 48
-    * op shl *tmp23 1 8
   141 read *tmp21 BITMAP 0
   142 op and :getBit.0*retval *tmp21 256
   143 label *label118
   144 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   145 jump *label124 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 17 17
   146 op idiv :testAndSetMultiples.0:i 289 2
   147 label *label119
   148 jump *label123 greaterThan 144 250
 
   166 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   167 label *label127
   168 label *label128
-    * op add :sumPrimesUpTo.0:i 17 2
   169 label *label129
   170 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 19 2
   171 label *label130
   172 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 9 48
-    * op mod *tmp22 9 48
-    * op shl *tmp23 1 9
   173 read *tmp21 BITMAP 0
   174 op and :getBit.0*retval *tmp21 512
   175 label *label131
   176 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   177 jump *label137 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 19 19
   178 op idiv :testAndSetMultiples.0:i 361 2
   179 label *label132
   180 jump *label136 greaterThan 180 250
 
   198 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   199 label *label140
   200 label *label141
-    * op add :sumPrimesUpTo.0:i 19 4
   201 label *label142
   202 label *label143
   203 label *label144
   204 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 23 2
   205 label *label145
   206 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 11 48
-    * op mod *tmp22 11 48
-    * op shl *tmp23 1 11
   207 read *tmp21 BITMAP 0
   208 op and :getBit.0*retval *tmp21 2048
   209 label *label146
   210 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   211 jump *label152 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 23 23
   212 op idiv :testAndSetMultiples.0:i 529 2
   213 label *label147
   214 jump *label151 greaterThan 264 250
 
   232 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   233 label *label155
   234 label *label156
-    * op add :sumPrimesUpTo.0:i 23 2
   235 label *label157
   236 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * op idiv :getBit.0:bitIndex 25 2
   237 label *label158
   238 # "Function: def getBit(in bitIndex)"
-    * op idiv *tmp20 12 48
-    * op mod *tmp22 12 48
-    * op shl *tmp23 1 12
   239 read *tmp21 BITMAP 0
   240 op and :getBit.0*retval *tmp21 4096
   241 label *label159
   242 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   243 jump *label165 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 25 25
   244 op idiv :testAndSetMultiples.0:i 625 2
   245 label *label160
   246 jump *label164 greaterThan 312 250

Modifications by Unroll loop at line 17:9 (+19 instructions):
 
   175 label *label131
   176 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   177 jump *label137 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
-    * label *label132
-    * jump *label136 greaterThan 180 250
-    * label *label133
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label134
-    * label *label135
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
-    * jump *label133 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label136
+  178 op idiv :testAndSetMultiples.0:i 361 2
+  179 label *label171
+  180 label *label172
+  181 # "Function: def setBit(in bitIndex)"
+  182 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  183 op mod *tmp36 :testAndSetMultiples.0:i 48
+  184 op shl *tmp37 1 *tmp36
+  185 read *tmp35 BITMAP *tmp34
+  186 op or *tmp38 *tmp35 *tmp37
+  187 write *tmp38 BITMAP *tmp34
+  188 label *label173
+  189 label *label174
+  190 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  191 label *label175
+  192 # "Function: def setBit(in bitIndex)"
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label176
+  200 label *label177
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  202 label *label178
+  203 # "Function: def setBit(in bitIndex)"
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label179
+  211 label *label180
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  213 label *label181
+  214 # "Function: def setBit(in bitIndex)"
+  215 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  216 op mod *tmp36 :testAndSetMultiples.0:i 48
+  217 op shl *tmp37 1 *tmp36
+  218 read *tmp35 BITMAP *tmp34
+  219 op or *tmp38 *tmp35 *tmp37
+  220 write *tmp38 BITMAP *tmp34
+  221 label *label182
+  222 label *label183
+  223 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  224 label *label136
   225 label *label137
   226 label *label138
   227 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   179 label *label171
   180 label *label172
   181 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  182 op idiv *tmp34 180 48
+  183 op mod *tmp36 180 48
+  184 op shl *tmp37 1 36
+  185 read *tmp35 BITMAP 3
+  186 op or *tmp38 *tmp35 68719476736
+  187 write *tmp38 BITMAP 3
   188 label *label173
   189 label *label174
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  190 op add :testAndSetMultiples.0:i 180 19
   191 label *label175
   192 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 199 48
+  194 op mod *tmp36 199 48
+  195 op shl *tmp37 1 7
+  196 read *tmp35 BITMAP 4
+  197 op or *tmp38 *tmp35 128
+  198 write *tmp38 BITMAP 4
   199 label *label176
   200 label *label177
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  201 op add :testAndSetMultiples.0:i 199 19
   202 label *label178
   203 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 218 48
+  205 op mod *tmp36 218 48
+  206 op shl *tmp37 1 26
+  207 read *tmp35 BITMAP 4
+  208 op or *tmp38 *tmp35 67108864
+  209 write *tmp38 BITMAP 4
   210 label *label179
   211 label *label180
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  212 op add :testAndSetMultiples.0:i 218 19
   213 label *label181
   214 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  215 op idiv *tmp34 237 48
+  216 op mod *tmp36 237 48
+  217 op shl *tmp37 1 45
+  218 read *tmp35 BITMAP 4
+  219 op or *tmp38 *tmp35 35184372088832
+  220 write *tmp38 BITMAP 4
   221 label *label182
   222 label *label183
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  223 op add :testAndSetMultiples.0:i 237 19
   224 label *label136
   225 label *label137
   226 label *label138

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
 
   175 label *label131
   176 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   177 jump *label137 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
   178 label *label171
   179 label *label172
   180 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 180 48
-    * op mod *tmp36 180 48
-    * op shl *tmp37 1 36
   181 read *tmp35 BITMAP 3
   182 op or *tmp38 *tmp35 68719476736
   183 write *tmp38 BITMAP 3
   184 label *label173
   185 label *label174
-    * op add :testAndSetMultiples.0:i 180 19
   186 label *label175
   187 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   188 read *tmp35 BITMAP 4
   189 op or *tmp38 *tmp35 128
   190 write *tmp38 BITMAP 4
   191 label *label176
   192 label *label177
-    * op add :testAndSetMultiples.0:i 199 19
   193 label *label178
   194 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 218 48
-    * op mod *tmp36 218 48
-    * op shl *tmp37 1 26
   195 read *tmp35 BITMAP 4
   196 op or *tmp38 *tmp35 67108864
   197 write *tmp38 BITMAP 4
   198 label *label179
   199 label *label180
-    * op add :testAndSetMultiples.0:i 218 19
   200 label *label181
   201 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   202 read *tmp35 BITMAP 4
   203 op or *tmp38 *tmp35 35184372088832
   204 write *tmp38 BITMAP 4
   205 label *label182
   206 label *label183
-    * op add :testAndSetMultiples.0:i 237 19
   207 label *label136
   208 label *label137
   209 label *label138

Modifications by Unroll loop at line 17:9 (+40 instructions):
 
   143 label *label118
   144 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   145 jump *label124 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
-    * label *label119
-    * jump *label123 greaterThan 144 250
-    * label *label120
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label121
-    * label *label122
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
-    * jump *label120 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label123
+  146 op idiv :testAndSetMultiples.0:i 289 2
+  147 label *label184
+  148 label *label185
+  149 # "Function: def setBit(in bitIndex)"
+  150 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  151 op mod *tmp36 :testAndSetMultiples.0:i 48
+  152 op shl *tmp37 1 *tmp36
+  153 read *tmp35 BITMAP *tmp34
+  154 op or *tmp38 *tmp35 *tmp37
+  155 write *tmp38 BITMAP *tmp34
+  156 label *label186
+  157 label *label187
+  158 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  159 label *label188
+  160 # "Function: def setBit(in bitIndex)"
+  161 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  162 op mod *tmp36 :testAndSetMultiples.0:i 48
+  163 op shl *tmp37 1 *tmp36
+  164 read *tmp35 BITMAP *tmp34
+  165 op or *tmp38 *tmp35 *tmp37
+  166 write *tmp38 BITMAP *tmp34
+  167 label *label189
+  168 label *label190
+  169 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  170 label *label191
+  171 # "Function: def setBit(in bitIndex)"
+  172 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  173 op mod *tmp36 :testAndSetMultiples.0:i 48
+  174 op shl *tmp37 1 *tmp36
+  175 read *tmp35 BITMAP *tmp34
+  176 op or *tmp38 *tmp35 *tmp37
+  177 write *tmp38 BITMAP *tmp34
+  178 label *label192
+  179 label *label193
+  180 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  181 label *label194
+  182 # "Function: def setBit(in bitIndex)"
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label195
+  190 label *label196
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  192 label *label197
+  193 # "Function: def setBit(in bitIndex)"
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label198
+  201 label *label199
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  203 label *label200
+  204 # "Function: def setBit(in bitIndex)"
+  205 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  206 op mod *tmp36 :testAndSetMultiples.0:i 48
+  207 op shl *tmp37 1 *tmp36
+  208 read *tmp35 BITMAP *tmp34
+  209 op or *tmp38 *tmp35 *tmp37
+  210 write *tmp38 BITMAP *tmp34
+  211 label *label201
+  212 label *label202
+  213 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  214 label *label203
+  215 # "Function: def setBit(in bitIndex)"
+  216 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  217 op mod *tmp36 :testAndSetMultiples.0:i 48
+  218 op shl *tmp37 1 *tmp36
+  219 read *tmp35 BITMAP *tmp34
+  220 op or *tmp38 *tmp35 *tmp37
+  221 write *tmp38 BITMAP *tmp34
+  222 label *label204
+  223 label *label205
+  224 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  225 label *label123
   226 label *label124
   227 label *label125
   228 label *label126

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   147 label *label184
   148 label *label185
   149 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  150 op idiv *tmp34 144 48
+  151 op mod *tmp36 144 48
+  152 op shl *tmp37 1 0
+  153 read *tmp35 BITMAP 3
+  154 op or *tmp38 *tmp35 1
+  155 write *tmp38 BITMAP 3
   156 label *label186
   157 label *label187
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  158 op add :testAndSetMultiples.0:i 144 17
   159 label *label188
   160 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  161 op idiv *tmp34 161 48
+  162 op mod *tmp36 161 48
+  163 op shl *tmp37 1 17
+  164 read *tmp35 BITMAP 3
+  165 op or *tmp38 *tmp35 131072
+  166 write *tmp38 BITMAP 3
   167 label *label189
   168 label *label190
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  169 op add :testAndSetMultiples.0:i 161 17
   170 label *label191
   171 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  172 op idiv *tmp34 178 48
+  173 op mod *tmp36 178 48
+  174 op shl *tmp37 1 34
+  175 read *tmp35 BITMAP 3
+  176 op or *tmp38 *tmp35 17179869184
+  177 write *tmp38 BITMAP 3
   178 label *label192
   179 label *label193
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  180 op add :testAndSetMultiples.0:i 178 17
   181 label *label194
   182 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 195 48
+  184 op mod *tmp36 195 48
+  185 op shl *tmp37 1 3
+  186 read *tmp35 BITMAP 4
+  187 op or *tmp38 *tmp35 8
+  188 write *tmp38 BITMAP 4
   189 label *label195
   190 label *label196
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  191 op add :testAndSetMultiples.0:i 195 17
   192 label *label197
   193 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 212 48
+  195 op mod *tmp36 212 48
+  196 op shl *tmp37 1 20
+  197 read *tmp35 BITMAP 4
+  198 op or *tmp38 *tmp35 1048576
+  199 write *tmp38 BITMAP 4
   200 label *label198
   201 label *label199
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  202 op add :testAndSetMultiples.0:i 212 17
   203 label *label200
   204 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  205 op idiv *tmp34 229 48
+  206 op mod *tmp36 229 48
+  207 op shl *tmp37 1 37
+  208 read *tmp35 BITMAP 4
+  209 op or *tmp38 *tmp35 137438953472
+  210 write *tmp38 BITMAP 4
   211 label *label201
   212 label *label202
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  213 op add :testAndSetMultiples.0:i 229 17
   214 label *label203
   215 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  216 op idiv *tmp34 246 48
+  217 op mod *tmp36 246 48
+  218 op shl *tmp37 1 6
+  219 read *tmp35 BITMAP 5
+  220 op or *tmp38 *tmp35 64
+  221 write *tmp38 BITMAP 5
   222 label *label204
   223 label *label205
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  224 op add :testAndSetMultiples.0:i 246 17
   225 label *label123
   226 label *label124
   227 label *label125

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-29 instructions):
 
   143 label *label118
   144 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   145 jump *label124 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
   146 label *label184
   147 label *label185
   148 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 144 48
-    * op mod *tmp36 144 48
-    * op shl *tmp37 1 0
   149 read *tmp35 BITMAP 3
   150 op or *tmp38 *tmp35 1
   151 write *tmp38 BITMAP 3
   152 label *label186
   153 label *label187
-    * op add :testAndSetMultiples.0:i 144 17
   154 label *label188
   155 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 161 48
-    * op mod *tmp36 161 48
-    * op shl *tmp37 1 17
   156 read *tmp35 BITMAP 3
   157 op or *tmp38 *tmp35 131072
   158 write *tmp38 BITMAP 3
   159 label *label189
   160 label *label190
-    * op add :testAndSetMultiples.0:i 161 17
   161 label *label191
   162 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   163 read *tmp35 BITMAP 3
   164 op or *tmp38 *tmp35 17179869184
   165 write *tmp38 BITMAP 3
   166 label *label192
   167 label *label193
-    * op add :testAndSetMultiples.0:i 178 17
   168 label *label194
   169 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 195 48
-    * op mod *tmp36 195 48
-    * op shl *tmp37 1 3
   170 read *tmp35 BITMAP 4
   171 op or *tmp38 *tmp35 8
   172 write *tmp38 BITMAP 4
   173 label *label195
   174 label *label196
-    * op add :testAndSetMultiples.0:i 195 17
   175 label *label197
   176 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   177 read *tmp35 BITMAP 4
   178 op or *tmp38 *tmp35 1048576
   179 write *tmp38 BITMAP 4
   180 label *label198
   181 label *label199
-    * op add :testAndSetMultiples.0:i 212 17
   182 label *label200
   183 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 229 48
-    * op mod *tmp36 229 48
-    * op shl *tmp37 1 37
   184 read *tmp35 BITMAP 4
   185 op or *tmp38 *tmp35 137438953472
   186 write *tmp38 BITMAP 4
   187 label *label201
   188 label *label202
-    * op add :testAndSetMultiples.0:i 229 17
   189 label *label203
   190 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 246 48
-    * op mod *tmp36 246 48
-    * op shl *tmp37 1 6
   191 read *tmp35 BITMAP 5
   192 op or *tmp38 *tmp35 64
   193 write *tmp38 BITMAP 5
   194 label *label204
   195 label *label205
-    * op add :testAndSetMultiples.0:i 246 17
   196 label *label123
   197 label *label124
   198 label *label125

Modifications by Unroll loop at line 17:9 (+82 instructions):
 
   109 label *label103
   110 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   111 jump *label109 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
-    * label *label104
-    * jump *label108 greaterThan 84 250
-    * label *label105
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label106
-    * label *label107
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
-    * jump *label105 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label108
+  112 op idiv :testAndSetMultiples.0:i 169 2
+  113 label *label206
+  114 label *label207
+  115 # "Function: def setBit(in bitIndex)"
+  116 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  117 op mod *tmp36 :testAndSetMultiples.0:i 48
+  118 op shl *tmp37 1 *tmp36
+  119 read *tmp35 BITMAP *tmp34
+  120 op or *tmp38 *tmp35 *tmp37
+  121 write *tmp38 BITMAP *tmp34
+  122 label *label208
+  123 label *label209
+  124 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  125 label *label210
+  126 # "Function: def setBit(in bitIndex)"
+  127 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  128 op mod *tmp36 :testAndSetMultiples.0:i 48
+  129 op shl *tmp37 1 *tmp36
+  130 read *tmp35 BITMAP *tmp34
+  131 op or *tmp38 *tmp35 *tmp37
+  132 write *tmp38 BITMAP *tmp34
+  133 label *label211
+  134 label *label212
+  135 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  136 label *label213
+  137 # "Function: def setBit(in bitIndex)"
+  138 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  139 op mod *tmp36 :testAndSetMultiples.0:i 48
+  140 op shl *tmp37 1 *tmp36
+  141 read *tmp35 BITMAP *tmp34
+  142 op or *tmp38 *tmp35 *tmp37
+  143 write *tmp38 BITMAP *tmp34
+  144 label *label214
+  145 label *label215
+  146 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  147 label *label216
+  148 # "Function: def setBit(in bitIndex)"
+  149 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  150 op mod *tmp36 :testAndSetMultiples.0:i 48
+  151 op shl *tmp37 1 *tmp36
+  152 read *tmp35 BITMAP *tmp34
+  153 op or *tmp38 *tmp35 *tmp37
+  154 write *tmp38 BITMAP *tmp34
+  155 label *label217
+  156 label *label218
+  157 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  158 label *label219
+  159 # "Function: def setBit(in bitIndex)"
+  160 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  161 op mod *tmp36 :testAndSetMultiples.0:i 48
+  162 op shl *tmp37 1 *tmp36
+  163 read *tmp35 BITMAP *tmp34
+  164 op or *tmp38 *tmp35 *tmp37
+  165 write *tmp38 BITMAP *tmp34
+  166 label *label220
+  167 label *label221
+  168 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  169 label *label222
+  170 # "Function: def setBit(in bitIndex)"
+  171 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  172 op mod *tmp36 :testAndSetMultiples.0:i 48
+  173 op shl *tmp37 1 *tmp36
+  174 read *tmp35 BITMAP *tmp34
+  175 op or *tmp38 *tmp35 *tmp37
+  176 write *tmp38 BITMAP *tmp34
+  177 label *label223
+  178 label *label224
+  179 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  180 label *label225
+  181 # "Function: def setBit(in bitIndex)"
+  182 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  183 op mod *tmp36 :testAndSetMultiples.0:i 48
+  184 op shl *tmp37 1 *tmp36
+  185 read *tmp35 BITMAP *tmp34
+  186 op or *tmp38 *tmp35 *tmp37
+  187 write *tmp38 BITMAP *tmp34
+  188 label *label226
+  189 label *label227
+  190 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  191 label *label228
+  192 # "Function: def setBit(in bitIndex)"
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label229
+  200 label *label230
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  202 label *label231
+  203 # "Function: def setBit(in bitIndex)"
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label232
+  211 label *label233
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  213 label *label234
+  214 # "Function: def setBit(in bitIndex)"
+  215 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  216 op mod *tmp36 :testAndSetMultiples.0:i 48
+  217 op shl *tmp37 1 *tmp36
+  218 read *tmp35 BITMAP *tmp34
+  219 op or *tmp38 *tmp35 *tmp37
+  220 write *tmp38 BITMAP *tmp34
+  221 label *label235
+  222 label *label236
+  223 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  224 label *label237
+  225 # "Function: def setBit(in bitIndex)"
+  226 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  227 op mod *tmp36 :testAndSetMultiples.0:i 48
+  228 op shl *tmp37 1 *tmp36
+  229 read *tmp35 BITMAP *tmp34
+  230 op or *tmp38 *tmp35 *tmp37
+  231 write *tmp38 BITMAP *tmp34
+  232 label *label238
+  233 label *label239
+  234 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  235 label *label240
+  236 # "Function: def setBit(in bitIndex)"
+  237 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  238 op mod *tmp36 :testAndSetMultiples.0:i 48
+  239 op shl *tmp37 1 *tmp36
+  240 read *tmp35 BITMAP *tmp34
+  241 op or *tmp38 *tmp35 *tmp37
+  242 write *tmp38 BITMAP *tmp34
+  243 label *label241
+  244 label *label242
+  245 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  246 label *label243
+  247 # "Function: def setBit(in bitIndex)"
+  248 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  249 op mod *tmp36 :testAndSetMultiples.0:i 48
+  250 op shl *tmp37 1 *tmp36
+  251 read *tmp35 BITMAP *tmp34
+  252 op or *tmp38 *tmp35 *tmp37
+  253 write *tmp38 BITMAP *tmp34
+  254 label *label244
+  255 label *label245
+  256 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  257 label *label108
   258 label *label109
   259 label *label110
   260 label *label111

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   113 label *label206
   114 label *label207
   115 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  116 op idiv *tmp34 84 48
+  117 op mod *tmp36 84 48
+  118 op shl *tmp37 1 36
+  119 read *tmp35 BITMAP 1
+  120 op or *tmp38 *tmp35 68719476736
+  121 write *tmp38 BITMAP 1
   122 label *label208
   123 label *label209
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  124 op add :testAndSetMultiples.0:i 84 13
   125 label *label210
   126 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  127 op idiv *tmp34 97 48
+  128 op mod *tmp36 97 48
+  129 op shl *tmp37 1 1
+  130 read *tmp35 BITMAP 2
+  131 op or *tmp38 *tmp35 2
+  132 write *tmp38 BITMAP 2
   133 label *label211
   134 label *label212
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  135 op add :testAndSetMultiples.0:i 97 13
   136 label *label213
   137 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  138 op idiv *tmp34 110 48
+  139 op mod *tmp36 110 48
+  140 op shl *tmp37 1 14
+  141 read *tmp35 BITMAP 2
+  142 op or *tmp38 *tmp35 16384
+  143 write *tmp38 BITMAP 2
   144 label *label214
   145 label *label215
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  146 op add :testAndSetMultiples.0:i 110 13
   147 label *label216
   148 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  149 op idiv *tmp34 123 48
+  150 op mod *tmp36 123 48
+  151 op shl *tmp37 1 27
+  152 read *tmp35 BITMAP 2
+  153 op or *tmp38 *tmp35 134217728
+  154 write *tmp38 BITMAP 2
   155 label *label217
   156 label *label218
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  157 op add :testAndSetMultiples.0:i 123 13
   158 label *label219
   159 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  160 op idiv *tmp34 136 48
+  161 op mod *tmp36 136 48
+  162 op shl *tmp37 1 40
+  163 read *tmp35 BITMAP 2
+  164 op or *tmp38 *tmp35 1099511627776
+  165 write *tmp38 BITMAP 2
   166 label *label220
   167 label *label221
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  168 op add :testAndSetMultiples.0:i 136 13
   169 label *label222
   170 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  171 op idiv *tmp34 149 48
+  172 op mod *tmp36 149 48
+  173 op shl *tmp37 1 5
+  174 read *tmp35 BITMAP 3
+  175 op or *tmp38 *tmp35 32
+  176 write *tmp38 BITMAP 3
   177 label *label223
   178 label *label224
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  179 op add :testAndSetMultiples.0:i 149 13
   180 label *label225
   181 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  182 op idiv *tmp34 162 48
+  183 op mod *tmp36 162 48
+  184 op shl *tmp37 1 18
+  185 read *tmp35 BITMAP 3
+  186 op or *tmp38 *tmp35 262144
+  187 write *tmp38 BITMAP 3
   188 label *label226
   189 label *label227
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  190 op add :testAndSetMultiples.0:i 162 13
   191 label *label228
   192 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 175 48
+  194 op mod *tmp36 175 48
+  195 op shl *tmp37 1 31
+  196 read *tmp35 BITMAP 3
+  197 op or *tmp38 *tmp35 2147483648
+  198 write *tmp38 BITMAP 3
   199 label *label229
   200 label *label230
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  201 op add :testAndSetMultiples.0:i 175 13
   202 label *label231
   203 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 188 48
+  205 op mod *tmp36 188 48
+  206 op shl *tmp37 1 44
+  207 read *tmp35 BITMAP 3
+  208 op or *tmp38 *tmp35 17592186044416
+  209 write *tmp38 BITMAP 3
   210 label *label232
   211 label *label233
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  212 op add :testAndSetMultiples.0:i 188 13
   213 label *label234
   214 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  215 op idiv *tmp34 201 48
+  216 op mod *tmp36 201 48
+  217 op shl *tmp37 1 9
+  218 read *tmp35 BITMAP 4
+  219 op or *tmp38 *tmp35 512
+  220 write *tmp38 BITMAP 4
   221 label *label235
   222 label *label236
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  223 op add :testAndSetMultiples.0:i 201 13
   224 label *label237
   225 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  226 op idiv *tmp34 214 48
+  227 op mod *tmp36 214 48
+  228 op shl *tmp37 1 22
+  229 read *tmp35 BITMAP 4
+  230 op or *tmp38 *tmp35 4194304
+  231 write *tmp38 BITMAP 4
   232 label *label238
   233 label *label239
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  234 op add :testAndSetMultiples.0:i 214 13
   235 label *label240
   236 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  237 op idiv *tmp34 227 48
+  238 op mod *tmp36 227 48
+  239 op shl *tmp37 1 35
+  240 read *tmp35 BITMAP 4
+  241 op or *tmp38 *tmp35 34359738368
+  242 write *tmp38 BITMAP 4
   243 label *label241
   244 label *label242
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  245 op add :testAndSetMultiples.0:i 227 13
   246 label *label243
   247 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  248 op idiv *tmp34 240 48
+  249 op mod *tmp36 240 48
+  250 op shl *tmp37 1 0
+  251 read *tmp35 BITMAP 5
+  252 op or *tmp38 *tmp35 1
+  253 write *tmp38 BITMAP 5
   254 label *label244
   255 label *label245
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  256 op add :testAndSetMultiples.0:i 240 13
   257 label *label108
   258 label *label109
   259 label *label110

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-53 instructions):
 
   109 label *label103
   110 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   111 jump *label109 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
   112 label *label206
   113 label *label207
   114 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 84 48
-    * op mod *tmp36 84 48
-    * op shl *tmp37 1 36
   115 read *tmp35 BITMAP 1
   116 op or *tmp38 *tmp35 68719476736
   117 write *tmp38 BITMAP 1
   118 label *label208
   119 label *label209
-    * op add :testAndSetMultiples.0:i 84 13
   120 label *label210
   121 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   122 read *tmp35 BITMAP 2
   123 op or *tmp38 *tmp35 2
   124 write *tmp38 BITMAP 2
   125 label *label211
   126 label *label212
-    * op add :testAndSetMultiples.0:i 97 13
   127 label *label213
   128 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 110 48
-    * op mod *tmp36 110 48
-    * op shl *tmp37 1 14
   129 read *tmp35 BITMAP 2
   130 op or *tmp38 *tmp35 16384
   131 write *tmp38 BITMAP 2
   132 label *label214
   133 label *label215
-    * op add :testAndSetMultiples.0:i 110 13
   134 label *label216
   135 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 123 48
-    * op mod *tmp36 123 48
-    * op shl *tmp37 1 27
   136 read *tmp35 BITMAP 2
   137 op or *tmp38 *tmp35 134217728
   138 write *tmp38 BITMAP 2
   139 label *label217
   140 label *label218
-    * op add :testAndSetMultiples.0:i 123 13
   141 label *label219
   142 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   143 read *tmp35 BITMAP 2
   144 op or *tmp38 *tmp35 1099511627776
   145 write *tmp38 BITMAP 2
   146 label *label220
   147 label *label221
-    * op add :testAndSetMultiples.0:i 136 13
   148 label *label222
   149 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 149 48
-    * op mod *tmp36 149 48
-    * op shl *tmp37 1 5
   150 read *tmp35 BITMAP 3
   151 op or *tmp38 *tmp35 32
   152 write *tmp38 BITMAP 3
   153 label *label223
   154 label *label224
-    * op add :testAndSetMultiples.0:i 149 13
   155 label *label225
   156 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   157 read *tmp35 BITMAP 3
   158 op or *tmp38 *tmp35 262144
   159 write *tmp38 BITMAP 3
   160 label *label226
   161 label *label227
-    * op add :testAndSetMultiples.0:i 162 13
   162 label *label228
   163 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 175 48
-    * op mod *tmp36 175 48
-    * op shl *tmp37 1 31
   164 read *tmp35 BITMAP 3
   165 op or *tmp38 *tmp35 2147483648
   166 write *tmp38 BITMAP 3
   167 label *label229
   168 label *label230
-    * op add :testAndSetMultiples.0:i 175 13
   169 label *label231
   170 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 188 48
-    * op mod *tmp36 188 48
-    * op shl *tmp37 1 44
   171 read *tmp35 BITMAP 3
   172 op or *tmp38 *tmp35 17592186044416
   173 write *tmp38 BITMAP 3
   174 label *label232
   175 label *label233
-    * op add :testAndSetMultiples.0:i 188 13
   176 label *label234
   177 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 201 48
-    * op mod *tmp36 201 48
-    * op shl *tmp37 1 9
   178 read *tmp35 BITMAP 4
   179 op or *tmp38 *tmp35 512
   180 write *tmp38 BITMAP 4
   181 label *label235
   182 label *label236
-    * op add :testAndSetMultiples.0:i 201 13
   183 label *label237
   184 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   185 read *tmp35 BITMAP 4
   186 op or *tmp38 *tmp35 4194304
   187 write *tmp38 BITMAP 4
   188 label *label238
   189 label *label239
-    * op add :testAndSetMultiples.0:i 214 13
   190 label *label240
   191 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   192 read *tmp35 BITMAP 4
   193 op or *tmp38 *tmp35 34359738368
   194 write *tmp38 BITMAP 4
   195 label *label241
   196 label *label242
-    * op add :testAndSetMultiples.0:i 227 13
   197 label *label243
   198 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 240 48
-    * op mod *tmp36 240 48
-    * op shl *tmp37 1 0
   199 read *tmp35 BITMAP 5
   200 op or *tmp38 *tmp35 1
   201 write *tmp38 BITMAP 5
   202 label *label244
   203 label *label245
-    * op add :testAndSetMultiples.0:i 240 13
   204 label *label108
   205 label *label109
   206 label *label110

Modifications by Unroll loop at line 17:9 (+117 instructions):
 
    77 label *label90
    78 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    79 jump *label96 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
-    * label *label91
-    * jump *label95 greaterThan 60 250
-    * label *label92
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label93
-    * label *label94
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
-    * jump *label92 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label95
+   80 op idiv :testAndSetMultiples.0:i 121 2
+   81 label *label246
+   82 label *label247
+   83 # "Function: def setBit(in bitIndex)"
+   84 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   85 op mod *tmp36 :testAndSetMultiples.0:i 48
+   86 op shl *tmp37 1 *tmp36
+   87 read *tmp35 BITMAP *tmp34
+   88 op or *tmp38 *tmp35 *tmp37
+   89 write *tmp38 BITMAP *tmp34
+   90 label *label248
+   91 label *label249
+   92 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   93 label *label250
+   94 # "Function: def setBit(in bitIndex)"
+   95 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   96 op mod *tmp36 :testAndSetMultiples.0:i 48
+   97 op shl *tmp37 1 *tmp36
+   98 read *tmp35 BITMAP *tmp34
+   99 op or *tmp38 *tmp35 *tmp37
+  100 write *tmp38 BITMAP *tmp34
+  101 label *label251
+  102 label *label252
+  103 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  104 label *label253
+  105 # "Function: def setBit(in bitIndex)"
+  106 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  107 op mod *tmp36 :testAndSetMultiples.0:i 48
+  108 op shl *tmp37 1 *tmp36
+  109 read *tmp35 BITMAP *tmp34
+  110 op or *tmp38 *tmp35 *tmp37
+  111 write *tmp38 BITMAP *tmp34
+  112 label *label254
+  113 label *label255
+  114 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  115 label *label256
+  116 # "Function: def setBit(in bitIndex)"
+  117 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  118 op mod *tmp36 :testAndSetMultiples.0:i 48
+  119 op shl *tmp37 1 *tmp36
+  120 read *tmp35 BITMAP *tmp34
+  121 op or *tmp38 *tmp35 *tmp37
+  122 write *tmp38 BITMAP *tmp34
+  123 label *label257
+  124 label *label258
+  125 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  126 label *label259
+  127 # "Function: def setBit(in bitIndex)"
+  128 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  129 op mod *tmp36 :testAndSetMultiples.0:i 48
+  130 op shl *tmp37 1 *tmp36
+  131 read *tmp35 BITMAP *tmp34
+  132 op or *tmp38 *tmp35 *tmp37
+  133 write *tmp38 BITMAP *tmp34
+  134 label *label260
+  135 label *label261
+  136 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  137 label *label262
+  138 # "Function: def setBit(in bitIndex)"
+  139 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  140 op mod *tmp36 :testAndSetMultiples.0:i 48
+  141 op shl *tmp37 1 *tmp36
+  142 read *tmp35 BITMAP *tmp34
+  143 op or *tmp38 *tmp35 *tmp37
+  144 write *tmp38 BITMAP *tmp34
+  145 label *label263
+  146 label *label264
+  147 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  148 label *label265
+  149 # "Function: def setBit(in bitIndex)"
+  150 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  151 op mod *tmp36 :testAndSetMultiples.0:i 48
+  152 op shl *tmp37 1 *tmp36
+  153 read *tmp35 BITMAP *tmp34
+  154 op or *tmp38 *tmp35 *tmp37
+  155 write *tmp38 BITMAP *tmp34
+  156 label *label266
+  157 label *label267
+  158 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  159 label *label268
+  160 # "Function: def setBit(in bitIndex)"
+  161 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  162 op mod *tmp36 :testAndSetMultiples.0:i 48
+  163 op shl *tmp37 1 *tmp36
+  164 read *tmp35 BITMAP *tmp34
+  165 op or *tmp38 *tmp35 *tmp37
+  166 write *tmp38 BITMAP *tmp34
+  167 label *label269
+  168 label *label270
+  169 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  170 label *label271
+  171 # "Function: def setBit(in bitIndex)"
+  172 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  173 op mod *tmp36 :testAndSetMultiples.0:i 48
+  174 op shl *tmp37 1 *tmp36
+  175 read *tmp35 BITMAP *tmp34
+  176 op or *tmp38 *tmp35 *tmp37
+  177 write *tmp38 BITMAP *tmp34
+  178 label *label272
+  179 label *label273
+  180 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  181 label *label274
+  182 # "Function: def setBit(in bitIndex)"
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label275
+  190 label *label276
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  192 label *label277
+  193 # "Function: def setBit(in bitIndex)"
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label278
+  201 label *label279
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  203 label *label280
+  204 # "Function: def setBit(in bitIndex)"
+  205 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  206 op mod *tmp36 :testAndSetMultiples.0:i 48
+  207 op shl *tmp37 1 *tmp36
+  208 read *tmp35 BITMAP *tmp34
+  209 op or *tmp38 *tmp35 *tmp37
+  210 write *tmp38 BITMAP *tmp34
+  211 label *label281
+  212 label *label282
+  213 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  214 label *label283
+  215 # "Function: def setBit(in bitIndex)"
+  216 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  217 op mod *tmp36 :testAndSetMultiples.0:i 48
+  218 op shl *tmp37 1 *tmp36
+  219 read *tmp35 BITMAP *tmp34
+  220 op or *tmp38 *tmp35 *tmp37
+  221 write *tmp38 BITMAP *tmp34
+  222 label *label284
+  223 label *label285
+  224 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  225 label *label286
+  226 # "Function: def setBit(in bitIndex)"
+  227 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  228 op mod *tmp36 :testAndSetMultiples.0:i 48
+  229 op shl *tmp37 1 *tmp36
+  230 read *tmp35 BITMAP *tmp34
+  231 op or *tmp38 *tmp35 *tmp37
+  232 write *tmp38 BITMAP *tmp34
+  233 label *label287
+  234 label *label288
+  235 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  236 label *label289
+  237 # "Function: def setBit(in bitIndex)"
+  238 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  239 op mod *tmp36 :testAndSetMultiples.0:i 48
+  240 op shl *tmp37 1 *tmp36
+  241 read *tmp35 BITMAP *tmp34
+  242 op or *tmp38 *tmp35 *tmp37
+  243 write *tmp38 BITMAP *tmp34
+  244 label *label290
+  245 label *label291
+  246 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  247 label *label292
+  248 # "Function: def setBit(in bitIndex)"
+  249 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  250 op mod *tmp36 :testAndSetMultiples.0:i 48
+  251 op shl *tmp37 1 *tmp36
+  252 read *tmp35 BITMAP *tmp34
+  253 op or *tmp38 *tmp35 *tmp37
+  254 write *tmp38 BITMAP *tmp34
+  255 label *label293
+  256 label *label294
+  257 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  258 label *label295
+  259 # "Function: def setBit(in bitIndex)"
+  260 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  261 op mod *tmp36 :testAndSetMultiples.0:i 48
+  262 op shl *tmp37 1 *tmp36
+  263 read *tmp35 BITMAP *tmp34
+  264 op or *tmp38 *tmp35 *tmp37
+  265 write *tmp38 BITMAP *tmp34
+  266 label *label296
+  267 label *label297
+  268 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  269 label *label298
+  270 # "Function: def setBit(in bitIndex)"
+  271 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  272 op mod *tmp36 :testAndSetMultiples.0:i 48
+  273 op shl *tmp37 1 *tmp36
+  274 read *tmp35 BITMAP *tmp34
+  275 op or *tmp38 *tmp35 *tmp37
+  276 write *tmp38 BITMAP *tmp34
+  277 label *label299
+  278 label *label300
+  279 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  280 label *label95
   281 label *label96
   282 label *label97
   283 label *label98

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    81 label *label246
    82 label *label247
    83 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   84 op idiv *tmp34 60 48
+   85 op mod *tmp36 60 48
+   86 op shl *tmp37 1 12
+   87 read *tmp35 BITMAP 1
+   88 op or *tmp38 *tmp35 4096
+   89 write *tmp38 BITMAP 1
    90 label *label248
    91 label *label249
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   92 op add :testAndSetMultiples.0:i 60 11
    93 label *label250
    94 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   95 op idiv *tmp34 71 48
+   96 op mod *tmp36 71 48
+   97 op shl *tmp37 1 23
+   98 read *tmp35 BITMAP 1
+   99 op or *tmp38 *tmp35 8388608
+  100 write *tmp38 BITMAP 1
   101 label *label251
   102 label *label252
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  103 op add :testAndSetMultiples.0:i 71 11
   104 label *label253
   105 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  106 op idiv *tmp34 82 48
+  107 op mod *tmp36 82 48
+  108 op shl *tmp37 1 34
+  109 read *tmp35 BITMAP 1
+  110 op or *tmp38 *tmp35 17179869184
+  111 write *tmp38 BITMAP 1
   112 label *label254
   113 label *label255
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  114 op add :testAndSetMultiples.0:i 82 11
   115 label *label256
   116 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  117 op idiv *tmp34 93 48
+  118 op mod *tmp36 93 48
+  119 op shl *tmp37 1 45
+  120 read *tmp35 BITMAP 1
+  121 op or *tmp38 *tmp35 35184372088832
+  122 write *tmp38 BITMAP 1
   123 label *label257
   124 label *label258
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  125 op add :testAndSetMultiples.0:i 93 11
   126 label *label259
   127 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  128 op idiv *tmp34 104 48
+  129 op mod *tmp36 104 48
+  130 op shl *tmp37 1 8
+  131 read *tmp35 BITMAP 2
+  132 op or *tmp38 *tmp35 256
+  133 write *tmp38 BITMAP 2
   134 label *label260
   135 label *label261
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  136 op add :testAndSetMultiples.0:i 104 11
   137 label *label262
   138 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  139 op idiv *tmp34 115 48
+  140 op mod *tmp36 115 48
+  141 op shl *tmp37 1 19
+  142 read *tmp35 BITMAP 2
+  143 op or *tmp38 *tmp35 524288
+  144 write *tmp38 BITMAP 2
   145 label *label263
   146 label *label264
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  147 op add :testAndSetMultiples.0:i 115 11
   148 label *label265
   149 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  150 op idiv *tmp34 126 48
+  151 op mod *tmp36 126 48
+  152 op shl *tmp37 1 30
+  153 read *tmp35 BITMAP 2
+  154 op or *tmp38 *tmp35 1073741824
+  155 write *tmp38 BITMAP 2
   156 label *label266
   157 label *label267
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  158 op add :testAndSetMultiples.0:i 126 11
   159 label *label268
   160 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  161 op idiv *tmp34 137 48
+  162 op mod *tmp36 137 48
+  163 op shl *tmp37 1 41
+  164 read *tmp35 BITMAP 2
+  165 op or *tmp38 *tmp35 2199023255552
+  166 write *tmp38 BITMAP 2
   167 label *label269
   168 label *label270
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  169 op add :testAndSetMultiples.0:i 137 11
   170 label *label271
   171 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  172 op idiv *tmp34 148 48
+  173 op mod *tmp36 148 48
+  174 op shl *tmp37 1 4
+  175 read *tmp35 BITMAP 3
+  176 op or *tmp38 *tmp35 16
+  177 write *tmp38 BITMAP 3
   178 label *label272
   179 label *label273
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  180 op add :testAndSetMultiples.0:i 148 11
   181 label *label274
   182 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 159 48
+  184 op mod *tmp36 159 48
+  185 op shl *tmp37 1 15
+  186 read *tmp35 BITMAP 3
+  187 op or *tmp38 *tmp35 32768
+  188 write *tmp38 BITMAP 3
   189 label *label275
   190 label *label276
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  191 op add :testAndSetMultiples.0:i 159 11
   192 label *label277
   193 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 170 48
+  195 op mod *tmp36 170 48
+  196 op shl *tmp37 1 26
+  197 read *tmp35 BITMAP 3
+  198 op or *tmp38 *tmp35 67108864
+  199 write *tmp38 BITMAP 3
   200 label *label278
   201 label *label279
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  202 op add :testAndSetMultiples.0:i 170 11
   203 label *label280
   204 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  205 op idiv *tmp34 181 48
+  206 op mod *tmp36 181 48
+  207 op shl *tmp37 1 37
+  208 read *tmp35 BITMAP 3
+  209 op or *tmp38 *tmp35 137438953472
+  210 write *tmp38 BITMAP 3
   211 label *label281
   212 label *label282
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  213 op add :testAndSetMultiples.0:i 181 11
   214 label *label283
   215 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  216 op idiv *tmp34 192 48
+  217 op mod *tmp36 192 48
+  218 op shl *tmp37 1 0
+  219 read *tmp35 BITMAP 4
+  220 op or *tmp38 *tmp35 1
+  221 write *tmp38 BITMAP 4
   222 label *label284
   223 label *label285
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  224 op add :testAndSetMultiples.0:i 192 11
   225 label *label286
   226 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  227 op idiv *tmp34 203 48
+  228 op mod *tmp36 203 48
+  229 op shl *tmp37 1 11
+  230 read *tmp35 BITMAP 4
+  231 op or *tmp38 *tmp35 2048
+  232 write *tmp38 BITMAP 4
   233 label *label287
   234 label *label288
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  235 op add :testAndSetMultiples.0:i 203 11
   236 label *label289
   237 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  238 op idiv *tmp34 214 48
+  239 op mod *tmp36 214 48
+  240 op shl *tmp37 1 22
+  241 read *tmp35 BITMAP 4
+  242 op or *tmp38 *tmp35 4194304
+  243 write *tmp38 BITMAP 4
   244 label *label290
   245 label *label291
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  246 op add :testAndSetMultiples.0:i 214 11
   247 label *label292
   248 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  249 op idiv *tmp34 225 48
+  250 op mod *tmp36 225 48
+  251 op shl *tmp37 1 33
+  252 read *tmp35 BITMAP 4
+  253 op or *tmp38 *tmp35 8589934592
+  254 write *tmp38 BITMAP 4
   255 label *label293
   256 label *label294
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  257 op add :testAndSetMultiples.0:i 225 11
   258 label *label295
   259 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  260 op idiv *tmp34 236 48
+  261 op mod *tmp36 236 48
+  262 op shl *tmp37 1 44
+  263 read *tmp35 BITMAP 4
+  264 op or *tmp38 *tmp35 17592186044416
+  265 write *tmp38 BITMAP 4
   266 label *label296
   267 label *label297
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  268 op add :testAndSetMultiples.0:i 236 11
   269 label *label298
   270 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  271 op idiv *tmp34 247 48
+  272 op mod *tmp36 247 48
+  273 op shl *tmp37 1 7
+  274 read *tmp35 BITMAP 5
+  275 op or *tmp38 *tmp35 128
+  276 write *tmp38 BITMAP 5
   277 label *label299
   278 label *label300
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  279 op add :testAndSetMultiples.0:i 247 11
   280 label *label95
   281 label *label96
   282 label *label97

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-73 instructions):
 
    77 label *label90
    78 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    79 jump *label96 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
    80 label *label246
    81 label *label247
    82 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 60 48
-    * op mod *tmp36 60 48
-    * op shl *tmp37 1 12
    83 read *tmp35 BITMAP 1
    84 op or *tmp38 *tmp35 4096
    85 write *tmp38 BITMAP 1
    86 label *label248
    87 label *label249
-    * op add :testAndSetMultiples.0:i 60 11
    88 label *label250
    89 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 71 48
-    * op mod *tmp36 71 48
-    * op shl *tmp37 1 23
    90 read *tmp35 BITMAP 1
    91 op or *tmp38 *tmp35 8388608
    92 write *tmp38 BITMAP 1
    93 label *label251
    94 label *label252
-    * op add :testAndSetMultiples.0:i 71 11
    95 label *label253
    96 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
    97 read *tmp35 BITMAP 1
    98 op or *tmp38 *tmp35 17179869184
    99 write *tmp38 BITMAP 1
   100 label *label254
   101 label *label255
-    * op add :testAndSetMultiples.0:i 82 11
   102 label *label256
   103 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 93 48
-    * op mod *tmp36 93 48
-    * op shl *tmp37 1 45
   104 read *tmp35 BITMAP 1
   105 op or *tmp38 *tmp35 35184372088832
   106 write *tmp38 BITMAP 1
   107 label *label257
   108 label *label258
-    * op add :testAndSetMultiples.0:i 93 11
   109 label *label259
   110 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 104 48
-    * op mod *tmp36 104 48
-    * op shl *tmp37 1 8
   111 read *tmp35 BITMAP 2
   112 op or *tmp38 *tmp35 256
   113 write *tmp38 BITMAP 2
   114 label *label260
   115 label *label261
-    * op add :testAndSetMultiples.0:i 104 11
   116 label *label262
   117 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   118 read *tmp35 BITMAP 2
   119 op or *tmp38 *tmp35 524288
   120 write *tmp38 BITMAP 2
   121 label *label263
   122 label *label264
-    * op add :testAndSetMultiples.0:i 115 11
   123 label *label265
   124 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 126 48
-    * op mod *tmp36 126 48
-    * op shl *tmp37 1 30
   125 read *tmp35 BITMAP 2
   126 op or *tmp38 *tmp35 1073741824
   127 write *tmp38 BITMAP 2
   128 label *label266
   129 label *label267
-    * op add :testAndSetMultiples.0:i 126 11
   130 label *label268
   131 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   132 read *tmp35 BITMAP 2
   133 op or *tmp38 *tmp35 2199023255552
   134 write *tmp38 BITMAP 2
   135 label *label269
   136 label *label270
-    * op add :testAndSetMultiples.0:i 137 11
   137 label *label271
   138 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 148 48
-    * op mod *tmp36 148 48
-    * op shl *tmp37 1 4
   139 read *tmp35 BITMAP 3
   140 op or *tmp38 *tmp35 16
   141 write *tmp38 BITMAP 3
   142 label *label272
   143 label *label273
-    * op add :testAndSetMultiples.0:i 148 11
   144 label *label274
   145 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 159 48
-    * op mod *tmp36 159 48
-    * op shl *tmp37 1 15
   146 read *tmp35 BITMAP 3
   147 op or *tmp38 *tmp35 32768
   148 write *tmp38 BITMAP 3
   149 label *label275
   150 label *label276
-    * op add :testAndSetMultiples.0:i 159 11
   151 label *label277
   152 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 170 48
-    * op mod *tmp36 170 48
-    * op shl *tmp37 1 26
   153 read *tmp35 BITMAP 3
   154 op or *tmp38 *tmp35 67108864
   155 write *tmp38 BITMAP 3
   156 label *label278
   157 label *label279
-    * op add :testAndSetMultiples.0:i 170 11
   158 label *label280
   159 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 181 48
-    * op mod *tmp36 181 48
-    * op shl *tmp37 1 37
   160 read *tmp35 BITMAP 3
   161 op or *tmp38 *tmp35 137438953472
   162 write *tmp38 BITMAP 3
   163 label *label281
   164 label *label282
-    * op add :testAndSetMultiples.0:i 181 11
   165 label *label283
   166 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   167 read *tmp35 BITMAP 4
   168 op or *tmp38 *tmp35 1
   169 write *tmp38 BITMAP 4
   170 label *label284
   171 label *label285
-    * op add :testAndSetMultiples.0:i 192 11
   172 label *label286
   173 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 203 48
-    * op mod *tmp36 203 48
-    * op shl *tmp37 1 11
   174 read *tmp35 BITMAP 4
   175 op or *tmp38 *tmp35 2048
   176 write *tmp38 BITMAP 4
   177 label *label287
   178 label *label288
-    * op add :testAndSetMultiples.0:i 203 11
   179 label *label289
   180 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   181 read *tmp35 BITMAP 4
   182 op or *tmp38 *tmp35 4194304
   183 write *tmp38 BITMAP 4
   184 label *label290
   185 label *label291
-    * op add :testAndSetMultiples.0:i 214 11
   186 label *label292
   187 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 225 48
-    * op mod *tmp36 225 48
-    * op shl *tmp37 1 33
   188 read *tmp35 BITMAP 4
   189 op or *tmp38 *tmp35 8589934592
   190 write *tmp38 BITMAP 4
   191 label *label293
   192 label *label294
-    * op add :testAndSetMultiples.0:i 225 11
   193 label *label295
   194 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 236 48
-    * op mod *tmp36 236 48
-    * op shl *tmp37 1 44
   195 read *tmp35 BITMAP 4
   196 op or *tmp38 *tmp35 17592186044416
   197 write *tmp38 BITMAP 4
   198 label *label296
   199 label *label297
-    * op add :testAndSetMultiples.0:i 236 11
   200 label *label298
   201 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   202 read *tmp35 BITMAP 5
   203 op or *tmp38 *tmp35 128
   204 write *tmp38 BITMAP 5
   205 label *label299
   206 label *label300
-    * op add :testAndSetMultiples.0:i 247 11
   207 label *label95
   208 label *label96
   209 label *label97

Modifications by Unroll loop at line 17:9 (+222 instructions):
 
    43 label *label75
    44 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    45 jump *label81 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
-    * label *label76
-    * jump *label80 greaterThan 24 250
-    * label *label77
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label78
-    * label *label79
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
-    * jump *label77 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label80
+   46 op idiv :testAndSetMultiples.0:i 49 2
+   47 label *label301
+   48 label *label302
+   49 # "Function: def setBit(in bitIndex)"
+   50 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   51 op mod *tmp36 :testAndSetMultiples.0:i 48
+   52 op shl *tmp37 1 *tmp36
+   53 read *tmp35 BITMAP *tmp34
+   54 op or *tmp38 *tmp35 *tmp37
+   55 write *tmp38 BITMAP *tmp34
+   56 label *label303
+   57 label *label304
+   58 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   59 label *label305
+   60 # "Function: def setBit(in bitIndex)"
+   61 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   62 op mod *tmp36 :testAndSetMultiples.0:i 48
+   63 op shl *tmp37 1 *tmp36
+   64 read *tmp35 BITMAP *tmp34
+   65 op or *tmp38 *tmp35 *tmp37
+   66 write *tmp38 BITMAP *tmp34
+   67 label *label306
+   68 label *label307
+   69 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   70 label *label308
+   71 # "Function: def setBit(in bitIndex)"
+   72 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   73 op mod *tmp36 :testAndSetMultiples.0:i 48
+   74 op shl *tmp37 1 *tmp36
+   75 read *tmp35 BITMAP *tmp34
+   76 op or *tmp38 *tmp35 *tmp37
+   77 write *tmp38 BITMAP *tmp34
+   78 label *label309
+   79 label *label310
+   80 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   81 label *label311
+   82 # "Function: def setBit(in bitIndex)"
+   83 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   84 op mod *tmp36 :testAndSetMultiples.0:i 48
+   85 op shl *tmp37 1 *tmp36
+   86 read *tmp35 BITMAP *tmp34
+   87 op or *tmp38 *tmp35 *tmp37
+   88 write *tmp38 BITMAP *tmp34
+   89 label *label312
+   90 label *label313
+   91 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   92 label *label314
+   93 # "Function: def setBit(in bitIndex)"
+   94 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   95 op mod *tmp36 :testAndSetMultiples.0:i 48
+   96 op shl *tmp37 1 *tmp36
+   97 read *tmp35 BITMAP *tmp34
+   98 op or *tmp38 *tmp35 *tmp37
+   99 write *tmp38 BITMAP *tmp34
+  100 label *label315
+  101 label *label316
+  102 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  103 label *label317
+  104 # "Function: def setBit(in bitIndex)"
+  105 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  106 op mod *tmp36 :testAndSetMultiples.0:i 48
+  107 op shl *tmp37 1 *tmp36
+  108 read *tmp35 BITMAP *tmp34
+  109 op or *tmp38 *tmp35 *tmp37
+  110 write *tmp38 BITMAP *tmp34
+  111 label *label318
+  112 label *label319
+  113 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  114 label *label320
+  115 # "Function: def setBit(in bitIndex)"
+  116 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  117 op mod *tmp36 :testAndSetMultiples.0:i 48
+  118 op shl *tmp37 1 *tmp36
+  119 read *tmp35 BITMAP *tmp34
+  120 op or *tmp38 *tmp35 *tmp37
+  121 write *tmp38 BITMAP *tmp34
+  122 label *label321
+  123 label *label322
+  124 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  125 label *label323
+  126 # "Function: def setBit(in bitIndex)"
+  127 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  128 op mod *tmp36 :testAndSetMultiples.0:i 48
+  129 op shl *tmp37 1 *tmp36
+  130 read *tmp35 BITMAP *tmp34
+  131 op or *tmp38 *tmp35 *tmp37
+  132 write *tmp38 BITMAP *tmp34
+  133 label *label324
+  134 label *label325
+  135 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  136 label *label326
+  137 # "Function: def setBit(in bitIndex)"
+  138 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  139 op mod *tmp36 :testAndSetMultiples.0:i 48
+  140 op shl *tmp37 1 *tmp36
+  141 read *tmp35 BITMAP *tmp34
+  142 op or *tmp38 *tmp35 *tmp37
+  143 write *tmp38 BITMAP *tmp34
+  144 label *label327
+  145 label *label328
+  146 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  147 label *label329
+  148 # "Function: def setBit(in bitIndex)"
+  149 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  150 op mod *tmp36 :testAndSetMultiples.0:i 48
+  151 op shl *tmp37 1 *tmp36
+  152 read *tmp35 BITMAP *tmp34
+  153 op or *tmp38 *tmp35 *tmp37
+  154 write *tmp38 BITMAP *tmp34
+  155 label *label330
+  156 label *label331
+  157 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  158 label *label332
+  159 # "Function: def setBit(in bitIndex)"
+  160 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  161 op mod *tmp36 :testAndSetMultiples.0:i 48
+  162 op shl *tmp37 1 *tmp36
+  163 read *tmp35 BITMAP *tmp34
+  164 op or *tmp38 *tmp35 *tmp37
+  165 write *tmp38 BITMAP *tmp34
+  166 label *label333
+  167 label *label334
+  168 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  169 label *label335
+  170 # "Function: def setBit(in bitIndex)"
+  171 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  172 op mod *tmp36 :testAndSetMultiples.0:i 48
+  173 op shl *tmp37 1 *tmp36
+  174 read *tmp35 BITMAP *tmp34
+  175 op or *tmp38 *tmp35 *tmp37
+  176 write *tmp38 BITMAP *tmp34
+  177 label *label336
+  178 label *label337
+  179 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  180 label *label338
+  181 # "Function: def setBit(in bitIndex)"
+  182 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  183 op mod *tmp36 :testAndSetMultiples.0:i 48
+  184 op shl *tmp37 1 *tmp36
+  185 read *tmp35 BITMAP *tmp34
+  186 op or *tmp38 *tmp35 *tmp37
+  187 write *tmp38 BITMAP *tmp34
+  188 label *label339
+  189 label *label340
+  190 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  191 label *label341
+  192 # "Function: def setBit(in bitIndex)"
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label342
+  200 label *label343
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  202 label *label344
+  203 # "Function: def setBit(in bitIndex)"
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label345
+  211 label *label346
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  213 label *label347
+  214 # "Function: def setBit(in bitIndex)"
+  215 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  216 op mod *tmp36 :testAndSetMultiples.0:i 48
+  217 op shl *tmp37 1 *tmp36
+  218 read *tmp35 BITMAP *tmp34
+  219 op or *tmp38 *tmp35 *tmp37
+  220 write *tmp38 BITMAP *tmp34
+  221 label *label348
+  222 label *label349
+  223 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  224 label *label350
+  225 # "Function: def setBit(in bitIndex)"
+  226 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  227 op mod *tmp36 :testAndSetMultiples.0:i 48
+  228 op shl *tmp37 1 *tmp36
+  229 read *tmp35 BITMAP *tmp34
+  230 op or *tmp38 *tmp35 *tmp37
+  231 write *tmp38 BITMAP *tmp34
+  232 label *label351
+  233 label *label352
+  234 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  235 label *label353
+  236 # "Function: def setBit(in bitIndex)"
+  237 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  238 op mod *tmp36 :testAndSetMultiples.0:i 48
+  239 op shl *tmp37 1 *tmp36
+  240 read *tmp35 BITMAP *tmp34
+  241 op or *tmp38 *tmp35 *tmp37
+  242 write *tmp38 BITMAP *tmp34
+  243 label *label354
+  244 label *label355
+  245 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  246 label *label356
+  247 # "Function: def setBit(in bitIndex)"
+  248 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  249 op mod *tmp36 :testAndSetMultiples.0:i 48
+  250 op shl *tmp37 1 *tmp36
+  251 read *tmp35 BITMAP *tmp34
+  252 op or *tmp38 *tmp35 *tmp37
+  253 write *tmp38 BITMAP *tmp34
+  254 label *label357
+  255 label *label358
+  256 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  257 label *label359
+  258 # "Function: def setBit(in bitIndex)"
+  259 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  260 op mod *tmp36 :testAndSetMultiples.0:i 48
+  261 op shl *tmp37 1 *tmp36
+  262 read *tmp35 BITMAP *tmp34
+  263 op or *tmp38 *tmp35 *tmp37
+  264 write *tmp38 BITMAP *tmp34
+  265 label *label360
+  266 label *label361
+  267 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  268 label *label362
+  269 # "Function: def setBit(in bitIndex)"
+  270 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  271 op mod *tmp36 :testAndSetMultiples.0:i 48
+  272 op shl *tmp37 1 *tmp36
+  273 read *tmp35 BITMAP *tmp34
+  274 op or *tmp38 *tmp35 *tmp37
+  275 write *tmp38 BITMAP *tmp34
+  276 label *label363
+  277 label *label364
+  278 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  279 label *label365
+  280 # "Function: def setBit(in bitIndex)"
+  281 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  282 op mod *tmp36 :testAndSetMultiples.0:i 48
+  283 op shl *tmp37 1 *tmp36
+  284 read *tmp35 BITMAP *tmp34
+  285 op or *tmp38 *tmp35 *tmp37
+  286 write *tmp38 BITMAP *tmp34
+  287 label *label366
+  288 label *label367
+  289 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  290 label *label368
+  291 # "Function: def setBit(in bitIndex)"
+  292 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  293 op mod *tmp36 :testAndSetMultiples.0:i 48
+  294 op shl *tmp37 1 *tmp36
+  295 read *tmp35 BITMAP *tmp34
+  296 op or *tmp38 *tmp35 *tmp37
+  297 write *tmp38 BITMAP *tmp34
+  298 label *label369
+  299 label *label370
+  300 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  301 label *label371
+  302 # "Function: def setBit(in bitIndex)"
+  303 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  304 op mod *tmp36 :testAndSetMultiples.0:i 48
+  305 op shl *tmp37 1 *tmp36
+  306 read *tmp35 BITMAP *tmp34
+  307 op or *tmp38 *tmp35 *tmp37
+  308 write *tmp38 BITMAP *tmp34
+  309 label *label372
+  310 label *label373
+  311 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  312 label *label374
+  313 # "Function: def setBit(in bitIndex)"
+  314 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  315 op mod *tmp36 :testAndSetMultiples.0:i 48
+  316 op shl *tmp37 1 *tmp36
+  317 read *tmp35 BITMAP *tmp34
+  318 op or *tmp38 *tmp35 *tmp37
+  319 write *tmp38 BITMAP *tmp34
+  320 label *label375
+  321 label *label376
+  322 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  323 label *label377
+  324 # "Function: def setBit(in bitIndex)"
+  325 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  326 op mod *tmp36 :testAndSetMultiples.0:i 48
+  327 op shl *tmp37 1 *tmp36
+  328 read *tmp35 BITMAP *tmp34
+  329 op or *tmp38 *tmp35 *tmp37
+  330 write *tmp38 BITMAP *tmp34
+  331 label *label378
+  332 label *label379
+  333 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  334 label *label380
+  335 # "Function: def setBit(in bitIndex)"
+  336 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  337 op mod *tmp36 :testAndSetMultiples.0:i 48
+  338 op shl *tmp37 1 *tmp36
+  339 read *tmp35 BITMAP *tmp34
+  340 op or *tmp38 *tmp35 *tmp37
+  341 write *tmp38 BITMAP *tmp34
+  342 label *label381
+  343 label *label382
+  344 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  345 label *label383
+  346 # "Function: def setBit(in bitIndex)"
+  347 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  348 op mod *tmp36 :testAndSetMultiples.0:i 48
+  349 op shl *tmp37 1 *tmp36
+  350 read *tmp35 BITMAP *tmp34
+  351 op or *tmp38 *tmp35 *tmp37
+  352 write *tmp38 BITMAP *tmp34
+  353 label *label384
+  354 label *label385
+  355 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  356 label *label386
+  357 # "Function: def setBit(in bitIndex)"
+  358 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  359 op mod *tmp36 :testAndSetMultiples.0:i 48
+  360 op shl *tmp37 1 *tmp36
+  361 read *tmp35 BITMAP *tmp34
+  362 op or *tmp38 *tmp35 *tmp37
+  363 write *tmp38 BITMAP *tmp34
+  364 label *label387
+  365 label *label388
+  366 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  367 label *label389
+  368 # "Function: def setBit(in bitIndex)"
+  369 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  370 op mod *tmp36 :testAndSetMultiples.0:i 48
+  371 op shl *tmp37 1 *tmp36
+  372 read *tmp35 BITMAP *tmp34
+  373 op or *tmp38 *tmp35 *tmp37
+  374 write *tmp38 BITMAP *tmp34
+  375 label *label390
+  376 label *label391
+  377 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  378 label *label392
+  379 # "Function: def setBit(in bitIndex)"
+  380 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  381 op mod *tmp36 :testAndSetMultiples.0:i 48
+  382 op shl *tmp37 1 *tmp36
+  383 read *tmp35 BITMAP *tmp34
+  384 op or *tmp38 *tmp35 *tmp37
+  385 write *tmp38 BITMAP *tmp34
+  386 label *label393
+  387 label *label394
+  388 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  389 label *label395
+  390 # "Function: def setBit(in bitIndex)"
+  391 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  392 op mod *tmp36 :testAndSetMultiples.0:i 48
+  393 op shl *tmp37 1 *tmp36
+  394 read *tmp35 BITMAP *tmp34
+  395 op or *tmp38 *tmp35 *tmp37
+  396 write *tmp38 BITMAP *tmp34
+  397 label *label396
+  398 label *label397
+  399 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  400 label *label398
+  401 # "Function: def setBit(in bitIndex)"
+  402 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  403 op mod *tmp36 :testAndSetMultiples.0:i 48
+  404 op shl *tmp37 1 *tmp36
+  405 read *tmp35 BITMAP *tmp34
+  406 op or *tmp38 *tmp35 *tmp37
+  407 write *tmp38 BITMAP *tmp34
+  408 label *label399
+  409 label *label400
+  410 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  411 label *label80
   412 label *label81
   413 label *label82
   414 label *label83

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    47 label *label301
    48 label *label302
    49 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   50 op idiv *tmp34 24 48
+   51 op mod *tmp36 24 48
+   52 op shl *tmp37 1 24
+   53 read *tmp35 BITMAP 0
+   54 op or *tmp38 *tmp35 16777216
+   55 write *tmp38 BITMAP 0
    56 label *label303
    57 label *label304
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   58 op add :testAndSetMultiples.0:i 24 7
    59 label *label305
    60 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   61 op idiv *tmp34 31 48
+   62 op mod *tmp36 31 48
+   63 op shl *tmp37 1 31
+   64 read *tmp35 BITMAP 0
+   65 op or *tmp38 *tmp35 2147483648
+   66 write *tmp38 BITMAP 0
    67 label *label306
    68 label *label307
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   69 op add :testAndSetMultiples.0:i 31 7
    70 label *label308
    71 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   72 op idiv *tmp34 38 48
+   73 op mod *tmp36 38 48
+   74 op shl *tmp37 1 38
+   75 read *tmp35 BITMAP 0
+   76 op or *tmp38 *tmp35 274877906944
+   77 write *tmp38 BITMAP 0
    78 label *label309
    79 label *label310
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   80 op add :testAndSetMultiples.0:i 38 7
    81 label *label311
    82 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   83 op idiv *tmp34 45 48
+   84 op mod *tmp36 45 48
+   85 op shl *tmp37 1 45
+   86 read *tmp35 BITMAP 0
+   87 op or *tmp38 *tmp35 35184372088832
+   88 write *tmp38 BITMAP 0
    89 label *label312
    90 label *label313
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   91 op add :testAndSetMultiples.0:i 45 7
    92 label *label314
    93 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   94 op idiv *tmp34 52 48
+   95 op mod *tmp36 52 48
+   96 op shl *tmp37 1 4
+   97 read *tmp35 BITMAP 1
+   98 op or *tmp38 *tmp35 16
+   99 write *tmp38 BITMAP 1
   100 label *label315
   101 label *label316
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  102 op add :testAndSetMultiples.0:i 52 7
   103 label *label317
   104 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  105 op idiv *tmp34 59 48
+  106 op mod *tmp36 59 48
+  107 op shl *tmp37 1 11
+  108 read *tmp35 BITMAP 1
+  109 op or *tmp38 *tmp35 2048
+  110 write *tmp38 BITMAP 1
   111 label *label318
   112 label *label319
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  113 op add :testAndSetMultiples.0:i 59 7
   114 label *label320
   115 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  116 op idiv *tmp34 66 48
+  117 op mod *tmp36 66 48
+  118 op shl *tmp37 1 18
+  119 read *tmp35 BITMAP 1
+  120 op or *tmp38 *tmp35 262144
+  121 write *tmp38 BITMAP 1
   122 label *label321
   123 label *label322
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  124 op add :testAndSetMultiples.0:i 66 7
   125 label *label323
   126 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  127 op idiv *tmp34 73 48
+  128 op mod *tmp36 73 48
+  129 op shl *tmp37 1 25
+  130 read *tmp35 BITMAP 1
+  131 op or *tmp38 *tmp35 33554432
+  132 write *tmp38 BITMAP 1
   133 label *label324
   134 label *label325
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  135 op add :testAndSetMultiples.0:i 73 7
   136 label *label326
   137 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  138 op idiv *tmp34 80 48
+  139 op mod *tmp36 80 48
+  140 op shl *tmp37 1 32
+  141 read *tmp35 BITMAP 1
+  142 op or *tmp38 *tmp35 4294967296
+  143 write *tmp38 BITMAP 1
   144 label *label327
   145 label *label328
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  146 op add :testAndSetMultiples.0:i 80 7
   147 label *label329
   148 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  149 op idiv *tmp34 87 48
+  150 op mod *tmp36 87 48
+  151 op shl *tmp37 1 39
+  152 read *tmp35 BITMAP 1
+  153 op or *tmp38 *tmp35 549755813888
+  154 write *tmp38 BITMAP 1
   155 label *label330
   156 label *label331
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  157 op add :testAndSetMultiples.0:i 87 7
   158 label *label332
   159 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  160 op idiv *tmp34 94 48
+  161 op mod *tmp36 94 48
+  162 op shl *tmp37 1 46
+  163 read *tmp35 BITMAP 1
+  164 op or *tmp38 *tmp35 70368744177664
+  165 write *tmp38 BITMAP 1
   166 label *label333
   167 label *label334
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  168 op add :testAndSetMultiples.0:i 94 7
   169 label *label335
   170 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  171 op idiv *tmp34 101 48
+  172 op mod *tmp36 101 48
+  173 op shl *tmp37 1 5
+  174 read *tmp35 BITMAP 2
+  175 op or *tmp38 *tmp35 32
+  176 write *tmp38 BITMAP 2
   177 label *label336
   178 label *label337
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  179 op add :testAndSetMultiples.0:i 101 7
   180 label *label338
   181 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  182 op idiv *tmp34 108 48
+  183 op mod *tmp36 108 48
+  184 op shl *tmp37 1 12
+  185 read *tmp35 BITMAP 2
+  186 op or *tmp38 *tmp35 4096
+  187 write *tmp38 BITMAP 2
   188 label *label339
   189 label *label340
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  190 op add :testAndSetMultiples.0:i 108 7
   191 label *label341
   192 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 115 48
+  194 op mod *tmp36 115 48
+  195 op shl *tmp37 1 19
+  196 read *tmp35 BITMAP 2
+  197 op or *tmp38 *tmp35 524288
+  198 write *tmp38 BITMAP 2
   199 label *label342
   200 label *label343
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  201 op add :testAndSetMultiples.0:i 115 7
   202 label *label344
   203 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 122 48
+  205 op mod *tmp36 122 48
+  206 op shl *tmp37 1 26
+  207 read *tmp35 BITMAP 2
+  208 op or *tmp38 *tmp35 67108864
+  209 write *tmp38 BITMAP 2
   210 label *label345
   211 label *label346
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  212 op add :testAndSetMultiples.0:i 122 7
   213 label *label347
   214 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  215 op idiv *tmp34 129 48
+  216 op mod *tmp36 129 48
+  217 op shl *tmp37 1 33
+  218 read *tmp35 BITMAP 2
+  219 op or *tmp38 *tmp35 8589934592
+  220 write *tmp38 BITMAP 2
   221 label *label348
   222 label *label349
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  223 op add :testAndSetMultiples.0:i 129 7
   224 label *label350
   225 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  226 op idiv *tmp34 136 48
+  227 op mod *tmp36 136 48
+  228 op shl *tmp37 1 40
+  229 read *tmp35 BITMAP 2
+  230 op or *tmp38 *tmp35 1099511627776
+  231 write *tmp38 BITMAP 2
   232 label *label351
   233 label *label352
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  234 op add :testAndSetMultiples.0:i 136 7
   235 label *label353
   236 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  237 op idiv *tmp34 143 48
+  238 op mod *tmp36 143 48
+  239 op shl *tmp37 1 47
+  240 read *tmp35 BITMAP 2
+  241 op or *tmp38 *tmp35 140737488355328
+  242 write *tmp38 BITMAP 2
   243 label *label354
   244 label *label355
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  245 op add :testAndSetMultiples.0:i 143 7
   246 label *label356
   247 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  248 op idiv *tmp34 150 48
+  249 op mod *tmp36 150 48
+  250 op shl *tmp37 1 6
+  251 read *tmp35 BITMAP 3
+  252 op or *tmp38 *tmp35 64
+  253 write *tmp38 BITMAP 3
   254 label *label357
   255 label *label358
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  256 op add :testAndSetMultiples.0:i 150 7
   257 label *label359
   258 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  259 op idiv *tmp34 157 48
+  260 op mod *tmp36 157 48
+  261 op shl *tmp37 1 13
+  262 read *tmp35 BITMAP 3
+  263 op or *tmp38 *tmp35 8192
+  264 write *tmp38 BITMAP 3
   265 label *label360
   266 label *label361
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  267 op add :testAndSetMultiples.0:i 157 7
   268 label *label362
   269 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  270 op idiv *tmp34 164 48
+  271 op mod *tmp36 164 48
+  272 op shl *tmp37 1 20
+  273 read *tmp35 BITMAP 3
+  274 op or *tmp38 *tmp35 1048576
+  275 write *tmp38 BITMAP 3
   276 label *label363
   277 label *label364
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  278 op add :testAndSetMultiples.0:i 164 7
   279 label *label365
   280 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  281 op idiv *tmp34 171 48
+  282 op mod *tmp36 171 48
+  283 op shl *tmp37 1 27
+  284 read *tmp35 BITMAP 3
+  285 op or *tmp38 *tmp35 134217728
+  286 write *tmp38 BITMAP 3
   287 label *label366
   288 label *label367
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  289 op add :testAndSetMultiples.0:i 171 7
   290 label *label368
   291 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  292 op idiv *tmp34 178 48
+  293 op mod *tmp36 178 48
+  294 op shl *tmp37 1 34
+  295 read *tmp35 BITMAP 3
+  296 op or *tmp38 *tmp35 17179869184
+  297 write *tmp38 BITMAP 3
   298 label *label369
   299 label *label370
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  300 op add :testAndSetMultiples.0:i 178 7
   301 label *label371
   302 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  303 op idiv *tmp34 185 48
+  304 op mod *tmp36 185 48
+  305 op shl *tmp37 1 41
+  306 read *tmp35 BITMAP 3
+  307 op or *tmp38 *tmp35 2199023255552
+  308 write *tmp38 BITMAP 3
   309 label *label372
   310 label *label373
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  311 op add :testAndSetMultiples.0:i 185 7
   312 label *label374
   313 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  314 op idiv *tmp34 192 48
+  315 op mod *tmp36 192 48
+  316 op shl *tmp37 1 0
+  317 read *tmp35 BITMAP 4
+  318 op or *tmp38 *tmp35 1
+  319 write *tmp38 BITMAP 4
   320 label *label375
   321 label *label376
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  322 op add :testAndSetMultiples.0:i 192 7
   323 label *label377
   324 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  325 op idiv *tmp34 199 48
+  326 op mod *tmp36 199 48
+  327 op shl *tmp37 1 7
+  328 read *tmp35 BITMAP 4
+  329 op or *tmp38 *tmp35 128
+  330 write *tmp38 BITMAP 4
   331 label *label378
   332 label *label379
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  333 op add :testAndSetMultiples.0:i 199 7
   334 label *label380
   335 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  336 op idiv *tmp34 206 48
+  337 op mod *tmp36 206 48
+  338 op shl *tmp37 1 14
+  339 read *tmp35 BITMAP 4
+  340 op or *tmp38 *tmp35 16384
+  341 write *tmp38 BITMAP 4
   342 label *label381
   343 label *label382
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  344 op add :testAndSetMultiples.0:i 206 7
   345 label *label383
   346 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  347 op idiv *tmp34 213 48
+  348 op mod *tmp36 213 48
+  349 op shl *tmp37 1 21
+  350 read *tmp35 BITMAP 4
+  351 op or *tmp38 *tmp35 2097152
+  352 write *tmp38 BITMAP 4
   353 label *label384
   354 label *label385
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  355 op add :testAndSetMultiples.0:i 213 7
   356 label *label386
   357 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  358 op idiv *tmp34 220 48
+  359 op mod *tmp36 220 48
+  360 op shl *tmp37 1 28
+  361 read *tmp35 BITMAP 4
+  362 op or *tmp38 *tmp35 268435456
+  363 write *tmp38 BITMAP 4
   364 label *label387
   365 label *label388
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  366 op add :testAndSetMultiples.0:i 220 7
   367 label *label389
   368 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  369 op idiv *tmp34 227 48
+  370 op mod *tmp36 227 48
+  371 op shl *tmp37 1 35
+  372 read *tmp35 BITMAP 4
+  373 op or *tmp38 *tmp35 34359738368
+  374 write *tmp38 BITMAP 4
   375 label *label390
   376 label *label391
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  377 op add :testAndSetMultiples.0:i 227 7
   378 label *label392
   379 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  380 op idiv *tmp34 234 48
+  381 op mod *tmp36 234 48
+  382 op shl *tmp37 1 42
+  383 read *tmp35 BITMAP 4
+  384 op or *tmp38 *tmp35 4398046511104
+  385 write *tmp38 BITMAP 4
   386 label *label393
   387 label *label394
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  388 op add :testAndSetMultiples.0:i 234 7
   389 label *label395
   390 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  391 op idiv *tmp34 241 48
+  392 op mod *tmp36 241 48
+  393 op shl *tmp37 1 1
+  394 read *tmp35 BITMAP 5
+  395 op or *tmp38 *tmp35 2
+  396 write *tmp38 BITMAP 5
   397 label *label396
   398 label *label397
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  399 op add :testAndSetMultiples.0:i 241 7
   400 label *label398
   401 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  402 op idiv *tmp34 248 48
+  403 op mod *tmp36 248 48
+  404 op shl *tmp37 1 8
+  405 read *tmp35 BITMAP 5
+  406 op or *tmp38 *tmp35 256
+  407 write *tmp38 BITMAP 5
   408 label *label399
   409 label *label400
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  410 op add :testAndSetMultiples.0:i 248 7
   411 label *label80
   412 label *label81
   413 label *label82

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-133 instructions):
 
    43 label *label75
    44 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    45 jump *label81 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
    46 label *label301
    47 label *label302
    48 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 24 48
-    * op mod *tmp36 24 48
-    * op shl *tmp37 1 24
    49 read *tmp35 BITMAP 0
    50 op or *tmp38 *tmp35 16777216
    51 write *tmp38 BITMAP 0
    52 label *label303
    53 label *label304
-    * op add :testAndSetMultiples.0:i 24 7
    54 label *label305
    55 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 31 48
-    * op mod *tmp36 31 48
-    * op shl *tmp37 1 31
    56 read *tmp35 BITMAP 0
    57 op or *tmp38 *tmp35 2147483648
    58 write *tmp38 BITMAP 0
    59 label *label306
    60 label *label307
-    * op add :testAndSetMultiples.0:i 31 7
    61 label *label308
    62 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 38 48
-    * op mod *tmp36 38 48
-    * op shl *tmp37 1 38
    63 read *tmp35 BITMAP 0
    64 op or *tmp38 *tmp35 274877906944
    65 write *tmp38 BITMAP 0
    66 label *label309
    67 label *label310
-    * op add :testAndSetMultiples.0:i 38 7
    68 label *label311
    69 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 45 48
-    * op mod *tmp36 45 48
-    * op shl *tmp37 1 45
    70 read *tmp35 BITMAP 0
    71 op or *tmp38 *tmp35 35184372088832
    72 write *tmp38 BITMAP 0
    73 label *label312
    74 label *label313
-    * op add :testAndSetMultiples.0:i 45 7
    75 label *label314
    76 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    77 read *tmp35 BITMAP 1
    78 op or *tmp38 *tmp35 16
    79 write *tmp38 BITMAP 1
    80 label *label315
    81 label *label316
-    * op add :testAndSetMultiples.0:i 52 7
    82 label *label317
    83 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 59 48
-    * op mod *tmp36 59 48
-    * op shl *tmp37 1 11
    84 read *tmp35 BITMAP 1
    85 op or *tmp38 *tmp35 2048
    86 write *tmp38 BITMAP 1
    87 label *label318
    88 label *label319
-    * op add :testAndSetMultiples.0:i 59 7
    89 label *label320
    90 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 66 48
-    * op mod *tmp36 66 48
-    * op shl *tmp37 1 18
    91 read *tmp35 BITMAP 1
    92 op or *tmp38 *tmp35 262144
    93 write *tmp38 BITMAP 1
    94 label *label321
    95 label *label322
-    * op add :testAndSetMultiples.0:i 66 7
    96 label *label323
    97 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 73 48
-    * op mod *tmp36 73 48
-    * op shl *tmp37 1 25
    98 read *tmp35 BITMAP 1
    99 op or *tmp38 *tmp35 33554432
   100 write *tmp38 BITMAP 1
   101 label *label324
   102 label *label325
-    * op add :testAndSetMultiples.0:i 73 7
   103 label *label326
   104 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 80 48
-    * op mod *tmp36 80 48
-    * op shl *tmp37 1 32
   105 read *tmp35 BITMAP 1
   106 op or *tmp38 *tmp35 4294967296
   107 write *tmp38 BITMAP 1
   108 label *label327
   109 label *label328
-    * op add :testAndSetMultiples.0:i 80 7
   110 label *label329
   111 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
   112 read *tmp35 BITMAP 1
   113 op or *tmp38 *tmp35 549755813888
   114 write *tmp38 BITMAP 1
   115 label *label330
   116 label *label331
-    * op add :testAndSetMultiples.0:i 87 7
   117 label *label332
   118 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 94 48
-    * op mod *tmp36 94 48
-    * op shl *tmp37 1 46
   119 read *tmp35 BITMAP 1
   120 op or *tmp38 *tmp35 70368744177664
   121 write *tmp38 BITMAP 1
   122 label *label333
   123 label *label334
-    * op add :testAndSetMultiples.0:i 94 7
   124 label *label335
   125 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 101 48
-    * op mod *tmp36 101 48
-    * op shl *tmp37 1 5
   126 read *tmp35 BITMAP 2
   127 op or *tmp38 *tmp35 32
   128 write *tmp38 BITMAP 2
   129 label *label336
   130 label *label337
-    * op add :testAndSetMultiples.0:i 101 7
   131 label *label338
   132 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 108 48
-    * op mod *tmp36 108 48
-    * op shl *tmp37 1 12
   133 read *tmp35 BITMAP 2
   134 op or *tmp38 *tmp35 4096
   135 write *tmp38 BITMAP 2
   136 label *label339
   137 label *label340
-    * op add :testAndSetMultiples.0:i 108 7
   138 label *label341
   139 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   140 read *tmp35 BITMAP 2
   141 op or *tmp38 *tmp35 524288
   142 write *tmp38 BITMAP 2
   143 label *label342
   144 label *label343
-    * op add :testAndSetMultiples.0:i 115 7
   145 label *label344
   146 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   147 read *tmp35 BITMAP 2
   148 op or *tmp38 *tmp35 67108864
   149 write *tmp38 BITMAP 2
   150 label *label345
   151 label *label346
-    * op add :testAndSetMultiples.0:i 122 7
   152 label *label347
   153 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 129 48
-    * op mod *tmp36 129 48
-    * op shl *tmp37 1 33
   154 read *tmp35 BITMAP 2
   155 op or *tmp38 *tmp35 8589934592
   156 write *tmp38 BITMAP 2
   157 label *label348
   158 label *label349
-    * op add :testAndSetMultiples.0:i 129 7
   159 label *label350
   160 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   161 read *tmp35 BITMAP 2
   162 op or *tmp38 *tmp35 1099511627776
   163 write *tmp38 BITMAP 2
   164 label *label351
   165 label *label352
-    * op add :testAndSetMultiples.0:i 136 7
   166 label *label353
   167 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 143 48
-    * op mod *tmp36 143 48
-    * op shl *tmp37 1 47
   168 read *tmp35 BITMAP 2
   169 op or *tmp38 *tmp35 140737488355328
   170 write *tmp38 BITMAP 2
   171 label *label354
   172 label *label355
-    * op add :testAndSetMultiples.0:i 143 7
   173 label *label356
   174 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 150 48
-    * op mod *tmp36 150 48
-    * op shl *tmp37 1 6
   175 read *tmp35 BITMAP 3
   176 op or *tmp38 *tmp35 64
   177 write *tmp38 BITMAP 3
   178 label *label357
   179 label *label358
-    * op add :testAndSetMultiples.0:i 150 7
   180 label *label359
   181 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   182 read *tmp35 BITMAP 3
   183 op or *tmp38 *tmp35 8192
   184 write *tmp38 BITMAP 3
   185 label *label360
   186 label *label361
-    * op add :testAndSetMultiples.0:i 157 7
   187 label *label362
   188 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 164 48
-    * op mod *tmp36 164 48
-    * op shl *tmp37 1 20
   189 read *tmp35 BITMAP 3
   190 op or *tmp38 *tmp35 1048576
   191 write *tmp38 BITMAP 3
   192 label *label363
   193 label *label364
-    * op add :testAndSetMultiples.0:i 164 7
   194 label *label365
   195 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 171 48
-    * op mod *tmp36 171 48
-    * op shl *tmp37 1 27
   196 read *tmp35 BITMAP 3
   197 op or *tmp38 *tmp35 134217728
   198 write *tmp38 BITMAP 3
   199 label *label366
   200 label *label367
-    * op add :testAndSetMultiples.0:i 171 7
   201 label *label368
   202 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   203 read *tmp35 BITMAP 3
   204 op or *tmp38 *tmp35 17179869184
   205 write *tmp38 BITMAP 3
   206 label *label369
   207 label *label370
-    * op add :testAndSetMultiples.0:i 178 7
   208 label *label371
   209 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 185 48
-    * op mod *tmp36 185 48
-    * op shl *tmp37 1 41
   210 read *tmp35 BITMAP 3
   211 op or *tmp38 *tmp35 2199023255552
   212 write *tmp38 BITMAP 3
   213 label *label372
   214 label *label373
-    * op add :testAndSetMultiples.0:i 185 7
   215 label *label374
   216 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   217 read *tmp35 BITMAP 4
   218 op or *tmp38 *tmp35 1
   219 write *tmp38 BITMAP 4
   220 label *label375
   221 label *label376
-    * op add :testAndSetMultiples.0:i 192 7
   222 label *label377
   223 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   224 read *tmp35 BITMAP 4
   225 op or *tmp38 *tmp35 128
   226 write *tmp38 BITMAP 4
   227 label *label378
   228 label *label379
-    * op add :testAndSetMultiples.0:i 199 7
   229 label *label380
   230 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 206 48
-    * op mod *tmp36 206 48
-    * op shl *tmp37 1 14
   231 read *tmp35 BITMAP 4
   232 op or *tmp38 *tmp35 16384
   233 write *tmp38 BITMAP 4
   234 label *label381
   235 label *label382
-    * op add :testAndSetMultiples.0:i 206 7
   236 label *label383
   237 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 213 48
-    * op mod *tmp36 213 48
-    * op shl *tmp37 1 21
   238 read *tmp35 BITMAP 4
   239 op or *tmp38 *tmp35 2097152
   240 write *tmp38 BITMAP 4
   241 label *label384
   242 label *label385
-    * op add :testAndSetMultiples.0:i 213 7
   243 label *label386
   244 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 220 48
-    * op mod *tmp36 220 48
-    * op shl *tmp37 1 28
   245 read *tmp35 BITMAP 4
   246 op or *tmp38 *tmp35 268435456
   247 write *tmp38 BITMAP 4
   248 label *label387
   249 label *label388
-    * op add :testAndSetMultiples.0:i 220 7
   250 label *label389
   251 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   252 read *tmp35 BITMAP 4
   253 op or *tmp38 *tmp35 34359738368
   254 write *tmp38 BITMAP 4
   255 label *label390
   256 label *label391
-    * op add :testAndSetMultiples.0:i 227 7
   257 label *label392
   258 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 234 48
-    * op mod *tmp36 234 48
-    * op shl *tmp37 1 42
   259 read *tmp35 BITMAP 4
   260 op or *tmp38 *tmp35 4398046511104
   261 write *tmp38 BITMAP 4
   262 label *label393
   263 label *label394
-    * op add :testAndSetMultiples.0:i 234 7
   264 label *label395
   265 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 241 48
-    * op mod *tmp36 241 48
-    * op shl *tmp37 1 1
   266 read *tmp35 BITMAP 5
   267 op or *tmp38 *tmp35 2
   268 write *tmp38 BITMAP 5
   269 label *label396
   270 label *label397
-    * op add :testAndSetMultiples.0:i 241 7
   271 label *label398
   272 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 248 48
-    * op mod *tmp36 248 48
-    * op shl *tmp37 1 8
   273 read *tmp35 BITMAP 5
   274 op or *tmp38 *tmp35 256
   275 write *tmp38 BITMAP 5
   276 label *label399
   277 label *label400
-    * op add :testAndSetMultiples.0:i 248 7
   278 label *label80
   279 label *label81
   280 label *label82

Modifications by Unroll loop at line 17:9 (+327 instructions):
 
    11 label *label62
    12 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    13 jump *label68 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
-    * label *label63
-    * jump *label67 greaterThan 12 250
-    * label *label64
-    * # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label65
-    * label *label66
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
-    * jump *label64 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label67
+   14 op idiv :testAndSetMultiples.0:i 25 2
+   15 label *label401
+   16 label *label402
+   17 # "Function: def setBit(in bitIndex)"
+   18 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   19 op mod *tmp36 :testAndSetMultiples.0:i 48
+   20 op shl *tmp37 1 *tmp36
+   21 read *tmp35 BITMAP *tmp34
+   22 op or *tmp38 *tmp35 *tmp37
+   23 write *tmp38 BITMAP *tmp34
+   24 label *label403
+   25 label *label404
+   26 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   27 label *label405
+   28 # "Function: def setBit(in bitIndex)"
+   29 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   30 op mod *tmp36 :testAndSetMultiples.0:i 48
+   31 op shl *tmp37 1 *tmp36
+   32 read *tmp35 BITMAP *tmp34
+   33 op or *tmp38 *tmp35 *tmp37
+   34 write *tmp38 BITMAP *tmp34
+   35 label *label406
+   36 label *label407
+   37 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   38 label *label408
+   39 # "Function: def setBit(in bitIndex)"
+   40 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   41 op mod *tmp36 :testAndSetMultiples.0:i 48
+   42 op shl *tmp37 1 *tmp36
+   43 read *tmp35 BITMAP *tmp34
+   44 op or *tmp38 *tmp35 *tmp37
+   45 write *tmp38 BITMAP *tmp34
+   46 label *label409
+   47 label *label410
+   48 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   49 label *label411
+   50 # "Function: def setBit(in bitIndex)"
+   51 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   52 op mod *tmp36 :testAndSetMultiples.0:i 48
+   53 op shl *tmp37 1 *tmp36
+   54 read *tmp35 BITMAP *tmp34
+   55 op or *tmp38 *tmp35 *tmp37
+   56 write *tmp38 BITMAP *tmp34
+   57 label *label412
+   58 label *label413
+   59 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   60 label *label414
+   61 # "Function: def setBit(in bitIndex)"
+   62 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   63 op mod *tmp36 :testAndSetMultiples.0:i 48
+   64 op shl *tmp37 1 *tmp36
+   65 read *tmp35 BITMAP *tmp34
+   66 op or *tmp38 *tmp35 *tmp37
+   67 write *tmp38 BITMAP *tmp34
+   68 label *label415
+   69 label *label416
+   70 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   71 label *label417
+   72 # "Function: def setBit(in bitIndex)"
+   73 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   74 op mod *tmp36 :testAndSetMultiples.0:i 48
+   75 op shl *tmp37 1 *tmp36
+   76 read *tmp35 BITMAP *tmp34
+   77 op or *tmp38 *tmp35 *tmp37
+   78 write *tmp38 BITMAP *tmp34
+   79 label *label418
+   80 label *label419
+   81 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   82 label *label420
+   83 # "Function: def setBit(in bitIndex)"
+   84 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   85 op mod *tmp36 :testAndSetMultiples.0:i 48
+   86 op shl *tmp37 1 *tmp36
+   87 read *tmp35 BITMAP *tmp34
+   88 op or *tmp38 *tmp35 *tmp37
+   89 write *tmp38 BITMAP *tmp34
+   90 label *label421
+   91 label *label422
+   92 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   93 label *label423
+   94 # "Function: def setBit(in bitIndex)"
+   95 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   96 op mod *tmp36 :testAndSetMultiples.0:i 48
+   97 op shl *tmp37 1 *tmp36
+   98 read *tmp35 BITMAP *tmp34
+   99 op or *tmp38 *tmp35 *tmp37
+  100 write *tmp38 BITMAP *tmp34
+  101 label *label424
+  102 label *label425
+  103 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  104 label *label426
+  105 # "Function: def setBit(in bitIndex)"
+  106 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  107 op mod *tmp36 :testAndSetMultiples.0:i 48
+  108 op shl *tmp37 1 *tmp36
+  109 read *tmp35 BITMAP *tmp34
+  110 op or *tmp38 *tmp35 *tmp37
+  111 write *tmp38 BITMAP *tmp34
+  112 label *label427
+  113 label *label428
+  114 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  115 label *label429
+  116 # "Function: def setBit(in bitIndex)"
+  117 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  118 op mod *tmp36 :testAndSetMultiples.0:i 48
+  119 op shl *tmp37 1 *tmp36
+  120 read *tmp35 BITMAP *tmp34
+  121 op or *tmp38 *tmp35 *tmp37
+  122 write *tmp38 BITMAP *tmp34
+  123 label *label430
+  124 label *label431
+  125 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  126 label *label432
+  127 # "Function: def setBit(in bitIndex)"
+  128 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  129 op mod *tmp36 :testAndSetMultiples.0:i 48
+  130 op shl *tmp37 1 *tmp36
+  131 read *tmp35 BITMAP *tmp34
+  132 op or *tmp38 *tmp35 *tmp37
+  133 write *tmp38 BITMAP *tmp34
+  134 label *label433
+  135 label *label434
+  136 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  137 label *label435
+  138 # "Function: def setBit(in bitIndex)"
+  139 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  140 op mod *tmp36 :testAndSetMultiples.0:i 48
+  141 op shl *tmp37 1 *tmp36
+  142 read *tmp35 BITMAP *tmp34
+  143 op or *tmp38 *tmp35 *tmp37
+  144 write *tmp38 BITMAP *tmp34
+  145 label *label436
+  146 label *label437
+  147 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  148 label *label438
+  149 # "Function: def setBit(in bitIndex)"
+  150 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  151 op mod *tmp36 :testAndSetMultiples.0:i 48
+  152 op shl *tmp37 1 *tmp36
+  153 read *tmp35 BITMAP *tmp34
+  154 op or *tmp38 *tmp35 *tmp37
+  155 write *tmp38 BITMAP *tmp34
+  156 label *label439
+  157 label *label440
+  158 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  159 label *label441
+  160 # "Function: def setBit(in bitIndex)"
+  161 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  162 op mod *tmp36 :testAndSetMultiples.0:i 48
+  163 op shl *tmp37 1 *tmp36
+  164 read *tmp35 BITMAP *tmp34
+  165 op or *tmp38 *tmp35 *tmp37
+  166 write *tmp38 BITMAP *tmp34
+  167 label *label442
+  168 label *label443
+  169 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  170 label *label444
+  171 # "Function: def setBit(in bitIndex)"
+  172 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  173 op mod *tmp36 :testAndSetMultiples.0:i 48
+  174 op shl *tmp37 1 *tmp36
+  175 read *tmp35 BITMAP *tmp34
+  176 op or *tmp38 *tmp35 *tmp37
+  177 write *tmp38 BITMAP *tmp34
+  178 label *label445
+  179 label *label446
+  180 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  181 label *label447
+  182 # "Function: def setBit(in bitIndex)"
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label448
+  190 label *label449
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  192 label *label450
+  193 # "Function: def setBit(in bitIndex)"
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label451
+  201 label *label452
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  203 label *label453
+  204 # "Function: def setBit(in bitIndex)"
+  205 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  206 op mod *tmp36 :testAndSetMultiples.0:i 48
+  207 op shl *tmp37 1 *tmp36
+  208 read *tmp35 BITMAP *tmp34
+  209 op or *tmp38 *tmp35 *tmp37
+  210 write *tmp38 BITMAP *tmp34
+  211 label *label454
+  212 label *label455
+  213 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  214 label *label456
+  215 # "Function: def setBit(in bitIndex)"
+  216 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  217 op mod *tmp36 :testAndSetMultiples.0:i 48
+  218 op shl *tmp37 1 *tmp36
+  219 read *tmp35 BITMAP *tmp34
+  220 op or *tmp38 *tmp35 *tmp37
+  221 write *tmp38 BITMAP *tmp34
+  222 label *label457
+  223 label *label458
+  224 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  225 label *label459
+  226 # "Function: def setBit(in bitIndex)"
+  227 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  228 op mod *tmp36 :testAndSetMultiples.0:i 48
+  229 op shl *tmp37 1 *tmp36
+  230 read *tmp35 BITMAP *tmp34
+  231 op or *tmp38 *tmp35 *tmp37
+  232 write *tmp38 BITMAP *tmp34
+  233 label *label460
+  234 label *label461
+  235 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  236 label *label462
+  237 # "Function: def setBit(in bitIndex)"
+  238 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  239 op mod *tmp36 :testAndSetMultiples.0:i 48
+  240 op shl *tmp37 1 *tmp36
+  241 read *tmp35 BITMAP *tmp34
+  242 op or *tmp38 *tmp35 *tmp37
+  243 write *tmp38 BITMAP *tmp34
+  244 label *label463
+  245 label *label464
+  246 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  247 label *label465
+  248 # "Function: def setBit(in bitIndex)"
+  249 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  250 op mod *tmp36 :testAndSetMultiples.0:i 48
+  251 op shl *tmp37 1 *tmp36
+  252 read *tmp35 BITMAP *tmp34
+  253 op or *tmp38 *tmp35 *tmp37
+  254 write *tmp38 BITMAP *tmp34
+  255 label *label466
+  256 label *label467
+  257 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  258 label *label468
+  259 # "Function: def setBit(in bitIndex)"
+  260 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  261 op mod *tmp36 :testAndSetMultiples.0:i 48
+  262 op shl *tmp37 1 *tmp36
+  263 read *tmp35 BITMAP *tmp34
+  264 op or *tmp38 *tmp35 *tmp37
+  265 write *tmp38 BITMAP *tmp34
+  266 label *label469
+  267 label *label470
+  268 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  269 label *label471
+  270 # "Function: def setBit(in bitIndex)"
+  271 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  272 op mod *tmp36 :testAndSetMultiples.0:i 48
+  273 op shl *tmp37 1 *tmp36
+  274 read *tmp35 BITMAP *tmp34
+  275 op or *tmp38 *tmp35 *tmp37
+  276 write *tmp38 BITMAP *tmp34
+  277 label *label472
+  278 label *label473
+  279 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  280 label *label474
+  281 # "Function: def setBit(in bitIndex)"
+  282 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  283 op mod *tmp36 :testAndSetMultiples.0:i 48
+  284 op shl *tmp37 1 *tmp36
+  285 read *tmp35 BITMAP *tmp34
+  286 op or *tmp38 *tmp35 *tmp37
+  287 write *tmp38 BITMAP *tmp34
+  288 label *label475
+  289 label *label476
+  290 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  291 label *label477
+  292 # "Function: def setBit(in bitIndex)"
+  293 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  294 op mod *tmp36 :testAndSetMultiples.0:i 48
+  295 op shl *tmp37 1 *tmp36
+  296 read *tmp35 BITMAP *tmp34
+  297 op or *tmp38 *tmp35 *tmp37
+  298 write *tmp38 BITMAP *tmp34
+  299 label *label478
+  300 label *label479
+  301 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  302 label *label480
+  303 # "Function: def setBit(in bitIndex)"
+  304 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  305 op mod *tmp36 :testAndSetMultiples.0:i 48
+  306 op shl *tmp37 1 *tmp36
+  307 read *tmp35 BITMAP *tmp34
+  308 op or *tmp38 *tmp35 *tmp37
+  309 write *tmp38 BITMAP *tmp34
+  310 label *label481
+  311 label *label482
+  312 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  313 label *label483
+  314 # "Function: def setBit(in bitIndex)"
+  315 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  316 op mod *tmp36 :testAndSetMultiples.0:i 48
+  317 op shl *tmp37 1 *tmp36
+  318 read *tmp35 BITMAP *tmp34
+  319 op or *tmp38 *tmp35 *tmp37
+  320 write *tmp38 BITMAP *tmp34
+  321 label *label484
+  322 label *label485
+  323 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  324 label *label486
+  325 # "Function: def setBit(in bitIndex)"
+  326 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  327 op mod *tmp36 :testAndSetMultiples.0:i 48
+  328 op shl *tmp37 1 *tmp36
+  329 read *tmp35 BITMAP *tmp34
+  330 op or *tmp38 *tmp35 *tmp37
+  331 write *tmp38 BITMAP *tmp34
+  332 label *label487
+  333 label *label488
+  334 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  335 label *label489
+  336 # "Function: def setBit(in bitIndex)"
+  337 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  338 op mod *tmp36 :testAndSetMultiples.0:i 48
+  339 op shl *tmp37 1 *tmp36
+  340 read *tmp35 BITMAP *tmp34
+  341 op or *tmp38 *tmp35 *tmp37
+  342 write *tmp38 BITMAP *tmp34
+  343 label *label490
+  344 label *label491
+  345 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  346 label *label492
+  347 # "Function: def setBit(in bitIndex)"
+  348 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  349 op mod *tmp36 :testAndSetMultiples.0:i 48
+  350 op shl *tmp37 1 *tmp36
+  351 read *tmp35 BITMAP *tmp34
+  352 op or *tmp38 *tmp35 *tmp37
+  353 write *tmp38 BITMAP *tmp34
+  354 label *label493
+  355 label *label494
+  356 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  357 label *label495
+  358 # "Function: def setBit(in bitIndex)"
+  359 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  360 op mod *tmp36 :testAndSetMultiples.0:i 48
+  361 op shl *tmp37 1 *tmp36
+  362 read *tmp35 BITMAP *tmp34
+  363 op or *tmp38 *tmp35 *tmp37
+  364 write *tmp38 BITMAP *tmp34
+  365 label *label496
+  366 label *label497
+  367 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  368 label *label498
+  369 # "Function: def setBit(in bitIndex)"
+  370 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  371 op mod *tmp36 :testAndSetMultiples.0:i 48
+  372 op shl *tmp37 1 *tmp36
+  373 read *tmp35 BITMAP *tmp34
+  374 op or *tmp38 *tmp35 *tmp37
+  375 write *tmp38 BITMAP *tmp34
+  376 label *label499
+  377 label *label500
+  378 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  379 label *label501
+  380 # "Function: def setBit(in bitIndex)"
+  381 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  382 op mod *tmp36 :testAndSetMultiples.0:i 48
+  383 op shl *tmp37 1 *tmp36
+  384 read *tmp35 BITMAP *tmp34
+  385 op or *tmp38 *tmp35 *tmp37
+  386 write *tmp38 BITMAP *tmp34
+  387 label *label502
+  388 label *label503
+  389 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  390 label *label504
+  391 # "Function: def setBit(in bitIndex)"
+  392 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  393 op mod *tmp36 :testAndSetMultiples.0:i 48
+  394 op shl *tmp37 1 *tmp36
+  395 read *tmp35 BITMAP *tmp34
+  396 op or *tmp38 *tmp35 *tmp37
+  397 write *tmp38 BITMAP *tmp34
+  398 label *label505
+  399 label *label506
+  400 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  401 label *label507
+  402 # "Function: def setBit(in bitIndex)"
+  403 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  404 op mod *tmp36 :testAndSetMultiples.0:i 48
+  405 op shl *tmp37 1 *tmp36
+  406 read *tmp35 BITMAP *tmp34
+  407 op or *tmp38 *tmp35 *tmp37
+  408 write *tmp38 BITMAP *tmp34
+  409 label *label508
+  410 label *label509
+  411 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  412 label *label510
+  413 # "Function: def setBit(in bitIndex)"
+  414 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  415 op mod *tmp36 :testAndSetMultiples.0:i 48
+  416 op shl *tmp37 1 *tmp36
+  417 read *tmp35 BITMAP *tmp34
+  418 op or *tmp38 *tmp35 *tmp37
+  419 write *tmp38 BITMAP *tmp34
+  420 label *label511
+  421 label *label512
+  422 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  423 label *label513
+  424 # "Function: def setBit(in bitIndex)"
+  425 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  426 op mod *tmp36 :testAndSetMultiples.0:i 48
+  427 op shl *tmp37 1 *tmp36
+  428 read *tmp35 BITMAP *tmp34
+  429 op or *tmp38 *tmp35 *tmp37
+  430 write *tmp38 BITMAP *tmp34
+  431 label *label514
+  432 label *label515
+  433 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  434 label *label516
+  435 # "Function: def setBit(in bitIndex)"
+  436 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  437 op mod *tmp36 :testAndSetMultiples.0:i 48
+  438 op shl *tmp37 1 *tmp36
+  439 read *tmp35 BITMAP *tmp34
+  440 op or *tmp38 *tmp35 *tmp37
+  441 write *tmp38 BITMAP *tmp34
+  442 label *label517
+  443 label *label518
+  444 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  445 label *label519
+  446 # "Function: def setBit(in bitIndex)"
+  447 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  448 op mod *tmp36 :testAndSetMultiples.0:i 48
+  449 op shl *tmp37 1 *tmp36
+  450 read *tmp35 BITMAP *tmp34
+  451 op or *tmp38 *tmp35 *tmp37
+  452 write *tmp38 BITMAP *tmp34
+  453 label *label520
+  454 label *label521
+  455 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  456 label *label522
+  457 # "Function: def setBit(in bitIndex)"
+  458 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  459 op mod *tmp36 :testAndSetMultiples.0:i 48
+  460 op shl *tmp37 1 *tmp36
+  461 read *tmp35 BITMAP *tmp34
+  462 op or *tmp38 *tmp35 *tmp37
+  463 write *tmp38 BITMAP *tmp34
+  464 label *label523
+  465 label *label524
+  466 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  467 label *label525
+  468 # "Function: def setBit(in bitIndex)"
+  469 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  470 op mod *tmp36 :testAndSetMultiples.0:i 48
+  471 op shl *tmp37 1 *tmp36
+  472 read *tmp35 BITMAP *tmp34
+  473 op or *tmp38 *tmp35 *tmp37
+  474 write *tmp38 BITMAP *tmp34
+  475 label *label526
+  476 label *label527
+  477 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  478 label *label528
+  479 # "Function: def setBit(in bitIndex)"
+  480 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  481 op mod *tmp36 :testAndSetMultiples.0:i 48
+  482 op shl *tmp37 1 *tmp36
+  483 read *tmp35 BITMAP *tmp34
+  484 op or *tmp38 *tmp35 *tmp37
+  485 write *tmp38 BITMAP *tmp34
+  486 label *label529
+  487 label *label530
+  488 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  489 label *label531
+  490 # "Function: def setBit(in bitIndex)"
+  491 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  492 op mod *tmp36 :testAndSetMultiples.0:i 48
+  493 op shl *tmp37 1 *tmp36
+  494 read *tmp35 BITMAP *tmp34
+  495 op or *tmp38 *tmp35 *tmp37
+  496 write *tmp38 BITMAP *tmp34
+  497 label *label532
+  498 label *label533
+  499 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  500 label *label534
+  501 # "Function: def setBit(in bitIndex)"
+  502 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  503 op mod *tmp36 :testAndSetMultiples.0:i 48
+  504 op shl *tmp37 1 *tmp36
+  505 read *tmp35 BITMAP *tmp34
+  506 op or *tmp38 *tmp35 *tmp37
+  507 write *tmp38 BITMAP *tmp34
+  508 label *label535
+  509 label *label536
+  510 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  511 label *label537
+  512 # "Function: def setBit(in bitIndex)"
+  513 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  514 op mod *tmp36 :testAndSetMultiples.0:i 48
+  515 op shl *tmp37 1 *tmp36
+  516 read *tmp35 BITMAP *tmp34
+  517 op or *tmp38 *tmp35 *tmp37
+  518 write *tmp38 BITMAP *tmp34
+  519 label *label538
+  520 label *label539
+  521 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  522 label *label540
+  523 # "Function: def setBit(in bitIndex)"
+  524 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  525 op mod *tmp36 :testAndSetMultiples.0:i 48
+  526 op shl *tmp37 1 *tmp36
+  527 read *tmp35 BITMAP *tmp34
+  528 op or *tmp38 *tmp35 *tmp37
+  529 write *tmp38 BITMAP *tmp34
+  530 label *label541
+  531 label *label542
+  532 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  533 label *label543
+  534 # "Function: def setBit(in bitIndex)"
+  535 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  536 op mod *tmp36 :testAndSetMultiples.0:i 48
+  537 op shl *tmp37 1 *tmp36
+  538 read *tmp35 BITMAP *tmp34
+  539 op or *tmp38 *tmp35 *tmp37
+  540 write *tmp38 BITMAP *tmp34
+  541 label *label544
+  542 label *label545
+  543 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  544 label *label67
   545 label *label68
   546 label *label69
   547 label *label70

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    15 label *label401
    16 label *label402
    17 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   18 op idiv *tmp34 12 48
+   19 op mod *tmp36 12 48
+   20 op shl *tmp37 1 12
+   21 read *tmp35 BITMAP 0
+   22 op or *tmp38 *tmp35 4096
+   23 write *tmp38 BITMAP 0
    24 label *label403
    25 label *label404
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   26 op add :testAndSetMultiples.0:i 12 5
    27 label *label405
    28 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   29 op idiv *tmp34 17 48
+   30 op mod *tmp36 17 48
+   31 op shl *tmp37 1 17
+   32 read *tmp35 BITMAP 0
+   33 op or *tmp38 *tmp35 131072
+   34 write *tmp38 BITMAP 0
    35 label *label406
    36 label *label407
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   37 op add :testAndSetMultiples.0:i 17 5
    38 label *label408
    39 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   40 op idiv *tmp34 22 48
+   41 op mod *tmp36 22 48
+   42 op shl *tmp37 1 22
+   43 read *tmp35 BITMAP 0
+   44 op or *tmp38 *tmp35 4194304
+   45 write *tmp38 BITMAP 0
    46 label *label409
    47 label *label410
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   48 op add :testAndSetMultiples.0:i 22 5
    49 label *label411
    50 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   51 op idiv *tmp34 27 48
+   52 op mod *tmp36 27 48
+   53 op shl *tmp37 1 27
+   54 read *tmp35 BITMAP 0
+   55 op or *tmp38 *tmp35 134217728
+   56 write *tmp38 BITMAP 0
    57 label *label412
    58 label *label413
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   59 op add :testAndSetMultiples.0:i 27 5
    60 label *label414
    61 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   62 op idiv *tmp34 32 48
+   63 op mod *tmp36 32 48
+   64 op shl *tmp37 1 32
+   65 read *tmp35 BITMAP 0
+   66 op or *tmp38 *tmp35 4294967296
+   67 write *tmp38 BITMAP 0
    68 label *label415
    69 label *label416
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   70 op add :testAndSetMultiples.0:i 32 5
    71 label *label417
    72 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   73 op idiv *tmp34 37 48
+   74 op mod *tmp36 37 48
+   75 op shl *tmp37 1 37
+   76 read *tmp35 BITMAP 0
+   77 op or *tmp38 *tmp35 137438953472
+   78 write *tmp38 BITMAP 0
    79 label *label418
    80 label *label419
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   81 op add :testAndSetMultiples.0:i 37 5
    82 label *label420
    83 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   84 op idiv *tmp34 42 48
+   85 op mod *tmp36 42 48
+   86 op shl *tmp37 1 42
+   87 read *tmp35 BITMAP 0
+   88 op or *tmp38 *tmp35 4398046511104
+   89 write *tmp38 BITMAP 0
    90 label *label421
    91 label *label422
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   92 op add :testAndSetMultiples.0:i 42 5
    93 label *label423
    94 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   95 op idiv *tmp34 47 48
+   96 op mod *tmp36 47 48
+   97 op shl *tmp37 1 47
+   98 read *tmp35 BITMAP 0
+   99 op or *tmp38 *tmp35 140737488355328
+  100 write *tmp38 BITMAP 0
   101 label *label424
   102 label *label425
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  103 op add :testAndSetMultiples.0:i 47 5
   104 label *label426
   105 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  106 op idiv *tmp34 52 48
+  107 op mod *tmp36 52 48
+  108 op shl *tmp37 1 4
+  109 read *tmp35 BITMAP 1
+  110 op or *tmp38 *tmp35 16
+  111 write *tmp38 BITMAP 1
   112 label *label427
   113 label *label428
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  114 op add :testAndSetMultiples.0:i 52 5
   115 label *label429
   116 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  117 op idiv *tmp34 57 48
+  118 op mod *tmp36 57 48
+  119 op shl *tmp37 1 9
+  120 read *tmp35 BITMAP 1
+  121 op or *tmp38 *tmp35 512
+  122 write *tmp38 BITMAP 1
   123 label *label430
   124 label *label431
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  125 op add :testAndSetMultiples.0:i 57 5
   126 label *label432
   127 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  128 op idiv *tmp34 62 48
+  129 op mod *tmp36 62 48
+  130 op shl *tmp37 1 14
+  131 read *tmp35 BITMAP 1
+  132 op or *tmp38 *tmp35 16384
+  133 write *tmp38 BITMAP 1
   134 label *label433
   135 label *label434
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  136 op add :testAndSetMultiples.0:i 62 5
   137 label *label435
   138 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  139 op idiv *tmp34 67 48
+  140 op mod *tmp36 67 48
+  141 op shl *tmp37 1 19
+  142 read *tmp35 BITMAP 1
+  143 op or *tmp38 *tmp35 524288
+  144 write *tmp38 BITMAP 1
   145 label *label436
   146 label *label437
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  147 op add :testAndSetMultiples.0:i 67 5
   148 label *label438
   149 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  150 op idiv *tmp34 72 48
+  151 op mod *tmp36 72 48
+  152 op shl *tmp37 1 24
+  153 read *tmp35 BITMAP 1
+  154 op or *tmp38 *tmp35 16777216
+  155 write *tmp38 BITMAP 1
   156 label *label439
   157 label *label440
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  158 op add :testAndSetMultiples.0:i 72 5
   159 label *label441
   160 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  161 op idiv *tmp34 77 48
+  162 op mod *tmp36 77 48
+  163 op shl *tmp37 1 29
+  164 read *tmp35 BITMAP 1
+  165 op or *tmp38 *tmp35 536870912
+  166 write *tmp38 BITMAP 1
   167 label *label442
   168 label *label443
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  169 op add :testAndSetMultiples.0:i 77 5
   170 label *label444
   171 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  172 op idiv *tmp34 82 48
+  173 op mod *tmp36 82 48
+  174 op shl *tmp37 1 34
+  175 read *tmp35 BITMAP 1
+  176 op or *tmp38 *tmp35 17179869184
+  177 write *tmp38 BITMAP 1
   178 label *label445
   179 label *label446
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  180 op add :testAndSetMultiples.0:i 82 5
   181 label *label447
   182 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 87 48
+  184 op mod *tmp36 87 48
+  185 op shl *tmp37 1 39
+  186 read *tmp35 BITMAP 1
+  187 op or *tmp38 *tmp35 549755813888
+  188 write *tmp38 BITMAP 1
   189 label *label448
   190 label *label449
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  191 op add :testAndSetMultiples.0:i 87 5
   192 label *label450
   193 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 92 48
+  195 op mod *tmp36 92 48
+  196 op shl *tmp37 1 44
+  197 read *tmp35 BITMAP 1
+  198 op or *tmp38 *tmp35 17592186044416
+  199 write *tmp38 BITMAP 1
   200 label *label451
   201 label *label452
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  202 op add :testAndSetMultiples.0:i 92 5
   203 label *label453
   204 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  205 op idiv *tmp34 97 48
+  206 op mod *tmp36 97 48
+  207 op shl *tmp37 1 1
+  208 read *tmp35 BITMAP 2
+  209 op or *tmp38 *tmp35 2
+  210 write *tmp38 BITMAP 2
   211 label *label454
   212 label *label455
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  213 op add :testAndSetMultiples.0:i 97 5
   214 label *label456
   215 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  216 op idiv *tmp34 102 48
+  217 op mod *tmp36 102 48
+  218 op shl *tmp37 1 6
+  219 read *tmp35 BITMAP 2
+  220 op or *tmp38 *tmp35 64
+  221 write *tmp38 BITMAP 2
   222 label *label457
   223 label *label458
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  224 op add :testAndSetMultiples.0:i 102 5
   225 label *label459
   226 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  227 op idiv *tmp34 107 48
+  228 op mod *tmp36 107 48
+  229 op shl *tmp37 1 11
+  230 read *tmp35 BITMAP 2
+  231 op or *tmp38 *tmp35 2048
+  232 write *tmp38 BITMAP 2
   233 label *label460
   234 label *label461
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  235 op add :testAndSetMultiples.0:i 107 5
   236 label *label462
   237 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  238 op idiv *tmp34 112 48
+  239 op mod *tmp36 112 48
+  240 op shl *tmp37 1 16
+  241 read *tmp35 BITMAP 2
+  242 op or *tmp38 *tmp35 65536
+  243 write *tmp38 BITMAP 2
   244 label *label463
   245 label *label464
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  246 op add :testAndSetMultiples.0:i 112 5
   247 label *label465
   248 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  249 op idiv *tmp34 117 48
+  250 op mod *tmp36 117 48
+  251 op shl *tmp37 1 21
+  252 read *tmp35 BITMAP 2
+  253 op or *tmp38 *tmp35 2097152
+  254 write *tmp38 BITMAP 2
   255 label *label466
   256 label *label467
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  257 op add :testAndSetMultiples.0:i 117 5
   258 label *label468
   259 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  260 op idiv *tmp34 122 48
+  261 op mod *tmp36 122 48
+  262 op shl *tmp37 1 26
+  263 read *tmp35 BITMAP 2
+  264 op or *tmp38 *tmp35 67108864
+  265 write *tmp38 BITMAP 2
   266 label *label469
   267 label *label470
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  268 op add :testAndSetMultiples.0:i 122 5
   269 label *label471
   270 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  271 op idiv *tmp34 127 48
+  272 op mod *tmp36 127 48
+  273 op shl *tmp37 1 31
+  274 read *tmp35 BITMAP 2
+  275 op or *tmp38 *tmp35 2147483648
+  276 write *tmp38 BITMAP 2
   277 label *label472
   278 label *label473
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  279 op add :testAndSetMultiples.0:i 127 5
   280 label *label474
   281 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  282 op idiv *tmp34 132 48
+  283 op mod *tmp36 132 48
+  284 op shl *tmp37 1 36
+  285 read *tmp35 BITMAP 2
+  286 op or *tmp38 *tmp35 68719476736
+  287 write *tmp38 BITMAP 2
   288 label *label475
   289 label *label476
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  290 op add :testAndSetMultiples.0:i 132 5
   291 label *label477
   292 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  293 op idiv *tmp34 137 48
+  294 op mod *tmp36 137 48
+  295 op shl *tmp37 1 41
+  296 read *tmp35 BITMAP 2
+  297 op or *tmp38 *tmp35 2199023255552
+  298 write *tmp38 BITMAP 2
   299 label *label478
   300 label *label479
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  301 op add :testAndSetMultiples.0:i 137 5
   302 label *label480
   303 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  304 op idiv *tmp34 142 48
+  305 op mod *tmp36 142 48
+  306 op shl *tmp37 1 46
+  307 read *tmp35 BITMAP 2
+  308 op or *tmp38 *tmp35 70368744177664
+  309 write *tmp38 BITMAP 2
   310 label *label481
   311 label *label482
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  312 op add :testAndSetMultiples.0:i 142 5
   313 label *label483
   314 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  315 op idiv *tmp34 147 48
+  316 op mod *tmp36 147 48
+  317 op shl *tmp37 1 3
+  318 read *tmp35 BITMAP 3
+  319 op or *tmp38 *tmp35 8
+  320 write *tmp38 BITMAP 3
   321 label *label484
   322 label *label485
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  323 op add :testAndSetMultiples.0:i 147 5
   324 label *label486
   325 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  326 op idiv *tmp34 152 48
+  327 op mod *tmp36 152 48
+  328 op shl *tmp37 1 8
+  329 read *tmp35 BITMAP 3
+  330 op or *tmp38 *tmp35 256
+  331 write *tmp38 BITMAP 3
   332 label *label487
   333 label *label488
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  334 op add :testAndSetMultiples.0:i 152 5
   335 label *label489
   336 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  337 op idiv *tmp34 157 48
+  338 op mod *tmp36 157 48
+  339 op shl *tmp37 1 13
+  340 read *tmp35 BITMAP 3
+  341 op or *tmp38 *tmp35 8192
+  342 write *tmp38 BITMAP 3
   343 label *label490
   344 label *label491
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  345 op add :testAndSetMultiples.0:i 157 5
   346 label *label492
   347 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  348 op idiv *tmp34 162 48
+  349 op mod *tmp36 162 48
+  350 op shl *tmp37 1 18
+  351 read *tmp35 BITMAP 3
+  352 op or *tmp38 *tmp35 262144
+  353 write *tmp38 BITMAP 3
   354 label *label493
   355 label *label494
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  356 op add :testAndSetMultiples.0:i 162 5
   357 label *label495
   358 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  359 op idiv *tmp34 167 48
+  360 op mod *tmp36 167 48
+  361 op shl *tmp37 1 23
+  362 read *tmp35 BITMAP 3
+  363 op or *tmp38 *tmp35 8388608
+  364 write *tmp38 BITMAP 3
   365 label *label496
   366 label *label497
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  367 op add :testAndSetMultiples.0:i 167 5
   368 label *label498
   369 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  370 op idiv *tmp34 172 48
+  371 op mod *tmp36 172 48
+  372 op shl *tmp37 1 28
+  373 read *tmp35 BITMAP 3
+  374 op or *tmp38 *tmp35 268435456
+  375 write *tmp38 BITMAP 3
   376 label *label499
   377 label *label500
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  378 op add :testAndSetMultiples.0:i 172 5
   379 label *label501
   380 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  381 op idiv *tmp34 177 48
+  382 op mod *tmp36 177 48
+  383 op shl *tmp37 1 33
+  384 read *tmp35 BITMAP 3
+  385 op or *tmp38 *tmp35 8589934592
+  386 write *tmp38 BITMAP 3
   387 label *label502
   388 label *label503
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  389 op add :testAndSetMultiples.0:i 177 5
   390 label *label504
   391 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  392 op idiv *tmp34 182 48
+  393 op mod *tmp36 182 48
+  394 op shl *tmp37 1 38
+  395 read *tmp35 BITMAP 3
+  396 op or *tmp38 *tmp35 274877906944
+  397 write *tmp38 BITMAP 3
   398 label *label505
   399 label *label506
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  400 op add :testAndSetMultiples.0:i 182 5
   401 label *label507
   402 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  403 op idiv *tmp34 187 48
+  404 op mod *tmp36 187 48
+  405 op shl *tmp37 1 43
+  406 read *tmp35 BITMAP 3
+  407 op or *tmp38 *tmp35 8796093022208
+  408 write *tmp38 BITMAP 3
   409 label *label508
   410 label *label509
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  411 op add :testAndSetMultiples.0:i 187 5
   412 label *label510
   413 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  414 op idiv *tmp34 192 48
+  415 op mod *tmp36 192 48
+  416 op shl *tmp37 1 0
+  417 read *tmp35 BITMAP 4
+  418 op or *tmp38 *tmp35 1
+  419 write *tmp38 BITMAP 4
   420 label *label511
   421 label *label512
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  422 op add :testAndSetMultiples.0:i 192 5
   423 label *label513
   424 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  425 op idiv *tmp34 197 48
+  426 op mod *tmp36 197 48
+  427 op shl *tmp37 1 5
+  428 read *tmp35 BITMAP 4
+  429 op or *tmp38 *tmp35 32
+  430 write *tmp38 BITMAP 4
   431 label *label514
   432 label *label515
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  433 op add :testAndSetMultiples.0:i 197 5
   434 label *label516
   435 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  436 op idiv *tmp34 202 48
+  437 op mod *tmp36 202 48
+  438 op shl *tmp37 1 10
+  439 read *tmp35 BITMAP 4
+  440 op or *tmp38 *tmp35 1024
+  441 write *tmp38 BITMAP 4
   442 label *label517
   443 label *label518
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  444 op add :testAndSetMultiples.0:i 202 5
   445 label *label519
   446 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  447 op idiv *tmp34 207 48
+  448 op mod *tmp36 207 48
+  449 op shl *tmp37 1 15
+  450 read *tmp35 BITMAP 4
+  451 op or *tmp38 *tmp35 32768
+  452 write *tmp38 BITMAP 4
   453 label *label520
   454 label *label521
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  455 op add :testAndSetMultiples.0:i 207 5
   456 label *label522
   457 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  458 op idiv *tmp34 212 48
+  459 op mod *tmp36 212 48
+  460 op shl *tmp37 1 20
+  461 read *tmp35 BITMAP 4
+  462 op or *tmp38 *tmp35 1048576
+  463 write *tmp38 BITMAP 4
   464 label *label523
   465 label *label524
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  466 op add :testAndSetMultiples.0:i 212 5
   467 label *label525
   468 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  469 op idiv *tmp34 217 48
+  470 op mod *tmp36 217 48
+  471 op shl *tmp37 1 25
+  472 read *tmp35 BITMAP 4
+  473 op or *tmp38 *tmp35 33554432
+  474 write *tmp38 BITMAP 4
   475 label *label526
   476 label *label527
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  477 op add :testAndSetMultiples.0:i 217 5
   478 label *label528
   479 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  480 op idiv *tmp34 222 48
+  481 op mod *tmp36 222 48
+  482 op shl *tmp37 1 30
+  483 read *tmp35 BITMAP 4
+  484 op or *tmp38 *tmp35 1073741824
+  485 write *tmp38 BITMAP 4
   486 label *label529
   487 label *label530
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  488 op add :testAndSetMultiples.0:i 222 5
   489 label *label531
   490 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  491 op idiv *tmp34 227 48
+  492 op mod *tmp36 227 48
+  493 op shl *tmp37 1 35
+  494 read *tmp35 BITMAP 4
+  495 op or *tmp38 *tmp35 34359738368
+  496 write *tmp38 BITMAP 4
   497 label *label532
   498 label *label533
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  499 op add :testAndSetMultiples.0:i 227 5
   500 label *label534
   501 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  502 op idiv *tmp34 232 48
+  503 op mod *tmp36 232 48
+  504 op shl *tmp37 1 40
+  505 read *tmp35 BITMAP 4
+  506 op or *tmp38 *tmp35 1099511627776
+  507 write *tmp38 BITMAP 4
   508 label *label535
   509 label *label536
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  510 op add :testAndSetMultiples.0:i 232 5
   511 label *label537
   512 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  513 op idiv *tmp34 237 48
+  514 op mod *tmp36 237 48
+  515 op shl *tmp37 1 45
+  516 read *tmp35 BITMAP 4
+  517 op or *tmp38 *tmp35 35184372088832
+  518 write *tmp38 BITMAP 4
   519 label *label538
   520 label *label539
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  521 op add :testAndSetMultiples.0:i 237 5
   522 label *label540
   523 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  524 op idiv *tmp34 242 48
+  525 op mod *tmp36 242 48
+  526 op shl *tmp37 1 2
+  527 read *tmp35 BITMAP 5
+  528 op or *tmp38 *tmp35 4
+  529 write *tmp38 BITMAP 5
   530 label *label541
   531 label *label542
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  532 op add :testAndSetMultiples.0:i 242 5
   533 label *label543
   534 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  535 op idiv *tmp34 247 48
+  536 op mod *tmp36 247 48
+  537 op shl *tmp37 1 7
+  538 read *tmp35 BITMAP 5
+  539 op or *tmp38 *tmp35 128
+  540 write *tmp38 BITMAP 5
   541 label *label544
   542 label *label545
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  543 op add :testAndSetMultiples.0:i 247 5
   544 label *label67
   545 label *label68
   546 label *label69

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-193 instructions):
 
    11 label *label62
    12 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    13 jump *label68 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
    14 label *label401
    15 label *label402
    16 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 12 48
-    * op mod *tmp36 12 48
-    * op shl *tmp37 1 12
    17 read *tmp35 BITMAP 0
    18 op or *tmp38 *tmp35 4096
    19 write *tmp38 BITMAP 0
    20 label *label403
    21 label *label404
-    * op add :testAndSetMultiples.0:i 12 5
    22 label *label405
    23 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 17 48
-    * op mod *tmp36 17 48
-    * op shl *tmp37 1 17
    24 read *tmp35 BITMAP 0
    25 op or *tmp38 *tmp35 131072
    26 write *tmp38 BITMAP 0
    27 label *label406
    28 label *label407
-    * op add :testAndSetMultiples.0:i 17 5
    29 label *label408
    30 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 22 48
-    * op mod *tmp36 22 48
-    * op shl *tmp37 1 22
    31 read *tmp35 BITMAP 0
    32 op or *tmp38 *tmp35 4194304
    33 write *tmp38 BITMAP 0
    34 label *label409
    35 label *label410
-    * op add :testAndSetMultiples.0:i 22 5
    36 label *label411
    37 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 27 48
-    * op mod *tmp36 27 48
-    * op shl *tmp37 1 27
    38 read *tmp35 BITMAP 0
    39 op or *tmp38 *tmp35 134217728
    40 write *tmp38 BITMAP 0
    41 label *label412
    42 label *label413
-    * op add :testAndSetMultiples.0:i 27 5
    43 label *label414
    44 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 32 48
-    * op mod *tmp36 32 48
-    * op shl *tmp37 1 32
    45 read *tmp35 BITMAP 0
    46 op or *tmp38 *tmp35 4294967296
    47 write *tmp38 BITMAP 0
    48 label *label415
    49 label *label416
-    * op add :testAndSetMultiples.0:i 32 5
    50 label *label417
    51 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 37 48
-    * op mod *tmp36 37 48
-    * op shl *tmp37 1 37
    52 read *tmp35 BITMAP 0
    53 op or *tmp38 *tmp35 137438953472
    54 write *tmp38 BITMAP 0
    55 label *label418
    56 label *label419
-    * op add :testAndSetMultiples.0:i 37 5
    57 label *label420
    58 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 42 48
-    * op mod *tmp36 42 48
-    * op shl *tmp37 1 42
    59 read *tmp35 BITMAP 0
    60 op or *tmp38 *tmp35 4398046511104
    61 write *tmp38 BITMAP 0
    62 label *label421
    63 label *label422
-    * op add :testAndSetMultiples.0:i 42 5
    64 label *label423
    65 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 47 48
-    * op mod *tmp36 47 48
-    * op shl *tmp37 1 47
    66 read *tmp35 BITMAP 0
    67 op or *tmp38 *tmp35 140737488355328
    68 write *tmp38 BITMAP 0
    69 label *label424
    70 label *label425
-    * op add :testAndSetMultiples.0:i 47 5
    71 label *label426
    72 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    73 read *tmp35 BITMAP 1
    74 op or *tmp38 *tmp35 16
    75 write *tmp38 BITMAP 1
    76 label *label427
    77 label *label428
-    * op add :testAndSetMultiples.0:i 52 5
    78 label *label429
    79 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 57 48
-    * op mod *tmp36 57 48
-    * op shl *tmp37 1 9
    80 read *tmp35 BITMAP 1
    81 op or *tmp38 *tmp35 512
    82 write *tmp38 BITMAP 1
    83 label *label430
    84 label *label431
-    * op add :testAndSetMultiples.0:i 57 5
    85 label *label432
    86 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 62 48
-    * op mod *tmp36 62 48
-    * op shl *tmp37 1 14
    87 read *tmp35 BITMAP 1
    88 op or *tmp38 *tmp35 16384
    89 write *tmp38 BITMAP 1
    90 label *label433
    91 label *label434
-    * op add :testAndSetMultiples.0:i 62 5
    92 label *label435
    93 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 67 48
-    * op mod *tmp36 67 48
-    * op shl *tmp37 1 19
    94 read *tmp35 BITMAP 1
    95 op or *tmp38 *tmp35 524288
    96 write *tmp38 BITMAP 1
    97 label *label436
    98 label *label437
-    * op add :testAndSetMultiples.0:i 67 5
    99 label *label438
   100 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 72 48
-    * op mod *tmp36 72 48
-    * op shl *tmp37 1 24
   101 read *tmp35 BITMAP 1
   102 op or *tmp38 *tmp35 16777216
   103 write *tmp38 BITMAP 1
   104 label *label439
   105 label *label440
-    * op add :testAndSetMultiples.0:i 72 5
   106 label *label441
   107 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 77 48
-    * op mod *tmp36 77 48
-    * op shl *tmp37 1 29
   108 read *tmp35 BITMAP 1
   109 op or *tmp38 *tmp35 536870912
   110 write *tmp38 BITMAP 1
   111 label *label442
   112 label *label443
-    * op add :testAndSetMultiples.0:i 77 5
   113 label *label444
   114 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
   115 read *tmp35 BITMAP 1
   116 op or *tmp38 *tmp35 17179869184
   117 write *tmp38 BITMAP 1
   118 label *label445
   119 label *label446
-    * op add :testAndSetMultiples.0:i 82 5
   120 label *label447
   121 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
   122 read *tmp35 BITMAP 1
   123 op or *tmp38 *tmp35 549755813888
   124 write *tmp38 BITMAP 1
   125 label *label448
   126 label *label449
-    * op add :testAndSetMultiples.0:i 87 5
   127 label *label450
   128 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 92 48
-    * op mod *tmp36 92 48
-    * op shl *tmp37 1 44
   129 read *tmp35 BITMAP 1
   130 op or *tmp38 *tmp35 17592186044416
   131 write *tmp38 BITMAP 1
   132 label *label451
   133 label *label452
-    * op add :testAndSetMultiples.0:i 92 5
   134 label *label453
   135 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   136 read *tmp35 BITMAP 2
   137 op or *tmp38 *tmp35 2
   138 write *tmp38 BITMAP 2
   139 label *label454
   140 label *label455
-    * op add :testAndSetMultiples.0:i 97 5
   141 label *label456
   142 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 102 48
-    * op mod *tmp36 102 48
-    * op shl *tmp37 1 6
   143 read *tmp35 BITMAP 2
   144 op or *tmp38 *tmp35 64
   145 write *tmp38 BITMAP 2
   146 label *label457
   147 label *label458
-    * op add :testAndSetMultiples.0:i 102 5
   148 label *label459
   149 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 107 48
-    * op mod *tmp36 107 48
-    * op shl *tmp37 1 11
   150 read *tmp35 BITMAP 2
   151 op or *tmp38 *tmp35 2048
   152 write *tmp38 BITMAP 2
   153 label *label460
   154 label *label461
-    * op add :testAndSetMultiples.0:i 107 5
   155 label *label462
   156 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 112 48
-    * op mod *tmp36 112 48
-    * op shl *tmp37 1 16
   157 read *tmp35 BITMAP 2
   158 op or *tmp38 *tmp35 65536
   159 write *tmp38 BITMAP 2
   160 label *label463
   161 label *label464
-    * op add :testAndSetMultiples.0:i 112 5
   162 label *label465
   163 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 117 48
-    * op mod *tmp36 117 48
-    * op shl *tmp37 1 21
   164 read *tmp35 BITMAP 2
   165 op or *tmp38 *tmp35 2097152
   166 write *tmp38 BITMAP 2
   167 label *label466
   168 label *label467
-    * op add :testAndSetMultiples.0:i 117 5
   169 label *label468
   170 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   171 read *tmp35 BITMAP 2
   172 op or *tmp38 *tmp35 67108864
   173 write *tmp38 BITMAP 2
   174 label *label469
   175 label *label470
-    * op add :testAndSetMultiples.0:i 122 5
   176 label *label471
   177 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 127 48
-    * op mod *tmp36 127 48
-    * op shl *tmp37 1 31
   178 read *tmp35 BITMAP 2
   179 op or *tmp38 *tmp35 2147483648
   180 write *tmp38 BITMAP 2
   181 label *label472
   182 label *label473
-    * op add :testAndSetMultiples.0:i 127 5
   183 label *label474
   184 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 132 48
-    * op mod *tmp36 132 48
-    * op shl *tmp37 1 36
   185 read *tmp35 BITMAP 2
   186 op or *tmp38 *tmp35 68719476736
   187 write *tmp38 BITMAP 2
   188 label *label475
   189 label *label476
-    * op add :testAndSetMultiples.0:i 132 5
   190 label *label477
   191 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   192 read *tmp35 BITMAP 2
   193 op or *tmp38 *tmp35 2199023255552
   194 write *tmp38 BITMAP 2
   195 label *label478
   196 label *label479
-    * op add :testAndSetMultiples.0:i 137 5
   197 label *label480
   198 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 142 48
-    * op mod *tmp36 142 48
-    * op shl *tmp37 1 46
   199 read *tmp35 BITMAP 2
   200 op or *tmp38 *tmp35 70368744177664
   201 write *tmp38 BITMAP 2
   202 label *label481
   203 label *label482
-    * op add :testAndSetMultiples.0:i 142 5
   204 label *label483
   205 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 147 48
-    * op mod *tmp36 147 48
-    * op shl *tmp37 1 3
   206 read *tmp35 BITMAP 3
   207 op or *tmp38 *tmp35 8
   208 write *tmp38 BITMAP 3
   209 label *label484
   210 label *label485
-    * op add :testAndSetMultiples.0:i 147 5
   211 label *label486
   212 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 152 48
-    * op mod *tmp36 152 48
-    * op shl *tmp37 1 8
   213 read *tmp35 BITMAP 3
   214 op or *tmp38 *tmp35 256
   215 write *tmp38 BITMAP 3
   216 label *label487
   217 label *label488
-    * op add :testAndSetMultiples.0:i 152 5
   218 label *label489
   219 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   220 read *tmp35 BITMAP 3
   221 op or *tmp38 *tmp35 8192
   222 write *tmp38 BITMAP 3
   223 label *label490
   224 label *label491
-    * op add :testAndSetMultiples.0:i 157 5
   225 label *label492
   226 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   227 read *tmp35 BITMAP 3
   228 op or *tmp38 *tmp35 262144
   229 write *tmp38 BITMAP 3
   230 label *label493
   231 label *label494
-    * op add :testAndSetMultiples.0:i 162 5
   232 label *label495
   233 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 167 48
-    * op mod *tmp36 167 48
-    * op shl *tmp37 1 23
   234 read *tmp35 BITMAP 3
   235 op or *tmp38 *tmp35 8388608
   236 write *tmp38 BITMAP 3
   237 label *label496
   238 label *label497
-    * op add :testAndSetMultiples.0:i 167 5
   239 label *label498
   240 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 172 48
-    * op mod *tmp36 172 48
-    * op shl *tmp37 1 28
   241 read *tmp35 BITMAP 3
   242 op or *tmp38 *tmp35 268435456
   243 write *tmp38 BITMAP 3
   244 label *label499
   245 label *label500
-    * op add :testAndSetMultiples.0:i 172 5
   246 label *label501
   247 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 177 48
-    * op mod *tmp36 177 48
-    * op shl *tmp37 1 33
   248 read *tmp35 BITMAP 3
   249 op or *tmp38 *tmp35 8589934592
   250 write *tmp38 BITMAP 3
   251 label *label502
   252 label *label503
-    * op add :testAndSetMultiples.0:i 177 5
   253 label *label504
   254 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 182 48
-    * op mod *tmp36 182 48
-    * op shl *tmp37 1 38
   255 read *tmp35 BITMAP 3
   256 op or *tmp38 *tmp35 274877906944
   257 write *tmp38 BITMAP 3
   258 label *label505
   259 label *label506
-    * op add :testAndSetMultiples.0:i 182 5
   260 label *label507
   261 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 187 48
-    * op mod *tmp36 187 48
-    * op shl *tmp37 1 43
   262 read *tmp35 BITMAP 3
   263 op or *tmp38 *tmp35 8796093022208
   264 write *tmp38 BITMAP 3
   265 label *label508
   266 label *label509
-    * op add :testAndSetMultiples.0:i 187 5
   267 label *label510
   268 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   269 read *tmp35 BITMAP 4
   270 op or *tmp38 *tmp35 1
   271 write *tmp38 BITMAP 4
   272 label *label511
   273 label *label512
-    * op add :testAndSetMultiples.0:i 192 5
   274 label *label513
   275 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 197 48
-    * op mod *tmp36 197 48
-    * op shl *tmp37 1 5
   276 read *tmp35 BITMAP 4
   277 op or *tmp38 *tmp35 32
   278 write *tmp38 BITMAP 4
   279 label *label514
   280 label *label515
-    * op add :testAndSetMultiples.0:i 197 5
   281 label *label516
   282 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 202 48
-    * op mod *tmp36 202 48
-    * op shl *tmp37 1 10
   283 read *tmp35 BITMAP 4
   284 op or *tmp38 *tmp35 1024
   285 write *tmp38 BITMAP 4
   286 label *label517
   287 label *label518
-    * op add :testAndSetMultiples.0:i 202 5
   288 label *label519
   289 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 207 48
-    * op mod *tmp36 207 48
-    * op shl *tmp37 1 15
   290 read *tmp35 BITMAP 4
   291 op or *tmp38 *tmp35 32768
   292 write *tmp38 BITMAP 4
   293 label *label520
   294 label *label521
-    * op add :testAndSetMultiples.0:i 207 5
   295 label *label522
   296 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   297 read *tmp35 BITMAP 4
   298 op or *tmp38 *tmp35 1048576
   299 write *tmp38 BITMAP 4
   300 label *label523
   301 label *label524
-    * op add :testAndSetMultiples.0:i 212 5
   302 label *label525
   303 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 217 48
-    * op mod *tmp36 217 48
-    * op shl *tmp37 1 25
   304 read *tmp35 BITMAP 4
   305 op or *tmp38 *tmp35 33554432
   306 write *tmp38 BITMAP 4
   307 label *label526
   308 label *label527
-    * op add :testAndSetMultiples.0:i 217 5
   309 label *label528
   310 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 222 48
-    * op mod *tmp36 222 48
-    * op shl *tmp37 1 30
   311 read *tmp35 BITMAP 4
   312 op or *tmp38 *tmp35 1073741824
   313 write *tmp38 BITMAP 4
   314 label *label529
   315 label *label530
-    * op add :testAndSetMultiples.0:i 222 5
   316 label *label531
   317 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   318 read *tmp35 BITMAP 4
   319 op or *tmp38 *tmp35 34359738368
   320 write *tmp38 BITMAP 4
   321 label *label532
   322 label *label533
-    * op add :testAndSetMultiples.0:i 227 5
   323 label *label534
   324 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 232 48
-    * op mod *tmp36 232 48
-    * op shl *tmp37 1 40
   325 read *tmp35 BITMAP 4
   326 op or *tmp38 *tmp35 1099511627776
   327 write *tmp38 BITMAP 4
   328 label *label535
   329 label *label536
-    * op add :testAndSetMultiples.0:i 232 5
   330 label *label537
   331 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   332 read *tmp35 BITMAP 4
   333 op or *tmp38 *tmp35 35184372088832
   334 write *tmp38 BITMAP 4
   335 label *label538
   336 label *label539
-    * op add :testAndSetMultiples.0:i 237 5
   337 label *label540
   338 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 242 48
-    * op mod *tmp36 242 48
-    * op shl *tmp37 1 2
   339 read *tmp35 BITMAP 5
   340 op or *tmp38 *tmp35 4
   341 write *tmp38 BITMAP 5
   342 label *label541
   343 label *label542
-    * op add :testAndSetMultiples.0:i 242 5
   344 label *label543
   345 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   346 read *tmp35 BITMAP 5
   347 op or *tmp38 *tmp35 128
   348 write *tmp38 BITMAP 5
   349 label *label544
   350 label *label545
-    * op add :testAndSetMultiples.0:i 247 5
   351 label *label67
   352 label *label68
   353 label *label69

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-1 instructions):
 
   988 jump *label152 equal :testAndSetMultiples.0:result false
   989 op idiv :testAndSetMultiples.0:i 529 2
   990 label *label147
-    * jump *label151 greaterThan 264 250
+  991 jump *label151 always
   992 label *label148
   993 # "Function: def setBit(in bitIndex)"
   994 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
  1020 jump *label165 equal :testAndSetMultiples.0:result false
  1021 op idiv :testAndSetMultiples.0:i 625 2
  1022 label *label160
-    * jump *label164 greaterThan 312 250
+ 1023 jump *label164 always
  1024 label *label161
  1025 # "Function: def setBit(in bitIndex)"
  1026 op idiv *tmp34 :testAndSetMultiples.0:i 48
 
  1045 label *label170
  1046 label *label5
  1047 label *label10
-    * jump *label12 greaterThan 29 500
  1048 label *label28
  1049 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
  1050 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-14 instructions):
 
   986 label *label146
   987 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   988 jump *label152 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 529 2
   989 label *label147
   990 jump *label151 always
   991 label *label148
   992 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
   993 write *tmp38 BITMAP *tmp34
   994 label *label149
   995 label *label150
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   996 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   997 label *label151
   998 label *label152
 
  1011 label *label159
  1012 op equal :testAndSetMultiples.0:result :getBit.0*retval false
  1013 jump *label165 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 625 2
  1014 label *label160
  1015 jump *label164 always
  1016 label *label161
  1017 # "Function: def setBit(in bitIndex)"
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
  1018 write *tmp38 BITMAP *tmp34
  1019 label *label162
  1020 label *label163
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
  1021 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
  1022 label *label164
  1023 label *label165

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 set BITMAP bank1
     1 # "Function: def sumPrimesUpTo(in maximum)"
     2 set :sumPrimesUpTo.0:sum 5
-    * label *label58
-    * label *label59
-    * label *label60
     3 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label61
     4 # "Function: def getBit(in bitIndex)"
     5 read *tmp21 BITMAP 0
     6 op and :getBit.0*retval *tmp21 4
-    * label *label62
     7 op equal :testAndSetMultiples.0:result :getBit.0*retval false
     8 jump *label68 equal :testAndSetMultiples.0:result false
-    * label *label401
-    * label *label402
     9 # "Function: def setBit(in bitIndex)"
    10 read *tmp35 BITMAP 0
    11 op or *tmp38 *tmp35 4096
    12 write *tmp38 BITMAP 0
-    * label *label403
-    * label *label404
-    * label *label405
    13 # "Function: def setBit(in bitIndex)"
    14 read *tmp35 BITMAP 0
    15 op or *tmp38 *tmp35 131072
    16 write *tmp38 BITMAP 0
-    * label *label406
-    * label *label407
-    * label *label408
    17 # "Function: def setBit(in bitIndex)"
    18 read *tmp35 BITMAP 0
    19 op or *tmp38 *tmp35 4194304
    20 write *tmp38 BITMAP 0
-    * label *label409
-    * label *label410
-    * label *label411
    21 # "Function: def setBit(in bitIndex)"
    22 read *tmp35 BITMAP 0
    23 op or *tmp38 *tmp35 134217728
    24 write *tmp38 BITMAP 0
-    * label *label412
-    * label *label413
-    * label *label414
    25 # "Function: def setBit(in bitIndex)"
    26 read *tmp35 BITMAP 0
    27 op or *tmp38 *tmp35 4294967296
    28 write *tmp38 BITMAP 0
-    * label *label415
-    * label *label416
-    * label *label417
    29 # "Function: def setBit(in bitIndex)"
    30 read *tmp35 BITMAP 0
    31 op or *tmp38 *tmp35 137438953472
    32 write *tmp38 BITMAP 0
-    * label *label418
-    * label *label419
-    * label *label420
    33 # "Function: def setBit(in bitIndex)"
    34 read *tmp35 BITMAP 0
    35 op or *tmp38 *tmp35 4398046511104
    36 write *tmp38 BITMAP 0
-    * label *label421
-    * label *label422
-    * label *label423
    37 # "Function: def setBit(in bitIndex)"
    38 read *tmp35 BITMAP 0
    39 op or *tmp38 *tmp35 140737488355328
    40 write *tmp38 BITMAP 0
-    * label *label424
-    * label *label425
-    * label *label426
    41 # "Function: def setBit(in bitIndex)"
    42 read *tmp35 BITMAP 1
    43 op or *tmp38 *tmp35 16
    44 write *tmp38 BITMAP 1
-    * label *label427
-    * label *label428
-    * label *label429
    45 # "Function: def setBit(in bitIndex)"
    46 read *tmp35 BITMAP 1
    47 op or *tmp38 *tmp35 512
    48 write *tmp38 BITMAP 1
-    * label *label430
-    * label *label431
-    * label *label432
    49 # "Function: def setBit(in bitIndex)"
    50 read *tmp35 BITMAP 1
    51 op or *tmp38 *tmp35 16384
    52 write *tmp38 BITMAP 1
-    * label *label433
-    * label *label434
-    * label *label435
    53 # "Function: def setBit(in bitIndex)"
    54 read *tmp35 BITMAP 1
    55 op or *tmp38 *tmp35 524288
    56 write *tmp38 BITMAP 1
-    * label *label436
-    * label *label437
-    * label *label438
    57 # "Function: def setBit(in bitIndex)"
    58 read *tmp35 BITMAP 1
    59 op or *tmp38 *tmp35 16777216
    60 write *tmp38 BITMAP 1
-    * label *label439
-    * label *label440
-    * label *label441
    61 # "Function: def setBit(in bitIndex)"
    62 read *tmp35 BITMAP 1
    63 op or *tmp38 *tmp35 536870912
    64 write *tmp38 BITMAP 1
-    * label *label442
-    * label *label443
-    * label *label444
    65 # "Function: def setBit(in bitIndex)"
    66 read *tmp35 BITMAP 1
    67 op or *tmp38 *tmp35 17179869184
    68 write *tmp38 BITMAP 1
-    * label *label445
-    * label *label446
-    * label *label447
    69 # "Function: def setBit(in bitIndex)"
    70 read *tmp35 BITMAP 1
    71 op or *tmp38 *tmp35 549755813888
    72 write *tmp38 BITMAP 1
-    * label *label448
-    * label *label449
-    * label *label450
    73 # "Function: def setBit(in bitIndex)"
    74 read *tmp35 BITMAP 1
    75 op or *tmp38 *tmp35 17592186044416
    76 write *tmp38 BITMAP 1
-    * label *label451
-    * label *label452
-    * label *label453
    77 # "Function: def setBit(in bitIndex)"
    78 read *tmp35 BITMAP 2
    79 op or *tmp38 *tmp35 2
    80 write *tmp38 BITMAP 2
-    * label *label454
-    * label *label455
-    * label *label456
    81 # "Function: def setBit(in bitIndex)"
    82 read *tmp35 BITMAP 2
    83 op or *tmp38 *tmp35 64
    84 write *tmp38 BITMAP 2
-    * label *label457
-    * label *label458
-    * label *label459
    85 # "Function: def setBit(in bitIndex)"
    86 read *tmp35 BITMAP 2
    87 op or *tmp38 *tmp35 2048
    88 write *tmp38 BITMAP 2
-    * label *label460
-    * label *label461
-    * label *label462
    89 # "Function: def setBit(in bitIndex)"
    90 read *tmp35 BITMAP 2
    91 op or *tmp38 *tmp35 65536
    92 write *tmp38 BITMAP 2
-    * label *label463
-    * label *label464
-    * label *label465
    93 # "Function: def setBit(in bitIndex)"
    94 read *tmp35 BITMAP 2
    95 op or *tmp38 *tmp35 2097152
    96 write *tmp38 BITMAP 2
-    * label *label466
-    * label *label467
-    * label *label468
    97 # "Function: def setBit(in bitIndex)"
    98 read *tmp35 BITMAP 2
    99 op or *tmp38 *tmp35 67108864
   100 write *tmp38 BITMAP 2
-    * label *label469
-    * label *label470
-    * label *label471
   101 # "Function: def setBit(in bitIndex)"
   102 read *tmp35 BITMAP 2
   103 op or *tmp38 *tmp35 2147483648
   104 write *tmp38 BITMAP 2
-    * label *label472
-    * label *label473
-    * label *label474
   105 # "Function: def setBit(in bitIndex)"
   106 read *tmp35 BITMAP 2
   107 op or *tmp38 *tmp35 68719476736
   108 write *tmp38 BITMAP 2
-    * label *label475
-    * label *label476
-    * label *label477
   109 # "Function: def setBit(in bitIndex)"
   110 read *tmp35 BITMAP 2
   111 op or *tmp38 *tmp35 2199023255552
   112 write *tmp38 BITMAP 2
-    * label *label478
-    * label *label479
-    * label *label480
   113 # "Function: def setBit(in bitIndex)"
   114 read *tmp35 BITMAP 2
   115 op or *tmp38 *tmp35 70368744177664
   116 write *tmp38 BITMAP 2
-    * label *label481
-    * label *label482
-    * label *label483
   117 # "Function: def setBit(in bitIndex)"
   118 read *tmp35 BITMAP 3
   119 op or *tmp38 *tmp35 8
   120 write *tmp38 BITMAP 3
-    * label *label484
-    * label *label485
-    * label *label486
   121 # "Function: def setBit(in bitIndex)"
   122 read *tmp35 BITMAP 3
   123 op or *tmp38 *tmp35 256
   124 write *tmp38 BITMAP 3
-    * label *label487
-    * label *label488
-    * label *label489
   125 # "Function: def setBit(in bitIndex)"
   126 read *tmp35 BITMAP 3
   127 op or *tmp38 *tmp35 8192
   128 write *tmp38 BITMAP 3
-    * label *label490
-    * label *label491
-    * label *label492
   129 # "Function: def setBit(in bitIndex)"
   130 read *tmp35 BITMAP 3
   131 op or *tmp38 *tmp35 262144
   132 write *tmp38 BITMAP 3
-    * label *label493
-    * label *label494
-    * label *label495
   133 # "Function: def setBit(in bitIndex)"
   134 read *tmp35 BITMAP 3
   135 op or *tmp38 *tmp35 8388608
   136 write *tmp38 BITMAP 3
-    * label *label496
-    * label *label497
-    * label *label498
   137 # "Function: def setBit(in bitIndex)"
   138 read *tmp35 BITMAP 3
   139 op or *tmp38 *tmp35 268435456
   140 write *tmp38 BITMAP 3
-    * label *label499
-    * label *label500
-    * label *label501
   141 # "Function: def setBit(in bitIndex)"
   142 read *tmp35 BITMAP 3
   143 op or *tmp38 *tmp35 8589934592
   144 write *tmp38 BITMAP 3
-    * label *label502
-    * label *label503
-    * label *label504
   145 # "Function: def setBit(in bitIndex)"
   146 read *tmp35 BITMAP 3
   147 op or *tmp38 *tmp35 274877906944
   148 write *tmp38 BITMAP 3
-    * label *label505
-    * label *label506
-    * label *label507
   149 # "Function: def setBit(in bitIndex)"
   150 read *tmp35 BITMAP 3
   151 op or *tmp38 *tmp35 8796093022208
   152 write *tmp38 BITMAP 3
-    * label *label508
-    * label *label509
-    * label *label510
   153 # "Function: def setBit(in bitIndex)"
   154 read *tmp35 BITMAP 4
   155 op or *tmp38 *tmp35 1
   156 write *tmp38 BITMAP 4
-    * label *label511
-    * label *label512
-    * label *label513
   157 # "Function: def setBit(in bitIndex)"
   158 read *tmp35 BITMAP 4
   159 op or *tmp38 *tmp35 32
   160 write *tmp38 BITMAP 4
-    * label *label514
-    * label *label515
-    * label *label516
   161 # "Function: def setBit(in bitIndex)"
   162 read *tmp35 BITMAP 4
   163 op or *tmp38 *tmp35 1024
   164 write *tmp38 BITMAP 4
-    * label *label517
-    * label *label518
-    * label *label519
   165 # "Function: def setBit(in bitIndex)"
   166 read *tmp35 BITMAP 4
   167 op or *tmp38 *tmp35 32768
   168 write *tmp38 BITMAP 4
-    * label *label520
-    * label *label521
-    * label *label522
   169 # "Function: def setBit(in bitIndex)"
   170 read *tmp35 BITMAP 4
   171 op or *tmp38 *tmp35 1048576
   172 write *tmp38 BITMAP 4
-    * label *label523
-    * label *label524
-    * label *label525
   173 # "Function: def setBit(in bitIndex)"
   174 read *tmp35 BITMAP 4
   175 op or *tmp38 *tmp35 33554432
   176 write *tmp38 BITMAP 4
-    * label *label526
-    * label *label527
-    * label *label528
   177 # "Function: def setBit(in bitIndex)"
   178 read *tmp35 BITMAP 4
   179 op or *tmp38 *tmp35 1073741824
   180 write *tmp38 BITMAP 4
-    * label *label529
-    * label *label530
-    * label *label531
   181 # "Function: def setBit(in bitIndex)"
   182 read *tmp35 BITMAP 4
   183 op or *tmp38 *tmp35 34359738368
   184 write *tmp38 BITMAP 4
-    * label *label532
-    * label *label533
-    * label *label534
   185 # "Function: def setBit(in bitIndex)"
   186 read *tmp35 BITMAP 4
   187 op or *tmp38 *tmp35 1099511627776
   188 write *tmp38 BITMAP 4
-    * label *label535
-    * label *label536
-    * label *label537
   189 # "Function: def setBit(in bitIndex)"
   190 read *tmp35 BITMAP 4
   191 op or *tmp38 *tmp35 35184372088832
   192 write *tmp38 BITMAP 4
-    * label *label538
-    * label *label539
-    * label *label540
   193 # "Function: def setBit(in bitIndex)"
   194 read *tmp35 BITMAP 5
   195 op or *tmp38 *tmp35 4
   196 write *tmp38 BITMAP 5
-    * label *label541
-    * label *label542
-    * label *label543
   197 # "Function: def setBit(in bitIndex)"
   198 read *tmp35 BITMAP 5
   199 op or *tmp38 *tmp35 128
   200 write *tmp38 BITMAP 5
-    * label *label544
-    * label *label545
-    * label *label67
   201 label *label68
-    * label *label69
-    * label *label70
   202 jump *label71 equal :testAndSetMultiples.0:result false
   203 op add :sumPrimesUpTo.0:sum 5 5
   204 label *label71
-    * label *label72
-    * label *label73
   205 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label74
   206 # "Function: def getBit(in bitIndex)"
   207 read *tmp21 BITMAP 0
   208 op and :getBit.0*retval *tmp21 8
-    * label *label75
   209 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   210 jump *label81 equal :testAndSetMultiples.0:result false
-    * label *label301
-    * label *label302
   211 # "Function: def setBit(in bitIndex)"
   212 read *tmp35 BITMAP 0
   213 op or *tmp38 *tmp35 16777216
   214 write *tmp38 BITMAP 0
-    * label *label303
-    * label *label304
-    * label *label305
   215 # "Function: def setBit(in bitIndex)"
   216 read *tmp35 BITMAP 0
   217 op or *tmp38 *tmp35 2147483648
   218 write *tmp38 BITMAP 0
-    * label *label306
-    * label *label307
-    * label *label308
   219 # "Function: def setBit(in bitIndex)"
   220 read *tmp35 BITMAP 0
   221 op or *tmp38 *tmp35 274877906944
   222 write *tmp38 BITMAP 0
-    * label *label309
-    * label *label310
-    * label *label311
   223 # "Function: def setBit(in bitIndex)"
   224 read *tmp35 BITMAP 0
   225 op or *tmp38 *tmp35 35184372088832
   226 write *tmp38 BITMAP 0
-    * label *label312
-    * label *label313
-    * label *label314
   227 # "Function: def setBit(in bitIndex)"
   228 read *tmp35 BITMAP 1
   229 op or *tmp38 *tmp35 16
   230 write *tmp38 BITMAP 1
-    * label *label315
-    * label *label316
-    * label *label317
   231 # "Function: def setBit(in bitIndex)"
   232 read *tmp35 BITMAP 1
   233 op or *tmp38 *tmp35 2048
   234 write *tmp38 BITMAP 1
-    * label *label318
-    * label *label319
-    * label *label320
   235 # "Function: def setBit(in bitIndex)"
   236 read *tmp35 BITMAP 1
   237 op or *tmp38 *tmp35 262144
   238 write *tmp38 BITMAP 1
-    * label *label321
-    * label *label322
-    * label *label323
   239 # "Function: def setBit(in bitIndex)"
   240 read *tmp35 BITMAP 1
   241 op or *tmp38 *tmp35 33554432
   242 write *tmp38 BITMAP 1
-    * label *label324
-    * label *label325
-    * label *label326
   243 # "Function: def setBit(in bitIndex)"
   244 read *tmp35 BITMAP 1
   245 op or *tmp38 *tmp35 4294967296
   246 write *tmp38 BITMAP 1
-    * label *label327
-    * label *label328
-    * label *label329
   247 # "Function: def setBit(in bitIndex)"
   248 read *tmp35 BITMAP 1
   249 op or *tmp38 *tmp35 549755813888
   250 write *tmp38 BITMAP 1
-    * label *label330
-    * label *label331
-    * label *label332
   251 # "Function: def setBit(in bitIndex)"
   252 read *tmp35 BITMAP 1
   253 op or *tmp38 *tmp35 70368744177664
   254 write *tmp38 BITMAP 1
-    * label *label333
-    * label *label334
-    * label *label335
   255 # "Function: def setBit(in bitIndex)"
   256 read *tmp35 BITMAP 2
   257 op or *tmp38 *tmp35 32
   258 write *tmp38 BITMAP 2
-    * label *label336
-    * label *label337
-    * label *label338
   259 # "Function: def setBit(in bitIndex)"
   260 read *tmp35 BITMAP 2
   261 op or *tmp38 *tmp35 4096
   262 write *tmp38 BITMAP 2
-    * label *label339
-    * label *label340
-    * label *label341
   263 # "Function: def setBit(in bitIndex)"
   264 read *tmp35 BITMAP 2
   265 op or *tmp38 *tmp35 524288
   266 write *tmp38 BITMAP 2
-    * label *label342
-    * label *label343
-    * label *label344
   267 # "Function: def setBit(in bitIndex)"
   268 read *tmp35 BITMAP 2
   269 op or *tmp38 *tmp35 67108864
   270 write *tmp38 BITMAP 2
-    * label *label345
-    * label *label346
-    * label *label347
   271 # "Function: def setBit(in bitIndex)"
   272 read *tmp35 BITMAP 2
   273 op or *tmp38 *tmp35 8589934592
   274 write *tmp38 BITMAP 2
-    * label *label348
-    * label *label349
-    * label *label350
   275 # "Function: def setBit(in bitIndex)"
   276 read *tmp35 BITMAP 2
   277 op or *tmp38 *tmp35 1099511627776
   278 write *tmp38 BITMAP 2
-    * label *label351
-    * label *label352
-    * label *label353
   279 # "Function: def setBit(in bitIndex)"
   280 read *tmp35 BITMAP 2
   281 op or *tmp38 *tmp35 140737488355328
   282 write *tmp38 BITMAP 2
-    * label *label354
-    * label *label355
-    * label *label356
   283 # "Function: def setBit(in bitIndex)"
   284 read *tmp35 BITMAP 3
   285 op or *tmp38 *tmp35 64
   286 write *tmp38 BITMAP 3
-    * label *label357
-    * label *label358
-    * label *label359
   287 # "Function: def setBit(in bitIndex)"
   288 read *tmp35 BITMAP 3
   289 op or *tmp38 *tmp35 8192
   290 write *tmp38 BITMAP 3
-    * label *label360
-    * label *label361
-    * label *label362
   291 # "Function: def setBit(in bitIndex)"
   292 read *tmp35 BITMAP 3
   293 op or *tmp38 *tmp35 1048576
   294 write *tmp38 BITMAP 3
-    * label *label363
-    * label *label364
-    * label *label365
   295 # "Function: def setBit(in bitIndex)"
   296 read *tmp35 BITMAP 3
   297 op or *tmp38 *tmp35 134217728
   298 write *tmp38 BITMAP 3
-    * label *label366
-    * label *label367
-    * label *label368
   299 # "Function: def setBit(in bitIndex)"
   300 read *tmp35 BITMAP 3
   301 op or *tmp38 *tmp35 17179869184
   302 write *tmp38 BITMAP 3
-    * label *label369
-    * label *label370
-    * label *label371
   303 # "Function: def setBit(in bitIndex)"
   304 read *tmp35 BITMAP 3
   305 op or *tmp38 *tmp35 2199023255552
   306 write *tmp38 BITMAP 3
-    * label *label372
-    * label *label373
-    * label *label374
   307 # "Function: def setBit(in bitIndex)"
   308 read *tmp35 BITMAP 4
   309 op or *tmp38 *tmp35 1
   310 write *tmp38 BITMAP 4
-    * label *label375
-    * label *label376
-    * label *label377
   311 # "Function: def setBit(in bitIndex)"
   312 read *tmp35 BITMAP 4
   313 op or *tmp38 *tmp35 128
   314 write *tmp38 BITMAP 4
-    * label *label378
-    * label *label379
-    * label *label380
   315 # "Function: def setBit(in bitIndex)"
   316 read *tmp35 BITMAP 4
   317 op or *tmp38 *tmp35 16384
   318 write *tmp38 BITMAP 4
-    * label *label381
-    * label *label382
-    * label *label383
   319 # "Function: def setBit(in bitIndex)"
   320 read *tmp35 BITMAP 4
   321 op or *tmp38 *tmp35 2097152
   322 write *tmp38 BITMAP 4
-    * label *label384
-    * label *label385
-    * label *label386
   323 # "Function: def setBit(in bitIndex)"
   324 read *tmp35 BITMAP 4
   325 op or *tmp38 *tmp35 268435456
   326 write *tmp38 BITMAP 4
-    * label *label387
-    * label *label388
-    * label *label389
   327 # "Function: def setBit(in bitIndex)"
   328 read *tmp35 BITMAP 4
   329 op or *tmp38 *tmp35 34359738368
   330 write *tmp38 BITMAP 4
-    * label *label390
-    * label *label391
-    * label *label392
   331 # "Function: def setBit(in bitIndex)"
   332 read *tmp35 BITMAP 4
   333 op or *tmp38 *tmp35 4398046511104
   334 write *tmp38 BITMAP 4
-    * label *label393
-    * label *label394
-    * label *label395
   335 # "Function: def setBit(in bitIndex)"
   336 read *tmp35 BITMAP 5
   337 op or *tmp38 *tmp35 2
   338 write *tmp38 BITMAP 5
-    * label *label396
-    * label *label397
-    * label *label398
   339 # "Function: def setBit(in bitIndex)"
   340 read *tmp35 BITMAP 5
   341 op or *tmp38 *tmp35 256
   342 write *tmp38 BITMAP 5
-    * label *label399
-    * label *label400
-    * label *label80
   343 label *label81
-    * label *label82
-    * label *label83
   344 jump *label84 equal :testAndSetMultiples.0:result false
   345 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
   346 label *label84
-    * label *label85
-    * label *label86
-    * label *label87
-    * label *label88
   347 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label89
   348 # "Function: def getBit(in bitIndex)"
   349 read *tmp21 BITMAP 0
   350 op and :getBit.0*retval *tmp21 32
-    * label *label90
   351 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   352 jump *label96 equal :testAndSetMultiples.0:result false
-    * label *label246
-    * label *label247
   353 # "Function: def setBit(in bitIndex)"
   354 read *tmp35 BITMAP 1
   355 op or *tmp38 *tmp35 4096
   356 write *tmp38 BITMAP 1
-    * label *label248
-    * label *label249
-    * label *label250
   357 # "Function: def setBit(in bitIndex)"
   358 read *tmp35 BITMAP 1
   359 op or *tmp38 *tmp35 8388608
   360 write *tmp38 BITMAP 1
-    * label *label251
-    * label *label252
-    * label *label253
   361 # "Function: def setBit(in bitIndex)"
   362 read *tmp35 BITMAP 1
   363 op or *tmp38 *tmp35 17179869184
   364 write *tmp38 BITMAP 1
-    * label *label254
-    * label *label255
-    * label *label256
   365 # "Function: def setBit(in bitIndex)"
   366 read *tmp35 BITMAP 1
   367 op or *tmp38 *tmp35 35184372088832
   368 write *tmp38 BITMAP 1
-    * label *label257
-    * label *label258
-    * label *label259
   369 # "Function: def setBit(in bitIndex)"
   370 read *tmp35 BITMAP 2
   371 op or *tmp38 *tmp35 256
   372 write *tmp38 BITMAP 2
-    * label *label260
-    * label *label261
-    * label *label262
   373 # "Function: def setBit(in bitIndex)"
   374 read *tmp35 BITMAP 2
   375 op or *tmp38 *tmp35 524288
   376 write *tmp38 BITMAP 2
-    * label *label263
-    * label *label264
-    * label *label265
   377 # "Function: def setBit(in bitIndex)"
   378 read *tmp35 BITMAP 2
   379 op or *tmp38 *tmp35 1073741824
   380 write *tmp38 BITMAP 2
-    * label *label266
-    * label *label267
-    * label *label268
   381 # "Function: def setBit(in bitIndex)"
   382 read *tmp35 BITMAP 2
   383 op or *tmp38 *tmp35 2199023255552
   384 write *tmp38 BITMAP 2
-    * label *label269
-    * label *label270
-    * label *label271
   385 # "Function: def setBit(in bitIndex)"
   386 read *tmp35 BITMAP 3
   387 op or *tmp38 *tmp35 16
   388 write *tmp38 BITMAP 3
-    * label *label272
-    * label *label273
-    * label *label274
   389 # "Function: def setBit(in bitIndex)"
   390 read *tmp35 BITMAP 3
   391 op or *tmp38 *tmp35 32768
   392 write *tmp38 BITMAP 3
-    * label *label275
-    * label *label276
-    * label *label277
   393 # "Function: def setBit(in bitIndex)"
   394 read *tmp35 BITMAP 3
   395 op or *tmp38 *tmp35 67108864
   396 write *tmp38 BITMAP 3
-    * label *label278
-    * label *label279
-    * label *label280
   397 # "Function: def setBit(in bitIndex)"
   398 read *tmp35 BITMAP 3
   399 op or *tmp38 *tmp35 137438953472
   400 write *tmp38 BITMAP 3
-    * label *label281
-    * label *label282
-    * label *label283
   401 # "Function: def setBit(in bitIndex)"
   402 read *tmp35 BITMAP 4
   403 op or *tmp38 *tmp35 1
   404 write *tmp38 BITMAP 4
-    * label *label284
-    * label *label285
-    * label *label286
   405 # "Function: def setBit(in bitIndex)"
   406 read *tmp35 BITMAP 4
   407 op or *tmp38 *tmp35 2048
   408 write *tmp38 BITMAP 4
-    * label *label287
-    * label *label288
-    * label *label289
   409 # "Function: def setBit(in bitIndex)"
   410 read *tmp35 BITMAP 4
   411 op or *tmp38 *tmp35 4194304
   412 write *tmp38 BITMAP 4
-    * label *label290
-    * label *label291
-    * label *label292
   413 # "Function: def setBit(in bitIndex)"
   414 read *tmp35 BITMAP 4
   415 op or *tmp38 *tmp35 8589934592
   416 write *tmp38 BITMAP 4
-    * label *label293
-    * label *label294
-    * label *label295
   417 # "Function: def setBit(in bitIndex)"
   418 read *tmp35 BITMAP 4
   419 op or *tmp38 *tmp35 17592186044416
   420 write *tmp38 BITMAP 4
-    * label *label296
-    * label *label297
-    * label *label298
   421 # "Function: def setBit(in bitIndex)"
   422 read *tmp35 BITMAP 5
   423 op or *tmp38 *tmp35 128
   424 write *tmp38 BITMAP 5
-    * label *label299
-    * label *label300
-    * label *label95
   425 label *label96
-    * label *label97
-    * label *label98
   426 jump *label99 equal :testAndSetMultiples.0:result false
   427 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   428 label *label99
-    * label *label100
-    * label *label101
   429 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label102
   430 # "Function: def getBit(in bitIndex)"
   431 read *tmp21 BITMAP 0
   432 op and :getBit.0*retval *tmp21 64
-    * label *label103
   433 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   434 jump *label109 equal :testAndSetMultiples.0:result false
-    * label *label206
-    * label *label207
   435 # "Function: def setBit(in bitIndex)"
   436 read *tmp35 BITMAP 1
   437 op or *tmp38 *tmp35 68719476736
   438 write *tmp38 BITMAP 1
-    * label *label208
-    * label *label209
-    * label *label210
   439 # "Function: def setBit(in bitIndex)"
   440 read *tmp35 BITMAP 2
   441 op or *tmp38 *tmp35 2
   442 write *tmp38 BITMAP 2
-    * label *label211
-    * label *label212
-    * label *label213
   443 # "Function: def setBit(in bitIndex)"
   444 read *tmp35 BITMAP 2
   445 op or *tmp38 *tmp35 16384
   446 write *tmp38 BITMAP 2
-    * label *label214
-    * label *label215
-    * label *label216
   447 # "Function: def setBit(in bitIndex)"
   448 read *tmp35 BITMAP 2
   449 op or *tmp38 *tmp35 134217728
   450 write *tmp38 BITMAP 2
-    * label *label217
-    * label *label218
-    * label *label219
   451 # "Function: def setBit(in bitIndex)"
   452 read *tmp35 BITMAP 2
   453 op or *tmp38 *tmp35 1099511627776
   454 write *tmp38 BITMAP 2
-    * label *label220
-    * label *label221
-    * label *label222
   455 # "Function: def setBit(in bitIndex)"
   456 read *tmp35 BITMAP 3
   457 op or *tmp38 *tmp35 32
   458 write *tmp38 BITMAP 3
-    * label *label223
-    * label *label224
-    * label *label225
   459 # "Function: def setBit(in bitIndex)"
   460 read *tmp35 BITMAP 3
   461 op or *tmp38 *tmp35 262144
   462 write *tmp38 BITMAP 3
-    * label *label226
-    * label *label227
-    * label *label228
   463 # "Function: def setBit(in bitIndex)"
   464 read *tmp35 BITMAP 3
   465 op or *tmp38 *tmp35 2147483648
   466 write *tmp38 BITMAP 3
-    * label *label229
-    * label *label230
-    * label *label231
   467 # "Function: def setBit(in bitIndex)"
   468 read *tmp35 BITMAP 3
   469 op or *tmp38 *tmp35 17592186044416
   470 write *tmp38 BITMAP 3
-    * label *label232
-    * label *label233
-    * label *label234
   471 # "Function: def setBit(in bitIndex)"
   472 read *tmp35 BITMAP 4
   473 op or *tmp38 *tmp35 512
   474 write *tmp38 BITMAP 4
-    * label *label235
-    * label *label236
-    * label *label237
   475 # "Function: def setBit(in bitIndex)"
   476 read *tmp35 BITMAP 4
   477 op or *tmp38 *tmp35 4194304
   478 write *tmp38 BITMAP 4
-    * label *label238
-    * label *label239
-    * label *label240
   479 # "Function: def setBit(in bitIndex)"
   480 read *tmp35 BITMAP 4
   481 op or *tmp38 *tmp35 34359738368
   482 write *tmp38 BITMAP 4
-    * label *label241
-    * label *label242
-    * label *label243
   483 # "Function: def setBit(in bitIndex)"
   484 read *tmp35 BITMAP 5
   485 op or *tmp38 *tmp35 1
   486 write *tmp38 BITMAP 5
-    * label *label244
-    * label *label245
-    * label *label108
   487 label *label109
-    * label *label110
-    * label *label111
   488 jump *label112 equal :testAndSetMultiples.0:result false
   489 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   490 label *label112
-    * label *label113
-    * label *label114
-    * label *label115
-    * label *label116
   491 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label117
   492 # "Function: def getBit(in bitIndex)"
   493 read *tmp21 BITMAP 0
   494 op and :getBit.0*retval *tmp21 256
-    * label *label118
   495 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   496 jump *label124 equal :testAndSetMultiples.0:result false
-    * label *label184
-    * label *label185
   497 # "Function: def setBit(in bitIndex)"
   498 read *tmp35 BITMAP 3
   499 op or *tmp38 *tmp35 1
   500 write *tmp38 BITMAP 3
-    * label *label186
-    * label *label187
-    * label *label188
   501 # "Function: def setBit(in bitIndex)"
   502 read *tmp35 BITMAP 3
   503 op or *tmp38 *tmp35 131072
   504 write *tmp38 BITMAP 3
-    * label *label189
-    * label *label190
-    * label *label191
   505 # "Function: def setBit(in bitIndex)"
   506 read *tmp35 BITMAP 3
   507 op or *tmp38 *tmp35 17179869184
   508 write *tmp38 BITMAP 3
-    * label *label192
-    * label *label193
-    * label *label194
   509 # "Function: def setBit(in bitIndex)"
   510 read *tmp35 BITMAP 4
   511 op or *tmp38 *tmp35 8
   512 write *tmp38 BITMAP 4
-    * label *label195
-    * label *label196
-    * label *label197
   513 # "Function: def setBit(in bitIndex)"
   514 read *tmp35 BITMAP 4
   515 op or *tmp38 *tmp35 1048576
   516 write *tmp38 BITMAP 4
-    * label *label198
-    * label *label199
-    * label *label200
   517 # "Function: def setBit(in bitIndex)"
   518 read *tmp35 BITMAP 4
   519 op or *tmp38 *tmp35 137438953472
   520 write *tmp38 BITMAP 4
-    * label *label201
-    * label *label202
-    * label *label203
   521 # "Function: def setBit(in bitIndex)"
   522 read *tmp35 BITMAP 5
   523 op or *tmp38 *tmp35 64
   524 write *tmp38 BITMAP 5
-    * label *label204
-    * label *label205
-    * label *label123
   525 label *label124
-    * label *label125
-    * label *label126
   526 jump *label127 equal :testAndSetMultiples.0:result false
   527 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   528 label *label127
-    * label *label128
-    * label *label129
   529 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label130
   530 # "Function: def getBit(in bitIndex)"
   531 read *tmp21 BITMAP 0
   532 op and :getBit.0*retval *tmp21 512
-    * label *label131
   533 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   534 jump *label137 equal :testAndSetMultiples.0:result false
-    * label *label171
-    * label *label172
   535 # "Function: def setBit(in bitIndex)"
   536 read *tmp35 BITMAP 3
   537 op or *tmp38 *tmp35 68719476736
   538 write *tmp38 BITMAP 3
-    * label *label173
-    * label *label174
-    * label *label175
   539 # "Function: def setBit(in bitIndex)"
   540 read *tmp35 BITMAP 4
   541 op or *tmp38 *tmp35 128
   542 write *tmp38 BITMAP 4
-    * label *label176
-    * label *label177
-    * label *label178
   543 # "Function: def setBit(in bitIndex)"
   544 read *tmp35 BITMAP 4
   545 op or *tmp38 *tmp35 67108864
   546 write *tmp38 BITMAP 4
-    * label *label179
-    * label *label180
-    * label *label181
   547 # "Function: def setBit(in bitIndex)"
   548 read *tmp35 BITMAP 4
   549 op or *tmp38 *tmp35 35184372088832
   550 write *tmp38 BITMAP 4
-    * label *label182
-    * label *label183
-    * label *label136
   551 label *label137
-    * label *label138
-    * label *label139
   552 jump *label140 equal :testAndSetMultiples.0:result false
   553 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   554 label *label140
-    * label *label141
-    * label *label142
-    * label *label143
-    * label *label144
   555 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label145
   556 # "Function: def getBit(in bitIndex)"
   557 read *tmp21 BITMAP 0
   558 op and :getBit.0*retval *tmp21 2048
-    * label *label146
   559 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   560 jump *label152 equal :testAndSetMultiples.0:result false
-    * label *label147
   561 jump *label151 always
   562 label *label148
   563 # "Function: def setBit(in bitIndex)"
   564 write *tmp38 BITMAP *tmp34
-    * label *label149
-    * label *label150
   565 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   566 label *label151
   567 label *label152
-    * label *label153
-    * label *label154
   568 jump *label155 equal :testAndSetMultiples.0:result false
   569 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   570 label *label155
-    * label *label156
-    * label *label157
   571 # "Function: def testAndSetMultiples(in n, in maximum)"
-    * label *label158
   572 # "Function: def getBit(in bitIndex)"
   573 read *tmp21 BITMAP 0
   574 op and :getBit.0*retval *tmp21 4096
-    * label *label159
   575 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   576 jump *label165 equal :testAndSetMultiples.0:result false
-    * label *label160
   577 jump *label164 always
   578 label *label161
   579 # "Function: def setBit(in bitIndex)"
   580 write *tmp38 BITMAP *tmp34
-    * label *label162
-    * label *label163
   581 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   582 label *label164
   583 label *label165
-    * label *label166
-    * label *label167
   584 jump *label168 equal :testAndSetMultiples.0:result false
   585 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   586 label *label168
-    * label *label169
   587 op add :sumPrimesUpTo.0:i 25 4
-    * label *label170
-    * label *label5
-    * label *label10
   588 label *label28
   589 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label30
   590 # "Function: def getBit(in bitIndex)"
   591 op idiv *tmp20 :getBit.0:bitIndex 48
   592 op mod *tmp22 :getBit.0:bitIndex 48
   593 op shl *tmp23 1 *tmp22
   594 read *tmp21 BITMAP *tmp20
   595 op and :getBit.0*retval *tmp21 *tmp23
-    * label *label31
   596 jump *label13 notEqual :getBit.0*retval false
   597 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
   598 label *label13
-    * label *label14
   599 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
   600 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label32
   601 # "Function: def getBit(in bitIndex)"
   602 op idiv *tmp20 :getBit.0:bitIndex 48
   603 op mod *tmp22 :getBit.0:bitIndex 48
   604 op shl *tmp23 1 *tmp22
   605 read *tmp21 BITMAP *tmp20
   606 op and :getBit.0*retval *tmp21 *tmp23
-    * label *label33
   607 jump *label15 notEqual :getBit.0*retval false
   608 jump *label17 greaterThan :sumPrimesUpTo.0:i 500
   609 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
   610 label *label17
-    * label *label18
   611 label *label15
-    * label *label16
   612 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
-    * label *label11
   613 jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
-    * label *label12
-    * label *label2
   614 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   615 stop
   616 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
     5 read *tmp21 BITMAP 0
     6 op and :getBit.0*retval *tmp21 4
     7 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label68 equal :testAndSetMultiples.0:result false
+    8 jump *label71 equal :testAndSetMultiples.0:result false
     9 # "Function: def setBit(in bitIndex)"
    10 read *tmp35 BITMAP 0
    11 op or *tmp38 *tmp35 4096
 
   207 read *tmp21 BITMAP 0
   208 op and :getBit.0*retval *tmp21 8
   209 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label81 equal :testAndSetMultiples.0:result false
+  210 jump *label84 equal :testAndSetMultiples.0:result false
   211 # "Function: def setBit(in bitIndex)"
   212 read *tmp35 BITMAP 0
   213 op or *tmp38 *tmp35 16777216
 
   349 read *tmp21 BITMAP 0
   350 op and :getBit.0*retval *tmp21 32
   351 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label96 equal :testAndSetMultiples.0:result false
+  352 jump *label99 equal :testAndSetMultiples.0:result false
   353 # "Function: def setBit(in bitIndex)"
   354 read *tmp35 BITMAP 1
   355 op or *tmp38 *tmp35 4096
 
   431 read *tmp21 BITMAP 0
   432 op and :getBit.0*retval *tmp21 64
   433 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label109 equal :testAndSetMultiples.0:result false
+  434 jump *label112 equal :testAndSetMultiples.0:result false
   435 # "Function: def setBit(in bitIndex)"
   436 read *tmp35 BITMAP 1
   437 op or *tmp38 *tmp35 68719476736
 
   493 read *tmp21 BITMAP 0
   494 op and :getBit.0*retval *tmp21 256
   495 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label124 equal :testAndSetMultiples.0:result false
+  496 jump *label127 equal :testAndSetMultiples.0:result false
   497 # "Function: def setBit(in bitIndex)"
   498 read *tmp35 BITMAP 3
   499 op or *tmp38 *tmp35 1
 
   531 read *tmp21 BITMAP 0
   532 op and :getBit.0*retval *tmp21 512
   533 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label137 equal :testAndSetMultiples.0:result false
+  534 jump *label140 equal :testAndSetMultiples.0:result false
   535 # "Function: def setBit(in bitIndex)"
   536 read *tmp35 BITMAP 3
   537 op or *tmp38 *tmp35 68719476736
 
   557 read *tmp21 BITMAP 0
   558 op and :getBit.0*retval *tmp21 2048
   559 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label152 equal :testAndSetMultiples.0:result false
+  560 jump *label155 equal :testAndSetMultiples.0:result false
   561 jump *label151 always
   562 label *label148
   563 # "Function: def setBit(in bitIndex)"
 
   573 read *tmp21 BITMAP 0
   574 op and :getBit.0*retval *tmp21 4096
   575 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label165 equal :testAndSetMultiples.0:result false
+  576 jump *label168 equal :testAndSetMultiples.0:result false
   577 jump *label164 always
   578 label *label161
   579 # "Function: def setBit(in bitIndex)"

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-4 instructions):
 
   198 read *tmp35 BITMAP 5
   199 op or *tmp38 *tmp35 128
   200 write *tmp38 BITMAP 5
-    * label *label68
   201 jump *label71 equal :testAndSetMultiples.0:result false
   202 op add :sumPrimesUpTo.0:sum 5 5
   203 label *label71
 
   339 read *tmp35 BITMAP 5
   340 op or *tmp38 *tmp35 256
   341 write *tmp38 BITMAP 5
-    * label *label81
   342 jump *label84 equal :testAndSetMultiples.0:result false
   343 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
   344 label *label84
 
   420 read *tmp35 BITMAP 5
   421 op or *tmp38 *tmp35 128
   422 write *tmp38 BITMAP 5
-    * label *label96
   423 jump *label99 equal :testAndSetMultiples.0:result false
   424 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   425 label *label99
 
   481 read *tmp35 BITMAP 5
   482 op or *tmp38 *tmp35 1
   483 write *tmp38 BITMAP 5
-    * label *label109
   484 jump *label112 equal :testAndSetMultiples.0:result false
   485 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   486 label *label112
 
   518 read *tmp35 BITMAP 5
   519 op or *tmp38 *tmp35 64
   520 write *tmp38 BITMAP 5
-    * label *label124
   521 jump *label127 equal :testAndSetMultiples.0:result false
   522 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   523 label *label127
 
   543 read *tmp35 BITMAP 4
   544 op or *tmp38 *tmp35 35184372088832
   545 write *tmp38 BITMAP 4
-    * label *label137
   546 jump *label140 equal :testAndSetMultiples.0:result false
   547 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   548 label *label140
 
   553 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   554 jump *label155 equal :testAndSetMultiples.0:result false
   555 jump *label151 always
-    * label *label148
-    * # "Function: def setBit(in bitIndex)"
-    * write *tmp38 BITMAP *tmp34
-    * jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   556 label *label151
-    * label *label152
   557 jump *label155 equal :testAndSetMultiples.0:result false
   558 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   559 label *label155
 
   564 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   565 jump *label168 equal :testAndSetMultiples.0:result false
   566 jump *label164 always
-    * label *label161
-    * # "Function: def setBit(in bitIndex)"
-    * write *tmp38 BITMAP *tmp34
-    * jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   567 label *label164
-    * label *label165
   568 jump *label168 equal :testAndSetMultiples.0:result false
   569 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   570 label *label168

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-9 instructions):
 
   198 read *tmp35 BITMAP 5
   199 op or *tmp38 *tmp35 128
   200 write *tmp38 BITMAP 5
-    * jump *label71 equal :testAndSetMultiples.0:result false
   201 op add :sumPrimesUpTo.0:sum 5 5
   202 label *label71
   203 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   338 read *tmp35 BITMAP 5
   339 op or *tmp38 *tmp35 256
   340 write *tmp38 BITMAP 5
-    * jump *label84 equal :testAndSetMultiples.0:result false
   341 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
   342 label *label84
   343 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   418 read *tmp35 BITMAP 5
   419 op or *tmp38 *tmp35 128
   420 write *tmp38 BITMAP 5
-    * jump *label99 equal :testAndSetMultiples.0:result false
   421 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   422 label *label99
   423 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   478 read *tmp35 BITMAP 5
   479 op or *tmp38 *tmp35 1
   480 write *tmp38 BITMAP 5
-    * jump *label112 equal :testAndSetMultiples.0:result false
   481 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   482 label *label112
   483 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   514 read *tmp35 BITMAP 5
   515 op or *tmp38 *tmp35 64
   516 write *tmp38 BITMAP 5
-    * jump *label127 equal :testAndSetMultiples.0:result false
   517 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   518 label *label127
   519 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   538 read *tmp35 BITMAP 4
   539 op or *tmp38 *tmp35 35184372088832
   540 write *tmp38 BITMAP 4
-    * jump *label140 equal :testAndSetMultiples.0:result false
   541 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   542 label *label140
   543 # "Function: def testAndSetMultiples(in n, in maximum)"
 
   546 op and :getBit.0*retval *tmp21 2048
   547 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   548 jump *label155 equal :testAndSetMultiples.0:result false
-    * jump *label151 always
   549 label *label151
   550 jump *label155 equal :testAndSetMultiples.0:result false
   551 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
 
   556 op and :getBit.0*retval *tmp21 4096
   557 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   558 jump *label168 equal :testAndSetMultiples.0:result false
-    * jump *label164 always
   559 label *label164
   560 jump *label168 equal :testAndSetMultiples.0:result false
   561 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
 
   589 jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
   590 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   591 stop
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 2 (-2 instructions):
 
   545 read *tmp21 BITMAP 0
   546 op and :getBit.0*retval *tmp21 2048
   547 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label155 equal :testAndSetMultiples.0:result false
   548 label *label151
   549 jump *label155 equal :testAndSetMultiples.0:result false
   550 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
 
   554 read *tmp21 BITMAP 0
   555 op and :getBit.0*retval *tmp21 4096
   556 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label168 equal :testAndSetMultiples.0:result false
   557 label *label164
   558 jump *label168 equal :testAndSetMultiples.0:result false
   559 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
   545 read *tmp21 BITMAP 0
   546 op and :getBit.0*retval *tmp21 2048
   547 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * label *label151
   548 jump *label155 equal :testAndSetMultiples.0:result false
   549 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   550 label *label155
 
   553 read *tmp21 BITMAP 0
   554 op and :getBit.0*retval *tmp21 4096
   555 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * label *label164
   556 jump *label168 equal :testAndSetMultiples.0:result false
   557 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   558 label *label168

Final code before resolving virtual instructions:

set BITMAP bank1
# "Function: def sumPrimesUpTo(in maximum)"
set :sumPrimesUpTo.0:sum 5
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label71 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 536870912
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 65536
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8796093022208
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1024
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 4
write *tmp38 BITMAP 5
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum 5 5
label *label71
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 8
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label84 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 0
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 5
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
label *label84
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 32
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label99 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
label *label99
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 64
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label112 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 1
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
label *label112
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 256
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label127 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
label *label127
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 512
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label140 equal :testAndSetMultiples.0:result false
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 3
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 4
# "Function: def setBit(in bitIndex)"
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
label *label140
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 2048
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label155 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
label *label155
# "Function: def testAndSetMultiples(in n, in maximum)"
# "Function: def getBit(in bitIndex)"
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4096
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label168 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
label *label168
op add :sumPrimesUpTo.0:i 25 4
label *label28
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
# "Function: def getBit(in bitIndex)"
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label13 notEqual :getBit.0*retval false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label13
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
# "Function: def getBit(in bitIndex)"
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label15 notEqual :getBit.0*retval false
jump *label17 greaterThan :sumPrimesUpTo.0:i 500
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label17
label *label15
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
stop
