   108 instructions before optimizations.
    14 instructions eliminated by Temp Variables Elimination.
    13 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     6 instructions eliminated by Jump Optimization (4 iterations).
    17 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   573 instructions eliminated by Data Flow Optimization (10 passes, 31 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   938 instructions added by Loop Unrolling (12 iterations).
     7 loops unrolled by Loop Unrolling.
    17 instructions added by Function Inlining (12 iterations).
     5 function calls inlined by Function Inlining.
     8 instructions updated by JumpThreading.
     4 instructions eliminated by Unreachable Code Elimination.
   434 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 937):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'getBit' defined at line 10:1                cost     7, benefit      350.0, efficiency       50.0 (+2 instructions)
    Inline function 'testAndSetMultiples' defined at line 14:1   cost    16, benefit      200.0, efficiency       12.5
    Inline function call at line 30:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 34:12                           cost    17, benefit      100.0, efficiency        5.9
    Inline function call at line 41:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 45:13                           cost     4, benefit       87.5, efficiency       21.9
    Inline function call at line 15:18                           cost     4, benefit      175.0, efficiency       43.8

Pass 1: speed optimization selection (cost limit 935):
    Unroll loop at line 29:5                                     cost    33, benefit      300.0, efficiency        9.1
  * Inline function 'testAndSetMultiples' defined at line 14:1   cost    19, benefit      200.0, efficiency       10.5 (+7 instructions)
    Inline function call at line 30:12                           cost    20, benefit      100.0, efficiency        5.0
    Inline function call at line 34:12                           cost    20, benefit      100.0, efficiency        5.0

Pass 1: speed optimization selection (cost limit 928):
  * Unroll loop at line 29:5                                     cost   123, benefit      300.0, efficiency        2.4 (+83 instructions)

Pass 1: speed optimization selection (cost limit 845):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
    Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5
  * Unroll loop at line 17:9                                     cost    14, benefit      100.0, efficiency        7.1 (+2 instructions)
  ! Unroll loop at line 40:5                                     cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 843):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
    Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8
  * Unroll loop at line 17:9                                     cost    32, benefit      175.0, efficiency        5.5 (+11 instructions)
  ! Unroll loop at line 40:5                                     cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 832):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
    Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6
  * Unroll loop at line 17:9                                     cost    68, benefit      325.0, efficiency        4.8 (+29 instructions)

Pass 1: speed optimization selection (cost limit 803):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
    Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4
  * Unroll loop at line 17:9                                     cost    98, benefit      450.0, efficiency        4.6 (+44 instructions)

Pass 1: speed optimization selection (cost limit 759):
    Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3
  * Unroll loop at line 17:9                                     cost   188, benefit      825.0, efficiency        4.4 (+89 instructions)

Pass 1: speed optimization selection (cost limit 670):
  * Unroll loop at line 17:9                                     cost   278, benefit     1200.0, efficiency        4.3 (+134 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-11 instructions):
 
    13 set *tmp4 :testAndSetMultiples.0*retval
    14 jump *label6 equal *tmp4 false
    15 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp5 :sumPrimesUpTo.0:sum
    16 jump *label7 always
    17 label *label6
-    * set *tmp5 null
    18 label *label7
    19 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    20 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    23 set *tmp6 :testAndSetMultiples.0*retval
    24 jump *label8 equal *tmp6 false
    25 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp7 :sumPrimesUpTo.0:sum
    26 jump *label9 always
    27 label *label8
-    * set *tmp7 null
    28 label *label9
    29 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    30 label *label4
 
    40 op equal *tmp11 *tmp10 false
    41 jump *label13 equal *tmp11 false
    42 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp12 :sumPrimesUpTo.0:sum
    43 jump *label14 always
    44 label *label13
-    * set *tmp12 null
    45 label *label14
    46 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    47 op idiv *tmp13 :sumPrimesUpTo.0:i 2
 
    58 label *label17
    59 set *tmp18 null
    60 label *label18
-    * set *tmp16 *tmp18
    61 jump *label16 always
    62 label *label15
-    * set *tmp16 null
    63 label *label16
    64 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    65 label *label11
 
   104 read *tmp35 BITMAP *tmp34
   105 op or *tmp38 *tmp35 *tmp37
   106 write *tmp38 BITMAP *tmp34
-    * set *tmp32 *tmp38
   107 label *label26
   108 label *label24
   109 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
   110 jump *label23 always
   111 label *label25
-    * set *tmp27 null
   112 jump *label22 always
   113 label *label21
-    * set *tmp27 null
   114 label *label22
   115 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
   116 label *label20

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    53 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    54 jump *label17 equal *tmp17 false
    55 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * set *tmp18 :sumPrimesUpTo.0:sum
    56 jump *label18 always
    57 label *label17
-    * set *tmp18 null
    58 label *label18
    59 jump *label16 always
    60 label *label15

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-14 instructions):
 
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
     4 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil *tmp2 *tmp1
-    * set :sumPrimesUpTo.0:sqrtMax *tmp2
+    5 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     6 label *label3
     7 op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     8 jump *label5 equal *tmp3 false
     9 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    10 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    11 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
-    * set *tmp4 :testAndSetMultiples.0*retval
-    * jump *label6 equal *tmp4 false
+   12 jump *label6 equal :testAndSetMultiples.0*retval false
    13 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    14 jump *label7 always
    15 label *label6
 
    18 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    19 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    20 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
-    * set *tmp6 :testAndSetMultiples.0*retval
-    * jump *label8 equal *tmp6 false
+   21 jump *label8 equal :testAndSetMultiples.0*retval false
    22 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    23 jump *label9 always
    24 label *label8
 
    30 label *label10
    31 op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    32 jump *label12 equal *tmp8 false
-    * op idiv *tmp9 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp9
+   33 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    34 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * set *tmp10 :getBit.0*retval
-    * op equal *tmp11 *tmp10 false
+   35 op equal *tmp11 :getBit.0*retval false
    36 jump *label13 equal *tmp11 false
    37 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    38 jump *label14 always
    39 label *label13
    40 label *label14
    41 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * op idiv *tmp13 :sumPrimesUpTo.0:i 2
-    * set :getBit.0:bitIndex *tmp13
+   42 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    43 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * set *tmp14 :getBit.0*retval
-    * op equal *tmp15 *tmp14 false
+   44 op equal *tmp15 :getBit.0*retval false
    45 jump *label15 equal *tmp15 false
    46 op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    47 jump *label17 equal *tmp17 false
 
    62 stop
    63 end
    64 label *label0
-    * op idiv *tmp19 :getBit.0:bitIndex 48
-    * set *tmp20 *tmp19
+   65 op idiv *tmp20 :getBit.0:bitIndex 48
    66 op mod *tmp22 :getBit.0:bitIndex 48
    67 op shl *tmp23 1 *tmp22
    68 read *tmp21 BITMAP *tmp20
-    * op and *tmp24 *tmp21 *tmp23
-    * set :getBit.0*retval *tmp24
+   69 op and :getBit.0*retval *tmp21 *tmp23
    70 label *label19
    71 return :getBit.0*retaddr
    72 end
    73 label *label1
-    * op idiv *tmp25 :testAndSetMultiples.0:n 2
-    * set :getBit.0:bitIndex *tmp25
+   74 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
    75 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp26 :getBit.0*retval false
-    * set :testAndSetMultiples.0:result *tmp26
+   76 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    77 jump *label21 equal :testAndSetMultiples.0:result false
-    * op idiv *tmp28 :testAndSetMultiples.0:maximum 2
-    * set :testAndSetMultiples.0:max *tmp28
+   78 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
    79 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv *tmp30 *tmp29 2
-    * set :testAndSetMultiples.0:i *tmp30
+   80 op idiv :testAndSetMultiples.0:i *tmp29 2
    81 label *label23
    82 op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    83 jump *label25 equal *tmp31 false
    84 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp33 :setBit.0:bitIndex 48
-    * set *tmp34 *tmp33
+   85 op idiv *tmp34 :setBit.0:bitIndex 48
    86 op mod *tmp36 :setBit.0:bitIndex 48
    87 op shl *tmp37 1 *tmp36
    88 read *tmp35 BITMAP *tmp34

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
     4 op sqrt *tmp1 :sumPrimesUpTo.0:maximum
     5 op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
     6 label *label3
-    * op lessThanEq *tmp3 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
-    * jump *label5 equal *tmp3 false
+    7 jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
     8 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     9 set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
    10 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
 
    27 jump *label3 always
    28 label *label5
    29 label *label10
-    * op lessThanEq *tmp8 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label12 equal *tmp8 false
+   30 jump *label12 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    31 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    32 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp11 :getBit.0*retval false
-    * jump *label13 equal *tmp11 false
+   33 jump *label13 notEqual :getBit.0*retval false
    34 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    35 jump *label14 always
    36 label *label13
 
    38 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    39 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    40 call *label0 :getBit.0*retaddr :getBit.0*retval
-    * op equal *tmp15 :getBit.0*retval false
-    * jump *label15 equal *tmp15 false
-    * op lessThanEq *tmp17 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
-    * jump *label17 equal *tmp17 false
+   41 jump *label15 notEqual :getBit.0*retval false
+   42 jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    43 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    44 jump *label18 always
    45 label *label17
 
    74 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
    75 op idiv :testAndSetMultiples.0:i *tmp29 2
    76 label *label23
-    * op lessThanEq *tmp31 :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * jump *label25 equal *tmp31 false
+   77 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    78 set :setBit.0:bitIndex :testAndSetMultiples.0:i
    79 op idiv *tmp34 :setBit.0:bitIndex 48
    80 op mod *tmp36 :setBit.0:bitIndex 48

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    10 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    11 jump *label6 equal :testAndSetMultiples.0*retval false
    12 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label7 always
    13 label *label6
    14 label *label7
    15 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    18 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    19 jump *label8 equal :testAndSetMultiples.0*retval false
    20 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label9 always
    21 label *label8
    22 label *label9
    23 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    30 call *label0 :getBit.0*retaddr :getBit.0*retval
    31 jump *label13 notEqual :getBit.0*retval false
    32 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label14 always
    33 label *label13
    34 label *label14
    35 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
 
    38 jump *label15 notEqual :getBit.0*retval false
    39 jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * jump *label18 always
    41 label *label17
    42 label *label18
-    * jump *label16 always
    43 label *label15
    44 label *label16
    45 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
 
    82 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
    83 jump *label23 always
    84 label *label25
-    * jump *label22 always
    85 label *label21
    86 label *label22
    87 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set :sumPrimesUpTo.0:maximum 500
     2 set :sumPrimesUpTo.0:sum 5
     3 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 :sumPrimesUpTo.0:maximum
-    * op ceil :sumPrimesUpTo.0:sqrtMax *tmp1
+    4 op sqrt *tmp1 500
+    5 op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     6 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:sqrtMax
+    7 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     8 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+    9 set :testAndSetMultiples.0:maximum 500
    10 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    11 jump *label6 equal :testAndSetMultiples.0*retval false
    12 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    14 label *label7
    15 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    16 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum :sumPrimesUpTo.0:maximum
+   17 set :testAndSetMultiples.0:maximum 500
    18 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
    19 jump *label8 equal :testAndSetMultiples.0*retval false
    20 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    25 jump *label3 always
    26 label *label5
    27 label *label10
-    * jump *label12 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   28 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
    29 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    30 call *label0 :getBit.0*retaddr :getBit.0*retval
    31 jump *label13 notEqual :getBit.0*retval false
 
    36 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    37 call *label0 :getBit.0*retaddr :getBit.0*retval
    38 jump *label15 notEqual :getBit.0*retval false
-    * jump *label17 greaterThan :sumPrimesUpTo.0:i :sumPrimesUpTo.0:maximum
+   39 jump *label17 greaterThan :sumPrimesUpTo.0:i 500
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    41 label *label17
    42 label *label18
 
    48 label *label12
    49 set *tmp0 :sumPrimesUpTo.0:sum
    50 label *label2
-    * assertequals 21536 *tmp0 "sumPrimesUpTo(500)"
+   51 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    52 stop
    53 end
    54 label *label0
 
    71 label *label23
    72 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    73 set :setBit.0:bitIndex :testAndSetMultiples.0:i
-    * op idiv *tmp34 :setBit.0:bitIndex 48
-    * op mod *tmp36 :setBit.0:bitIndex 48
+   74 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   75 op mod *tmp36 :testAndSetMultiples.0:i 48
    76 op shl *tmp37 1 *tmp36
    77 read *tmp35 BITMAP *tmp34
    78 op or *tmp38 *tmp35 *tmp37

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
     0 set BITMAP bank1
-    * set :sumPrimesUpTo.0:maximum 500
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
-    * op sqrt *tmp1 500
-    * op ceil :sumPrimesUpTo.0:sqrtMax 22.360679774997898
     3 label *label3
     4 jump *label5 greaterThan :sumPrimesUpTo.0:i 23
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
 
    43 label *label11
    44 jump *label10 always
    45 label *label12
-    * set *tmp0 :sumPrimesUpTo.0:sum
    46 label *label2
    47 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    48 stop
 
    66 op idiv :testAndSetMultiples.0:i *tmp29 2
    67 label *label23
    68 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * set :setBit.0:bitIndex :testAndSetMultiples.0:i
    69 op idiv *tmp34 :testAndSetMultiples.0:i 48
    70 op mod *tmp36 :testAndSetMultiples.0:i 48
    71 op shl *tmp37 1 *tmp36

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
     3 label *label3
-    * jump *label5 greaterThan :sumPrimesUpTo.0:i 23
+    4 label *label27
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     6 set :testAndSetMultiples.0:maximum 500
     7 call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
 
    19 label *label9
    20 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    21 label *label4
-    * jump *label3 always
+   22 jump *label27 lessThanEq :sumPrimesUpTo.0:i 23
    23 label *label5
    24 label *label10
    25 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
+   26 label *label28
    27 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    28 call *label0 :getBit.0*retaddr :getBit.0*retval
    29 jump *label13 notEqual :getBit.0*retval false
 
    42 label *label16
    43 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
    44 label *label11
-    * jump *label10 always
+   45 jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
    46 label *label12
    47 label *label2
    48 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
 
    67 op idiv :testAndSetMultiples.0:i *tmp29 2
    68 label *label23
    69 jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   70 label *label29
    71 op idiv *tmp34 :testAndSetMultiples.0:i 48
    72 op mod *tmp36 :testAndSetMultiples.0:i 48
    73 op shl *tmp37 1 *tmp36
 
    77 label *label26
    78 label *label24
    79 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label23 always
+   80 jump *label29 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
    81 label *label25
    82 label *label21
    83 label *label22

Modifications by Inline function 'getBit' defined at line 10:1 (+2 instructions):
 
    25 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
    26 label *label28
    27 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   28 label *label30
+   29 op idiv *tmp20 :getBit.0:bitIndex 48
+   30 op mod *tmp22 :getBit.0:bitIndex 48
+   31 op shl *tmp23 1 *tmp22
+   32 read *tmp21 BITMAP *tmp20
+   33 op and :getBit.0*retval *tmp21 *tmp23
+   34 label *label31
    35 jump *label13 notEqual :getBit.0*retval false
    36 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    37 label *label13
    38 label *label14
    39 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    40 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   41 label *label32
+   42 op idiv *tmp20 :getBit.0:bitIndex 48
+   43 op mod *tmp22 :getBit.0:bitIndex 48
+   44 op shl *tmp23 1 *tmp22
+   45 read *tmp21 BITMAP *tmp20
+   46 op and :getBit.0*retval *tmp21 *tmp23
+   47 label *label33
    48 jump *label15 notEqual :getBit.0*retval false
    49 jump *label17 greaterThan :sumPrimesUpTo.0:i 500
    50 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
 
    60 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
    61 stop
    62 end
-    * label *label0
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label19
-    * return :getBit.0*retaddr
-    * end
    63 label *label1
    64 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
-    * call *label0 :getBit.0*retaddr :getBit.0*retval
+   65 label *label34
+   66 op idiv *tmp20 :getBit.0:bitIndex 48
+   67 op mod *tmp22 :getBit.0:bitIndex 48
+   68 op shl *tmp23 1 *tmp22
+   69 read *tmp21 BITMAP *tmp20
+   70 op and :getBit.0*retval *tmp21 *tmp23
+   71 label *label35
    72 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    73 jump *label21 equal :testAndSetMultiples.0:result false
    74 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2

Modifications by Inline function 'testAndSetMultiples' defined at line 14:1 (+15 instructions):
 
     4 label *label27
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     6 set :testAndSetMultiples.0:maximum 500
-    * call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
+    7 label *label36
+    8 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+    9 label *label37
+   10 op idiv *tmp20 :getBit.0:bitIndex 48
+   11 op mod *tmp22 :getBit.0:bitIndex 48
+   12 op shl *tmp23 1 *tmp22
+   13 read *tmp21 BITMAP *tmp20
+   14 op and :getBit.0*retval *tmp21 *tmp23
+   15 label *label38
+   16 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   17 jump *label44 equal :testAndSetMultiples.0:result false
+   18 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   19 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   20 op idiv :testAndSetMultiples.0:i *tmp29 2
+   21 label *label39
+   22 jump *label43 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   23 label *label40
+   24 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   25 op mod *tmp36 :testAndSetMultiples.0:i 48
+   26 op shl *tmp37 1 *tmp36
+   27 read *tmp35 BITMAP *tmp34
+   28 op or *tmp38 *tmp35 *tmp37
+   29 write *tmp38 BITMAP *tmp34
+   30 label *label41
+   31 label *label42
+   32 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   33 jump *label40 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   34 label *label43
+   35 label *label44
+   36 label *label45
+   37 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   38 label *label46
    39 jump *label6 equal :testAndSetMultiples.0*retval false
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    41 label *label6
 
    43 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
    44 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    45 set :testAndSetMultiples.0:maximum 500
-    * call *label1 :testAndSetMultiples.0*retaddr :testAndSetMultiples.0*retval
+   46 label *label47
+   47 op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   48 label *label48
+   49 op idiv *tmp20 :getBit.0:bitIndex 48
+   50 op mod *tmp22 :getBit.0:bitIndex 48
+   51 op shl *tmp23 1 *tmp22
+   52 read *tmp21 BITMAP *tmp20
+   53 op and :getBit.0*retval *tmp21 *tmp23
+   54 label *label49
+   55 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   56 jump *label55 equal :testAndSetMultiples.0:result false
+   57 op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
+   58 op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   59 op idiv :testAndSetMultiples.0:i *tmp29 2
+   60 label *label50
+   61 jump *label54 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   62 label *label51
+   63 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   64 op mod *tmp36 :testAndSetMultiples.0:i 48
+   65 op shl *tmp37 1 *tmp36
+   66 read *tmp35 BITMAP *tmp34
+   67 op or *tmp38 *tmp35 *tmp37
+   68 write *tmp38 BITMAP *tmp34
+   69 label *label52
+   70 label *label53
+   71 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
+   72 jump *label51 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   73 label *label54
+   74 label *label55
+   75 label *label56
+   76 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
+   77 label *label57
    78 jump *label8 equal :testAndSetMultiples.0*retval false
    79 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    80 label *label8
 
   122 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   123 stop
   124 end
-    * label *label1
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
-    * label *label34
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label35
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label21 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label23
-    * jump *label25 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label29
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label26
-    * label *label24
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label29 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
-    * label *label25
-    * label *label21
-    * label *label22
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
-    * label *label20
-    * return :testAndSetMultiples.0*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
     6 set :testAndSetMultiples.0:maximum 500
     7 label *label36
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+    8 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
     9 label *label37
    10 op idiv *tmp20 :getBit.0:bitIndex 48
    11 op mod *tmp22 :getBit.0:bitIndex 48
 
    15 label *label38
    16 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    17 jump *label44 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   18 op idiv :testAndSetMultiples.0:max 500 2
+   19 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    20 op idiv :testAndSetMultiples.0:i *tmp29 2
    21 label *label39
-    * jump *label43 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   22 jump *label43 greaterThan :testAndSetMultiples.0:i 250
    23 label *label40
    24 op idiv *tmp34 :testAndSetMultiples.0:i 48
    25 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    29 write *tmp38 BITMAP *tmp34
    30 label *label41
    31 label *label42
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label40 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   32 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   33 jump *label40 lessThanEq :testAndSetMultiples.0:i 250
    34 label *label43
    35 label *label44
    36 label *label45
    37 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    38 label *label46
-    * jump *label6 equal :testAndSetMultiples.0*retval false
+   39 jump *label6 equal :testAndSetMultiples.0:result false
    40 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    41 label *label6
    42 label *label7
 
    44 set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
    45 set :testAndSetMultiples.0:maximum 500
    46 label *label47
-    * op idiv :getBit.0:bitIndex :testAndSetMultiples.0:n 2
+   47 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    48 label *label48
    49 op idiv *tmp20 :getBit.0:bitIndex 48
    50 op mod *tmp22 :getBit.0:bitIndex 48
 
    54 label *label49
    55 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    56 jump *label55 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max :testAndSetMultiples.0:maximum 2
-    * op mul *tmp29 :testAndSetMultiples.0:n :testAndSetMultiples.0:n
+   57 op idiv :testAndSetMultiples.0:max 500 2
+   58 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    59 op idiv :testAndSetMultiples.0:i *tmp29 2
    60 label *label50
-    * jump *label54 greaterThan :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   61 jump *label54 greaterThan :testAndSetMultiples.0:i 250
    62 label *label51
    63 op idiv *tmp34 :testAndSetMultiples.0:i 48
    64 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    68 write *tmp38 BITMAP *tmp34
    69 label *label52
    70 label *label53
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :testAndSetMultiples.0:n
-    * jump *label51 lessThanEq :testAndSetMultiples.0:i :testAndSetMultiples.0:max
+   71 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   72 jump *label51 lessThanEq :testAndSetMultiples.0:i 250
    73 label *label54
    74 label *label55
    75 label *label56
    76 set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    77 label *label57
-    * jump *label8 equal :testAndSetMultiples.0*retval false
+   78 jump *label8 equal :testAndSetMultiples.0:result false
    79 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    80 label *label8
    81 label *label9

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
     2 set :sumPrimesUpTo.0:i 5
     3 label *label3
     4 label *label27
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
     5 label *label36
     6 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
     7 label *label37
 
    13 label *label38
    14 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    15 jump *label44 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    16 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    17 op idiv :testAndSetMultiples.0:i *tmp29 2
    18 label *label39
 
    31 label *label43
    32 label *label44
    33 label *label45
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    34 label *label46
    35 jump *label6 equal :testAndSetMultiples.0:result false
    36 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
    37 label *label6
    38 label *label7
    39 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * set :testAndSetMultiples.0:n :sumPrimesUpTo.0:i
-    * set :testAndSetMultiples.0:maximum 500
    40 label *label47
    41 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
    42 label *label48
 
    48 label *label49
    49 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    50 jump *label55 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:max 500 2
    51 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
    52 op idiv :testAndSetMultiples.0:i *tmp29 2
    53 label *label50
 
    66 label *label54
    67 label *label55
    68 label *label56
-    * set :testAndSetMultiples.0*retval :testAndSetMultiples.0:result
    69 label *label57
    70 jump *label8 equal :testAndSetMultiples.0:result false
    71 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i

Modifications by Unroll loop at line 29:5 (+131 instructions):
     0 set BITMAP bank1
     1 set :sumPrimesUpTo.0:sum 5
     2 set :sumPrimesUpTo.0:i 5
-    * label *label3
-    * label *label27
-    * label *label36
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label37
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label38
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label44 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label39
-    * jump *label43 greaterThan :testAndSetMultiples.0:i 250
-    * label *label40
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label41
-    * label *label42
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label40 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label43
-    * label *label44
-    * label *label45
-    * label *label46
-    * jump *label6 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label6
-    * label *label7
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
-    * label *label47
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
-    * label *label48
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
-    * label *label49
-    * op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label55 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
-    * label *label50
-    * jump *label54 greaterThan :testAndSetMultiples.0:i 250
-    * label *label51
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label52
-    * label *label53
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
-    * jump *label51 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label54
-    * label *label55
-    * label *label56
-    * label *label57
-    * jump *label8 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
-    * label *label8
-    * label *label9
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
-    * label *label4
-    * jump *label27 lessThanEq :sumPrimesUpTo.0:i 23
-    * label *label5
+    3 label *label58
+    4 label *label59
+    5 label *label60
+    6 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    7 label *label61
+    8 op idiv *tmp20 :getBit.0:bitIndex 48
+    9 op mod *tmp22 :getBit.0:bitIndex 48
+   10 op shl *tmp23 1 *tmp22
+   11 read *tmp21 BITMAP *tmp20
+   12 op and :getBit.0*retval *tmp21 *tmp23
+   13 label *label62
+   14 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   15 jump *label68 equal :testAndSetMultiples.0:result false
+   16 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   17 op idiv :testAndSetMultiples.0:i *tmp29 2
+   18 label *label63
+   19 jump *label67 greaterThan :testAndSetMultiples.0:i 250
+   20 label *label64
+   21 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   22 op mod *tmp36 :testAndSetMultiples.0:i 48
+   23 op shl *tmp37 1 *tmp36
+   24 read *tmp35 BITMAP *tmp34
+   25 op or *tmp38 *tmp35 *tmp37
+   26 write *tmp38 BITMAP *tmp34
+   27 label *label65
+   28 label *label66
+   29 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   30 jump *label64 lessThanEq :testAndSetMultiples.0:i 250
+   31 label *label67
+   32 label *label68
+   33 label *label69
+   34 label *label70
+   35 jump *label71 equal :testAndSetMultiples.0:result false
+   36 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   37 label *label71
+   38 label *label72
+   39 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   40 label *label73
+   41 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   42 label *label74
+   43 op idiv *tmp20 :getBit.0:bitIndex 48
+   44 op mod *tmp22 :getBit.0:bitIndex 48
+   45 op shl *tmp23 1 *tmp22
+   46 read *tmp21 BITMAP *tmp20
+   47 op and :getBit.0*retval *tmp21 *tmp23
+   48 label *label75
+   49 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   50 jump *label81 equal :testAndSetMultiples.0:result false
+   51 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   52 op idiv :testAndSetMultiples.0:i *tmp29 2
+   53 label *label76
+   54 jump *label80 greaterThan :testAndSetMultiples.0:i 250
+   55 label *label77
+   56 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   57 op mod *tmp36 :testAndSetMultiples.0:i 48
+   58 op shl *tmp37 1 *tmp36
+   59 read *tmp35 BITMAP *tmp34
+   60 op or *tmp38 *tmp35 *tmp37
+   61 write *tmp38 BITMAP *tmp34
+   62 label *label78
+   63 label *label79
+   64 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   65 jump *label77 lessThanEq :testAndSetMultiples.0:i 250
+   66 label *label80
+   67 label *label81
+   68 label *label82
+   69 label *label83
+   70 jump *label84 equal :testAndSetMultiples.0:result false
+   71 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   72 label *label84
+   73 label *label85
+   74 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   75 label *label86
+   76 label *label87
+   77 label *label88
+   78 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   79 label *label89
+   80 op idiv *tmp20 :getBit.0:bitIndex 48
+   81 op mod *tmp22 :getBit.0:bitIndex 48
+   82 op shl *tmp23 1 *tmp22
+   83 read *tmp21 BITMAP *tmp20
+   84 op and :getBit.0*retval *tmp21 *tmp23
+   85 label *label90
+   86 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+   87 jump *label96 equal :testAndSetMultiples.0:result false
+   88 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+   89 op idiv :testAndSetMultiples.0:i *tmp29 2
+   90 label *label91
+   91 jump *label95 greaterThan :testAndSetMultiples.0:i 250
+   92 label *label92
+   93 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   94 op mod *tmp36 :testAndSetMultiples.0:i 48
+   95 op shl *tmp37 1 *tmp36
+   96 read *tmp35 BITMAP *tmp34
+   97 op or *tmp38 *tmp35 *tmp37
+   98 write *tmp38 BITMAP *tmp34
+   99 label *label93
+  100 label *label94
+  101 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  102 jump *label92 lessThanEq :testAndSetMultiples.0:i 250
+  103 label *label95
+  104 label *label96
+  105 label *label97
+  106 label *label98
+  107 jump *label99 equal :testAndSetMultiples.0:result false
+  108 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  109 label *label99
+  110 label *label100
+  111 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  112 label *label101
+  113 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  114 label *label102
+  115 op idiv *tmp20 :getBit.0:bitIndex 48
+  116 op mod *tmp22 :getBit.0:bitIndex 48
+  117 op shl *tmp23 1 *tmp22
+  118 read *tmp21 BITMAP *tmp20
+  119 op and :getBit.0*retval *tmp21 *tmp23
+  120 label *label103
+  121 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  122 jump *label109 equal :testAndSetMultiples.0:result false
+  123 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  124 op idiv :testAndSetMultiples.0:i *tmp29 2
+  125 label *label104
+  126 jump *label108 greaterThan :testAndSetMultiples.0:i 250
+  127 label *label105
+  128 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  129 op mod *tmp36 :testAndSetMultiples.0:i 48
+  130 op shl *tmp37 1 *tmp36
+  131 read *tmp35 BITMAP *tmp34
+  132 op or *tmp38 *tmp35 *tmp37
+  133 write *tmp38 BITMAP *tmp34
+  134 label *label106
+  135 label *label107
+  136 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  137 jump *label105 lessThanEq :testAndSetMultiples.0:i 250
+  138 label *label108
+  139 label *label109
+  140 label *label110
+  141 label *label111
+  142 jump *label112 equal :testAndSetMultiples.0:result false
+  143 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  144 label *label112
+  145 label *label113
+  146 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  147 label *label114
+  148 label *label115
+  149 label *label116
+  150 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  151 label *label117
+  152 op idiv *tmp20 :getBit.0:bitIndex 48
+  153 op mod *tmp22 :getBit.0:bitIndex 48
+  154 op shl *tmp23 1 *tmp22
+  155 read *tmp21 BITMAP *tmp20
+  156 op and :getBit.0*retval *tmp21 *tmp23
+  157 label *label118
+  158 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  159 jump *label124 equal :testAndSetMultiples.0:result false
+  160 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  161 op idiv :testAndSetMultiples.0:i *tmp29 2
+  162 label *label119
+  163 jump *label123 greaterThan :testAndSetMultiples.0:i 250
+  164 label *label120
+  165 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  166 op mod *tmp36 :testAndSetMultiples.0:i 48
+  167 op shl *tmp37 1 *tmp36
+  168 read *tmp35 BITMAP *tmp34
+  169 op or *tmp38 *tmp35 *tmp37
+  170 write *tmp38 BITMAP *tmp34
+  171 label *label121
+  172 label *label122
+  173 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  174 jump *label120 lessThanEq :testAndSetMultiples.0:i 250
+  175 label *label123
+  176 label *label124
+  177 label *label125
+  178 label *label126
+  179 jump *label127 equal :testAndSetMultiples.0:result false
+  180 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  181 label *label127
+  182 label *label128
+  183 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  184 label *label129
+  185 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  186 label *label130
+  187 op idiv *tmp20 :getBit.0:bitIndex 48
+  188 op mod *tmp22 :getBit.0:bitIndex 48
+  189 op shl *tmp23 1 *tmp22
+  190 read *tmp21 BITMAP *tmp20
+  191 op and :getBit.0*retval *tmp21 *tmp23
+  192 label *label131
+  193 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  194 jump *label137 equal :testAndSetMultiples.0:result false
+  195 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  196 op idiv :testAndSetMultiples.0:i *tmp29 2
+  197 label *label132
+  198 jump *label136 greaterThan :testAndSetMultiples.0:i 250
+  199 label *label133
+  200 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  201 op mod *tmp36 :testAndSetMultiples.0:i 48
+  202 op shl *tmp37 1 *tmp36
+  203 read *tmp35 BITMAP *tmp34
+  204 op or *tmp38 *tmp35 *tmp37
+  205 write *tmp38 BITMAP *tmp34
+  206 label *label134
+  207 label *label135
+  208 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  209 jump *label133 lessThanEq :testAndSetMultiples.0:i 250
+  210 label *label136
+  211 label *label137
+  212 label *label138
+  213 label *label139
+  214 jump *label140 equal :testAndSetMultiples.0:result false
+  215 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  216 label *label140
+  217 label *label141
+  218 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  219 label *label142
+  220 label *label143
+  221 label *label144
+  222 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  223 label *label145
+  224 op idiv *tmp20 :getBit.0:bitIndex 48
+  225 op mod *tmp22 :getBit.0:bitIndex 48
+  226 op shl *tmp23 1 *tmp22
+  227 read *tmp21 BITMAP *tmp20
+  228 op and :getBit.0*retval *tmp21 *tmp23
+  229 label *label146
+  230 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  231 jump *label152 equal :testAndSetMultiples.0:result false
+  232 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  233 op idiv :testAndSetMultiples.0:i *tmp29 2
+  234 label *label147
+  235 jump *label151 greaterThan :testAndSetMultiples.0:i 250
+  236 label *label148
+  237 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  238 op mod *tmp36 :testAndSetMultiples.0:i 48
+  239 op shl *tmp37 1 *tmp36
+  240 read *tmp35 BITMAP *tmp34
+  241 op or *tmp38 *tmp35 *tmp37
+  242 write *tmp38 BITMAP *tmp34
+  243 label *label149
+  244 label *label150
+  245 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  246 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
+  247 label *label151
+  248 label *label152
+  249 label *label153
+  250 label *label154
+  251 jump *label155 equal :testAndSetMultiples.0:result false
+  252 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  253 label *label155
+  254 label *label156
+  255 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  256 label *label157
+  257 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  258 label *label158
+  259 op idiv *tmp20 :getBit.0:bitIndex 48
+  260 op mod *tmp22 :getBit.0:bitIndex 48
+  261 op shl *tmp23 1 *tmp22
+  262 read *tmp21 BITMAP *tmp20
+  263 op and :getBit.0*retval *tmp21 *tmp23
+  264 label *label159
+  265 op equal :testAndSetMultiples.0:result :getBit.0*retval false
+  266 jump *label165 equal :testAndSetMultiples.0:result false
+  267 op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
+  268 op idiv :testAndSetMultiples.0:i *tmp29 2
+  269 label *label160
+  270 jump *label164 greaterThan :testAndSetMultiples.0:i 250
+  271 label *label161
+  272 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  273 op mod *tmp36 :testAndSetMultiples.0:i 48
+  274 op shl *tmp37 1 *tmp36
+  275 read *tmp35 BITMAP *tmp34
+  276 op or *tmp38 *tmp35 *tmp37
+  277 write *tmp38 BITMAP *tmp34
+  278 label *label162
+  279 label *label163
+  280 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  281 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
+  282 label *label164
+  283 label *label165
+  284 label *label166
+  285 label *label167
+  286 jump *label168 equal :testAndSetMultiples.0:result false
+  287 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  288 label *label168
+  289 label *label169
+  290 op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  291 label *label170
+  292 label *label5
   293 label *label10
   294 jump *label12 greaterThan :sumPrimesUpTo.0:i 500
   295 label *label28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 label *label58
     4 label *label59
     5 label *label60
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+    6 op idiv :getBit.0:bitIndex 5 2
     7 label *label61
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+    8 op idiv *tmp20 2 48
+    9 op mod *tmp22 2 48
+   10 op shl *tmp23 1 2
+   11 read *tmp21 BITMAP 0
+   12 op and :getBit.0*retval *tmp21 4
    13 label *label62
    14 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    15 jump *label68 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   16 op mul *tmp29 5 5
+   17 op idiv :testAndSetMultiples.0:i 25 2
    18 label *label63
-    * jump *label67 greaterThan :testAndSetMultiples.0:i 250
+   19 jump *label67 greaterThan 12 250
    20 label *label64
    21 op idiv *tmp34 :testAndSetMultiples.0:i 48
    22 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    26 write *tmp38 BITMAP *tmp34
    27 label *label65
    28 label *label66
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   29 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
    30 jump *label64 lessThanEq :testAndSetMultiples.0:i 250
    31 label *label67
    32 label *label68
    33 label *label69
    34 label *label70
    35 jump *label71 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   36 op add :sumPrimesUpTo.0:sum 5 5
    37 label *label71
    38 label *label72
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+   39 op add :sumPrimesUpTo.0:i 5 2
    40 label *label73
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   41 op idiv :getBit.0:bitIndex 7 2
    42 label *label74
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   43 op idiv *tmp20 3 48
+   44 op mod *tmp22 3 48
+   45 op shl *tmp23 1 3
+   46 read *tmp21 BITMAP 0
+   47 op and :getBit.0*retval *tmp21 8
    48 label *label75
    49 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    50 jump *label81 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   51 op mul *tmp29 7 7
+   52 op idiv :testAndSetMultiples.0:i 49 2
    53 label *label76
-    * jump *label80 greaterThan :testAndSetMultiples.0:i 250
+   54 jump *label80 greaterThan 24 250
    55 label *label77
    56 op idiv *tmp34 :testAndSetMultiples.0:i 48
    57 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    61 write *tmp38 BITMAP *tmp34
    62 label *label78
    63 label *label79
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+   64 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
    65 jump *label77 lessThanEq :testAndSetMultiples.0:i 250
    66 label *label80
    67 label *label81
    68 label *label82
    69 label *label83
    70 jump *label84 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+   71 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    72 label *label84
    73 label *label85
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+   74 op add :sumPrimesUpTo.0:i 7 4
    75 label *label86
    76 label *label87
    77 label *label88
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+   78 op idiv :getBit.0:bitIndex 11 2
    79 label *label89
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+   80 op idiv *tmp20 5 48
+   81 op mod *tmp22 5 48
+   82 op shl *tmp23 1 5
+   83 read *tmp21 BITMAP 0
+   84 op and :getBit.0*retval *tmp21 32
    85 label *label90
    86 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    87 jump *label96 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+   88 op mul *tmp29 11 11
+   89 op idiv :testAndSetMultiples.0:i 121 2
    90 label *label91
-    * jump *label95 greaterThan :testAndSetMultiples.0:i 250
+   91 jump *label95 greaterThan 60 250
    92 label *label92
    93 op idiv *tmp34 :testAndSetMultiples.0:i 48
    94 op mod *tmp36 :testAndSetMultiples.0:i 48
 
    98 write *tmp38 BITMAP *tmp34
    99 label *label93
   100 label *label94
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  101 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
   102 jump *label92 lessThanEq :testAndSetMultiples.0:i 250
   103 label *label95
   104 label *label96
   105 label *label97
   106 label *label98
   107 jump *label99 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  108 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   109 label *label99
   110 label *label100
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  111 op add :sumPrimesUpTo.0:i 11 2
   112 label *label101
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  113 op idiv :getBit.0:bitIndex 13 2
   114 label *label102
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  115 op idiv *tmp20 6 48
+  116 op mod *tmp22 6 48
+  117 op shl *tmp23 1 6
+  118 read *tmp21 BITMAP 0
+  119 op and :getBit.0*retval *tmp21 64
   120 label *label103
   121 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   122 jump *label109 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  123 op mul *tmp29 13 13
+  124 op idiv :testAndSetMultiples.0:i 169 2
   125 label *label104
-    * jump *label108 greaterThan :testAndSetMultiples.0:i 250
+  126 jump *label108 greaterThan 84 250
   127 label *label105
   128 op idiv *tmp34 :testAndSetMultiples.0:i 48
   129 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   133 write *tmp38 BITMAP *tmp34
   134 label *label106
   135 label *label107
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  136 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
   137 jump *label105 lessThanEq :testAndSetMultiples.0:i 250
   138 label *label108
   139 label *label109
   140 label *label110
   141 label *label111
   142 jump *label112 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  143 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   144 label *label112
   145 label *label113
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  146 op add :sumPrimesUpTo.0:i 13 4
   147 label *label114
   148 label *label115
   149 label *label116
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  150 op idiv :getBit.0:bitIndex 17 2
   151 label *label117
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  152 op idiv *tmp20 8 48
+  153 op mod *tmp22 8 48
+  154 op shl *tmp23 1 8
+  155 read *tmp21 BITMAP 0
+  156 op and :getBit.0*retval *tmp21 256
   157 label *label118
   158 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   159 jump *label124 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  160 op mul *tmp29 17 17
+  161 op idiv :testAndSetMultiples.0:i 289 2
   162 label *label119
-    * jump *label123 greaterThan :testAndSetMultiples.0:i 250
+  163 jump *label123 greaterThan 144 250
   164 label *label120
   165 op idiv *tmp34 :testAndSetMultiples.0:i 48
   166 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   170 write *tmp38 BITMAP *tmp34
   171 label *label121
   172 label *label122
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  173 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
   174 jump *label120 lessThanEq :testAndSetMultiples.0:i 250
   175 label *label123
   176 label *label124
   177 label *label125
   178 label *label126
   179 jump *label127 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  180 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   181 label *label127
   182 label *label128
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  183 op add :sumPrimesUpTo.0:i 17 2
   184 label *label129
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  185 op idiv :getBit.0:bitIndex 19 2
   186 label *label130
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  187 op idiv *tmp20 9 48
+  188 op mod *tmp22 9 48
+  189 op shl *tmp23 1 9
+  190 read *tmp21 BITMAP 0
+  191 op and :getBit.0*retval *tmp21 512
   192 label *label131
   193 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   194 jump *label137 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  195 op mul *tmp29 19 19
+  196 op idiv :testAndSetMultiples.0:i 361 2
   197 label *label132
-    * jump *label136 greaterThan :testAndSetMultiples.0:i 250
+  198 jump *label136 greaterThan 180 250
   199 label *label133
   200 op idiv *tmp34 :testAndSetMultiples.0:i 48
   201 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   205 write *tmp38 BITMAP *tmp34
   206 label *label134
   207 label *label135
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  208 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
   209 jump *label133 lessThanEq :testAndSetMultiples.0:i 250
   210 label *label136
   211 label *label137
   212 label *label138
   213 label *label139
   214 jump *label140 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  215 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   216 label *label140
   217 label *label141
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  218 op add :sumPrimesUpTo.0:i 19 4
   219 label *label142
   220 label *label143
   221 label *label144
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  222 op idiv :getBit.0:bitIndex 23 2
   223 label *label145
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  224 op idiv *tmp20 11 48
+  225 op mod *tmp22 11 48
+  226 op shl *tmp23 1 11
+  227 read *tmp21 BITMAP 0
+  228 op and :getBit.0*retval *tmp21 2048
   229 label *label146
   230 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   231 jump *label152 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  232 op mul *tmp29 23 23
+  233 op idiv :testAndSetMultiples.0:i 529 2
   234 label *label147
-    * jump *label151 greaterThan :testAndSetMultiples.0:i 250
+  235 jump *label151 greaterThan 264 250
   236 label *label148
   237 op idiv *tmp34 :testAndSetMultiples.0:i 48
   238 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   242 write *tmp38 BITMAP *tmp34
   243 label *label149
   244 label *label150
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  245 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   246 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   247 label *label151
   248 label *label152
   249 label *label153
   250 label *label154
   251 jump *label155 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  252 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   253 label *label155
   254 label *label156
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
+  255 op add :sumPrimesUpTo.0:i 23 2
   256 label *label157
-    * op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
+  257 op idiv :getBit.0:bitIndex 25 2
   258 label *label158
-    * op idiv *tmp20 :getBit.0:bitIndex 48
-    * op mod *tmp22 :getBit.0:bitIndex 48
-    * op shl *tmp23 1 *tmp22
-    * read *tmp21 BITMAP *tmp20
-    * op and :getBit.0*retval *tmp21 *tmp23
+  259 op idiv *tmp20 12 48
+  260 op mod *tmp22 12 48
+  261 op shl *tmp23 1 12
+  262 read *tmp21 BITMAP 0
+  263 op and :getBit.0*retval *tmp21 4096
   264 label *label159
   265 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   266 jump *label165 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i
-    * op idiv :testAndSetMultiples.0:i *tmp29 2
+  267 op mul *tmp29 25 25
+  268 op idiv :testAndSetMultiples.0:i 625 2
   269 label *label160
-    * jump *label164 greaterThan :testAndSetMultiples.0:i 250
+  270 jump *label164 greaterThan 312 250
   271 label *label161
   272 op idiv *tmp34 :testAndSetMultiples.0:i 48
   273 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   277 write *tmp38 BITMAP *tmp34
   278 label *label162
   279 label *label163
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i :sumPrimesUpTo.0:i
+  280 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
   281 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   282 label *label164
   283 label *label165
   284 label *label166
   285 label *label167
   286 jump *label168 equal :testAndSetMultiples.0:result false
-    * op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
+  287 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
   288 label *label168
   289 label *label169
-    * op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
+  290 op add :sumPrimesUpTo.0:i 25 4
   291 label *label170
   292 label *label5
   293 label *label10
-    * jump *label12 greaterThan :sumPrimesUpTo.0:i 500
+  294 jump *label12 greaterThan 29 500
   295 label *label28
   296 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
   297 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-48 instructions):
     0 set BITMAP bank1
     1 set :sumPrimesUpTo.0:sum 5
-    * set :sumPrimesUpTo.0:i 5
     2 label *label58
     3 label *label59
     4 label *label60
-    * op idiv :getBit.0:bitIndex 5 2
     5 label *label61
-    * op idiv *tmp20 2 48
-    * op mod *tmp22 2 48
-    * op shl *tmp23 1 2
     6 read *tmp21 BITMAP 0
     7 op and :getBit.0*retval *tmp21 4
     8 label *label62
     9 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    10 jump *label68 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 5 5
    11 op idiv :testAndSetMultiples.0:i 25 2
    12 label *label63
    13 jump *label67 greaterThan 12 250
 
    30 op add :sumPrimesUpTo.0:sum 5 5
    31 label *label71
    32 label *label72
-    * op add :sumPrimesUpTo.0:i 5 2
    33 label *label73
-    * op idiv :getBit.0:bitIndex 7 2
    34 label *label74
-    * op idiv *tmp20 3 48
-    * op mod *tmp22 3 48
-    * op shl *tmp23 1 3
    35 read *tmp21 BITMAP 0
    36 op and :getBit.0*retval *tmp21 8
    37 label *label75
    38 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    39 jump *label81 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 7 7
    40 op idiv :testAndSetMultiples.0:i 49 2
    41 label *label76
    42 jump *label80 greaterThan 24 250
 
    59 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
    60 label *label84
    61 label *label85
-    * op add :sumPrimesUpTo.0:i 7 4
    62 label *label86
    63 label *label87
    64 label *label88
-    * op idiv :getBit.0:bitIndex 11 2
    65 label *label89
-    * op idiv *tmp20 5 48
-    * op mod *tmp22 5 48
-    * op shl *tmp23 1 5
    66 read *tmp21 BITMAP 0
    67 op and :getBit.0*retval *tmp21 32
    68 label *label90
    69 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    70 jump *label96 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 11 11
    71 op idiv :testAndSetMultiples.0:i 121 2
    72 label *label91
    73 jump *label95 greaterThan 60 250
 
    90 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
    91 label *label99
    92 label *label100
-    * op add :sumPrimesUpTo.0:i 11 2
    93 label *label101
-    * op idiv :getBit.0:bitIndex 13 2
    94 label *label102
-    * op idiv *tmp20 6 48
-    * op mod *tmp22 6 48
-    * op shl *tmp23 1 6
    95 read *tmp21 BITMAP 0
    96 op and :getBit.0*retval *tmp21 64
    97 label *label103
    98 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    99 jump *label109 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 13 13
   100 op idiv :testAndSetMultiples.0:i 169 2
   101 label *label104
   102 jump *label108 greaterThan 84 250
 
   119 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   120 label *label112
   121 label *label113
-    * op add :sumPrimesUpTo.0:i 13 4
   122 label *label114
   123 label *label115
   124 label *label116
-    * op idiv :getBit.0:bitIndex 17 2
   125 label *label117
-    * op idiv *tmp20 8 48
-    * op mod *tmp22 8 48
-    * op shl *tmp23 1 8
   126 read *tmp21 BITMAP 0
   127 op and :getBit.0*retval *tmp21 256
   128 label *label118
   129 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   130 jump *label124 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 17 17
   131 op idiv :testAndSetMultiples.0:i 289 2
   132 label *label119
   133 jump *label123 greaterThan 144 250
 
   150 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   151 label *label127
   152 label *label128
-    * op add :sumPrimesUpTo.0:i 17 2
   153 label *label129
-    * op idiv :getBit.0:bitIndex 19 2
   154 label *label130
-    * op idiv *tmp20 9 48
-    * op mod *tmp22 9 48
-    * op shl *tmp23 1 9
   155 read *tmp21 BITMAP 0
   156 op and :getBit.0*retval *tmp21 512
   157 label *label131
   158 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   159 jump *label137 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 19 19
   160 op idiv :testAndSetMultiples.0:i 361 2
   161 label *label132
   162 jump *label136 greaterThan 180 250
 
   179 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   180 label *label140
   181 label *label141
-    * op add :sumPrimesUpTo.0:i 19 4
   182 label *label142
   183 label *label143
   184 label *label144
-    * op idiv :getBit.0:bitIndex 23 2
   185 label *label145
-    * op idiv *tmp20 11 48
-    * op mod *tmp22 11 48
-    * op shl *tmp23 1 11
   186 read *tmp21 BITMAP 0
   187 op and :getBit.0*retval *tmp21 2048
   188 label *label146
   189 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   190 jump *label152 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 23 23
   191 op idiv :testAndSetMultiples.0:i 529 2
   192 label *label147
   193 jump *label151 greaterThan 264 250
 
   210 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
   211 label *label155
   212 label *label156
-    * op add :sumPrimesUpTo.0:i 23 2
   213 label *label157
-    * op idiv :getBit.0:bitIndex 25 2
   214 label *label158
-    * op idiv *tmp20 12 48
-    * op mod *tmp22 12 48
-    * op shl *tmp23 1 12
   215 read *tmp21 BITMAP 0
   216 op and :getBit.0*retval *tmp21 4096
   217 label *label159
   218 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   219 jump *label165 equal :testAndSetMultiples.0:result false
-    * op mul *tmp29 25 25
   220 op idiv :testAndSetMultiples.0:i 625 2
   221 label *label160
   222 jump *label164 greaterThan 312 250

Modifications by Unroll loop at line 17:9 (+19 instructions):
 
   157 label *label131
   158 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   159 jump *label137 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
-    * label *label132
-    * jump *label136 greaterThan 180 250
-    * label *label133
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label134
-    * label *label135
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
-    * jump *label133 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label136
+  160 op idiv :testAndSetMultiples.0:i 361 2
+  161 label *label171
+  162 label *label172
+  163 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  164 op mod *tmp36 :testAndSetMultiples.0:i 48
+  165 op shl *tmp37 1 *tmp36
+  166 read *tmp35 BITMAP *tmp34
+  167 op or *tmp38 *tmp35 *tmp37
+  168 write *tmp38 BITMAP *tmp34
+  169 label *label173
+  170 label *label174
+  171 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  172 label *label175
+  173 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  174 op mod *tmp36 :testAndSetMultiples.0:i 48
+  175 op shl *tmp37 1 *tmp36
+  176 read *tmp35 BITMAP *tmp34
+  177 op or *tmp38 *tmp35 *tmp37
+  178 write *tmp38 BITMAP *tmp34
+  179 label *label176
+  180 label *label177
+  181 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  182 label *label178
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label179
+  190 label *label180
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  192 label *label181
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label182
+  200 label *label183
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  202 label *label136
   203 label *label137
   204 label *label138
   205 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   160 op idiv :testAndSetMultiples.0:i 361 2
   161 label *label171
   162 label *label172
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  163 op idiv *tmp34 180 48
+  164 op mod *tmp36 180 48
+  165 op shl *tmp37 1 36
+  166 read *tmp35 BITMAP 3
+  167 op or *tmp38 *tmp35 68719476736
+  168 write *tmp38 BITMAP 3
   169 label *label173
   170 label *label174
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  171 op add :testAndSetMultiples.0:i 180 19
   172 label *label175
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  173 op idiv *tmp34 199 48
+  174 op mod *tmp36 199 48
+  175 op shl *tmp37 1 7
+  176 read *tmp35 BITMAP 4
+  177 op or *tmp38 *tmp35 128
+  178 write *tmp38 BITMAP 4
   179 label *label176
   180 label *label177
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  181 op add :testAndSetMultiples.0:i 199 19
   182 label *label178
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 218 48
+  184 op mod *tmp36 218 48
+  185 op shl *tmp37 1 26
+  186 read *tmp35 BITMAP 4
+  187 op or *tmp38 *tmp35 67108864
+  188 write *tmp38 BITMAP 4
   189 label *label179
   190 label *label180
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  191 op add :testAndSetMultiples.0:i 218 19
   192 label *label181
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 237 48
+  194 op mod *tmp36 237 48
+  195 op shl *tmp37 1 45
+  196 read *tmp35 BITMAP 4
+  197 op or *tmp38 *tmp35 35184372088832
+  198 write *tmp38 BITMAP 4
   199 label *label182
   200 label *label183
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 19
+  201 op add :testAndSetMultiples.0:i 237 19
   202 label *label136
   203 label *label137
   204 label *label138

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
 
   157 label *label131
   158 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   159 jump *label137 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 361 2
   160 label *label171
   161 label *label172
-    * op idiv *tmp34 180 48
-    * op mod *tmp36 180 48
-    * op shl *tmp37 1 36
   162 read *tmp35 BITMAP 3
   163 op or *tmp38 *tmp35 68719476736
   164 write *tmp38 BITMAP 3
   165 label *label173
   166 label *label174
-    * op add :testAndSetMultiples.0:i 180 19
   167 label *label175
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   168 read *tmp35 BITMAP 4
   169 op or *tmp38 *tmp35 128
   170 write *tmp38 BITMAP 4
   171 label *label176
   172 label *label177
-    * op add :testAndSetMultiples.0:i 199 19
   173 label *label178
-    * op idiv *tmp34 218 48
-    * op mod *tmp36 218 48
-    * op shl *tmp37 1 26
   174 read *tmp35 BITMAP 4
   175 op or *tmp38 *tmp35 67108864
   176 write *tmp38 BITMAP 4
   177 label *label179
   178 label *label180
-    * op add :testAndSetMultiples.0:i 218 19
   179 label *label181
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   180 read *tmp35 BITMAP 4
   181 op or *tmp38 *tmp35 35184372088832
   182 write *tmp38 BITMAP 4
   183 label *label182
   184 label *label183
-    * op add :testAndSetMultiples.0:i 237 19
   185 label *label136
   186 label *label137
   187 label *label138

Modifications by Unroll loop at line 17:9 (+40 instructions):
 
   128 label *label118
   129 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   130 jump *label124 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
-    * label *label119
-    * jump *label123 greaterThan 144 250
-    * label *label120
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label121
-    * label *label122
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
-    * jump *label120 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label123
+  131 op idiv :testAndSetMultiples.0:i 289 2
+  132 label *label184
+  133 label *label185
+  134 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  135 op mod *tmp36 :testAndSetMultiples.0:i 48
+  136 op shl *tmp37 1 *tmp36
+  137 read *tmp35 BITMAP *tmp34
+  138 op or *tmp38 *tmp35 *tmp37
+  139 write *tmp38 BITMAP *tmp34
+  140 label *label186
+  141 label *label187
+  142 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  143 label *label188
+  144 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  145 op mod *tmp36 :testAndSetMultiples.0:i 48
+  146 op shl *tmp37 1 *tmp36
+  147 read *tmp35 BITMAP *tmp34
+  148 op or *tmp38 *tmp35 *tmp37
+  149 write *tmp38 BITMAP *tmp34
+  150 label *label189
+  151 label *label190
+  152 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  153 label *label191
+  154 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  155 op mod *tmp36 :testAndSetMultiples.0:i 48
+  156 op shl *tmp37 1 *tmp36
+  157 read *tmp35 BITMAP *tmp34
+  158 op or *tmp38 *tmp35 *tmp37
+  159 write *tmp38 BITMAP *tmp34
+  160 label *label192
+  161 label *label193
+  162 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  163 label *label194
+  164 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  165 op mod *tmp36 :testAndSetMultiples.0:i 48
+  166 op shl *tmp37 1 *tmp36
+  167 read *tmp35 BITMAP *tmp34
+  168 op or *tmp38 *tmp35 *tmp37
+  169 write *tmp38 BITMAP *tmp34
+  170 label *label195
+  171 label *label196
+  172 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  173 label *label197
+  174 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  175 op mod *tmp36 :testAndSetMultiples.0:i 48
+  176 op shl *tmp37 1 *tmp36
+  177 read *tmp35 BITMAP *tmp34
+  178 op or *tmp38 *tmp35 *tmp37
+  179 write *tmp38 BITMAP *tmp34
+  180 label *label198
+  181 label *label199
+  182 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  183 label *label200
+  184 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  185 op mod *tmp36 :testAndSetMultiples.0:i 48
+  186 op shl *tmp37 1 *tmp36
+  187 read *tmp35 BITMAP *tmp34
+  188 op or *tmp38 *tmp35 *tmp37
+  189 write *tmp38 BITMAP *tmp34
+  190 label *label201
+  191 label *label202
+  192 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  193 label *label203
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label204
+  201 label *label205
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  203 label *label123
   204 label *label124
   205 label *label125
   206 label *label126

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   131 op idiv :testAndSetMultiples.0:i 289 2
   132 label *label184
   133 label *label185
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  134 op idiv *tmp34 144 48
+  135 op mod *tmp36 144 48
+  136 op shl *tmp37 1 0
+  137 read *tmp35 BITMAP 3
+  138 op or *tmp38 *tmp35 1
+  139 write *tmp38 BITMAP 3
   140 label *label186
   141 label *label187
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  142 op add :testAndSetMultiples.0:i 144 17
   143 label *label188
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  144 op idiv *tmp34 161 48
+  145 op mod *tmp36 161 48
+  146 op shl *tmp37 1 17
+  147 read *tmp35 BITMAP 3
+  148 op or *tmp38 *tmp35 131072
+  149 write *tmp38 BITMAP 3
   150 label *label189
   151 label *label190
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  152 op add :testAndSetMultiples.0:i 161 17
   153 label *label191
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  154 op idiv *tmp34 178 48
+  155 op mod *tmp36 178 48
+  156 op shl *tmp37 1 34
+  157 read *tmp35 BITMAP 3
+  158 op or *tmp38 *tmp35 17179869184
+  159 write *tmp38 BITMAP 3
   160 label *label192
   161 label *label193
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  162 op add :testAndSetMultiples.0:i 178 17
   163 label *label194
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  164 op idiv *tmp34 195 48
+  165 op mod *tmp36 195 48
+  166 op shl *tmp37 1 3
+  167 read *tmp35 BITMAP 4
+  168 op or *tmp38 *tmp35 8
+  169 write *tmp38 BITMAP 4
   170 label *label195
   171 label *label196
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  172 op add :testAndSetMultiples.0:i 195 17
   173 label *label197
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  174 op idiv *tmp34 212 48
+  175 op mod *tmp36 212 48
+  176 op shl *tmp37 1 20
+  177 read *tmp35 BITMAP 4
+  178 op or *tmp38 *tmp35 1048576
+  179 write *tmp38 BITMAP 4
   180 label *label198
   181 label *label199
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  182 op add :testAndSetMultiples.0:i 212 17
   183 label *label200
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  184 op idiv *tmp34 229 48
+  185 op mod *tmp36 229 48
+  186 op shl *tmp37 1 37
+  187 read *tmp35 BITMAP 4
+  188 op or *tmp38 *tmp35 137438953472
+  189 write *tmp38 BITMAP 4
   190 label *label201
   191 label *label202
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  192 op add :testAndSetMultiples.0:i 229 17
   193 label *label203
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 246 48
+  195 op mod *tmp36 246 48
+  196 op shl *tmp37 1 6
+  197 read *tmp35 BITMAP 5
+  198 op or *tmp38 *tmp35 64
+  199 write *tmp38 BITMAP 5
   200 label *label204
   201 label *label205
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 17
+  202 op add :testAndSetMultiples.0:i 246 17
   203 label *label123
   204 label *label124
   205 label *label125

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-29 instructions):
 
   128 label *label118
   129 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   130 jump *label124 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 289 2
   131 label *label184
   132 label *label185
-    * op idiv *tmp34 144 48
-    * op mod *tmp36 144 48
-    * op shl *tmp37 1 0
   133 read *tmp35 BITMAP 3
   134 op or *tmp38 *tmp35 1
   135 write *tmp38 BITMAP 3
   136 label *label186
   137 label *label187
-    * op add :testAndSetMultiples.0:i 144 17
   138 label *label188
-    * op idiv *tmp34 161 48
-    * op mod *tmp36 161 48
-    * op shl *tmp37 1 17
   139 read *tmp35 BITMAP 3
   140 op or *tmp38 *tmp35 131072
   141 write *tmp38 BITMAP 3
   142 label *label189
   143 label *label190
-    * op add :testAndSetMultiples.0:i 161 17
   144 label *label191
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   145 read *tmp35 BITMAP 3
   146 op or *tmp38 *tmp35 17179869184
   147 write *tmp38 BITMAP 3
   148 label *label192
   149 label *label193
-    * op add :testAndSetMultiples.0:i 178 17
   150 label *label194
-    * op idiv *tmp34 195 48
-    * op mod *tmp36 195 48
-    * op shl *tmp37 1 3
   151 read *tmp35 BITMAP 4
   152 op or *tmp38 *tmp35 8
   153 write *tmp38 BITMAP 4
   154 label *label195
   155 label *label196
-    * op add :testAndSetMultiples.0:i 195 17
   156 label *label197
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   157 read *tmp35 BITMAP 4
   158 op or *tmp38 *tmp35 1048576
   159 write *tmp38 BITMAP 4
   160 label *label198
   161 label *label199
-    * op add :testAndSetMultiples.0:i 212 17
   162 label *label200
-    * op idiv *tmp34 229 48
-    * op mod *tmp36 229 48
-    * op shl *tmp37 1 37
   163 read *tmp35 BITMAP 4
   164 op or *tmp38 *tmp35 137438953472
   165 write *tmp38 BITMAP 4
   166 label *label201
   167 label *label202
-    * op add :testAndSetMultiples.0:i 229 17
   168 label *label203
-    * op idiv *tmp34 246 48
-    * op mod *tmp36 246 48
-    * op shl *tmp37 1 6
   169 read *tmp35 BITMAP 5
   170 op or *tmp38 *tmp35 64
   171 write *tmp38 BITMAP 5
   172 label *label204
   173 label *label205
-    * op add :testAndSetMultiples.0:i 246 17
   174 label *label123
   175 label *label124
   176 label *label125

Modifications by Unroll loop at line 17:9 (+82 instructions):
 
    97 label *label103
    98 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    99 jump *label109 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
-    * label *label104
-    * jump *label108 greaterThan 84 250
-    * label *label105
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label106
-    * label *label107
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
-    * jump *label105 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label108
+  100 op idiv :testAndSetMultiples.0:i 169 2
+  101 label *label206
+  102 label *label207
+  103 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  104 op mod *tmp36 :testAndSetMultiples.0:i 48
+  105 op shl *tmp37 1 *tmp36
+  106 read *tmp35 BITMAP *tmp34
+  107 op or *tmp38 *tmp35 *tmp37
+  108 write *tmp38 BITMAP *tmp34
+  109 label *label208
+  110 label *label209
+  111 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  112 label *label210
+  113 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  114 op mod *tmp36 :testAndSetMultiples.0:i 48
+  115 op shl *tmp37 1 *tmp36
+  116 read *tmp35 BITMAP *tmp34
+  117 op or *tmp38 *tmp35 *tmp37
+  118 write *tmp38 BITMAP *tmp34
+  119 label *label211
+  120 label *label212
+  121 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  122 label *label213
+  123 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  124 op mod *tmp36 :testAndSetMultiples.0:i 48
+  125 op shl *tmp37 1 *tmp36
+  126 read *tmp35 BITMAP *tmp34
+  127 op or *tmp38 *tmp35 *tmp37
+  128 write *tmp38 BITMAP *tmp34
+  129 label *label214
+  130 label *label215
+  131 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  132 label *label216
+  133 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  134 op mod *tmp36 :testAndSetMultiples.0:i 48
+  135 op shl *tmp37 1 *tmp36
+  136 read *tmp35 BITMAP *tmp34
+  137 op or *tmp38 *tmp35 *tmp37
+  138 write *tmp38 BITMAP *tmp34
+  139 label *label217
+  140 label *label218
+  141 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  142 label *label219
+  143 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  144 op mod *tmp36 :testAndSetMultiples.0:i 48
+  145 op shl *tmp37 1 *tmp36
+  146 read *tmp35 BITMAP *tmp34
+  147 op or *tmp38 *tmp35 *tmp37
+  148 write *tmp38 BITMAP *tmp34
+  149 label *label220
+  150 label *label221
+  151 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  152 label *label222
+  153 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  154 op mod *tmp36 :testAndSetMultiples.0:i 48
+  155 op shl *tmp37 1 *tmp36
+  156 read *tmp35 BITMAP *tmp34
+  157 op or *tmp38 *tmp35 *tmp37
+  158 write *tmp38 BITMAP *tmp34
+  159 label *label223
+  160 label *label224
+  161 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  162 label *label225
+  163 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  164 op mod *tmp36 :testAndSetMultiples.0:i 48
+  165 op shl *tmp37 1 *tmp36
+  166 read *tmp35 BITMAP *tmp34
+  167 op or *tmp38 *tmp35 *tmp37
+  168 write *tmp38 BITMAP *tmp34
+  169 label *label226
+  170 label *label227
+  171 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  172 label *label228
+  173 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  174 op mod *tmp36 :testAndSetMultiples.0:i 48
+  175 op shl *tmp37 1 *tmp36
+  176 read *tmp35 BITMAP *tmp34
+  177 op or *tmp38 *tmp35 *tmp37
+  178 write *tmp38 BITMAP *tmp34
+  179 label *label229
+  180 label *label230
+  181 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  182 label *label231
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label232
+  190 label *label233
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  192 label *label234
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label235
+  200 label *label236
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  202 label *label237
+  203 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  204 op mod *tmp36 :testAndSetMultiples.0:i 48
+  205 op shl *tmp37 1 *tmp36
+  206 read *tmp35 BITMAP *tmp34
+  207 op or *tmp38 *tmp35 *tmp37
+  208 write *tmp38 BITMAP *tmp34
+  209 label *label238
+  210 label *label239
+  211 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  212 label *label240
+  213 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  214 op mod *tmp36 :testAndSetMultiples.0:i 48
+  215 op shl *tmp37 1 *tmp36
+  216 read *tmp35 BITMAP *tmp34
+  217 op or *tmp38 *tmp35 *tmp37
+  218 write *tmp38 BITMAP *tmp34
+  219 label *label241
+  220 label *label242
+  221 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  222 label *label243
+  223 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  224 op mod *tmp36 :testAndSetMultiples.0:i 48
+  225 op shl *tmp37 1 *tmp36
+  226 read *tmp35 BITMAP *tmp34
+  227 op or *tmp38 *tmp35 *tmp37
+  228 write *tmp38 BITMAP *tmp34
+  229 label *label244
+  230 label *label245
+  231 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  232 label *label108
   233 label *label109
   234 label *label110
   235 label *label111

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   100 op idiv :testAndSetMultiples.0:i 169 2
   101 label *label206
   102 label *label207
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  103 op idiv *tmp34 84 48
+  104 op mod *tmp36 84 48
+  105 op shl *tmp37 1 36
+  106 read *tmp35 BITMAP 1
+  107 op or *tmp38 *tmp35 68719476736
+  108 write *tmp38 BITMAP 1
   109 label *label208
   110 label *label209
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  111 op add :testAndSetMultiples.0:i 84 13
   112 label *label210
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  113 op idiv *tmp34 97 48
+  114 op mod *tmp36 97 48
+  115 op shl *tmp37 1 1
+  116 read *tmp35 BITMAP 2
+  117 op or *tmp38 *tmp35 2
+  118 write *tmp38 BITMAP 2
   119 label *label211
   120 label *label212
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  121 op add :testAndSetMultiples.0:i 97 13
   122 label *label213
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  123 op idiv *tmp34 110 48
+  124 op mod *tmp36 110 48
+  125 op shl *tmp37 1 14
+  126 read *tmp35 BITMAP 2
+  127 op or *tmp38 *tmp35 16384
+  128 write *tmp38 BITMAP 2
   129 label *label214
   130 label *label215
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  131 op add :testAndSetMultiples.0:i 110 13
   132 label *label216
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  133 op idiv *tmp34 123 48
+  134 op mod *tmp36 123 48
+  135 op shl *tmp37 1 27
+  136 read *tmp35 BITMAP 2
+  137 op or *tmp38 *tmp35 134217728
+  138 write *tmp38 BITMAP 2
   139 label *label217
   140 label *label218
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  141 op add :testAndSetMultiples.0:i 123 13
   142 label *label219
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  143 op idiv *tmp34 136 48
+  144 op mod *tmp36 136 48
+  145 op shl *tmp37 1 40
+  146 read *tmp35 BITMAP 2
+  147 op or *tmp38 *tmp35 1099511627776
+  148 write *tmp38 BITMAP 2
   149 label *label220
   150 label *label221
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  151 op add :testAndSetMultiples.0:i 136 13
   152 label *label222
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  153 op idiv *tmp34 149 48
+  154 op mod *tmp36 149 48
+  155 op shl *tmp37 1 5
+  156 read *tmp35 BITMAP 3
+  157 op or *tmp38 *tmp35 32
+  158 write *tmp38 BITMAP 3
   159 label *label223
   160 label *label224
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  161 op add :testAndSetMultiples.0:i 149 13
   162 label *label225
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  163 op idiv *tmp34 162 48
+  164 op mod *tmp36 162 48
+  165 op shl *tmp37 1 18
+  166 read *tmp35 BITMAP 3
+  167 op or *tmp38 *tmp35 262144
+  168 write *tmp38 BITMAP 3
   169 label *label226
   170 label *label227
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  171 op add :testAndSetMultiples.0:i 162 13
   172 label *label228
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  173 op idiv *tmp34 175 48
+  174 op mod *tmp36 175 48
+  175 op shl *tmp37 1 31
+  176 read *tmp35 BITMAP 3
+  177 op or *tmp38 *tmp35 2147483648
+  178 write *tmp38 BITMAP 3
   179 label *label229
   180 label *label230
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  181 op add :testAndSetMultiples.0:i 175 13
   182 label *label231
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 188 48
+  184 op mod *tmp36 188 48
+  185 op shl *tmp37 1 44
+  186 read *tmp35 BITMAP 3
+  187 op or *tmp38 *tmp35 17592186044416
+  188 write *tmp38 BITMAP 3
   189 label *label232
   190 label *label233
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  191 op add :testAndSetMultiples.0:i 188 13
   192 label *label234
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 201 48
+  194 op mod *tmp36 201 48
+  195 op shl *tmp37 1 9
+  196 read *tmp35 BITMAP 4
+  197 op or *tmp38 *tmp35 512
+  198 write *tmp38 BITMAP 4
   199 label *label235
   200 label *label236
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  201 op add :testAndSetMultiples.0:i 201 13
   202 label *label237
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  203 op idiv *tmp34 214 48
+  204 op mod *tmp36 214 48
+  205 op shl *tmp37 1 22
+  206 read *tmp35 BITMAP 4
+  207 op or *tmp38 *tmp35 4194304
+  208 write *tmp38 BITMAP 4
   209 label *label238
   210 label *label239
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  211 op add :testAndSetMultiples.0:i 214 13
   212 label *label240
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  213 op idiv *tmp34 227 48
+  214 op mod *tmp36 227 48
+  215 op shl *tmp37 1 35
+  216 read *tmp35 BITMAP 4
+  217 op or *tmp38 *tmp35 34359738368
+  218 write *tmp38 BITMAP 4
   219 label *label241
   220 label *label242
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  221 op add :testAndSetMultiples.0:i 227 13
   222 label *label243
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  223 op idiv *tmp34 240 48
+  224 op mod *tmp36 240 48
+  225 op shl *tmp37 1 0
+  226 read *tmp35 BITMAP 5
+  227 op or *tmp38 *tmp35 1
+  228 write *tmp38 BITMAP 5
   229 label *label244
   230 label *label245
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 13
+  231 op add :testAndSetMultiples.0:i 240 13
   232 label *label108
   233 label *label109
   234 label *label110

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-53 instructions):
 
    97 label *label103
    98 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    99 jump *label109 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 169 2
   100 label *label206
   101 label *label207
-    * op idiv *tmp34 84 48
-    * op mod *tmp36 84 48
-    * op shl *tmp37 1 36
   102 read *tmp35 BITMAP 1
   103 op or *tmp38 *tmp35 68719476736
   104 write *tmp38 BITMAP 1
   105 label *label208
   106 label *label209
-    * op add :testAndSetMultiples.0:i 84 13
   107 label *label210
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   108 read *tmp35 BITMAP 2
   109 op or *tmp38 *tmp35 2
   110 write *tmp38 BITMAP 2
   111 label *label211
   112 label *label212
-    * op add :testAndSetMultiples.0:i 97 13
   113 label *label213
-    * op idiv *tmp34 110 48
-    * op mod *tmp36 110 48
-    * op shl *tmp37 1 14
   114 read *tmp35 BITMAP 2
   115 op or *tmp38 *tmp35 16384
   116 write *tmp38 BITMAP 2
   117 label *label214
   118 label *label215
-    * op add :testAndSetMultiples.0:i 110 13
   119 label *label216
-    * op idiv *tmp34 123 48
-    * op mod *tmp36 123 48
-    * op shl *tmp37 1 27
   120 read *tmp35 BITMAP 2
   121 op or *tmp38 *tmp35 134217728
   122 write *tmp38 BITMAP 2
   123 label *label217
   124 label *label218
-    * op add :testAndSetMultiples.0:i 123 13
   125 label *label219
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   126 read *tmp35 BITMAP 2
   127 op or *tmp38 *tmp35 1099511627776
   128 write *tmp38 BITMAP 2
   129 label *label220
   130 label *label221
-    * op add :testAndSetMultiples.0:i 136 13
   131 label *label222
-    * op idiv *tmp34 149 48
-    * op mod *tmp36 149 48
-    * op shl *tmp37 1 5
   132 read *tmp35 BITMAP 3
   133 op or *tmp38 *tmp35 32
   134 write *tmp38 BITMAP 3
   135 label *label223
   136 label *label224
-    * op add :testAndSetMultiples.0:i 149 13
   137 label *label225
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   138 read *tmp35 BITMAP 3
   139 op or *tmp38 *tmp35 262144
   140 write *tmp38 BITMAP 3
   141 label *label226
   142 label *label227
-    * op add :testAndSetMultiples.0:i 162 13
   143 label *label228
-    * op idiv *tmp34 175 48
-    * op mod *tmp36 175 48
-    * op shl *tmp37 1 31
   144 read *tmp35 BITMAP 3
   145 op or *tmp38 *tmp35 2147483648
   146 write *tmp38 BITMAP 3
   147 label *label229
   148 label *label230
-    * op add :testAndSetMultiples.0:i 175 13
   149 label *label231
-    * op idiv *tmp34 188 48
-    * op mod *tmp36 188 48
-    * op shl *tmp37 1 44
   150 read *tmp35 BITMAP 3
   151 op or *tmp38 *tmp35 17592186044416
   152 write *tmp38 BITMAP 3
   153 label *label232
   154 label *label233
-    * op add :testAndSetMultiples.0:i 188 13
   155 label *label234
-    * op idiv *tmp34 201 48
-    * op mod *tmp36 201 48
-    * op shl *tmp37 1 9
   156 read *tmp35 BITMAP 4
   157 op or *tmp38 *tmp35 512
   158 write *tmp38 BITMAP 4
   159 label *label235
   160 label *label236
-    * op add :testAndSetMultiples.0:i 201 13
   161 label *label237
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   162 read *tmp35 BITMAP 4
   163 op or *tmp38 *tmp35 4194304
   164 write *tmp38 BITMAP 4
   165 label *label238
   166 label *label239
-    * op add :testAndSetMultiples.0:i 214 13
   167 label *label240
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   168 read *tmp35 BITMAP 4
   169 op or *tmp38 *tmp35 34359738368
   170 write *tmp38 BITMAP 4
   171 label *label241
   172 label *label242
-    * op add :testAndSetMultiples.0:i 227 13
   173 label *label243
-    * op idiv *tmp34 240 48
-    * op mod *tmp36 240 48
-    * op shl *tmp37 1 0
   174 read *tmp35 BITMAP 5
   175 op or *tmp38 *tmp35 1
   176 write *tmp38 BITMAP 5
   177 label *label244
   178 label *label245
-    * op add :testAndSetMultiples.0:i 240 13
   179 label *label108
   180 label *label109
   181 label *label110

Modifications by Unroll loop at line 17:9 (+117 instructions):
 
    68 label *label90
    69 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    70 jump *label96 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
-    * label *label91
-    * jump *label95 greaterThan 60 250
-    * label *label92
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label93
-    * label *label94
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
-    * jump *label92 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label95
+   71 op idiv :testAndSetMultiples.0:i 121 2
+   72 label *label246
+   73 label *label247
+   74 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   75 op mod *tmp36 :testAndSetMultiples.0:i 48
+   76 op shl *tmp37 1 *tmp36
+   77 read *tmp35 BITMAP *tmp34
+   78 op or *tmp38 *tmp35 *tmp37
+   79 write *tmp38 BITMAP *tmp34
+   80 label *label248
+   81 label *label249
+   82 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   83 label *label250
+   84 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   85 op mod *tmp36 :testAndSetMultiples.0:i 48
+   86 op shl *tmp37 1 *tmp36
+   87 read *tmp35 BITMAP *tmp34
+   88 op or *tmp38 *tmp35 *tmp37
+   89 write *tmp38 BITMAP *tmp34
+   90 label *label251
+   91 label *label252
+   92 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   93 label *label253
+   94 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   95 op mod *tmp36 :testAndSetMultiples.0:i 48
+   96 op shl *tmp37 1 *tmp36
+   97 read *tmp35 BITMAP *tmp34
+   98 op or *tmp38 *tmp35 *tmp37
+   99 write *tmp38 BITMAP *tmp34
+  100 label *label254
+  101 label *label255
+  102 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  103 label *label256
+  104 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  105 op mod *tmp36 :testAndSetMultiples.0:i 48
+  106 op shl *tmp37 1 *tmp36
+  107 read *tmp35 BITMAP *tmp34
+  108 op or *tmp38 *tmp35 *tmp37
+  109 write *tmp38 BITMAP *tmp34
+  110 label *label257
+  111 label *label258
+  112 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  113 label *label259
+  114 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  115 op mod *tmp36 :testAndSetMultiples.0:i 48
+  116 op shl *tmp37 1 *tmp36
+  117 read *tmp35 BITMAP *tmp34
+  118 op or *tmp38 *tmp35 *tmp37
+  119 write *tmp38 BITMAP *tmp34
+  120 label *label260
+  121 label *label261
+  122 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  123 label *label262
+  124 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  125 op mod *tmp36 :testAndSetMultiples.0:i 48
+  126 op shl *tmp37 1 *tmp36
+  127 read *tmp35 BITMAP *tmp34
+  128 op or *tmp38 *tmp35 *tmp37
+  129 write *tmp38 BITMAP *tmp34
+  130 label *label263
+  131 label *label264
+  132 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  133 label *label265
+  134 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  135 op mod *tmp36 :testAndSetMultiples.0:i 48
+  136 op shl *tmp37 1 *tmp36
+  137 read *tmp35 BITMAP *tmp34
+  138 op or *tmp38 *tmp35 *tmp37
+  139 write *tmp38 BITMAP *tmp34
+  140 label *label266
+  141 label *label267
+  142 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  143 label *label268
+  144 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  145 op mod *tmp36 :testAndSetMultiples.0:i 48
+  146 op shl *tmp37 1 *tmp36
+  147 read *tmp35 BITMAP *tmp34
+  148 op or *tmp38 *tmp35 *tmp37
+  149 write *tmp38 BITMAP *tmp34
+  150 label *label269
+  151 label *label270
+  152 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  153 label *label271
+  154 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  155 op mod *tmp36 :testAndSetMultiples.0:i 48
+  156 op shl *tmp37 1 *tmp36
+  157 read *tmp35 BITMAP *tmp34
+  158 op or *tmp38 *tmp35 *tmp37
+  159 write *tmp38 BITMAP *tmp34
+  160 label *label272
+  161 label *label273
+  162 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  163 label *label274
+  164 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  165 op mod *tmp36 :testAndSetMultiples.0:i 48
+  166 op shl *tmp37 1 *tmp36
+  167 read *tmp35 BITMAP *tmp34
+  168 op or *tmp38 *tmp35 *tmp37
+  169 write *tmp38 BITMAP *tmp34
+  170 label *label275
+  171 label *label276
+  172 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  173 label *label277
+  174 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  175 op mod *tmp36 :testAndSetMultiples.0:i 48
+  176 op shl *tmp37 1 *tmp36
+  177 read *tmp35 BITMAP *tmp34
+  178 op or *tmp38 *tmp35 *tmp37
+  179 write *tmp38 BITMAP *tmp34
+  180 label *label278
+  181 label *label279
+  182 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  183 label *label280
+  184 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  185 op mod *tmp36 :testAndSetMultiples.0:i 48
+  186 op shl *tmp37 1 *tmp36
+  187 read *tmp35 BITMAP *tmp34
+  188 op or *tmp38 *tmp35 *tmp37
+  189 write *tmp38 BITMAP *tmp34
+  190 label *label281
+  191 label *label282
+  192 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  193 label *label283
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label284
+  201 label *label285
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  203 label *label286
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label287
+  211 label *label288
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  213 label *label289
+  214 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  215 op mod *tmp36 :testAndSetMultiples.0:i 48
+  216 op shl *tmp37 1 *tmp36
+  217 read *tmp35 BITMAP *tmp34
+  218 op or *tmp38 *tmp35 *tmp37
+  219 write *tmp38 BITMAP *tmp34
+  220 label *label290
+  221 label *label291
+  222 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  223 label *label292
+  224 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  225 op mod *tmp36 :testAndSetMultiples.0:i 48
+  226 op shl *tmp37 1 *tmp36
+  227 read *tmp35 BITMAP *tmp34
+  228 op or *tmp38 *tmp35 *tmp37
+  229 write *tmp38 BITMAP *tmp34
+  230 label *label293
+  231 label *label294
+  232 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  233 label *label295
+  234 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  235 op mod *tmp36 :testAndSetMultiples.0:i 48
+  236 op shl *tmp37 1 *tmp36
+  237 read *tmp35 BITMAP *tmp34
+  238 op or *tmp38 *tmp35 *tmp37
+  239 write *tmp38 BITMAP *tmp34
+  240 label *label296
+  241 label *label297
+  242 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  243 label *label298
+  244 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  245 op mod *tmp36 :testAndSetMultiples.0:i 48
+  246 op shl *tmp37 1 *tmp36
+  247 read *tmp35 BITMAP *tmp34
+  248 op or *tmp38 *tmp35 *tmp37
+  249 write *tmp38 BITMAP *tmp34
+  250 label *label299
+  251 label *label300
+  252 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  253 label *label95
   254 label *label96
   255 label *label97
   256 label *label98

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    71 op idiv :testAndSetMultiples.0:i 121 2
    72 label *label246
    73 label *label247
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   74 op idiv *tmp34 60 48
+   75 op mod *tmp36 60 48
+   76 op shl *tmp37 1 12
+   77 read *tmp35 BITMAP 1
+   78 op or *tmp38 *tmp35 4096
+   79 write *tmp38 BITMAP 1
    80 label *label248
    81 label *label249
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   82 op add :testAndSetMultiples.0:i 60 11
    83 label *label250
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   84 op idiv *tmp34 71 48
+   85 op mod *tmp36 71 48
+   86 op shl *tmp37 1 23
+   87 read *tmp35 BITMAP 1
+   88 op or *tmp38 *tmp35 8388608
+   89 write *tmp38 BITMAP 1
    90 label *label251
    91 label *label252
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+   92 op add :testAndSetMultiples.0:i 71 11
    93 label *label253
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   94 op idiv *tmp34 82 48
+   95 op mod *tmp36 82 48
+   96 op shl *tmp37 1 34
+   97 read *tmp35 BITMAP 1
+   98 op or *tmp38 *tmp35 17179869184
+   99 write *tmp38 BITMAP 1
   100 label *label254
   101 label *label255
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  102 op add :testAndSetMultiples.0:i 82 11
   103 label *label256
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  104 op idiv *tmp34 93 48
+  105 op mod *tmp36 93 48
+  106 op shl *tmp37 1 45
+  107 read *tmp35 BITMAP 1
+  108 op or *tmp38 *tmp35 35184372088832
+  109 write *tmp38 BITMAP 1
   110 label *label257
   111 label *label258
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  112 op add :testAndSetMultiples.0:i 93 11
   113 label *label259
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  114 op idiv *tmp34 104 48
+  115 op mod *tmp36 104 48
+  116 op shl *tmp37 1 8
+  117 read *tmp35 BITMAP 2
+  118 op or *tmp38 *tmp35 256
+  119 write *tmp38 BITMAP 2
   120 label *label260
   121 label *label261
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  122 op add :testAndSetMultiples.0:i 104 11
   123 label *label262
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  124 op idiv *tmp34 115 48
+  125 op mod *tmp36 115 48
+  126 op shl *tmp37 1 19
+  127 read *tmp35 BITMAP 2
+  128 op or *tmp38 *tmp35 524288
+  129 write *tmp38 BITMAP 2
   130 label *label263
   131 label *label264
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  132 op add :testAndSetMultiples.0:i 115 11
   133 label *label265
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  134 op idiv *tmp34 126 48
+  135 op mod *tmp36 126 48
+  136 op shl *tmp37 1 30
+  137 read *tmp35 BITMAP 2
+  138 op or *tmp38 *tmp35 1073741824
+  139 write *tmp38 BITMAP 2
   140 label *label266
   141 label *label267
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  142 op add :testAndSetMultiples.0:i 126 11
   143 label *label268
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  144 op idiv *tmp34 137 48
+  145 op mod *tmp36 137 48
+  146 op shl *tmp37 1 41
+  147 read *tmp35 BITMAP 2
+  148 op or *tmp38 *tmp35 2199023255552
+  149 write *tmp38 BITMAP 2
   150 label *label269
   151 label *label270
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  152 op add :testAndSetMultiples.0:i 137 11
   153 label *label271
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  154 op idiv *tmp34 148 48
+  155 op mod *tmp36 148 48
+  156 op shl *tmp37 1 4
+  157 read *tmp35 BITMAP 3
+  158 op or *tmp38 *tmp35 16
+  159 write *tmp38 BITMAP 3
   160 label *label272
   161 label *label273
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  162 op add :testAndSetMultiples.0:i 148 11
   163 label *label274
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  164 op idiv *tmp34 159 48
+  165 op mod *tmp36 159 48
+  166 op shl *tmp37 1 15
+  167 read *tmp35 BITMAP 3
+  168 op or *tmp38 *tmp35 32768
+  169 write *tmp38 BITMAP 3
   170 label *label275
   171 label *label276
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  172 op add :testAndSetMultiples.0:i 159 11
   173 label *label277
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  174 op idiv *tmp34 170 48
+  175 op mod *tmp36 170 48
+  176 op shl *tmp37 1 26
+  177 read *tmp35 BITMAP 3
+  178 op or *tmp38 *tmp35 67108864
+  179 write *tmp38 BITMAP 3
   180 label *label278
   181 label *label279
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  182 op add :testAndSetMultiples.0:i 170 11
   183 label *label280
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  184 op idiv *tmp34 181 48
+  185 op mod *tmp36 181 48
+  186 op shl *tmp37 1 37
+  187 read *tmp35 BITMAP 3
+  188 op or *tmp38 *tmp35 137438953472
+  189 write *tmp38 BITMAP 3
   190 label *label281
   191 label *label282
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  192 op add :testAndSetMultiples.0:i 181 11
   193 label *label283
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 192 48
+  195 op mod *tmp36 192 48
+  196 op shl *tmp37 1 0
+  197 read *tmp35 BITMAP 4
+  198 op or *tmp38 *tmp35 1
+  199 write *tmp38 BITMAP 4
   200 label *label284
   201 label *label285
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  202 op add :testAndSetMultiples.0:i 192 11
   203 label *label286
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 203 48
+  205 op mod *tmp36 203 48
+  206 op shl *tmp37 1 11
+  207 read *tmp35 BITMAP 4
+  208 op or *tmp38 *tmp35 2048
+  209 write *tmp38 BITMAP 4
   210 label *label287
   211 label *label288
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  212 op add :testAndSetMultiples.0:i 203 11
   213 label *label289
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  214 op idiv *tmp34 214 48
+  215 op mod *tmp36 214 48
+  216 op shl *tmp37 1 22
+  217 read *tmp35 BITMAP 4
+  218 op or *tmp38 *tmp35 4194304
+  219 write *tmp38 BITMAP 4
   220 label *label290
   221 label *label291
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  222 op add :testAndSetMultiples.0:i 214 11
   223 label *label292
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  224 op idiv *tmp34 225 48
+  225 op mod *tmp36 225 48
+  226 op shl *tmp37 1 33
+  227 read *tmp35 BITMAP 4
+  228 op or *tmp38 *tmp35 8589934592
+  229 write *tmp38 BITMAP 4
   230 label *label293
   231 label *label294
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  232 op add :testAndSetMultiples.0:i 225 11
   233 label *label295
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  234 op idiv *tmp34 236 48
+  235 op mod *tmp36 236 48
+  236 op shl *tmp37 1 44
+  237 read *tmp35 BITMAP 4
+  238 op or *tmp38 *tmp35 17592186044416
+  239 write *tmp38 BITMAP 4
   240 label *label296
   241 label *label297
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  242 op add :testAndSetMultiples.0:i 236 11
   243 label *label298
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  244 op idiv *tmp34 247 48
+  245 op mod *tmp36 247 48
+  246 op shl *tmp37 1 7
+  247 read *tmp35 BITMAP 5
+  248 op or *tmp38 *tmp35 128
+  249 write *tmp38 BITMAP 5
   250 label *label299
   251 label *label300
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 11
+  252 op add :testAndSetMultiples.0:i 247 11
   253 label *label95
   254 label *label96
   255 label *label97

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-73 instructions):
 
    68 label *label90
    69 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    70 jump *label96 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 121 2
    71 label *label246
    72 label *label247
-    * op idiv *tmp34 60 48
-    * op mod *tmp36 60 48
-    * op shl *tmp37 1 12
    73 read *tmp35 BITMAP 1
    74 op or *tmp38 *tmp35 4096
    75 write *tmp38 BITMAP 1
    76 label *label248
    77 label *label249
-    * op add :testAndSetMultiples.0:i 60 11
    78 label *label250
-    * op idiv *tmp34 71 48
-    * op mod *tmp36 71 48
-    * op shl *tmp37 1 23
    79 read *tmp35 BITMAP 1
    80 op or *tmp38 *tmp35 8388608
    81 write *tmp38 BITMAP 1
    82 label *label251
    83 label *label252
-    * op add :testAndSetMultiples.0:i 71 11
    84 label *label253
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
    85 read *tmp35 BITMAP 1
    86 op or *tmp38 *tmp35 17179869184
    87 write *tmp38 BITMAP 1
    88 label *label254
    89 label *label255
-    * op add :testAndSetMultiples.0:i 82 11
    90 label *label256
-    * op idiv *tmp34 93 48
-    * op mod *tmp36 93 48
-    * op shl *tmp37 1 45
    91 read *tmp35 BITMAP 1
    92 op or *tmp38 *tmp35 35184372088832
    93 write *tmp38 BITMAP 1
    94 label *label257
    95 label *label258
-    * op add :testAndSetMultiples.0:i 93 11
    96 label *label259
-    * op idiv *tmp34 104 48
-    * op mod *tmp36 104 48
-    * op shl *tmp37 1 8
    97 read *tmp35 BITMAP 2
    98 op or *tmp38 *tmp35 256
    99 write *tmp38 BITMAP 2
   100 label *label260
   101 label *label261
-    * op add :testAndSetMultiples.0:i 104 11
   102 label *label262
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   103 read *tmp35 BITMAP 2
   104 op or *tmp38 *tmp35 524288
   105 write *tmp38 BITMAP 2
   106 label *label263
   107 label *label264
-    * op add :testAndSetMultiples.0:i 115 11
   108 label *label265
-    * op idiv *tmp34 126 48
-    * op mod *tmp36 126 48
-    * op shl *tmp37 1 30
   109 read *tmp35 BITMAP 2
   110 op or *tmp38 *tmp35 1073741824
   111 write *tmp38 BITMAP 2
   112 label *label266
   113 label *label267
-    * op add :testAndSetMultiples.0:i 126 11
   114 label *label268
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   115 read *tmp35 BITMAP 2
   116 op or *tmp38 *tmp35 2199023255552
   117 write *tmp38 BITMAP 2
   118 label *label269
   119 label *label270
-    * op add :testAndSetMultiples.0:i 137 11
   120 label *label271
-    * op idiv *tmp34 148 48
-    * op mod *tmp36 148 48
-    * op shl *tmp37 1 4
   121 read *tmp35 BITMAP 3
   122 op or *tmp38 *tmp35 16
   123 write *tmp38 BITMAP 3
   124 label *label272
   125 label *label273
-    * op add :testAndSetMultiples.0:i 148 11
   126 label *label274
-    * op idiv *tmp34 159 48
-    * op mod *tmp36 159 48
-    * op shl *tmp37 1 15
   127 read *tmp35 BITMAP 3
   128 op or *tmp38 *tmp35 32768
   129 write *tmp38 BITMAP 3
   130 label *label275
   131 label *label276
-    * op add :testAndSetMultiples.0:i 159 11
   132 label *label277
-    * op idiv *tmp34 170 48
-    * op mod *tmp36 170 48
-    * op shl *tmp37 1 26
   133 read *tmp35 BITMAP 3
   134 op or *tmp38 *tmp35 67108864
   135 write *tmp38 BITMAP 3
   136 label *label278
   137 label *label279
-    * op add :testAndSetMultiples.0:i 170 11
   138 label *label280
-    * op idiv *tmp34 181 48
-    * op mod *tmp36 181 48
-    * op shl *tmp37 1 37
   139 read *tmp35 BITMAP 3
   140 op or *tmp38 *tmp35 137438953472
   141 write *tmp38 BITMAP 3
   142 label *label281
   143 label *label282
-    * op add :testAndSetMultiples.0:i 181 11
   144 label *label283
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   145 read *tmp35 BITMAP 4
   146 op or *tmp38 *tmp35 1
   147 write *tmp38 BITMAP 4
   148 label *label284
   149 label *label285
-    * op add :testAndSetMultiples.0:i 192 11
   150 label *label286
-    * op idiv *tmp34 203 48
-    * op mod *tmp36 203 48
-    * op shl *tmp37 1 11
   151 read *tmp35 BITMAP 4
   152 op or *tmp38 *tmp35 2048
   153 write *tmp38 BITMAP 4
   154 label *label287
   155 label *label288
-    * op add :testAndSetMultiples.0:i 203 11
   156 label *label289
-    * op idiv *tmp34 214 48
-    * op mod *tmp36 214 48
-    * op shl *tmp37 1 22
   157 read *tmp35 BITMAP 4
   158 op or *tmp38 *tmp35 4194304
   159 write *tmp38 BITMAP 4
   160 label *label290
   161 label *label291
-    * op add :testAndSetMultiples.0:i 214 11
   162 label *label292
-    * op idiv *tmp34 225 48
-    * op mod *tmp36 225 48
-    * op shl *tmp37 1 33
   163 read *tmp35 BITMAP 4
   164 op or *tmp38 *tmp35 8589934592
   165 write *tmp38 BITMAP 4
   166 label *label293
   167 label *label294
-    * op add :testAndSetMultiples.0:i 225 11
   168 label *label295
-    * op idiv *tmp34 236 48
-    * op mod *tmp36 236 48
-    * op shl *tmp37 1 44
   169 read *tmp35 BITMAP 4
   170 op or *tmp38 *tmp35 17592186044416
   171 write *tmp38 BITMAP 4
   172 label *label296
   173 label *label297
-    * op add :testAndSetMultiples.0:i 236 11
   174 label *label298
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   175 read *tmp35 BITMAP 5
   176 op or *tmp38 *tmp35 128
   177 write *tmp38 BITMAP 5
   178 label *label299
   179 label *label300
-    * op add :testAndSetMultiples.0:i 247 11
   180 label *label95
   181 label *label96
   182 label *label97

Modifications by Unroll loop at line 17:9 (+222 instructions):
 
    37 label *label75
    38 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    39 jump *label81 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
-    * label *label76
-    * jump *label80 greaterThan 24 250
-    * label *label77
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label78
-    * label *label79
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
-    * jump *label77 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label80
+   40 op idiv :testAndSetMultiples.0:i 49 2
+   41 label *label301
+   42 label *label302
+   43 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   44 op mod *tmp36 :testAndSetMultiples.0:i 48
+   45 op shl *tmp37 1 *tmp36
+   46 read *tmp35 BITMAP *tmp34
+   47 op or *tmp38 *tmp35 *tmp37
+   48 write *tmp38 BITMAP *tmp34
+   49 label *label303
+   50 label *label304
+   51 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   52 label *label305
+   53 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   54 op mod *tmp36 :testAndSetMultiples.0:i 48
+   55 op shl *tmp37 1 *tmp36
+   56 read *tmp35 BITMAP *tmp34
+   57 op or *tmp38 *tmp35 *tmp37
+   58 write *tmp38 BITMAP *tmp34
+   59 label *label306
+   60 label *label307
+   61 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   62 label *label308
+   63 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   64 op mod *tmp36 :testAndSetMultiples.0:i 48
+   65 op shl *tmp37 1 *tmp36
+   66 read *tmp35 BITMAP *tmp34
+   67 op or *tmp38 *tmp35 *tmp37
+   68 write *tmp38 BITMAP *tmp34
+   69 label *label309
+   70 label *label310
+   71 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   72 label *label311
+   73 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   74 op mod *tmp36 :testAndSetMultiples.0:i 48
+   75 op shl *tmp37 1 *tmp36
+   76 read *tmp35 BITMAP *tmp34
+   77 op or *tmp38 *tmp35 *tmp37
+   78 write *tmp38 BITMAP *tmp34
+   79 label *label312
+   80 label *label313
+   81 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   82 label *label314
+   83 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   84 op mod *tmp36 :testAndSetMultiples.0:i 48
+   85 op shl *tmp37 1 *tmp36
+   86 read *tmp35 BITMAP *tmp34
+   87 op or *tmp38 *tmp35 *tmp37
+   88 write *tmp38 BITMAP *tmp34
+   89 label *label315
+   90 label *label316
+   91 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   92 label *label317
+   93 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   94 op mod *tmp36 :testAndSetMultiples.0:i 48
+   95 op shl *tmp37 1 *tmp36
+   96 read *tmp35 BITMAP *tmp34
+   97 op or *tmp38 *tmp35 *tmp37
+   98 write *tmp38 BITMAP *tmp34
+   99 label *label318
+  100 label *label319
+  101 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  102 label *label320
+  103 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  104 op mod *tmp36 :testAndSetMultiples.0:i 48
+  105 op shl *tmp37 1 *tmp36
+  106 read *tmp35 BITMAP *tmp34
+  107 op or *tmp38 *tmp35 *tmp37
+  108 write *tmp38 BITMAP *tmp34
+  109 label *label321
+  110 label *label322
+  111 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  112 label *label323
+  113 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  114 op mod *tmp36 :testAndSetMultiples.0:i 48
+  115 op shl *tmp37 1 *tmp36
+  116 read *tmp35 BITMAP *tmp34
+  117 op or *tmp38 *tmp35 *tmp37
+  118 write *tmp38 BITMAP *tmp34
+  119 label *label324
+  120 label *label325
+  121 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  122 label *label326
+  123 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  124 op mod *tmp36 :testAndSetMultiples.0:i 48
+  125 op shl *tmp37 1 *tmp36
+  126 read *tmp35 BITMAP *tmp34
+  127 op or *tmp38 *tmp35 *tmp37
+  128 write *tmp38 BITMAP *tmp34
+  129 label *label327
+  130 label *label328
+  131 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  132 label *label329
+  133 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  134 op mod *tmp36 :testAndSetMultiples.0:i 48
+  135 op shl *tmp37 1 *tmp36
+  136 read *tmp35 BITMAP *tmp34
+  137 op or *tmp38 *tmp35 *tmp37
+  138 write *tmp38 BITMAP *tmp34
+  139 label *label330
+  140 label *label331
+  141 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  142 label *label332
+  143 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  144 op mod *tmp36 :testAndSetMultiples.0:i 48
+  145 op shl *tmp37 1 *tmp36
+  146 read *tmp35 BITMAP *tmp34
+  147 op or *tmp38 *tmp35 *tmp37
+  148 write *tmp38 BITMAP *tmp34
+  149 label *label333
+  150 label *label334
+  151 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  152 label *label335
+  153 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  154 op mod *tmp36 :testAndSetMultiples.0:i 48
+  155 op shl *tmp37 1 *tmp36
+  156 read *tmp35 BITMAP *tmp34
+  157 op or *tmp38 *tmp35 *tmp37
+  158 write *tmp38 BITMAP *tmp34
+  159 label *label336
+  160 label *label337
+  161 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  162 label *label338
+  163 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  164 op mod *tmp36 :testAndSetMultiples.0:i 48
+  165 op shl *tmp37 1 *tmp36
+  166 read *tmp35 BITMAP *tmp34
+  167 op or *tmp38 *tmp35 *tmp37
+  168 write *tmp38 BITMAP *tmp34
+  169 label *label339
+  170 label *label340
+  171 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  172 label *label341
+  173 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  174 op mod *tmp36 :testAndSetMultiples.0:i 48
+  175 op shl *tmp37 1 *tmp36
+  176 read *tmp35 BITMAP *tmp34
+  177 op or *tmp38 *tmp35 *tmp37
+  178 write *tmp38 BITMAP *tmp34
+  179 label *label342
+  180 label *label343
+  181 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  182 label *label344
+  183 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  184 op mod *tmp36 :testAndSetMultiples.0:i 48
+  185 op shl *tmp37 1 *tmp36
+  186 read *tmp35 BITMAP *tmp34
+  187 op or *tmp38 *tmp35 *tmp37
+  188 write *tmp38 BITMAP *tmp34
+  189 label *label345
+  190 label *label346
+  191 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  192 label *label347
+  193 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  194 op mod *tmp36 :testAndSetMultiples.0:i 48
+  195 op shl *tmp37 1 *tmp36
+  196 read *tmp35 BITMAP *tmp34
+  197 op or *tmp38 *tmp35 *tmp37
+  198 write *tmp38 BITMAP *tmp34
+  199 label *label348
+  200 label *label349
+  201 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  202 label *label350
+  203 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  204 op mod *tmp36 :testAndSetMultiples.0:i 48
+  205 op shl *tmp37 1 *tmp36
+  206 read *tmp35 BITMAP *tmp34
+  207 op or *tmp38 *tmp35 *tmp37
+  208 write *tmp38 BITMAP *tmp34
+  209 label *label351
+  210 label *label352
+  211 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  212 label *label353
+  213 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  214 op mod *tmp36 :testAndSetMultiples.0:i 48
+  215 op shl *tmp37 1 *tmp36
+  216 read *tmp35 BITMAP *tmp34
+  217 op or *tmp38 *tmp35 *tmp37
+  218 write *tmp38 BITMAP *tmp34
+  219 label *label354
+  220 label *label355
+  221 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  222 label *label356
+  223 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  224 op mod *tmp36 :testAndSetMultiples.0:i 48
+  225 op shl *tmp37 1 *tmp36
+  226 read *tmp35 BITMAP *tmp34
+  227 op or *tmp38 *tmp35 *tmp37
+  228 write *tmp38 BITMAP *tmp34
+  229 label *label357
+  230 label *label358
+  231 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  232 label *label359
+  233 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  234 op mod *tmp36 :testAndSetMultiples.0:i 48
+  235 op shl *tmp37 1 *tmp36
+  236 read *tmp35 BITMAP *tmp34
+  237 op or *tmp38 *tmp35 *tmp37
+  238 write *tmp38 BITMAP *tmp34
+  239 label *label360
+  240 label *label361
+  241 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  242 label *label362
+  243 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  244 op mod *tmp36 :testAndSetMultiples.0:i 48
+  245 op shl *tmp37 1 *tmp36
+  246 read *tmp35 BITMAP *tmp34
+  247 op or *tmp38 *tmp35 *tmp37
+  248 write *tmp38 BITMAP *tmp34
+  249 label *label363
+  250 label *label364
+  251 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  252 label *label365
+  253 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  254 op mod *tmp36 :testAndSetMultiples.0:i 48
+  255 op shl *tmp37 1 *tmp36
+  256 read *tmp35 BITMAP *tmp34
+  257 op or *tmp38 *tmp35 *tmp37
+  258 write *tmp38 BITMAP *tmp34
+  259 label *label366
+  260 label *label367
+  261 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  262 label *label368
+  263 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  264 op mod *tmp36 :testAndSetMultiples.0:i 48
+  265 op shl *tmp37 1 *tmp36
+  266 read *tmp35 BITMAP *tmp34
+  267 op or *tmp38 *tmp35 *tmp37
+  268 write *tmp38 BITMAP *tmp34
+  269 label *label369
+  270 label *label370
+  271 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  272 label *label371
+  273 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  274 op mod *tmp36 :testAndSetMultiples.0:i 48
+  275 op shl *tmp37 1 *tmp36
+  276 read *tmp35 BITMAP *tmp34
+  277 op or *tmp38 *tmp35 *tmp37
+  278 write *tmp38 BITMAP *tmp34
+  279 label *label372
+  280 label *label373
+  281 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  282 label *label374
+  283 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  284 op mod *tmp36 :testAndSetMultiples.0:i 48
+  285 op shl *tmp37 1 *tmp36
+  286 read *tmp35 BITMAP *tmp34
+  287 op or *tmp38 *tmp35 *tmp37
+  288 write *tmp38 BITMAP *tmp34
+  289 label *label375
+  290 label *label376
+  291 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  292 label *label377
+  293 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  294 op mod *tmp36 :testAndSetMultiples.0:i 48
+  295 op shl *tmp37 1 *tmp36
+  296 read *tmp35 BITMAP *tmp34
+  297 op or *tmp38 *tmp35 *tmp37
+  298 write *tmp38 BITMAP *tmp34
+  299 label *label378
+  300 label *label379
+  301 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  302 label *label380
+  303 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  304 op mod *tmp36 :testAndSetMultiples.0:i 48
+  305 op shl *tmp37 1 *tmp36
+  306 read *tmp35 BITMAP *tmp34
+  307 op or *tmp38 *tmp35 *tmp37
+  308 write *tmp38 BITMAP *tmp34
+  309 label *label381
+  310 label *label382
+  311 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  312 label *label383
+  313 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  314 op mod *tmp36 :testAndSetMultiples.0:i 48
+  315 op shl *tmp37 1 *tmp36
+  316 read *tmp35 BITMAP *tmp34
+  317 op or *tmp38 *tmp35 *tmp37
+  318 write *tmp38 BITMAP *tmp34
+  319 label *label384
+  320 label *label385
+  321 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  322 label *label386
+  323 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  324 op mod *tmp36 :testAndSetMultiples.0:i 48
+  325 op shl *tmp37 1 *tmp36
+  326 read *tmp35 BITMAP *tmp34
+  327 op or *tmp38 *tmp35 *tmp37
+  328 write *tmp38 BITMAP *tmp34
+  329 label *label387
+  330 label *label388
+  331 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  332 label *label389
+  333 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  334 op mod *tmp36 :testAndSetMultiples.0:i 48
+  335 op shl *tmp37 1 *tmp36
+  336 read *tmp35 BITMAP *tmp34
+  337 op or *tmp38 *tmp35 *tmp37
+  338 write *tmp38 BITMAP *tmp34
+  339 label *label390
+  340 label *label391
+  341 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  342 label *label392
+  343 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  344 op mod *tmp36 :testAndSetMultiples.0:i 48
+  345 op shl *tmp37 1 *tmp36
+  346 read *tmp35 BITMAP *tmp34
+  347 op or *tmp38 *tmp35 *tmp37
+  348 write *tmp38 BITMAP *tmp34
+  349 label *label393
+  350 label *label394
+  351 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  352 label *label395
+  353 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  354 op mod *tmp36 :testAndSetMultiples.0:i 48
+  355 op shl *tmp37 1 *tmp36
+  356 read *tmp35 BITMAP *tmp34
+  357 op or *tmp38 *tmp35 *tmp37
+  358 write *tmp38 BITMAP *tmp34
+  359 label *label396
+  360 label *label397
+  361 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  362 label *label398
+  363 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  364 op mod *tmp36 :testAndSetMultiples.0:i 48
+  365 op shl *tmp37 1 *tmp36
+  366 read *tmp35 BITMAP *tmp34
+  367 op or *tmp38 *tmp35 *tmp37
+  368 write *tmp38 BITMAP *tmp34
+  369 label *label399
+  370 label *label400
+  371 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  372 label *label80
   373 label *label81
   374 label *label82
   375 label *label83

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    40 op idiv :testAndSetMultiples.0:i 49 2
    41 label *label301
    42 label *label302
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   43 op idiv *tmp34 24 48
+   44 op mod *tmp36 24 48
+   45 op shl *tmp37 1 24
+   46 read *tmp35 BITMAP 0
+   47 op or *tmp38 *tmp35 16777216
+   48 write *tmp38 BITMAP 0
    49 label *label303
    50 label *label304
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   51 op add :testAndSetMultiples.0:i 24 7
    52 label *label305
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   53 op idiv *tmp34 31 48
+   54 op mod *tmp36 31 48
+   55 op shl *tmp37 1 31
+   56 read *tmp35 BITMAP 0
+   57 op or *tmp38 *tmp35 2147483648
+   58 write *tmp38 BITMAP 0
    59 label *label306
    60 label *label307
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   61 op add :testAndSetMultiples.0:i 31 7
    62 label *label308
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   63 op idiv *tmp34 38 48
+   64 op mod *tmp36 38 48
+   65 op shl *tmp37 1 38
+   66 read *tmp35 BITMAP 0
+   67 op or *tmp38 *tmp35 274877906944
+   68 write *tmp38 BITMAP 0
    69 label *label309
    70 label *label310
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   71 op add :testAndSetMultiples.0:i 38 7
    72 label *label311
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   73 op idiv *tmp34 45 48
+   74 op mod *tmp36 45 48
+   75 op shl *tmp37 1 45
+   76 read *tmp35 BITMAP 0
+   77 op or *tmp38 *tmp35 35184372088832
+   78 write *tmp38 BITMAP 0
    79 label *label312
    80 label *label313
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   81 op add :testAndSetMultiples.0:i 45 7
    82 label *label314
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   83 op idiv *tmp34 52 48
+   84 op mod *tmp36 52 48
+   85 op shl *tmp37 1 4
+   86 read *tmp35 BITMAP 1
+   87 op or *tmp38 *tmp35 16
+   88 write *tmp38 BITMAP 1
    89 label *label315
    90 label *label316
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+   91 op add :testAndSetMultiples.0:i 52 7
    92 label *label317
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   93 op idiv *tmp34 59 48
+   94 op mod *tmp36 59 48
+   95 op shl *tmp37 1 11
+   96 read *tmp35 BITMAP 1
+   97 op or *tmp38 *tmp35 2048
+   98 write *tmp38 BITMAP 1
    99 label *label318
   100 label *label319
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  101 op add :testAndSetMultiples.0:i 59 7
   102 label *label320
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  103 op idiv *tmp34 66 48
+  104 op mod *tmp36 66 48
+  105 op shl *tmp37 1 18
+  106 read *tmp35 BITMAP 1
+  107 op or *tmp38 *tmp35 262144
+  108 write *tmp38 BITMAP 1
   109 label *label321
   110 label *label322
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  111 op add :testAndSetMultiples.0:i 66 7
   112 label *label323
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  113 op idiv *tmp34 73 48
+  114 op mod *tmp36 73 48
+  115 op shl *tmp37 1 25
+  116 read *tmp35 BITMAP 1
+  117 op or *tmp38 *tmp35 33554432
+  118 write *tmp38 BITMAP 1
   119 label *label324
   120 label *label325
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  121 op add :testAndSetMultiples.0:i 73 7
   122 label *label326
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  123 op idiv *tmp34 80 48
+  124 op mod *tmp36 80 48
+  125 op shl *tmp37 1 32
+  126 read *tmp35 BITMAP 1
+  127 op or *tmp38 *tmp35 4294967296
+  128 write *tmp38 BITMAP 1
   129 label *label327
   130 label *label328
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  131 op add :testAndSetMultiples.0:i 80 7
   132 label *label329
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  133 op idiv *tmp34 87 48
+  134 op mod *tmp36 87 48
+  135 op shl *tmp37 1 39
+  136 read *tmp35 BITMAP 1
+  137 op or *tmp38 *tmp35 549755813888
+  138 write *tmp38 BITMAP 1
   139 label *label330
   140 label *label331
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  141 op add :testAndSetMultiples.0:i 87 7
   142 label *label332
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  143 op idiv *tmp34 94 48
+  144 op mod *tmp36 94 48
+  145 op shl *tmp37 1 46
+  146 read *tmp35 BITMAP 1
+  147 op or *tmp38 *tmp35 70368744177664
+  148 write *tmp38 BITMAP 1
   149 label *label333
   150 label *label334
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  151 op add :testAndSetMultiples.0:i 94 7
   152 label *label335
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  153 op idiv *tmp34 101 48
+  154 op mod *tmp36 101 48
+  155 op shl *tmp37 1 5
+  156 read *tmp35 BITMAP 2
+  157 op or *tmp38 *tmp35 32
+  158 write *tmp38 BITMAP 2
   159 label *label336
   160 label *label337
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  161 op add :testAndSetMultiples.0:i 101 7
   162 label *label338
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  163 op idiv *tmp34 108 48
+  164 op mod *tmp36 108 48
+  165 op shl *tmp37 1 12
+  166 read *tmp35 BITMAP 2
+  167 op or *tmp38 *tmp35 4096
+  168 write *tmp38 BITMAP 2
   169 label *label339
   170 label *label340
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  171 op add :testAndSetMultiples.0:i 108 7
   172 label *label341
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  173 op idiv *tmp34 115 48
+  174 op mod *tmp36 115 48
+  175 op shl *tmp37 1 19
+  176 read *tmp35 BITMAP 2
+  177 op or *tmp38 *tmp35 524288
+  178 write *tmp38 BITMAP 2
   179 label *label342
   180 label *label343
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  181 op add :testAndSetMultiples.0:i 115 7
   182 label *label344
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  183 op idiv *tmp34 122 48
+  184 op mod *tmp36 122 48
+  185 op shl *tmp37 1 26
+  186 read *tmp35 BITMAP 2
+  187 op or *tmp38 *tmp35 67108864
+  188 write *tmp38 BITMAP 2
   189 label *label345
   190 label *label346
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  191 op add :testAndSetMultiples.0:i 122 7
   192 label *label347
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  193 op idiv *tmp34 129 48
+  194 op mod *tmp36 129 48
+  195 op shl *tmp37 1 33
+  196 read *tmp35 BITMAP 2
+  197 op or *tmp38 *tmp35 8589934592
+  198 write *tmp38 BITMAP 2
   199 label *label348
   200 label *label349
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  201 op add :testAndSetMultiples.0:i 129 7
   202 label *label350
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  203 op idiv *tmp34 136 48
+  204 op mod *tmp36 136 48
+  205 op shl *tmp37 1 40
+  206 read *tmp35 BITMAP 2
+  207 op or *tmp38 *tmp35 1099511627776
+  208 write *tmp38 BITMAP 2
   209 label *label351
   210 label *label352
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  211 op add :testAndSetMultiples.0:i 136 7
   212 label *label353
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  213 op idiv *tmp34 143 48
+  214 op mod *tmp36 143 48
+  215 op shl *tmp37 1 47
+  216 read *tmp35 BITMAP 2
+  217 op or *tmp38 *tmp35 140737488355328
+  218 write *tmp38 BITMAP 2
   219 label *label354
   220 label *label355
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  221 op add :testAndSetMultiples.0:i 143 7
   222 label *label356
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  223 op idiv *tmp34 150 48
+  224 op mod *tmp36 150 48
+  225 op shl *tmp37 1 6
+  226 read *tmp35 BITMAP 3
+  227 op or *tmp38 *tmp35 64
+  228 write *tmp38 BITMAP 3
   229 label *label357
   230 label *label358
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  231 op add :testAndSetMultiples.0:i 150 7
   232 label *label359
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  233 op idiv *tmp34 157 48
+  234 op mod *tmp36 157 48
+  235 op shl *tmp37 1 13
+  236 read *tmp35 BITMAP 3
+  237 op or *tmp38 *tmp35 8192
+  238 write *tmp38 BITMAP 3
   239 label *label360
   240 label *label361
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  241 op add :testAndSetMultiples.0:i 157 7
   242 label *label362
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  243 op idiv *tmp34 164 48
+  244 op mod *tmp36 164 48
+  245 op shl *tmp37 1 20
+  246 read *tmp35 BITMAP 3
+  247 op or *tmp38 *tmp35 1048576
+  248 write *tmp38 BITMAP 3
   249 label *label363
   250 label *label364
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  251 op add :testAndSetMultiples.0:i 164 7
   252 label *label365
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  253 op idiv *tmp34 171 48
+  254 op mod *tmp36 171 48
+  255 op shl *tmp37 1 27
+  256 read *tmp35 BITMAP 3
+  257 op or *tmp38 *tmp35 134217728
+  258 write *tmp38 BITMAP 3
   259 label *label366
   260 label *label367
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  261 op add :testAndSetMultiples.0:i 171 7
   262 label *label368
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  263 op idiv *tmp34 178 48
+  264 op mod *tmp36 178 48
+  265 op shl *tmp37 1 34
+  266 read *tmp35 BITMAP 3
+  267 op or *tmp38 *tmp35 17179869184
+  268 write *tmp38 BITMAP 3
   269 label *label369
   270 label *label370
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  271 op add :testAndSetMultiples.0:i 178 7
   272 label *label371
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  273 op idiv *tmp34 185 48
+  274 op mod *tmp36 185 48
+  275 op shl *tmp37 1 41
+  276 read *tmp35 BITMAP 3
+  277 op or *tmp38 *tmp35 2199023255552
+  278 write *tmp38 BITMAP 3
   279 label *label372
   280 label *label373
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  281 op add :testAndSetMultiples.0:i 185 7
   282 label *label374
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  283 op idiv *tmp34 192 48
+  284 op mod *tmp36 192 48
+  285 op shl *tmp37 1 0
+  286 read *tmp35 BITMAP 4
+  287 op or *tmp38 *tmp35 1
+  288 write *tmp38 BITMAP 4
   289 label *label375
   290 label *label376
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  291 op add :testAndSetMultiples.0:i 192 7
   292 label *label377
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  293 op idiv *tmp34 199 48
+  294 op mod *tmp36 199 48
+  295 op shl *tmp37 1 7
+  296 read *tmp35 BITMAP 4
+  297 op or *tmp38 *tmp35 128
+  298 write *tmp38 BITMAP 4
   299 label *label378
   300 label *label379
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  301 op add :testAndSetMultiples.0:i 199 7
   302 label *label380
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  303 op idiv *tmp34 206 48
+  304 op mod *tmp36 206 48
+  305 op shl *tmp37 1 14
+  306 read *tmp35 BITMAP 4
+  307 op or *tmp38 *tmp35 16384
+  308 write *tmp38 BITMAP 4
   309 label *label381
   310 label *label382
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  311 op add :testAndSetMultiples.0:i 206 7
   312 label *label383
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  313 op idiv *tmp34 213 48
+  314 op mod *tmp36 213 48
+  315 op shl *tmp37 1 21
+  316 read *tmp35 BITMAP 4
+  317 op or *tmp38 *tmp35 2097152
+  318 write *tmp38 BITMAP 4
   319 label *label384
   320 label *label385
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  321 op add :testAndSetMultiples.0:i 213 7
   322 label *label386
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  323 op idiv *tmp34 220 48
+  324 op mod *tmp36 220 48
+  325 op shl *tmp37 1 28
+  326 read *tmp35 BITMAP 4
+  327 op or *tmp38 *tmp35 268435456
+  328 write *tmp38 BITMAP 4
   329 label *label387
   330 label *label388
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  331 op add :testAndSetMultiples.0:i 220 7
   332 label *label389
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  333 op idiv *tmp34 227 48
+  334 op mod *tmp36 227 48
+  335 op shl *tmp37 1 35
+  336 read *tmp35 BITMAP 4
+  337 op or *tmp38 *tmp35 34359738368
+  338 write *tmp38 BITMAP 4
   339 label *label390
   340 label *label391
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  341 op add :testAndSetMultiples.0:i 227 7
   342 label *label392
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  343 op idiv *tmp34 234 48
+  344 op mod *tmp36 234 48
+  345 op shl *tmp37 1 42
+  346 read *tmp35 BITMAP 4
+  347 op or *tmp38 *tmp35 4398046511104
+  348 write *tmp38 BITMAP 4
   349 label *label393
   350 label *label394
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  351 op add :testAndSetMultiples.0:i 234 7
   352 label *label395
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  353 op idiv *tmp34 241 48
+  354 op mod *tmp36 241 48
+  355 op shl *tmp37 1 1
+  356 read *tmp35 BITMAP 5
+  357 op or *tmp38 *tmp35 2
+  358 write *tmp38 BITMAP 5
   359 label *label396
   360 label *label397
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  361 op add :testAndSetMultiples.0:i 241 7
   362 label *label398
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  363 op idiv *tmp34 248 48
+  364 op mod *tmp36 248 48
+  365 op shl *tmp37 1 8
+  366 read *tmp35 BITMAP 5
+  367 op or *tmp38 *tmp35 256
+  368 write *tmp38 BITMAP 5
   369 label *label399
   370 label *label400
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 7
+  371 op add :testAndSetMultiples.0:i 248 7
   372 label *label80
   373 label *label81
   374 label *label82

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-133 instructions):
 
    37 label *label75
    38 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    39 jump *label81 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 49 2
    40 label *label301
    41 label *label302
-    * op idiv *tmp34 24 48
-    * op mod *tmp36 24 48
-    * op shl *tmp37 1 24
    42 read *tmp35 BITMAP 0
    43 op or *tmp38 *tmp35 16777216
    44 write *tmp38 BITMAP 0
    45 label *label303
    46 label *label304
-    * op add :testAndSetMultiples.0:i 24 7
    47 label *label305
-    * op idiv *tmp34 31 48
-    * op mod *tmp36 31 48
-    * op shl *tmp37 1 31
    48 read *tmp35 BITMAP 0
    49 op or *tmp38 *tmp35 2147483648
    50 write *tmp38 BITMAP 0
    51 label *label306
    52 label *label307
-    * op add :testAndSetMultiples.0:i 31 7
    53 label *label308
-    * op idiv *tmp34 38 48
-    * op mod *tmp36 38 48
-    * op shl *tmp37 1 38
    54 read *tmp35 BITMAP 0
    55 op or *tmp38 *tmp35 274877906944
    56 write *tmp38 BITMAP 0
    57 label *label309
    58 label *label310
-    * op add :testAndSetMultiples.0:i 38 7
    59 label *label311
-    * op idiv *tmp34 45 48
-    * op mod *tmp36 45 48
-    * op shl *tmp37 1 45
    60 read *tmp35 BITMAP 0
    61 op or *tmp38 *tmp35 35184372088832
    62 write *tmp38 BITMAP 0
    63 label *label312
    64 label *label313
-    * op add :testAndSetMultiples.0:i 45 7
    65 label *label314
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    66 read *tmp35 BITMAP 1
    67 op or *tmp38 *tmp35 16
    68 write *tmp38 BITMAP 1
    69 label *label315
    70 label *label316
-    * op add :testAndSetMultiples.0:i 52 7
    71 label *label317
-    * op idiv *tmp34 59 48
-    * op mod *tmp36 59 48
-    * op shl *tmp37 1 11
    72 read *tmp35 BITMAP 1
    73 op or *tmp38 *tmp35 2048
    74 write *tmp38 BITMAP 1
    75 label *label318
    76 label *label319
-    * op add :testAndSetMultiples.0:i 59 7
    77 label *label320
-    * op idiv *tmp34 66 48
-    * op mod *tmp36 66 48
-    * op shl *tmp37 1 18
    78 read *tmp35 BITMAP 1
    79 op or *tmp38 *tmp35 262144
    80 write *tmp38 BITMAP 1
    81 label *label321
    82 label *label322
-    * op add :testAndSetMultiples.0:i 66 7
    83 label *label323
-    * op idiv *tmp34 73 48
-    * op mod *tmp36 73 48
-    * op shl *tmp37 1 25
    84 read *tmp35 BITMAP 1
    85 op or *tmp38 *tmp35 33554432
    86 write *tmp38 BITMAP 1
    87 label *label324
    88 label *label325
-    * op add :testAndSetMultiples.0:i 73 7
    89 label *label326
-    * op idiv *tmp34 80 48
-    * op mod *tmp36 80 48
-    * op shl *tmp37 1 32
    90 read *tmp35 BITMAP 1
    91 op or *tmp38 *tmp35 4294967296
    92 write *tmp38 BITMAP 1
    93 label *label327
    94 label *label328
-    * op add :testAndSetMultiples.0:i 80 7
    95 label *label329
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
    96 read *tmp35 BITMAP 1
    97 op or *tmp38 *tmp35 549755813888
    98 write *tmp38 BITMAP 1
    99 label *label330
   100 label *label331
-    * op add :testAndSetMultiples.0:i 87 7
   101 label *label332
-    * op idiv *tmp34 94 48
-    * op mod *tmp36 94 48
-    * op shl *tmp37 1 46
   102 read *tmp35 BITMAP 1
   103 op or *tmp38 *tmp35 70368744177664
   104 write *tmp38 BITMAP 1
   105 label *label333
   106 label *label334
-    * op add :testAndSetMultiples.0:i 94 7
   107 label *label335
-    * op idiv *tmp34 101 48
-    * op mod *tmp36 101 48
-    * op shl *tmp37 1 5
   108 read *tmp35 BITMAP 2
   109 op or *tmp38 *tmp35 32
   110 write *tmp38 BITMAP 2
   111 label *label336
   112 label *label337
-    * op add :testAndSetMultiples.0:i 101 7
   113 label *label338
-    * op idiv *tmp34 108 48
-    * op mod *tmp36 108 48
-    * op shl *tmp37 1 12
   114 read *tmp35 BITMAP 2
   115 op or *tmp38 *tmp35 4096
   116 write *tmp38 BITMAP 2
   117 label *label339
   118 label *label340
-    * op add :testAndSetMultiples.0:i 108 7
   119 label *label341
-    * op idiv *tmp34 115 48
-    * op mod *tmp36 115 48
-    * op shl *tmp37 1 19
   120 read *tmp35 BITMAP 2
   121 op or *tmp38 *tmp35 524288
   122 write *tmp38 BITMAP 2
   123 label *label342
   124 label *label343
-    * op add :testAndSetMultiples.0:i 115 7
   125 label *label344
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   126 read *tmp35 BITMAP 2
   127 op or *tmp38 *tmp35 67108864
   128 write *tmp38 BITMAP 2
   129 label *label345
   130 label *label346
-    * op add :testAndSetMultiples.0:i 122 7
   131 label *label347
-    * op idiv *tmp34 129 48
-    * op mod *tmp36 129 48
-    * op shl *tmp37 1 33
   132 read *tmp35 BITMAP 2
   133 op or *tmp38 *tmp35 8589934592
   134 write *tmp38 BITMAP 2
   135 label *label348
   136 label *label349
-    * op add :testAndSetMultiples.0:i 129 7
   137 label *label350
-    * op idiv *tmp34 136 48
-    * op mod *tmp36 136 48
-    * op shl *tmp37 1 40
   138 read *tmp35 BITMAP 2
   139 op or *tmp38 *tmp35 1099511627776
   140 write *tmp38 BITMAP 2
   141 label *label351
   142 label *label352
-    * op add :testAndSetMultiples.0:i 136 7
   143 label *label353
-    * op idiv *tmp34 143 48
-    * op mod *tmp36 143 48
-    * op shl *tmp37 1 47
   144 read *tmp35 BITMAP 2
   145 op or *tmp38 *tmp35 140737488355328
   146 write *tmp38 BITMAP 2
   147 label *label354
   148 label *label355
-    * op add :testAndSetMultiples.0:i 143 7
   149 label *label356
-    * op idiv *tmp34 150 48
-    * op mod *tmp36 150 48
-    * op shl *tmp37 1 6
   150 read *tmp35 BITMAP 3
   151 op or *tmp38 *tmp35 64
   152 write *tmp38 BITMAP 3
   153 label *label357
   154 label *label358
-    * op add :testAndSetMultiples.0:i 150 7
   155 label *label359
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   156 read *tmp35 BITMAP 3
   157 op or *tmp38 *tmp35 8192
   158 write *tmp38 BITMAP 3
   159 label *label360
   160 label *label361
-    * op add :testAndSetMultiples.0:i 157 7
   161 label *label362
-    * op idiv *tmp34 164 48
-    * op mod *tmp36 164 48
-    * op shl *tmp37 1 20
   162 read *tmp35 BITMAP 3
   163 op or *tmp38 *tmp35 1048576
   164 write *tmp38 BITMAP 3
   165 label *label363
   166 label *label364
-    * op add :testAndSetMultiples.0:i 164 7
   167 label *label365
-    * op idiv *tmp34 171 48
-    * op mod *tmp36 171 48
-    * op shl *tmp37 1 27
   168 read *tmp35 BITMAP 3
   169 op or *tmp38 *tmp35 134217728
   170 write *tmp38 BITMAP 3
   171 label *label366
   172 label *label367
-    * op add :testAndSetMultiples.0:i 171 7
   173 label *label368
-    * op idiv *tmp34 178 48
-    * op mod *tmp36 178 48
-    * op shl *tmp37 1 34
   174 read *tmp35 BITMAP 3
   175 op or *tmp38 *tmp35 17179869184
   176 write *tmp38 BITMAP 3
   177 label *label369
   178 label *label370
-    * op add :testAndSetMultiples.0:i 178 7
   179 label *label371
-    * op idiv *tmp34 185 48
-    * op mod *tmp36 185 48
-    * op shl *tmp37 1 41
   180 read *tmp35 BITMAP 3
   181 op or *tmp38 *tmp35 2199023255552
   182 write *tmp38 BITMAP 3
   183 label *label372
   184 label *label373
-    * op add :testAndSetMultiples.0:i 185 7
   185 label *label374
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   186 read *tmp35 BITMAP 4
   187 op or *tmp38 *tmp35 1
   188 write *tmp38 BITMAP 4
   189 label *label375
   190 label *label376
-    * op add :testAndSetMultiples.0:i 192 7
   191 label *label377
-    * op idiv *tmp34 199 48
-    * op mod *tmp36 199 48
-    * op shl *tmp37 1 7
   192 read *tmp35 BITMAP 4
   193 op or *tmp38 *tmp35 128
   194 write *tmp38 BITMAP 4
   195 label *label378
   196 label *label379
-    * op add :testAndSetMultiples.0:i 199 7
   197 label *label380
-    * op idiv *tmp34 206 48
-    * op mod *tmp36 206 48
-    * op shl *tmp37 1 14
   198 read *tmp35 BITMAP 4
   199 op or *tmp38 *tmp35 16384
   200 write *tmp38 BITMAP 4
   201 label *label381
   202 label *label382
-    * op add :testAndSetMultiples.0:i 206 7
   203 label *label383
-    * op idiv *tmp34 213 48
-    * op mod *tmp36 213 48
-    * op shl *tmp37 1 21
   204 read *tmp35 BITMAP 4
   205 op or *tmp38 *tmp35 2097152
   206 write *tmp38 BITMAP 4
   207 label *label384
   208 label *label385
-    * op add :testAndSetMultiples.0:i 213 7
   209 label *label386
-    * op idiv *tmp34 220 48
-    * op mod *tmp36 220 48
-    * op shl *tmp37 1 28
   210 read *tmp35 BITMAP 4
   211 op or *tmp38 *tmp35 268435456
   212 write *tmp38 BITMAP 4
   213 label *label387
   214 label *label388
-    * op add :testAndSetMultiples.0:i 220 7
   215 label *label389
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   216 read *tmp35 BITMAP 4
   217 op or *tmp38 *tmp35 34359738368
   218 write *tmp38 BITMAP 4
   219 label *label390
   220 label *label391
-    * op add :testAndSetMultiples.0:i 227 7
   221 label *label392
-    * op idiv *tmp34 234 48
-    * op mod *tmp36 234 48
-    * op shl *tmp37 1 42
   222 read *tmp35 BITMAP 4
   223 op or *tmp38 *tmp35 4398046511104
   224 write *tmp38 BITMAP 4
   225 label *label393
   226 label *label394
-    * op add :testAndSetMultiples.0:i 234 7
   227 label *label395
-    * op idiv *tmp34 241 48
-    * op mod *tmp36 241 48
-    * op shl *tmp37 1 1
   228 read *tmp35 BITMAP 5
   229 op or *tmp38 *tmp35 2
   230 write *tmp38 BITMAP 5
   231 label *label396
   232 label *label397
-    * op add :testAndSetMultiples.0:i 241 7
   233 label *label398
-    * op idiv *tmp34 248 48
-    * op mod *tmp36 248 48
-    * op shl *tmp37 1 8
   234 read *tmp35 BITMAP 5
   235 op or *tmp38 *tmp35 256
   236 write *tmp38 BITMAP 5
   237 label *label399
   238 label *label400
-    * op add :testAndSetMultiples.0:i 248 7
   239 label *label80
   240 label *label81
   241 label *label82

Modifications by Unroll loop at line 17:9 (+327 instructions):
 
     8 label *label62
     9 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    10 jump *label68 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
-    * label *label63
-    * jump *label67 greaterThan 12 250
-    * label *label64
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
-    * label *label65
-    * label *label66
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
-    * jump *label64 lessThanEq :testAndSetMultiples.0:i 250
-    * label *label67
+   11 op idiv :testAndSetMultiples.0:i 25 2
+   12 label *label401
+   13 label *label402
+   14 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   15 op mod *tmp36 :testAndSetMultiples.0:i 48
+   16 op shl *tmp37 1 *tmp36
+   17 read *tmp35 BITMAP *tmp34
+   18 op or *tmp38 *tmp35 *tmp37
+   19 write *tmp38 BITMAP *tmp34
+   20 label *label403
+   21 label *label404
+   22 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   23 label *label405
+   24 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   25 op mod *tmp36 :testAndSetMultiples.0:i 48
+   26 op shl *tmp37 1 *tmp36
+   27 read *tmp35 BITMAP *tmp34
+   28 op or *tmp38 *tmp35 *tmp37
+   29 write *tmp38 BITMAP *tmp34
+   30 label *label406
+   31 label *label407
+   32 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   33 label *label408
+   34 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   35 op mod *tmp36 :testAndSetMultiples.0:i 48
+   36 op shl *tmp37 1 *tmp36
+   37 read *tmp35 BITMAP *tmp34
+   38 op or *tmp38 *tmp35 *tmp37
+   39 write *tmp38 BITMAP *tmp34
+   40 label *label409
+   41 label *label410
+   42 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   43 label *label411
+   44 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   45 op mod *tmp36 :testAndSetMultiples.0:i 48
+   46 op shl *tmp37 1 *tmp36
+   47 read *tmp35 BITMAP *tmp34
+   48 op or *tmp38 *tmp35 *tmp37
+   49 write *tmp38 BITMAP *tmp34
+   50 label *label412
+   51 label *label413
+   52 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   53 label *label414
+   54 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   55 op mod *tmp36 :testAndSetMultiples.0:i 48
+   56 op shl *tmp37 1 *tmp36
+   57 read *tmp35 BITMAP *tmp34
+   58 op or *tmp38 *tmp35 *tmp37
+   59 write *tmp38 BITMAP *tmp34
+   60 label *label415
+   61 label *label416
+   62 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   63 label *label417
+   64 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   65 op mod *tmp36 :testAndSetMultiples.0:i 48
+   66 op shl *tmp37 1 *tmp36
+   67 read *tmp35 BITMAP *tmp34
+   68 op or *tmp38 *tmp35 *tmp37
+   69 write *tmp38 BITMAP *tmp34
+   70 label *label418
+   71 label *label419
+   72 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   73 label *label420
+   74 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   75 op mod *tmp36 :testAndSetMultiples.0:i 48
+   76 op shl *tmp37 1 *tmp36
+   77 read *tmp35 BITMAP *tmp34
+   78 op or *tmp38 *tmp35 *tmp37
+   79 write *tmp38 BITMAP *tmp34
+   80 label *label421
+   81 label *label422
+   82 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   83 label *label423
+   84 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   85 op mod *tmp36 :testAndSetMultiples.0:i 48
+   86 op shl *tmp37 1 *tmp36
+   87 read *tmp35 BITMAP *tmp34
+   88 op or *tmp38 *tmp35 *tmp37
+   89 write *tmp38 BITMAP *tmp34
+   90 label *label424
+   91 label *label425
+   92 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   93 label *label426
+   94 op idiv *tmp34 :testAndSetMultiples.0:i 48
+   95 op mod *tmp36 :testAndSetMultiples.0:i 48
+   96 op shl *tmp37 1 *tmp36
+   97 read *tmp35 BITMAP *tmp34
+   98 op or *tmp38 *tmp35 *tmp37
+   99 write *tmp38 BITMAP *tmp34
+  100 label *label427
+  101 label *label428
+  102 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  103 label *label429
+  104 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  105 op mod *tmp36 :testAndSetMultiples.0:i 48
+  106 op shl *tmp37 1 *tmp36
+  107 read *tmp35 BITMAP *tmp34
+  108 op or *tmp38 *tmp35 *tmp37
+  109 write *tmp38 BITMAP *tmp34
+  110 label *label430
+  111 label *label431
+  112 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  113 label *label432
+  114 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  115 op mod *tmp36 :testAndSetMultiples.0:i 48
+  116 op shl *tmp37 1 *tmp36
+  117 read *tmp35 BITMAP *tmp34
+  118 op or *tmp38 *tmp35 *tmp37
+  119 write *tmp38 BITMAP *tmp34
+  120 label *label433
+  121 label *label434
+  122 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  123 label *label435
+  124 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  125 op mod *tmp36 :testAndSetMultiples.0:i 48
+  126 op shl *tmp37 1 *tmp36
+  127 read *tmp35 BITMAP *tmp34
+  128 op or *tmp38 *tmp35 *tmp37
+  129 write *tmp38 BITMAP *tmp34
+  130 label *label436
+  131 label *label437
+  132 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  133 label *label438
+  134 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  135 op mod *tmp36 :testAndSetMultiples.0:i 48
+  136 op shl *tmp37 1 *tmp36
+  137 read *tmp35 BITMAP *tmp34
+  138 op or *tmp38 *tmp35 *tmp37
+  139 write *tmp38 BITMAP *tmp34
+  140 label *label439
+  141 label *label440
+  142 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  143 label *label441
+  144 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  145 op mod *tmp36 :testAndSetMultiples.0:i 48
+  146 op shl *tmp37 1 *tmp36
+  147 read *tmp35 BITMAP *tmp34
+  148 op or *tmp38 *tmp35 *tmp37
+  149 write *tmp38 BITMAP *tmp34
+  150 label *label442
+  151 label *label443
+  152 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  153 label *label444
+  154 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  155 op mod *tmp36 :testAndSetMultiples.0:i 48
+  156 op shl *tmp37 1 *tmp36
+  157 read *tmp35 BITMAP *tmp34
+  158 op or *tmp38 *tmp35 *tmp37
+  159 write *tmp38 BITMAP *tmp34
+  160 label *label445
+  161 label *label446
+  162 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  163 label *label447
+  164 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  165 op mod *tmp36 :testAndSetMultiples.0:i 48
+  166 op shl *tmp37 1 *tmp36
+  167 read *tmp35 BITMAP *tmp34
+  168 op or *tmp38 *tmp35 *tmp37
+  169 write *tmp38 BITMAP *tmp34
+  170 label *label448
+  171 label *label449
+  172 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  173 label *label450
+  174 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  175 op mod *tmp36 :testAndSetMultiples.0:i 48
+  176 op shl *tmp37 1 *tmp36
+  177 read *tmp35 BITMAP *tmp34
+  178 op or *tmp38 *tmp35 *tmp37
+  179 write *tmp38 BITMAP *tmp34
+  180 label *label451
+  181 label *label452
+  182 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  183 label *label453
+  184 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  185 op mod *tmp36 :testAndSetMultiples.0:i 48
+  186 op shl *tmp37 1 *tmp36
+  187 read *tmp35 BITMAP *tmp34
+  188 op or *tmp38 *tmp35 *tmp37
+  189 write *tmp38 BITMAP *tmp34
+  190 label *label454
+  191 label *label455
+  192 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  193 label *label456
+  194 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  195 op mod *tmp36 :testAndSetMultiples.0:i 48
+  196 op shl *tmp37 1 *tmp36
+  197 read *tmp35 BITMAP *tmp34
+  198 op or *tmp38 *tmp35 *tmp37
+  199 write *tmp38 BITMAP *tmp34
+  200 label *label457
+  201 label *label458
+  202 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  203 label *label459
+  204 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  205 op mod *tmp36 :testAndSetMultiples.0:i 48
+  206 op shl *tmp37 1 *tmp36
+  207 read *tmp35 BITMAP *tmp34
+  208 op or *tmp38 *tmp35 *tmp37
+  209 write *tmp38 BITMAP *tmp34
+  210 label *label460
+  211 label *label461
+  212 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  213 label *label462
+  214 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  215 op mod *tmp36 :testAndSetMultiples.0:i 48
+  216 op shl *tmp37 1 *tmp36
+  217 read *tmp35 BITMAP *tmp34
+  218 op or *tmp38 *tmp35 *tmp37
+  219 write *tmp38 BITMAP *tmp34
+  220 label *label463
+  221 label *label464
+  222 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  223 label *label465
+  224 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  225 op mod *tmp36 :testAndSetMultiples.0:i 48
+  226 op shl *tmp37 1 *tmp36
+  227 read *tmp35 BITMAP *tmp34
+  228 op or *tmp38 *tmp35 *tmp37
+  229 write *tmp38 BITMAP *tmp34
+  230 label *label466
+  231 label *label467
+  232 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  233 label *label468
+  234 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  235 op mod *tmp36 :testAndSetMultiples.0:i 48
+  236 op shl *tmp37 1 *tmp36
+  237 read *tmp35 BITMAP *tmp34
+  238 op or *tmp38 *tmp35 *tmp37
+  239 write *tmp38 BITMAP *tmp34
+  240 label *label469
+  241 label *label470
+  242 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  243 label *label471
+  244 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  245 op mod *tmp36 :testAndSetMultiples.0:i 48
+  246 op shl *tmp37 1 *tmp36
+  247 read *tmp35 BITMAP *tmp34
+  248 op or *tmp38 *tmp35 *tmp37
+  249 write *tmp38 BITMAP *tmp34
+  250 label *label472
+  251 label *label473
+  252 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  253 label *label474
+  254 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  255 op mod *tmp36 :testAndSetMultiples.0:i 48
+  256 op shl *tmp37 1 *tmp36
+  257 read *tmp35 BITMAP *tmp34
+  258 op or *tmp38 *tmp35 *tmp37
+  259 write *tmp38 BITMAP *tmp34
+  260 label *label475
+  261 label *label476
+  262 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  263 label *label477
+  264 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  265 op mod *tmp36 :testAndSetMultiples.0:i 48
+  266 op shl *tmp37 1 *tmp36
+  267 read *tmp35 BITMAP *tmp34
+  268 op or *tmp38 *tmp35 *tmp37
+  269 write *tmp38 BITMAP *tmp34
+  270 label *label478
+  271 label *label479
+  272 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  273 label *label480
+  274 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  275 op mod *tmp36 :testAndSetMultiples.0:i 48
+  276 op shl *tmp37 1 *tmp36
+  277 read *tmp35 BITMAP *tmp34
+  278 op or *tmp38 *tmp35 *tmp37
+  279 write *tmp38 BITMAP *tmp34
+  280 label *label481
+  281 label *label482
+  282 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  283 label *label483
+  284 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  285 op mod *tmp36 :testAndSetMultiples.0:i 48
+  286 op shl *tmp37 1 *tmp36
+  287 read *tmp35 BITMAP *tmp34
+  288 op or *tmp38 *tmp35 *tmp37
+  289 write *tmp38 BITMAP *tmp34
+  290 label *label484
+  291 label *label485
+  292 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  293 label *label486
+  294 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  295 op mod *tmp36 :testAndSetMultiples.0:i 48
+  296 op shl *tmp37 1 *tmp36
+  297 read *tmp35 BITMAP *tmp34
+  298 op or *tmp38 *tmp35 *tmp37
+  299 write *tmp38 BITMAP *tmp34
+  300 label *label487
+  301 label *label488
+  302 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  303 label *label489
+  304 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  305 op mod *tmp36 :testAndSetMultiples.0:i 48
+  306 op shl *tmp37 1 *tmp36
+  307 read *tmp35 BITMAP *tmp34
+  308 op or *tmp38 *tmp35 *tmp37
+  309 write *tmp38 BITMAP *tmp34
+  310 label *label490
+  311 label *label491
+  312 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  313 label *label492
+  314 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  315 op mod *tmp36 :testAndSetMultiples.0:i 48
+  316 op shl *tmp37 1 *tmp36
+  317 read *tmp35 BITMAP *tmp34
+  318 op or *tmp38 *tmp35 *tmp37
+  319 write *tmp38 BITMAP *tmp34
+  320 label *label493
+  321 label *label494
+  322 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  323 label *label495
+  324 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  325 op mod *tmp36 :testAndSetMultiples.0:i 48
+  326 op shl *tmp37 1 *tmp36
+  327 read *tmp35 BITMAP *tmp34
+  328 op or *tmp38 *tmp35 *tmp37
+  329 write *tmp38 BITMAP *tmp34
+  330 label *label496
+  331 label *label497
+  332 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  333 label *label498
+  334 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  335 op mod *tmp36 :testAndSetMultiples.0:i 48
+  336 op shl *tmp37 1 *tmp36
+  337 read *tmp35 BITMAP *tmp34
+  338 op or *tmp38 *tmp35 *tmp37
+  339 write *tmp38 BITMAP *tmp34
+  340 label *label499
+  341 label *label500
+  342 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  343 label *label501
+  344 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  345 op mod *tmp36 :testAndSetMultiples.0:i 48
+  346 op shl *tmp37 1 *tmp36
+  347 read *tmp35 BITMAP *tmp34
+  348 op or *tmp38 *tmp35 *tmp37
+  349 write *tmp38 BITMAP *tmp34
+  350 label *label502
+  351 label *label503
+  352 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  353 label *label504
+  354 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  355 op mod *tmp36 :testAndSetMultiples.0:i 48
+  356 op shl *tmp37 1 *tmp36
+  357 read *tmp35 BITMAP *tmp34
+  358 op or *tmp38 *tmp35 *tmp37
+  359 write *tmp38 BITMAP *tmp34
+  360 label *label505
+  361 label *label506
+  362 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  363 label *label507
+  364 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  365 op mod *tmp36 :testAndSetMultiples.0:i 48
+  366 op shl *tmp37 1 *tmp36
+  367 read *tmp35 BITMAP *tmp34
+  368 op or *tmp38 *tmp35 *tmp37
+  369 write *tmp38 BITMAP *tmp34
+  370 label *label508
+  371 label *label509
+  372 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  373 label *label510
+  374 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  375 op mod *tmp36 :testAndSetMultiples.0:i 48
+  376 op shl *tmp37 1 *tmp36
+  377 read *tmp35 BITMAP *tmp34
+  378 op or *tmp38 *tmp35 *tmp37
+  379 write *tmp38 BITMAP *tmp34
+  380 label *label511
+  381 label *label512
+  382 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  383 label *label513
+  384 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  385 op mod *tmp36 :testAndSetMultiples.0:i 48
+  386 op shl *tmp37 1 *tmp36
+  387 read *tmp35 BITMAP *tmp34
+  388 op or *tmp38 *tmp35 *tmp37
+  389 write *tmp38 BITMAP *tmp34
+  390 label *label514
+  391 label *label515
+  392 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  393 label *label516
+  394 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  395 op mod *tmp36 :testAndSetMultiples.0:i 48
+  396 op shl *tmp37 1 *tmp36
+  397 read *tmp35 BITMAP *tmp34
+  398 op or *tmp38 *tmp35 *tmp37
+  399 write *tmp38 BITMAP *tmp34
+  400 label *label517
+  401 label *label518
+  402 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  403 label *label519
+  404 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  405 op mod *tmp36 :testAndSetMultiples.0:i 48
+  406 op shl *tmp37 1 *tmp36
+  407 read *tmp35 BITMAP *tmp34
+  408 op or *tmp38 *tmp35 *tmp37
+  409 write *tmp38 BITMAP *tmp34
+  410 label *label520
+  411 label *label521
+  412 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  413 label *label522
+  414 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  415 op mod *tmp36 :testAndSetMultiples.0:i 48
+  416 op shl *tmp37 1 *tmp36
+  417 read *tmp35 BITMAP *tmp34
+  418 op or *tmp38 *tmp35 *tmp37
+  419 write *tmp38 BITMAP *tmp34
+  420 label *label523
+  421 label *label524
+  422 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  423 label *label525
+  424 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  425 op mod *tmp36 :testAndSetMultiples.0:i 48
+  426 op shl *tmp37 1 *tmp36
+  427 read *tmp35 BITMAP *tmp34
+  428 op or *tmp38 *tmp35 *tmp37
+  429 write *tmp38 BITMAP *tmp34
+  430 label *label526
+  431 label *label527
+  432 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  433 label *label528
+  434 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  435 op mod *tmp36 :testAndSetMultiples.0:i 48
+  436 op shl *tmp37 1 *tmp36
+  437 read *tmp35 BITMAP *tmp34
+  438 op or *tmp38 *tmp35 *tmp37
+  439 write *tmp38 BITMAP *tmp34
+  440 label *label529
+  441 label *label530
+  442 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  443 label *label531
+  444 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  445 op mod *tmp36 :testAndSetMultiples.0:i 48
+  446 op shl *tmp37 1 *tmp36
+  447 read *tmp35 BITMAP *tmp34
+  448 op or *tmp38 *tmp35 *tmp37
+  449 write *tmp38 BITMAP *tmp34
+  450 label *label532
+  451 label *label533
+  452 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  453 label *label534
+  454 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  455 op mod *tmp36 :testAndSetMultiples.0:i 48
+  456 op shl *tmp37 1 *tmp36
+  457 read *tmp35 BITMAP *tmp34
+  458 op or *tmp38 *tmp35 *tmp37
+  459 write *tmp38 BITMAP *tmp34
+  460 label *label535
+  461 label *label536
+  462 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  463 label *label537
+  464 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  465 op mod *tmp36 :testAndSetMultiples.0:i 48
+  466 op shl *tmp37 1 *tmp36
+  467 read *tmp35 BITMAP *tmp34
+  468 op or *tmp38 *tmp35 *tmp37
+  469 write *tmp38 BITMAP *tmp34
+  470 label *label538
+  471 label *label539
+  472 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  473 label *label540
+  474 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  475 op mod *tmp36 :testAndSetMultiples.0:i 48
+  476 op shl *tmp37 1 *tmp36
+  477 read *tmp35 BITMAP *tmp34
+  478 op or *tmp38 *tmp35 *tmp37
+  479 write *tmp38 BITMAP *tmp34
+  480 label *label541
+  481 label *label542
+  482 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  483 label *label543
+  484 op idiv *tmp34 :testAndSetMultiples.0:i 48
+  485 op mod *tmp36 :testAndSetMultiples.0:i 48
+  486 op shl *tmp37 1 *tmp36
+  487 read *tmp35 BITMAP *tmp34
+  488 op or *tmp38 *tmp35 *tmp37
+  489 write *tmp38 BITMAP *tmp34
+  490 label *label544
+  491 label *label545
+  492 op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  493 label *label67
   494 label *label68
   495 label *label69
   496 label *label70

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    11 op idiv :testAndSetMultiples.0:i 25 2
    12 label *label401
    13 label *label402
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   14 op idiv *tmp34 12 48
+   15 op mod *tmp36 12 48
+   16 op shl *tmp37 1 12
+   17 read *tmp35 BITMAP 0
+   18 op or *tmp38 *tmp35 4096
+   19 write *tmp38 BITMAP 0
    20 label *label403
    21 label *label404
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   22 op add :testAndSetMultiples.0:i 12 5
    23 label *label405
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   24 op idiv *tmp34 17 48
+   25 op mod *tmp36 17 48
+   26 op shl *tmp37 1 17
+   27 read *tmp35 BITMAP 0
+   28 op or *tmp38 *tmp35 131072
+   29 write *tmp38 BITMAP 0
    30 label *label406
    31 label *label407
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   32 op add :testAndSetMultiples.0:i 17 5
    33 label *label408
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   34 op idiv *tmp34 22 48
+   35 op mod *tmp36 22 48
+   36 op shl *tmp37 1 22
+   37 read *tmp35 BITMAP 0
+   38 op or *tmp38 *tmp35 4194304
+   39 write *tmp38 BITMAP 0
    40 label *label409
    41 label *label410
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   42 op add :testAndSetMultiples.0:i 22 5
    43 label *label411
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   44 op idiv *tmp34 27 48
+   45 op mod *tmp36 27 48
+   46 op shl *tmp37 1 27
+   47 read *tmp35 BITMAP 0
+   48 op or *tmp38 *tmp35 134217728
+   49 write *tmp38 BITMAP 0
    50 label *label412
    51 label *label413
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   52 op add :testAndSetMultiples.0:i 27 5
    53 label *label414
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   54 op idiv *tmp34 32 48
+   55 op mod *tmp36 32 48
+   56 op shl *tmp37 1 32
+   57 read *tmp35 BITMAP 0
+   58 op or *tmp38 *tmp35 4294967296
+   59 write *tmp38 BITMAP 0
    60 label *label415
    61 label *label416
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   62 op add :testAndSetMultiples.0:i 32 5
    63 label *label417
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   64 op idiv *tmp34 37 48
+   65 op mod *tmp36 37 48
+   66 op shl *tmp37 1 37
+   67 read *tmp35 BITMAP 0
+   68 op or *tmp38 *tmp35 137438953472
+   69 write *tmp38 BITMAP 0
    70 label *label418
    71 label *label419
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   72 op add :testAndSetMultiples.0:i 37 5
    73 label *label420
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   74 op idiv *tmp34 42 48
+   75 op mod *tmp36 42 48
+   76 op shl *tmp37 1 42
+   77 read *tmp35 BITMAP 0
+   78 op or *tmp38 *tmp35 4398046511104
+   79 write *tmp38 BITMAP 0
    80 label *label421
    81 label *label422
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   82 op add :testAndSetMultiples.0:i 42 5
    83 label *label423
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   84 op idiv *tmp34 47 48
+   85 op mod *tmp36 47 48
+   86 op shl *tmp37 1 47
+   87 read *tmp35 BITMAP 0
+   88 op or *tmp38 *tmp35 140737488355328
+   89 write *tmp38 BITMAP 0
    90 label *label424
    91 label *label425
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+   92 op add :testAndSetMultiples.0:i 47 5
    93 label *label426
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+   94 op idiv *tmp34 52 48
+   95 op mod *tmp36 52 48
+   96 op shl *tmp37 1 4
+   97 read *tmp35 BITMAP 1
+   98 op or *tmp38 *tmp35 16
+   99 write *tmp38 BITMAP 1
   100 label *label427
   101 label *label428
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  102 op add :testAndSetMultiples.0:i 52 5
   103 label *label429
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  104 op idiv *tmp34 57 48
+  105 op mod *tmp36 57 48
+  106 op shl *tmp37 1 9
+  107 read *tmp35 BITMAP 1
+  108 op or *tmp38 *tmp35 512
+  109 write *tmp38 BITMAP 1
   110 label *label430
   111 label *label431
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  112 op add :testAndSetMultiples.0:i 57 5
   113 label *label432
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  114 op idiv *tmp34 62 48
+  115 op mod *tmp36 62 48
+  116 op shl *tmp37 1 14
+  117 read *tmp35 BITMAP 1
+  118 op or *tmp38 *tmp35 16384
+  119 write *tmp38 BITMAP 1
   120 label *label433
   121 label *label434
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  122 op add :testAndSetMultiples.0:i 62 5
   123 label *label435
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  124 op idiv *tmp34 67 48
+  125 op mod *tmp36 67 48
+  126 op shl *tmp37 1 19
+  127 read *tmp35 BITMAP 1
+  128 op or *tmp38 *tmp35 524288
+  129 write *tmp38 BITMAP 1
   130 label *label436
   131 label *label437
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  132 op add :testAndSetMultiples.0:i 67 5
   133 label *label438
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  134 op idiv *tmp34 72 48
+  135 op mod *tmp36 72 48
+  136 op shl *tmp37 1 24
+  137 read *tmp35 BITMAP 1
+  138 op or *tmp38 *tmp35 16777216
+  139 write *tmp38 BITMAP 1
   140 label *label439
   141 label *label440
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  142 op add :testAndSetMultiples.0:i 72 5
   143 label *label441
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  144 op idiv *tmp34 77 48
+  145 op mod *tmp36 77 48
+  146 op shl *tmp37 1 29
+  147 read *tmp35 BITMAP 1
+  148 op or *tmp38 *tmp35 536870912
+  149 write *tmp38 BITMAP 1
   150 label *label442
   151 label *label443
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  152 op add :testAndSetMultiples.0:i 77 5
   153 label *label444
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  154 op idiv *tmp34 82 48
+  155 op mod *tmp36 82 48
+  156 op shl *tmp37 1 34
+  157 read *tmp35 BITMAP 1
+  158 op or *tmp38 *tmp35 17179869184
+  159 write *tmp38 BITMAP 1
   160 label *label445
   161 label *label446
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  162 op add :testAndSetMultiples.0:i 82 5
   163 label *label447
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  164 op idiv *tmp34 87 48
+  165 op mod *tmp36 87 48
+  166 op shl *tmp37 1 39
+  167 read *tmp35 BITMAP 1
+  168 op or *tmp38 *tmp35 549755813888
+  169 write *tmp38 BITMAP 1
   170 label *label448
   171 label *label449
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  172 op add :testAndSetMultiples.0:i 87 5
   173 label *label450
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  174 op idiv *tmp34 92 48
+  175 op mod *tmp36 92 48
+  176 op shl *tmp37 1 44
+  177 read *tmp35 BITMAP 1
+  178 op or *tmp38 *tmp35 17592186044416
+  179 write *tmp38 BITMAP 1
   180 label *label451
   181 label *label452
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  182 op add :testAndSetMultiples.0:i 92 5
   183 label *label453
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  184 op idiv *tmp34 97 48
+  185 op mod *tmp36 97 48
+  186 op shl *tmp37 1 1
+  187 read *tmp35 BITMAP 2
+  188 op or *tmp38 *tmp35 2
+  189 write *tmp38 BITMAP 2
   190 label *label454
   191 label *label455
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  192 op add :testAndSetMultiples.0:i 97 5
   193 label *label456
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  194 op idiv *tmp34 102 48
+  195 op mod *tmp36 102 48
+  196 op shl *tmp37 1 6
+  197 read *tmp35 BITMAP 2
+  198 op or *tmp38 *tmp35 64
+  199 write *tmp38 BITMAP 2
   200 label *label457
   201 label *label458
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  202 op add :testAndSetMultiples.0:i 102 5
   203 label *label459
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  204 op idiv *tmp34 107 48
+  205 op mod *tmp36 107 48
+  206 op shl *tmp37 1 11
+  207 read *tmp35 BITMAP 2
+  208 op or *tmp38 *tmp35 2048
+  209 write *tmp38 BITMAP 2
   210 label *label460
   211 label *label461
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  212 op add :testAndSetMultiples.0:i 107 5
   213 label *label462
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  214 op idiv *tmp34 112 48
+  215 op mod *tmp36 112 48
+  216 op shl *tmp37 1 16
+  217 read *tmp35 BITMAP 2
+  218 op or *tmp38 *tmp35 65536
+  219 write *tmp38 BITMAP 2
   220 label *label463
   221 label *label464
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  222 op add :testAndSetMultiples.0:i 112 5
   223 label *label465
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  224 op idiv *tmp34 117 48
+  225 op mod *tmp36 117 48
+  226 op shl *tmp37 1 21
+  227 read *tmp35 BITMAP 2
+  228 op or *tmp38 *tmp35 2097152
+  229 write *tmp38 BITMAP 2
   230 label *label466
   231 label *label467
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  232 op add :testAndSetMultiples.0:i 117 5
   233 label *label468
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  234 op idiv *tmp34 122 48
+  235 op mod *tmp36 122 48
+  236 op shl *tmp37 1 26
+  237 read *tmp35 BITMAP 2
+  238 op or *tmp38 *tmp35 67108864
+  239 write *tmp38 BITMAP 2
   240 label *label469
   241 label *label470
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  242 op add :testAndSetMultiples.0:i 122 5
   243 label *label471
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  244 op idiv *tmp34 127 48
+  245 op mod *tmp36 127 48
+  246 op shl *tmp37 1 31
+  247 read *tmp35 BITMAP 2
+  248 op or *tmp38 *tmp35 2147483648
+  249 write *tmp38 BITMAP 2
   250 label *label472
   251 label *label473
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  252 op add :testAndSetMultiples.0:i 127 5
   253 label *label474
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  254 op idiv *tmp34 132 48
+  255 op mod *tmp36 132 48
+  256 op shl *tmp37 1 36
+  257 read *tmp35 BITMAP 2
+  258 op or *tmp38 *tmp35 68719476736
+  259 write *tmp38 BITMAP 2
   260 label *label475
   261 label *label476
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  262 op add :testAndSetMultiples.0:i 132 5
   263 label *label477
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  264 op idiv *tmp34 137 48
+  265 op mod *tmp36 137 48
+  266 op shl *tmp37 1 41
+  267 read *tmp35 BITMAP 2
+  268 op or *tmp38 *tmp35 2199023255552
+  269 write *tmp38 BITMAP 2
   270 label *label478
   271 label *label479
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  272 op add :testAndSetMultiples.0:i 137 5
   273 label *label480
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  274 op idiv *tmp34 142 48
+  275 op mod *tmp36 142 48
+  276 op shl *tmp37 1 46
+  277 read *tmp35 BITMAP 2
+  278 op or *tmp38 *tmp35 70368744177664
+  279 write *tmp38 BITMAP 2
   280 label *label481
   281 label *label482
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  282 op add :testAndSetMultiples.0:i 142 5
   283 label *label483
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  284 op idiv *tmp34 147 48
+  285 op mod *tmp36 147 48
+  286 op shl *tmp37 1 3
+  287 read *tmp35 BITMAP 3
+  288 op or *tmp38 *tmp35 8
+  289 write *tmp38 BITMAP 3
   290 label *label484
   291 label *label485
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  292 op add :testAndSetMultiples.0:i 147 5
   293 label *label486
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  294 op idiv *tmp34 152 48
+  295 op mod *tmp36 152 48
+  296 op shl *tmp37 1 8
+  297 read *tmp35 BITMAP 3
+  298 op or *tmp38 *tmp35 256
+  299 write *tmp38 BITMAP 3
   300 label *label487
   301 label *label488
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  302 op add :testAndSetMultiples.0:i 152 5
   303 label *label489
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  304 op idiv *tmp34 157 48
+  305 op mod *tmp36 157 48
+  306 op shl *tmp37 1 13
+  307 read *tmp35 BITMAP 3
+  308 op or *tmp38 *tmp35 8192
+  309 write *tmp38 BITMAP 3
   310 label *label490
   311 label *label491
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  312 op add :testAndSetMultiples.0:i 157 5
   313 label *label492
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  314 op idiv *tmp34 162 48
+  315 op mod *tmp36 162 48
+  316 op shl *tmp37 1 18
+  317 read *tmp35 BITMAP 3
+  318 op or *tmp38 *tmp35 262144
+  319 write *tmp38 BITMAP 3
   320 label *label493
   321 label *label494
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  322 op add :testAndSetMultiples.0:i 162 5
   323 label *label495
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  324 op idiv *tmp34 167 48
+  325 op mod *tmp36 167 48
+  326 op shl *tmp37 1 23
+  327 read *tmp35 BITMAP 3
+  328 op or *tmp38 *tmp35 8388608
+  329 write *tmp38 BITMAP 3
   330 label *label496
   331 label *label497
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  332 op add :testAndSetMultiples.0:i 167 5
   333 label *label498
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  334 op idiv *tmp34 172 48
+  335 op mod *tmp36 172 48
+  336 op shl *tmp37 1 28
+  337 read *tmp35 BITMAP 3
+  338 op or *tmp38 *tmp35 268435456
+  339 write *tmp38 BITMAP 3
   340 label *label499
   341 label *label500
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  342 op add :testAndSetMultiples.0:i 172 5
   343 label *label501
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  344 op idiv *tmp34 177 48
+  345 op mod *tmp36 177 48
+  346 op shl *tmp37 1 33
+  347 read *tmp35 BITMAP 3
+  348 op or *tmp38 *tmp35 8589934592
+  349 write *tmp38 BITMAP 3
   350 label *label502
   351 label *label503
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  352 op add :testAndSetMultiples.0:i 177 5
   353 label *label504
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  354 op idiv *tmp34 182 48
+  355 op mod *tmp36 182 48
+  356 op shl *tmp37 1 38
+  357 read *tmp35 BITMAP 3
+  358 op or *tmp38 *tmp35 274877906944
+  359 write *tmp38 BITMAP 3
   360 label *label505
   361 label *label506
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  362 op add :testAndSetMultiples.0:i 182 5
   363 label *label507
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  364 op idiv *tmp34 187 48
+  365 op mod *tmp36 187 48
+  366 op shl *tmp37 1 43
+  367 read *tmp35 BITMAP 3
+  368 op or *tmp38 *tmp35 8796093022208
+  369 write *tmp38 BITMAP 3
   370 label *label508
   371 label *label509
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  372 op add :testAndSetMultiples.0:i 187 5
   373 label *label510
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  374 op idiv *tmp34 192 48
+  375 op mod *tmp36 192 48
+  376 op shl *tmp37 1 0
+  377 read *tmp35 BITMAP 4
+  378 op or *tmp38 *tmp35 1
+  379 write *tmp38 BITMAP 4
   380 label *label511
   381 label *label512
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  382 op add :testAndSetMultiples.0:i 192 5
   383 label *label513
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  384 op idiv *tmp34 197 48
+  385 op mod *tmp36 197 48
+  386 op shl *tmp37 1 5
+  387 read *tmp35 BITMAP 4
+  388 op or *tmp38 *tmp35 32
+  389 write *tmp38 BITMAP 4
   390 label *label514
   391 label *label515
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  392 op add :testAndSetMultiples.0:i 197 5
   393 label *label516
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  394 op idiv *tmp34 202 48
+  395 op mod *tmp36 202 48
+  396 op shl *tmp37 1 10
+  397 read *tmp35 BITMAP 4
+  398 op or *tmp38 *tmp35 1024
+  399 write *tmp38 BITMAP 4
   400 label *label517
   401 label *label518
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  402 op add :testAndSetMultiples.0:i 202 5
   403 label *label519
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  404 op idiv *tmp34 207 48
+  405 op mod *tmp36 207 48
+  406 op shl *tmp37 1 15
+  407 read *tmp35 BITMAP 4
+  408 op or *tmp38 *tmp35 32768
+  409 write *tmp38 BITMAP 4
   410 label *label520
   411 label *label521
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  412 op add :testAndSetMultiples.0:i 207 5
   413 label *label522
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  414 op idiv *tmp34 212 48
+  415 op mod *tmp36 212 48
+  416 op shl *tmp37 1 20
+  417 read *tmp35 BITMAP 4
+  418 op or *tmp38 *tmp35 1048576
+  419 write *tmp38 BITMAP 4
   420 label *label523
   421 label *label524
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  422 op add :testAndSetMultiples.0:i 212 5
   423 label *label525
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  424 op idiv *tmp34 217 48
+  425 op mod *tmp36 217 48
+  426 op shl *tmp37 1 25
+  427 read *tmp35 BITMAP 4
+  428 op or *tmp38 *tmp35 33554432
+  429 write *tmp38 BITMAP 4
   430 label *label526
   431 label *label527
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  432 op add :testAndSetMultiples.0:i 217 5
   433 label *label528
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  434 op idiv *tmp34 222 48
+  435 op mod *tmp36 222 48
+  436 op shl *tmp37 1 30
+  437 read *tmp35 BITMAP 4
+  438 op or *tmp38 *tmp35 1073741824
+  439 write *tmp38 BITMAP 4
   440 label *label529
   441 label *label530
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  442 op add :testAndSetMultiples.0:i 222 5
   443 label *label531
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  444 op idiv *tmp34 227 48
+  445 op mod *tmp36 227 48
+  446 op shl *tmp37 1 35
+  447 read *tmp35 BITMAP 4
+  448 op or *tmp38 *tmp35 34359738368
+  449 write *tmp38 BITMAP 4
   450 label *label532
   451 label *label533
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  452 op add :testAndSetMultiples.0:i 227 5
   453 label *label534
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  454 op idiv *tmp34 232 48
+  455 op mod *tmp36 232 48
+  456 op shl *tmp37 1 40
+  457 read *tmp35 BITMAP 4
+  458 op or *tmp38 *tmp35 1099511627776
+  459 write *tmp38 BITMAP 4
   460 label *label535
   461 label *label536
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  462 op add :testAndSetMultiples.0:i 232 5
   463 label *label537
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  464 op idiv *tmp34 237 48
+  465 op mod *tmp36 237 48
+  466 op shl *tmp37 1 45
+  467 read *tmp35 BITMAP 4
+  468 op or *tmp38 *tmp35 35184372088832
+  469 write *tmp38 BITMAP 4
   470 label *label538
   471 label *label539
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  472 op add :testAndSetMultiples.0:i 237 5
   473 label *label540
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  474 op idiv *tmp34 242 48
+  475 op mod *tmp36 242 48
+  476 op shl *tmp37 1 2
+  477 read *tmp35 BITMAP 5
+  478 op or *tmp38 *tmp35 4
+  479 write *tmp38 BITMAP 5
   480 label *label541
   481 label *label542
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  482 op add :testAndSetMultiples.0:i 242 5
   483 label *label543
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
-    * write *tmp38 BITMAP *tmp34
+  484 op idiv *tmp34 247 48
+  485 op mod *tmp36 247 48
+  486 op shl *tmp37 1 7
+  487 read *tmp35 BITMAP 5
+  488 op or *tmp38 *tmp35 128
+  489 write *tmp38 BITMAP 5
   490 label *label544
   491 label *label545
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 5
+  492 op add :testAndSetMultiples.0:i 247 5
   493 label *label67
   494 label *label68
   495 label *label69

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-193 instructions):
 
     8 label *label62
     9 op equal :testAndSetMultiples.0:result :getBit.0*retval false
    10 jump *label68 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 25 2
    11 label *label401
    12 label *label402
-    * op idiv *tmp34 12 48
-    * op mod *tmp36 12 48
-    * op shl *tmp37 1 12
    13 read *tmp35 BITMAP 0
    14 op or *tmp38 *tmp35 4096
    15 write *tmp38 BITMAP 0
    16 label *label403
    17 label *label404
-    * op add :testAndSetMultiples.0:i 12 5
    18 label *label405
-    * op idiv *tmp34 17 48
-    * op mod *tmp36 17 48
-    * op shl *tmp37 1 17
    19 read *tmp35 BITMAP 0
    20 op or *tmp38 *tmp35 131072
    21 write *tmp38 BITMAP 0
    22 label *label406
    23 label *label407
-    * op add :testAndSetMultiples.0:i 17 5
    24 label *label408
-    * op idiv *tmp34 22 48
-    * op mod *tmp36 22 48
-    * op shl *tmp37 1 22
    25 read *tmp35 BITMAP 0
    26 op or *tmp38 *tmp35 4194304
    27 write *tmp38 BITMAP 0
    28 label *label409
    29 label *label410
-    * op add :testAndSetMultiples.0:i 22 5
    30 label *label411
-    * op idiv *tmp34 27 48
-    * op mod *tmp36 27 48
-    * op shl *tmp37 1 27
    31 read *tmp35 BITMAP 0
    32 op or *tmp38 *tmp35 134217728
    33 write *tmp38 BITMAP 0
    34 label *label412
    35 label *label413
-    * op add :testAndSetMultiples.0:i 27 5
    36 label *label414
-    * op idiv *tmp34 32 48
-    * op mod *tmp36 32 48
-    * op shl *tmp37 1 32
    37 read *tmp35 BITMAP 0
    38 op or *tmp38 *tmp35 4294967296
    39 write *tmp38 BITMAP 0
    40 label *label415
    41 label *label416
-    * op add :testAndSetMultiples.0:i 32 5
    42 label *label417
-    * op idiv *tmp34 37 48
-    * op mod *tmp36 37 48
-    * op shl *tmp37 1 37
    43 read *tmp35 BITMAP 0
    44 op or *tmp38 *tmp35 137438953472
    45 write *tmp38 BITMAP 0
    46 label *label418
    47 label *label419
-    * op add :testAndSetMultiples.0:i 37 5
    48 label *label420
-    * op idiv *tmp34 42 48
-    * op mod *tmp36 42 48
-    * op shl *tmp37 1 42
    49 read *tmp35 BITMAP 0
    50 op or *tmp38 *tmp35 4398046511104
    51 write *tmp38 BITMAP 0
    52 label *label421
    53 label *label422
-    * op add :testAndSetMultiples.0:i 42 5
    54 label *label423
-    * op idiv *tmp34 47 48
-    * op mod *tmp36 47 48
-    * op shl *tmp37 1 47
    55 read *tmp35 BITMAP 0
    56 op or *tmp38 *tmp35 140737488355328
    57 write *tmp38 BITMAP 0
    58 label *label424
    59 label *label425
-    * op add :testAndSetMultiples.0:i 47 5
    60 label *label426
-    * op idiv *tmp34 52 48
-    * op mod *tmp36 52 48
-    * op shl *tmp37 1 4
    61 read *tmp35 BITMAP 1
    62 op or *tmp38 *tmp35 16
    63 write *tmp38 BITMAP 1
    64 label *label427
    65 label *label428
-    * op add :testAndSetMultiples.0:i 52 5
    66 label *label429
-    * op idiv *tmp34 57 48
-    * op mod *tmp36 57 48
-    * op shl *tmp37 1 9
    67 read *tmp35 BITMAP 1
    68 op or *tmp38 *tmp35 512
    69 write *tmp38 BITMAP 1
    70 label *label430
    71 label *label431
-    * op add :testAndSetMultiples.0:i 57 5
    72 label *label432
-    * op idiv *tmp34 62 48
-    * op mod *tmp36 62 48
-    * op shl *tmp37 1 14
    73 read *tmp35 BITMAP 1
    74 op or *tmp38 *tmp35 16384
    75 write *tmp38 BITMAP 1
    76 label *label433
    77 label *label434
-    * op add :testAndSetMultiples.0:i 62 5
    78 label *label435
-    * op idiv *tmp34 67 48
-    * op mod *tmp36 67 48
-    * op shl *tmp37 1 19
    79 read *tmp35 BITMAP 1
    80 op or *tmp38 *tmp35 524288
    81 write *tmp38 BITMAP 1
    82 label *label436
    83 label *label437
-    * op add :testAndSetMultiples.0:i 67 5
    84 label *label438
-    * op idiv *tmp34 72 48
-    * op mod *tmp36 72 48
-    * op shl *tmp37 1 24
    85 read *tmp35 BITMAP 1
    86 op or *tmp38 *tmp35 16777216
    87 write *tmp38 BITMAP 1
    88 label *label439
    89 label *label440
-    * op add :testAndSetMultiples.0:i 72 5
    90 label *label441
-    * op idiv *tmp34 77 48
-    * op mod *tmp36 77 48
-    * op shl *tmp37 1 29
    91 read *tmp35 BITMAP 1
    92 op or *tmp38 *tmp35 536870912
    93 write *tmp38 BITMAP 1
    94 label *label442
    95 label *label443
-    * op add :testAndSetMultiples.0:i 77 5
    96 label *label444
-    * op idiv *tmp34 82 48
-    * op mod *tmp36 82 48
-    * op shl *tmp37 1 34
    97 read *tmp35 BITMAP 1
    98 op or *tmp38 *tmp35 17179869184
    99 write *tmp38 BITMAP 1
   100 label *label445
   101 label *label446
-    * op add :testAndSetMultiples.0:i 82 5
   102 label *label447
-    * op idiv *tmp34 87 48
-    * op mod *tmp36 87 48
-    * op shl *tmp37 1 39
   103 read *tmp35 BITMAP 1
   104 op or *tmp38 *tmp35 549755813888
   105 write *tmp38 BITMAP 1
   106 label *label448
   107 label *label449
-    * op add :testAndSetMultiples.0:i 87 5
   108 label *label450
-    * op idiv *tmp34 92 48
-    * op mod *tmp36 92 48
-    * op shl *tmp37 1 44
   109 read *tmp35 BITMAP 1
   110 op or *tmp38 *tmp35 17592186044416
   111 write *tmp38 BITMAP 1
   112 label *label451
   113 label *label452
-    * op add :testAndSetMultiples.0:i 92 5
   114 label *label453
-    * op idiv *tmp34 97 48
-    * op mod *tmp36 97 48
-    * op shl *tmp37 1 1
   115 read *tmp35 BITMAP 2
   116 op or *tmp38 *tmp35 2
   117 write *tmp38 BITMAP 2
   118 label *label454
   119 label *label455
-    * op add :testAndSetMultiples.0:i 97 5
   120 label *label456
-    * op idiv *tmp34 102 48
-    * op mod *tmp36 102 48
-    * op shl *tmp37 1 6
   121 read *tmp35 BITMAP 2
   122 op or *tmp38 *tmp35 64
   123 write *tmp38 BITMAP 2
   124 label *label457
   125 label *label458
-    * op add :testAndSetMultiples.0:i 102 5
   126 label *label459
-    * op idiv *tmp34 107 48
-    * op mod *tmp36 107 48
-    * op shl *tmp37 1 11
   127 read *tmp35 BITMAP 2
   128 op or *tmp38 *tmp35 2048
   129 write *tmp38 BITMAP 2
   130 label *label460
   131 label *label461
-    * op add :testAndSetMultiples.0:i 107 5
   132 label *label462
-    * op idiv *tmp34 112 48
-    * op mod *tmp36 112 48
-    * op shl *tmp37 1 16
   133 read *tmp35 BITMAP 2
   134 op or *tmp38 *tmp35 65536
   135 write *tmp38 BITMAP 2
   136 label *label463
   137 label *label464
-    * op add :testAndSetMultiples.0:i 112 5
   138 label *label465
-    * op idiv *tmp34 117 48
-    * op mod *tmp36 117 48
-    * op shl *tmp37 1 21
   139 read *tmp35 BITMAP 2
   140 op or *tmp38 *tmp35 2097152
   141 write *tmp38 BITMAP 2
   142 label *label466
   143 label *label467
-    * op add :testAndSetMultiples.0:i 117 5
   144 label *label468
-    * op idiv *tmp34 122 48
-    * op mod *tmp36 122 48
-    * op shl *tmp37 1 26
   145 read *tmp35 BITMAP 2
   146 op or *tmp38 *tmp35 67108864
   147 write *tmp38 BITMAP 2
   148 label *label469
   149 label *label470
-    * op add :testAndSetMultiples.0:i 122 5
   150 label *label471
-    * op idiv *tmp34 127 48
-    * op mod *tmp36 127 48
-    * op shl *tmp37 1 31
   151 read *tmp35 BITMAP 2
   152 op or *tmp38 *tmp35 2147483648
   153 write *tmp38 BITMAP 2
   154 label *label472
   155 label *label473
-    * op add :testAndSetMultiples.0:i 127 5
   156 label *label474
-    * op idiv *tmp34 132 48
-    * op mod *tmp36 132 48
-    * op shl *tmp37 1 36
   157 read *tmp35 BITMAP 2
   158 op or *tmp38 *tmp35 68719476736
   159 write *tmp38 BITMAP 2
   160 label *label475
   161 label *label476
-    * op add :testAndSetMultiples.0:i 132 5
   162 label *label477
-    * op idiv *tmp34 137 48
-    * op mod *tmp36 137 48
-    * op shl *tmp37 1 41
   163 read *tmp35 BITMAP 2
   164 op or *tmp38 *tmp35 2199023255552
   165 write *tmp38 BITMAP 2
   166 label *label478
   167 label *label479
-    * op add :testAndSetMultiples.0:i 137 5
   168 label *label480
-    * op idiv *tmp34 142 48
-    * op mod *tmp36 142 48
-    * op shl *tmp37 1 46
   169 read *tmp35 BITMAP 2
   170 op or *tmp38 *tmp35 70368744177664
   171 write *tmp38 BITMAP 2
   172 label *label481
   173 label *label482
-    * op add :testAndSetMultiples.0:i 142 5
   174 label *label483
-    * op idiv *tmp34 147 48
-    * op mod *tmp36 147 48
-    * op shl *tmp37 1 3
   175 read *tmp35 BITMAP 3
   176 op or *tmp38 *tmp35 8
   177 write *tmp38 BITMAP 3
   178 label *label484
   179 label *label485
-    * op add :testAndSetMultiples.0:i 147 5
   180 label *label486
-    * op idiv *tmp34 152 48
-    * op mod *tmp36 152 48
-    * op shl *tmp37 1 8
   181 read *tmp35 BITMAP 3
   182 op or *tmp38 *tmp35 256
   183 write *tmp38 BITMAP 3
   184 label *label487
   185 label *label488
-    * op add :testAndSetMultiples.0:i 152 5
   186 label *label489
-    * op idiv *tmp34 157 48
-    * op mod *tmp36 157 48
-    * op shl *tmp37 1 13
   187 read *tmp35 BITMAP 3
   188 op or *tmp38 *tmp35 8192
   189 write *tmp38 BITMAP 3
   190 label *label490
   191 label *label491
-    * op add :testAndSetMultiples.0:i 157 5
   192 label *label492
-    * op idiv *tmp34 162 48
-    * op mod *tmp36 162 48
-    * op shl *tmp37 1 18
   193 read *tmp35 BITMAP 3
   194 op or *tmp38 *tmp35 262144
   195 write *tmp38 BITMAP 3
   196 label *label493
   197 label *label494
-    * op add :testAndSetMultiples.0:i 162 5
   198 label *label495
-    * op idiv *tmp34 167 48
-    * op mod *tmp36 167 48
-    * op shl *tmp37 1 23
   199 read *tmp35 BITMAP 3
   200 op or *tmp38 *tmp35 8388608
   201 write *tmp38 BITMAP 3
   202 label *label496
   203 label *label497
-    * op add :testAndSetMultiples.0:i 167 5
   204 label *label498
-    * op idiv *tmp34 172 48
-    * op mod *tmp36 172 48
-    * op shl *tmp37 1 28
   205 read *tmp35 BITMAP 3
   206 op or *tmp38 *tmp35 268435456
   207 write *tmp38 BITMAP 3
   208 label *label499
   209 label *label500
-    * op add :testAndSetMultiples.0:i 172 5
   210 label *label501
-    * op idiv *tmp34 177 48
-    * op mod *tmp36 177 48
-    * op shl *tmp37 1 33
   211 read *tmp35 BITMAP 3
   212 op or *tmp38 *tmp35 8589934592
   213 write *tmp38 BITMAP 3
   214 label *label502
   215 label *label503
-    * op add :testAndSetMultiples.0:i 177 5
   216 label *label504
-    * op idiv *tmp34 182 48
-    * op mod *tmp36 182 48
-    * op shl *tmp37 1 38
   217 read *tmp35 BITMAP 3
   218 op or *tmp38 *tmp35 274877906944
   219 write *tmp38 BITMAP 3
   220 label *label505
   221 label *label506
-    * op add :testAndSetMultiples.0:i 182 5
   222 label *label507
-    * op idiv *tmp34 187 48
-    * op mod *tmp36 187 48
-    * op shl *tmp37 1 43
   223 read *tmp35 BITMAP 3
   224 op or *tmp38 *tmp35 8796093022208
   225 write *tmp38 BITMAP 3
   226 label *label508
   227 label *label509
-    * op add :testAndSetMultiples.0:i 187 5
   228 label *label510
-    * op idiv *tmp34 192 48
-    * op mod *tmp36 192 48
-    * op shl *tmp37 1 0
   229 read *tmp35 BITMAP 4
   230 op or *tmp38 *tmp35 1
   231 write *tmp38 BITMAP 4
   232 label *label511
   233 label *label512
-    * op add :testAndSetMultiples.0:i 192 5
   234 label *label513
-    * op idiv *tmp34 197 48
-    * op mod *tmp36 197 48
-    * op shl *tmp37 1 5
   235 read *tmp35 BITMAP 4
   236 op or *tmp38 *tmp35 32
   237 write *tmp38 BITMAP 4
   238 label *label514
   239 label *label515
-    * op add :testAndSetMultiples.0:i 197 5
   240 label *label516
-    * op idiv *tmp34 202 48
-    * op mod *tmp36 202 48
-    * op shl *tmp37 1 10
   241 read *tmp35 BITMAP 4
   242 op or *tmp38 *tmp35 1024
   243 write *tmp38 BITMAP 4
   244 label *label517
   245 label *label518
-    * op add :testAndSetMultiples.0:i 202 5
   246 label *label519
-    * op idiv *tmp34 207 48
-    * op mod *tmp36 207 48
-    * op shl *tmp37 1 15
   247 read *tmp35 BITMAP 4
   248 op or *tmp38 *tmp35 32768
   249 write *tmp38 BITMAP 4
   250 label *label520
   251 label *label521
-    * op add :testAndSetMultiples.0:i 207 5
   252 label *label522
-    * op idiv *tmp34 212 48
-    * op mod *tmp36 212 48
-    * op shl *tmp37 1 20
   253 read *tmp35 BITMAP 4
   254 op or *tmp38 *tmp35 1048576
   255 write *tmp38 BITMAP 4
   256 label *label523
   257 label *label524
-    * op add :testAndSetMultiples.0:i 212 5
   258 label *label525
-    * op idiv *tmp34 217 48
-    * op mod *tmp36 217 48
-    * op shl *tmp37 1 25
   259 read *tmp35 BITMAP 4
   260 op or *tmp38 *tmp35 33554432
   261 write *tmp38 BITMAP 4
   262 label *label526
   263 label *label527
-    * op add :testAndSetMultiples.0:i 217 5
   264 label *label528
-    * op idiv *tmp34 222 48
-    * op mod *tmp36 222 48
-    * op shl *tmp37 1 30
   265 read *tmp35 BITMAP 4
   266 op or *tmp38 *tmp35 1073741824
   267 write *tmp38 BITMAP 4
   268 label *label529
   269 label *label530
-    * op add :testAndSetMultiples.0:i 222 5
   270 label *label531
-    * op idiv *tmp34 227 48
-    * op mod *tmp36 227 48
-    * op shl *tmp37 1 35
   271 read *tmp35 BITMAP 4
   272 op or *tmp38 *tmp35 34359738368
   273 write *tmp38 BITMAP 4
   274 label *label532
   275 label *label533
-    * op add :testAndSetMultiples.0:i 227 5
   276 label *label534
-    * op idiv *tmp34 232 48
-    * op mod *tmp36 232 48
-    * op shl *tmp37 1 40
   277 read *tmp35 BITMAP 4
   278 op or *tmp38 *tmp35 1099511627776
   279 write *tmp38 BITMAP 4
   280 label *label535
   281 label *label536
-    * op add :testAndSetMultiples.0:i 232 5
   282 label *label537
-    * op idiv *tmp34 237 48
-    * op mod *tmp36 237 48
-    * op shl *tmp37 1 45
   283 read *tmp35 BITMAP 4
   284 op or *tmp38 *tmp35 35184372088832
   285 write *tmp38 BITMAP 4
   286 label *label538
   287 label *label539
-    * op add :testAndSetMultiples.0:i 237 5
   288 label *label540
-    * op idiv *tmp34 242 48
-    * op mod *tmp36 242 48
-    * op shl *tmp37 1 2
   289 read *tmp35 BITMAP 5
   290 op or *tmp38 *tmp35 4
   291 write *tmp38 BITMAP 5
   292 label *label541
   293 label *label542
-    * op add :testAndSetMultiples.0:i 242 5
   294 label *label543
-    * op idiv *tmp34 247 48
-    * op mod *tmp36 247 48
-    * op shl *tmp37 1 7
   295 read *tmp35 BITMAP 5
   296 op or *tmp38 *tmp35 128
   297 write *tmp38 BITMAP 5
   298 label *label544
   299 label *label545
-    * op add :testAndSetMultiples.0:i 247 5
   300 label *label67
   301 label *label68
   302 label *label69

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-1 instructions):
 
   850 jump *label152 equal :testAndSetMultiples.0:result false
   851 op idiv :testAndSetMultiples.0:i 529 2
   852 label *label147
-    * jump *label151 greaterThan 264 250
+  853 jump *label151 always
   854 label *label148
   855 op idiv *tmp34 :testAndSetMultiples.0:i 48
   856 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   879 jump *label165 equal :testAndSetMultiples.0:result false
   880 op idiv :testAndSetMultiples.0:i 625 2
   881 label *label160
-    * jump *label164 greaterThan 312 250
+  882 jump *label164 always
   883 label *label161
   884 op idiv *tmp34 :testAndSetMultiples.0:i 48
   885 op mod *tmp36 :testAndSetMultiples.0:i 48
 
   903 label *label170
   904 label *label5
   905 label *label10
-    * jump *label12 greaterThan 29 500
   906 label *label28
   907 op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
   908 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-14 instructions):
 
   848 label *label146
   849 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   850 jump *label152 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 529 2
   851 label *label147
   852 jump *label151 always
   853 label *label148
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
   854 write *tmp38 BITMAP *tmp34
   855 label *label149
   856 label *label150
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 23
   857 jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   858 label *label151
   859 label *label152
 
   870 label *label159
   871 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   872 jump *label165 equal :testAndSetMultiples.0:result false
-    * op idiv :testAndSetMultiples.0:i 625 2
   873 label *label160
   874 jump *label164 always
   875 label *label161
-    * op idiv *tmp34 :testAndSetMultiples.0:i 48
-    * op mod *tmp36 :testAndSetMultiples.0:i 48
-    * op shl *tmp37 1 *tmp36
-    * read *tmp35 BITMAP *tmp34
-    * op or *tmp38 *tmp35 *tmp37
   876 write *tmp38 BITMAP *tmp34
   877 label *label162
   878 label *label163
-    * op add :testAndSetMultiples.0:i :testAndSetMultiples.0:i 25
   879 jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   880 label *label164
   881 label *label165

Modifications by Final phase, Jump Threading, iteration 1:
 
     7 op and :getBit.0*retval *tmp21 4
     8 label *label62
     9 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label68 equal :testAndSetMultiples.0:result false
+   10 jump *label71 equal :testAndSetMultiples.0:result false
    11 label *label401
    12 label *label402
    13 read *tmp35 BITMAP 0
 
   311 op and :getBit.0*retval *tmp21 8
   312 label *label75
   313 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label81 equal :testAndSetMultiples.0:result false
+  314 jump *label84 equal :testAndSetMultiples.0:result false
   315 label *label301
   316 label *label302
   317 read *tmp35 BITMAP 0
 
   527 op and :getBit.0*retval *tmp21 32
   528 label *label90
   529 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label96 equal :testAndSetMultiples.0:result false
+  530 jump *label99 equal :testAndSetMultiples.0:result false
   531 label *label246
   532 label *label247
   533 read *tmp35 BITMAP 1
 
   651 op and :getBit.0*retval *tmp21 64
   652 label *label103
   653 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label109 equal :testAndSetMultiples.0:result false
+  654 jump *label112 equal :testAndSetMultiples.0:result false
   655 label *label206
   656 label *label207
   657 read *tmp35 BITMAP 1
 
   747 op and :getBit.0*retval *tmp21 256
   748 label *label118
   749 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label124 equal :testAndSetMultiples.0:result false
+  750 jump *label127 equal :testAndSetMultiples.0:result false
   751 label *label184
   752 label *label185
   753 read *tmp35 BITMAP 3
 
   805 op and :getBit.0*retval *tmp21 512
   806 label *label131
   807 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label137 equal :testAndSetMultiples.0:result false
+  808 jump *label140 equal :testAndSetMultiples.0:result false
   809 label *label171
   810 label *label172
   811 read *tmp35 BITMAP 3
 
   847 op and :getBit.0*retval *tmp21 2048
   848 label *label146
   849 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label152 equal :testAndSetMultiples.0:result false
+  850 jump *label155 equal :testAndSetMultiples.0:result false
   851 label *label147
   852 jump *label151 always
   853 label *label148
 
   869 op and :getBit.0*retval *tmp21 4096
   870 label *label159
   871 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label165 equal :testAndSetMultiples.0:result false
+  872 jump *label168 equal :testAndSetMultiples.0:result false
   873 label *label160
   874 jump *label164 always
   875 label *label161

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-4 instructions):
 
   850 jump *label155 equal :testAndSetMultiples.0:result false
   851 label *label147
   852 jump *label151 always
-    * label *label148
-    * write *tmp38 BITMAP *tmp34
-    * label *label149
-    * label *label150
-    * jump *label148 lessThanEq :testAndSetMultiples.0:i 250
   853 label *label151
   854 label *label152
   855 label *label153
 
   867 jump *label168 equal :testAndSetMultiples.0:result false
   868 label *label160
   869 jump *label164 always
-    * label *label161
-    * write *tmp38 BITMAP *tmp34
-    * label *label162
-    * label *label163
-    * jump *label161 lessThanEq :testAndSetMultiples.0:i 250
   870 label *label164
   871 label *label165
   872 label *label166

Modifications by Final phase, Single Step Elimination, iteration 1 (-9 instructions):
 
   301 label *label68
   302 label *label69
   303 label *label70
-    * jump *label71 equal :testAndSetMultiples.0:result false
   304 op add :sumPrimesUpTo.0:sum 5 5
   305 label *label71
   306 label *label72
 
   514 label *label81
   515 label *label82
   516 label *label83
-    * jump *label84 equal :testAndSetMultiples.0:result false
   517 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
   518 label *label84
   519 label *label85
 
   639 label *label96
   640 label *label97
   641 label *label98
-    * jump *label99 equal :testAndSetMultiples.0:result false
   642 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
   643 label *label99
   644 label *label100
 
   732 label *label109
   733 label *label110
   734 label *label111
-    * jump *label112 equal :testAndSetMultiples.0:result false
   735 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
   736 label *label112
   737 label *label113
 
   791 label *label124
   792 label *label125
   793 label *label126
-    * jump *label127 equal :testAndSetMultiples.0:result false
   794 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
   795 label *label127
   796 label *label128
 
   830 label *label137
   831 label *label138
   832 label *label139
-    * jump *label140 equal :testAndSetMultiples.0:result false
   833 op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
   834 label *label140
   835 label *label141
 
   843 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   844 jump *label155 equal :testAndSetMultiples.0:result false
   845 label *label147
-    * jump *label151 always
   846 label *label151
   847 label *label152
   848 label *label153
 
   859 op equal :testAndSetMultiples.0:result :getBit.0*retval false
   860 jump *label168 equal :testAndSetMultiples.0:result false
   861 label *label160
-    * jump *label164 always
   862 label *label164
   863 label *label165
   864 label *label166
 
   907 label *label2
   908 assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
   909 stop
-    * end

Modifications by Final phase, Single Step Elimination, iteration 2 (-2 instructions):
 
   841 op and :getBit.0*retval *tmp21 2048
   842 label *label146
   843 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label155 equal :testAndSetMultiples.0:result false
   844 label *label147
   845 label *label151
   846 label *label152
 
   856 op and :getBit.0*retval *tmp21 4096
   857 label *label159
   858 op equal :testAndSetMultiples.0:result :getBit.0*retval false
-    * jump *label168 equal :testAndSetMultiples.0:result false
   859 label *label160
   860 label *label164
   861 label *label165

Final code before resolving virtual instructions:

set BITMAP bank1
set :sumPrimesUpTo.0:sum 5
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label71 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 0
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 536870912
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 65536
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8796093022208
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1024
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 4
write *tmp38 BITMAP 5
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum 5 5
label *label71
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 8
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label84 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 16777216
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 274877906944
write *tmp38 BITMAP 0
read *tmp35 BITMAP 0
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 0
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 33554432
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4294967296
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 549755813888
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 70368744177664
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 140737488355328
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 8192
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2097152
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 268435456
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4398046511104
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 5
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 7
label *label84
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 32
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label99 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 4096
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 8388608
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 1
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 256
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 524288
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1073741824
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2199023255552
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 16
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32768
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 2048
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8589934592
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 11
label *label99
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 64
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label112 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 1
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 1
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 2
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 16384
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 134217728
write *tmp38 BITMAP 2
read *tmp35 BITMAP 2
op or *tmp38 *tmp35 1099511627776
write *tmp38 BITMAP 2
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 32
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 262144
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 2147483648
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17592186044416
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 512
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 4194304
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 34359738368
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 13
label *label112
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 256
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label127 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 1
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 131072
write *tmp38 BITMAP 3
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 17179869184
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 8
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 1048576
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 137438953472
write *tmp38 BITMAP 4
read *tmp35 BITMAP 5
op or *tmp38 *tmp35 64
write *tmp38 BITMAP 5
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 17
label *label127
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 512
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label140 equal :testAndSetMultiples.0:result false
read *tmp35 BITMAP 3
op or *tmp38 *tmp35 68719476736
write *tmp38 BITMAP 3
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 128
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 67108864
write *tmp38 BITMAP 4
read *tmp35 BITMAP 4
op or *tmp38 *tmp35 35184372088832
write *tmp38 BITMAP 4
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 19
label *label140
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 2048
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label155 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 23
label *label155
read *tmp21 BITMAP 0
op and :getBit.0*retval *tmp21 4096
op equal :testAndSetMultiples.0:result :getBit.0*retval false
jump *label168 equal :testAndSetMultiples.0:result false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum 25
label *label168
op add :sumPrimesUpTo.0:i 25 4
label *label28
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label13 notEqual :getBit.0*retval false
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label13
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 2
op idiv :getBit.0:bitIndex :sumPrimesUpTo.0:i 2
op idiv *tmp20 :getBit.0:bitIndex 48
op mod *tmp22 :getBit.0:bitIndex 48
op shl *tmp23 1 *tmp22
read *tmp21 BITMAP *tmp20
op and :getBit.0*retval *tmp21 *tmp23
jump *label15 notEqual :getBit.0*retval false
jump *label17 greaterThan :sumPrimesUpTo.0:i 500
op add :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:sum :sumPrimesUpTo.0:i
label *label17
label *label15
op add :sumPrimesUpTo.0:i :sumPrimesUpTo.0:i 4
jump *label28 lessThanEq :sumPrimesUpTo.0:i 500
assertequals 21536 :sumPrimesUpTo.0:sum "sumPrimesUpTo(500)"
stop
