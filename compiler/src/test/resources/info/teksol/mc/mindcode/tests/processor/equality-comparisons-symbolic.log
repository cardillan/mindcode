   588 instructions before optimizations.
    15 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Single Step Elimination (7 iterations).
     8 instructions modified by Expression Optimization (2 passes, 4 iterations).
   132 instructions eliminated by If Expression Optimization (5 iterations).
   332 instructions eliminated by Data Flow Optimization (3 passes, 11 iterations).
    39 instructions eliminated by Print Merging.
    69 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-15 instructions):
 
    53 print *tmp8
    54 print *tmp11
    55 assertprints :compare:expected :compare:title
-    * set *tmp0 null
    56 label *label0
    57 # "Function: inline def compare(in title, in a, in b, in expected)"
    58 set :compare.1:title "comparison 2"
 
   109 print *tmp21
   110 print *tmp24
   111 assertprints :compare.1:expected :compare.1:title
-    * set *tmp13 null
   112 label *label13
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 set :compare.2:title "comparison 3"
 
   165 print *tmp34
   166 print *tmp37
   167 assertprints :compare.2:expected :compare.2:title
-    * set *tmp26 null
   168 label *label26
   169 # "Function: inline def compare(in title, in a, in b, in expected)"
   170 set :compare.3:title "comparison 4"
 
   221 print *tmp47
   222 print *tmp50
   223 assertprints :compare.3:expected :compare.3:title
-    * set *tmp39 null
   224 label *label39
   225 # "Function: inline def compare(in title, in a, in b, in expected)"
   226 set :compare.4:title "comparison 5"
 
   277 print *tmp60
   278 print *tmp63
   279 assertprints :compare.4:expected :compare.4:title
-    * set *tmp52 null
   280 label *label52
   281 # "Function: inline def compare(in title, in a, in b, in expected)"
   282 set :compare.5:title "comparison 6"
 
   333 print *tmp73
   334 print *tmp76
   335 assertprints :compare.5:expected :compare.5:title
-    * set *tmp65 null
   336 label *label65
   337 # "Function: inline def compare(in title, in a, in b, in expected)"
   338 set :compare.6:title "comparison 7"
 
   389 print *tmp86
   390 print *tmp89
   391 assertprints :compare.6:expected :compare.6:title
-    * set *tmp78 null
   392 label *label78
   393 # "Function: inline def compare(in title, in a, in b, in expected)"
   394 set :compare.7:title "comparison 8"
 
   445 print *tmp99
   446 print *tmp102
   447 assertprints :compare.7:expected :compare.7:title
-    * set *tmp91 null
   448 label *label91
   449 # "Function: inline def compare(in title, in a, in b, in expected)"
   450 set :compare.8:title "comparison 9"
 
   501 print *tmp112
   502 print *tmp115
   503 assertprints :compare.8:expected :compare.8:title
-    * set *tmp104 null
   504 label *label104
   505 # "Function: inline def compare(in title, in a, in b, in expected)"
   506 set :compare.9:title "comparison 10"
 
   557 print *tmp125
   558 print *tmp128
   559 assertprints :compare.9:expected :compare.9:title
-    * set *tmp117 null
   560 label *label117
   561 # "Function: inline def compare(in title, in a, in b, in expected)"
   562 set :compare.10:title "comparison 11"
 
   613 print *tmp138
   614 print *tmp141
   615 assertprints :compare.10:expected :compare.10:title
-    * set *tmp130 null
   616 label *label130
   617 # "Function: inline def compare(in title, in a, in b, in expected)"
   618 set :compare.11:title "comparison 12"
 
   669 print *tmp151
   670 print *tmp154
   671 assertprints :compare.11:expected :compare.11:title
-    * set *tmp143 null
   672 label *label143
   673 # "Function: inline def compare(in title, in a, in b, in expected)"
   674 set :compare.12:title "comparison 13"
 
   725 print *tmp164
   726 print *tmp167
   727 assertprints :compare.12:expected :compare.12:title
-    * set *tmp156 null
   728 label *label156
   729 # "Function: inline def compare(in title, in a, in b, in expected)"
   730 set :compare.13:title "comparison 14"
 
   781 print *tmp177
   782 print *tmp180
   783 assertprints :compare.13:expected :compare.13:title
-    * set *tmp169 null
   784 label *label169
   785 # "Function: inline def compare(in title, in a, in b, in expected)"
   786 set :compare.14:title "comparison 15"
 
   837 print *tmp190
   838 print *tmp193
   839 assertprints :compare.14:expected :compare.14:title
-    * set *tmp182 null
   840 label *label182
   841 stop
   842 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 set :compare:b 0
     5 set :compare:expected "TFFT"
     6 assertflush
-    * op equal *tmp1 :compare:a :compare:b
+    7 op equal *tmp1 null 0
     8 # "Function: inline def eval(in b)"
-    * set :eval:b *tmp1
-    * jump *label2 equal :eval:b false
+    9 set :eval:b true
+   10 jump *label2 equal *tmp1 false
    11 set *tmp3 "T"
    12 jump *label3 always
    13 label *label2
 
    15 label *label3
    16 set *tmp2 *tmp3
    17 label *label1
-    * op notEqual *tmp4 :compare:a :compare:b
+   18 op notEqual *tmp4 null 0
    19 # "Function: inline def eval(in b)"
-    * set :eval.1:b *tmp4
-    * jump *label5 equal :eval.1:b false
+   20 set :eval.1:b false
+   21 jump *label5 equal *tmp4 false
    22 set *tmp6 "T"
    23 jump *label6 always
    24 label *label5
 
    26 label *label6
    27 set *tmp5 *tmp6
    28 label *label4
-    * op strictEqual *tmp7 :compare:a :compare:b
+   29 op strictEqual *tmp7 null 0
    30 # "Function: inline def eval(in b)"
-    * set :eval.2:b *tmp7
-    * jump *label8 equal :eval.2:b false
+   31 set :eval.2:b false
+   32 jump *label8 equal *tmp7 false
    33 set *tmp9 "T"
    34 jump *label9 always
    35 label *label8
 
    37 label *label9
    38 set *tmp8 *tmp9
    39 label *label7
-    * op strictNotEqual *tmp10 :compare:a :compare:b
+   40 op strictNotEqual *tmp10 null 0
    41 # "Function: inline def eval(in b)"
-    * set :eval.3:b *tmp10
-    * jump *label11 equal :eval.3:b false
+   42 set :eval.3:b true
+   43 jump *label11 equal *tmp10 false
    44 set *tmp12 "T"
    45 jump *label12 always
    46 label *label11
 
    48 label *label12
    49 set *tmp11 *tmp12
    50 label *label10
-    * print *tmp2
-    * print *tmp5
-    * print *tmp8
-    * print *tmp11
-    * assertprints :compare:expected :compare:title
+   51 print *tmp3
+   52 print *tmp6
+   53 print *tmp9
+   54 print *tmp12
+   55 assertprints "TFFT" "comparison 1"
    56 label *label0
    57 # "Function: inline def compare(in title, in a, in b, in expected)"
    58 set :compare.1:title "comparison 2"
 
    60 set :compare.1:b 1
    61 set :compare.1:expected "FTFT"
    62 assertflush
-    * op equal *tmp14 :compare.1:a :compare.1:b
+   63 op equal *tmp14 null 1
    64 # "Function: inline def eval(in b)"
-    * set :eval.4:b *tmp14
-    * jump *label15 equal :eval.4:b false
+   65 set :eval.4:b false
+   66 jump *label15 equal *tmp14 false
    67 set *tmp16 "T"
    68 jump *label16 always
    69 label *label15
 
    71 label *label16
    72 set *tmp15 *tmp16
    73 label *label14
-    * op notEqual *tmp17 :compare.1:a :compare.1:b
+   74 op notEqual *tmp17 null 1
    75 # "Function: inline def eval(in b)"
-    * set :eval.5:b *tmp17
-    * jump *label18 equal :eval.5:b false
+   76 set :eval.5:b true
+   77 jump *label18 equal *tmp17 false
    78 set *tmp19 "T"
    79 jump *label19 always
    80 label *label18
 
    82 label *label19
    83 set *tmp18 *tmp19
    84 label *label17
-    * op strictEqual *tmp20 :compare.1:a :compare.1:b
+   85 op strictEqual *tmp20 null 1
    86 # "Function: inline def eval(in b)"
-    * set :eval.6:b *tmp20
-    * jump *label21 equal :eval.6:b false
+   87 set :eval.6:b false
+   88 jump *label21 equal *tmp20 false
    89 set *tmp22 "T"
    90 jump *label22 always
    91 label *label21
 
    93 label *label22
    94 set *tmp21 *tmp22
    95 label *label20
-    * op strictNotEqual *tmp23 :compare.1:a :compare.1:b
+   96 op strictNotEqual *tmp23 null 1
    97 # "Function: inline def eval(in b)"
-    * set :eval.7:b *tmp23
-    * jump *label24 equal :eval.7:b false
+   98 set :eval.7:b true
+   99 jump *label24 equal *tmp23 false
   100 set *tmp25 "T"
   101 jump *label25 always
   102 label *label24
 
   104 label *label25
   105 set *tmp24 *tmp25
   106 label *label23
-    * print *tmp15
-    * print *tmp18
-    * print *tmp21
-    * print *tmp24
-    * assertprints :compare.1:expected :compare.1:title
+  107 print *tmp16
+  108 print *tmp19
+  109 print *tmp22
+  110 print *tmp25
+  111 assertprints "FTFT" "comparison 2"
   112 label *label13
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 set :compare.2:title "comparison 3"
 
   116 set :compare.2:b 2
   117 set :compare.2:expected "FTFT"
   118 assertflush
-    * op equal *tmp27 :compare.2:a :compare.2:b
+  119 op equal *tmp27 null 2
   120 # "Function: inline def eval(in b)"
-    * set :eval.8:b *tmp27
-    * jump *label28 equal :eval.8:b false
+  121 set :eval.8:b false
+  122 jump *label28 equal *tmp27 false
   123 set *tmp29 "T"
   124 jump *label29 always
   125 label *label28
 
   127 label *label29
   128 set *tmp28 *tmp29
   129 label *label27
-    * op notEqual *tmp30 :compare.2:a :compare.2:b
+  130 op notEqual *tmp30 null 2
   131 # "Function: inline def eval(in b)"
-    * set :eval.9:b *tmp30
-    * jump *label31 equal :eval.9:b false
+  132 set :eval.9:b true
+  133 jump *label31 equal *tmp30 false
   134 set *tmp32 "T"
   135 jump *label32 always
   136 label *label31
 
   138 label *label32
   139 set *tmp31 *tmp32
   140 label *label30
-    * op strictEqual *tmp33 :compare.2:a :compare.2:b
+  141 op strictEqual *tmp33 null 2
   142 # "Function: inline def eval(in b)"
-    * set :eval.10:b *tmp33
-    * jump *label34 equal :eval.10:b false
+  143 set :eval.10:b false
+  144 jump *label34 equal *tmp33 false
   145 set *tmp35 "T"
   146 jump *label35 always
   147 label *label34
 
   149 label *label35
   150 set *tmp34 *tmp35
   151 label *label33
-    * op strictNotEqual *tmp36 :compare.2:a :compare.2:b
+  152 op strictNotEqual *tmp36 null 2
   153 # "Function: inline def eval(in b)"
-    * set :eval.11:b *tmp36
-    * jump *label37 equal :eval.11:b false
+  154 set :eval.11:b true
+  155 jump *label37 equal *tmp36 false
   156 set *tmp38 "T"
   157 jump *label38 always
   158 label *label37
 
   160 label *label38
   161 set *tmp37 *tmp38
   162 label *label36
-    * print *tmp28
-    * print *tmp31
-    * print *tmp34
-    * print *tmp37
-    * assertprints :compare.2:expected :compare.2:title
+  163 print *tmp29
+  164 print *tmp32
+  165 print *tmp35
+  166 print *tmp38
+  167 assertprints "FTFT" "comparison 3"
   168 label *label26
   169 # "Function: inline def compare(in title, in a, in b, in expected)"
   170 set :compare.3:title "comparison 4"
 
   172 set :compare.3:b 0
   173 set :compare.3:expected "FTFT"
   174 assertflush
-    * op equal *tmp40 :compare.3:a :compare.3:b
+  175 op equal *tmp40 @coal 0
   176 # "Function: inline def eval(in b)"
   177 set :eval.12:b *tmp40
-    * jump *label41 equal :eval.12:b false
+  178 jump *label41 equal *tmp40 false
   179 set *tmp42 "T"
   180 jump *label42 always
   181 label *label41
 
   183 label *label42
   184 set *tmp41 *tmp42
   185 label *label40
-    * op notEqual *tmp43 :compare.3:a :compare.3:b
+  186 op notEqual *tmp43 @coal 0
   187 # "Function: inline def eval(in b)"
   188 set :eval.13:b *tmp43
-    * jump *label44 equal :eval.13:b false
+  189 jump *label44 equal *tmp43 false
   190 set *tmp45 "T"
   191 jump *label45 always
   192 label *label44
 
   194 label *label45
   195 set *tmp44 *tmp45
   196 label *label43
-    * op strictEqual *tmp46 :compare.3:a :compare.3:b
+  197 op strictEqual *tmp46 @coal 0
   198 # "Function: inline def eval(in b)"
   199 set :eval.14:b *tmp46
-    * jump *label47 equal :eval.14:b false
+  200 jump *label47 equal *tmp46 false
   201 set *tmp48 "T"
   202 jump *label48 always
   203 label *label47
 
   205 label *label48
   206 set *tmp47 *tmp48
   207 label *label46
-    * op strictNotEqual *tmp49 :compare.3:a :compare.3:b
+  208 op strictNotEqual *tmp49 @coal 0
   209 # "Function: inline def eval(in b)"
   210 set :eval.15:b *tmp49
-    * jump *label50 equal :eval.15:b false
+  211 jump *label50 equal *tmp49 false
   212 set *tmp51 "T"
   213 jump *label51 always
   214 label *label50
 
   216 label *label51
   217 set *tmp50 *tmp51
   218 label *label49
-    * print *tmp41
-    * print *tmp44
-    * print *tmp47
-    * print *tmp50
-    * assertprints :compare.3:expected :compare.3:title
+  219 print *tmp42
+  220 print *tmp45
+  221 print *tmp48
+  222 print *tmp51
+  223 assertprints "FTFT" "comparison 4"
   224 label *label39
   225 # "Function: inline def compare(in title, in a, in b, in expected)"
   226 set :compare.4:title "comparison 5"
 
   228 set :compare.4:b 1
   229 set :compare.4:expected "TFFT"
   230 assertflush
-    * op equal *tmp53 :compare.4:a :compare.4:b
+  231 op equal *tmp53 @coal 1
   232 # "Function: inline def eval(in b)"
   233 set :eval.16:b *tmp53
-    * jump *label54 equal :eval.16:b false
+  234 jump *label54 equal *tmp53 false
   235 set *tmp55 "T"
   236 jump *label55 always
   237 label *label54
 
   239 label *label55
   240 set *tmp54 *tmp55
   241 label *label53
-    * op notEqual *tmp56 :compare.4:a :compare.4:b
+  242 op notEqual *tmp56 @coal 1
   243 # "Function: inline def eval(in b)"
   244 set :eval.17:b *tmp56
-    * jump *label57 equal :eval.17:b false
+  245 jump *label57 equal *tmp56 false
   246 set *tmp58 "T"
   247 jump *label58 always
   248 label *label57
 
   250 label *label58
   251 set *tmp57 *tmp58
   252 label *label56
-    * op strictEqual *tmp59 :compare.4:a :compare.4:b
+  253 op strictEqual *tmp59 @coal 1
   254 # "Function: inline def eval(in b)"
   255 set :eval.18:b *tmp59
-    * jump *label60 equal :eval.18:b false
+  256 jump *label60 equal *tmp59 false
   257 set *tmp61 "T"
   258 jump *label61 always
   259 label *label60
 
   261 label *label61
   262 set *tmp60 *tmp61
   263 label *label59
-    * op strictNotEqual *tmp62 :compare.4:a :compare.4:b
+  264 op strictNotEqual *tmp62 @coal 1
   265 # "Function: inline def eval(in b)"
   266 set :eval.19:b *tmp62
-    * jump *label63 equal :eval.19:b false
+  267 jump *label63 equal *tmp62 false
   268 set *tmp64 "T"
   269 jump *label64 always
   270 label *label63
 
   272 label *label64
   273 set *tmp63 *tmp64
   274 label *label62
-    * print *tmp54
-    * print *tmp57
-    * print *tmp60
-    * print *tmp63
-    * assertprints :compare.4:expected :compare.4:title
+  275 print *tmp55
+  276 print *tmp58
+  277 print *tmp61
+  278 print *tmp64
+  279 assertprints "TFFT" "comparison 5"
   280 label *label52
   281 # "Function: inline def compare(in title, in a, in b, in expected)"
   282 set :compare.5:title "comparison 6"
 
   284 set :compare.5:b 2
   285 set :compare.5:expected "FTFT"
   286 assertflush
-    * op equal *tmp66 :compare.5:a :compare.5:b
+  287 op equal *tmp66 @coal 2
   288 # "Function: inline def eval(in b)"
   289 set :eval.20:b *tmp66
-    * jump *label67 equal :eval.20:b false
+  290 jump *label67 equal *tmp66 false
   291 set *tmp68 "T"
   292 jump *label68 always
   293 label *label67
 
   295 label *label68
   296 set *tmp67 *tmp68
   297 label *label66
-    * op notEqual *tmp69 :compare.5:a :compare.5:b
+  298 op notEqual *tmp69 @coal 2
   299 # "Function: inline def eval(in b)"
   300 set :eval.21:b *tmp69
-    * jump *label70 equal :eval.21:b false
+  301 jump *label70 equal *tmp69 false
   302 set *tmp71 "T"
   303 jump *label71 always
   304 label *label70
 
   306 label *label71
   307 set *tmp70 *tmp71
   308 label *label69
-    * op strictEqual *tmp72 :compare.5:a :compare.5:b
+  309 op strictEqual *tmp72 @coal 2
   310 # "Function: inline def eval(in b)"
   311 set :eval.22:b *tmp72
-    * jump *label73 equal :eval.22:b false
+  312 jump *label73 equal *tmp72 false
   313 set *tmp74 "T"
   314 jump *label74 always
   315 label *label73
 
   317 label *label74
   318 set *tmp73 *tmp74
   319 label *label72
-    * op strictNotEqual *tmp75 :compare.5:a :compare.5:b
+  320 op strictNotEqual *tmp75 @coal 2
   321 # "Function: inline def eval(in b)"
   322 set :eval.23:b *tmp75
-    * jump *label76 equal :eval.23:b false
+  323 jump *label76 equal *tmp75 false
   324 set *tmp77 "T"
   325 jump *label77 always
   326 label *label76
 
   328 label *label77
   329 set *tmp76 *tmp77
   330 label *label75
-    * print *tmp67
-    * print *tmp70
-    * print *tmp73
-    * print *tmp76
-    * assertprints :compare.5:expected :compare.5:title
+  331 print *tmp68
+  332 print *tmp71
+  333 print *tmp74
+  334 print *tmp77
+  335 assertprints "FTFT" "comparison 6"
   336 label *label65
   337 # "Function: inline def compare(in title, in a, in b, in expected)"
   338 set :compare.6:title "comparison 7"
 
   340 set :compare.6:b @lead
   341 set :compare.6:expected "FTFT"
   342 assertflush
-    * op equal *tmp79 :compare.6:a :compare.6:b
+  343 op equal *tmp79 @coal @lead
   344 # "Function: inline def eval(in b)"
   345 set :eval.24:b *tmp79
-    * jump *label80 equal :eval.24:b false
+  346 jump *label80 equal *tmp79 false
   347 set *tmp81 "T"
   348 jump *label81 always
   349 label *label80
 
   351 label *label81
   352 set *tmp80 *tmp81
   353 label *label79
-    * op notEqual *tmp82 :compare.6:a :compare.6:b
+  354 op notEqual *tmp82 @coal @lead
   355 # "Function: inline def eval(in b)"
   356 set :eval.25:b *tmp82
-    * jump *label83 equal :eval.25:b false
+  357 jump *label83 equal *tmp82 false
   358 set *tmp84 "T"
   359 jump *label84 always
   360 label *label83
 
   362 label *label84
   363 set *tmp83 *tmp84
   364 label *label82
-    * op strictEqual *tmp85 :compare.6:a :compare.6:b
+  365 op strictEqual *tmp85 @coal @lead
   366 # "Function: inline def eval(in b)"
   367 set :eval.26:b *tmp85
-    * jump *label86 equal :eval.26:b false
+  368 jump *label86 equal *tmp85 false
   369 set *tmp87 "T"
   370 jump *label87 always
   371 label *label86
 
   373 label *label87
   374 set *tmp86 *tmp87
   375 label *label85
-    * op strictNotEqual *tmp88 :compare.6:a :compare.6:b
+  376 op strictNotEqual *tmp88 @coal @lead
   377 # "Function: inline def eval(in b)"
   378 set :eval.27:b *tmp88
-    * jump *label89 equal :eval.27:b false
+  379 jump *label89 equal *tmp88 false
   380 set *tmp90 "T"
   381 jump *label90 always
   382 label *label89
 
   384 label *label90
   385 set *tmp89 *tmp90
   386 label *label88
-    * print *tmp80
-    * print *tmp83
-    * print *tmp86
-    * print *tmp89
-    * assertprints :compare.6:expected :compare.6:title
+  387 print *tmp81
+  388 print *tmp84
+  389 print *tmp87
+  390 print *tmp90
+  391 assertprints "FTFT" "comparison 7"
   392 label *label78
   393 # "Function: inline def compare(in title, in a, in b, in expected)"
   394 set :compare.7:title "comparison 8"
 
   396 set :compare.7:b A
   397 set :compare.7:expected "TFTF"
   398 assertflush
-    * op equal *tmp92 :compare.7:a :compare.7:b
+  399 op equal *tmp92 A A
   400 # "Function: inline def eval(in b)"
   401 set :eval.28:b *tmp92
-    * jump *label93 equal :eval.28:b false
+  402 jump *label93 equal *tmp92 false
   403 set *tmp94 "T"
   404 jump *label94 always
   405 label *label93
 
   407 label *label94
   408 set *tmp93 *tmp94
   409 label *label92
-    * op notEqual *tmp95 :compare.7:a :compare.7:b
+  410 op notEqual *tmp95 A A
   411 # "Function: inline def eval(in b)"
   412 set :eval.29:b *tmp95
-    * jump *label96 equal :eval.29:b false
+  413 jump *label96 equal *tmp95 false
   414 set *tmp97 "T"
   415 jump *label97 always
   416 label *label96
 
   418 label *label97
   419 set *tmp96 *tmp97
   420 label *label95
-    * op strictEqual *tmp98 :compare.7:a :compare.7:b
+  421 op strictEqual *tmp98 A A
   422 # "Function: inline def eval(in b)"
   423 set :eval.30:b *tmp98
-    * jump *label99 equal :eval.30:b false
+  424 jump *label99 equal *tmp98 false
   425 set *tmp100 "T"
   426 jump *label100 always
   427 label *label99
 
   429 label *label100
   430 set *tmp99 *tmp100
   431 label *label98
-    * op strictNotEqual *tmp101 :compare.7:a :compare.7:b
+  432 op strictNotEqual *tmp101 A A
   433 # "Function: inline def eval(in b)"
   434 set :eval.31:b *tmp101
-    * jump *label102 equal :eval.31:b false
+  435 jump *label102 equal *tmp101 false
   436 set *tmp103 "T"
   437 jump *label103 always
   438 label *label102
 
   440 label *label103
   441 set *tmp102 *tmp103
   442 label *label101
-    * print *tmp93
-    * print *tmp96
-    * print *tmp99
-    * print *tmp102
-    * assertprints :compare.7:expected :compare.7:title
+  443 print *tmp94
+  444 print *tmp97
+  445 print *tmp100
+  446 print *tmp103
+  447 assertprints "TFTF" "comparison 8"
   448 label *label91
   449 # "Function: inline def compare(in title, in a, in b, in expected)"
   450 set :compare.8:title "comparison 9"
 
   452 set :compare.8:b 0
   453 set :compare.8:expected "TFTF"
   454 assertflush
-    * op equal *tmp105 :compare.8:a :compare.8:b
+  455 op equal *tmp105 A 0
   456 # "Function: inline def eval(in b)"
   457 set :eval.32:b *tmp105
-    * jump *label106 equal :eval.32:b false
+  458 jump *label106 equal *tmp105 false
   459 set *tmp107 "T"
   460 jump *label107 always
   461 label *label106
 
   463 label *label107
   464 set *tmp106 *tmp107
   465 label *label105
-    * op notEqual *tmp108 :compare.8:a :compare.8:b
+  466 op notEqual *tmp108 A 0
   467 # "Function: inline def eval(in b)"
   468 set :eval.33:b *tmp108
-    * jump *label109 equal :eval.33:b false
+  469 jump *label109 equal *tmp108 false
   470 set *tmp110 "T"
   471 jump *label110 always
   472 label *label109
 
   474 label *label110
   475 set *tmp109 *tmp110
   476 label *label108
-    * op strictEqual *tmp111 :compare.8:a :compare.8:b
+  477 op strictEqual *tmp111 A 0
   478 # "Function: inline def eval(in b)"
   479 set :eval.34:b *tmp111
-    * jump *label112 equal :eval.34:b false
+  480 jump *label112 equal *tmp111 false
   481 set *tmp113 "T"
   482 jump *label113 always
   483 label *label112
 
   485 label *label113
   486 set *tmp112 *tmp113
   487 label *label111
-    * op strictNotEqual *tmp114 :compare.8:a :compare.8:b
+  488 op strictNotEqual *tmp114 A 0
   489 # "Function: inline def eval(in b)"
   490 set :eval.35:b *tmp114
-    * jump *label115 equal :eval.35:b false
+  491 jump *label115 equal *tmp114 false
   492 set *tmp116 "T"
   493 jump *label116 always
   494 label *label115
 
   496 label *label116
   497 set *tmp115 *tmp116
   498 label *label114
-    * print *tmp106
-    * print *tmp109
-    * print *tmp112
-    * print *tmp115
-    * assertprints :compare.8:expected :compare.8:title
+  499 print *tmp107
+  500 print *tmp110
+  501 print *tmp113
+  502 print *tmp116
+  503 assertprints "TFTF" "comparison 9"
   504 label *label104
   505 # "Function: inline def compare(in title, in a, in b, in expected)"
   506 set :compare.9:title "comparison 10"
 
   508 set :compare.9:b 1
   509 set :compare.9:expected "FTFT"
   510 assertflush
-    * op equal *tmp118 :compare.9:a :compare.9:b
+  511 op equal *tmp118 A 1
   512 # "Function: inline def eval(in b)"
   513 set :eval.36:b *tmp118
-    * jump *label119 equal :eval.36:b false
+  514 jump *label119 equal *tmp118 false
   515 set *tmp120 "T"
   516 jump *label120 always
   517 label *label119
 
   519 label *label120
   520 set *tmp119 *tmp120
   521 label *label118
-    * op notEqual *tmp121 :compare.9:a :compare.9:b
+  522 op notEqual *tmp121 A 1
   523 # "Function: inline def eval(in b)"
   524 set :eval.37:b *tmp121
-    * jump *label122 equal :eval.37:b false
+  525 jump *label122 equal *tmp121 false
   526 set *tmp123 "T"
   527 jump *label123 always
   528 label *label122
 
   530 label *label123
   531 set *tmp122 *tmp123
   532 label *label121
-    * op strictEqual *tmp124 :compare.9:a :compare.9:b
+  533 op strictEqual *tmp124 A 1
   534 # "Function: inline def eval(in b)"
   535 set :eval.38:b *tmp124
-    * jump *label125 equal :eval.38:b false
+  536 jump *label125 equal *tmp124 false
   537 set *tmp126 "T"
   538 jump *label126 always
   539 label *label125
 
   541 label *label126
   542 set *tmp125 *tmp126
   543 label *label124
-    * op strictNotEqual *tmp127 :compare.9:a :compare.9:b
+  544 op strictNotEqual *tmp127 A 1
   545 # "Function: inline def eval(in b)"
   546 set :eval.39:b *tmp127
-    * jump *label128 equal :eval.39:b false
+  547 jump *label128 equal *tmp127 false
   548 set *tmp129 "T"
   549 jump *label129 always
   550 label *label128
 
   552 label *label129
   553 set *tmp128 *tmp129
   554 label *label127
-    * print *tmp119
-    * print *tmp122
-    * print *tmp125
-    * print *tmp128
-    * assertprints :compare.9:expected :compare.9:title
+  555 print *tmp120
+  556 print *tmp123
+  557 print *tmp126
+  558 print *tmp129
+  559 assertprints "FTFT" "comparison 10"
   560 label *label117
   561 # "Function: inline def compare(in title, in a, in b, in expected)"
   562 set :compare.10:title "comparison 11"
 
   564 set :compare.10:b 0
   565 set :compare.10:expected "FTFT"
   566 assertflush
-    * op equal *tmp131 :compare.10:a :compare.10:b
+  567 op equal *tmp131 "A" 0
   568 # "Function: inline def eval(in b)"
   569 set :eval.40:b *tmp131
-    * jump *label132 equal :eval.40:b false
+  570 jump *label132 equal *tmp131 false
   571 set *tmp133 "T"
   572 jump *label133 always
   573 label *label132
 
   575 label *label133
   576 set *tmp132 *tmp133
   577 label *label131
-    * op notEqual *tmp134 :compare.10:a :compare.10:b
+  578 op notEqual *tmp134 "A" 0
   579 # "Function: inline def eval(in b)"
   580 set :eval.41:b *tmp134
-    * jump *label135 equal :eval.41:b false
+  581 jump *label135 equal *tmp134 false
   582 set *tmp136 "T"
   583 jump *label136 always
   584 label *label135
 
   586 label *label136
   587 set *tmp135 *tmp136
   588 label *label134
-    * op strictEqual *tmp137 :compare.10:a :compare.10:b
+  589 op strictEqual *tmp137 "A" 0
   590 # "Function: inline def eval(in b)"
   591 set :eval.42:b *tmp137
-    * jump *label138 equal :eval.42:b false
+  592 jump *label138 equal *tmp137 false
   593 set *tmp139 "T"
   594 jump *label139 always
   595 label *label138
 
   597 label *label139
   598 set *tmp138 *tmp139
   599 label *label137
-    * op strictNotEqual *tmp140 :compare.10:a :compare.10:b
+  600 op strictNotEqual *tmp140 "A" 0
   601 # "Function: inline def eval(in b)"
   602 set :eval.43:b *tmp140
-    * jump *label141 equal :eval.43:b false
+  603 jump *label141 equal *tmp140 false
   604 set *tmp142 "T"
   605 jump *label142 always
   606 label *label141
 
   608 label *label142
   609 set *tmp141 *tmp142
   610 label *label140
-    * print *tmp132
-    * print *tmp135
-    * print *tmp138
-    * print *tmp141
-    * assertprints :compare.10:expected :compare.10:title
+  611 print *tmp133
+  612 print *tmp136
+  613 print *tmp139
+  614 print *tmp142
+  615 assertprints "FTFT" "comparison 11"
   616 label *label130
   617 # "Function: inline def compare(in title, in a, in b, in expected)"
   618 set :compare.11:title "comparison 12"
 
   620 set :compare.11:b 1
   621 set :compare.11:expected "TFFT"
   622 assertflush
-    * op equal *tmp144 :compare.11:a :compare.11:b
+  623 op equal *tmp144 "A" 1
   624 # "Function: inline def eval(in b)"
   625 set :eval.44:b *tmp144
-    * jump *label145 equal :eval.44:b false
+  626 jump *label145 equal *tmp144 false
   627 set *tmp146 "T"
   628 jump *label146 always
   629 label *label145
 
   631 label *label146
   632 set *tmp145 *tmp146
   633 label *label144
-    * op notEqual *tmp147 :compare.11:a :compare.11:b
+  634 op notEqual *tmp147 "A" 1
   635 # "Function: inline def eval(in b)"
   636 set :eval.45:b *tmp147
-    * jump *label148 equal :eval.45:b false
+  637 jump *label148 equal *tmp147 false
   638 set *tmp149 "T"
   639 jump *label149 always
   640 label *label148
 
   642 label *label149
   643 set *tmp148 *tmp149
   644 label *label147
-    * op strictEqual *tmp150 :compare.11:a :compare.11:b
+  645 op strictEqual *tmp150 "A" 1
   646 # "Function: inline def eval(in b)"
   647 set :eval.46:b *tmp150
-    * jump *label151 equal :eval.46:b false
+  648 jump *label151 equal *tmp150 false
   649 set *tmp152 "T"
   650 jump *label152 always
   651 label *label151
 
   653 label *label152
   654 set *tmp151 *tmp152
   655 label *label150
-    * op strictNotEqual *tmp153 :compare.11:a :compare.11:b
+  656 op strictNotEqual *tmp153 "A" 1
   657 # "Function: inline def eval(in b)"
   658 set :eval.47:b *tmp153
-    * jump *label154 equal :eval.47:b false
+  659 jump *label154 equal *tmp153 false
   660 set *tmp155 "T"
   661 jump *label155 always
   662 label *label154
 
   664 label *label155
   665 set *tmp154 *tmp155
   666 label *label153
-    * print *tmp145
-    * print *tmp148
-    * print *tmp151
-    * print *tmp154
-    * assertprints :compare.11:expected :compare.11:title
+  667 print *tmp146
+  668 print *tmp149
+  669 print *tmp152
+  670 print *tmp155
+  671 assertprints "TFFT" "comparison 12"
   672 label *label143
   673 # "Function: inline def compare(in title, in a, in b, in expected)"
   674 set :compare.12:title "comparison 13"
 
   676 set :compare.12:b 2
   677 set :compare.12:expected "FTFT"
   678 assertflush
-    * op equal *tmp157 :compare.12:a :compare.12:b
+  679 op equal *tmp157 "A" 2
   680 # "Function: inline def eval(in b)"
   681 set :eval.48:b *tmp157
-    * jump *label158 equal :eval.48:b false
+  682 jump *label158 equal *tmp157 false
   683 set *tmp159 "T"
   684 jump *label159 always
   685 label *label158
 
   687 label *label159
   688 set *tmp158 *tmp159
   689 label *label157
-    * op notEqual *tmp160 :compare.12:a :compare.12:b
+  690 op notEqual *tmp160 "A" 2
   691 # "Function: inline def eval(in b)"
   692 set :eval.49:b *tmp160
-    * jump *label161 equal :eval.49:b false
+  693 jump *label161 equal *tmp160 false
   694 set *tmp162 "T"
   695 jump *label162 always
   696 label *label161
 
   698 label *label162
   699 set *tmp161 *tmp162
   700 label *label160
-    * op strictEqual *tmp163 :compare.12:a :compare.12:b
+  701 op strictEqual *tmp163 "A" 2
   702 # "Function: inline def eval(in b)"
   703 set :eval.50:b *tmp163
-    * jump *label164 equal :eval.50:b false
+  704 jump *label164 equal *tmp163 false
   705 set *tmp165 "T"
   706 jump *label165 always
   707 label *label164
 
   709 label *label165
   710 set *tmp164 *tmp165
   711 label *label163
-    * op strictNotEqual *tmp166 :compare.12:a :compare.12:b
+  712 op strictNotEqual *tmp166 "A" 2
   713 # "Function: inline def eval(in b)"
   714 set :eval.51:b *tmp166
-    * jump *label167 equal :eval.51:b false
+  715 jump *label167 equal *tmp166 false
   716 set *tmp168 "T"
   717 jump *label168 always
   718 label *label167
 
   720 label *label168
   721 set *tmp167 *tmp168
   722 label *label166
-    * print *tmp158
-    * print *tmp161
-    * print *tmp164
-    * print *tmp167
-    * assertprints :compare.12:expected :compare.12:title
+  723 print *tmp159
+  724 print *tmp162
+  725 print *tmp165
+  726 print *tmp168
+  727 assertprints "FTFT" "comparison 13"
   728 label *label156
   729 # "Function: inline def compare(in title, in a, in b, in expected)"
   730 set :compare.13:title "comparison 14"
 
   732 set :compare.13:b "B"
   733 set :compare.13:expected "FTFT"
   734 assertflush
-    * op equal *tmp170 :compare.13:a :compare.13:b
+  735 op equal *tmp170 "A" "B"
   736 # "Function: inline def eval(in b)"
   737 set :eval.52:b *tmp170
-    * jump *label171 equal :eval.52:b false
+  738 jump *label171 equal *tmp170 false
   739 set *tmp172 "T"
   740 jump *label172 always
   741 label *label171
 
   743 label *label172
   744 set *tmp171 *tmp172
   745 label *label170
-    * op notEqual *tmp173 :compare.13:a :compare.13:b
+  746 op notEqual *tmp173 "A" "B"
   747 # "Function: inline def eval(in b)"
   748 set :eval.53:b *tmp173
-    * jump *label174 equal :eval.53:b false
+  749 jump *label174 equal *tmp173 false
   750 set *tmp175 "T"
   751 jump *label175 always
   752 label *label174
 
   754 label *label175
   755 set *tmp174 *tmp175
   756 label *label173
-    * op strictEqual *tmp176 :compare.13:a :compare.13:b
+  757 op strictEqual *tmp176 "A" "B"
   758 # "Function: inline def eval(in b)"
   759 set :eval.54:b *tmp176
-    * jump *label177 equal :eval.54:b false
+  760 jump *label177 equal *tmp176 false
   761 set *tmp178 "T"
   762 jump *label178 always
   763 label *label177
 
   765 label *label178
   766 set *tmp177 *tmp178
   767 label *label176
-    * op strictNotEqual *tmp179 :compare.13:a :compare.13:b
+  768 op strictNotEqual *tmp179 "A" "B"
   769 # "Function: inline def eval(in b)"
   770 set :eval.55:b *tmp179
-    * jump *label180 equal :eval.55:b false
+  771 jump *label180 equal *tmp179 false
   772 set *tmp181 "T"
   773 jump *label181 always
   774 label *label180
 
   776 label *label181
   777 set *tmp180 *tmp181
   778 label *label179
-    * print *tmp171
-    * print *tmp174
-    * print *tmp177
-    * print *tmp180
-    * assertprints :compare.13:expected :compare.13:title
+  779 print *tmp172
+  780 print *tmp175
+  781 print *tmp178
+  782 print *tmp181
+  783 assertprints "FTFT" "comparison 14"
   784 label *label169
   785 # "Function: inline def compare(in title, in a, in b, in expected)"
   786 set :compare.14:title "comparison 15"
 
   788 set :compare.14:b "A"
   789 set :compare.14:expected "TFTF"
   790 assertflush
-    * op equal *tmp183 :compare.14:a :compare.14:b
+  791 op equal *tmp183 "A" "A"
   792 # "Function: inline def eval(in b)"
   793 set :eval.56:b *tmp183
-    * jump *label184 equal :eval.56:b false
+  794 jump *label184 equal *tmp183 false
   795 set *tmp185 "T"
   796 jump *label185 always
   797 label *label184
 
   799 label *label185
   800 set *tmp184 *tmp185
   801 label *label183
-    * op notEqual *tmp186 :compare.14:a :compare.14:b
+  802 op notEqual *tmp186 "A" "A"
   803 # "Function: inline def eval(in b)"
   804 set :eval.57:b *tmp186
-    * jump *label187 equal :eval.57:b false
+  805 jump *label187 equal *tmp186 false
   806 set *tmp188 "T"
   807 jump *label188 always
   808 label *label187
 
   810 label *label188
   811 set *tmp187 *tmp188
   812 label *label186
-    * op strictEqual *tmp189 :compare.14:a :compare.14:b
+  813 op strictEqual *tmp189 "A" "A"
   814 # "Function: inline def eval(in b)"
   815 set :eval.58:b *tmp189
-    * jump *label190 equal :eval.58:b false
+  816 jump *label190 equal *tmp189 false
   817 set *tmp191 "T"
   818 jump *label191 always
   819 label *label190
 
   821 label *label191
   822 set *tmp190 *tmp191
   823 label *label189
-    * op strictNotEqual *tmp192 :compare.14:a :compare.14:b
+  824 op strictNotEqual *tmp192 "A" "A"
   825 # "Function: inline def eval(in b)"
   826 set :eval.59:b *tmp192
-    * jump *label193 equal :eval.59:b false
+  827 jump *label193 equal *tmp192 false
   828 set *tmp194 "T"
   829 jump *label194 always
   830 label *label193
 
   832 label *label194
   833 set *tmp193 *tmp194
   834 label *label192
-    * print *tmp184
-    * print *tmp187
-    * print *tmp190
-    * print *tmp193
-    * assertprints :compare.14:expected :compare.14:title
+  835 print *tmp185
+  836 print *tmp188
+  837 print *tmp191
+  838 print *tmp194
+  839 assertprints "TFTF" "comparison 15"
   840 label *label182
   841 stop
   842 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-144 instructions):
     0 set A 0
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare:title "comparison 1"
-    * set :compare:a null
-    * set :compare:b 0
-    * set :compare:expected "TFFT"
     2 assertflush
     3 op equal *tmp1 null 0
     4 # "Function: inline def eval(in b)"
-    * set :eval:b true
-    * jump *label2 equal *tmp1 false
+    5 jump *label2 equal true false
     6 set *tmp3 "T"
     7 jump *label3 always
     8 label *label2
-    * set *tmp3 "F"
     9 label *label3
-    * set *tmp2 *tmp3
+   10 set *tmp2 "T"
    11 label *label1
    12 op notEqual *tmp4 null 0
    13 # "Function: inline def eval(in b)"
-    * set :eval.1:b false
-    * jump *label5 equal *tmp4 false
-    * set *tmp6 "T"
+   14 jump *label5 equal false false
    15 jump *label6 always
    16 label *label5
    17 set *tmp6 "F"
    18 label *label6
-    * set *tmp5 *tmp6
+   19 set *tmp5 "F"
    20 label *label4
    21 op strictEqual *tmp7 null 0
    22 # "Function: inline def eval(in b)"
-    * set :eval.2:b false
-    * jump *label8 equal *tmp7 false
-    * set *tmp9 "T"
+   23 jump *label8 equal false false
    24 jump *label9 always
    25 label *label8
    26 set *tmp9 "F"
    27 label *label9
-    * set *tmp8 *tmp9
+   28 set *tmp8 "F"
    29 label *label7
    30 op strictNotEqual *tmp10 null 0
    31 # "Function: inline def eval(in b)"
-    * set :eval.3:b true
-    * jump *label11 equal *tmp10 false
+   32 jump *label11 equal true false
    33 set *tmp12 "T"
    34 jump *label12 always
    35 label *label11
-    * set *tmp12 "F"
    36 label *label12
-    * set *tmp11 *tmp12
+   37 set *tmp11 "T"
    38 label *label10
-    * print *tmp3
-    * print *tmp6
-    * print *tmp9
-    * print *tmp12
+   39 print "T"
+   40 print "F"
+   41 print "F"
+   42 print "T"
    43 assertprints "TFFT" "comparison 1"
    44 label *label0
    45 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.1:title "comparison 2"
-    * set :compare.1:a null
-    * set :compare.1:b 1
-    * set :compare.1:expected "FTFT"
    46 assertflush
    47 op equal *tmp14 null 1
    48 # "Function: inline def eval(in b)"
-    * set :eval.4:b false
-    * jump *label15 equal *tmp14 false
-    * set *tmp16 "T"
+   49 jump *label15 equal false false
    50 jump *label16 always
    51 label *label15
    52 set *tmp16 "F"
    53 label *label16
-    * set *tmp15 *tmp16
+   54 set *tmp15 "F"
    55 label *label14
    56 op notEqual *tmp17 null 1
    57 # "Function: inline def eval(in b)"
-    * set :eval.5:b true
-    * jump *label18 equal *tmp17 false
+   58 jump *label18 equal true false
    59 set *tmp19 "T"
    60 jump *label19 always
    61 label *label18
-    * set *tmp19 "F"
    62 label *label19
-    * set *tmp18 *tmp19
+   63 set *tmp18 "T"
    64 label *label17
    65 op strictEqual *tmp20 null 1
    66 # "Function: inline def eval(in b)"
-    * set :eval.6:b false
-    * jump *label21 equal *tmp20 false
-    * set *tmp22 "T"
+   67 jump *label21 equal false false
    68 jump *label22 always
    69 label *label21
    70 set *tmp22 "F"
    71 label *label22
-    * set *tmp21 *tmp22
+   72 set *tmp21 "F"
    73 label *label20
    74 op strictNotEqual *tmp23 null 1
    75 # "Function: inline def eval(in b)"
-    * set :eval.7:b true
-    * jump *label24 equal *tmp23 false
+   76 jump *label24 equal true false
    77 set *tmp25 "T"
    78 jump *label25 always
    79 label *label24
-    * set *tmp25 "F"
    80 label *label25
-    * set *tmp24 *tmp25
+   81 set *tmp24 "T"
    82 label *label23
-    * print *tmp16
-    * print *tmp19
-    * print *tmp22
-    * print *tmp25
+   83 print "F"
+   84 print "T"
+   85 print "F"
+   86 print "T"
    87 assertprints "FTFT" "comparison 2"
    88 label *label13
    89 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.2:title "comparison 3"
-    * set :compare.2:a null
-    * set :compare.2:b 2
-    * set :compare.2:expected "FTFT"
    90 assertflush
    91 op equal *tmp27 null 2
    92 # "Function: inline def eval(in b)"
-    * set :eval.8:b false
-    * jump *label28 equal *tmp27 false
-    * set *tmp29 "T"
+   93 jump *label28 equal false false
    94 jump *label29 always
    95 label *label28
    96 set *tmp29 "F"
    97 label *label29
-    * set *tmp28 *tmp29
+   98 set *tmp28 "F"
    99 label *label27
   100 op notEqual *tmp30 null 2
   101 # "Function: inline def eval(in b)"
-    * set :eval.9:b true
-    * jump *label31 equal *tmp30 false
+  102 jump *label31 equal true false
   103 set *tmp32 "T"
   104 jump *label32 always
   105 label *label31
-    * set *tmp32 "F"
   106 label *label32
-    * set *tmp31 *tmp32
+  107 set *tmp31 "T"
   108 label *label30
   109 op strictEqual *tmp33 null 2
   110 # "Function: inline def eval(in b)"
-    * set :eval.10:b false
-    * jump *label34 equal *tmp33 false
-    * set *tmp35 "T"
+  111 jump *label34 equal false false
   112 jump *label35 always
   113 label *label34
   114 set *tmp35 "F"
   115 label *label35
-    * set *tmp34 *tmp35
+  116 set *tmp34 "F"
   117 label *label33
   118 op strictNotEqual *tmp36 null 2
   119 # "Function: inline def eval(in b)"
-    * set :eval.11:b true
-    * jump *label37 equal *tmp36 false
+  120 jump *label37 equal true false
   121 set *tmp38 "T"
   122 jump *label38 always
   123 label *label37
-    * set *tmp38 "F"
   124 label *label38
-    * set *tmp37 *tmp38
+  125 set *tmp37 "T"
   126 label *label36
-    * print *tmp29
-    * print *tmp32
-    * print *tmp35
-    * print *tmp38
+  127 print "F"
+  128 print "T"
+  129 print "F"
+  130 print "T"
   131 assertprints "FTFT" "comparison 3"
   132 label *label26
   133 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.3:title "comparison 4"
-    * set :compare.3:a @coal
-    * set :compare.3:b 0
-    * set :compare.3:expected "FTFT"
   134 assertflush
   135 op equal *tmp40 @coal 0
   136 # "Function: inline def eval(in b)"
-    * set :eval.12:b *tmp40
-    * jump *label41 equal *tmp40 false
-    * set *tmp42 "T"
+  137 set :eval.12:b false
+  138 jump *label41 equal false false
   139 jump *label42 always
   140 label *label41
   141 set *tmp42 "F"
   142 label *label42
-    * set *tmp41 *tmp42
+  143 set *tmp41 "F"
   144 label *label40
   145 op notEqual *tmp43 @coal 0
   146 # "Function: inline def eval(in b)"
-    * set :eval.13:b *tmp43
-    * jump *label44 equal *tmp43 false
+  147 set :eval.13:b true
+  148 jump *label44 equal true false
   149 set *tmp45 "T"
   150 jump *label45 always
   151 label *label44
-    * set *tmp45 "F"
   152 label *label45
-    * set *tmp44 *tmp45
+  153 set *tmp44 "T"
   154 label *label43
   155 op strictEqual *tmp46 @coal 0
   156 # "Function: inline def eval(in b)"
-    * set :eval.14:b *tmp46
-    * jump *label47 equal *tmp46 false
-    * set *tmp48 "T"
+  157 set :eval.14:b false
+  158 jump *label47 equal false false
   159 jump *label48 always
   160 label *label47
   161 set *tmp48 "F"
   162 label *label48
-    * set *tmp47 *tmp48
+  163 set *tmp47 "F"
   164 label *label46
   165 op strictNotEqual *tmp49 @coal 0
   166 # "Function: inline def eval(in b)"
-    * set :eval.15:b *tmp49
-    * jump *label50 equal *tmp49 false
+  167 set :eval.15:b true
+  168 jump *label50 equal true false
   169 set *tmp51 "T"
   170 jump *label51 always
   171 label *label50
-    * set *tmp51 "F"
   172 label *label51
-    * set *tmp50 *tmp51
+  173 set *tmp50 "T"
   174 label *label49
-    * print *tmp42
-    * print *tmp45
-    * print *tmp48
-    * print *tmp51
+  175 print "F"
+  176 print "T"
+  177 print "F"
+  178 print "T"
   179 assertprints "FTFT" "comparison 4"
   180 label *label39
   181 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.4:title "comparison 5"
-    * set :compare.4:a @coal
-    * set :compare.4:b 1
-    * set :compare.4:expected "TFFT"
   182 assertflush
   183 op equal *tmp53 @coal 1
   184 # "Function: inline def eval(in b)"
-    * set :eval.16:b *tmp53
-    * jump *label54 equal *tmp53 false
+  185 set :eval.16:b true
+  186 jump *label54 equal true false
   187 set *tmp55 "T"
   188 jump *label55 always
   189 label *label54
-    * set *tmp55 "F"
   190 label *label55
-    * set *tmp54 *tmp55
+  191 set *tmp54 "T"
   192 label *label53
   193 op notEqual *tmp56 @coal 1
   194 # "Function: inline def eval(in b)"
-    * set :eval.17:b *tmp56
-    * jump *label57 equal *tmp56 false
-    * set *tmp58 "T"
+  195 set :eval.17:b false
+  196 jump *label57 equal false false
   197 jump *label58 always
   198 label *label57
   199 set *tmp58 "F"
   200 label *label58
-    * set *tmp57 *tmp58
+  201 set *tmp57 "F"
   202 label *label56
   203 op strictEqual *tmp59 @coal 1
   204 # "Function: inline def eval(in b)"
-    * set :eval.18:b *tmp59
-    * jump *label60 equal *tmp59 false
-    * set *tmp61 "T"
+  205 set :eval.18:b false
+  206 jump *label60 equal false false
   207 jump *label61 always
   208 label *label60
   209 set *tmp61 "F"
   210 label *label61
-    * set *tmp60 *tmp61
+  211 set *tmp60 "F"
   212 label *label59
   213 op strictNotEqual *tmp62 @coal 1
   214 # "Function: inline def eval(in b)"
-    * set :eval.19:b *tmp62
-    * jump *label63 equal *tmp62 false
+  215 set :eval.19:b true
+  216 jump *label63 equal true false
   217 set *tmp64 "T"
   218 jump *label64 always
   219 label *label63
-    * set *tmp64 "F"
   220 label *label64
-    * set *tmp63 *tmp64
+  221 set *tmp63 "T"
   222 label *label62
-    * print *tmp55
-    * print *tmp58
-    * print *tmp61
-    * print *tmp64
+  223 print "T"
+  224 print "F"
+  225 print "F"
+  226 print "T"
   227 assertprints "TFFT" "comparison 5"
   228 label *label52
   229 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.5:title "comparison 6"
-    * set :compare.5:a @coal
-    * set :compare.5:b 2
-    * set :compare.5:expected "FTFT"
   230 assertflush
   231 op equal *tmp66 @coal 2
   232 # "Function: inline def eval(in b)"
-    * set :eval.20:b *tmp66
-    * jump *label67 equal *tmp66 false
-    * set *tmp68 "T"
+  233 set :eval.20:b false
+  234 jump *label67 equal false false
   235 jump *label68 always
   236 label *label67
   237 set *tmp68 "F"
   238 label *label68
-    * set *tmp67 *tmp68
+  239 set *tmp67 "F"
   240 label *label66
   241 op notEqual *tmp69 @coal 2
   242 # "Function: inline def eval(in b)"
-    * set :eval.21:b *tmp69
-    * jump *label70 equal *tmp69 false
+  243 set :eval.21:b true
+  244 jump *label70 equal true false
   245 set *tmp71 "T"
   246 jump *label71 always
   247 label *label70
-    * set *tmp71 "F"
   248 label *label71
-    * set *tmp70 *tmp71
+  249 set *tmp70 "T"
   250 label *label69
   251 op strictEqual *tmp72 @coal 2
   252 # "Function: inline def eval(in b)"
-    * set :eval.22:b *tmp72
-    * jump *label73 equal *tmp72 false
-    * set *tmp74 "T"
+  253 set :eval.22:b false
+  254 jump *label73 equal false false
   255 jump *label74 always
   256 label *label73
   257 set *tmp74 "F"
   258 label *label74
-    * set *tmp73 *tmp74
+  259 set *tmp73 "F"
   260 label *label72
   261 op strictNotEqual *tmp75 @coal 2
   262 # "Function: inline def eval(in b)"
-    * set :eval.23:b *tmp75
-    * jump *label76 equal *tmp75 false
+  263 set :eval.23:b true
+  264 jump *label76 equal true false
   265 set *tmp77 "T"
   266 jump *label77 always
   267 label *label76
-    * set *tmp77 "F"
   268 label *label77
-    * set *tmp76 *tmp77
+  269 set *tmp76 "T"
   270 label *label75
-    * print *tmp68
-    * print *tmp71
-    * print *tmp74
-    * print *tmp77
+  271 print "F"
+  272 print "T"
+  273 print "F"
+  274 print "T"
   275 assertprints "FTFT" "comparison 6"
   276 label *label65
   277 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.6:title "comparison 7"
-    * set :compare.6:a @coal
-    * set :compare.6:b @lead
-    * set :compare.6:expected "FTFT"
   278 assertflush
   279 op equal *tmp79 @coal @lead
   280 # "Function: inline def eval(in b)"
-    * set :eval.24:b *tmp79
-    * jump *label80 equal *tmp79 false
-    * set *tmp81 "T"
+  281 set :eval.24:b false
+  282 jump *label80 equal false false
   283 jump *label81 always
   284 label *label80
   285 set *tmp81 "F"
   286 label *label81
-    * set *tmp80 *tmp81
+  287 set *tmp80 "F"
   288 label *label79
   289 op notEqual *tmp82 @coal @lead
   290 # "Function: inline def eval(in b)"
-    * set :eval.25:b *tmp82
-    * jump *label83 equal *tmp82 false
+  291 set :eval.25:b true
+  292 jump *label83 equal true false
   293 set *tmp84 "T"
   294 jump *label84 always
   295 label *label83
-    * set *tmp84 "F"
   296 label *label84
-    * set *tmp83 *tmp84
+  297 set *tmp83 "T"
   298 label *label82
   299 op strictEqual *tmp85 @coal @lead
   300 # "Function: inline def eval(in b)"
-    * set :eval.26:b *tmp85
-    * jump *label86 equal *tmp85 false
-    * set *tmp87 "T"
+  301 set :eval.26:b false
+  302 jump *label86 equal false false
   303 jump *label87 always
   304 label *label86
   305 set *tmp87 "F"
   306 label *label87
-    * set *tmp86 *tmp87
+  307 set *tmp86 "F"
   308 label *label85
   309 op strictNotEqual *tmp88 @coal @lead
   310 # "Function: inline def eval(in b)"
-    * set :eval.27:b *tmp88
-    * jump *label89 equal *tmp88 false
+  311 set :eval.27:b true
+  312 jump *label89 equal true false
   313 set *tmp90 "T"
   314 jump *label90 always
   315 label *label89
-    * set *tmp90 "F"
   316 label *label90
-    * set *tmp89 *tmp90
+  317 set *tmp89 "T"
   318 label *label88
-    * print *tmp81
-    * print *tmp84
-    * print *tmp87
-    * print *tmp90
+  319 print "F"
+  320 print "T"
+  321 print "F"
+  322 print "T"
   323 assertprints "FTFT" "comparison 7"
   324 label *label78
   325 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.7:title "comparison 8"
-    * set :compare.7:a A
-    * set :compare.7:b A
-    * set :compare.7:expected "TFTF"
   326 assertflush
   327 op equal *tmp92 A A
   328 # "Function: inline def eval(in b)"
-    * set :eval.28:b *tmp92
   329 jump *label93 equal *tmp92 false
   330 set *tmp94 "T"
   331 jump *label94 always
   332 label *label93
   333 set *tmp94 "F"
   334 label *label94
-    * set *tmp93 *tmp94
   335 label *label92
   336 op notEqual *tmp95 A A
   337 # "Function: inline def eval(in b)"
-    * set :eval.29:b *tmp95
   338 jump *label96 equal *tmp95 false
   339 set *tmp97 "T"
   340 jump *label97 always
   341 label *label96
   342 set *tmp97 "F"
   343 label *label97
-    * set *tmp96 *tmp97
   344 label *label95
   345 op strictEqual *tmp98 A A
   346 # "Function: inline def eval(in b)"
-    * set :eval.30:b *tmp98
   347 jump *label99 equal *tmp98 false
   348 set *tmp100 "T"
   349 jump *label100 always
   350 label *label99
   351 set *tmp100 "F"
   352 label *label100
-    * set *tmp99 *tmp100
   353 label *label98
   354 op strictNotEqual *tmp101 A A
   355 # "Function: inline def eval(in b)"
-    * set :eval.31:b *tmp101
   356 jump *label102 equal *tmp101 false
   357 set *tmp103 "T"
   358 jump *label103 always
   359 label *label102
   360 set *tmp103 "F"
   361 label *label103
-    * set *tmp102 *tmp103
   362 label *label101
   363 print *tmp94
   364 print *tmp97
 
   367 assertprints "TFTF" "comparison 8"
   368 label *label91
   369 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.8:title "comparison 9"
-    * set :compare.8:a A
-    * set :compare.8:b 0
-    * set :compare.8:expected "TFTF"
   370 assertflush
   371 op equal *tmp105 A 0
   372 # "Function: inline def eval(in b)"
-    * set :eval.32:b *tmp105
   373 jump *label106 equal *tmp105 false
   374 set *tmp107 "T"
   375 jump *label107 always
   376 label *label106
   377 set *tmp107 "F"
   378 label *label107
-    * set *tmp106 *tmp107
   379 label *label105
   380 op notEqual *tmp108 A 0
   381 # "Function: inline def eval(in b)"
-    * set :eval.33:b *tmp108
   382 jump *label109 equal *tmp108 false
   383 set *tmp110 "T"
   384 jump *label110 always
   385 label *label109
   386 set *tmp110 "F"
   387 label *label110
-    * set *tmp109 *tmp110
   388 label *label108
   389 op strictEqual *tmp111 A 0
   390 # "Function: inline def eval(in b)"
-    * set :eval.34:b *tmp111
   391 jump *label112 equal *tmp111 false
   392 set *tmp113 "T"
   393 jump *label113 always
   394 label *label112
   395 set *tmp113 "F"
   396 label *label113
-    * set *tmp112 *tmp113
   397 label *label111
   398 op strictNotEqual *tmp114 A 0
   399 # "Function: inline def eval(in b)"
-    * set :eval.35:b *tmp114
   400 jump *label115 equal *tmp114 false
   401 set *tmp116 "T"
   402 jump *label116 always
   403 label *label115
   404 set *tmp116 "F"
   405 label *label116
-    * set *tmp115 *tmp116
   406 label *label114
   407 print *tmp107
   408 print *tmp110
 
   411 assertprints "TFTF" "comparison 9"
   412 label *label104
   413 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.9:title "comparison 10"
-    * set :compare.9:a A
-    * set :compare.9:b 1
-    * set :compare.9:expected "FTFT"
   414 assertflush
   415 op equal *tmp118 A 1
   416 # "Function: inline def eval(in b)"
-    * set :eval.36:b *tmp118
   417 jump *label119 equal *tmp118 false
   418 set *tmp120 "T"
   419 jump *label120 always
   420 label *label119
   421 set *tmp120 "F"
   422 label *label120
-    * set *tmp119 *tmp120
   423 label *label118
   424 op notEqual *tmp121 A 1
   425 # "Function: inline def eval(in b)"
-    * set :eval.37:b *tmp121
   426 jump *label122 equal *tmp121 false
   427 set *tmp123 "T"
   428 jump *label123 always
   429 label *label122
   430 set *tmp123 "F"
   431 label *label123
-    * set *tmp122 *tmp123
   432 label *label121
   433 op strictEqual *tmp124 A 1
   434 # "Function: inline def eval(in b)"
-    * set :eval.38:b *tmp124
   435 jump *label125 equal *tmp124 false
   436 set *tmp126 "T"
   437 jump *label126 always
   438 label *label125
   439 set *tmp126 "F"
   440 label *label126
-    * set *tmp125 *tmp126
   441 label *label124
   442 op strictNotEqual *tmp127 A 1
   443 # "Function: inline def eval(in b)"
-    * set :eval.39:b *tmp127
   444 jump *label128 equal *tmp127 false
   445 set *tmp129 "T"
   446 jump *label129 always
   447 label *label128
   448 set *tmp129 "F"
   449 label *label129
-    * set *tmp128 *tmp129
   450 label *label127
   451 print *tmp120
   452 print *tmp123
 
   455 assertprints "FTFT" "comparison 10"
   456 label *label117
   457 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.10:title "comparison 11"
-    * set :compare.10:a "A"
-    * set :compare.10:b 0
-    * set :compare.10:expected "FTFT"
   458 assertflush
   459 op equal *tmp131 "A" 0
   460 # "Function: inline def eval(in b)"
-    * set :eval.40:b *tmp131
-    * jump *label132 equal *tmp131 false
-    * set *tmp133 "T"
+  461 set :eval.40:b false
+  462 jump *label132 equal false false
   463 jump *label133 always
   464 label *label132
   465 set *tmp133 "F"
   466 label *label133
-    * set *tmp132 *tmp133
+  467 set *tmp132 "F"
   468 label *label131
   469 op notEqual *tmp134 "A" 0
   470 # "Function: inline def eval(in b)"
-    * set :eval.41:b *tmp134
-    * jump *label135 equal *tmp134 false
+  471 set :eval.41:b true
+  472 jump *label135 equal true false
   473 set *tmp136 "T"
   474 jump *label136 always
   475 label *label135
-    * set *tmp136 "F"
   476 label *label136
-    * set *tmp135 *tmp136
+  477 set *tmp135 "T"
   478 label *label134
   479 op strictEqual *tmp137 "A" 0
   480 # "Function: inline def eval(in b)"
-    * set :eval.42:b *tmp137
-    * jump *label138 equal *tmp137 false
-    * set *tmp139 "T"
+  481 set :eval.42:b false
+  482 jump *label138 equal false false
   483 jump *label139 always
   484 label *label138
   485 set *tmp139 "F"
   486 label *label139
-    * set *tmp138 *tmp139
+  487 set *tmp138 "F"
   488 label *label137
   489 op strictNotEqual *tmp140 "A" 0
   490 # "Function: inline def eval(in b)"
-    * set :eval.43:b *tmp140
-    * jump *label141 equal *tmp140 false
+  491 set :eval.43:b true
+  492 jump *label141 equal true false
   493 set *tmp142 "T"
   494 jump *label142 always
   495 label *label141
-    * set *tmp142 "F"
   496 label *label142
-    * set *tmp141 *tmp142
+  497 set *tmp141 "T"
   498 label *label140
-    * print *tmp133
-    * print *tmp136
-    * print *tmp139
-    * print *tmp142
+  499 print "F"
+  500 print "T"
+  501 print "F"
+  502 print "T"
   503 assertprints "FTFT" "comparison 11"
   504 label *label130
   505 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.11:title "comparison 12"
-    * set :compare.11:a "A"
-    * set :compare.11:b 1
-    * set :compare.11:expected "TFFT"
   506 assertflush
   507 op equal *tmp144 "A" 1
   508 # "Function: inline def eval(in b)"
-    * set :eval.44:b *tmp144
-    * jump *label145 equal *tmp144 false
+  509 set :eval.44:b true
+  510 jump *label145 equal true false
   511 set *tmp146 "T"
   512 jump *label146 always
   513 label *label145
-    * set *tmp146 "F"
   514 label *label146
-    * set *tmp145 *tmp146
+  515 set *tmp145 "T"
   516 label *label144
   517 op notEqual *tmp147 "A" 1
   518 # "Function: inline def eval(in b)"
-    * set :eval.45:b *tmp147
-    * jump *label148 equal *tmp147 false
-    * set *tmp149 "T"
+  519 set :eval.45:b false
+  520 jump *label148 equal false false
   521 jump *label149 always
   522 label *label148
   523 set *tmp149 "F"
   524 label *label149
-    * set *tmp148 *tmp149
+  525 set *tmp148 "F"
   526 label *label147
   527 op strictEqual *tmp150 "A" 1
   528 # "Function: inline def eval(in b)"
-    * set :eval.46:b *tmp150
-    * jump *label151 equal *tmp150 false
-    * set *tmp152 "T"
+  529 set :eval.46:b false
+  530 jump *label151 equal false false
   531 jump *label152 always
   532 label *label151
   533 set *tmp152 "F"
   534 label *label152
-    * set *tmp151 *tmp152
+  535 set *tmp151 "F"
   536 label *label150
   537 op strictNotEqual *tmp153 "A" 1
   538 # "Function: inline def eval(in b)"
-    * set :eval.47:b *tmp153
-    * jump *label154 equal *tmp153 false
+  539 set :eval.47:b true
+  540 jump *label154 equal true false
   541 set *tmp155 "T"
   542 jump *label155 always
   543 label *label154
-    * set *tmp155 "F"
   544 label *label155
-    * set *tmp154 *tmp155
+  545 set *tmp154 "T"
   546 label *label153
-    * print *tmp146
-    * print *tmp149
-    * print *tmp152
-    * print *tmp155
+  547 print "T"
+  548 print "F"
+  549 print "F"
+  550 print "T"
   551 assertprints "TFFT" "comparison 12"
   552 label *label143
   553 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.12:title "comparison 13"
-    * set :compare.12:a "A"
-    * set :compare.12:b 2
-    * set :compare.12:expected "FTFT"
   554 assertflush
   555 op equal *tmp157 "A" 2
   556 # "Function: inline def eval(in b)"
-    * set :eval.48:b *tmp157
-    * jump *label158 equal *tmp157 false
-    * set *tmp159 "T"
+  557 set :eval.48:b false
+  558 jump *label158 equal false false
   559 jump *label159 always
   560 label *label158
   561 set *tmp159 "F"
   562 label *label159
-    * set *tmp158 *tmp159
+  563 set *tmp158 "F"
   564 label *label157
   565 op notEqual *tmp160 "A" 2
   566 # "Function: inline def eval(in b)"
-    * set :eval.49:b *tmp160
-    * jump *label161 equal *tmp160 false
+  567 set :eval.49:b true
+  568 jump *label161 equal true false
   569 set *tmp162 "T"
   570 jump *label162 always
   571 label *label161
-    * set *tmp162 "F"
   572 label *label162
-    * set *tmp161 *tmp162
+  573 set *tmp161 "T"
   574 label *label160
   575 op strictEqual *tmp163 "A" 2
   576 # "Function: inline def eval(in b)"
-    * set :eval.50:b *tmp163
-    * jump *label164 equal *tmp163 false
-    * set *tmp165 "T"
+  577 set :eval.50:b false
+  578 jump *label164 equal false false
   579 jump *label165 always
   580 label *label164
   581 set *tmp165 "F"
   582 label *label165
-    * set *tmp164 *tmp165
+  583 set *tmp164 "F"
   584 label *label163
   585 op strictNotEqual *tmp166 "A" 2
   586 # "Function: inline def eval(in b)"
-    * set :eval.51:b *tmp166
-    * jump *label167 equal *tmp166 false
+  587 set :eval.51:b true
+  588 jump *label167 equal true false
   589 set *tmp168 "T"
   590 jump *label168 always
   591 label *label167
-    * set *tmp168 "F"
   592 label *label168
-    * set *tmp167 *tmp168
+  593 set *tmp167 "T"
   594 label *label166
-    * print *tmp159
-    * print *tmp162
-    * print *tmp165
-    * print *tmp168
+  595 print "F"
+  596 print "T"
+  597 print "F"
+  598 print "T"
   599 assertprints "FTFT" "comparison 13"
   600 label *label156
   601 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.13:title "comparison 14"
-    * set :compare.13:a "A"
-    * set :compare.13:b "B"
-    * set :compare.13:expected "FTFT"
   602 assertflush
   603 op equal *tmp170 "A" "B"
   604 # "Function: inline def eval(in b)"
-    * set :eval.52:b *tmp170
-    * jump *label171 equal *tmp170 false
-    * set *tmp172 "T"
+  605 set :eval.52:b false
+  606 jump *label171 equal false false
   607 jump *label172 always
   608 label *label171
   609 set *tmp172 "F"
   610 label *label172
-    * set *tmp171 *tmp172
+  611 set *tmp171 "F"
   612 label *label170
   613 op notEqual *tmp173 "A" "B"
   614 # "Function: inline def eval(in b)"
-    * set :eval.53:b *tmp173
-    * jump *label174 equal *tmp173 false
+  615 set :eval.53:b true
+  616 jump *label174 equal true false
   617 set *tmp175 "T"
   618 jump *label175 always
   619 label *label174
-    * set *tmp175 "F"
   620 label *label175
-    * set *tmp174 *tmp175
+  621 set *tmp174 "T"
   622 label *label173
   623 op strictEqual *tmp176 "A" "B"
   624 # "Function: inline def eval(in b)"
-    * set :eval.54:b *tmp176
-    * jump *label177 equal *tmp176 false
-    * set *tmp178 "T"
+  625 set :eval.54:b false
+  626 jump *label177 equal false false
   627 jump *label178 always
   628 label *label177
   629 set *tmp178 "F"
   630 label *label178
-    * set *tmp177 *tmp178
+  631 set *tmp177 "F"
   632 label *label176
   633 op strictNotEqual *tmp179 "A" "B"
   634 # "Function: inline def eval(in b)"
-    * set :eval.55:b *tmp179
-    * jump *label180 equal *tmp179 false
+  635 set :eval.55:b true
+  636 jump *label180 equal true false
   637 set *tmp181 "T"
   638 jump *label181 always
   639 label *label180
-    * set *tmp181 "F"
   640 label *label181
-    * set *tmp180 *tmp181
+  641 set *tmp180 "T"
   642 label *label179
-    * print *tmp172
-    * print *tmp175
-    * print *tmp178
-    * print *tmp181
+  643 print "F"
+  644 print "T"
+  645 print "F"
+  646 print "T"
   647 assertprints "FTFT" "comparison 14"
   648 label *label169
   649 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.14:title "comparison 15"
-    * set :compare.14:a "A"
-    * set :compare.14:b "A"
-    * set :compare.14:expected "TFTF"
   650 assertflush
   651 op equal *tmp183 "A" "A"
   652 # "Function: inline def eval(in b)"
-    * set :eval.56:b *tmp183
-    * jump *label184 equal *tmp183 false
+  653 set :eval.56:b true
+  654 jump *label184 equal true false
   655 set *tmp185 "T"
   656 jump *label185 always
   657 label *label184
-    * set *tmp185 "F"
   658 label *label185
-    * set *tmp184 *tmp185
+  659 set *tmp184 "T"
   660 label *label183
   661 op notEqual *tmp186 "A" "A"
   662 # "Function: inline def eval(in b)"
-    * set :eval.57:b *tmp186
-    * jump *label187 equal *tmp186 false
-    * set *tmp188 "T"
+  663 set :eval.57:b false
+  664 jump *label187 equal false false
   665 jump *label188 always
   666 label *label187
   667 set *tmp188 "F"
   668 label *label188
-    * set *tmp187 *tmp188
+  669 set *tmp187 "F"
   670 label *label186
   671 op strictEqual *tmp189 "A" "A"
   672 # "Function: inline def eval(in b)"
-    * set :eval.58:b *tmp189
-    * jump *label190 equal *tmp189 false
+  673 set :eval.58:b true
+  674 jump *label190 equal true false
   675 set *tmp191 "T"
   676 jump *label191 always
   677 label *label190
-    * set *tmp191 "F"
   678 label *label191
-    * set *tmp190 *tmp191
+  679 set *tmp190 "T"
   680 label *label189
   681 op strictNotEqual *tmp192 "A" "A"
   682 # "Function: inline def eval(in b)"
-    * set :eval.59:b *tmp192
-    * jump *label193 equal *tmp192 false
-    * set *tmp194 "T"
+  683 set :eval.59:b false
+  684 jump *label193 equal false false
   685 jump *label194 always
   686 label *label193
   687 set *tmp194 "F"
   688 label *label194
-    * set *tmp193 *tmp194
+  689 set *tmp193 "F"
   690 label *label192
-    * print *tmp185
-    * print *tmp188
-    * print *tmp191
-    * print *tmp194
+  691 print "T"
+  692 print "F"
+  693 print "T"
+  694 print "F"
   695 assertprints "TFTF" "comparison 15"
   696 label *label182
   697 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-180 instructions):
     0 set A 0
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
-    * op equal *tmp1 null 0
     3 # "Function: inline def eval(in b)"
     4 jump *label2 equal true false
-    * set *tmp3 "T"
     5 jump *label3 always
     6 label *label2
     7 label *label3
-    * set *tmp2 "T"
     8 label *label1
-    * op notEqual *tmp4 null 0
     9 # "Function: inline def eval(in b)"
    10 jump *label5 equal false false
    11 jump *label6 always
    12 label *label5
-    * set *tmp6 "F"
    13 label *label6
-    * set *tmp5 "F"
    14 label *label4
-    * op strictEqual *tmp7 null 0
    15 # "Function: inline def eval(in b)"
    16 jump *label8 equal false false
    17 jump *label9 always
    18 label *label8
-    * set *tmp9 "F"
    19 label *label9
-    * set *tmp8 "F"
    20 label *label7
-    * op strictNotEqual *tmp10 null 0
    21 # "Function: inline def eval(in b)"
    22 jump *label11 equal true false
-    * set *tmp12 "T"
    23 jump *label12 always
    24 label *label11
    25 label *label12
-    * set *tmp11 "T"
    26 label *label10
    27 print "T"
    28 print "F"
 
    32 label *label0
    33 # "Function: inline def compare(in title, in a, in b, in expected)"
    34 assertflush
-    * op equal *tmp14 null 1
    35 # "Function: inline def eval(in b)"
    36 jump *label15 equal false false
    37 jump *label16 always
    38 label *label15
-    * set *tmp16 "F"
    39 label *label16
-    * set *tmp15 "F"
    40 label *label14
-    * op notEqual *tmp17 null 1
    41 # "Function: inline def eval(in b)"
    42 jump *label18 equal true false
-    * set *tmp19 "T"
    43 jump *label19 always
    44 label *label18
    45 label *label19
-    * set *tmp18 "T"
    46 label *label17
-    * op strictEqual *tmp20 null 1
    47 # "Function: inline def eval(in b)"
    48 jump *label21 equal false false
    49 jump *label22 always
    50 label *label21
-    * set *tmp22 "F"
    51 label *label22
-    * set *tmp21 "F"
    52 label *label20
-    * op strictNotEqual *tmp23 null 1
    53 # "Function: inline def eval(in b)"
    54 jump *label24 equal true false
-    * set *tmp25 "T"
    55 jump *label25 always
    56 label *label24
    57 label *label25
-    * set *tmp24 "T"
    58 label *label23
    59 print "F"
    60 print "T"
 
    64 label *label13
    65 # "Function: inline def compare(in title, in a, in b, in expected)"
    66 assertflush
-    * op equal *tmp27 null 2
    67 # "Function: inline def eval(in b)"
    68 jump *label28 equal false false
    69 jump *label29 always
    70 label *label28
-    * set *tmp29 "F"
    71 label *label29
-    * set *tmp28 "F"
    72 label *label27
-    * op notEqual *tmp30 null 2
    73 # "Function: inline def eval(in b)"
    74 jump *label31 equal true false
-    * set *tmp32 "T"
    75 jump *label32 always
    76 label *label31
    77 label *label32
-    * set *tmp31 "T"
    78 label *label30
-    * op strictEqual *tmp33 null 2
    79 # "Function: inline def eval(in b)"
    80 jump *label34 equal false false
    81 jump *label35 always
    82 label *label34
-    * set *tmp35 "F"
    83 label *label35
-    * set *tmp34 "F"
    84 label *label33
-    * op strictNotEqual *tmp36 null 2
    85 # "Function: inline def eval(in b)"
    86 jump *label37 equal true false
-    * set *tmp38 "T"
    87 jump *label38 always
    88 label *label37
    89 label *label38
-    * set *tmp37 "T"
    90 label *label36
    91 print "F"
    92 print "T"
 
    96 label *label26
    97 # "Function: inline def compare(in title, in a, in b, in expected)"
    98 assertflush
-    * op equal *tmp40 @coal 0
    99 # "Function: inline def eval(in b)"
-    * set :eval.12:b false
   100 jump *label41 equal false false
   101 jump *label42 always
   102 label *label41
-    * set *tmp42 "F"
   103 label *label42
-    * set *tmp41 "F"
   104 label *label40
-    * op notEqual *tmp43 @coal 0
   105 # "Function: inline def eval(in b)"
-    * set :eval.13:b true
   106 jump *label44 equal true false
-    * set *tmp45 "T"
   107 jump *label45 always
   108 label *label44
   109 label *label45
-    * set *tmp44 "T"
   110 label *label43
-    * op strictEqual *tmp46 @coal 0
   111 # "Function: inline def eval(in b)"
-    * set :eval.14:b false
   112 jump *label47 equal false false
   113 jump *label48 always
   114 label *label47
-    * set *tmp48 "F"
   115 label *label48
-    * set *tmp47 "F"
   116 label *label46
-    * op strictNotEqual *tmp49 @coal 0
   117 # "Function: inline def eval(in b)"
-    * set :eval.15:b true
   118 jump *label50 equal true false
-    * set *tmp51 "T"
   119 jump *label51 always
   120 label *label50
   121 label *label51
-    * set *tmp50 "T"
   122 label *label49
   123 print "F"
   124 print "T"
 
   128 label *label39
   129 # "Function: inline def compare(in title, in a, in b, in expected)"
   130 assertflush
-    * op equal *tmp53 @coal 1
   131 # "Function: inline def eval(in b)"
-    * set :eval.16:b true
   132 jump *label54 equal true false
-    * set *tmp55 "T"
   133 jump *label55 always
   134 label *label54
   135 label *label55
-    * set *tmp54 "T"
   136 label *label53
-    * op notEqual *tmp56 @coal 1
   137 # "Function: inline def eval(in b)"
-    * set :eval.17:b false
   138 jump *label57 equal false false
   139 jump *label58 always
   140 label *label57
-    * set *tmp58 "F"
   141 label *label58
-    * set *tmp57 "F"
   142 label *label56
-    * op strictEqual *tmp59 @coal 1
   143 # "Function: inline def eval(in b)"
-    * set :eval.18:b false
   144 jump *label60 equal false false
   145 jump *label61 always
   146 label *label60
-    * set *tmp61 "F"
   147 label *label61
-    * set *tmp60 "F"
   148 label *label59
-    * op strictNotEqual *tmp62 @coal 1
   149 # "Function: inline def eval(in b)"
-    * set :eval.19:b true
   150 jump *label63 equal true false
-    * set *tmp64 "T"
   151 jump *label64 always
   152 label *label63
   153 label *label64
-    * set *tmp63 "T"
   154 label *label62
   155 print "T"
   156 print "F"
 
   160 label *label52
   161 # "Function: inline def compare(in title, in a, in b, in expected)"
   162 assertflush
-    * op equal *tmp66 @coal 2
   163 # "Function: inline def eval(in b)"
-    * set :eval.20:b false
   164 jump *label67 equal false false
   165 jump *label68 always
   166 label *label67
-    * set *tmp68 "F"
   167 label *label68
-    * set *tmp67 "F"
   168 label *label66
-    * op notEqual *tmp69 @coal 2
   169 # "Function: inline def eval(in b)"
-    * set :eval.21:b true
   170 jump *label70 equal true false
-    * set *tmp71 "T"
   171 jump *label71 always
   172 label *label70
   173 label *label71
-    * set *tmp70 "T"
   174 label *label69
-    * op strictEqual *tmp72 @coal 2
   175 # "Function: inline def eval(in b)"
-    * set :eval.22:b false
   176 jump *label73 equal false false
   177 jump *label74 always
   178 label *label73
-    * set *tmp74 "F"
   179 label *label74
-    * set *tmp73 "F"
   180 label *label72
-    * op strictNotEqual *tmp75 @coal 2
   181 # "Function: inline def eval(in b)"
-    * set :eval.23:b true
   182 jump *label76 equal true false
-    * set *tmp77 "T"
   183 jump *label77 always
   184 label *label76
   185 label *label77
-    * set *tmp76 "T"
   186 label *label75
   187 print "F"
   188 print "T"
 
   192 label *label65
   193 # "Function: inline def compare(in title, in a, in b, in expected)"
   194 assertflush
-    * op equal *tmp79 @coal @lead
   195 # "Function: inline def eval(in b)"
-    * set :eval.24:b false
   196 jump *label80 equal false false
   197 jump *label81 always
   198 label *label80
-    * set *tmp81 "F"
   199 label *label81
-    * set *tmp80 "F"
   200 label *label79
-    * op notEqual *tmp82 @coal @lead
   201 # "Function: inline def eval(in b)"
-    * set :eval.25:b true
   202 jump *label83 equal true false
-    * set *tmp84 "T"
   203 jump *label84 always
   204 label *label83
   205 label *label84
-    * set *tmp83 "T"
   206 label *label82
-    * op strictEqual *tmp85 @coal @lead
   207 # "Function: inline def eval(in b)"
-    * set :eval.26:b false
   208 jump *label86 equal false false
   209 jump *label87 always
   210 label *label86
-    * set *tmp87 "F"
   211 label *label87
-    * set *tmp86 "F"
   212 label *label85
-    * op strictNotEqual *tmp88 @coal @lead
   213 # "Function: inline def eval(in b)"
-    * set :eval.27:b true
   214 jump *label89 equal true false
-    * set *tmp90 "T"
   215 jump *label90 always
   216 label *label89
   217 label *label90
-    * set *tmp89 "T"
   218 label *label88
   219 print "F"
   220 print "T"
 
   356 label *label117
   357 # "Function: inline def compare(in title, in a, in b, in expected)"
   358 assertflush
-    * op equal *tmp131 "A" 0
   359 # "Function: inline def eval(in b)"
-    * set :eval.40:b false
   360 jump *label132 equal false false
   361 jump *label133 always
   362 label *label132
-    * set *tmp133 "F"
   363 label *label133
-    * set *tmp132 "F"
   364 label *label131
-    * op notEqual *tmp134 "A" 0
   365 # "Function: inline def eval(in b)"
-    * set :eval.41:b true
   366 jump *label135 equal true false
-    * set *tmp136 "T"
   367 jump *label136 always
   368 label *label135
   369 label *label136
-    * set *tmp135 "T"
   370 label *label134
-    * op strictEqual *tmp137 "A" 0
   371 # "Function: inline def eval(in b)"
-    * set :eval.42:b false
   372 jump *label138 equal false false
   373 jump *label139 always
   374 label *label138
-    * set *tmp139 "F"
   375 label *label139
-    * set *tmp138 "F"
   376 label *label137
-    * op strictNotEqual *tmp140 "A" 0
   377 # "Function: inline def eval(in b)"
-    * set :eval.43:b true
   378 jump *label141 equal true false
-    * set *tmp142 "T"
   379 jump *label142 always
   380 label *label141
   381 label *label142
-    * set *tmp141 "T"
   382 label *label140
   383 print "F"
   384 print "T"
 
   388 label *label130
   389 # "Function: inline def compare(in title, in a, in b, in expected)"
   390 assertflush
-    * op equal *tmp144 "A" 1
   391 # "Function: inline def eval(in b)"
-    * set :eval.44:b true
   392 jump *label145 equal true false
-    * set *tmp146 "T"
   393 jump *label146 always
   394 label *label145
   395 label *label146
-    * set *tmp145 "T"
   396 label *label144
-    * op notEqual *tmp147 "A" 1
   397 # "Function: inline def eval(in b)"
-    * set :eval.45:b false
   398 jump *label148 equal false false
   399 jump *label149 always
   400 label *label148
-    * set *tmp149 "F"
   401 label *label149
-    * set *tmp148 "F"
   402 label *label147
-    * op strictEqual *tmp150 "A" 1
   403 # "Function: inline def eval(in b)"
-    * set :eval.46:b false
   404 jump *label151 equal false false
   405 jump *label152 always
   406 label *label151
-    * set *tmp152 "F"
   407 label *label152
-    * set *tmp151 "F"
   408 label *label150
-    * op strictNotEqual *tmp153 "A" 1
   409 # "Function: inline def eval(in b)"
-    * set :eval.47:b true
   410 jump *label154 equal true false
-    * set *tmp155 "T"
   411 jump *label155 always
   412 label *label154
   413 label *label155
-    * set *tmp154 "T"
   414 label *label153
   415 print "T"
   416 print "F"
 
   420 label *label143
   421 # "Function: inline def compare(in title, in a, in b, in expected)"
   422 assertflush
-    * op equal *tmp157 "A" 2
   423 # "Function: inline def eval(in b)"
-    * set :eval.48:b false
   424 jump *label158 equal false false
   425 jump *label159 always
   426 label *label158
-    * set *tmp159 "F"
   427 label *label159
-    * set *tmp158 "F"
   428 label *label157
-    * op notEqual *tmp160 "A" 2
   429 # "Function: inline def eval(in b)"
-    * set :eval.49:b true
   430 jump *label161 equal true false
-    * set *tmp162 "T"
   431 jump *label162 always
   432 label *label161
   433 label *label162
-    * set *tmp161 "T"
   434 label *label160
-    * op strictEqual *tmp163 "A" 2
   435 # "Function: inline def eval(in b)"
-    * set :eval.50:b false
   436 jump *label164 equal false false
   437 jump *label165 always
   438 label *label164
-    * set *tmp165 "F"
   439 label *label165
-    * set *tmp164 "F"
   440 label *label163
-    * op strictNotEqual *tmp166 "A" 2
   441 # "Function: inline def eval(in b)"
-    * set :eval.51:b true
   442 jump *label167 equal true false
-    * set *tmp168 "T"
   443 jump *label168 always
   444 label *label167
   445 label *label168
-    * set *tmp167 "T"
   446 label *label166
   447 print "F"
   448 print "T"
 
   452 label *label156
   453 # "Function: inline def compare(in title, in a, in b, in expected)"
   454 assertflush
-    * op equal *tmp170 "A" "B"
   455 # "Function: inline def eval(in b)"
-    * set :eval.52:b false
   456 jump *label171 equal false false
   457 jump *label172 always
   458 label *label171
-    * set *tmp172 "F"
   459 label *label172
-    * set *tmp171 "F"
   460 label *label170
-    * op notEqual *tmp173 "A" "B"
   461 # "Function: inline def eval(in b)"
-    * set :eval.53:b true
   462 jump *label174 equal true false
-    * set *tmp175 "T"
   463 jump *label175 always
   464 label *label174
   465 label *label175
-    * set *tmp174 "T"
   466 label *label173
-    * op strictEqual *tmp176 "A" "B"
   467 # "Function: inline def eval(in b)"
-    * set :eval.54:b false
   468 jump *label177 equal false false
   469 jump *label178 always
   470 label *label177
-    * set *tmp178 "F"
   471 label *label178
-    * set *tmp177 "F"
   472 label *label176
-    * op strictNotEqual *tmp179 "A" "B"
   473 # "Function: inline def eval(in b)"
-    * set :eval.55:b true
   474 jump *label180 equal true false
-    * set *tmp181 "T"
   475 jump *label181 always
   476 label *label180
   477 label *label181
-    * set *tmp180 "T"
   478 label *label179
   479 print "F"
   480 print "T"
 
   484 label *label169
   485 # "Function: inline def compare(in title, in a, in b, in expected)"
   486 assertflush
-    * op equal *tmp183 "A" "A"
   487 # "Function: inline def eval(in b)"
-    * set :eval.56:b true
   488 jump *label184 equal true false
-    * set *tmp185 "T"
   489 jump *label185 always
   490 label *label184
   491 label *label185
-    * set *tmp184 "T"
   492 label *label183
-    * op notEqual *tmp186 "A" "A"
   493 # "Function: inline def eval(in b)"
-    * set :eval.57:b false
   494 jump *label187 equal false false
   495 jump *label188 always
   496 label *label187
-    * set *tmp188 "F"
   497 label *label188
-    * set *tmp187 "F"
   498 label *label186
-    * op strictEqual *tmp189 "A" "A"
   499 # "Function: inline def eval(in b)"
-    * set :eval.58:b true
   500 jump *label190 equal true false
-    * set *tmp191 "T"
   501 jump *label191 always
   502 label *label190
   503 label *label191
-    * set *tmp190 "T"
   504 label *label189
-    * op strictNotEqual *tmp192 "A" "A"
   505 # "Function: inline def eval(in b)"
-    * set :eval.59:b false
   506 jump *label193 equal false false
   507 jump *label194 always
   508 label *label193
-    * set *tmp194 "F"
   509 label *label194
-    * set *tmp193 "F"
   510 label *label192
   511 print "T"
   512 print "F"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-132 instructions):
 
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
     3 # "Function: inline def eval(in b)"
-    * jump *label2 equal true false
-    * jump *label3 always
-    * label *label2
-    * label *label3
     4 label *label1
     5 # "Function: inline def eval(in b)"
-    * jump *label5 equal false false
-    * jump *label6 always
-    * label *label5
-    * label *label6
     6 label *label4
     7 # "Function: inline def eval(in b)"
-    * jump *label8 equal false false
-    * jump *label9 always
-    * label *label8
-    * label *label9
     8 label *label7
     9 # "Function: inline def eval(in b)"
-    * jump *label11 equal true false
-    * jump *label12 always
-    * label *label11
-    * label *label12
    10 label *label10
    11 print "T"
    12 print "F"
 
    17 # "Function: inline def compare(in title, in a, in b, in expected)"
    18 assertflush
    19 # "Function: inline def eval(in b)"
-    * jump *label15 equal false false
-    * jump *label16 always
-    * label *label15
-    * label *label16
    20 label *label14
    21 # "Function: inline def eval(in b)"
-    * jump *label18 equal true false
-    * jump *label19 always
-    * label *label18
-    * label *label19
    22 label *label17
    23 # "Function: inline def eval(in b)"
-    * jump *label21 equal false false
-    * jump *label22 always
-    * label *label21
-    * label *label22
    24 label *label20
    25 # "Function: inline def eval(in b)"
-    * jump *label24 equal true false
-    * jump *label25 always
-    * label *label24
-    * label *label25
    26 label *label23
    27 print "F"
    28 print "T"
 
    33 # "Function: inline def compare(in title, in a, in b, in expected)"
    34 assertflush
    35 # "Function: inline def eval(in b)"
-    * jump *label28 equal false false
-    * jump *label29 always
-    * label *label28
-    * label *label29
    36 label *label27
    37 # "Function: inline def eval(in b)"
-    * jump *label31 equal true false
-    * jump *label32 always
-    * label *label31
-    * label *label32
    38 label *label30
    39 # "Function: inline def eval(in b)"
-    * jump *label34 equal false false
-    * jump *label35 always
-    * label *label34
-    * label *label35
    40 label *label33
    41 # "Function: inline def eval(in b)"
-    * jump *label37 equal true false
-    * jump *label38 always
-    * label *label37
-    * label *label38
    42 label *label36
    43 print "F"
    44 print "T"
 
    49 # "Function: inline def compare(in title, in a, in b, in expected)"
    50 assertflush
    51 # "Function: inline def eval(in b)"
-    * jump *label41 equal false false
-    * jump *label42 always
-    * label *label41
-    * label *label42
    52 label *label40
    53 # "Function: inline def eval(in b)"
-    * jump *label44 equal true false
-    * jump *label45 always
-    * label *label44
-    * label *label45
    54 label *label43
    55 # "Function: inline def eval(in b)"
-    * jump *label47 equal false false
-    * jump *label48 always
-    * label *label47
-    * label *label48
    56 label *label46
    57 # "Function: inline def eval(in b)"
-    * jump *label50 equal true false
-    * jump *label51 always
-    * label *label50
-    * label *label51
    58 label *label49
    59 print "F"
    60 print "T"
 
    65 # "Function: inline def compare(in title, in a, in b, in expected)"
    66 assertflush
    67 # "Function: inline def eval(in b)"
-    * jump *label54 equal true false
-    * jump *label55 always
-    * label *label54
-    * label *label55
    68 label *label53
    69 # "Function: inline def eval(in b)"
-    * jump *label57 equal false false
-    * jump *label58 always
-    * label *label57
-    * label *label58
    70 label *label56
    71 # "Function: inline def eval(in b)"
-    * jump *label60 equal false false
-    * jump *label61 always
-    * label *label60
-    * label *label61
    72 label *label59
    73 # "Function: inline def eval(in b)"
-    * jump *label63 equal true false
-    * jump *label64 always
-    * label *label63
-    * label *label64
    74 label *label62
    75 print "T"
    76 print "F"
 
    81 # "Function: inline def compare(in title, in a, in b, in expected)"
    82 assertflush
    83 # "Function: inline def eval(in b)"
-    * jump *label67 equal false false
-    * jump *label68 always
-    * label *label67
-    * label *label68
    84 label *label66
    85 # "Function: inline def eval(in b)"
-    * jump *label70 equal true false
-    * jump *label71 always
-    * label *label70
-    * label *label71
    86 label *label69
    87 # "Function: inline def eval(in b)"
-    * jump *label73 equal false false
-    * jump *label74 always
-    * label *label73
-    * label *label74
    88 label *label72
    89 # "Function: inline def eval(in b)"
-    * jump *label76 equal true false
-    * jump *label77 always
-    * label *label76
-    * label *label77
    90 label *label75
    91 print "F"
    92 print "T"
 
    97 # "Function: inline def compare(in title, in a, in b, in expected)"
    98 assertflush
    99 # "Function: inline def eval(in b)"
-    * jump *label80 equal false false
-    * jump *label81 always
-    * label *label80
-    * label *label81
   100 label *label79
   101 # "Function: inline def eval(in b)"
-    * jump *label83 equal true false
-    * jump *label84 always
-    * label *label83
-    * label *label84
   102 label *label82
   103 # "Function: inline def eval(in b)"
-    * jump *label86 equal false false
-    * jump *label87 always
-    * label *label86
-    * label *label87
   104 label *label85
   105 # "Function: inline def eval(in b)"
-    * jump *label89 equal true false
-    * jump *label90 always
-    * label *label89
-    * label *label90
   106 label *label88
   107 print "F"
   108 print "T"
 
   114 assertflush
   115 op equal *tmp92 A A
   116 # "Function: inline def eval(in b)"
-    * jump *label93 equal *tmp92 false
-    * set *tmp94 "T"
-    * jump *label94 always
-    * label *label93
-    * set *tmp94 "F"
-    * label *label94
+  117 select *tmp94 notEqual *tmp92 false "T" "F"
   118 label *label92
   119 op notEqual *tmp95 A A
   120 # "Function: inline def eval(in b)"
-    * jump *label96 equal *tmp95 false
-    * set *tmp97 "T"
-    * jump *label97 always
-    * label *label96
-    * set *tmp97 "F"
-    * label *label97
+  121 select *tmp97 notEqual *tmp95 false "T" "F"
   122 label *label95
   123 op strictEqual *tmp98 A A
   124 # "Function: inline def eval(in b)"
-    * jump *label99 equal *tmp98 false
-    * set *tmp100 "T"
-    * jump *label100 always
-    * label *label99
-    * set *tmp100 "F"
-    * label *label100
+  125 select *tmp100 notEqual *tmp98 false "T" "F"
   126 label *label98
   127 op strictNotEqual *tmp101 A A
   128 # "Function: inline def eval(in b)"
-    * jump *label102 equal *tmp101 false
-    * set *tmp103 "T"
-    * jump *label103 always
-    * label *label102
-    * set *tmp103 "F"
-    * label *label103
+  129 select *tmp103 notEqual *tmp101 false "T" "F"
   130 label *label101
   131 print *tmp94
   132 print *tmp97
 
   138 assertflush
   139 op equal *tmp105 A 0
   140 # "Function: inline def eval(in b)"
-    * jump *label106 equal *tmp105 false
-    * set *tmp107 "T"
-    * jump *label107 always
-    * label *label106
-    * set *tmp107 "F"
-    * label *label107
+  141 select *tmp107 notEqual *tmp105 false "T" "F"
   142 label *label105
   143 op notEqual *tmp108 A 0
   144 # "Function: inline def eval(in b)"
-    * jump *label109 equal *tmp108 false
-    * set *tmp110 "T"
-    * jump *label110 always
-    * label *label109
-    * set *tmp110 "F"
-    * label *label110
+  145 select *tmp110 notEqual *tmp108 false "T" "F"
   146 label *label108
   147 op strictEqual *tmp111 A 0
   148 # "Function: inline def eval(in b)"
-    * jump *label112 equal *tmp111 false
-    * set *tmp113 "T"
-    * jump *label113 always
-    * label *label112
-    * set *tmp113 "F"
-    * label *label113
+  149 select *tmp113 notEqual *tmp111 false "T" "F"
   150 label *label111
   151 op strictNotEqual *tmp114 A 0
   152 # "Function: inline def eval(in b)"
-    * jump *label115 equal *tmp114 false
-    * set *tmp116 "T"
-    * jump *label116 always
-    * label *label115
-    * set *tmp116 "F"
-    * label *label116
+  153 select *tmp116 notEqual *tmp114 false "T" "F"
   154 label *label114
   155 print *tmp107
   156 print *tmp110
 
   162 assertflush
   163 op equal *tmp118 A 1
   164 # "Function: inline def eval(in b)"
-    * jump *label119 equal *tmp118 false
-    * set *tmp120 "T"
-    * jump *label120 always
-    * label *label119
-    * set *tmp120 "F"
-    * label *label120
+  165 select *tmp120 notEqual *tmp118 false "T" "F"
   166 label *label118
   167 op notEqual *tmp121 A 1
   168 # "Function: inline def eval(in b)"
-    * jump *label122 equal *tmp121 false
-    * set *tmp123 "T"
-    * jump *label123 always
-    * label *label122
-    * set *tmp123 "F"
-    * label *label123
+  169 select *tmp123 notEqual *tmp121 false "T" "F"
   170 label *label121
   171 op strictEqual *tmp124 A 1
   172 # "Function: inline def eval(in b)"
-    * jump *label125 equal *tmp124 false
-    * set *tmp126 "T"
-    * jump *label126 always
-    * label *label125
-    * set *tmp126 "F"
-    * label *label126
+  173 select *tmp126 notEqual *tmp124 false "T" "F"
   174 label *label124
   175 op strictNotEqual *tmp127 A 1
   176 # "Function: inline def eval(in b)"
-    * jump *label128 equal *tmp127 false
-    * set *tmp129 "T"
-    * jump *label129 always
-    * label *label128
-    * set *tmp129 "F"
-    * label *label129
+  177 select *tmp129 notEqual *tmp127 false "T" "F"
   178 label *label127
   179 print *tmp120
   180 print *tmp123
 
   185 # "Function: inline def compare(in title, in a, in b, in expected)"
   186 assertflush
   187 # "Function: inline def eval(in b)"
-    * jump *label132 equal false false
-    * jump *label133 always
-    * label *label132
-    * label *label133
   188 label *label131
   189 # "Function: inline def eval(in b)"
-    * jump *label135 equal true false
-    * jump *label136 always
-    * label *label135
-    * label *label136
   190 label *label134
   191 # "Function: inline def eval(in b)"
-    * jump *label138 equal false false
-    * jump *label139 always
-    * label *label138
-    * label *label139
   192 label *label137
   193 # "Function: inline def eval(in b)"
-    * jump *label141 equal true false
-    * jump *label142 always
-    * label *label141
-    * label *label142
   194 label *label140
   195 print "F"
   196 print "T"
 
   201 # "Function: inline def compare(in title, in a, in b, in expected)"
   202 assertflush
   203 # "Function: inline def eval(in b)"
-    * jump *label145 equal true false
-    * jump *label146 always
-    * label *label145
-    * label *label146
   204 label *label144
   205 # "Function: inline def eval(in b)"
-    * jump *label148 equal false false
-    * jump *label149 always
-    * label *label148
-    * label *label149
   206 label *label147
   207 # "Function: inline def eval(in b)"
-    * jump *label151 equal false false
-    * jump *label152 always
-    * label *label151
-    * label *label152
   208 label *label150
   209 # "Function: inline def eval(in b)"
-    * jump *label154 equal true false
-    * jump *label155 always
-    * label *label154
-    * label *label155
   210 label *label153
   211 print "T"
   212 print "F"
 
   217 # "Function: inline def compare(in title, in a, in b, in expected)"
   218 assertflush
   219 # "Function: inline def eval(in b)"
-    * jump *label158 equal false false
-    * jump *label159 always
-    * label *label158
-    * label *label159
   220 label *label157
   221 # "Function: inline def eval(in b)"
-    * jump *label161 equal true false
-    * jump *label162 always
-    * label *label161
-    * label *label162
   222 label *label160
   223 # "Function: inline def eval(in b)"
-    * jump *label164 equal false false
-    * jump *label165 always
-    * label *label164
-    * label *label165
   224 label *label163
   225 # "Function: inline def eval(in b)"
-    * jump *label167 equal true false
-    * jump *label168 always
-    * label *label167
-    * label *label168
   226 label *label166
   227 print "F"
   228 print "T"
 
   233 # "Function: inline def compare(in title, in a, in b, in expected)"
   234 assertflush
   235 # "Function: inline def eval(in b)"
-    * jump *label171 equal false false
-    * jump *label172 always
-    * label *label171
-    * label *label172
   236 label *label170
   237 # "Function: inline def eval(in b)"
-    * jump *label174 equal true false
-    * jump *label175 always
-    * label *label174
-    * label *label175
   238 label *label173
   239 # "Function: inline def eval(in b)"
-    * jump *label177 equal false false
-    * jump *label178 always
-    * label *label177
-    * label *label178
   240 label *label176
   241 # "Function: inline def eval(in b)"
-    * jump *label180 equal true false
-    * jump *label181 always
-    * label *label180
-    * label *label181
   242 label *label179
   243 print "F"
   244 print "T"
 
   249 # "Function: inline def compare(in title, in a, in b, in expected)"
   250 assertflush
   251 # "Function: inline def eval(in b)"
-    * jump *label184 equal true false
-    * jump *label185 always
-    * label *label184
-    * label *label185
   252 label *label183
   253 # "Function: inline def eval(in b)"
-    * jump *label187 equal false false
-    * jump *label188 always
-    * label *label187
-    * label *label188
   254 label *label186
   255 # "Function: inline def eval(in b)"
-    * jump *label190 equal true false
-    * jump *label191 always
-    * label *label190
-    * label *label191
   256 label *label189
   257 # "Function: inline def eval(in b)"
-    * jump *label193 equal false false
-    * jump *label194 always
-    * label *label193
-    * label *label194
   258 label *label192
   259 print "T"
   260 print "F"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   112 label *label78
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 assertflush
-    * op equal *tmp92 A A
+  115 set *tmp92 true
   116 # "Function: inline def eval(in b)"
   117 select *tmp94 notEqual *tmp92 false "T" "F"
   118 label *label92
-    * op notEqual *tmp95 A A
+  119 set *tmp95 false
   120 # "Function: inline def eval(in b)"
   121 select *tmp97 notEqual *tmp95 false "T" "F"
   122 label *label95
-    * op strictEqual *tmp98 A A
+  123 set *tmp98 true
   124 # "Function: inline def eval(in b)"
   125 select *tmp100 notEqual *tmp98 false "T" "F"
   126 label *label98
-    * op strictNotEqual *tmp101 A A
+  127 set *tmp101 false
   128 # "Function: inline def eval(in b)"
   129 select *tmp103 notEqual *tmp101 false "T" "F"
   130 label *label101

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   114 assertflush
   115 set *tmp92 true
   116 # "Function: inline def eval(in b)"
-    * select *tmp94 notEqual *tmp92 false "T" "F"
+  117 select *tmp94 notEqual true false "T" "F"
   118 label *label92
   119 set *tmp95 false
   120 # "Function: inline def eval(in b)"
-    * select *tmp97 notEqual *tmp95 false "T" "F"
+  121 select *tmp97 notEqual false false "T" "F"
   122 label *label95
   123 set *tmp98 true
   124 # "Function: inline def eval(in b)"
-    * select *tmp100 notEqual *tmp98 false "T" "F"
+  125 select *tmp100 notEqual true false "T" "F"
   126 label *label98
   127 set *tmp101 false
   128 # "Function: inline def eval(in b)"
-    * select *tmp103 notEqual *tmp101 false "T" "F"
+  129 select *tmp103 notEqual false false "T" "F"
   130 label *label101
   131 print *tmp94
   132 print *tmp97

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
   112 label *label78
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 assertflush
-    * set *tmp92 true
   115 # "Function: inline def eval(in b)"
   116 select *tmp94 notEqual true false "T" "F"
   117 label *label92
-    * set *tmp95 false
   118 # "Function: inline def eval(in b)"
   119 select *tmp97 notEqual false false "T" "F"
   120 label *label95
-    * set *tmp98 true
   121 # "Function: inline def eval(in b)"
   122 select *tmp100 notEqual true false "T" "F"
   123 label *label98
-    * set *tmp101 false
   124 # "Function: inline def eval(in b)"
   125 select *tmp103 notEqual false false "T" "F"
   126 label *label101

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1:
 
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 assertflush
   115 # "Function: inline def eval(in b)"
-    * select *tmp94 notEqual true false "T" "F"
+  116 set *tmp94 "T"
   117 label *label92
   118 # "Function: inline def eval(in b)"
-    * select *tmp97 notEqual false false "T" "F"
+  119 set *tmp97 "F"
   120 label *label95
   121 # "Function: inline def eval(in b)"
-    * select *tmp100 notEqual true false "T" "F"
+  122 set *tmp100 "T"
   123 label *label98
   124 # "Function: inline def eval(in b)"
-    * select *tmp103 notEqual false false "T" "F"
+  125 set *tmp103 "F"
   126 label *label101
   127 print *tmp94
   128 print *tmp97

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1:
 
   124 # "Function: inline def eval(in b)"
   125 set *tmp103 "F"
   126 label *label101
-    * print *tmp94
-    * print *tmp97
-    * print *tmp100
-    * print *tmp103
+  127 print "T"
+  128 print "F"
+  129 print "T"
+  130 print "F"
   131 assertprints "TFTF" "comparison 8"
   132 label *label91
   133 # "Function: inline def compare(in title, in a, in b, in expected)"

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 2 (-4 instructions):
 
   113 # "Function: inline def compare(in title, in a, in b, in expected)"
   114 assertflush
   115 # "Function: inline def eval(in b)"
-    * set *tmp94 "T"
   116 label *label92
   117 # "Function: inline def eval(in b)"
-    * set *tmp97 "F"
   118 label *label95
   119 # "Function: inline def eval(in b)"
-    * set *tmp100 "T"
   120 label *label98
   121 # "Function: inline def eval(in b)"
-    * set *tmp103 "F"
   122 label *label101
   123 print "T"
   124 print "F"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
     3 # "Function: inline def eval(in b)"
-    * label *label1
     4 # "Function: inline def eval(in b)"
-    * label *label4
     5 # "Function: inline def eval(in b)"
-    * label *label7
     6 # "Function: inline def eval(in b)"
-    * label *label10
     7 print "T"
     8 print "F"
     9 print "F"
    10 print "T"
    11 assertprints "TFFT" "comparison 1"
-    * label *label0
    12 # "Function: inline def compare(in title, in a, in b, in expected)"
    13 assertflush
    14 # "Function: inline def eval(in b)"
-    * label *label14
    15 # "Function: inline def eval(in b)"
-    * label *label17
    16 # "Function: inline def eval(in b)"
-    * label *label20
    17 # "Function: inline def eval(in b)"
-    * label *label23
    18 print "F"
    19 print "T"
    20 print "F"
    21 print "T"
    22 assertprints "FTFT" "comparison 2"
-    * label *label13
    23 # "Function: inline def compare(in title, in a, in b, in expected)"
    24 assertflush
    25 # "Function: inline def eval(in b)"
-    * label *label27
    26 # "Function: inline def eval(in b)"
-    * label *label30
    27 # "Function: inline def eval(in b)"
-    * label *label33
    28 # "Function: inline def eval(in b)"
-    * label *label36
    29 print "F"
    30 print "T"
    31 print "F"
    32 print "T"
    33 assertprints "FTFT" "comparison 3"
-    * label *label26
    34 # "Function: inline def compare(in title, in a, in b, in expected)"
    35 assertflush
    36 # "Function: inline def eval(in b)"
-    * label *label40
    37 # "Function: inline def eval(in b)"
-    * label *label43
    38 # "Function: inline def eval(in b)"
-    * label *label46
    39 # "Function: inline def eval(in b)"
-    * label *label49
    40 print "F"
    41 print "T"
    42 print "F"
    43 print "T"
    44 assertprints "FTFT" "comparison 4"
-    * label *label39
    45 # "Function: inline def compare(in title, in a, in b, in expected)"
    46 assertflush
    47 # "Function: inline def eval(in b)"
-    * label *label53
    48 # "Function: inline def eval(in b)"
-    * label *label56
    49 # "Function: inline def eval(in b)"
-    * label *label59
    50 # "Function: inline def eval(in b)"
-    * label *label62
    51 print "T"
    52 print "F"
    53 print "F"
    54 print "T"
    55 assertprints "TFFT" "comparison 5"
-    * label *label52
    56 # "Function: inline def compare(in title, in a, in b, in expected)"
    57 assertflush
    58 # "Function: inline def eval(in b)"
-    * label *label66
    59 # "Function: inline def eval(in b)"
-    * label *label69
    60 # "Function: inline def eval(in b)"
-    * label *label72
    61 # "Function: inline def eval(in b)"
-    * label *label75
    62 print "F"
    63 print "T"
    64 print "F"
    65 print "T"
    66 assertprints "FTFT" "comparison 6"
-    * label *label65
    67 # "Function: inline def compare(in title, in a, in b, in expected)"
    68 assertflush
    69 # "Function: inline def eval(in b)"
-    * label *label79
    70 # "Function: inline def eval(in b)"
-    * label *label82
    71 # "Function: inline def eval(in b)"
-    * label *label85
    72 # "Function: inline def eval(in b)"
-    * label *label88
    73 print "F"
    74 print "T"
    75 print "F"
    76 print "T"
    77 assertprints "FTFT" "comparison 7"
-    * label *label78
    78 # "Function: inline def compare(in title, in a, in b, in expected)"
    79 assertflush
    80 # "Function: inline def eval(in b)"
-    * label *label92
    81 # "Function: inline def eval(in b)"
-    * label *label95
    82 # "Function: inline def eval(in b)"
-    * label *label98
    83 # "Function: inline def eval(in b)"
-    * label *label101
    84 print "T"
    85 print "F"
    86 print "T"
    87 print "F"
    88 assertprints "TFTF" "comparison 8"
-    * label *label91
    89 # "Function: inline def compare(in title, in a, in b, in expected)"
    90 assertflush
    91 op equal *tmp105 A 0
    92 # "Function: inline def eval(in b)"
    93 select *tmp107 notEqual *tmp105 false "T" "F"
-    * label *label105
    94 op notEqual *tmp108 A 0
    95 # "Function: inline def eval(in b)"
    96 select *tmp110 notEqual *tmp108 false "T" "F"
-    * label *label108
    97 op strictEqual *tmp111 A 0
    98 # "Function: inline def eval(in b)"
    99 select *tmp113 notEqual *tmp111 false "T" "F"
-    * label *label111
   100 op strictNotEqual *tmp114 A 0
   101 # "Function: inline def eval(in b)"
   102 select *tmp116 notEqual *tmp114 false "T" "F"
-    * label *label114
   103 print *tmp107
   104 print *tmp110
   105 print *tmp113
   106 print *tmp116
   107 assertprints "TFTF" "comparison 9"
-    * label *label104
   108 # "Function: inline def compare(in title, in a, in b, in expected)"
   109 assertflush
   110 op equal *tmp118 A 1
   111 # "Function: inline def eval(in b)"
   112 select *tmp120 notEqual *tmp118 false "T" "F"
-    * label *label118
   113 op notEqual *tmp121 A 1
   114 # "Function: inline def eval(in b)"
   115 select *tmp123 notEqual *tmp121 false "T" "F"
-    * label *label121
   116 op strictEqual *tmp124 A 1
   117 # "Function: inline def eval(in b)"
   118 select *tmp126 notEqual *tmp124 false "T" "F"
-    * label *label124
   119 op strictNotEqual *tmp127 A 1
   120 # "Function: inline def eval(in b)"
   121 select *tmp129 notEqual *tmp127 false "T" "F"
-    * label *label127
   122 print *tmp120
   123 print *tmp123
   124 print *tmp126
   125 print *tmp129
   126 assertprints "FTFT" "comparison 10"
-    * label *label117
   127 # "Function: inline def compare(in title, in a, in b, in expected)"
   128 assertflush
   129 # "Function: inline def eval(in b)"
-    * label *label131
   130 # "Function: inline def eval(in b)"
-    * label *label134
   131 # "Function: inline def eval(in b)"
-    * label *label137
   132 # "Function: inline def eval(in b)"
-    * label *label140
   133 print "F"
   134 print "T"
   135 print "F"
   136 print "T"
   137 assertprints "FTFT" "comparison 11"
-    * label *label130
   138 # "Function: inline def compare(in title, in a, in b, in expected)"
   139 assertflush
   140 # "Function: inline def eval(in b)"
-    * label *label144
   141 # "Function: inline def eval(in b)"
-    * label *label147
   142 # "Function: inline def eval(in b)"
-    * label *label150
   143 # "Function: inline def eval(in b)"
-    * label *label153
   144 print "T"
   145 print "F"
   146 print "F"
   147 print "T"
   148 assertprints "TFFT" "comparison 12"
-    * label *label143
   149 # "Function: inline def compare(in title, in a, in b, in expected)"
   150 assertflush
   151 # "Function: inline def eval(in b)"
-    * label *label157
   152 # "Function: inline def eval(in b)"
-    * label *label160
   153 # "Function: inline def eval(in b)"
-    * label *label163
   154 # "Function: inline def eval(in b)"
-    * label *label166
   155 print "F"
   156 print "T"
   157 print "F"
   158 print "T"
   159 assertprints "FTFT" "comparison 13"
-    * label *label156
   160 # "Function: inline def compare(in title, in a, in b, in expected)"
   161 assertflush
   162 # "Function: inline def eval(in b)"
-    * label *label170
   163 # "Function: inline def eval(in b)"
-    * label *label173
   164 # "Function: inline def eval(in b)"
-    * label *label176
   165 # "Function: inline def eval(in b)"
-    * label *label179
   166 print "F"
   167 print "T"
   168 print "F"
   169 print "T"
   170 assertprints "FTFT" "comparison 14"
-    * label *label169
   171 # "Function: inline def compare(in title, in a, in b, in expected)"
   172 assertflush
   173 # "Function: inline def eval(in b)"
-    * label *label183
   174 # "Function: inline def eval(in b)"
-    * label *label186
   175 # "Function: inline def eval(in b)"
-    * label *label189
   176 # "Function: inline def eval(in b)"
-    * label *label192
   177 print "T"
   178 print "F"
   179 print "T"
   180 print "F"
   181 assertprints "TFTF" "comparison 15"
-    * label *label182
   182 stop
   183 end

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-1 instructions):
 
   180 print "F"
   181 assertprints "TFTF" "comparison 15"
   182 stop
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
 
     4 # "Function: inline def eval(in b)"
     5 # "Function: inline def eval(in b)"
     6 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+    7 print "TFFT"
     8 assertprints "TFFT" "comparison 1"
     9 # "Function: inline def compare(in title, in a, in b, in expected)"
    10 assertflush
 
    12 # "Function: inline def eval(in b)"
    13 # "Function: inline def eval(in b)"
    14 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   15 print "FTFT"
    16 assertprints "FTFT" "comparison 2"
    17 # "Function: inline def compare(in title, in a, in b, in expected)"
    18 assertflush
 
    20 # "Function: inline def eval(in b)"
    21 # "Function: inline def eval(in b)"
    22 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   23 print "FTFT"
    24 assertprints "FTFT" "comparison 3"
    25 # "Function: inline def compare(in title, in a, in b, in expected)"
    26 assertflush
 
    28 # "Function: inline def eval(in b)"
    29 # "Function: inline def eval(in b)"
    30 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   31 print "FTFT"
    32 assertprints "FTFT" "comparison 4"
    33 # "Function: inline def compare(in title, in a, in b, in expected)"
    34 assertflush
 
    36 # "Function: inline def eval(in b)"
    37 # "Function: inline def eval(in b)"
    38 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   39 print "TFFT"
    40 assertprints "TFFT" "comparison 5"
    41 # "Function: inline def compare(in title, in a, in b, in expected)"
    42 assertflush
 
    44 # "Function: inline def eval(in b)"
    45 # "Function: inline def eval(in b)"
    46 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   47 print "FTFT"
    48 assertprints "FTFT" "comparison 6"
    49 # "Function: inline def compare(in title, in a, in b, in expected)"
    50 assertflush
 
    52 # "Function: inline def eval(in b)"
    53 # "Function: inline def eval(in b)"
    54 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   55 print "FTFT"
    56 assertprints "FTFT" "comparison 7"
    57 # "Function: inline def compare(in title, in a, in b, in expected)"
    58 assertflush
 
    60 # "Function: inline def eval(in b)"
    61 # "Function: inline def eval(in b)"
    62 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   63 print "TFTF"
    64 assertprints "TFTF" "comparison 8"
    65 # "Function: inline def compare(in title, in a, in b, in expected)"
    66 assertflush
 
   106 # "Function: inline def eval(in b)"
   107 # "Function: inline def eval(in b)"
   108 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  109 print "FTFT"
   110 assertprints "FTFT" "comparison 11"
   111 # "Function: inline def compare(in title, in a, in b, in expected)"
   112 assertflush
 
   114 # "Function: inline def eval(in b)"
   115 # "Function: inline def eval(in b)"
   116 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+  117 print "TFFT"
   118 assertprints "TFFT" "comparison 12"
   119 # "Function: inline def compare(in title, in a, in b, in expected)"
   120 assertflush
 
   122 # "Function: inline def eval(in b)"
   123 # "Function: inline def eval(in b)"
   124 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  125 print "FTFT"
   126 assertprints "FTFT" "comparison 13"
   127 # "Function: inline def compare(in title, in a, in b, in expected)"
   128 assertflush
 
   130 # "Function: inline def eval(in b)"
   131 # "Function: inline def eval(in b)"
   132 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  133 print "FTFT"
   134 assertprints "FTFT" "comparison 14"
   135 # "Function: inline def compare(in title, in a, in b, in expected)"
   136 assertflush
 
   138 # "Function: inline def eval(in b)"
   139 # "Function: inline def eval(in b)"
   140 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+  141 print "TFTF"
   142 assertprints "TFTF" "comparison 15"
   143 stop

Final code before resolving virtual instructions:

set A 0
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 1"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 2"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 3"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 4"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 5"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 6"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 7"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFTF"
assertprints "TFTF" "comparison 8"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
op equal *tmp105 A 0
# "Function: inline def eval(in b)"
select *tmp107 notEqual *tmp105 false "T" "F"
op notEqual *tmp108 A 0
# "Function: inline def eval(in b)"
select *tmp110 notEqual *tmp108 false "T" "F"
op strictEqual *tmp111 A 0
# "Function: inline def eval(in b)"
select *tmp113 notEqual *tmp111 false "T" "F"
op strictNotEqual *tmp114 A 0
# "Function: inline def eval(in b)"
select *tmp116 notEqual *tmp114 false "T" "F"
print *tmp107
print *tmp110
print *tmp113
print *tmp116
assertprints "TFTF" "comparison 9"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
op equal *tmp118 A 1
# "Function: inline def eval(in b)"
select *tmp120 notEqual *tmp118 false "T" "F"
op notEqual *tmp121 A 1
# "Function: inline def eval(in b)"
select *tmp123 notEqual *tmp121 false "T" "F"
op strictEqual *tmp124 A 1
# "Function: inline def eval(in b)"
select *tmp126 notEqual *tmp124 false "T" "F"
op strictNotEqual *tmp127 A 1
# "Function: inline def eval(in b)"
select *tmp129 notEqual *tmp127 false "T" "F"
print *tmp120
print *tmp123
print *tmp126
print *tmp129
assertprints "FTFT" "comparison 10"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 11"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 12"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 13"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 14"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFTF"
assertprints "TFTF" "comparison 15"
stop
