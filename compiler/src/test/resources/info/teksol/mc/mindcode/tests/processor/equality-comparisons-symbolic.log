   603 instructions before optimizations.
    15 instructions eliminated by Dead Code Elimination (4 iterations).
    26 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    87 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     3 instructions modified by Expression Optimization (4 iterations).
    12 instructions modified by If Expression Optimization (4 iterations).
   351 instructions eliminated by Data Flow Optimization (2 passes, 9 iterations).
    39 instructions eliminated by Print Merging.
    85 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-15 instructions):
 
    54 print *tmp8
    55 print *tmp12
    56 assertprints :compare.0:expected :compare.0:title
-    * set *tmp0 null
    57 label *label0
    58 # "Function: inline def compare(in title, in a, in b, in expected)"
    59 set :compare.1:title "comparison 2"
 
   111 print *tmp22
   112 print *tmp26
   113 assertprints :compare.1:expected :compare.1:title
-    * set *tmp14 null
   114 label *label13
   115 # "Function: inline def compare(in title, in a, in b, in expected)"
   116 set :compare.2:title "comparison 3"
 
   168 print *tmp36
   169 print *tmp40
   170 assertprints :compare.2:expected :compare.2:title
-    * set *tmp28 null
   171 label *label26
   172 # "Function: inline def compare(in title, in a, in b, in expected)"
   173 set :compare.3:title "comparison 4"
 
   225 print *tmp50
   226 print *tmp54
   227 assertprints :compare.3:expected :compare.3:title
-    * set *tmp42 null
   228 label *label39
   229 # "Function: inline def compare(in title, in a, in b, in expected)"
   230 set :compare.4:title "comparison 5"
 
   282 print *tmp64
   283 print *tmp68
   284 assertprints :compare.4:expected :compare.4:title
-    * set *tmp56 null
   285 label *label52
   286 # "Function: inline def compare(in title, in a, in b, in expected)"
   287 set :compare.5:title "comparison 6"
 
   339 print *tmp78
   340 print *tmp82
   341 assertprints :compare.5:expected :compare.5:title
-    * set *tmp70 null
   342 label *label65
   343 # "Function: inline def compare(in title, in a, in b, in expected)"
   344 set :compare.6:title "comparison 7"
 
   396 print *tmp92
   397 print *tmp96
   398 assertprints :compare.6:expected :compare.6:title
-    * set *tmp84 null
   399 label *label78
   400 # "Function: inline def compare(in title, in a, in b, in expected)"
   401 set :compare.7:title "comparison 8"
 
   453 print *tmp106
   454 print *tmp110
   455 assertprints :compare.7:expected :compare.7:title
-    * set *tmp98 null
   456 label *label91
   457 # "Function: inline def compare(in title, in a, in b, in expected)"
   458 set :compare.8:title "comparison 9"
 
   510 print *tmp120
   511 print *tmp124
   512 assertprints :compare.8:expected :compare.8:title
-    * set *tmp112 null
   513 label *label104
   514 # "Function: inline def compare(in title, in a, in b, in expected)"
   515 set :compare.9:title "comparison 10"
 
   567 print *tmp134
   568 print *tmp138
   569 assertprints :compare.9:expected :compare.9:title
-    * set *tmp126 null
   570 label *label117
   571 # "Function: inline def compare(in title, in a, in b, in expected)"
   572 set :compare.10:title "comparison 11"
 
   624 print *tmp148
   625 print *tmp152
   626 assertprints :compare.10:expected :compare.10:title
-    * set *tmp140 null
   627 label *label130
   628 # "Function: inline def compare(in title, in a, in b, in expected)"
   629 set :compare.11:title "comparison 12"
 
   681 print *tmp162
   682 print *tmp166
   683 assertprints :compare.11:expected :compare.11:title
-    * set *tmp154 null
   684 label *label143
   685 # "Function: inline def compare(in title, in a, in b, in expected)"
   686 set :compare.12:title "comparison 13"
 
   738 print *tmp176
   739 print *tmp180
   740 assertprints :compare.12:expected :compare.12:title
-    * set *tmp168 null
   741 label *label156
   742 # "Function: inline def compare(in title, in a, in b, in expected)"
   743 set :compare.13:title "comparison 14"
 
   795 print *tmp190
   796 print *tmp194
   797 assertprints :compare.13:expected :compare.13:title
-    * set *tmp182 null
   798 label *label169
   799 # "Function: inline def compare(in title, in a, in b, in expected)"
   800 set :compare.14:title "comparison 15"
 
   852 print *tmp204
   853 print *tmp208
   854 assertprints :compare.14:expected :compare.14:title
-    * set *tmp196 null
   855 label *label182
   856 stop
   857 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 set :compare.0:b 0
     5 set :compare.0:expected "TFFT"
     6 assertflush
-    * op equal *tmp1 :compare.0:a :compare.0:b
+    7 op equal *tmp1 null 0
     8 # "Function: inline def eval(in b)"
-    * set :eval.0:b *tmp1
-    * jump *label2 equal :eval.0:b false
+    9 set :eval.0:b true
+   10 jump *label2 equal *tmp1 false
    11 set *tmp3 "T"
    12 jump *label3 always
    13 label *label2
 
    15 label *label3
    16 set *tmp2 *tmp3
    17 label *label1
-    * op notEqual *tmp4 :compare.0:a :compare.0:b
+   18 op notEqual *tmp4 null 0
    19 # "Function: inline def eval(in b)"
-    * set :eval.1:b *tmp4
-    * jump *label5 equal :eval.1:b false
+   20 set :eval.1:b false
+   21 jump *label5 equal *tmp4 false
    22 set *tmp6 "T"
    23 jump *label6 always
    24 label *label5
 
    26 label *label6
    27 set *tmp5 *tmp6
    28 label *label4
-    * op strictEqual *tmp7 :compare.0:a :compare.0:b
+   29 op strictEqual *tmp7 null 0
    30 # "Function: inline def eval(in b)"
-    * set :eval.2:b *tmp7
-    * jump *label8 equal :eval.2:b false
+   31 set :eval.2:b false
+   32 jump *label8 equal *tmp7 false
    33 set *tmp9 "T"
    34 jump *label9 always
    35 label *label8
 
    37 label *label9
    38 set *tmp8 *tmp9
    39 label *label7
-    * op strictEqual *tmp11 :compare.0:a :compare.0:b
-    * op equal *tmp10 *tmp11 false
+   40 op strictEqual *tmp11 null 0
+   41 op equal *tmp10 false false
    42 # "Function: inline def eval(in b)"
-    * set :eval.3:b *tmp10
-    * jump *label11 equal :eval.3:b false
+   43 set :eval.3:b true
+   44 jump *label11 equal *tmp10 false
    45 set *tmp13 "T"
    46 jump *label12 always
    47 label *label11
 
    49 label *label12
    50 set *tmp12 *tmp13
    51 label *label10
-    * print *tmp2
-    * print *tmp5
-    * print *tmp8
-    * print *tmp12
-    * assertprints :compare.0:expected :compare.0:title
+   52 print *tmp3
+   53 print *tmp6
+   54 print *tmp9
+   55 print *tmp13
+   56 assertprints "TFFT" "comparison 1"
    57 label *label0
    58 # "Function: inline def compare(in title, in a, in b, in expected)"
    59 set :compare.1:title "comparison 2"
 
    61 set :compare.1:b 1
    62 set :compare.1:expected "FTFT"
    63 assertflush
-    * op equal *tmp15 :compare.1:a :compare.1:b
+   64 op equal *tmp15 null 1
    65 # "Function: inline def eval(in b)"
-    * set :eval.4:b *tmp15
-    * jump *label15 equal :eval.4:b false
+   66 set :eval.4:b false
+   67 jump *label15 equal *tmp15 false
    68 set *tmp17 "T"
    69 jump *label16 always
    70 label *label15
 
    72 label *label16
    73 set *tmp16 *tmp17
    74 label *label14
-    * op notEqual *tmp18 :compare.1:a :compare.1:b
+   75 op notEqual *tmp18 null 1
    76 # "Function: inline def eval(in b)"
-    * set :eval.5:b *tmp18
-    * jump *label18 equal :eval.5:b false
+   77 set :eval.5:b true
+   78 jump *label18 equal *tmp18 false
    79 set *tmp20 "T"
    80 jump *label19 always
    81 label *label18
 
    83 label *label19
    84 set *tmp19 *tmp20
    85 label *label17
-    * op strictEqual *tmp21 :compare.1:a :compare.1:b
+   86 op strictEqual *tmp21 null 1
    87 # "Function: inline def eval(in b)"
-    * set :eval.6:b *tmp21
-    * jump *label21 equal :eval.6:b false
+   88 set :eval.6:b false
+   89 jump *label21 equal *tmp21 false
    90 set *tmp23 "T"
    91 jump *label22 always
    92 label *label21
 
    94 label *label22
    95 set *tmp22 *tmp23
    96 label *label20
-    * op strictEqual *tmp25 :compare.1:a :compare.1:b
-    * op equal *tmp24 *tmp25 false
+   97 op strictEqual *tmp25 null 1
+   98 op equal *tmp24 false false
    99 # "Function: inline def eval(in b)"
-    * set :eval.7:b *tmp24
-    * jump *label24 equal :eval.7:b false
+  100 set :eval.7:b true
+  101 jump *label24 equal *tmp24 false
   102 set *tmp27 "T"
   103 jump *label25 always
   104 label *label24
 
   106 label *label25
   107 set *tmp26 *tmp27
   108 label *label23
-    * print *tmp16
-    * print *tmp19
-    * print *tmp22
-    * print *tmp26
-    * assertprints :compare.1:expected :compare.1:title
+  109 print *tmp17
+  110 print *tmp20
+  111 print *tmp23
+  112 print *tmp27
+  113 assertprints "FTFT" "comparison 2"
   114 label *label13
   115 # "Function: inline def compare(in title, in a, in b, in expected)"
   116 set :compare.2:title "comparison 3"
 
   118 set :compare.2:b 2
   119 set :compare.2:expected "FTFT"
   120 assertflush
-    * op equal *tmp29 :compare.2:a :compare.2:b
+  121 op equal *tmp29 null 2
   122 # "Function: inline def eval(in b)"
-    * set :eval.8:b *tmp29
-    * jump *label28 equal :eval.8:b false
+  123 set :eval.8:b false
+  124 jump *label28 equal *tmp29 false
   125 set *tmp31 "T"
   126 jump *label29 always
   127 label *label28
 
   129 label *label29
   130 set *tmp30 *tmp31
   131 label *label27
-    * op notEqual *tmp32 :compare.2:a :compare.2:b
+  132 op notEqual *tmp32 null 2
   133 # "Function: inline def eval(in b)"
-    * set :eval.9:b *tmp32
-    * jump *label31 equal :eval.9:b false
+  134 set :eval.9:b true
+  135 jump *label31 equal *tmp32 false
   136 set *tmp34 "T"
   137 jump *label32 always
   138 label *label31
 
   140 label *label32
   141 set *tmp33 *tmp34
   142 label *label30
-    * op strictEqual *tmp35 :compare.2:a :compare.2:b
+  143 op strictEqual *tmp35 null 2
   144 # "Function: inline def eval(in b)"
-    * set :eval.10:b *tmp35
-    * jump *label34 equal :eval.10:b false
+  145 set :eval.10:b false
+  146 jump *label34 equal *tmp35 false
   147 set *tmp37 "T"
   148 jump *label35 always
   149 label *label34
 
   151 label *label35
   152 set *tmp36 *tmp37
   153 label *label33
-    * op strictEqual *tmp39 :compare.2:a :compare.2:b
-    * op equal *tmp38 *tmp39 false
+  154 op strictEqual *tmp39 null 2
+  155 op equal *tmp38 false false
   156 # "Function: inline def eval(in b)"
-    * set :eval.11:b *tmp38
-    * jump *label37 equal :eval.11:b false
+  157 set :eval.11:b true
+  158 jump *label37 equal *tmp38 false
   159 set *tmp41 "T"
   160 jump *label38 always
   161 label *label37
 
   163 label *label38
   164 set *tmp40 *tmp41
   165 label *label36
-    * print *tmp30
-    * print *tmp33
-    * print *tmp36
-    * print *tmp40
-    * assertprints :compare.2:expected :compare.2:title
+  166 print *tmp31
+  167 print *tmp34
+  168 print *tmp37
+  169 print *tmp41
+  170 assertprints "FTFT" "comparison 3"
   171 label *label26
   172 # "Function: inline def compare(in title, in a, in b, in expected)"
   173 set :compare.3:title "comparison 4"
 
   175 set :compare.3:b 0
   176 set :compare.3:expected "FTFT"
   177 assertflush
-    * op equal *tmp43 :compare.3:a :compare.3:b
+  178 op equal *tmp43 @coal 0
   179 # "Function: inline def eval(in b)"
   180 set :eval.12:b *tmp43
-    * jump *label41 equal :eval.12:b false
+  181 jump *label41 equal *tmp43 false
   182 set *tmp45 "T"
   183 jump *label42 always
   184 label *label41
 
   186 label *label42
   187 set *tmp44 *tmp45
   188 label *label40
-    * op notEqual *tmp46 :compare.3:a :compare.3:b
+  189 op notEqual *tmp46 @coal 0
   190 # "Function: inline def eval(in b)"
   191 set :eval.13:b *tmp46
-    * jump *label44 equal :eval.13:b false
+  192 jump *label44 equal *tmp46 false
   193 set *tmp48 "T"
   194 jump *label45 always
   195 label *label44
 
   197 label *label45
   198 set *tmp47 *tmp48
   199 label *label43
-    * op strictEqual *tmp49 :compare.3:a :compare.3:b
+  200 op strictEqual *tmp49 @coal 0
   201 # "Function: inline def eval(in b)"
   202 set :eval.14:b *tmp49
-    * jump *label47 equal :eval.14:b false
+  203 jump *label47 equal *tmp49 false
   204 set *tmp51 "T"
   205 jump *label48 always
   206 label *label47
 
   208 label *label48
   209 set *tmp50 *tmp51
   210 label *label46
-    * op strictEqual *tmp53 :compare.3:a :compare.3:b
-    * op equal *tmp52 *tmp53 false
+  211 op strictEqual *tmp53 @coal 0
+  212 op equal *tmp52 *tmp49 false
   213 # "Function: inline def eval(in b)"
   214 set :eval.15:b *tmp52
-    * jump *label50 equal :eval.15:b false
+  215 jump *label50 equal *tmp52 false
   216 set *tmp55 "T"
   217 jump *label51 always
   218 label *label50
 
   220 label *label51
   221 set *tmp54 *tmp55
   222 label *label49
-    * print *tmp44
-    * print *tmp47
-    * print *tmp50
-    * print *tmp54
-    * assertprints :compare.3:expected :compare.3:title
+  223 print *tmp45
+  224 print *tmp48
+  225 print *tmp51
+  226 print *tmp55
+  227 assertprints "FTFT" "comparison 4"
   228 label *label39
   229 # "Function: inline def compare(in title, in a, in b, in expected)"
   230 set :compare.4:title "comparison 5"
 
   232 set :compare.4:b 1
   233 set :compare.4:expected "TFFT"
   234 assertflush
-    * op equal *tmp57 :compare.4:a :compare.4:b
+  235 op equal *tmp57 @coal 1
   236 # "Function: inline def eval(in b)"
   237 set :eval.16:b *tmp57
-    * jump *label54 equal :eval.16:b false
+  238 jump *label54 equal *tmp57 false
   239 set *tmp59 "T"
   240 jump *label55 always
   241 label *label54
 
   243 label *label55
   244 set *tmp58 *tmp59
   245 label *label53
-    * op notEqual *tmp60 :compare.4:a :compare.4:b
+  246 op notEqual *tmp60 @coal 1
   247 # "Function: inline def eval(in b)"
   248 set :eval.17:b *tmp60
-    * jump *label57 equal :eval.17:b false
+  249 jump *label57 equal *tmp60 false
   250 set *tmp62 "T"
   251 jump *label58 always
   252 label *label57
 
   254 label *label58
   255 set *tmp61 *tmp62
   256 label *label56
-    * op strictEqual *tmp63 :compare.4:a :compare.4:b
+  257 op strictEqual *tmp63 @coal 1
   258 # "Function: inline def eval(in b)"
   259 set :eval.18:b *tmp63
-    * jump *label60 equal :eval.18:b false
+  260 jump *label60 equal *tmp63 false
   261 set *tmp65 "T"
   262 jump *label61 always
   263 label *label60
 
   265 label *label61
   266 set *tmp64 *tmp65
   267 label *label59
-    * op strictEqual *tmp67 :compare.4:a :compare.4:b
-    * op equal *tmp66 *tmp67 false
+  268 op strictEqual *tmp67 @coal 1
+  269 op equal *tmp66 *tmp63 false
   270 # "Function: inline def eval(in b)"
   271 set :eval.19:b *tmp66
-    * jump *label63 equal :eval.19:b false
+  272 jump *label63 equal *tmp66 false
   273 set *tmp69 "T"
   274 jump *label64 always
   275 label *label63
 
   277 label *label64
   278 set *tmp68 *tmp69
   279 label *label62
-    * print *tmp58
-    * print *tmp61
-    * print *tmp64
-    * print *tmp68
-    * assertprints :compare.4:expected :compare.4:title
+  280 print *tmp59
+  281 print *tmp62
+  282 print *tmp65
+  283 print *tmp69
+  284 assertprints "TFFT" "comparison 5"
   285 label *label52
   286 # "Function: inline def compare(in title, in a, in b, in expected)"
   287 set :compare.5:title "comparison 6"
 
   289 set :compare.5:b 2
   290 set :compare.5:expected "FTFT"
   291 assertflush
-    * op equal *tmp71 :compare.5:a :compare.5:b
+  292 op equal *tmp71 @coal 2
   293 # "Function: inline def eval(in b)"
   294 set :eval.20:b *tmp71
-    * jump *label67 equal :eval.20:b false
+  295 jump *label67 equal *tmp71 false
   296 set *tmp73 "T"
   297 jump *label68 always
   298 label *label67
 
   300 label *label68
   301 set *tmp72 *tmp73
   302 label *label66
-    * op notEqual *tmp74 :compare.5:a :compare.5:b
+  303 op notEqual *tmp74 @coal 2
   304 # "Function: inline def eval(in b)"
   305 set :eval.21:b *tmp74
-    * jump *label70 equal :eval.21:b false
+  306 jump *label70 equal *tmp74 false
   307 set *tmp76 "T"
   308 jump *label71 always
   309 label *label70
 
   311 label *label71
   312 set *tmp75 *tmp76
   313 label *label69
-    * op strictEqual *tmp77 :compare.5:a :compare.5:b
+  314 op strictEqual *tmp77 @coal 2
   315 # "Function: inline def eval(in b)"
   316 set :eval.22:b *tmp77
-    * jump *label73 equal :eval.22:b false
+  317 jump *label73 equal *tmp77 false
   318 set *tmp79 "T"
   319 jump *label74 always
   320 label *label73
 
   322 label *label74
   323 set *tmp78 *tmp79
   324 label *label72
-    * op strictEqual *tmp81 :compare.5:a :compare.5:b
-    * op equal *tmp80 *tmp81 false
+  325 op strictEqual *tmp81 @coal 2
+  326 op equal *tmp80 *tmp77 false
   327 # "Function: inline def eval(in b)"
   328 set :eval.23:b *tmp80
-    * jump *label76 equal :eval.23:b false
+  329 jump *label76 equal *tmp80 false
   330 set *tmp83 "T"
   331 jump *label77 always
   332 label *label76
 
   334 label *label77
   335 set *tmp82 *tmp83
   336 label *label75
-    * print *tmp72
-    * print *tmp75
-    * print *tmp78
-    * print *tmp82
-    * assertprints :compare.5:expected :compare.5:title
+  337 print *tmp73
+  338 print *tmp76
+  339 print *tmp79
+  340 print *tmp83
+  341 assertprints "FTFT" "comparison 6"
   342 label *label65
   343 # "Function: inline def compare(in title, in a, in b, in expected)"
   344 set :compare.6:title "comparison 7"
 
   346 set :compare.6:b @lead
   347 set :compare.6:expected "FTFT"
   348 assertflush
-    * op equal *tmp85 :compare.6:a :compare.6:b
+  349 op equal *tmp85 @coal @lead
   350 # "Function: inline def eval(in b)"
   351 set :eval.24:b *tmp85
-    * jump *label80 equal :eval.24:b false
+  352 jump *label80 equal *tmp85 false
   353 set *tmp87 "T"
   354 jump *label81 always
   355 label *label80
 
   357 label *label81
   358 set *tmp86 *tmp87
   359 label *label79
-    * op notEqual *tmp88 :compare.6:a :compare.6:b
+  360 op notEqual *tmp88 @coal @lead
   361 # "Function: inline def eval(in b)"
   362 set :eval.25:b *tmp88
-    * jump *label83 equal :eval.25:b false
+  363 jump *label83 equal *tmp88 false
   364 set *tmp90 "T"
   365 jump *label84 always
   366 label *label83
 
   368 label *label84
   369 set *tmp89 *tmp90
   370 label *label82
-    * op strictEqual *tmp91 :compare.6:a :compare.6:b
+  371 op strictEqual *tmp91 @coal @lead
   372 # "Function: inline def eval(in b)"
   373 set :eval.26:b *tmp91
-    * jump *label86 equal :eval.26:b false
+  374 jump *label86 equal *tmp91 false
   375 set *tmp93 "T"
   376 jump *label87 always
   377 label *label86
 
   379 label *label87
   380 set *tmp92 *tmp93
   381 label *label85
-    * op strictEqual *tmp95 :compare.6:a :compare.6:b
-    * op equal *tmp94 *tmp95 false
+  382 op strictEqual *tmp95 @coal @lead
+  383 op equal *tmp94 *tmp91 false
   384 # "Function: inline def eval(in b)"
   385 set :eval.27:b *tmp94
-    * jump *label89 equal :eval.27:b false
+  386 jump *label89 equal *tmp94 false
   387 set *tmp97 "T"
   388 jump *label90 always
   389 label *label89
 
   391 label *label90
   392 set *tmp96 *tmp97
   393 label *label88
-    * print *tmp86
-    * print *tmp89
-    * print *tmp92
-    * print *tmp96
-    * assertprints :compare.6:expected :compare.6:title
+  394 print *tmp87
+  395 print *tmp90
+  396 print *tmp93
+  397 print *tmp97
+  398 assertprints "FTFT" "comparison 7"
   399 label *label78
   400 # "Function: inline def compare(in title, in a, in b, in expected)"
   401 set :compare.7:title "comparison 8"
 
   403 set :compare.7:b A
   404 set :compare.7:expected "TFTF"
   405 assertflush
-    * op equal *tmp99 :compare.7:a :compare.7:b
+  406 op equal *tmp99 A A
   407 # "Function: inline def eval(in b)"
   408 set :eval.28:b *tmp99
-    * jump *label93 equal :eval.28:b false
+  409 jump *label93 equal *tmp99 false
   410 set *tmp101 "T"
   411 jump *label94 always
   412 label *label93
 
   414 label *label94
   415 set *tmp100 *tmp101
   416 label *label92
-    * op notEqual *tmp102 :compare.7:a :compare.7:b
+  417 op notEqual *tmp102 A A
   418 # "Function: inline def eval(in b)"
   419 set :eval.29:b *tmp102
-    * jump *label96 equal :eval.29:b false
+  420 jump *label96 equal *tmp102 false
   421 set *tmp104 "T"
   422 jump *label97 always
   423 label *label96
 
   425 label *label97
   426 set *tmp103 *tmp104
   427 label *label95
-    * op strictEqual *tmp105 :compare.7:a :compare.7:b
+  428 op strictEqual *tmp105 A A
   429 # "Function: inline def eval(in b)"
   430 set :eval.30:b *tmp105
-    * jump *label99 equal :eval.30:b false
+  431 jump *label99 equal *tmp105 false
   432 set *tmp107 "T"
   433 jump *label100 always
   434 label *label99
 
   436 label *label100
   437 set *tmp106 *tmp107
   438 label *label98
-    * op strictEqual *tmp109 :compare.7:a :compare.7:b
-    * op equal *tmp108 *tmp109 false
+  439 op strictEqual *tmp109 A A
+  440 op equal *tmp108 *tmp105 false
   441 # "Function: inline def eval(in b)"
   442 set :eval.31:b *tmp108
-    * jump *label102 equal :eval.31:b false
+  443 jump *label102 equal *tmp108 false
   444 set *tmp111 "T"
   445 jump *label103 always
   446 label *label102
 
   448 label *label103
   449 set *tmp110 *tmp111
   450 label *label101
-    * print *tmp100
-    * print *tmp103
-    * print *tmp106
-    * print *tmp110
-    * assertprints :compare.7:expected :compare.7:title
+  451 print *tmp101
+  452 print *tmp104
+  453 print *tmp107
+  454 print *tmp111
+  455 assertprints "TFTF" "comparison 8"
   456 label *label91
   457 # "Function: inline def compare(in title, in a, in b, in expected)"
   458 set :compare.8:title "comparison 9"
 
   460 set :compare.8:b 0
   461 set :compare.8:expected "TFTF"
   462 assertflush
-    * op equal *tmp113 :compare.8:a :compare.8:b
+  463 op equal *tmp113 A 0
   464 # "Function: inline def eval(in b)"
   465 set :eval.32:b *tmp113
-    * jump *label106 equal :eval.32:b false
+  466 jump *label106 equal *tmp113 false
   467 set *tmp115 "T"
   468 jump *label107 always
   469 label *label106
 
   471 label *label107
   472 set *tmp114 *tmp115
   473 label *label105
-    * op notEqual *tmp116 :compare.8:a :compare.8:b
+  474 op notEqual *tmp116 A 0
   475 # "Function: inline def eval(in b)"
   476 set :eval.33:b *tmp116
-    * jump *label109 equal :eval.33:b false
+  477 jump *label109 equal *tmp116 false
   478 set *tmp118 "T"
   479 jump *label110 always
   480 label *label109
 
   482 label *label110
   483 set *tmp117 *tmp118
   484 label *label108
-    * op strictEqual *tmp119 :compare.8:a :compare.8:b
+  485 op strictEqual *tmp119 A 0
   486 # "Function: inline def eval(in b)"
   487 set :eval.34:b *tmp119
-    * jump *label112 equal :eval.34:b false
+  488 jump *label112 equal *tmp119 false
   489 set *tmp121 "T"
   490 jump *label113 always
   491 label *label112
 
   493 label *label113
   494 set *tmp120 *tmp121
   495 label *label111
-    * op strictEqual *tmp123 :compare.8:a :compare.8:b
-    * op equal *tmp122 *tmp123 false
+  496 op strictEqual *tmp123 A 0
+  497 op equal *tmp122 *tmp119 false
   498 # "Function: inline def eval(in b)"
   499 set :eval.35:b *tmp122
-    * jump *label115 equal :eval.35:b false
+  500 jump *label115 equal *tmp122 false
   501 set *tmp125 "T"
   502 jump *label116 always
   503 label *label115
 
   505 label *label116
   506 set *tmp124 *tmp125
   507 label *label114
-    * print *tmp114
-    * print *tmp117
-    * print *tmp120
-    * print *tmp124
-    * assertprints :compare.8:expected :compare.8:title
+  508 print *tmp115
+  509 print *tmp118
+  510 print *tmp121
+  511 print *tmp125
+  512 assertprints "TFTF" "comparison 9"
   513 label *label104
   514 # "Function: inline def compare(in title, in a, in b, in expected)"
   515 set :compare.9:title "comparison 10"
 
   517 set :compare.9:b 1
   518 set :compare.9:expected "FTFT"
   519 assertflush
-    * op equal *tmp127 :compare.9:a :compare.9:b
+  520 op equal *tmp127 A 1
   521 # "Function: inline def eval(in b)"
   522 set :eval.36:b *tmp127
-    * jump *label119 equal :eval.36:b false
+  523 jump *label119 equal *tmp127 false
   524 set *tmp129 "T"
   525 jump *label120 always
   526 label *label119
 
   528 label *label120
   529 set *tmp128 *tmp129
   530 label *label118
-    * op notEqual *tmp130 :compare.9:a :compare.9:b
+  531 op notEqual *tmp130 A 1
   532 # "Function: inline def eval(in b)"
   533 set :eval.37:b *tmp130
-    * jump *label122 equal :eval.37:b false
+  534 jump *label122 equal *tmp130 false
   535 set *tmp132 "T"
   536 jump *label123 always
   537 label *label122
 
   539 label *label123
   540 set *tmp131 *tmp132
   541 label *label121
-    * op strictEqual *tmp133 :compare.9:a :compare.9:b
+  542 op strictEqual *tmp133 A 1
   543 # "Function: inline def eval(in b)"
   544 set :eval.38:b *tmp133
-    * jump *label125 equal :eval.38:b false
+  545 jump *label125 equal *tmp133 false
   546 set *tmp135 "T"
   547 jump *label126 always
   548 label *label125
 
   550 label *label126
   551 set *tmp134 *tmp135
   552 label *label124
-    * op strictEqual *tmp137 :compare.9:a :compare.9:b
-    * op equal *tmp136 *tmp137 false
+  553 op strictEqual *tmp137 A 1
+  554 op equal *tmp136 *tmp133 false
   555 # "Function: inline def eval(in b)"
   556 set :eval.39:b *tmp136
-    * jump *label128 equal :eval.39:b false
+  557 jump *label128 equal *tmp136 false
   558 set *tmp139 "T"
   559 jump *label129 always
   560 label *label128
 
   562 label *label129
   563 set *tmp138 *tmp139
   564 label *label127
-    * print *tmp128
-    * print *tmp131
-    * print *tmp134
-    * print *tmp138
-    * assertprints :compare.9:expected :compare.9:title
+  565 print *tmp129
+  566 print *tmp132
+  567 print *tmp135
+  568 print *tmp139
+  569 assertprints "FTFT" "comparison 10"
   570 label *label117
   571 # "Function: inline def compare(in title, in a, in b, in expected)"
   572 set :compare.10:title "comparison 11"
 
   574 set :compare.10:b 0
   575 set :compare.10:expected "FTFT"
   576 assertflush
-    * op equal *tmp141 :compare.10:a :compare.10:b
+  577 op equal *tmp141 "A" 0
   578 # "Function: inline def eval(in b)"
   579 set :eval.40:b *tmp141
-    * jump *label132 equal :eval.40:b false
+  580 jump *label132 equal *tmp141 false
   581 set *tmp143 "T"
   582 jump *label133 always
   583 label *label132
 
   585 label *label133
   586 set *tmp142 *tmp143
   587 label *label131
-    * op notEqual *tmp144 :compare.10:a :compare.10:b
+  588 op notEqual *tmp144 "A" 0
   589 # "Function: inline def eval(in b)"
   590 set :eval.41:b *tmp144
-    * jump *label135 equal :eval.41:b false
+  591 jump *label135 equal *tmp144 false
   592 set *tmp146 "T"
   593 jump *label136 always
   594 label *label135
 
   596 label *label136
   597 set *tmp145 *tmp146
   598 label *label134
-    * op strictEqual *tmp147 :compare.10:a :compare.10:b
+  599 op strictEqual *tmp147 "A" 0
   600 # "Function: inline def eval(in b)"
   601 set :eval.42:b *tmp147
-    * jump *label138 equal :eval.42:b false
+  602 jump *label138 equal *tmp147 false
   603 set *tmp149 "T"
   604 jump *label139 always
   605 label *label138
 
   607 label *label139
   608 set *tmp148 *tmp149
   609 label *label137
-    * op strictEqual *tmp151 :compare.10:a :compare.10:b
-    * op equal *tmp150 *tmp151 false
+  610 op strictEqual *tmp151 "A" 0
+  611 op equal *tmp150 *tmp147 false
   612 # "Function: inline def eval(in b)"
   613 set :eval.43:b *tmp150
-    * jump *label141 equal :eval.43:b false
+  614 jump *label141 equal *tmp150 false
   615 set *tmp153 "T"
   616 jump *label142 always
   617 label *label141
 
   619 label *label142
   620 set *tmp152 *tmp153
   621 label *label140
-    * print *tmp142
-    * print *tmp145
-    * print *tmp148
-    * print *tmp152
-    * assertprints :compare.10:expected :compare.10:title
+  622 print *tmp143
+  623 print *tmp146
+  624 print *tmp149
+  625 print *tmp153
+  626 assertprints "FTFT" "comparison 11"
   627 label *label130
   628 # "Function: inline def compare(in title, in a, in b, in expected)"
   629 set :compare.11:title "comparison 12"
 
   631 set :compare.11:b 1
   632 set :compare.11:expected "TFFT"
   633 assertflush
-    * op equal *tmp155 :compare.11:a :compare.11:b
+  634 op equal *tmp155 "A" 1
   635 # "Function: inline def eval(in b)"
   636 set :eval.44:b *tmp155
-    * jump *label145 equal :eval.44:b false
+  637 jump *label145 equal *tmp155 false
   638 set *tmp157 "T"
   639 jump *label146 always
   640 label *label145
 
   642 label *label146
   643 set *tmp156 *tmp157
   644 label *label144
-    * op notEqual *tmp158 :compare.11:a :compare.11:b
+  645 op notEqual *tmp158 "A" 1
   646 # "Function: inline def eval(in b)"
   647 set :eval.45:b *tmp158
-    * jump *label148 equal :eval.45:b false
+  648 jump *label148 equal *tmp158 false
   649 set *tmp160 "T"
   650 jump *label149 always
   651 label *label148
 
   653 label *label149
   654 set *tmp159 *tmp160
   655 label *label147
-    * op strictEqual *tmp161 :compare.11:a :compare.11:b
+  656 op strictEqual *tmp161 "A" 1
   657 # "Function: inline def eval(in b)"
   658 set :eval.46:b *tmp161
-    * jump *label151 equal :eval.46:b false
+  659 jump *label151 equal *tmp161 false
   660 set *tmp163 "T"
   661 jump *label152 always
   662 label *label151
 
   664 label *label152
   665 set *tmp162 *tmp163
   666 label *label150
-    * op strictEqual *tmp165 :compare.11:a :compare.11:b
-    * op equal *tmp164 *tmp165 false
+  667 op strictEqual *tmp165 "A" 1
+  668 op equal *tmp164 *tmp161 false
   669 # "Function: inline def eval(in b)"
   670 set :eval.47:b *tmp164
-    * jump *label154 equal :eval.47:b false
+  671 jump *label154 equal *tmp164 false
   672 set *tmp167 "T"
   673 jump *label155 always
   674 label *label154
 
   676 label *label155
   677 set *tmp166 *tmp167
   678 label *label153
-    * print *tmp156
-    * print *tmp159
-    * print *tmp162
-    * print *tmp166
-    * assertprints :compare.11:expected :compare.11:title
+  679 print *tmp157
+  680 print *tmp160
+  681 print *tmp163
+  682 print *tmp167
+  683 assertprints "TFFT" "comparison 12"
   684 label *label143
   685 # "Function: inline def compare(in title, in a, in b, in expected)"
   686 set :compare.12:title "comparison 13"
 
   688 set :compare.12:b 2
   689 set :compare.12:expected "FTFT"
   690 assertflush
-    * op equal *tmp169 :compare.12:a :compare.12:b
+  691 op equal *tmp169 "A" 2
   692 # "Function: inline def eval(in b)"
   693 set :eval.48:b *tmp169
-    * jump *label158 equal :eval.48:b false
+  694 jump *label158 equal *tmp169 false
   695 set *tmp171 "T"
   696 jump *label159 always
   697 label *label158
 
   699 label *label159
   700 set *tmp170 *tmp171
   701 label *label157
-    * op notEqual *tmp172 :compare.12:a :compare.12:b
+  702 op notEqual *tmp172 "A" 2
   703 # "Function: inline def eval(in b)"
   704 set :eval.49:b *tmp172
-    * jump *label161 equal :eval.49:b false
+  705 jump *label161 equal *tmp172 false
   706 set *tmp174 "T"
   707 jump *label162 always
   708 label *label161
 
   710 label *label162
   711 set *tmp173 *tmp174
   712 label *label160
-    * op strictEqual *tmp175 :compare.12:a :compare.12:b
+  713 op strictEqual *tmp175 "A" 2
   714 # "Function: inline def eval(in b)"
   715 set :eval.50:b *tmp175
-    * jump *label164 equal :eval.50:b false
+  716 jump *label164 equal *tmp175 false
   717 set *tmp177 "T"
   718 jump *label165 always
   719 label *label164
 
   721 label *label165
   722 set *tmp176 *tmp177
   723 label *label163
-    * op strictEqual *tmp179 :compare.12:a :compare.12:b
-    * op equal *tmp178 *tmp179 false
+  724 op strictEqual *tmp179 "A" 2
+  725 op equal *tmp178 *tmp175 false
   726 # "Function: inline def eval(in b)"
   727 set :eval.51:b *tmp178
-    * jump *label167 equal :eval.51:b false
+  728 jump *label167 equal *tmp178 false
   729 set *tmp181 "T"
   730 jump *label168 always
   731 label *label167
 
   733 label *label168
   734 set *tmp180 *tmp181
   735 label *label166
-    * print *tmp170
-    * print *tmp173
-    * print *tmp176
-    * print *tmp180
-    * assertprints :compare.12:expected :compare.12:title
+  736 print *tmp171
+  737 print *tmp174
+  738 print *tmp177
+  739 print *tmp181
+  740 assertprints "FTFT" "comparison 13"
   741 label *label156
   742 # "Function: inline def compare(in title, in a, in b, in expected)"
   743 set :compare.13:title "comparison 14"
 
   745 set :compare.13:b "B"
   746 set :compare.13:expected "FTFT"
   747 assertflush
-    * op equal *tmp183 :compare.13:a :compare.13:b
+  748 op equal *tmp183 "A" "B"
   749 # "Function: inline def eval(in b)"
   750 set :eval.52:b *tmp183
-    * jump *label171 equal :eval.52:b false
+  751 jump *label171 equal *tmp183 false
   752 set *tmp185 "T"
   753 jump *label172 always
   754 label *label171
 
   756 label *label172
   757 set *tmp184 *tmp185
   758 label *label170
-    * op notEqual *tmp186 :compare.13:a :compare.13:b
+  759 op notEqual *tmp186 "A" "B"
   760 # "Function: inline def eval(in b)"
   761 set :eval.53:b *tmp186
-    * jump *label174 equal :eval.53:b false
+  762 jump *label174 equal *tmp186 false
   763 set *tmp188 "T"
   764 jump *label175 always
   765 label *label174
 
   767 label *label175
   768 set *tmp187 *tmp188
   769 label *label173
-    * op strictEqual *tmp189 :compare.13:a :compare.13:b
+  770 op strictEqual *tmp189 "A" "B"
   771 # "Function: inline def eval(in b)"
   772 set :eval.54:b *tmp189
-    * jump *label177 equal :eval.54:b false
+  773 jump *label177 equal *tmp189 false
   774 set *tmp191 "T"
   775 jump *label178 always
   776 label *label177
 
   778 label *label178
   779 set *tmp190 *tmp191
   780 label *label176
-    * op strictEqual *tmp193 :compare.13:a :compare.13:b
-    * op equal *tmp192 *tmp193 false
+  781 op strictEqual *tmp193 "A" "B"
+  782 op equal *tmp192 *tmp189 false
   783 # "Function: inline def eval(in b)"
   784 set :eval.55:b *tmp192
-    * jump *label180 equal :eval.55:b false
+  785 jump *label180 equal *tmp192 false
   786 set *tmp195 "T"
   787 jump *label181 always
   788 label *label180
 
   790 label *label181
   791 set *tmp194 *tmp195
   792 label *label179
-    * print *tmp184
-    * print *tmp187
-    * print *tmp190
-    * print *tmp194
-    * assertprints :compare.13:expected :compare.13:title
+  793 print *tmp185
+  794 print *tmp188
+  795 print *tmp191
+  796 print *tmp195
+  797 assertprints "FTFT" "comparison 14"
   798 label *label169
   799 # "Function: inline def compare(in title, in a, in b, in expected)"
   800 set :compare.14:title "comparison 15"
 
   802 set :compare.14:b "A"
   803 set :compare.14:expected "TFTF"
   804 assertflush
-    * op equal *tmp197 :compare.14:a :compare.14:b
+  805 op equal *tmp197 "A" "A"
   806 # "Function: inline def eval(in b)"
   807 set :eval.56:b *tmp197
-    * jump *label184 equal :eval.56:b false
+  808 jump *label184 equal *tmp197 false
   809 set *tmp199 "T"
   810 jump *label185 always
   811 label *label184
 
   813 label *label185
   814 set *tmp198 *tmp199
   815 label *label183
-    * op notEqual *tmp200 :compare.14:a :compare.14:b
+  816 op notEqual *tmp200 "A" "A"
   817 # "Function: inline def eval(in b)"
   818 set :eval.57:b *tmp200
-    * jump *label187 equal :eval.57:b false
+  819 jump *label187 equal *tmp200 false
   820 set *tmp202 "T"
   821 jump *label188 always
   822 label *label187
 
   824 label *label188
   825 set *tmp201 *tmp202
   826 label *label186
-    * op strictEqual *tmp203 :compare.14:a :compare.14:b
+  827 op strictEqual *tmp203 "A" "A"
   828 # "Function: inline def eval(in b)"
   829 set :eval.58:b *tmp203
-    * jump *label190 equal :eval.58:b false
+  830 jump *label190 equal *tmp203 false
   831 set *tmp205 "T"
   832 jump *label191 always
   833 label *label190
 
   835 label *label191
   836 set *tmp204 *tmp205
   837 label *label189
-    * op strictEqual *tmp207 :compare.14:a :compare.14:b
-    * op equal *tmp206 *tmp207 false
+  838 op strictEqual *tmp207 "A" "A"
+  839 op equal *tmp206 *tmp203 false
   840 # "Function: inline def eval(in b)"
   841 set :eval.59:b *tmp206
-    * jump *label193 equal :eval.59:b false
+  842 jump *label193 equal *tmp206 false
   843 set *tmp209 "T"
   844 jump *label194 always
   845 label *label193
 
   847 label *label194
   848 set *tmp208 *tmp209
   849 label *label192
-    * print *tmp198
-    * print *tmp201
-    * print *tmp204
-    * print *tmp208
-    * assertprints :compare.14:expected :compare.14:title
+  850 print *tmp199
+  851 print *tmp202
+  852 print *tmp205
+  853 print *tmp209
+  854 assertprints "TFTF" "comparison 15"
   855 label *label182
   856 stop
   857 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-159 instructions):
     0 set A 0
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.0:title "comparison 1"
-    * set :compare.0:a null
-    * set :compare.0:b 0
-    * set :compare.0:expected "TFFT"
     2 assertflush
     3 op equal *tmp1 null 0
     4 # "Function: inline def eval(in b)"
-    * set :eval.0:b true
-    * jump *label2 equal *tmp1 false
+    5 jump *label2 equal true false
     6 set *tmp3 "T"
     7 jump *label3 always
     8 label *label2
-    * set *tmp3 "F"
     9 label *label3
-    * set *tmp2 *tmp3
+   10 set *tmp2 "T"
    11 label *label1
    12 op notEqual *tmp4 null 0
    13 # "Function: inline def eval(in b)"
-    * set :eval.1:b false
-    * jump *label5 equal *tmp4 false
-    * set *tmp6 "T"
+   14 jump *label5 equal false false
    15 jump *label6 always
    16 label *label5
    17 set *tmp6 "F"
    18 label *label6
-    * set *tmp5 *tmp6
+   19 set *tmp5 "F"
    20 label *label4
    21 op strictEqual *tmp7 null 0
    22 # "Function: inline def eval(in b)"
-    * set :eval.2:b false
-    * jump *label8 equal *tmp7 false
-    * set *tmp9 "T"
+   23 jump *label8 equal false false
    24 jump *label9 always
    25 label *label8
    26 set *tmp9 "F"
    27 label *label9
-    * set *tmp8 *tmp9
+   28 set *tmp8 "F"
    29 label *label7
-    * op strictEqual *tmp11 null 0
    30 op equal *tmp10 false false
    31 # "Function: inline def eval(in b)"
-    * set :eval.3:b true
-    * jump *label11 equal *tmp10 false
+   32 jump *label11 equal true false
    33 set *tmp13 "T"
    34 jump *label12 always
    35 label *label11
-    * set *tmp13 "F"
    36 label *label12
-    * set *tmp12 *tmp13
+   37 set *tmp12 "T"
    38 label *label10
-    * print *tmp3
-    * print *tmp6
-    * print *tmp9
-    * print *tmp13
+   39 print "T"
+   40 print "F"
+   41 print "F"
+   42 print "T"
    43 assertprints "TFFT" "comparison 1"
    44 label *label0
    45 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.1:title "comparison 2"
-    * set :compare.1:a null
-    * set :compare.1:b 1
-    * set :compare.1:expected "FTFT"
    46 assertflush
    47 op equal *tmp15 null 1
    48 # "Function: inline def eval(in b)"
-    * set :eval.4:b false
-    * jump *label15 equal *tmp15 false
-    * set *tmp17 "T"
+   49 jump *label15 equal false false
    50 jump *label16 always
    51 label *label15
    52 set *tmp17 "F"
    53 label *label16
-    * set *tmp16 *tmp17
+   54 set *tmp16 "F"
    55 label *label14
    56 op notEqual *tmp18 null 1
    57 # "Function: inline def eval(in b)"
-    * set :eval.5:b true
-    * jump *label18 equal *tmp18 false
+   58 jump *label18 equal true false
    59 set *tmp20 "T"
    60 jump *label19 always
    61 label *label18
-    * set *tmp20 "F"
    62 label *label19
-    * set *tmp19 *tmp20
+   63 set *tmp19 "T"
    64 label *label17
    65 op strictEqual *tmp21 null 1
    66 # "Function: inline def eval(in b)"
-    * set :eval.6:b false
-    * jump *label21 equal *tmp21 false
-    * set *tmp23 "T"
+   67 jump *label21 equal false false
    68 jump *label22 always
    69 label *label21
    70 set *tmp23 "F"
    71 label *label22
-    * set *tmp22 *tmp23
+   72 set *tmp22 "F"
    73 label *label20
-    * op strictEqual *tmp25 null 1
    74 op equal *tmp24 false false
    75 # "Function: inline def eval(in b)"
-    * set :eval.7:b true
-    * jump *label24 equal *tmp24 false
+   76 jump *label24 equal true false
    77 set *tmp27 "T"
    78 jump *label25 always
    79 label *label24
-    * set *tmp27 "F"
    80 label *label25
-    * set *tmp26 *tmp27
+   81 set *tmp26 "T"
    82 label *label23
-    * print *tmp17
-    * print *tmp20
-    * print *tmp23
-    * print *tmp27
+   83 print "F"
+   84 print "T"
+   85 print "F"
+   86 print "T"
    87 assertprints "FTFT" "comparison 2"
    88 label *label13
    89 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.2:title "comparison 3"
-    * set :compare.2:a null
-    * set :compare.2:b 2
-    * set :compare.2:expected "FTFT"
    90 assertflush
    91 op equal *tmp29 null 2
    92 # "Function: inline def eval(in b)"
-    * set :eval.8:b false
-    * jump *label28 equal *tmp29 false
-    * set *tmp31 "T"
+   93 jump *label28 equal false false
    94 jump *label29 always
    95 label *label28
    96 set *tmp31 "F"
    97 label *label29
-    * set *tmp30 *tmp31
+   98 set *tmp30 "F"
    99 label *label27
   100 op notEqual *tmp32 null 2
   101 # "Function: inline def eval(in b)"
-    * set :eval.9:b true
-    * jump *label31 equal *tmp32 false
+  102 jump *label31 equal true false
   103 set *tmp34 "T"
   104 jump *label32 always
   105 label *label31
-    * set *tmp34 "F"
   106 label *label32
-    * set *tmp33 *tmp34
+  107 set *tmp33 "T"
   108 label *label30
   109 op strictEqual *tmp35 null 2
   110 # "Function: inline def eval(in b)"
-    * set :eval.10:b false
-    * jump *label34 equal *tmp35 false
-    * set *tmp37 "T"
+  111 jump *label34 equal false false
   112 jump *label35 always
   113 label *label34
   114 set *tmp37 "F"
   115 label *label35
-    * set *tmp36 *tmp37
+  116 set *tmp36 "F"
   117 label *label33
-    * op strictEqual *tmp39 null 2
   118 op equal *tmp38 false false
   119 # "Function: inline def eval(in b)"
-    * set :eval.11:b true
-    * jump *label37 equal *tmp38 false
+  120 jump *label37 equal true false
   121 set *tmp41 "T"
   122 jump *label38 always
   123 label *label37
-    * set *tmp41 "F"
   124 label *label38
-    * set *tmp40 *tmp41
+  125 set *tmp40 "T"
   126 label *label36
-    * print *tmp31
-    * print *tmp34
-    * print *tmp37
-    * print *tmp41
+  127 print "F"
+  128 print "T"
+  129 print "F"
+  130 print "T"
   131 assertprints "FTFT" "comparison 3"
   132 label *label26
   133 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.3:title "comparison 4"
-    * set :compare.3:a @coal
-    * set :compare.3:b 0
-    * set :compare.3:expected "FTFT"
   134 assertflush
   135 op equal *tmp43 @coal 0
   136 # "Function: inline def eval(in b)"
-    * set :eval.12:b *tmp43
-    * jump *label41 equal *tmp43 false
-    * set *tmp45 "T"
+  137 set :eval.12:b false
+  138 jump *label41 equal false false
   139 jump *label42 always
   140 label *label41
   141 set *tmp45 "F"
   142 label *label42
-    * set *tmp44 *tmp45
+  143 set *tmp44 "F"
   144 label *label40
   145 op notEqual *tmp46 @coal 0
   146 # "Function: inline def eval(in b)"
-    * set :eval.13:b *tmp46
-    * jump *label44 equal *tmp46 false
+  147 set :eval.13:b true
+  148 jump *label44 equal true false
   149 set *tmp48 "T"
   150 jump *label45 always
   151 label *label44
-    * set *tmp48 "F"
   152 label *label45
-    * set *tmp47 *tmp48
+  153 set *tmp47 "T"
   154 label *label43
   155 op strictEqual *tmp49 @coal 0
   156 # "Function: inline def eval(in b)"
-    * set :eval.14:b *tmp49
-    * jump *label47 equal *tmp49 false
-    * set *tmp51 "T"
+  157 set :eval.14:b false
+  158 jump *label47 equal false false
   159 jump *label48 always
   160 label *label47
   161 set *tmp51 "F"
   162 label *label48
-    * set *tmp50 *tmp51
+  163 set *tmp50 "F"
   164 label *label46
-    * op strictEqual *tmp53 @coal 0
-    * op equal *tmp52 *tmp49 false
+  165 op equal *tmp52 false false
   166 # "Function: inline def eval(in b)"
-    * set :eval.15:b *tmp52
-    * jump *label50 equal *tmp52 false
+  167 set :eval.15:b true
+  168 jump *label50 equal true false
   169 set *tmp55 "T"
   170 jump *label51 always
   171 label *label50
-    * set *tmp55 "F"
   172 label *label51
-    * set *tmp54 *tmp55
+  173 set *tmp54 "T"
   174 label *label49
-    * print *tmp45
-    * print *tmp48
-    * print *tmp51
-    * print *tmp55
+  175 print "F"
+  176 print "T"
+  177 print "F"
+  178 print "T"
   179 assertprints "FTFT" "comparison 4"
   180 label *label39
   181 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.4:title "comparison 5"
-    * set :compare.4:a @coal
-    * set :compare.4:b 1
-    * set :compare.4:expected "TFFT"
   182 assertflush
   183 op equal *tmp57 @coal 1
   184 # "Function: inline def eval(in b)"
-    * set :eval.16:b *tmp57
-    * jump *label54 equal *tmp57 false
+  185 set :eval.16:b true
+  186 jump *label54 equal true false
   187 set *tmp59 "T"
   188 jump *label55 always
   189 label *label54
-    * set *tmp59 "F"
   190 label *label55
-    * set *tmp58 *tmp59
+  191 set *tmp58 "T"
   192 label *label53
   193 op notEqual *tmp60 @coal 1
   194 # "Function: inline def eval(in b)"
-    * set :eval.17:b *tmp60
-    * jump *label57 equal *tmp60 false
-    * set *tmp62 "T"
+  195 set :eval.17:b false
+  196 jump *label57 equal false false
   197 jump *label58 always
   198 label *label57
   199 set *tmp62 "F"
   200 label *label58
-    * set *tmp61 *tmp62
+  201 set *tmp61 "F"
   202 label *label56
   203 op strictEqual *tmp63 @coal 1
   204 # "Function: inline def eval(in b)"
-    * set :eval.18:b *tmp63
-    * jump *label60 equal *tmp63 false
-    * set *tmp65 "T"
+  205 set :eval.18:b false
+  206 jump *label60 equal false false
   207 jump *label61 always
   208 label *label60
   209 set *tmp65 "F"
   210 label *label61
-    * set *tmp64 *tmp65
+  211 set *tmp64 "F"
   212 label *label59
-    * op strictEqual *tmp67 @coal 1
-    * op equal *tmp66 *tmp63 false
+  213 op equal *tmp66 false false
   214 # "Function: inline def eval(in b)"
-    * set :eval.19:b *tmp66
-    * jump *label63 equal *tmp66 false
+  215 set :eval.19:b true
+  216 jump *label63 equal true false
   217 set *tmp69 "T"
   218 jump *label64 always
   219 label *label63
-    * set *tmp69 "F"
   220 label *label64
-    * set *tmp68 *tmp69
+  221 set *tmp68 "T"
   222 label *label62
-    * print *tmp59
-    * print *tmp62
-    * print *tmp65
-    * print *tmp69
+  223 print "T"
+  224 print "F"
+  225 print "F"
+  226 print "T"
   227 assertprints "TFFT" "comparison 5"
   228 label *label52
   229 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.5:title "comparison 6"
-    * set :compare.5:a @coal
-    * set :compare.5:b 2
-    * set :compare.5:expected "FTFT"
   230 assertflush
   231 op equal *tmp71 @coal 2
   232 # "Function: inline def eval(in b)"
-    * set :eval.20:b *tmp71
-    * jump *label67 equal *tmp71 false
-    * set *tmp73 "T"
+  233 set :eval.20:b false
+  234 jump *label67 equal false false
   235 jump *label68 always
   236 label *label67
   237 set *tmp73 "F"
   238 label *label68
-    * set *tmp72 *tmp73
+  239 set *tmp72 "F"
   240 label *label66
   241 op notEqual *tmp74 @coal 2
   242 # "Function: inline def eval(in b)"
-    * set :eval.21:b *tmp74
-    * jump *label70 equal *tmp74 false
+  243 set :eval.21:b true
+  244 jump *label70 equal true false
   245 set *tmp76 "T"
   246 jump *label71 always
   247 label *label70
-    * set *tmp76 "F"
   248 label *label71
-    * set *tmp75 *tmp76
+  249 set *tmp75 "T"
   250 label *label69
   251 op strictEqual *tmp77 @coal 2
   252 # "Function: inline def eval(in b)"
-    * set :eval.22:b *tmp77
-    * jump *label73 equal *tmp77 false
-    * set *tmp79 "T"
+  253 set :eval.22:b false
+  254 jump *label73 equal false false
   255 jump *label74 always
   256 label *label73
   257 set *tmp79 "F"
   258 label *label74
-    * set *tmp78 *tmp79
+  259 set *tmp78 "F"
   260 label *label72
-    * op strictEqual *tmp81 @coal 2
-    * op equal *tmp80 *tmp77 false
+  261 op equal *tmp80 false false
   262 # "Function: inline def eval(in b)"
-    * set :eval.23:b *tmp80
-    * jump *label76 equal *tmp80 false
+  263 set :eval.23:b true
+  264 jump *label76 equal true false
   265 set *tmp83 "T"
   266 jump *label77 always
   267 label *label76
-    * set *tmp83 "F"
   268 label *label77
-    * set *tmp82 *tmp83
+  269 set *tmp82 "T"
   270 label *label75
-    * print *tmp73
-    * print *tmp76
-    * print *tmp79
-    * print *tmp83
+  271 print "F"
+  272 print "T"
+  273 print "F"
+  274 print "T"
   275 assertprints "FTFT" "comparison 6"
   276 label *label65
   277 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.6:title "comparison 7"
-    * set :compare.6:a @coal
-    * set :compare.6:b @lead
-    * set :compare.6:expected "FTFT"
   278 assertflush
   279 op equal *tmp85 @coal @lead
   280 # "Function: inline def eval(in b)"
-    * set :eval.24:b *tmp85
-    * jump *label80 equal *tmp85 false
-    * set *tmp87 "T"
+  281 set :eval.24:b false
+  282 jump *label80 equal false false
   283 jump *label81 always
   284 label *label80
   285 set *tmp87 "F"
   286 label *label81
-    * set *tmp86 *tmp87
+  287 set *tmp86 "F"
   288 label *label79
   289 op notEqual *tmp88 @coal @lead
   290 # "Function: inline def eval(in b)"
-    * set :eval.25:b *tmp88
-    * jump *label83 equal *tmp88 false
+  291 set :eval.25:b true
+  292 jump *label83 equal true false
   293 set *tmp90 "T"
   294 jump *label84 always
   295 label *label83
-    * set *tmp90 "F"
   296 label *label84
-    * set *tmp89 *tmp90
+  297 set *tmp89 "T"
   298 label *label82
   299 op strictEqual *tmp91 @coal @lead
   300 # "Function: inline def eval(in b)"
-    * set :eval.26:b *tmp91
-    * jump *label86 equal *tmp91 false
-    * set *tmp93 "T"
+  301 set :eval.26:b false
+  302 jump *label86 equal false false
   303 jump *label87 always
   304 label *label86
   305 set *tmp93 "F"
   306 label *label87
-    * set *tmp92 *tmp93
+  307 set *tmp92 "F"
   308 label *label85
-    * op strictEqual *tmp95 @coal @lead
-    * op equal *tmp94 *tmp91 false
+  309 op equal *tmp94 false false
   310 # "Function: inline def eval(in b)"
-    * set :eval.27:b *tmp94
-    * jump *label89 equal *tmp94 false
+  311 set :eval.27:b true
+  312 jump *label89 equal true false
   313 set *tmp97 "T"
   314 jump *label90 always
   315 label *label89
-    * set *tmp97 "F"
   316 label *label90
-    * set *tmp96 *tmp97
+  317 set *tmp96 "T"
   318 label *label88
-    * print *tmp87
-    * print *tmp90
-    * print *tmp93
-    * print *tmp97
+  319 print "F"
+  320 print "T"
+  321 print "F"
+  322 print "T"
   323 assertprints "FTFT" "comparison 7"
   324 label *label78
   325 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.7:title "comparison 8"
-    * set :compare.7:a A
-    * set :compare.7:b A
-    * set :compare.7:expected "TFTF"
   326 assertflush
   327 op equal *tmp99 A A
   328 # "Function: inline def eval(in b)"
-    * set :eval.28:b *tmp99
   329 jump *label93 equal *tmp99 false
   330 set *tmp101 "T"
   331 jump *label94 always
   332 label *label93
   333 set *tmp101 "F"
   334 label *label94
-    * set *tmp100 *tmp101
   335 label *label92
   336 op notEqual *tmp102 A A
   337 # "Function: inline def eval(in b)"
-    * set :eval.29:b *tmp102
   338 jump *label96 equal *tmp102 false
   339 set *tmp104 "T"
   340 jump *label97 always
   341 label *label96
   342 set *tmp104 "F"
   343 label *label97
-    * set *tmp103 *tmp104
   344 label *label95
   345 op strictEqual *tmp105 A A
   346 # "Function: inline def eval(in b)"
-    * set :eval.30:b *tmp105
   347 jump *label99 equal *tmp105 false
   348 set *tmp107 "T"
   349 jump *label100 always
   350 label *label99
   351 set *tmp107 "F"
   352 label *label100
-    * set *tmp106 *tmp107
   353 label *label98
-    * op strictEqual *tmp109 A A
   354 op equal *tmp108 *tmp105 false
   355 # "Function: inline def eval(in b)"
-    * set :eval.31:b *tmp108
   356 jump *label102 equal *tmp108 false
   357 set *tmp111 "T"
   358 jump *label103 always
   359 label *label102
   360 set *tmp111 "F"
   361 label *label103
-    * set *tmp110 *tmp111
   362 label *label101
   363 print *tmp101
   364 print *tmp104
 
   367 assertprints "TFTF" "comparison 8"
   368 label *label91
   369 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.8:title "comparison 9"
-    * set :compare.8:a A
-    * set :compare.8:b 0
-    * set :compare.8:expected "TFTF"
   370 assertflush
   371 op equal *tmp113 A 0
   372 # "Function: inline def eval(in b)"
-    * set :eval.32:b *tmp113
   373 jump *label106 equal *tmp113 false
   374 set *tmp115 "T"
   375 jump *label107 always
   376 label *label106
   377 set *tmp115 "F"
   378 label *label107
-    * set *tmp114 *tmp115
   379 label *label105
   380 op notEqual *tmp116 A 0
   381 # "Function: inline def eval(in b)"
-    * set :eval.33:b *tmp116
   382 jump *label109 equal *tmp116 false
   383 set *tmp118 "T"
   384 jump *label110 always
   385 label *label109
   386 set *tmp118 "F"
   387 label *label110
-    * set *tmp117 *tmp118
   388 label *label108
   389 op strictEqual *tmp119 A 0
   390 # "Function: inline def eval(in b)"
-    * set :eval.34:b *tmp119
   391 jump *label112 equal *tmp119 false
   392 set *tmp121 "T"
   393 jump *label113 always
   394 label *label112
   395 set *tmp121 "F"
   396 label *label113
-    * set *tmp120 *tmp121
   397 label *label111
-    * op strictEqual *tmp123 A 0
   398 op equal *tmp122 *tmp119 false
   399 # "Function: inline def eval(in b)"
-    * set :eval.35:b *tmp122
   400 jump *label115 equal *tmp122 false
   401 set *tmp125 "T"
   402 jump *label116 always
   403 label *label115
   404 set *tmp125 "F"
   405 label *label116
-    * set *tmp124 *tmp125
   406 label *label114
   407 print *tmp115
   408 print *tmp118
 
   411 assertprints "TFTF" "comparison 9"
   412 label *label104
   413 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.9:title "comparison 10"
-    * set :compare.9:a A
-    * set :compare.9:b 1
-    * set :compare.9:expected "FTFT"
   414 assertflush
   415 op equal *tmp127 A 1
   416 # "Function: inline def eval(in b)"
-    * set :eval.36:b *tmp127
   417 jump *label119 equal *tmp127 false
   418 set *tmp129 "T"
   419 jump *label120 always
   420 label *label119
   421 set *tmp129 "F"
   422 label *label120
-    * set *tmp128 *tmp129
   423 label *label118
   424 op notEqual *tmp130 A 1
   425 # "Function: inline def eval(in b)"
-    * set :eval.37:b *tmp130
   426 jump *label122 equal *tmp130 false
   427 set *tmp132 "T"
   428 jump *label123 always
   429 label *label122
   430 set *tmp132 "F"
   431 label *label123
-    * set *tmp131 *tmp132
   432 label *label121
   433 op strictEqual *tmp133 A 1
   434 # "Function: inline def eval(in b)"
-    * set :eval.38:b *tmp133
   435 jump *label125 equal *tmp133 false
   436 set *tmp135 "T"
   437 jump *label126 always
   438 label *label125
   439 set *tmp135 "F"
   440 label *label126
-    * set *tmp134 *tmp135
   441 label *label124
-    * op strictEqual *tmp137 A 1
   442 op equal *tmp136 *tmp133 false
   443 # "Function: inline def eval(in b)"
-    * set :eval.39:b *tmp136
   444 jump *label128 equal *tmp136 false
   445 set *tmp139 "T"
   446 jump *label129 always
   447 label *label128
   448 set *tmp139 "F"
   449 label *label129
-    * set *tmp138 *tmp139
   450 label *label127
   451 print *tmp129
   452 print *tmp132
 
   455 assertprints "FTFT" "comparison 10"
   456 label *label117
   457 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.10:title "comparison 11"
-    * set :compare.10:a "A"
-    * set :compare.10:b 0
-    * set :compare.10:expected "FTFT"
   458 assertflush
   459 op equal *tmp141 "A" 0
   460 # "Function: inline def eval(in b)"
-    * set :eval.40:b *tmp141
-    * jump *label132 equal *tmp141 false
-    * set *tmp143 "T"
+  461 set :eval.40:b false
+  462 jump *label132 equal false false
   463 jump *label133 always
   464 label *label132
   465 set *tmp143 "F"
   466 label *label133
-    * set *tmp142 *tmp143
+  467 set *tmp142 "F"
   468 label *label131
   469 op notEqual *tmp144 "A" 0
   470 # "Function: inline def eval(in b)"
-    * set :eval.41:b *tmp144
-    * jump *label135 equal *tmp144 false
+  471 set :eval.41:b true
+  472 jump *label135 equal true false
   473 set *tmp146 "T"
   474 jump *label136 always
   475 label *label135
-    * set *tmp146 "F"
   476 label *label136
-    * set *tmp145 *tmp146
+  477 set *tmp145 "T"
   478 label *label134
   479 op strictEqual *tmp147 "A" 0
   480 # "Function: inline def eval(in b)"
-    * set :eval.42:b *tmp147
-    * jump *label138 equal *tmp147 false
-    * set *tmp149 "T"
+  481 set :eval.42:b false
+  482 jump *label138 equal false false
   483 jump *label139 always
   484 label *label138
   485 set *tmp149 "F"
   486 label *label139
-    * set *tmp148 *tmp149
+  487 set *tmp148 "F"
   488 label *label137
-    * op strictEqual *tmp151 "A" 0
-    * op equal *tmp150 *tmp147 false
+  489 op equal *tmp150 false false
   490 # "Function: inline def eval(in b)"
-    * set :eval.43:b *tmp150
-    * jump *label141 equal *tmp150 false
+  491 set :eval.43:b true
+  492 jump *label141 equal true false
   493 set *tmp153 "T"
   494 jump *label142 always
   495 label *label141
-    * set *tmp153 "F"
   496 label *label142
-    * set *tmp152 *tmp153
+  497 set *tmp152 "T"
   498 label *label140
-    * print *tmp143
-    * print *tmp146
-    * print *tmp149
-    * print *tmp153
+  499 print "F"
+  500 print "T"
+  501 print "F"
+  502 print "T"
   503 assertprints "FTFT" "comparison 11"
   504 label *label130
   505 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.11:title "comparison 12"
-    * set :compare.11:a "A"
-    * set :compare.11:b 1
-    * set :compare.11:expected "TFFT"
   506 assertflush
   507 op equal *tmp155 "A" 1
   508 # "Function: inline def eval(in b)"
-    * set :eval.44:b *tmp155
-    * jump *label145 equal *tmp155 false
+  509 set :eval.44:b true
+  510 jump *label145 equal true false
   511 set *tmp157 "T"
   512 jump *label146 always
   513 label *label145
-    * set *tmp157 "F"
   514 label *label146
-    * set *tmp156 *tmp157
+  515 set *tmp156 "T"
   516 label *label144
   517 op notEqual *tmp158 "A" 1
   518 # "Function: inline def eval(in b)"
-    * set :eval.45:b *tmp158
-    * jump *label148 equal *tmp158 false
-    * set *tmp160 "T"
+  519 set :eval.45:b false
+  520 jump *label148 equal false false
   521 jump *label149 always
   522 label *label148
   523 set *tmp160 "F"
   524 label *label149
-    * set *tmp159 *tmp160
+  525 set *tmp159 "F"
   526 label *label147
   527 op strictEqual *tmp161 "A" 1
   528 # "Function: inline def eval(in b)"
-    * set :eval.46:b *tmp161
-    * jump *label151 equal *tmp161 false
-    * set *tmp163 "T"
+  529 set :eval.46:b false
+  530 jump *label151 equal false false
   531 jump *label152 always
   532 label *label151
   533 set *tmp163 "F"
   534 label *label152
-    * set *tmp162 *tmp163
+  535 set *tmp162 "F"
   536 label *label150
-    * op strictEqual *tmp165 "A" 1
-    * op equal *tmp164 *tmp161 false
+  537 op equal *tmp164 false false
   538 # "Function: inline def eval(in b)"
-    * set :eval.47:b *tmp164
-    * jump *label154 equal *tmp164 false
+  539 set :eval.47:b true
+  540 jump *label154 equal true false
   541 set *tmp167 "T"
   542 jump *label155 always
   543 label *label154
-    * set *tmp167 "F"
   544 label *label155
-    * set *tmp166 *tmp167
+  545 set *tmp166 "T"
   546 label *label153
-    * print *tmp157
-    * print *tmp160
-    * print *tmp163
-    * print *tmp167
+  547 print "T"
+  548 print "F"
+  549 print "F"
+  550 print "T"
   551 assertprints "TFFT" "comparison 12"
   552 label *label143
   553 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.12:title "comparison 13"
-    * set :compare.12:a "A"
-    * set :compare.12:b 2
-    * set :compare.12:expected "FTFT"
   554 assertflush
   555 op equal *tmp169 "A" 2
   556 # "Function: inline def eval(in b)"
-    * set :eval.48:b *tmp169
-    * jump *label158 equal *tmp169 false
-    * set *tmp171 "T"
+  557 set :eval.48:b false
+  558 jump *label158 equal false false
   559 jump *label159 always
   560 label *label158
   561 set *tmp171 "F"
   562 label *label159
-    * set *tmp170 *tmp171
+  563 set *tmp170 "F"
   564 label *label157
   565 op notEqual *tmp172 "A" 2
   566 # "Function: inline def eval(in b)"
-    * set :eval.49:b *tmp172
-    * jump *label161 equal *tmp172 false
+  567 set :eval.49:b true
+  568 jump *label161 equal true false
   569 set *tmp174 "T"
   570 jump *label162 always
   571 label *label161
-    * set *tmp174 "F"
   572 label *label162
-    * set *tmp173 *tmp174
+  573 set *tmp173 "T"
   574 label *label160
   575 op strictEqual *tmp175 "A" 2
   576 # "Function: inline def eval(in b)"
-    * set :eval.50:b *tmp175
-    * jump *label164 equal *tmp175 false
-    * set *tmp177 "T"
+  577 set :eval.50:b false
+  578 jump *label164 equal false false
   579 jump *label165 always
   580 label *label164
   581 set *tmp177 "F"
   582 label *label165
-    * set *tmp176 *tmp177
+  583 set *tmp176 "F"
   584 label *label163
-    * op strictEqual *tmp179 "A" 2
-    * op equal *tmp178 *tmp175 false
+  585 op equal *tmp178 false false
   586 # "Function: inline def eval(in b)"
-    * set :eval.51:b *tmp178
-    * jump *label167 equal *tmp178 false
+  587 set :eval.51:b true
+  588 jump *label167 equal true false
   589 set *tmp181 "T"
   590 jump *label168 always
   591 label *label167
-    * set *tmp181 "F"
   592 label *label168
-    * set *tmp180 *tmp181
+  593 set *tmp180 "T"
   594 label *label166
-    * print *tmp171
-    * print *tmp174
-    * print *tmp177
-    * print *tmp181
+  595 print "F"
+  596 print "T"
+  597 print "F"
+  598 print "T"
   599 assertprints "FTFT" "comparison 13"
   600 label *label156
   601 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.13:title "comparison 14"
-    * set :compare.13:a "A"
-    * set :compare.13:b "B"
-    * set :compare.13:expected "FTFT"
   602 assertflush
   603 op equal *tmp183 "A" "B"
   604 # "Function: inline def eval(in b)"
-    * set :eval.52:b *tmp183
-    * jump *label171 equal *tmp183 false
-    * set *tmp185 "T"
+  605 set :eval.52:b false
+  606 jump *label171 equal false false
   607 jump *label172 always
   608 label *label171
   609 set *tmp185 "F"
   610 label *label172
-    * set *tmp184 *tmp185
+  611 set *tmp184 "F"
   612 label *label170
   613 op notEqual *tmp186 "A" "B"
   614 # "Function: inline def eval(in b)"
-    * set :eval.53:b *tmp186
-    * jump *label174 equal *tmp186 false
+  615 set :eval.53:b true
+  616 jump *label174 equal true false
   617 set *tmp188 "T"
   618 jump *label175 always
   619 label *label174
-    * set *tmp188 "F"
   620 label *label175
-    * set *tmp187 *tmp188
+  621 set *tmp187 "T"
   622 label *label173
   623 op strictEqual *tmp189 "A" "B"
   624 # "Function: inline def eval(in b)"
-    * set :eval.54:b *tmp189
-    * jump *label177 equal *tmp189 false
-    * set *tmp191 "T"
+  625 set :eval.54:b false
+  626 jump *label177 equal false false
   627 jump *label178 always
   628 label *label177
   629 set *tmp191 "F"
   630 label *label178
-    * set *tmp190 *tmp191
+  631 set *tmp190 "F"
   632 label *label176
-    * op strictEqual *tmp193 "A" "B"
-    * op equal *tmp192 *tmp189 false
+  633 op equal *tmp192 false false
   634 # "Function: inline def eval(in b)"
-    * set :eval.55:b *tmp192
-    * jump *label180 equal *tmp192 false
+  635 set :eval.55:b true
+  636 jump *label180 equal true false
   637 set *tmp195 "T"
   638 jump *label181 always
   639 label *label180
-    * set *tmp195 "F"
   640 label *label181
-    * set *tmp194 *tmp195
+  641 set *tmp194 "T"
   642 label *label179
-    * print *tmp185
-    * print *tmp188
-    * print *tmp191
-    * print *tmp195
+  643 print "F"
+  644 print "T"
+  645 print "F"
+  646 print "T"
   647 assertprints "FTFT" "comparison 14"
   648 label *label169
   649 # "Function: inline def compare(in title, in a, in b, in expected)"
-    * set :compare.14:title "comparison 15"
-    * set :compare.14:a "A"
-    * set :compare.14:b "A"
-    * set :compare.14:expected "TFTF"
   650 assertflush
   651 op equal *tmp197 "A" "A"
   652 # "Function: inline def eval(in b)"
-    * set :eval.56:b *tmp197
-    * jump *label184 equal *tmp197 false
+  653 set :eval.56:b true
+  654 jump *label184 equal true false
   655 set *tmp199 "T"
   656 jump *label185 always
   657 label *label184
-    * set *tmp199 "F"
   658 label *label185
-    * set *tmp198 *tmp199
+  659 set *tmp198 "T"
   660 label *label183
   661 op notEqual *tmp200 "A" "A"
   662 # "Function: inline def eval(in b)"
-    * set :eval.57:b *tmp200
-    * jump *label187 equal *tmp200 false
-    * set *tmp202 "T"
+  663 set :eval.57:b false
+  664 jump *label187 equal false false
   665 jump *label188 always
   666 label *label187
   667 set *tmp202 "F"
   668 label *label188
-    * set *tmp201 *tmp202
+  669 set *tmp201 "F"
   670 label *label186
   671 op strictEqual *tmp203 "A" "A"
   672 # "Function: inline def eval(in b)"
-    * set :eval.58:b *tmp203
-    * jump *label190 equal *tmp203 false
+  673 set :eval.58:b true
+  674 jump *label190 equal true false
   675 set *tmp205 "T"
   676 jump *label191 always
   677 label *label190
-    * set *tmp205 "F"
   678 label *label191
-    * set *tmp204 *tmp205
+  679 set *tmp204 "T"
   680 label *label189
-    * op strictEqual *tmp207 "A" "A"
-    * op equal *tmp206 *tmp203 false
+  681 op equal *tmp206 true false
   682 # "Function: inline def eval(in b)"
-    * set :eval.59:b *tmp206
-    * jump *label193 equal *tmp206 false
-    * set *tmp209 "T"
+  683 set :eval.59:b false
+  684 jump *label193 equal false false
   685 jump *label194 always
   686 label *label193
   687 set *tmp209 "F"
   688 label *label194
-    * set *tmp208 *tmp209
+  689 set *tmp208 "F"
   690 label *label192
-    * print *tmp199
-    * print *tmp202
-    * print *tmp205
-    * print *tmp209
+  691 print "T"
+  692 print "F"
+  693 print "T"
+  694 print "F"
   695 assertprints "TFTF" "comparison 15"
   696 label *label182
   697 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-180 instructions):
     0 set A 0
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
-    * op equal *tmp1 null 0
     3 # "Function: inline def eval(in b)"
     4 jump *label2 equal true false
-    * set *tmp3 "T"
     5 jump *label3 always
     6 label *label2
     7 label *label3
-    * set *tmp2 "T"
     8 label *label1
-    * op notEqual *tmp4 null 0
     9 # "Function: inline def eval(in b)"
    10 jump *label5 equal false false
    11 jump *label6 always
    12 label *label5
-    * set *tmp6 "F"
    13 label *label6
-    * set *tmp5 "F"
    14 label *label4
-    * op strictEqual *tmp7 null 0
    15 # "Function: inline def eval(in b)"
    16 jump *label8 equal false false
    17 jump *label9 always
    18 label *label8
-    * set *tmp9 "F"
    19 label *label9
-    * set *tmp8 "F"
    20 label *label7
-    * op equal *tmp10 false false
    21 # "Function: inline def eval(in b)"
    22 jump *label11 equal true false
-    * set *tmp13 "T"
    23 jump *label12 always
    24 label *label11
    25 label *label12
-    * set *tmp12 "T"
    26 label *label10
    27 print "T"
    28 print "F"
 
    32 label *label0
    33 # "Function: inline def compare(in title, in a, in b, in expected)"
    34 assertflush
-    * op equal *tmp15 null 1
    35 # "Function: inline def eval(in b)"
    36 jump *label15 equal false false
    37 jump *label16 always
    38 label *label15
-    * set *tmp17 "F"
    39 label *label16
-    * set *tmp16 "F"
    40 label *label14
-    * op notEqual *tmp18 null 1
    41 # "Function: inline def eval(in b)"
    42 jump *label18 equal true false
-    * set *tmp20 "T"
    43 jump *label19 always
    44 label *label18
    45 label *label19
-    * set *tmp19 "T"
    46 label *label17
-    * op strictEqual *tmp21 null 1
    47 # "Function: inline def eval(in b)"
    48 jump *label21 equal false false
    49 jump *label22 always
    50 label *label21
-    * set *tmp23 "F"
    51 label *label22
-    * set *tmp22 "F"
    52 label *label20
-    * op equal *tmp24 false false
    53 # "Function: inline def eval(in b)"
    54 jump *label24 equal true false
-    * set *tmp27 "T"
    55 jump *label25 always
    56 label *label24
    57 label *label25
-    * set *tmp26 "T"
    58 label *label23
    59 print "F"
    60 print "T"
 
    64 label *label13
    65 # "Function: inline def compare(in title, in a, in b, in expected)"
    66 assertflush
-    * op equal *tmp29 null 2
    67 # "Function: inline def eval(in b)"
    68 jump *label28 equal false false
    69 jump *label29 always
    70 label *label28
-    * set *tmp31 "F"
    71 label *label29
-    * set *tmp30 "F"
    72 label *label27
-    * op notEqual *tmp32 null 2
    73 # "Function: inline def eval(in b)"
    74 jump *label31 equal true false
-    * set *tmp34 "T"
    75 jump *label32 always
    76 label *label31
    77 label *label32
-    * set *tmp33 "T"
    78 label *label30
-    * op strictEqual *tmp35 null 2
    79 # "Function: inline def eval(in b)"
    80 jump *label34 equal false false
    81 jump *label35 always
    82 label *label34
-    * set *tmp37 "F"
    83 label *label35
-    * set *tmp36 "F"
    84 label *label33
-    * op equal *tmp38 false false
    85 # "Function: inline def eval(in b)"
    86 jump *label37 equal true false
-    * set *tmp41 "T"
    87 jump *label38 always
    88 label *label37
    89 label *label38
-    * set *tmp40 "T"
    90 label *label36
    91 print "F"
    92 print "T"
 
    96 label *label26
    97 # "Function: inline def compare(in title, in a, in b, in expected)"
    98 assertflush
-    * op equal *tmp43 @coal 0
    99 # "Function: inline def eval(in b)"
-    * set :eval.12:b false
   100 jump *label41 equal false false
   101 jump *label42 always
   102 label *label41
-    * set *tmp45 "F"
   103 label *label42
-    * set *tmp44 "F"
   104 label *label40
-    * op notEqual *tmp46 @coal 0
   105 # "Function: inline def eval(in b)"
-    * set :eval.13:b true
   106 jump *label44 equal true false
-    * set *tmp48 "T"
   107 jump *label45 always
   108 label *label44
   109 label *label45
-    * set *tmp47 "T"
   110 label *label43
-    * op strictEqual *tmp49 @coal 0
   111 # "Function: inline def eval(in b)"
-    * set :eval.14:b false
   112 jump *label47 equal false false
   113 jump *label48 always
   114 label *label47
-    * set *tmp51 "F"
   115 label *label48
-    * set *tmp50 "F"
   116 label *label46
-    * op equal *tmp52 false false
   117 # "Function: inline def eval(in b)"
-    * set :eval.15:b true
   118 jump *label50 equal true false
-    * set *tmp55 "T"
   119 jump *label51 always
   120 label *label50
   121 label *label51
-    * set *tmp54 "T"
   122 label *label49
   123 print "F"
   124 print "T"
 
   128 label *label39
   129 # "Function: inline def compare(in title, in a, in b, in expected)"
   130 assertflush
-    * op equal *tmp57 @coal 1
   131 # "Function: inline def eval(in b)"
-    * set :eval.16:b true
   132 jump *label54 equal true false
-    * set *tmp59 "T"
   133 jump *label55 always
   134 label *label54
   135 label *label55
-    * set *tmp58 "T"
   136 label *label53
-    * op notEqual *tmp60 @coal 1
   137 # "Function: inline def eval(in b)"
-    * set :eval.17:b false
   138 jump *label57 equal false false
   139 jump *label58 always
   140 label *label57
-    * set *tmp62 "F"
   141 label *label58
-    * set *tmp61 "F"
   142 label *label56
-    * op strictEqual *tmp63 @coal 1
   143 # "Function: inline def eval(in b)"
-    * set :eval.18:b false
   144 jump *label60 equal false false
   145 jump *label61 always
   146 label *label60
-    * set *tmp65 "F"
   147 label *label61
-    * set *tmp64 "F"
   148 label *label59
-    * op equal *tmp66 false false
   149 # "Function: inline def eval(in b)"
-    * set :eval.19:b true
   150 jump *label63 equal true false
-    * set *tmp69 "T"
   151 jump *label64 always
   152 label *label63
   153 label *label64
-    * set *tmp68 "T"
   154 label *label62
   155 print "T"
   156 print "F"
 
   160 label *label52
   161 # "Function: inline def compare(in title, in a, in b, in expected)"
   162 assertflush
-    * op equal *tmp71 @coal 2
   163 # "Function: inline def eval(in b)"
-    * set :eval.20:b false
   164 jump *label67 equal false false
   165 jump *label68 always
   166 label *label67
-    * set *tmp73 "F"
   167 label *label68
-    * set *tmp72 "F"
   168 label *label66
-    * op notEqual *tmp74 @coal 2
   169 # "Function: inline def eval(in b)"
-    * set :eval.21:b true
   170 jump *label70 equal true false
-    * set *tmp76 "T"
   171 jump *label71 always
   172 label *label70
   173 label *label71
-    * set *tmp75 "T"
   174 label *label69
-    * op strictEqual *tmp77 @coal 2
   175 # "Function: inline def eval(in b)"
-    * set :eval.22:b false
   176 jump *label73 equal false false
   177 jump *label74 always
   178 label *label73
-    * set *tmp79 "F"
   179 label *label74
-    * set *tmp78 "F"
   180 label *label72
-    * op equal *tmp80 false false
   181 # "Function: inline def eval(in b)"
-    * set :eval.23:b true
   182 jump *label76 equal true false
-    * set *tmp83 "T"
   183 jump *label77 always
   184 label *label76
   185 label *label77
-    * set *tmp82 "T"
   186 label *label75
   187 print "F"
   188 print "T"
 
   192 label *label65
   193 # "Function: inline def compare(in title, in a, in b, in expected)"
   194 assertflush
-    * op equal *tmp85 @coal @lead
   195 # "Function: inline def eval(in b)"
-    * set :eval.24:b false
   196 jump *label80 equal false false
   197 jump *label81 always
   198 label *label80
-    * set *tmp87 "F"
   199 label *label81
-    * set *tmp86 "F"
   200 label *label79
-    * op notEqual *tmp88 @coal @lead
   201 # "Function: inline def eval(in b)"
-    * set :eval.25:b true
   202 jump *label83 equal true false
-    * set *tmp90 "T"
   203 jump *label84 always
   204 label *label83
   205 label *label84
-    * set *tmp89 "T"
   206 label *label82
-    * op strictEqual *tmp91 @coal @lead
   207 # "Function: inline def eval(in b)"
-    * set :eval.26:b false
   208 jump *label86 equal false false
   209 jump *label87 always
   210 label *label86
-    * set *tmp93 "F"
   211 label *label87
-    * set *tmp92 "F"
   212 label *label85
-    * op equal *tmp94 false false
   213 # "Function: inline def eval(in b)"
-    * set :eval.27:b true
   214 jump *label89 equal true false
-    * set *tmp97 "T"
   215 jump *label90 always
   216 label *label89
   217 label *label90
-    * set *tmp96 "T"
   218 label *label88
   219 print "F"
   220 print "T"
 
   356 label *label117
   357 # "Function: inline def compare(in title, in a, in b, in expected)"
   358 assertflush
-    * op equal *tmp141 "A" 0
   359 # "Function: inline def eval(in b)"
-    * set :eval.40:b false
   360 jump *label132 equal false false
   361 jump *label133 always
   362 label *label132
-    * set *tmp143 "F"
   363 label *label133
-    * set *tmp142 "F"
   364 label *label131
-    * op notEqual *tmp144 "A" 0
   365 # "Function: inline def eval(in b)"
-    * set :eval.41:b true
   366 jump *label135 equal true false
-    * set *tmp146 "T"
   367 jump *label136 always
   368 label *label135
   369 label *label136
-    * set *tmp145 "T"
   370 label *label134
-    * op strictEqual *tmp147 "A" 0
   371 # "Function: inline def eval(in b)"
-    * set :eval.42:b false
   372 jump *label138 equal false false
   373 jump *label139 always
   374 label *label138
-    * set *tmp149 "F"
   375 label *label139
-    * set *tmp148 "F"
   376 label *label137
-    * op equal *tmp150 false false
   377 # "Function: inline def eval(in b)"
-    * set :eval.43:b true
   378 jump *label141 equal true false
-    * set *tmp153 "T"
   379 jump *label142 always
   380 label *label141
   381 label *label142
-    * set *tmp152 "T"
   382 label *label140
   383 print "F"
   384 print "T"
 
   388 label *label130
   389 # "Function: inline def compare(in title, in a, in b, in expected)"
   390 assertflush
-    * op equal *tmp155 "A" 1
   391 # "Function: inline def eval(in b)"
-    * set :eval.44:b true
   392 jump *label145 equal true false
-    * set *tmp157 "T"
   393 jump *label146 always
   394 label *label145
   395 label *label146
-    * set *tmp156 "T"
   396 label *label144
-    * op notEqual *tmp158 "A" 1
   397 # "Function: inline def eval(in b)"
-    * set :eval.45:b false
   398 jump *label148 equal false false
   399 jump *label149 always
   400 label *label148
-    * set *tmp160 "F"
   401 label *label149
-    * set *tmp159 "F"
   402 label *label147
-    * op strictEqual *tmp161 "A" 1
   403 # "Function: inline def eval(in b)"
-    * set :eval.46:b false
   404 jump *label151 equal false false
   405 jump *label152 always
   406 label *label151
-    * set *tmp163 "F"
   407 label *label152
-    * set *tmp162 "F"
   408 label *label150
-    * op equal *tmp164 false false
   409 # "Function: inline def eval(in b)"
-    * set :eval.47:b true
   410 jump *label154 equal true false
-    * set *tmp167 "T"
   411 jump *label155 always
   412 label *label154
   413 label *label155
-    * set *tmp166 "T"
   414 label *label153
   415 print "T"
   416 print "F"
 
   420 label *label143
   421 # "Function: inline def compare(in title, in a, in b, in expected)"
   422 assertflush
-    * op equal *tmp169 "A" 2
   423 # "Function: inline def eval(in b)"
-    * set :eval.48:b false
   424 jump *label158 equal false false
   425 jump *label159 always
   426 label *label158
-    * set *tmp171 "F"
   427 label *label159
-    * set *tmp170 "F"
   428 label *label157
-    * op notEqual *tmp172 "A" 2
   429 # "Function: inline def eval(in b)"
-    * set :eval.49:b true
   430 jump *label161 equal true false
-    * set *tmp174 "T"
   431 jump *label162 always
   432 label *label161
   433 label *label162
-    * set *tmp173 "T"
   434 label *label160
-    * op strictEqual *tmp175 "A" 2
   435 # "Function: inline def eval(in b)"
-    * set :eval.50:b false
   436 jump *label164 equal false false
   437 jump *label165 always
   438 label *label164
-    * set *tmp177 "F"
   439 label *label165
-    * set *tmp176 "F"
   440 label *label163
-    * op equal *tmp178 false false
   441 # "Function: inline def eval(in b)"
-    * set :eval.51:b true
   442 jump *label167 equal true false
-    * set *tmp181 "T"
   443 jump *label168 always
   444 label *label167
   445 label *label168
-    * set *tmp180 "T"
   446 label *label166
   447 print "F"
   448 print "T"
 
   452 label *label156
   453 # "Function: inline def compare(in title, in a, in b, in expected)"
   454 assertflush
-    * op equal *tmp183 "A" "B"
   455 # "Function: inline def eval(in b)"
-    * set :eval.52:b false
   456 jump *label171 equal false false
   457 jump *label172 always
   458 label *label171
-    * set *tmp185 "F"
   459 label *label172
-    * set *tmp184 "F"
   460 label *label170
-    * op notEqual *tmp186 "A" "B"
   461 # "Function: inline def eval(in b)"
-    * set :eval.53:b true
   462 jump *label174 equal true false
-    * set *tmp188 "T"
   463 jump *label175 always
   464 label *label174
   465 label *label175
-    * set *tmp187 "T"
   466 label *label173
-    * op strictEqual *tmp189 "A" "B"
   467 # "Function: inline def eval(in b)"
-    * set :eval.54:b false
   468 jump *label177 equal false false
   469 jump *label178 always
   470 label *label177
-    * set *tmp191 "F"
   471 label *label178
-    * set *tmp190 "F"
   472 label *label176
-    * op equal *tmp192 false false
   473 # "Function: inline def eval(in b)"
-    * set :eval.55:b true
   474 jump *label180 equal true false
-    * set *tmp195 "T"
   475 jump *label181 always
   476 label *label180
   477 label *label181
-    * set *tmp194 "T"
   478 label *label179
   479 print "F"
   480 print "T"
 
   484 label *label169
   485 # "Function: inline def compare(in title, in a, in b, in expected)"
   486 assertflush
-    * op equal *tmp197 "A" "A"
   487 # "Function: inline def eval(in b)"
-    * set :eval.56:b true
   488 jump *label184 equal true false
-    * set *tmp199 "T"
   489 jump *label185 always
   490 label *label184
   491 label *label185
-    * set *tmp198 "T"
   492 label *label183
-    * op notEqual *tmp200 "A" "A"
   493 # "Function: inline def eval(in b)"
-    * set :eval.57:b false
   494 jump *label187 equal false false
   495 jump *label188 always
   496 label *label187
-    * set *tmp202 "F"
   497 label *label188
-    * set *tmp201 "F"
   498 label *label186
-    * op strictEqual *tmp203 "A" "A"
   499 # "Function: inline def eval(in b)"
-    * set :eval.58:b true
   500 jump *label190 equal true false
-    * set *tmp205 "T"
   501 jump *label191 always
   502 label *label190
   503 label *label191
-    * set *tmp204 "T"
   504 label *label189
-    * op equal *tmp206 true false
   505 # "Function: inline def eval(in b)"
-    * set :eval.59:b false
   506 jump *label193 equal false false
   507 jump *label194 always
   508 label *label193
-    * set *tmp209 "F"
   509 label *label194
-    * set *tmp208 "F"
   510 label *label192
   511 print "T"
   512 print "F"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
   226 assertflush
   227 op equal *tmp99 A A
   228 # "Function: inline def eval(in b)"
-    * jump *label93 equal *tmp99 false
+  229 set *tmp101 "F"
+  230 jump *label94 equal *tmp99 false
   231 set *tmp101 "T"
   232 jump *label94 always
-    * label *label93
-    * set *tmp101 "F"
   233 label *label94
   234 label *label92
   235 op notEqual *tmp102 A A
   236 # "Function: inline def eval(in b)"
-    * jump *label96 equal *tmp102 false
+  237 set *tmp104 "F"
+  238 jump *label97 equal *tmp102 false
   239 set *tmp104 "T"
   240 jump *label97 always
-    * label *label96
-    * set *tmp104 "F"
   241 label *label97
   242 label *label95
   243 op strictEqual *tmp105 A A
   244 # "Function: inline def eval(in b)"
-    * jump *label99 equal *tmp105 false
+  245 set *tmp107 "F"
+  246 jump *label100 equal *tmp105 false
   247 set *tmp107 "T"
   248 jump *label100 always
-    * label *label99
-    * set *tmp107 "F"
   249 label *label100
   250 label *label98
   251 op equal *tmp108 *tmp105 false
   252 # "Function: inline def eval(in b)"
-    * jump *label102 equal *tmp108 false
+  253 set *tmp111 "F"
+  254 jump *label103 equal *tmp108 false
   255 set *tmp111 "T"
   256 jump *label103 always
-    * label *label102
-    * set *tmp111 "F"
   257 label *label103
   258 label *label101
   259 print *tmp101
 
   266 assertflush
   267 op equal *tmp113 A 0
   268 # "Function: inline def eval(in b)"
-    * jump *label106 equal *tmp113 false
+  269 set *tmp115 "F"
+  270 jump *label107 equal *tmp113 false
   271 set *tmp115 "T"
   272 jump *label107 always
-    * label *label106
-    * set *tmp115 "F"
   273 label *label107
   274 label *label105
   275 op notEqual *tmp116 A 0
   276 # "Function: inline def eval(in b)"
-    * jump *label109 equal *tmp116 false
+  277 set *tmp118 "F"
+  278 jump *label110 equal *tmp116 false
   279 set *tmp118 "T"
   280 jump *label110 always
-    * label *label109
-    * set *tmp118 "F"
   281 label *label110
   282 label *label108
   283 op strictEqual *tmp119 A 0
   284 # "Function: inline def eval(in b)"
-    * jump *label112 equal *tmp119 false
+  285 set *tmp121 "F"
+  286 jump *label113 equal *tmp119 false
   287 set *tmp121 "T"
   288 jump *label113 always
-    * label *label112
-    * set *tmp121 "F"
   289 label *label113
   290 label *label111
   291 op equal *tmp122 *tmp119 false
   292 # "Function: inline def eval(in b)"
-    * jump *label115 equal *tmp122 false
+  293 set *tmp125 "F"
+  294 jump *label116 equal *tmp122 false
   295 set *tmp125 "T"
   296 jump *label116 always
-    * label *label115
-    * set *tmp125 "F"
   297 label *label116
   298 label *label114
   299 print *tmp115
 
   306 assertflush
   307 op equal *tmp127 A 1
   308 # "Function: inline def eval(in b)"
-    * jump *label119 equal *tmp127 false
+  309 set *tmp129 "F"
+  310 jump *label120 equal *tmp127 false
   311 set *tmp129 "T"
   312 jump *label120 always
-    * label *label119
-    * set *tmp129 "F"
   313 label *label120
   314 label *label118
   315 op notEqual *tmp130 A 1
   316 # "Function: inline def eval(in b)"
-    * jump *label122 equal *tmp130 false
+  317 set *tmp132 "F"
+  318 jump *label123 equal *tmp130 false
   319 set *tmp132 "T"
   320 jump *label123 always
-    * label *label122
-    * set *tmp132 "F"
   321 label *label123
   322 label *label121
   323 op strictEqual *tmp133 A 1
   324 # "Function: inline def eval(in b)"
-    * jump *label125 equal *tmp133 false
+  325 set *tmp135 "F"
+  326 jump *label126 equal *tmp133 false
   327 set *tmp135 "T"
   328 jump *label126 always
-    * label *label125
-    * set *tmp135 "F"
   329 label *label126
   330 label *label124
   331 op equal *tmp136 *tmp133 false
   332 # "Function: inline def eval(in b)"
-    * jump *label128 equal *tmp136 false
+  333 set *tmp139 "F"
+  334 jump *label129 equal *tmp136 false
   335 set *tmp139 "T"
   336 jump *label129 always
-    * label *label128
-    * set *tmp139 "F"
   337 label *label129
   338 label *label127
   339 print *tmp129

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-24 instructions):
 
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
     3 # "Function: inline def eval(in b)"
-    * jump *label2 equal true false
     4 jump *label3 always
     5 label *label2
     6 label *label3
     7 label *label1
     8 # "Function: inline def eval(in b)"
-    * jump *label5 equal false false
+    9 jump *label5 always
    10 jump *label6 always
    11 label *label5
    12 label *label6
    13 label *label4
    14 # "Function: inline def eval(in b)"
-    * jump *label8 equal false false
+   15 jump *label8 always
    16 jump *label9 always
    17 label *label8
    18 label *label9
    19 label *label7
    20 # "Function: inline def eval(in b)"
-    * jump *label11 equal true false
    21 jump *label12 always
    22 label *label11
    23 label *label12
 
    31 # "Function: inline def compare(in title, in a, in b, in expected)"
    32 assertflush
    33 # "Function: inline def eval(in b)"
-    * jump *label15 equal false false
+   34 jump *label15 always
    35 jump *label16 always
    36 label *label15
    37 label *label16
    38 label *label14
    39 # "Function: inline def eval(in b)"
-    * jump *label18 equal true false
    40 jump *label19 always
    41 label *label18
    42 label *label19
    43 label *label17
    44 # "Function: inline def eval(in b)"
-    * jump *label21 equal false false
+   45 jump *label21 always
    46 jump *label22 always
    47 label *label21
    48 label *label22
    49 label *label20
    50 # "Function: inline def eval(in b)"
-    * jump *label24 equal true false
    51 jump *label25 always
    52 label *label24
    53 label *label25
 
    61 # "Function: inline def compare(in title, in a, in b, in expected)"
    62 assertflush
    63 # "Function: inline def eval(in b)"
-    * jump *label28 equal false false
+   64 jump *label28 always
    65 jump *label29 always
    66 label *label28
    67 label *label29
    68 label *label27
    69 # "Function: inline def eval(in b)"
-    * jump *label31 equal true false
    70 jump *label32 always
    71 label *label31
    72 label *label32
    73 label *label30
    74 # "Function: inline def eval(in b)"
-    * jump *label34 equal false false
+   75 jump *label34 always
    76 jump *label35 always
    77 label *label34
    78 label *label35
    79 label *label33
    80 # "Function: inline def eval(in b)"
-    * jump *label37 equal true false
    81 jump *label38 always
    82 label *label37
    83 label *label38
 
    91 # "Function: inline def compare(in title, in a, in b, in expected)"
    92 assertflush
    93 # "Function: inline def eval(in b)"
-    * jump *label41 equal false false
+   94 jump *label41 always
    95 jump *label42 always
    96 label *label41
    97 label *label42
    98 label *label40
    99 # "Function: inline def eval(in b)"
-    * jump *label44 equal true false
   100 jump *label45 always
   101 label *label44
   102 label *label45
   103 label *label43
   104 # "Function: inline def eval(in b)"
-    * jump *label47 equal false false
+  105 jump *label47 always
   106 jump *label48 always
   107 label *label47
   108 label *label48
   109 label *label46
   110 # "Function: inline def eval(in b)"
-    * jump *label50 equal true false
   111 jump *label51 always
   112 label *label50
   113 label *label51
 
   121 # "Function: inline def compare(in title, in a, in b, in expected)"
   122 assertflush
   123 # "Function: inline def eval(in b)"
-    * jump *label54 equal true false
   124 jump *label55 always
   125 label *label54
   126 label *label55
   127 label *label53
   128 # "Function: inline def eval(in b)"
-    * jump *label57 equal false false
+  129 jump *label57 always
   130 jump *label58 always
   131 label *label57
   132 label *label58
   133 label *label56
   134 # "Function: inline def eval(in b)"
-    * jump *label60 equal false false
+  135 jump *label60 always
   136 jump *label61 always
   137 label *label60
   138 label *label61
   139 label *label59
   140 # "Function: inline def eval(in b)"
-    * jump *label63 equal true false
   141 jump *label64 always
   142 label *label63
   143 label *label64
 
   151 # "Function: inline def compare(in title, in a, in b, in expected)"
   152 assertflush
   153 # "Function: inline def eval(in b)"
-    * jump *label67 equal false false
+  154 jump *label67 always
   155 jump *label68 always
   156 label *label67
   157 label *label68
   158 label *label66
   159 # "Function: inline def eval(in b)"
-    * jump *label70 equal true false
   160 jump *label71 always
   161 label *label70
   162 label *label71
   163 label *label69
   164 # "Function: inline def eval(in b)"
-    * jump *label73 equal false false
+  165 jump *label73 always
   166 jump *label74 always
   167 label *label73
   168 label *label74
   169 label *label72
   170 # "Function: inline def eval(in b)"
-    * jump *label76 equal true false
   171 jump *label77 always
   172 label *label76
   173 label *label77
 
   181 # "Function: inline def compare(in title, in a, in b, in expected)"
   182 assertflush
   183 # "Function: inline def eval(in b)"
-    * jump *label80 equal false false
+  184 jump *label80 always
   185 jump *label81 always
   186 label *label80
   187 label *label81
   188 label *label79
   189 # "Function: inline def eval(in b)"
-    * jump *label83 equal true false
   190 jump *label84 always
   191 label *label83
   192 label *label84
   193 label *label82
   194 # "Function: inline def eval(in b)"
-    * jump *label86 equal false false
+  195 jump *label86 always
   196 jump *label87 always
   197 label *label86
   198 label *label87
   199 label *label85
   200 # "Function: inline def eval(in b)"
-    * jump *label89 equal true false
   201 jump *label90 always
   202 label *label89
   203 label *label90
 
   331 # "Function: inline def compare(in title, in a, in b, in expected)"
   332 assertflush
   333 # "Function: inline def eval(in b)"
-    * jump *label132 equal false false
+  334 jump *label132 always
   335 jump *label133 always
   336 label *label132
   337 label *label133
   338 label *label131
   339 # "Function: inline def eval(in b)"
-    * jump *label135 equal true false
   340 jump *label136 always
   341 label *label135
   342 label *label136
   343 label *label134
   344 # "Function: inline def eval(in b)"
-    * jump *label138 equal false false
+  345 jump *label138 always
   346 jump *label139 always
   347 label *label138
   348 label *label139
   349 label *label137
   350 # "Function: inline def eval(in b)"
-    * jump *label141 equal true false
   351 jump *label142 always
   352 label *label141
   353 label *label142
 
   361 # "Function: inline def compare(in title, in a, in b, in expected)"
   362 assertflush
   363 # "Function: inline def eval(in b)"
-    * jump *label145 equal true false
   364 jump *label146 always
   365 label *label145
   366 label *label146
   367 label *label144
   368 # "Function: inline def eval(in b)"
-    * jump *label148 equal false false
+  369 jump *label148 always
   370 jump *label149 always
   371 label *label148
   372 label *label149
   373 label *label147
   374 # "Function: inline def eval(in b)"
-    * jump *label151 equal false false
+  375 jump *label151 always
   376 jump *label152 always
   377 label *label151
   378 label *label152
   379 label *label150
   380 # "Function: inline def eval(in b)"
-    * jump *label154 equal true false
   381 jump *label155 always
   382 label *label154
   383 label *label155
 
   391 # "Function: inline def compare(in title, in a, in b, in expected)"
   392 assertflush
   393 # "Function: inline def eval(in b)"
-    * jump *label158 equal false false
+  394 jump *label158 always
   395 jump *label159 always
   396 label *label158
   397 label *label159
   398 label *label157
   399 # "Function: inline def eval(in b)"
-    * jump *label161 equal true false
   400 jump *label162 always
   401 label *label161
   402 label *label162
   403 label *label160
   404 # "Function: inline def eval(in b)"
-    * jump *label164 equal false false
+  405 jump *label164 always
   406 jump *label165 always
   407 label *label164
   408 label *label165
   409 label *label163
   410 # "Function: inline def eval(in b)"
-    * jump *label167 equal true false
   411 jump *label168 always
   412 label *label167
   413 label *label168
 
   421 # "Function: inline def compare(in title, in a, in b, in expected)"
   422 assertflush
   423 # "Function: inline def eval(in b)"
-    * jump *label171 equal false false
+  424 jump *label171 always
   425 jump *label172 always
   426 label *label171
   427 label *label172
   428 label *label170
   429 # "Function: inline def eval(in b)"
-    * jump *label174 equal true false
   430 jump *label175 always
   431 label *label174
   432 label *label175
   433 label *label173
   434 # "Function: inline def eval(in b)"
-    * jump *label177 equal false false
+  435 jump *label177 always
   436 jump *label178 always
   437 label *label177
   438 label *label178
   439 label *label176
   440 # "Function: inline def eval(in b)"
-    * jump *label180 equal true false
   441 jump *label181 always
   442 label *label180
   443 label *label181
 
   451 # "Function: inline def compare(in title, in a, in b, in expected)"
   452 assertflush
   453 # "Function: inline def eval(in b)"
-    * jump *label184 equal true false
   454 jump *label185 always
   455 label *label184
   456 label *label185
   457 label *label183
   458 # "Function: inline def eval(in b)"
-    * jump *label187 equal false false
+  459 jump *label187 always
   460 jump *label188 always
   461 label *label187
   462 label *label188
   463 label *label186
   464 # "Function: inline def eval(in b)"
-    * jump *label190 equal true false
   465 jump *label191 always
   466 label *label190
   467 label *label191
   468 label *label189
   469 # "Function: inline def eval(in b)"
-    * jump *label193 equal false false
+  470 jump *label193 always
   471 jump *label194 always
   472 label *label193
   473 label *label194

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-60 instructions):
 
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
     3 # "Function: inline def eval(in b)"
-    * jump *label3 always
     4 label *label2
     5 label *label3
     6 label *label1
     7 # "Function: inline def eval(in b)"
     8 jump *label5 always
-    * jump *label6 always
     9 label *label5
    10 label *label6
    11 label *label4
    12 # "Function: inline def eval(in b)"
    13 jump *label8 always
-    * jump *label9 always
    14 label *label8
    15 label *label9
    16 label *label7
    17 # "Function: inline def eval(in b)"
-    * jump *label12 always
    18 label *label11
    19 label *label12
    20 label *label10
 
    28 assertflush
    29 # "Function: inline def eval(in b)"
    30 jump *label15 always
-    * jump *label16 always
    31 label *label15
    32 label *label16
    33 label *label14
    34 # "Function: inline def eval(in b)"
-    * jump *label19 always
    35 label *label18
    36 label *label19
    37 label *label17
    38 # "Function: inline def eval(in b)"
    39 jump *label21 always
-    * jump *label22 always
    40 label *label21
    41 label *label22
    42 label *label20
    43 # "Function: inline def eval(in b)"
-    * jump *label25 always
    44 label *label24
    45 label *label25
    46 label *label23
 
    54 assertflush
    55 # "Function: inline def eval(in b)"
    56 jump *label28 always
-    * jump *label29 always
    57 label *label28
    58 label *label29
    59 label *label27
    60 # "Function: inline def eval(in b)"
-    * jump *label32 always
    61 label *label31
    62 label *label32
    63 label *label30
    64 # "Function: inline def eval(in b)"
    65 jump *label34 always
-    * jump *label35 always
    66 label *label34
    67 label *label35
    68 label *label33
    69 # "Function: inline def eval(in b)"
-    * jump *label38 always
    70 label *label37
    71 label *label38
    72 label *label36
 
    80 assertflush
    81 # "Function: inline def eval(in b)"
    82 jump *label41 always
-    * jump *label42 always
    83 label *label41
    84 label *label42
    85 label *label40
    86 # "Function: inline def eval(in b)"
-    * jump *label45 always
    87 label *label44
    88 label *label45
    89 label *label43
    90 # "Function: inline def eval(in b)"
    91 jump *label47 always
-    * jump *label48 always
    92 label *label47
    93 label *label48
    94 label *label46
    95 # "Function: inline def eval(in b)"
-    * jump *label51 always
    96 label *label50
    97 label *label51
    98 label *label49
 
   105 # "Function: inline def compare(in title, in a, in b, in expected)"
   106 assertflush
   107 # "Function: inline def eval(in b)"
-    * jump *label55 always
   108 label *label54
   109 label *label55
   110 label *label53
   111 # "Function: inline def eval(in b)"
   112 jump *label57 always
-    * jump *label58 always
   113 label *label57
   114 label *label58
   115 label *label56
   116 # "Function: inline def eval(in b)"
   117 jump *label60 always
-    * jump *label61 always
   118 label *label60
   119 label *label61
   120 label *label59
   121 # "Function: inline def eval(in b)"
-    * jump *label64 always
   122 label *label63
   123 label *label64
   124 label *label62
 
   132 assertflush
   133 # "Function: inline def eval(in b)"
   134 jump *label67 always
-    * jump *label68 always
   135 label *label67
   136 label *label68
   137 label *label66
   138 # "Function: inline def eval(in b)"
-    * jump *label71 always
   139 label *label70
   140 label *label71
   141 label *label69
   142 # "Function: inline def eval(in b)"
   143 jump *label73 always
-    * jump *label74 always
   144 label *label73
   145 label *label74
   146 label *label72
   147 # "Function: inline def eval(in b)"
-    * jump *label77 always
   148 label *label76
   149 label *label77
   150 label *label75
 
   158 assertflush
   159 # "Function: inline def eval(in b)"
   160 jump *label80 always
-    * jump *label81 always
   161 label *label80
   162 label *label81
   163 label *label79
   164 # "Function: inline def eval(in b)"
-    * jump *label84 always
   165 label *label83
   166 label *label84
   167 label *label82
   168 # "Function: inline def eval(in b)"
   169 jump *label86 always
-    * jump *label87 always
   170 label *label86
   171 label *label87
   172 label *label85
   173 # "Function: inline def eval(in b)"
-    * jump *label90 always
   174 label *label89
   175 label *label90
   176 label *label88
 
   187 set *tmp101 "F"
   188 jump *label94 equal *tmp99 false
   189 set *tmp101 "T"
-    * jump *label94 always
   190 label *label94
   191 label *label92
   192 op notEqual *tmp102 A A
 
   194 set *tmp104 "F"
   195 jump *label97 equal *tmp102 false
   196 set *tmp104 "T"
-    * jump *label97 always
   197 label *label97
   198 label *label95
   199 op strictEqual *tmp105 A A
 
   201 set *tmp107 "F"
   202 jump *label100 equal *tmp105 false
   203 set *tmp107 "T"
-    * jump *label100 always
   204 label *label100
   205 label *label98
   206 op equal *tmp108 *tmp105 false
 
   208 set *tmp111 "F"
   209 jump *label103 equal *tmp108 false
   210 set *tmp111 "T"
-    * jump *label103 always
   211 label *label103
   212 label *label101
   213 print *tmp101
 
   223 set *tmp115 "F"
   224 jump *label107 equal *tmp113 false
   225 set *tmp115 "T"
-    * jump *label107 always
   226 label *label107
   227 label *label105
   228 op notEqual *tmp116 A 0
 
   230 set *tmp118 "F"
   231 jump *label110 equal *tmp116 false
   232 set *tmp118 "T"
-    * jump *label110 always
   233 label *label110
   234 label *label108
   235 op strictEqual *tmp119 A 0
 
   237 set *tmp121 "F"
   238 jump *label113 equal *tmp119 false
   239 set *tmp121 "T"
-    * jump *label113 always
   240 label *label113
   241 label *label111
   242 op equal *tmp122 *tmp119 false
 
   244 set *tmp125 "F"
   245 jump *label116 equal *tmp122 false
   246 set *tmp125 "T"
-    * jump *label116 always
   247 label *label116
   248 label *label114
   249 print *tmp115
 
   259 set *tmp129 "F"
   260 jump *label120 equal *tmp127 false
   261 set *tmp129 "T"
-    * jump *label120 always
   262 label *label120
   263 label *label118
   264 op notEqual *tmp130 A 1
 
   266 set *tmp132 "F"
   267 jump *label123 equal *tmp130 false
   268 set *tmp132 "T"
-    * jump *label123 always
   269 label *label123
   270 label *label121
   271 op strictEqual *tmp133 A 1
 
   273 set *tmp135 "F"
   274 jump *label126 equal *tmp133 false
   275 set *tmp135 "T"
-    * jump *label126 always
   276 label *label126
   277 label *label124
   278 op equal *tmp136 *tmp133 false
 
   280 set *tmp139 "F"
   281 jump *label129 equal *tmp136 false
   282 set *tmp139 "T"
-    * jump *label129 always
   283 label *label129
   284 label *label127
   285 print *tmp129
 
   292 assertflush
   293 # "Function: inline def eval(in b)"
   294 jump *label132 always
-    * jump *label133 always
   295 label *label132
   296 label *label133
   297 label *label131
   298 # "Function: inline def eval(in b)"
-    * jump *label136 always
   299 label *label135
   300 label *label136
   301 label *label134
   302 # "Function: inline def eval(in b)"
   303 jump *label138 always
-    * jump *label139 always
   304 label *label138
   305 label *label139
   306 label *label137
   307 # "Function: inline def eval(in b)"
-    * jump *label142 always
   308 label *label141
   309 label *label142
   310 label *label140
 
   317 # "Function: inline def compare(in title, in a, in b, in expected)"
   318 assertflush
   319 # "Function: inline def eval(in b)"
-    * jump *label146 always
   320 label *label145
   321 label *label146
   322 label *label144
   323 # "Function: inline def eval(in b)"
   324 jump *label148 always
-    * jump *label149 always
   325 label *label148
   326 label *label149
   327 label *label147
   328 # "Function: inline def eval(in b)"
   329 jump *label151 always
-    * jump *label152 always
   330 label *label151
   331 label *label152
   332 label *label150
   333 # "Function: inline def eval(in b)"
-    * jump *label155 always
   334 label *label154
   335 label *label155
   336 label *label153
 
   344 assertflush
   345 # "Function: inline def eval(in b)"
   346 jump *label158 always
-    * jump *label159 always
   347 label *label158
   348 label *label159
   349 label *label157
   350 # "Function: inline def eval(in b)"
-    * jump *label162 always
   351 label *label161
   352 label *label162
   353 label *label160
   354 # "Function: inline def eval(in b)"
   355 jump *label164 always
-    * jump *label165 always
   356 label *label164
   357 label *label165
   358 label *label163
   359 # "Function: inline def eval(in b)"
-    * jump *label168 always
   360 label *label167
   361 label *label168
   362 label *label166
 
   370 assertflush
   371 # "Function: inline def eval(in b)"
   372 jump *label171 always
-    * jump *label172 always
   373 label *label171
   374 label *label172
   375 label *label170
   376 # "Function: inline def eval(in b)"
-    * jump *label175 always
   377 label *label174
   378 label *label175
   379 label *label173
   380 # "Function: inline def eval(in b)"
   381 jump *label177 always
-    * jump *label178 always
   382 label *label177
   383 label *label178
   384 label *label176
   385 # "Function: inline def eval(in b)"
-    * jump *label181 always
   386 label *label180
   387 label *label181
   388 label *label179
 
   395 # "Function: inline def compare(in title, in a, in b, in expected)"
   396 assertflush
   397 # "Function: inline def eval(in b)"
-    * jump *label185 always
   398 label *label184
   399 label *label185
   400 label *label183
   401 # "Function: inline def eval(in b)"
   402 jump *label187 always
-    * jump *label188 always
   403 label *label187
   404 label *label188
   405 label *label186
   406 # "Function: inline def eval(in b)"
-    * jump *label191 always
   407 label *label190
   408 label *label191
   409 label *label189
   410 # "Function: inline def eval(in b)"
   411 jump *label193 always
-    * jump *label194 always
   412 label *label193
   413 label *label194
   414 label *label192

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-24 instructions):
 
     5 label *label3
     6 label *label1
     7 # "Function: inline def eval(in b)"
-    * jump *label5 always
     8 label *label5
     9 label *label6
    10 label *label4
    11 # "Function: inline def eval(in b)"
-    * jump *label8 always
    12 label *label8
    13 label *label9
    14 label *label7
 
    25 # "Function: inline def compare(in title, in a, in b, in expected)"
    26 assertflush
    27 # "Function: inline def eval(in b)"
-    * jump *label15 always
    28 label *label15
    29 label *label16
    30 label *label14
 
    33 label *label19
    34 label *label17
    35 # "Function: inline def eval(in b)"
-    * jump *label21 always
    36 label *label21
    37 label *label22
    38 label *label20
 
    49 # "Function: inline def compare(in title, in a, in b, in expected)"
    50 assertflush
    51 # "Function: inline def eval(in b)"
-    * jump *label28 always
    52 label *label28
    53 label *label29
    54 label *label27
 
    57 label *label32
    58 label *label30
    59 # "Function: inline def eval(in b)"
-    * jump *label34 always
    60 label *label34
    61 label *label35
    62 label *label33
 
    73 # "Function: inline def compare(in title, in a, in b, in expected)"
    74 assertflush
    75 # "Function: inline def eval(in b)"
-    * jump *label41 always
    76 label *label41
    77 label *label42
    78 label *label40
 
    81 label *label45
    82 label *label43
    83 # "Function: inline def eval(in b)"
-    * jump *label47 always
    84 label *label47
    85 label *label48
    86 label *label46
 
   101 label *label55
   102 label *label53
   103 # "Function: inline def eval(in b)"
-    * jump *label57 always
   104 label *label57
   105 label *label58
   106 label *label56
   107 # "Function: inline def eval(in b)"
-    * jump *label60 always
   108 label *label60
   109 label *label61
   110 label *label59
 
   121 # "Function: inline def compare(in title, in a, in b, in expected)"
   122 assertflush
   123 # "Function: inline def eval(in b)"
-    * jump *label67 always
   124 label *label67
   125 label *label68
   126 label *label66
 
   129 label *label71
   130 label *label69
   131 # "Function: inline def eval(in b)"
-    * jump *label73 always
   132 label *label73
   133 label *label74
   134 label *label72
 
   145 # "Function: inline def compare(in title, in a, in b, in expected)"
   146 assertflush
   147 # "Function: inline def eval(in b)"
-    * jump *label80 always
   148 label *label80
   149 label *label81
   150 label *label79
 
   153 label *label84
   154 label *label82
   155 # "Function: inline def eval(in b)"
-    * jump *label86 always
   156 label *label86
   157 label *label87
   158 label *label85
 
   277 # "Function: inline def compare(in title, in a, in b, in expected)"
   278 assertflush
   279 # "Function: inline def eval(in b)"
-    * jump *label132 always
   280 label *label132
   281 label *label133
   282 label *label131
 
   285 label *label136
   286 label *label134
   287 # "Function: inline def eval(in b)"
-    * jump *label138 always
   288 label *label138
   289 label *label139
   290 label *label137
 
   305 label *label146
   306 label *label144
   307 # "Function: inline def eval(in b)"
-    * jump *label148 always
   308 label *label148
   309 label *label149
   310 label *label147
   311 # "Function: inline def eval(in b)"
-    * jump *label151 always
   312 label *label151
   313 label *label152
   314 label *label150
 
   325 # "Function: inline def compare(in title, in a, in b, in expected)"
   326 assertflush
   327 # "Function: inline def eval(in b)"
-    * jump *label158 always
   328 label *label158
   329 label *label159
   330 label *label157
 
   333 label *label162
   334 label *label160
   335 # "Function: inline def eval(in b)"
-    * jump *label164 always
   336 label *label164
   337 label *label165
   338 label *label163
 
   349 # "Function: inline def compare(in title, in a, in b, in expected)"
   350 assertflush
   351 # "Function: inline def eval(in b)"
-    * jump *label171 always
   352 label *label171
   353 label *label172
   354 label *label170
 
   357 label *label175
   358 label *label173
   359 # "Function: inline def eval(in b)"
-    * jump *label177 always
   360 label *label177
   361 label *label178
   362 label *label176
 
   377 label *label185
   378 label *label183
   379 # "Function: inline def eval(in b)"
-    * jump *label187 always
   380 label *label187
   381 label *label188
   382 label *label186
 
   385 label *label191
   386 label *label189
   387 # "Function: inline def eval(in b)"
-    * jump *label193 always
   388 label *label193
   389 label *label194
   390 label *label192

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   168 label *label78
   169 # "Function: inline def compare(in title, in a, in b, in expected)"
   170 assertflush
-    * op equal *tmp99 A A
+  171 set *tmp99 true
   172 # "Function: inline def eval(in b)"
   173 set *tmp101 "F"
   174 jump *label94 equal *tmp99 false
   175 set *tmp101 "T"
   176 label *label94
   177 label *label92
-    * op notEqual *tmp102 A A
+  178 set *tmp102 false
   179 # "Function: inline def eval(in b)"
   180 set *tmp104 "F"
   181 jump *label97 equal *tmp102 false
   182 set *tmp104 "T"
   183 label *label97
   184 label *label95
-    * op strictEqual *tmp105 A A
+  185 set *tmp105 true
   186 # "Function: inline def eval(in b)"
   187 set *tmp107 "F"
   188 jump *label100 equal *tmp105 false

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-4 instructions):
 
   170 assertflush
   171 set *tmp99 true
   172 # "Function: inline def eval(in b)"
-    * set *tmp101 "F"
-    * jump *label94 equal *tmp99 false
+  173 jump *label94 equal true false
   174 set *tmp101 "T"
   175 label *label94
   176 label *label92
   177 set *tmp102 false
   178 # "Function: inline def eval(in b)"
   179 set *tmp104 "F"
-    * jump *label97 equal *tmp102 false
-    * set *tmp104 "T"
+  180 jump *label97 equal false false
   181 label *label97
   182 label *label95
   183 set *tmp105 true
   184 # "Function: inline def eval(in b)"
-    * set *tmp107 "F"
-    * jump *label100 equal *tmp105 false
+  185 jump *label100 equal true false
   186 set *tmp107 "T"
   187 label *label100
   188 label *label98
-    * op equal *tmp108 *tmp105 false
+  189 op equal *tmp108 true false
   190 # "Function: inline def eval(in b)"
   191 set *tmp111 "F"
-    * jump *label103 equal *tmp108 false
-    * set *tmp111 "T"
+  192 jump *label103 equal false false
   193 label *label103
   194 label *label101
-    * print *tmp101
-    * print *tmp104
-    * print *tmp107
-    * print *tmp111
+  195 print "T"
+  196 print "F"
+  197 print "T"
+  198 print "F"
   199 assertprints "TFTF" "comparison 8"
   200 label *label91
   201 # "Function: inline def compare(in title, in a, in b, in expected)"

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
   168 label *label78
   169 # "Function: inline def compare(in title, in a, in b, in expected)"
   170 assertflush
-    * set *tmp99 true
   171 # "Function: inline def eval(in b)"
   172 jump *label94 equal true false
-    * set *tmp101 "T"
   173 label *label94
   174 label *label92
-    * set *tmp102 false
   175 # "Function: inline def eval(in b)"
-    * set *tmp104 "F"
   176 jump *label97 equal false false
   177 label *label97
   178 label *label95
-    * set *tmp105 true
   179 # "Function: inline def eval(in b)"
   180 jump *label100 equal true false
-    * set *tmp107 "T"
   181 label *label100
   182 label *label98
-    * op equal *tmp108 true false
   183 # "Function: inline def eval(in b)"
-    * set *tmp111 "F"
   184 jump *label103 equal false false
   185 label *label103
   186 label *label101

Modifications by Iterated phase, Jump Normalization, pass 3, iteration 1 (-2 instructions):
 
   169 # "Function: inline def compare(in title, in a, in b, in expected)"
   170 assertflush
   171 # "Function: inline def eval(in b)"
-    * jump *label94 equal true false
   172 label *label94
   173 label *label92
   174 # "Function: inline def eval(in b)"
-    * jump *label97 equal false false
+  175 jump *label97 always
   176 label *label97
   177 label *label95
   178 # "Function: inline def eval(in b)"
-    * jump *label100 equal true false
   179 label *label100
   180 label *label98
   181 # "Function: inline def eval(in b)"
-    * jump *label103 equal false false
+  182 jump *label103 always
   183 label *label103
   184 label *label101
   185 print "T"

Modifications by Iterated phase, Single Step Elimination, pass 3, iteration 1 (-2 instructions):
 
   172 label *label94
   173 label *label92
   174 # "Function: inline def eval(in b)"
-    * jump *label97 always
   175 label *label97
   176 label *label95
   177 # "Function: inline def eval(in b)"
   178 label *label100
   179 label *label98
   180 # "Function: inline def eval(in b)"
-    * jump *label103 always
   181 label *label103
   182 label *label101
   183 print "T"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     1 # "Function: inline def compare(in title, in a, in b, in expected)"
     2 assertflush
     3 # "Function: inline def eval(in b)"
-    * label *label2
-    * label *label3
-    * label *label1
     4 # "Function: inline def eval(in b)"
-    * label *label5
-    * label *label6
-    * label *label4
     5 # "Function: inline def eval(in b)"
-    * label *label8
-    * label *label9
-    * label *label7
     6 # "Function: inline def eval(in b)"
-    * label *label11
-    * label *label12
-    * label *label10
     7 print "T"
     8 print "F"
     9 print "F"
    10 print "T"
    11 assertprints "TFFT" "comparison 1"
-    * label *label0
    12 # "Function: inline def compare(in title, in a, in b, in expected)"
    13 assertflush
    14 # "Function: inline def eval(in b)"
-    * label *label15
-    * label *label16
-    * label *label14
    15 # "Function: inline def eval(in b)"
-    * label *label18
-    * label *label19
-    * label *label17
    16 # "Function: inline def eval(in b)"
-    * label *label21
-    * label *label22
-    * label *label20
    17 # "Function: inline def eval(in b)"
-    * label *label24
-    * label *label25
-    * label *label23
    18 print "F"
    19 print "T"
    20 print "F"
    21 print "T"
    22 assertprints "FTFT" "comparison 2"
-    * label *label13
    23 # "Function: inline def compare(in title, in a, in b, in expected)"
    24 assertflush
    25 # "Function: inline def eval(in b)"
-    * label *label28
-    * label *label29
-    * label *label27
    26 # "Function: inline def eval(in b)"
-    * label *label31
-    * label *label32
-    * label *label30
    27 # "Function: inline def eval(in b)"
-    * label *label34
-    * label *label35
-    * label *label33
    28 # "Function: inline def eval(in b)"
-    * label *label37
-    * label *label38
-    * label *label36
    29 print "F"
    30 print "T"
    31 print "F"
    32 print "T"
    33 assertprints "FTFT" "comparison 3"
-    * label *label26
    34 # "Function: inline def compare(in title, in a, in b, in expected)"
    35 assertflush
    36 # "Function: inline def eval(in b)"
-    * label *label41
-    * label *label42
-    * label *label40
    37 # "Function: inline def eval(in b)"
-    * label *label44
-    * label *label45
-    * label *label43
    38 # "Function: inline def eval(in b)"
-    * label *label47
-    * label *label48
-    * label *label46
    39 # "Function: inline def eval(in b)"
-    * label *label50
-    * label *label51
-    * label *label49
    40 print "F"
    41 print "T"
    42 print "F"
    43 print "T"
    44 assertprints "FTFT" "comparison 4"
-    * label *label39
    45 # "Function: inline def compare(in title, in a, in b, in expected)"
    46 assertflush
    47 # "Function: inline def eval(in b)"
-    * label *label54
-    * label *label55
-    * label *label53
    48 # "Function: inline def eval(in b)"
-    * label *label57
-    * label *label58
-    * label *label56
    49 # "Function: inline def eval(in b)"
-    * label *label60
-    * label *label61
-    * label *label59
    50 # "Function: inline def eval(in b)"
-    * label *label63
-    * label *label64
-    * label *label62
    51 print "T"
    52 print "F"
    53 print "F"
    54 print "T"
    55 assertprints "TFFT" "comparison 5"
-    * label *label52
    56 # "Function: inline def compare(in title, in a, in b, in expected)"
    57 assertflush
    58 # "Function: inline def eval(in b)"
-    * label *label67
-    * label *label68
-    * label *label66
    59 # "Function: inline def eval(in b)"
-    * label *label70
-    * label *label71
-    * label *label69
    60 # "Function: inline def eval(in b)"
-    * label *label73
-    * label *label74
-    * label *label72
    61 # "Function: inline def eval(in b)"
-    * label *label76
-    * label *label77
-    * label *label75
    62 print "F"
    63 print "T"
    64 print "F"
    65 print "T"
    66 assertprints "FTFT" "comparison 6"
-    * label *label65
    67 # "Function: inline def compare(in title, in a, in b, in expected)"
    68 assertflush
    69 # "Function: inline def eval(in b)"
-    * label *label80
-    * label *label81
-    * label *label79
    70 # "Function: inline def eval(in b)"
-    * label *label83
-    * label *label84
-    * label *label82
    71 # "Function: inline def eval(in b)"
-    * label *label86
-    * label *label87
-    * label *label85
    72 # "Function: inline def eval(in b)"
-    * label *label89
-    * label *label90
-    * label *label88
    73 print "F"
    74 print "T"
    75 print "F"
    76 print "T"
    77 assertprints "FTFT" "comparison 7"
-    * label *label78
    78 # "Function: inline def compare(in title, in a, in b, in expected)"
    79 assertflush
    80 # "Function: inline def eval(in b)"
-    * label *label94
-    * label *label92
    81 # "Function: inline def eval(in b)"
-    * label *label97
-    * label *label95
    82 # "Function: inline def eval(in b)"
-    * label *label100
-    * label *label98
    83 # "Function: inline def eval(in b)"
-    * label *label103
-    * label *label101
    84 print "T"
    85 print "F"
    86 print "T"
    87 print "F"
    88 assertprints "TFTF" "comparison 8"
-    * label *label91
    89 # "Function: inline def compare(in title, in a, in b, in expected)"
    90 assertflush
    91 op equal *tmp113 A 0
 
    94 jump *label107 equal *tmp113 false
    95 set *tmp115 "T"
    96 label *label107
-    * label *label105
    97 op notEqual *tmp116 A 0
    98 # "Function: inline def eval(in b)"
    99 set *tmp118 "F"
   100 jump *label110 equal *tmp116 false
   101 set *tmp118 "T"
   102 label *label110
-    * label *label108
   103 op strictEqual *tmp119 A 0
   104 # "Function: inline def eval(in b)"
   105 set *tmp121 "F"
   106 jump *label113 equal *tmp119 false
   107 set *tmp121 "T"
   108 label *label113
-    * label *label111
   109 op equal *tmp122 *tmp119 false
   110 # "Function: inline def eval(in b)"
   111 set *tmp125 "F"
   112 jump *label116 equal *tmp122 false
   113 set *tmp125 "T"
   114 label *label116
-    * label *label114
   115 print *tmp115
   116 print *tmp118
   117 print *tmp121
   118 print *tmp125
   119 assertprints "TFTF" "comparison 9"
-    * label *label104
   120 # "Function: inline def compare(in title, in a, in b, in expected)"
   121 assertflush
   122 op equal *tmp127 A 1
 
   125 jump *label120 equal *tmp127 false
   126 set *tmp129 "T"
   127 label *label120
-    * label *label118
   128 op notEqual *tmp130 A 1
   129 # "Function: inline def eval(in b)"
   130 set *tmp132 "F"
   131 jump *label123 equal *tmp130 false
   132 set *tmp132 "T"
   133 label *label123
-    * label *label121
   134 op strictEqual *tmp133 A 1
   135 # "Function: inline def eval(in b)"
   136 set *tmp135 "F"
   137 jump *label126 equal *tmp133 false
   138 set *tmp135 "T"
   139 label *label126
-    * label *label124
   140 op equal *tmp136 *tmp133 false
   141 # "Function: inline def eval(in b)"
   142 set *tmp139 "F"
   143 jump *label129 equal *tmp136 false
   144 set *tmp139 "T"
   145 label *label129
-    * label *label127
   146 print *tmp129
   147 print *tmp132
   148 print *tmp135
   149 print *tmp139
   150 assertprints "FTFT" "comparison 10"
-    * label *label117
   151 # "Function: inline def compare(in title, in a, in b, in expected)"
   152 assertflush
   153 # "Function: inline def eval(in b)"
-    * label *label132
-    * label *label133
-    * label *label131
   154 # "Function: inline def eval(in b)"
-    * label *label135
-    * label *label136
-    * label *label134
   155 # "Function: inline def eval(in b)"
-    * label *label138
-    * label *label139
-    * label *label137
   156 # "Function: inline def eval(in b)"
-    * label *label141
-    * label *label142
-    * label *label140
   157 print "F"
   158 print "T"
   159 print "F"
   160 print "T"
   161 assertprints "FTFT" "comparison 11"
-    * label *label130
   162 # "Function: inline def compare(in title, in a, in b, in expected)"
   163 assertflush
   164 # "Function: inline def eval(in b)"
-    * label *label145
-    * label *label146
-    * label *label144
   165 # "Function: inline def eval(in b)"
-    * label *label148
-    * label *label149
-    * label *label147
   166 # "Function: inline def eval(in b)"
-    * label *label151
-    * label *label152
-    * label *label150
   167 # "Function: inline def eval(in b)"
-    * label *label154
-    * label *label155
-    * label *label153
   168 print "T"
   169 print "F"
   170 print "F"
   171 print "T"
   172 assertprints "TFFT" "comparison 12"
-    * label *label143
   173 # "Function: inline def compare(in title, in a, in b, in expected)"
   174 assertflush
   175 # "Function: inline def eval(in b)"
-    * label *label158
-    * label *label159
-    * label *label157
   176 # "Function: inline def eval(in b)"
-    * label *label161
-    * label *label162
-    * label *label160
   177 # "Function: inline def eval(in b)"
-    * label *label164
-    * label *label165
-    * label *label163
   178 # "Function: inline def eval(in b)"
-    * label *label167
-    * label *label168
-    * label *label166
   179 print "F"
   180 print "T"
   181 print "F"
   182 print "T"
   183 assertprints "FTFT" "comparison 13"
-    * label *label156
   184 # "Function: inline def compare(in title, in a, in b, in expected)"
   185 assertflush
   186 # "Function: inline def eval(in b)"
-    * label *label171
-    * label *label172
-    * label *label170
   187 # "Function: inline def eval(in b)"
-    * label *label174
-    * label *label175
-    * label *label173
   188 # "Function: inline def eval(in b)"
-    * label *label177
-    * label *label178
-    * label *label176
   189 # "Function: inline def eval(in b)"
-    * label *label180
-    * label *label181
-    * label *label179
   190 print "F"
   191 print "T"
   192 print "F"
   193 print "T"
   194 assertprints "FTFT" "comparison 14"
-    * label *label169
   195 # "Function: inline def compare(in title, in a, in b, in expected)"
   196 assertflush
   197 # "Function: inline def eval(in b)"
-    * label *label184
-    * label *label185
-    * label *label183
   198 # "Function: inline def eval(in b)"
-    * label *label187
-    * label *label188
-    * label *label186
   199 # "Function: inline def eval(in b)"
-    * label *label190
-    * label *label191
-    * label *label189
   200 # "Function: inline def eval(in b)"
-    * label *label193
-    * label *label194
-    * label *label192
   201 print "T"
   202 print "F"
   203 print "T"
   204 print "F"
   205 assertprints "TFTF" "comparison 15"
-    * label *label182
   206 stop
   207 end

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-1 instructions):
 
   204 print "F"
   205 assertprints "TFTF" "comparison 15"
   206 stop
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-39 instructions):
 
     4 # "Function: inline def eval(in b)"
     5 # "Function: inline def eval(in b)"
     6 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+    7 print "TFFT"
     8 assertprints "TFFT" "comparison 1"
     9 # "Function: inline def compare(in title, in a, in b, in expected)"
    10 assertflush
 
    12 # "Function: inline def eval(in b)"
    13 # "Function: inline def eval(in b)"
    14 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   15 print "FTFT"
    16 assertprints "FTFT" "comparison 2"
    17 # "Function: inline def compare(in title, in a, in b, in expected)"
    18 assertflush
 
    20 # "Function: inline def eval(in b)"
    21 # "Function: inline def eval(in b)"
    22 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   23 print "FTFT"
    24 assertprints "FTFT" "comparison 3"
    25 # "Function: inline def compare(in title, in a, in b, in expected)"
    26 assertflush
 
    28 # "Function: inline def eval(in b)"
    29 # "Function: inline def eval(in b)"
    30 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   31 print "FTFT"
    32 assertprints "FTFT" "comparison 4"
    33 # "Function: inline def compare(in title, in a, in b, in expected)"
    34 assertflush
 
    36 # "Function: inline def eval(in b)"
    37 # "Function: inline def eval(in b)"
    38 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+   39 print "TFFT"
    40 assertprints "TFFT" "comparison 5"
    41 # "Function: inline def compare(in title, in a, in b, in expected)"
    42 assertflush
 
    44 # "Function: inline def eval(in b)"
    45 # "Function: inline def eval(in b)"
    46 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   47 print "FTFT"
    48 assertprints "FTFT" "comparison 6"
    49 # "Function: inline def compare(in title, in a, in b, in expected)"
    50 assertflush
 
    52 # "Function: inline def eval(in b)"
    53 # "Function: inline def eval(in b)"
    54 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+   55 print "FTFT"
    56 assertprints "FTFT" "comparison 7"
    57 # "Function: inline def compare(in title, in a, in b, in expected)"
    58 assertflush
 
    60 # "Function: inline def eval(in b)"
    61 # "Function: inline def eval(in b)"
    62 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+   63 print "TFTF"
    64 assertprints "TFTF" "comparison 8"
    65 # "Function: inline def compare(in title, in a, in b, in expected)"
    66 assertflush
 
   130 # "Function: inline def eval(in b)"
   131 # "Function: inline def eval(in b)"
   132 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  133 print "FTFT"
   134 assertprints "FTFT" "comparison 11"
   135 # "Function: inline def compare(in title, in a, in b, in expected)"
   136 assertflush
 
   138 # "Function: inline def eval(in b)"
   139 # "Function: inline def eval(in b)"
   140 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "F"
-    * print "T"
+  141 print "TFFT"
   142 assertprints "TFFT" "comparison 12"
   143 # "Function: inline def compare(in title, in a, in b, in expected)"
   144 assertflush
 
   146 # "Function: inline def eval(in b)"
   147 # "Function: inline def eval(in b)"
   148 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  149 print "FTFT"
   150 assertprints "FTFT" "comparison 13"
   151 # "Function: inline def compare(in title, in a, in b, in expected)"
   152 assertflush
 
   154 # "Function: inline def eval(in b)"
   155 # "Function: inline def eval(in b)"
   156 # "Function: inline def eval(in b)"
-    * print "F"
-    * print "T"
-    * print "F"
-    * print "T"
+  157 print "FTFT"
   158 assertprints "FTFT" "comparison 14"
   159 # "Function: inline def compare(in title, in a, in b, in expected)"
   160 assertflush
 
   162 # "Function: inline def eval(in b)"
   163 # "Function: inline def eval(in b)"
   164 # "Function: inline def eval(in b)"
-    * print "T"
-    * print "F"
-    * print "T"
-    * print "F"
+  165 print "TFTF"
   166 assertprints "TFTF" "comparison 15"
   167 stop

Final code before resolving virtual instructions:

set A 0
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 1"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 2"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 3"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 4"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 5"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 6"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 7"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFTF"
assertprints "TFTF" "comparison 8"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
op equal *tmp113 A 0
# "Function: inline def eval(in b)"
set *tmp115 "F"
jump *label107 equal *tmp113 false
set *tmp115 "T"
label *label107
op notEqual *tmp116 A 0
# "Function: inline def eval(in b)"
set *tmp118 "F"
jump *label110 equal *tmp116 false
set *tmp118 "T"
label *label110
op strictEqual *tmp119 A 0
# "Function: inline def eval(in b)"
set *tmp121 "F"
jump *label113 equal *tmp119 false
set *tmp121 "T"
label *label113
op equal *tmp122 *tmp119 false
# "Function: inline def eval(in b)"
set *tmp125 "F"
jump *label116 equal *tmp122 false
set *tmp125 "T"
label *label116
print *tmp115
print *tmp118
print *tmp121
print *tmp125
assertprints "TFTF" "comparison 9"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
op equal *tmp127 A 1
# "Function: inline def eval(in b)"
set *tmp129 "F"
jump *label120 equal *tmp127 false
set *tmp129 "T"
label *label120
op notEqual *tmp130 A 1
# "Function: inline def eval(in b)"
set *tmp132 "F"
jump *label123 equal *tmp130 false
set *tmp132 "T"
label *label123
op strictEqual *tmp133 A 1
# "Function: inline def eval(in b)"
set *tmp135 "F"
jump *label126 equal *tmp133 false
set *tmp135 "T"
label *label126
op equal *tmp136 *tmp133 false
# "Function: inline def eval(in b)"
set *tmp139 "F"
jump *label129 equal *tmp136 false
set *tmp139 "T"
label *label129
print *tmp129
print *tmp132
print *tmp135
print *tmp139
assertprints "FTFT" "comparison 10"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 11"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFFT"
assertprints "TFFT" "comparison 12"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 13"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "FTFT"
assertprints "FTFT" "comparison 14"
# "Function: inline def compare(in title, in a, in b, in expected)"
assertflush
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
# "Function: inline def eval(in b)"
print "TFTF"
assertprints "TFTF" "comparison 15"
stop
