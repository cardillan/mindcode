    45 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (5 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by Data Flow Optimization (4 iterations).
    42 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
    36 assertflush
    37 print %ffffff
    38 assertprints "0" "prints packcolor"
-    * set *tmp3 @counter
-    * set :y *tmp3
+   39 set :y @counter
    40 set :x :y
    41 assertequals :x :y "chained assignments"
    42 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    38 assertprints "0" "prints packcolor"
    39 set :y @counter
    40 set :x :y
-    * assertequals :x :y "chained assignments"
+   41 assertequals :y :y "chained assignments"
    42 stop
    43 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    37 print %ffffff
    38 assertprints "0" "prints packcolor"
    39 set :y @counter
-    * set :x :y
    40 assertequals :y :y "chained assignments"
    41 stop
    42 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
    39 set :y @counter
    40 assertequals :y :y "chained assignments"
    41 stop
-    * end

Final code before resolving virtual instructions:

set a 1
set b 0
set p @coal
assertflush
print "Hello"
assertprints "Hello" "prints Hello"
assertflush
print 10
assertprints "10" "prints 10"
assertflush
print 5.5
assertprints "5.5" "prints 5.5"
assertflush
print bank1
assertprints "bank" "prints bank"
assertflush
sensor *tmp0 bank1 @type
print *tmp0
assertprints "memory-bank" "prints memory-bank"
assertflush
print null
assertprints "null" "prints null"
assertflush
print true
assertprints "1" "prints true"
assertflush
print false
assertprints "0" "prints false"
assertflush
op div *tmp1 a b
print *tmp1
assertprints "null" "prints 1 / 0"
assertflush
sensor *tmp2 p @id
print *tmp2
assertprints "5" "prints @coal.@id"
assertflush
print %ffffff
assertprints "0" "prints packcolor"
set :y @counter
assertequals :y :y "chained assignments"
stop
