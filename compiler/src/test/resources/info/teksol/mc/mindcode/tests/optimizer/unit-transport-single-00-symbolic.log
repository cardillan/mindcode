   599 instructions before optimizations.
    40 instructions eliminated by Temp Variables Elimination (3 passes, 8 iterations).
    86 instructions eliminated by Dead Code Elimination (7 iterations).
     6 instructions eliminated by Jump Normalization (6 iterations).
    41 instructions eliminated by Jump Optimization (6 iterations).
    27 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (2 passes, 4 iterations).
    12 instructions eliminated by If Expression Optimization (5 iterations).
     4 instructions eliminated by Data Flow Optimization (5 passes, 19 iterations).
    18 instructions added by Loop Optimization (4 iterations).
     9 loops improved by Loop Optimization.
     5 instructions eliminated by Jump Straightening (6 iterations).
     6 instructions updated by Jump Threading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    50 instructions eliminated by Print Merging.
   343 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 608):
  * Replicate loop condition at line 43:1                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at line 51:1                        size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250
    Replicate loop condition at line 129:1                       size    +3, benefit       25.0, efficiency      8.333
    Replicate loop condition at line 304:1                       size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 314:5                       size    +1, benefit       12.5, efficiency     12.500

Pass 1: speed optimization selection (cost limit 607):
  * Replicate loop condition at line 51:1                        size    +2, benefit       25.0, efficiency     12.500 (+2 instructions)
    Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250
    Replicate loop condition at line 129:1                       size    +3, benefit       25.0, efficiency      8.333
    Replicate loop condition at line 304:1                       size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 314:5                       size    +1, benefit       12.5, efficiency     12.500

Pass 1: speed optimization selection (cost limit 605):
    Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250
    Replicate loop condition at line 129:1                       size    +3, benefit       25.0, efficiency      8.333
  * Replicate loop condition at line 304:1                       size    +2, benefit       25.0, efficiency     12.500 (+1 instructions)
    Replicate loop condition at line 314:5                       size    +1, benefit       12.5, efficiency     12.500

Pass 1: speed optimization selection (cost limit 604):
    Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250
    Replicate loop condition at line 129:1                       size    +3, benefit       25.0, efficiency      8.333
  * Replicate loop condition at line 314:5                       size    +1, benefit       12.5, efficiency     12.500 (+1 instructions)

Pass 1: speed optimization selection (cost limit 603):
    Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250
  * Replicate loop condition at line 129:1                       size    +3, benefit       25.0, efficiency      8.333 (+3 instructions)

Pass 1: speed optimization selection (cost limit 600):
  * Replicate loop condition at line 102:5                       size    +4, benefit       12.5, efficiency      3.125 (+4 instructions)
    Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250

Pass 1: speed optimization selection (cost limit 596):
  * Replicate loop condition at line 110:9                       size    +5, benefit        6.3, efficiency      1.250 (+5 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-52 instructions):
 
    32 set *tmp9 @unit
    33 set :rebindUnit:first_unit *tmp9
    34 jump *label9 always
-    * set *tmp8 null
    35 jump *label11 always
    36 label *label10
-    * set *tmp8 null
    37 label *label11
    38 print "[salmon]No unit of type "
    39 print UNIT
 
    47 sensor *tmp10 @unit @controller
    48 op equal *tmp11 *tmp10 @this
    49 jump *label15 equal *tmp11 false
-    * set *tmp6 null
    50 jump *label6 always
-    * set *tmp12 null
    51 jump *label16 always
    52 label *label15
-    * set *tmp12 null
    53 label *label16
    54 ubind UNIT
    55 print "[gold]Looking for old unit..."
 
    71 print UNIT
    72 print " "
    73 print "found. 2"
-    * set *tmp19 null
    74 jump *label22 always
    75 label *label21
    76 sensor *tmp20 @unit @controlled
 
    87 jump *label17 always
    88 set *tmp22 null
    89 label *label24
-    * set *tmp19 *tmp22
    90 label *label22
    91 printflush message1
    92 label *label19
 
    94 label *label20
    95 set *tmp17 null
    96 label *label17
-    * set *tmp6 *tmp17
    97 label *label6
    98 label *label4
    99 jump *label3 always
 
   122 jump *label31 equal *tmp31 false
   123 set .DROP_TARGET .CONTAINER
   124 set .CONTAINER :block
-    * set *tmp32 .CONTAINER
   125 jump *label32 always
   126 label *label31
-    * set *tmp32 null
   127 label *label32
   128 label *label29
   129 jump *label28 always
 
   132 jump *label33 equal *tmp33 false
   133 print "[salmon]No destination."
   134 print "\n"
-    * set *tmp34 "[salmon]No destination."
   135 jump *label34 always
   136 label *label33
   137 op notEqual *tmp35 .DROP_TARGET null
 
   154 jump *label27 always
   155 set *tmp39 null
   156 label *label36
-    * set *tmp34 *tmp39
   157 label *label34
   158 printflush message1
   159 label *label26
 
   168 printflush message1
   169 ulocate building core false @copper .CORE_X .CORE_Y *tmp43 *tmp42
   170 set .CORE *tmp42
-    * set *tmp41 .CORE
   171 jump *label38 always
   172 label *label37
   173 print "[gold]Locating vault #"
 
   225 label *label42
   226 set *tmp51 null
   227 label *label43
-    * set *tmp41 *tmp51
   228 label *label38
   229 op equal *tmp64 .CORE null
   230 jump *label49 equal *tmp64 false
   231 end
-    * set *tmp65 null
   232 jump *label50 always
   233 label *label49
-    * set *tmp65 null
   234 label *label50
   235 set .SORTER sorter1
   236 sensor *tmp66 .SORTER @type
 
   246 jump *label54 equal *tmp70 false
   247 print "Block found: "
   248 print .SORTER
-    * set *tmp71 .SORTER
   249 jump *label55 always
   250 label *label54
-    * set *tmp71 null
   251 label *label55
   252 printflush message1
   253 set .SORTER sorter1
 
   282 set *tmp83 "[] from vault #"
   283 label *label59
   284 set .DIRECTION *tmp83
-    * set *tmp74 .DIRECTION
   285 jump *label57 always
   286 label *label56
   287 op greaterThan *tmp84 LINK_ID 0
 
   312 set *tmp96 "[] to vault #"
   313 label *label61
   314 set .DIRECTION *tmp96
-    * set *tmp74 .DIRECTION
   315 label *label57
   316 op equal *tmp97 LINK_ID 0
   317 jump *label62 equal *tmp97 false
 
   334 set .DROP_TARGET .CORE
   335 set .DROP_X .CORE_X
   336 set .DROP_Y .CORE_Y
-    * set *tmp104 .DROP_Y
   337 jump *label65 always
   338 label *label64
   339 sensor *tmp105 .DROP_TARGET @x
   340 set .DROP_X *tmp105
   341 sensor *tmp106 .DROP_TARGET @y
   342 set .DROP_Y *tmp106
-    * set *tmp104 .DROP_Y
   343 label *label65
   344 set .LAST_ITEM @mono
   345 set :iter 0
 
   366 print UNIT
   367 print " "
   368 print "found. 2"
-    * set *tmp116 null
   369 jump *label76 always
   370 label *label75
   371 sensor *tmp117 @unit @controlled
 
   378 set *tmp119 null
   379 jump *label78 always
   380 label *label77
-    * set *tmp114 null
   381 jump *label71 always
   382 set *tmp119 null
   383 label *label78
-    * set *tmp116 *tmp119
   384 label *label76
   385 printflush message1
   386 label *label73
   387 jump *label72 always
   388 label *label74
-    * set *tmp114 null
   389 label *label71
   390 ucontrol flag 1
   391 set :state 1
-    * set *tmp113 :state
   392 jump *label70 always
   393 label *label69
-    * set *tmp113 null
   394 label *label70
   395 sensor *tmp120 .SORTER @config
   396 set .ITEM *tmp120
 
   408 label *label83
   409 set .LAST_ITEM .ITEM
   410 set :state 1
-    * set *tmp122 :state
   411 jump *label80 always
   412 label *label79
-    * set *tmp122 null
   413 label *label80
   414 set :show_state 0
   415 op equal *tmp125 :state 1
 
   442 label *label89
   443 set *tmp129 *tmp132
   444 label *label87
-    * set *tmp126 *tmp129
   445 jump *label85 always
   446 label *label84
-    * set *tmp126 null
   447 label *label85
   448 op equal *tmp135 :state 2
   449 jump *label92 equal *tmp135 false
 
   472 set :show_state 2
   473 set *tmp138 :show_state
   474 label *label95
-    * set *tmp136 *tmp138
   475 jump *label93 always
   476 label *label92
-    * set *tmp136 null
   477 label *label93
   478 op equal *tmp145 :state 3
   479 jump *label98 equal *tmp145 false
 
   503 set :show_state 3
   504 set *tmp148 :show_state
   505 label *label101
-    * set *tmp146 *tmp148
   506 jump *label99 always
   507 label *label98
-    * set *tmp146 null
   508 label *label99
   509 op greaterThan *tmp155 :iter 3
   510 jump *label104 equal *tmp155 false
 
   526 print .LOCAL_MARGIN
   527 print "["
   528 print "])"
-    * set *tmp159 null
   529 jump *label107 always
   530 label *label106
-    * set *tmp159 null
   531 label *label107
   532 jump *label108 equal .SHOW_REMOTE_LEVEL false
   533 sensor *tmp161 .CORE .ITEM
 
   547 label *label110
   548 set *tmp163 null
   549 label *label111
-    * set *tmp160 *tmp163
   550 jump *label109 always
   551 label *label108
-    * set *tmp160 null
   552 label *label109
   553 sensor *tmp164 @unit @totalItems
   554 print .MSG
 
   594 label *label117
   595 set *tmp167 *tmp176
   596 label *label115
-    * set *tmp165 *tmp167
   597 jump *label113 always
   598 label *label112
-    * set *tmp165 null
   599 label *label113
   600 op floor *tmp184 :loop_time
   601 print "[lightgray]Loop time: "
 
   607 op equal *tmp186 *tmp185 0
   608 jump *label118 equal *tmp186 false
   609 jump *label68 always
-    * set *tmp187 null
   610 jump *label119 always
   611 label *label118
-    * set *tmp187 null
   612 label *label119
   613 sensor *tmp188 .SRC @dead
   614 op notEqual *tmp189 *tmp188 0
   615 jump *label120 equal *tmp189 false
   616 jump *label68 always
-    * set *tmp190 null
   617 jump *label121 always
   618 label *label120
-    * set *tmp190 null
   619 label *label121
   620 sensor *tmp191 .DST @dead
   621 op notEqual *tmp192 *tmp191 0
   622 jump *label122 equal *tmp192 false
   623 jump *label68 always
-    * set *tmp193 null
   624 jump *label123 always
   625 label *label122
-    * set *tmp193 null
   626 label *label123
   627 sensor *tmp194 .SORTER @dead
   628 op notEqual *tmp195 *tmp194 0
 
   633 label *label124
   634 set *tmp196 null
   635 label *label125
-    * set *tmp156 *tmp196
   636 jump *label105 always
   637 label *label104
   638 op add :iter :iter 1
-    * set *tmp156 :iter
   639 label *label105
   640 op sub *tmp197 @time :start
   641 set :loop_time *tmp197
 
   677 label *label132
   678 jump *label131 always
   679 label *label133
-    * set *tmp206 null
   680 jump *label130 always
   681 label *label129
-    * set *tmp206 null
   682 label *label130
   683 end

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
    80 print UNIT
    81 print "."
    82 print ".."
-    * set *tmp22 null
    83 jump *label24 always
    84 label *label23
-    * set *tmp17 null
    85 jump *label17 always
-    * set *tmp22 null
    86 label *label24
    87 label *label22
    88 printflush message1
    89 label *label19
    90 jump *label18 always
    91 label *label20
-    * set *tmp17 null
    92 label *label17
    93 label *label6
    94 label *label4
 
   144 print "\"
   145 print "n"
   146 print "[salmon]Item dump must be a container or a vault!"
-    * set *tmp39 null
   147 jump *label36 always
   148 label *label35
   149 jump *label27 always
-    * set *tmp39 null
   150 label *label36
   151 label *label34
   152 printflush message1
 
   214 label *label47
   215 set *tmp63 null
   216 label *label48
-    * set *tmp51 *tmp63
   217 jump *label43 always
   218 label *label42
-    * set *tmp51 null
   219 label *label43
   220 label *label38
   221 op equal *tmp64 .CORE null
 
   367 print UNIT
   368 print "."
   369 print ".."
-    * set *tmp119 null
   370 jump *label78 always
   371 label *label77
   372 jump *label71 always
-    * set *tmp119 null
   373 label *label78
   374 label *label76
   375 printflush message1
 
   408 op equal *tmp128 *tmp127 .ITEM
   409 jump *label86 equal *tmp128 false
   410 set :state 3
-    * set *tmp129 :state
   411 jump *label87 always
   412 label *label86
   413 sensor *tmp130 @unit @totalItems
 
   429 label *label91
   430 set *tmp132 *tmp134
   431 label *label89
-    * set *tmp129 *tmp132
   432 label *label87
   433 jump *label85 always
   434 label *label84
 
   452 set .MSG "\nLoading items: [green]"
   453 set *tmp144 .MSG
   454 label *label97
-    * set *tmp138 *tmp144
   455 jump *label95 always
   456 label *label94
   457 ucontrol approach .SRC_X .SRC_Y 6
   458 set .MSG "\nGoing to source: [green]"
   459 set :show_state 2
-    * set *tmp138 :show_state
   460 label *label95
   461 jump *label93 always
   462 label *label92
 
   481 set .MSG "\nDropping items: [green]"
   482 set *tmp154 .MSG
   483 label *label103
-    * set *tmp148 *tmp154
   484 jump *label101 always
   485 label *label100
   486 ucontrol approach .DST_X .DST_Y 6
   487 set .MSG "\nGoing to destination: [green]"
   488 set :show_state 3
-    * set *tmp148 :show_state
   489 label *label101
   490 jump *label99 always
   491 label *label98
 
   526 print .REMOTE_MARGIN
   527 print "["
   528 print "])"
-    * set *tmp163 null
   529 jump *label111 always
   530 label *label110
-    * set *tmp163 null
   531 label *label111
   532 jump *label109 always
   533 label *label108
 
   552 print " "
   553 print "sec[]"
   554 print "\n"
-    * set *tmp167 null
   555 jump *label115 always
   556 label *label114
   557 op equal *tmp175 :show_state 3
 
   573 label *label116
   574 set *tmp176 null
   575 label *label117
-    * set *tmp167 *tmp176
   576 label *label115
   577 jump *label113 always
   578 label *label112
 
   608 op notEqual *tmp195 *tmp194 0
   609 jump *label124 equal *tmp195 false
   610 jump *label68 always
-    * set *tmp196 null
   611 jump *label125 always
   612 label *label124
-    * set *tmp196 null
   613 label *label125
   614 jump *label105 always
   615 label *label104

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   209 op notEqual *tmp62 :b_type @vault
   210 jump *label47 equal *tmp62 false
   211 set .CORE null
-    * set *tmp63 .CORE
   212 jump *label48 always
   213 label *label47
-    * set *tmp63 null
   214 label *label48
   215 jump *label43 always
   216 label *label42
 
   412 op equal *tmp131 *tmp130 0
   413 jump *label88 equal *tmp131 false
   414 set :state 2
-    * set *tmp132 :state
   415 jump *label89 always
   416 label *label88
   417 set .MSG "\nUnloading previous items: [green]"
 
   424 label *label90
   425 set *tmp134 null
   426 label *label91
-    * set *tmp132 *tmp134
   427 label *label89
   428 label *label87
   429 jump *label85 always
 
   442 op greaterThanEq *tmp143 *tmp142 .UNIT_CAPACITY
   443 jump *label96 equal *tmp143 false
   444 set :state 3
-    * set *tmp144 :state
   445 jump *label97 always
   446 label *label96
   447 set .MSG "\nLoading items: [green]"
-    * set *tmp144 .MSG
   448 label *label97
   449 jump *label95 always
   450 label *label94
 
   469 jump *label102 equal *tmp153 false
   470 set :state 2
   471 ucontrol approach .SRC_X .SRC_Y 6
-    * set *tmp154 null
   472 jump *label103 always
   473 label *label102
   474 set .MSG "\nDropping items: [green]"
-    * set *tmp154 .MSG
   475 label *label103
   476 jump *label101 always
   477 label *label100
 
   560 print " "
   561 print "sec[]"
   562 print "\n"
-    * set *tmp176 null
   563 jump *label117 always
   564 label *label116
-    * set *tmp176 null
   565 label *label117
   566 label *label115
   567 jump *label113 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   419 ucontrol within .DROP_X .DROP_Y 8 *tmp133
   420 jump *label90 equal *tmp133 false
   421 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
-    * set *tmp134 null
   422 jump *label91 always
   423 label *label90
-    * set *tmp134 null
   424 label *label91
   425 label *label89
   426 label *label87

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-38 instructions):
 
     1 set LINK_ID 0
     2 set LOCAL_LIMIT 100
     3 set REMOTE_LIMIT 100
-    * op max *tmp0 LOCAL_LIMIT 20
-    * set .EFF_LOCAL_LIMIT *tmp0
-    * op max *tmp1 REMOTE_LIMIT 20
-    * set .EFF_REMOTE_LIMIT *tmp1
+    4 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
+    5 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
     6 set .MSG null
     7 label *label0
     8 sensor *tmp2 switch1 @enabled
 
    27 ubind UNIT
    28 op notEqual *tmp7 @unit null
    29 jump *label10 equal *tmp7 false
-    * set *tmp9 @unit
-    * set :rebindUnit:first_unit *tmp9
+   30 set :rebindUnit:first_unit @unit
    31 jump *label9 always
    32 jump *label11 always
    33 label *label10
 
    91 label *label4
    92 jump *label3 always
    93 label *label5
-    * sensor *tmp23 @unit @itemCapacity
-    * set .UNIT_CAPACITY *tmp23
+   94 sensor .UNIT_CAPACITY @unit @itemCapacity
    95 sensor *tmp24 @unit @speed
-    * op div *tmp25 *tmp24 10
-    * set .SPEED_SEC *tmp25
+   96 op div .SPEED_SEC *tmp24 10
    97 ucontrol flag 1
    98 label *label25
    99 jump *label27 equal true false
   100 set .CONTAINER null
   101 set .DROP_TARGET null
-    * set *tmp26 @links
-    * set :n *tmp26
+  102 set :n @links
   103 label *label28
   104 op greaterThan *tmp27 :n 0
   105 jump *label30 equal *tmp27 false
-    * op sub *tmp28 :n 1
-    * set :n *tmp28
-    * getlink *tmp29 :n
-    * set :block *tmp29
+  106 op sub :n :n 1
+  107 getlink :block :n
   108 sensor *tmp30 :block @itemCapacity
   109 op greaterThan *tmp31 *tmp30 0
   110 jump *label31 equal *tmp31 false
 
   152 jump *label37 equal *tmp40 false
   153 print "[gold]Locating core..."
   154 printflush message1
-    * ulocate building core false @copper .CORE_X .CORE_Y *tmp43 *tmp42
-    * set .CORE *tmp42
+  155 ulocate building core false @copper .CORE_X .CORE_Y *tmp43 .CORE
   156 jump *label38 always
   157 label *label37
   158 print "[gold]Locating vault #"
 
   160 print "."
   161 print ".."
   162 printflush message1
-    * op add *tmp44 99999900 LINK_ID
-    * set .QUERY_FLAG *tmp44
+  163 op add .QUERY_FLAG 99999900 LINK_ID
   164 set :flag .QUERY_FLAG
   165 ucontrol flag :flag
   166 label *label39
 
   170 op land *tmp48 *tmp45 *tmp47
   171 jump *label41 equal *tmp48 false
   172 ucontrol stop
-    * sensor *tmp49 @unit @flag
-    * set :flag *tmp49
+  173 sensor :flag @unit @flag
   174 label *label40
   175 jump *label39 always
   176 label *label41
   177 op notEqual *tmp50 :flag .QUERY_FLAG
   178 jump *label42 equal *tmp50 false
-    * op idiv *tmp52 :flag 100
-    * set :position *tmp52
-    * op mod *tmp53 :position @mapw
-    * set .CORE_X *tmp53
-    * op idiv *tmp54 :position @mapw
-    * set .CORE_Y *tmp54
+  179 op idiv :position :flag 100
+  180 op mod .CORE_X :position @mapw
+  181 op idiv .CORE_Y :position @mapw
   182 label *label44
   183 ucontrol within .CORE_X .CORE_Y 8 *tmp55
   184 op equal *tmp56 *tmp55 false
 
   190 label *label45
   191 jump *label44 always
   192 label *label46
-    * ucontrol getBlock .CORE_X .CORE_Y :b_type *tmp60 *tmp61
-    * set .CORE *tmp60
+  193 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
   194 op notEqual *tmp62 :b_type @vault
   195 jump *label47 equal *tmp62 false
   196 set .CORE null
 
   208 label *label49
   209 label *label50
   210 set .SORTER sorter1
-    * sensor *tmp66 .SORTER @type
-    * set :sorter_type *tmp66
+  211 sensor :sorter_type .SORTER @type
   212 label *label51
   213 op notEqual *tmp67 :sorter_type @sorter
   214 op notEqual *tmp68 :sorter_type @inverted-sorter
 
   225 label *label55
   226 printflush message1
   227 set .SORTER sorter1
-    * sensor *tmp72 .SORTER @type
-    * set :sorter_type *tmp72
+  228 sensor :sorter_type .SORTER @type
   229 label *label52
   230 jump *label51 always
   231 label *label53
 
   234 set .SHOW_REMOTE_LEVEL true
   235 set .SRC .CORE
   236 set .DST .CONTAINER
-    * sensor *tmp75 .SRC @itemCapacity
-    * set :src_capacity *tmp75
-    * sensor *tmp76 .DST @itemCapacity
-    * set :dst_capacity *tmp76
+  237 sensor :src_capacity .SRC @itemCapacity
+  238 sensor :dst_capacity .DST @itemCapacity
   239 op sub *tmp77 100 .EFF_REMOTE_LIMIT
   240 op mul *tmp78 :src_capacity *tmp77
-    * op idiv *tmp79 *tmp78 100
-    * set .LOAD_LEVEL *tmp79
+  241 op idiv .LOAD_LEVEL *tmp78 100
   242 op mul *tmp80 :dst_capacity .EFF_LOCAL_LIMIT
-    * op idiv *tmp81 *tmp80 100
-    * set .DROP_LEVEL *tmp81
+  243 op idiv .DROP_LEVEL *tmp80 100
   244 set .LOCAL_MARGIN .DROP_LEVEL
   245 set .REMOTE_MARGIN .LOAD_LEVEL
   246 op equal *tmp82 LINK_ID 0
 
   253 set .DIRECTION *tmp83
   254 jump *label57 always
   255 label *label56
-    * op greaterThan *tmp84 LINK_ID 0
-    * set .SHOW_REMOTE_LEVEL *tmp84
+  256 op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
   257 set .SRC .CONTAINER
   258 set .DST .CORE
-    * sensor *tmp85 .SRC @itemCapacity
-    * set :src_capacity *tmp85
-    * sensor *tmp86 .DST @itemCapacity
-    * set :dst_capacity *tmp86
+  259 sensor :src_capacity .SRC @itemCapacity
+  260 sensor :dst_capacity .DST @itemCapacity
   261 op sub *tmp87 100 .EFF_LOCAL_LIMIT
   262 op mul *tmp88 :src_capacity *tmp87
-    * op idiv *tmp89 *tmp88 100
-    * set .LOAD_LEVEL *tmp89
+  263 op idiv .LOAD_LEVEL *tmp88 100
   264 op mul *tmp90 :dst_capacity .EFF_REMOTE_LIMIT
   265 op idiv *tmp91 *tmp90 100
   266 op equal *tmp92 LINK_ID 0
   267 op mul *tmp93 *tmp92 .UNIT_CAPACITY
-    * op add *tmp94 *tmp91 *tmp93
-    * set .DROP_LEVEL *tmp94
+  268 op add .DROP_LEVEL *tmp91 *tmp93
   269 set .LOCAL_MARGIN .LOAD_LEVEL
   270 set .REMOTE_MARGIN .DROP_LEVEL
   271 op equal *tmp95 LINK_ID 0
 
   285 set *tmp98 LINK_ID
   286 label *label63
   287 set .LINK_TXT *tmp98
-    * sensor *tmp99 .SRC @x
-    * set .SRC_X *tmp99
-    * sensor *tmp100 .SRC @y
-    * set .SRC_Y *tmp100
-    * sensor *tmp101 .DST @x
-    * set .DST_X *tmp101
-    * sensor *tmp102 .DST @y
-    * set .DST_Y *tmp102
+  288 sensor .SRC_X .SRC @x
+  289 sensor .SRC_Y .SRC @y
+  290 sensor .DST_X .DST @x
+  291 sensor .DST_Y .DST @y
   292 op equal *tmp103 .DROP_TARGET null
   293 jump *label64 equal *tmp103 false
   294 set .DROP_TARGET .CORE
 
   296 set .DROP_Y .CORE_Y
   297 jump *label65 always
   298 label *label64
-    * sensor *tmp105 .DROP_TARGET @x
-    * set .DROP_X *tmp105
-    * sensor *tmp106 .DROP_TARGET @y
-    * set .DROP_Y *tmp106
+  299 sensor .DROP_X .DROP_TARGET @x
+  300 sensor .DROP_Y .DROP_TARGET @y
   301 label *label65
   302 set .LAST_ITEM @mono
   303 set :iter 0
 
   306 ucontrol stop
   307 label *label66
   308 jump *label68 equal true false
-    * set *tmp107 @time
-    * set :start *tmp107
+  309 set :start @time
   310 sensor *tmp108 @unit @dead
   311 op strictEqual *tmp109 *tmp108 0
   312 sensor *tmp110 @unit @controller
 
   347 jump *label70 always
   348 label *label69
   349 label *label70
-    * sensor *tmp120 .SORTER @config
-    * set .ITEM *tmp120
+  350 sensor .ITEM .SORTER @config
   351 op notEqual *tmp121 .ITEM .LAST_ITEM
   352 jump *label79 equal *tmp121 false
   353 label *label81
 
   355 jump *label83 equal *tmp123 false
   356 print "[salmon]No item type selected for transport."
   357 printflush message1
-    * sensor *tmp124 .SORTER @config
-    * set .ITEM *tmp124
+  358 sensor .ITEM .SORTER @config
   359 label *label82
   360 jump *label81 always
   361 label *label83
 
   398 jump *label94 equal *tmp137 false
   399 sensor *tmp139 .SRC .ITEM
   400 op sub *tmp140 *tmp139 .LOAD_LEVEL
-    * op max *tmp141 *tmp140 0
-    * set :max_load *tmp141
+  401 op max :max_load *tmp140 0
   402 ucontrol itemTake .SRC .ITEM :max_load
   403 sensor *tmp142 @unit @totalItems
   404 op greaterThanEq *tmp143 *tmp142 .UNIT_CAPACITY
 
   423 jump *label100 equal *tmp147 false
   424 sensor *tmp149 .DST .ITEM
   425 op sub *tmp150 .DROP_LEVEL *tmp149
-    * op max *tmp151 *tmp150 0
-    * set :max_drop *tmp151
+  426 op max :max_drop *tmp150 0
   427 ucontrol itemDrop .DST :max_drop
   428 sensor *tmp152 @unit @totalItems
   429 op lessThanEq *tmp153 *tmp152 0
 
   566 label *label104
   567 op add :iter :iter 1
   568 label *label105
-    * op sub *tmp197 @time :start
-    * set :loop_time *tmp197
+  569 op sub :loop_time @time :start
   570 label *label67
   571 jump *label66 always
   572 label *label68

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-6 instructions):
 
    23 # "Function: inline def rebindUnit()"
    24 set :rebindUnit:first_unit null
    25 label *label7
-    * jump *label9 equal true false
    26 ubind UNIT
    27 op notEqual *tmp7 @unit null
    28 jump *label10 equal *tmp7 false
 
    59 label *label14
    60 # "Function: inline def findUnit()"
    61 label *label18
-    * jump *label20 equal true false
    62 ubind UNIT
    63 op equal *tmp18 @unit null
    64 jump *label21 equal *tmp18 false
 
    94 op div .SPEED_SEC *tmp24 10
    95 ucontrol flag 1
    96 label *label25
-    * jump *label27 equal true false
    97 set .CONTAINER null
    98 set .DROP_TARGET null
    99 set :n @links
 
   302 set :state 1
   303 ucontrol stop
   304 label *label66
-    * jump *label68 equal true false
   305 set :start @time
   306 sensor *tmp108 @unit @dead
   307 op strictEqual *tmp109 *tmp108 0
 
   311 jump *label69 equal *tmp112 false
   312 # "Function: inline def findUnit()"
   313 label *label72
-    * jump *label74 equal true false
   314 ubind UNIT
   315 op equal *tmp115 @unit null
   316 jump *label75 equal *tmp115 false
 
   485 print *tmp164
   486 print "[]"
   487 print "\n"
-    * jump *label112 equal true false
   488 op equal *tmp166 :show_state 2
   489 jump *label114 equal *tmp166 false
   490 sensor *tmp168 @unit @x

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-41 instructions):
 
     6 set .MSG null
     7 label *label0
     8 sensor *tmp2 switch1 @enabled
-    * op equal *tmp3 *tmp2 false
-    * jump *label2 equal *tmp3 false
+    9 jump *label2 notEqual *tmp2 false
    10 print "Unit Transport - Single"
    11 print "\n"
    12 print "Activate switch to start."
 
    23 set :rebindUnit:first_unit null
    24 label *label7
    25 ubind UNIT
-    * op notEqual *tmp7 @unit null
-    * jump *label10 equal *tmp7 false
+   26 jump *label10 equal @unit null
    27 set :rebindUnit:first_unit @unit
    28 jump *label9 always
    29 jump *label11 always
 
    39 label *label9
    40 label *label12
    41 sensor *tmp10 @unit @controller
-    * op equal *tmp11 *tmp10 @this
-    * jump *label15 equal *tmp11 false
+   42 jump *label15 notEqual *tmp10 @this
    43 jump *label6 always
    44 jump *label16 always
    45 label *label15
 
    57 # "Function: inline def findUnit()"
    58 label *label18
    59 ubind UNIT
-    * op equal *tmp18 @unit null
-    * jump *label21 equal *tmp18 false
+   60 jump *label21 notEqual @unit null
    61 print "[salmon]No unit of type "
    62 print UNIT
    63 print " "
 
    65 jump *label22 always
    66 label *label21
    67 sensor *tmp20 @unit @controlled
-    * op notEqual *tmp21 *tmp20 0
-    * jump *label23 equal *tmp21 false
+   68 jump *label23 equal *tmp20 0
    69 print "[salmon]Looking for a free "
    70 print UNIT
    71 print "."
 
    93 set .DROP_TARGET null
    94 set :n @links
    95 label *label28
-    * op greaterThan *tmp27 :n 0
-    * jump *label30 equal *tmp27 false
+   96 jump *label30 lessThanEq :n 0
    97 op sub :n :n 1
    98 getlink :block :n
    99 sensor *tmp30 :block @itemCapacity
-    * op greaterThan *tmp31 *tmp30 0
-    * jump *label31 equal *tmp31 false
+  100 jump *label31 lessThanEq *tmp30 0
   101 set .DROP_TARGET .CONTAINER
   102 set .CONTAINER :block
   103 jump *label32 always
 
   106 label *label29
   107 jump *label28 always
   108 label *label30
-    * op equal *tmp33 .CONTAINER null
-    * jump *label33 equal *tmp33 false
+  109 jump *label33 notEqual .CONTAINER null
   110 print "[salmon]No destination."
   111 print "\n"
   112 jump *label34 always
 
   137 set .CORE_Y null
   138 set .CORE_X .CORE_Y
   139 set .CORE .CORE_X
-    * op equal *tmp40 LINK_ID 0
-    * jump *label37 equal *tmp40 false
+  140 jump *label37 notEqual LINK_ID 0
   141 print "[gold]Locating core..."
   142 printflush message1
   143 ulocate building core false @copper .CORE_X .CORE_Y *tmp43 .CORE
 
   162 label *label40
   163 jump *label39 always
   164 label *label41
-    * op notEqual *tmp50 :flag .QUERY_FLAG
-    * jump *label42 equal *tmp50 false
+  165 jump *label42 equal :flag .QUERY_FLAG
   166 op idiv :position :flag 100
   167 op mod .CORE_X :position @mapw
   168 op idiv .CORE_Y :position @mapw
 
   178 jump *label44 always
   179 label *label46
   180 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
-    * op notEqual *tmp62 :b_type @vault
-    * jump *label47 equal *tmp62 false
+  181 jump *label47 equal :b_type @vault
   182 set .CORE null
   183 jump *label48 always
   184 label *label47
 
   187 label *label42
   188 label *label43
   189 label *label38
-    * op equal *tmp64 .CORE null
-    * jump *label49 equal *tmp64 false
+  190 jump *label49 notEqual .CORE null
   191 end
   192 jump *label50 always
   193 label *label49
 
   201 jump *label53 equal *tmp69 false
   202 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   203 print "\n"
-    * op notEqual *tmp70 .SORTER null
-    * jump *label54 equal *tmp70 false
+  204 jump *label54 equal .SORTER null
   205 print "Block found: "
   206 print .SORTER
   207 jump *label55 always
 
   213 label *label52
   214 jump *label51 always
   215 label *label53
-    * op equal *tmp73 :sorter_type @sorter
-    * jump *label56 equal *tmp73 false
+  216 jump *label56 notEqual :sorter_type @sorter
   217 set .SHOW_REMOTE_LEVEL true
   218 set .SRC .CORE
   219 set .DST .CONTAINER
 
   226 op idiv .DROP_LEVEL *tmp80 100
   227 set .LOCAL_MARGIN .DROP_LEVEL
   228 set .REMOTE_MARGIN .LOAD_LEVEL
-    * op equal *tmp82 LINK_ID 0
-    * jump *label58 equal *tmp82 false
+  229 jump *label58 notEqual LINK_ID 0
   230 set *tmp83 "[] from core"
   231 jump *label59 always
   232 label *label58
 
   250 op add .DROP_LEVEL *tmp91 *tmp93
   251 set .LOCAL_MARGIN .LOAD_LEVEL
   252 set .REMOTE_MARGIN .DROP_LEVEL
-    * op equal *tmp95 LINK_ID 0
-    * jump *label60 equal *tmp95 false
+  253 jump *label60 notEqual LINK_ID 0
   254 set *tmp96 "[] to core"
   255 jump *label61 always
   256 label *label60
 
   258 label *label61
   259 set .DIRECTION *tmp96
   260 label *label57
-    * op equal *tmp97 LINK_ID 0
-    * jump *label62 equal *tmp97 false
+  261 jump *label62 notEqual LINK_ID 0
   262 set *tmp98 ""
   263 jump *label63 always
   264 label *label62
 
   269 sensor .SRC_Y .SRC @y
   270 sensor .DST_X .DST @x
   271 sensor .DST_Y .DST @y
-    * op equal *tmp103 .DROP_TARGET null
-    * jump *label64 equal *tmp103 false
+  272 jump *label64 notEqual .DROP_TARGET null
   273 set .DROP_TARGET .CORE
   274 set .DROP_X .CORE_X
   275 set .DROP_Y .CORE_Y
 
   289 op strictEqual *tmp109 *tmp108 0
   290 sensor *tmp110 @unit @controller
   291 op notEqual *tmp111 *tmp110 @this
-    * op lessThanEq *tmp112 *tmp109 *tmp111
-    * jump *label69 equal *tmp112 false
+  292 jump *label69 greaterThan *tmp109 *tmp111
   293 # "Function: inline def findUnit()"
   294 label *label72
   295 ubind UNIT
-    * op equal *tmp115 @unit null
-    * jump *label75 equal *tmp115 false
+  296 jump *label75 notEqual @unit null
   297 print "[salmon]No unit of type "
   298 print UNIT
   299 print " "
 
   301 jump *label76 always
   302 label *label75
   303 sensor *tmp117 @unit @controlled
-    * op notEqual *tmp118 *tmp117 0
-    * jump *label77 equal *tmp118 false
+  304 jump *label77 equal *tmp117 0
   305 print "[salmon]Looking for a free "
   306 print UNIT
   307 print "."
 
   322 label *label69
   323 label *label70
   324 sensor .ITEM .SORTER @config
-    * op notEqual *tmp121 .ITEM .LAST_ITEM
-    * jump *label79 equal *tmp121 false
+  325 jump *label79 equal .ITEM .LAST_ITEM
   326 label *label81
-    * op equal *tmp123 .ITEM null
-    * jump *label83 equal *tmp123 false
+  327 jump *label83 notEqual .ITEM null
   328 print "[salmon]No item type selected for transport."
   329 printflush message1
   330 sensor .ITEM .SORTER @config
 
   337 label *label79
   338 label *label80
   339 set :show_state 0
-    * op equal *tmp125 :state 1
-    * jump *label84 equal *tmp125 false
+  340 jump *label84 notEqual :state 1
   341 sensor *tmp127 @unit @firstItem
-    * op equal *tmp128 *tmp127 .ITEM
-    * jump *label86 equal *tmp128 false
+  342 jump *label86 notEqual *tmp127 .ITEM
   343 set :state 3
   344 jump *label87 always
   345 label *label86
   346 sensor *tmp130 @unit @totalItems
-    * op equal *tmp131 *tmp130 0
-    * jump *label88 equal *tmp131 false
+  347 jump *label88 notEqual *tmp130 0
   348 set :state 2
   349 jump *label89 always
   350 label *label88
 
   361 jump *label85 always
   362 label *label84
   363 label *label85
-    * op equal *tmp135 :state 2
-    * jump *label92 equal *tmp135 false
+  364 jump *label92 notEqual :state 2
   365 ucontrol within .SRC_X .SRC_Y 8 *tmp137
   366 jump *label94 equal *tmp137 false
   367 sensor *tmp139 .SRC .ITEM
 
   369 op max :max_load *tmp140 0
   370 ucontrol itemTake .SRC .ITEM :max_load
   371 sensor *tmp142 @unit @totalItems
-    * op greaterThanEq *tmp143 *tmp142 .UNIT_CAPACITY
-    * jump *label96 equal *tmp143 false
+  372 jump *label96 lessThan *tmp142 .UNIT_CAPACITY
   373 set :state 3
   374 jump *label97 always
   375 label *label96
 
   384 jump *label93 always
   385 label *label92
   386 label *label93
-    * op equal *tmp145 :state 3
-    * jump *label98 equal *tmp145 false
+  387 jump *label98 notEqual :state 3
   388 ucontrol within .DST_X .DST_Y 8 *tmp147
   389 jump *label100 equal *tmp147 false
   390 sensor *tmp149 .DST .ITEM
 
   392 op max :max_drop *tmp150 0
   393 ucontrol itemDrop .DST :max_drop
   394 sensor *tmp152 @unit @totalItems
-    * op lessThanEq *tmp153 *tmp152 0
-    * jump *label102 equal *tmp153 false
+  395 jump *label102 greaterThan *tmp152 0
   396 set :state 2
   397 ucontrol approach .SRC_X .SRC_Y 6
   398 jump *label103 always
 
   408 jump *label99 always
   409 label *label98
   410 label *label99
-    * op greaterThan *tmp155 :iter 3
-    * jump *label104 equal *tmp155 false
+  411 jump *label104 lessThanEq :iter 3
   412 set :iter 0
   413 print "Moving [green]"
   414 print .ITEM
 
   421 print *tmp157
   422 print "["
   423 print "]"
-    * op lessThan *tmp158 .EFF_LOCAL_LIMIT 100
-    * jump *label106 equal *tmp158 false
+  424 jump *label106 greaterThanEq .EFF_LOCAL_LIMIT 100
   425 print " (limit [orange]"
   426 print .LOCAL_MARGIN
   427 print "["
 
   436 print *tmp161
   437 print "["
   438 print "]"
-    * op lessThan *tmp162 .EFF_REMOTE_LIMIT 100
-    * jump *label110 equal *tmp162 false
+  439 jump *label110 greaterThanEq .EFF_REMOTE_LIMIT 100
   440 print " (limit [orange]"
   441 print .REMOTE_MARGIN
   442 print "["
 
   452 print *tmp164
   453 print "[]"
   454 print "\n"
-    * op equal *tmp166 :show_state 2
-    * jump *label114 equal *tmp166 false
+  455 jump *label114 notEqual :show_state 2
   456 sensor *tmp168 @unit @x
   457 op sub *tmp169 .SRC_X *tmp168
   458 sensor *tmp170 @unit @y
 
   467 print "\n"
   468 jump *label115 always
   469 label *label114
-    * op equal *tmp175 :show_state 3
-    * jump *label116 equal *tmp175 false
+  470 jump *label116 notEqual :show_state 3
   471 sensor *tmp177 @unit @x
   472 op sub *tmp178 .DST_X *tmp177
   473 sensor *tmp179 @unit @y
 
   494 print "\n"
   495 printflush message1
   496 sensor *tmp185 switch1 @enabled
-    * op equal *tmp186 *tmp185 0
-    * jump *label118 equal *tmp186 false
+  497 jump *label118 notEqual *tmp185 0
   498 jump *label68 always
   499 jump *label119 always
   500 label *label118
   501 label *label119
   502 sensor *tmp188 .SRC @dead
-    * op notEqual *tmp189 *tmp188 0
-    * jump *label120 equal *tmp189 false
+  503 jump *label120 equal *tmp188 0
   504 jump *label68 always
   505 jump *label121 always
   506 label *label120
   507 label *label121
   508 sensor *tmp191 .DST @dead
-    * op notEqual *tmp192 *tmp191 0
-    * jump *label122 equal *tmp192 false
+  509 jump *label122 equal *tmp191 0
   510 jump *label68 always
   511 jump *label123 always
   512 label *label122
   513 label *label123
   514 sensor *tmp194 .SORTER @dead
-    * op notEqual *tmp195 *tmp194 0
-    * jump *label124 equal *tmp195 false
+  515 jump *label124 equal *tmp194 0
   516 jump *label68 always
   517 jump *label125 always
   518 label *label124
 
   528 label *label126
   529 sensor *tmp198 .SORTER @dead
   530 op strictEqual *tmp199 *tmp198 0
-    * op equal *tmp200 *tmp199 false
-    * jump *label128 equal *tmp200 false
+  531 jump *label128 notEqual *tmp199 false
   532 print "[salmon]sorter1 is missing!"
   533 print "\n"
   534 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   548 control enabled switch1 false
   549 label *label131
   550 sensor *tmp208 switch1 @enabled
-    * op equal *tmp209 *tmp208 false
-    * jump *label133 equal *tmp209 false
+  551 jump *label133 notEqual *tmp208 false
   552 print "[salmon]Local or remote container became invalid."
   553 print "\n"
   554 print "[gold]Please fix and press button to reinitialize."

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-23 instructions):
 
    26 jump *label10 equal @unit null
    27 set :rebindUnit:first_unit @unit
    28 jump *label9 always
-    * jump *label11 always
    29 label *label10
    30 label *label11
    31 print "[salmon]No unit of type "
 
    40 sensor *tmp10 @unit @controller
    41 jump *label15 notEqual *tmp10 @this
    42 jump *label6 always
-    * jump *label16 always
    43 label *label15
    44 label *label16
    45 ubind UNIT
 
    98 jump *label31 lessThanEq *tmp30 0
    99 set .DROP_TARGET .CONTAINER
   100 set .CONTAINER :block
-    * jump *label32 always
   101 label *label31
   102 label *label32
   103 label *label29
 
   177 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
   178 jump *label47 equal :b_type @vault
   179 set .CORE null
-    * jump *label48 always
   180 label *label47
   181 label *label48
-    * jump *label43 always
   182 label *label42
   183 label *label43
   184 label *label38
   185 jump *label49 notEqual .CORE null
   186 end
-    * jump *label50 always
   187 label *label49
   188 label *label50
   189 set .SORTER sorter1
 
   198 jump *label54 equal .SORTER null
   199 print "Block found: "
   200 print .SORTER
-    * jump *label55 always
   201 label *label54
   202 label *label55
   203 printflush message1
 
   311 label *label71
   312 ucontrol flag 1
   313 set :state 1
-    * jump *label70 always
   314 label *label69
   315 label *label70
   316 sensor .ITEM .SORTER @config
 
   325 label *label83
   326 set .LAST_ITEM .ITEM
   327 set :state 1
-    * jump *label80 always
   328 label *label79
   329 label *label80
   330 set :show_state 0
 
   344 ucontrol within .DROP_X .DROP_Y 8 *tmp133
   345 jump *label90 equal *tmp133 false
   346 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
-    * jump *label91 always
   347 label *label90
   348 label *label91
   349 label *label89
   350 label *label87
-    * jump *label85 always
   351 label *label84
   352 label *label85
   353 jump *label92 notEqual :state 2
 
   370 set .MSG "\nGoing to source: [green]"
   371 set :show_state 2
   372 label *label95
-    * jump *label93 always
   373 label *label92
   374 label *label93
   375 jump *label98 notEqual :state 3
 
   393 set .MSG "\nGoing to destination: [green]"
   394 set :show_state 3
   395 label *label101
-    * jump *label99 always
   396 label *label98
   397 label *label99
   398 jump *label104 lessThanEq :iter 3
 
   413 print .LOCAL_MARGIN
   414 print "["
   415 print "])"
-    * jump *label107 always
   416 label *label106
   417 label *label107
   418 jump *label108 equal .SHOW_REMOTE_LEVEL false
 
   427 print .REMOTE_MARGIN
   428 print "["
   429 print "])"
-    * jump *label111 always
   430 label *label110
   431 label *label111
-    * jump *label109 always
   432 label *label108
   433 label *label109
   434 sensor *tmp164 @unit @totalItems
 
   464 print " "
   465 print "sec[]"
   466 print "\n"
-    * jump *label117 always
   467 label *label116
   468 label *label117
   469 label *label115
-    * jump *label113 always
   470 label *label112
   471 label *label113
   472 op floor *tmp184 :loop_time
 
   478 sensor *tmp185 switch1 @enabled
   479 jump *label118 notEqual *tmp185 0
   480 jump *label68 always
-    * jump *label119 always
   481 label *label118
   482 label *label119
   483 sensor *tmp188 .SRC @dead
   484 jump *label120 equal *tmp188 0
   485 jump *label68 always
-    * jump *label121 always
   486 label *label120
   487 label *label121
   488 sensor *tmp191 .DST @dead
   489 jump *label122 equal *tmp191 0
   490 jump *label68 always
-    * jump *label123 always
   491 label *label122
   492 label *label123
   493 sensor *tmp194 .SORTER @dead
   494 jump *label124 equal *tmp194 0
   495 jump *label68 always
-    * jump *label125 always
   496 label *label124
   497 label *label125
   498 jump *label105 always
 
   536 label *label132
   537 jump *label131 always
   538 label *label133
-    * jump *label130 always
   539 label *label129
   540 label *label130
   541 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   132 jump *label25 always
   133 label *label27
   134 set .CORE_Y null
-    * set .CORE_X .CORE_Y
-    * set .CORE .CORE_X
+  135 set .CORE_X null
+  136 set .CORE .CORE_Y
   137 jump *label37 notEqual LINK_ID 0
   138 print "[gold]Locating core..."
   139 printflush message1
 
   147 printflush message1
   148 op add .QUERY_FLAG 99999900 LINK_ID
   149 set :flag .QUERY_FLAG
-    * ucontrol flag :flag
+  150 ucontrol flag .QUERY_FLAG
   151 label *label39
   152 op equal *tmp45 :flag .QUERY_FLAG
   153 sensor *tmp46 @unit @dead
 
   187 label *label49
   188 label *label50
   189 set .SORTER sorter1
-    * sensor :sorter_type .SORTER @type
+  190 sensor :sorter_type sorter1 @type
   191 label *label51
   192 op notEqual *tmp67 :sorter_type @sorter
   193 op notEqual *tmp68 :sorter_type @inverted-sorter
 
   202 label *label55
   203 printflush message1
   204 set .SORTER sorter1
-    * sensor :sorter_type .SORTER @type
+  205 sensor :sorter_type sorter1 @type
   206 label *label52
   207 jump *label51 always
   208 label *label53
 
   210 set .SHOW_REMOTE_LEVEL true
   211 set .SRC .CORE
   212 set .DST .CONTAINER
-    * sensor :src_capacity .SRC @itemCapacity
-    * sensor :dst_capacity .DST @itemCapacity
+  213 sensor :src_capacity .CORE @itemCapacity
+  214 sensor :dst_capacity .CONTAINER @itemCapacity
   215 op sub *tmp77 100 .EFF_REMOTE_LIMIT
   216 op mul *tmp78 :src_capacity *tmp77
   217 op idiv .LOAD_LEVEL *tmp78 100
 
   231 op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
   232 set .SRC .CONTAINER
   233 set .DST .CORE
-    * sensor :src_capacity .SRC @itemCapacity
-    * sensor :dst_capacity .DST @itemCapacity
+  234 sensor :src_capacity .CONTAINER @itemCapacity
+  235 sensor :dst_capacity .CORE @itemCapacity
   236 op sub *tmp87 100 .EFF_LOCAL_LIMIT
   237 op mul *tmp88 :src_capacity *tmp87
   238 op idiv .LOAD_LEVEL *tmp88 100
 
   400 print "Moving [green]"
   401 print .ITEM
   402 print .DIRECTION
-    * print .LINK_TXT
+  403 print *tmp98
   404 print "\"
   405 print "n"
   406 sensor *tmp157 .CONTAINER .ITEM

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   133 label *label27
   134 set .CORE_Y null
   135 set .CORE_X null
-    * set .CORE .CORE_Y
+  136 set .CORE null
   137 jump *label37 notEqual LINK_ID 0
   138 print "[gold]Locating core..."
   139 printflush message1
 
   257 label *label62
   258 set *tmp98 LINK_ID
   259 label *label63
-    * set .LINK_TXT *tmp98
   260 sensor .SRC_X .SRC @x
   261 sensor .SRC_Y .SRC @y
   262 sensor .DST_X .DST @x

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    92 set :n @links
    93 label *label28
    94 jump *label30 lessThanEq :n 0
+   95 label *label134
    96 op sub :n :n 1
    97 getlink :block :n
    98 sensor *tmp30 :block @itemCapacity
 
   102 label *label31
   103 label *label32
   104 label *label29
-    * jump *label28 always
+  105 jump *label134 greaterThan :n 0
   106 label *label30
   107 jump *label33 notEqual .CONTAINER null
   108 print "[salmon]No destination."
 
   317 jump *label79 equal .ITEM .LAST_ITEM
   318 label *label81
   319 jump *label83 notEqual .ITEM null
+  320 label *label135
   321 print "[salmon]No item type selected for transport."
   322 printflush message1
   323 sensor .ITEM .SORTER @config
   324 label *label82
-    * jump *label81 always
+  325 jump *label135 equal .ITEM null
   326 label *label83
   327 set .LAST_ITEM .ITEM
   328 set :state 1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-12 instructions):
 
   176 jump *label44 always
   177 label *label46
   178 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
-    * jump *label47 equal :b_type @vault
-    * set .CORE null
-    * label *label47
-    * label *label48
+  179 select .CORE notEqual :b_type @vault null .CORE
   180 label *label42
   181 label *label43
   182 label *label38
 
   217 op idiv .DROP_LEVEL *tmp80 100
   218 set .LOCAL_MARGIN .DROP_LEVEL
   219 set .REMOTE_MARGIN .LOAD_LEVEL
-    * jump *label58 notEqual LINK_ID 0
-    * set *tmp83 "[] from core"
-    * jump *label59 always
-    * label *label58
-    * set *tmp83 "[] from vault #"
-    * label *label59
+  220 select *tmp83 equal LINK_ID 0 "[] from core" "[] from vault #"
   221 set .DIRECTION *tmp83
   222 jump *label57 always
   223 label *label56
 
   236 op add .DROP_LEVEL *tmp91 *tmp93
   237 set .LOCAL_MARGIN .LOAD_LEVEL
   238 set .REMOTE_MARGIN .DROP_LEVEL
-    * jump *label60 notEqual LINK_ID 0
-    * set *tmp96 "[] to core"
-    * jump *label61 always
-    * label *label60
-    * set *tmp96 "[] to vault #"
-    * label *label61
+  239 select *tmp96 equal LINK_ID 0 "[] to core" "[] to vault #"
   240 set .DIRECTION *tmp96
   241 label *label57
-    * jump *label62 notEqual LINK_ID 0
-    * set *tmp98 ""
-    * jump *label63 always
-    * label *label62
-    * set *tmp98 LINK_ID
-    * label *label63
+  242 select *tmp98 equal LINK_ID 0 "" LINK_ID
   243 sensor .SRC_X .SRC @x
   244 sensor .SRC_Y .SRC @y
   245 sensor .DST_X .DST @x
 
   340 op sub *tmp140 *tmp139 .LOAD_LEVEL
   341 op max :max_load *tmp140 0
   342 ucontrol itemTake .SRC .ITEM :max_load
-    * sensor *tmp142 @unit @totalItems
-    * jump *label96 lessThan *tmp142 .UNIT_CAPACITY
-    * set :state 3
-    * jump *label97 always
-    * label *label96
-    * set .MSG "\nLoading items: [green]"
-    * label *label97
+  343 sensor *tmp142 @unit @totalItems
+  344 select :state greaterThanEq *tmp142 .UNIT_CAPACITY 3 :state
+  345 select .MSG greaterThanEq *tmp142 .UNIT_CAPACITY .MSG "\nLoading items: [green]"
   346 jump *label95 always
   347 label *label94
   348 ucontrol approach .SRC_X .SRC_Y 6

Modifications by Replicate loop condition at line 43:1 (+1 instructions):
 
     7 label *label0
     8 sensor *tmp2 switch1 @enabled
     9 jump *label2 notEqual *tmp2 false
+   10 label *label136
    11 print "Unit Transport - Single"
    12 print "\n"
    13 print "Activate switch to start."
    14 print "\n"
    15 printflush message1
    16 label *label1
-    * jump *label0 always
+   17 sensor *tmp2 switch1 @enabled
+   18 jump *label136 equal *tmp2 false
    19 label *label2
    20 label *label3
    21 sensor *tmp4 @unit @dead

Modifications by Replicate loop condition at line 51:1 (+2 instructions):
 
    21 sensor *tmp4 @unit @dead
    22 op strictNotEqual *tmp5 *tmp4 0
    23 jump *label5 equal *tmp5 false
+   24 label *label137
    25 # "Function: inline def rebindUnit()"
    26 set :rebindUnit:first_unit null
    27 label *label7
 
    83 label *label17
    84 label *label6
    85 label *label4
-    * jump *label3 always
+   86 sensor *tmp4 @unit @dead
+   87 op strictNotEqual *tmp5 *tmp4 0
+   88 jump *label137 notEqual *tmp5 false
    89 label *label5
    90 sensor .UNIT_CAPACITY @unit @itemCapacity
    91 sensor *tmp24 @unit @speed

Modifications by Replicate loop condition at line 304:1 (+2 instructions):
 
   491 sensor *tmp198 .SORTER @dead
   492 op strictEqual *tmp199 *tmp198 0
   493 jump *label128 notEqual *tmp199 false
+  494 label *label138
   495 print "[salmon]sorter1 is missing!"
   496 print "\n"
   497 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   500 printflush message2
   501 set .SORTER sorter1
   502 label *label127
-    * jump *label126 always
+  503 sensor *tmp198 .SORTER @dead
+  504 op strictEqual *tmp199 *tmp198 0
+  505 jump *label138 equal *tmp199 false
   506 label *label128
   507 sensor *tmp201 .SRC @dead
   508 op strictNotEqual *tmp202 *tmp201 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   500 printflush message2
   501 set .SORTER sorter1
   502 label *label127
-    * sensor *tmp198 .SORTER @dead
+  503 sensor *tmp198 sorter1 @dead
   504 op strictEqual *tmp199 *tmp198 0
   505 jump *label138 equal *tmp199 false
   506 label *label128

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   498 print "\n"
   499 printflush message1
   500 printflush message2
-    * set .SORTER sorter1
   501 label *label127
   502 sensor *tmp198 sorter1 @dead
   503 op strictEqual *tmp199 *tmp198 0

Modifications by Replicate loop condition at line 314:5 (+1 instructions):
 
   513 label *label131
   514 sensor *tmp208 switch1 @enabled
   515 jump *label133 notEqual *tmp208 false
+  516 label *label139
   517 print "[salmon]Local or remote container became invalid."
   518 print "\n"
   519 print "[gold]Please fix and press button to reinitialize."
 
   521 printflush message1
   522 printflush message2
   523 label *label132
-    * jump *label131 always
+  524 sensor *tmp208 switch1 @enabled
+  525 jump *label139 equal *tmp208 false
   526 label *label133
   527 label *label129
   528 label *label130

Modifications by Replicate loop condition at line 129:1 (+3 instructions):
 
   196 op notEqual *tmp68 :sorter_type @inverted-sorter
   197 op land *tmp69 *tmp67 *tmp68
   198 jump *label53 equal *tmp69 false
+  199 label *label140
   200 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   201 print "\n"
   202 jump *label54 equal .SORTER null
 
   208 set .SORTER sorter1
   209 sensor :sorter_type sorter1 @type
   210 label *label52
-    * jump *label51 always
+  211 op notEqual *tmp67 :sorter_type @sorter
+  212 op notEqual *tmp68 :sorter_type @inverted-sorter
+  213 op land *tmp69 *tmp67 *tmp68
+  214 jump *label140 notEqual *tmp69 false
   215 label *label53
   216 jump *label56 notEqual :sorter_type @sorter
   217 set .SHOW_REMOTE_LEVEL true

Modifications by Replicate loop condition at line 102:5 (+4 instructions):
 
   160 op strictEqual *tmp47 *tmp46 0
   161 op land *tmp48 *tmp45 *tmp47
   162 jump *label41 equal *tmp48 false
+  163 label *label141
   164 ucontrol stop
   165 sensor :flag @unit @flag
   166 label *label40
-    * jump *label39 always
+  167 op equal *tmp45 :flag .QUERY_FLAG
+  168 sensor *tmp46 @unit @dead
+  169 op strictEqual *tmp47 *tmp46 0
+  170 op land *tmp48 *tmp45 *tmp47
+  171 jump *label141 notEqual *tmp48 false
   172 label *label41
   173 jump *label42 equal :flag .QUERY_FLAG
   174 op idiv :position :flag 100

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   155 set :flag .QUERY_FLAG
   156 ucontrol flag .QUERY_FLAG
   157 label *label39
-    * op equal *tmp45 :flag .QUERY_FLAG
+  158 op equal *tmp45 .QUERY_FLAG .QUERY_FLAG
   159 sensor *tmp46 @unit @dead
   160 op strictEqual *tmp47 *tmp46 0
   161 op land *tmp48 *tmp45 *tmp47

Modifications by Replicate loop condition at line 110:9 (+5 instructions):
 
   181 op equal *tmp58 *tmp57 0
   182 op land *tmp59 *tmp56 *tmp58
   183 jump *label46 equal *tmp59 false
+  184 label *label142
   185 ucontrol approach .CORE_X .CORE_Y 6
   186 label *label45
-    * jump *label44 always
+  187 ucontrol within .CORE_X .CORE_Y 8 *tmp55
+  188 op equal *tmp56 *tmp55 false
+  189 sensor *tmp57 @unit @dead
+  190 op equal *tmp58 *tmp57 0
+  191 op land *tmp59 *tmp56 *tmp58
+  192 jump *label142 notEqual *tmp59 false
   193 label *label46
   194 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
   195 select .CORE notEqual :b_type @vault null .CORE

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   155 set :flag .QUERY_FLAG
   156 ucontrol flag .QUERY_FLAG
   157 label *label39
-    * op equal *tmp45 .QUERY_FLAG .QUERY_FLAG
+  158 set *tmp45 true
   159 sensor *tmp46 @unit @dead
   160 op strictEqual *tmp47 *tmp46 0
   161 op land *tmp48 *tmp45 *tmp47

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   158 set *tmp45 true
   159 sensor *tmp46 @unit @dead
   160 op strictEqual *tmp47 *tmp46 0
-    * op land *tmp48 *tmp45 *tmp47
+  161 op land *tmp48 true *tmp47
   162 jump *label41 equal *tmp48 false
   163 label *label141
   164 ucontrol stop

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   155 set :flag .QUERY_FLAG
   156 ucontrol flag .QUERY_FLAG
   157 label *label39
-    * set *tmp45 true
   158 sensor *tmp46 @unit @dead
   159 op strictEqual *tmp47 *tmp46 0
   160 op land *tmp48 true *tmp47

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-2 instructions):
 
   236 op idiv .DROP_LEVEL *tmp80 100
   237 set .LOCAL_MARGIN .DROP_LEVEL
   238 set .REMOTE_MARGIN .LOAD_LEVEL
-    * select *tmp83 equal LINK_ID 0 "[] from core" "[] from vault #"
-    * set .DIRECTION *tmp83
+  239 select .DIRECTION equal LINK_ID 0 "[] from core" "[] from vault #"
   240 jump *label57 always
   241 label *label56
   242 op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
 
   254 op add .DROP_LEVEL *tmp91 *tmp93
   255 set .LOCAL_MARGIN .LOAD_LEVEL
   256 set .REMOTE_MARGIN .DROP_LEVEL
-    * select *tmp96 equal LINK_ID 0 "[] to core" "[] to vault #"
-    * set .DIRECTION *tmp96
+  257 select .DIRECTION equal LINK_ID 0 "[] to core" "[] to vault #"
   258 label *label57
   259 select *tmp98 equal LINK_ID 0 "" LINK_ID
   260 sensor .SRC_X .SRC @x

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1:
 
   157 label *label39
   158 sensor *tmp46 @unit @dead
   159 op strictEqual *tmp47 *tmp46 0
-    * op land *tmp48 true *tmp47
+  160 set *tmp48 *tmp47
   161 jump *label41 equal *tmp48 false
   162 label *label141
   163 ucontrol stop

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1 (-1 instructions):
 
   156 ucontrol flag .QUERY_FLAG
   157 label *label39
   158 sensor *tmp46 @unit @dead
-    * op strictEqual *tmp47 *tmp46 0
-    * set *tmp48 *tmp47
+  159 op strictEqual *tmp48 *tmp46 0
   160 jump *label41 equal *tmp48 false
   161 label *label141
   162 ucontrol stop

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     4 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
     5 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
     6 set .MSG null
-    * label *label0
     7 sensor *tmp2 switch1 @enabled
     8 jump *label2 notEqual *tmp2 false
     9 label *label136
 
    12 print "Activate switch to start."
    13 print "\n"
    14 printflush message1
-    * label *label1
    15 sensor *tmp2 switch1 @enabled
    16 jump *label136 equal *tmp2 false
    17 label *label2
-    * label *label3
    18 sensor *tmp4 @unit @dead
    19 op strictNotEqual *tmp5 *tmp4 0
    20 jump *label5 equal *tmp5 false
 
    27 set :rebindUnit:first_unit @unit
    28 jump *label9 always
    29 label *label10
-    * label *label11
    30 print "[salmon]No unit of type "
    31 print UNIT
    32 print " "
    33 print "found. 1"
    34 printflush message1
-    * label *label8
    35 jump *label7 always
    36 label *label9
    37 label *label12
 
    39 jump *label15 notEqual *tmp10 @this
    40 jump *label6 always
    41 label *label15
-    * label *label16
    42 ubind UNIT
    43 print "[gold]Looking for old unit..."
    44 printflush message1
-    * label *label13
    45 op notEqual *tmp13 @unit :rebindUnit:first_unit
    46 sensor *tmp14 :rebindUnit:first_unit @dead
    47 op strictEqual *tmp15 *tmp14 0
    48 op land *tmp16 *tmp13 *tmp15
    49 jump *label12 notEqual *tmp16 false
-    * label *label14
    50 # "Function: inline def findUnit()"
    51 label *label18
    52 ubind UNIT
 
    69 label *label24
    70 label *label22
    71 printflush message1
-    * label *label19
    72 jump *label18 always
-    * label *label20
    73 label *label17
    74 label *label6
-    * label *label4
    75 sensor *tmp4 @unit @dead
    76 op strictNotEqual *tmp5 *tmp4 0
    77 jump *label137 notEqual *tmp5 false
 
    84 set .CONTAINER null
    85 set .DROP_TARGET null
    86 set :n @links
-    * label *label28
    87 jump *label30 lessThanEq :n 0
    88 label *label134
    89 op sub :n :n 1
 
    93 set .DROP_TARGET .CONTAINER
    94 set .CONTAINER :block
    95 label *label31
-    * label *label32
-    * label *label29
    96 jump *label134 greaterThan :n 0
    97 label *label30
    98 jump *label33 notEqual .CONTAINER null
 
   120 label *label36
   121 label *label34
   122 printflush message1
-    * label *label26
   123 jump *label25 always
   124 label *label27
   125 set .CORE_Y null
 
   139 op add .QUERY_FLAG 99999900 LINK_ID
   140 set :flag .QUERY_FLAG
   141 ucontrol flag .QUERY_FLAG
-    * label *label39
   142 sensor *tmp46 @unit @dead
   143 op strictEqual *tmp48 *tmp46 0
   144 jump *label41 equal *tmp48 false
   145 label *label141
   146 ucontrol stop
   147 sensor :flag @unit @flag
-    * label *label40
   148 op equal *tmp45 :flag .QUERY_FLAG
   149 sensor *tmp46 @unit @dead
   150 op strictEqual *tmp47 *tmp46 0
 
   155 op idiv :position :flag 100
   156 op mod .CORE_X :position @mapw
   157 op idiv .CORE_Y :position @mapw
-    * label *label44
   158 ucontrol within .CORE_X .CORE_Y 8 *tmp55
   159 op equal *tmp56 *tmp55 false
   160 sensor *tmp57 @unit @dead
 
   163 jump *label46 equal *tmp59 false
   164 label *label142
   165 ucontrol approach .CORE_X .CORE_Y 6
-    * label *label45
   166 ucontrol within .CORE_X .CORE_Y 8 *tmp55
   167 op equal *tmp56 *tmp55 false
   168 sensor *tmp57 @unit @dead
 
   173 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
   174 select .CORE notEqual :b_type @vault null .CORE
   175 label *label42
-    * label *label43
   176 label *label38
   177 jump *label49 notEqual .CORE null
   178 end
   179 label *label49
-    * label *label50
   180 set .SORTER sorter1
   181 sensor :sorter_type sorter1 @type
-    * label *label51
   182 op notEqual *tmp67 :sorter_type @sorter
   183 op notEqual *tmp68 :sorter_type @inverted-sorter
   184 op land *tmp69 *tmp67 *tmp68
 
   190 print "Block found: "
   191 print .SORTER
   192 label *label54
-    * label *label55
   193 printflush message1
   194 set .SORTER sorter1
   195 sensor :sorter_type sorter1 @type
-    * label *label52
   196 op notEqual *tmp67 :sorter_type @sorter
   197 op notEqual *tmp68 :sorter_type @inverted-sorter
   198 op land *tmp69 *tmp67 *tmp68
 
   279 label *label78
   280 label *label76
   281 printflush message1
-    * label *label73
   282 jump *label72 always
-    * label *label74
   283 label *label71
   284 ucontrol flag 1
   285 set :state 1
   286 label *label69
-    * label *label70
   287 sensor .ITEM .SORTER @config
   288 jump *label79 equal .ITEM .LAST_ITEM
-    * label *label81
   289 jump *label83 notEqual .ITEM null
   290 label *label135
   291 print "[salmon]No item type selected for transport."
   292 printflush message1
   293 sensor .ITEM .SORTER @config
-    * label *label82
   294 jump *label135 equal .ITEM null
   295 label *label83
   296 set .LAST_ITEM .ITEM
   297 set :state 1
   298 label *label79
-    * label *label80
   299 set :show_state 0
   300 jump *label84 notEqual :state 1
   301 sensor *tmp127 @unit @firstItem
 
   314 jump *label90 equal *tmp133 false
   315 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
   316 label *label90
-    * label *label91
   317 label *label89
   318 label *label87
   319 label *label84
-    * label *label85
   320 jump *label92 notEqual :state 2
   321 ucontrol within .SRC_X .SRC_Y 8 *tmp137
   322 jump *label94 equal *tmp137 false
 
   334 set :show_state 2
   335 label *label95
   336 label *label92
-    * label *label93
   337 jump *label98 notEqual :state 3
   338 ucontrol within .DST_X .DST_Y 8 *tmp147
   339 jump *label100 equal *tmp147 false
 
   356 set :show_state 3
   357 label *label101
   358 label *label98
-    * label *label99
   359 jump *label104 lessThanEq :iter 3
   360 set :iter 0
   361 print "Moving [green]"
 
   375 print "["
   376 print "])"
   377 label *label106
-    * label *label107
   378 jump *label108 equal .SHOW_REMOTE_LEVEL false
   379 sensor *tmp161 .CORE .ITEM
   380 print "\n"
 
   388 print "["
   389 print "])"
   390 label *label110
-    * label *label111
   391 label *label108
-    * label *label109
   392 sensor *tmp164 @unit @totalItems
   393 print .MSG
   394 print *tmp164
 
   423 print "sec[]"
   424 print "\n"
   425 label *label116
-    * label *label117
   426 label *label115
-    * label *label112
-    * label *label113
   427 op floor *tmp184 :loop_time
   428 print "[lightgray]Loop time: "
   429 print *tmp184
 
   434 jump *label118 notEqual *tmp185 0
   435 jump *label68 always
   436 label *label118
-    * label *label119
   437 sensor *tmp188 .SRC @dead
   438 jump *label120 equal *tmp188 0
   439 jump *label68 always
   440 label *label120
-    * label *label121
   441 sensor *tmp191 .DST @dead
   442 jump *label122 equal *tmp191 0
   443 jump *label68 always
   444 label *label122
-    * label *label123
   445 sensor *tmp194 .SORTER @dead
   446 jump *label124 equal *tmp194 0
   447 jump *label68 always
   448 label *label124
-    * label *label125
   449 jump *label105 always
   450 label *label104
   451 op add :iter :iter 1
   452 label *label105
   453 op sub :loop_time @time :start
-    * label *label67
   454 jump *label66 always
   455 label *label68
-    * label *label126
   456 sensor *tmp198 .SORTER @dead
   457 op strictEqual *tmp199 *tmp198 0
   458 jump *label128 notEqual *tmp199 false
 
   463 print "\n"
   464 printflush message1
   465 printflush message2
-    * label *label127
   466 sensor *tmp198 sorter1 @dead
   467 op strictEqual *tmp199 *tmp198 0
   468 jump *label138 equal *tmp199 false
 
   474 op or *tmp205 *tmp202 *tmp204
   475 jump *label129 equal *tmp205 false
   476 control enabled switch1 false
-    * label *label131
   477 sensor *tmp208 switch1 @enabled
   478 jump *label133 notEqual *tmp208 false
   479 label *label139
 
   483 print "\n"
   484 printflush message1
   485 printflush message2
-    * label *label132
   486 sensor *tmp208 switch1 @enabled
   487 jump *label139 equal *tmp208 false
   488 label *label133
   489 label *label129
-    * label *label130
   490 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-5 instructions):
 
    36 label *label9
    37 label *label12
    38 sensor *tmp10 @unit @controller
-    * jump *label15 notEqual *tmp10 @this
-    * jump *label6 always
+   39 jump *label6 equal *tmp10 @this
    40 label *label15
    41 ubind UNIT
    42 print "[gold]Looking for old unit..."
 
   430 print "\n"
   431 printflush message1
   432 sensor *tmp185 switch1 @enabled
-    * jump *label118 notEqual *tmp185 0
-    * jump *label68 always
+  433 jump *label68 equal *tmp185 0
   434 label *label118
   435 sensor *tmp188 .SRC @dead
-    * jump *label120 equal *tmp188 0
-    * jump *label68 always
+  436 jump *label68 notEqual *tmp188 0
   437 label *label120
   438 sensor *tmp191 .DST @dead
-    * jump *label122 equal *tmp191 0
-    * jump *label68 always
+  439 jump *label68 notEqual *tmp191 0
   440 label *label122
   441 sensor *tmp194 .SORTER @dead
-    * jump *label124 equal *tmp194 0
-    * jump *label68 always
+  442 jump *label68 notEqual *tmp194 0
   443 label *label124
   444 jump *label105 always
   445 label *label104

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
    37 label *label12
    38 sensor *tmp10 @unit @controller
    39 jump *label6 equal *tmp10 @this
-    * label *label15
    40 ubind UNIT
    41 print "[gold]Looking for old unit..."
    42 printflush message1
 
   430 printflush message1
   431 sensor *tmp185 switch1 @enabled
   432 jump *label68 equal *tmp185 0
-    * label *label118
   433 sensor *tmp188 .SRC @dead
   434 jump *label68 notEqual *tmp188 0
-    * label *label120
   435 sensor *tmp191 .DST @dead
   436 jump *label68 notEqual *tmp191 0
-    * label *label122
   437 sensor *tmp194 .SORTER @dead
   438 jump *label68 notEqual *tmp194 0
-    * label *label124
   439 jump *label105 always
   440 label *label104
   441 op add :iter :iter 1

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
+    0 label __start__
     1 set UNIT @mega
     2 set LINK_ID 0
     3 set LOCAL_LIMIT 100
 
    57 jump *label22 always
    58 label *label21
    59 sensor *tmp20 @unit @controlled
-    * jump *label23 equal *tmp20 0
+   60 jump *label17 equal *tmp20 0
    61 print "[salmon]Looking for a free "
    62 print UNIT
    63 print "."
 
   103 sensor *tmp36 .DROP_TARGET @itemCapacity
   104 op lessThan *tmp37 *tmp36 300
   105 op land *tmp38 *tmp35 *tmp37
-    * jump *label35 equal *tmp38 false
+  106 jump *label27 equal *tmp38 false
   107 print "Destination: "
   108 print .CONTAINER
   109 print "\"
 
   267 jump *label76 always
   268 label *label75
   269 sensor *tmp117 @unit @controlled
-    * jump *label77 equal *tmp117 0
+  270 jump *label71 equal *tmp117 0
   271 print "[salmon]Looking for a free "
   272 print UNIT
   273 print "."
 
   344 jump *label102 greaterThan *tmp152 0
   345 set :state 2
   346 ucontrol approach .SRC_X .SRC_Y 6
-    * jump *label103 always
+  347 jump *label101 always
   348 label *label102
   349 set .MSG "\nDropping items: [green]"
   350 label *label103
 
   463 sensor *tmp203 .DST @dead
   464 op strictNotEqual *tmp204 *tmp203 0
   465 op or *tmp205 *tmp202 *tmp204
-    * jump *label129 equal *tmp205 false
+  466 jump __start__ equal *tmp205 false
   467 control enabled switch1 false
   468 sensor *tmp208 switch1 @enabled
-    * jump *label133 notEqual *tmp208 false
+  469 jump __start__ notEqual *tmp208 false
   470 label *label139
   471 print "[salmon]Local or remote container became invalid."
   472 print "\n"

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-3 instructions):
 
    63 print "."
    64 print ".."
    65 jump *label24 always
-    * label *label23
-    * jump *label17 always
    66 label *label24
    67 label *label22
    68 printflush message1
 
   112 print "n"
   113 print "[salmon]Item dump must be a container or a vault!"
   114 jump *label36 always
-    * label *label35
-    * jump *label27 always
   115 label *label36
   116 label *label34
   117 printflush message1
 
   269 print "."
   270 print ".."
   271 jump *label78 always
-    * label *label77
-    * jump *label71 always
   272 label *label78
   273 label *label76
   274 printflush message1
 
   341 jump *label101 always
   342 label *label102
   343 set .MSG "\nDropping items: [green]"
-    * label *label103
   344 jump *label101 always
   345 label *label100
   346 ucontrol approach .DST_X .DST_Y 6
 
   469 printflush message2
   470 sensor *tmp208 switch1 @enabled
   471 jump *label139 equal *tmp208 false
-    * label *label133
-    * label *label129
   472 end

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-4 instructions):
 
    62 print UNIT
    63 print "."
    64 print ".."
-    * jump *label24 always
    65 label *label24
    66 label *label22
    67 printflush message1
 
   110 print "\"
   111 print "n"
   112 print "[salmon]Item dump must be a container or a vault!"
-    * jump *label36 always
   113 label *label36
   114 label *label34
   115 printflush message1
 
   266 print UNIT
   267 print "."
   268 print ".."
-    * jump *label78 always
   269 label *label78
   270 label *label76
   271 printflush message1
 
   466 printflush message2
   467 sensor *tmp208 switch1 @enabled
   468 jump *label139 equal *tmp208 false
-    * end

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    62 print UNIT
    63 print "."
    64 print ".."
-    * label *label24
    65 label *label22
    66 printflush message1
    67 jump *label18 always
 
   109 print "\"
   110 print "n"
   111 print "[salmon]Item dump must be a container or a vault!"
-    * label *label36
   112 label *label34
   113 printflush message1
   114 jump *label25 always
 
   264 print UNIT
   265 print "."
   266 print ".."
-    * label *label78
   267 label *label76
   268 printflush message1
   269 jump *label72 always

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
   119 jump *label37 notEqual LINK_ID 0
   120 print "[gold]Locating core..."
   121 printflush message1
-    * ulocate building core false @copper .CORE_X .CORE_Y *tmp43 .CORE
+  122 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   123 jump *label38 always
   124 label *label37
   125 print "[gold]Locating vault #"
 
   161 op land *tmp59 *tmp56 *tmp58
   162 jump *label142 notEqual *tmp59 false
   163 label *label46
-    * ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE *tmp61
+  164 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
   165 select .CORE notEqual :b_type @vault null .CORE
   166 label *label42
   167 label *label38

Modifications by Final phase, Print Merging, iteration 1 (-50 instructions):
 
     8 sensor *tmp2 switch1 @enabled
     9 jump *label2 notEqual *tmp2 false
    10 label *label136
-    * print "Unit Transport - Single"
-    * print "\n"
-    * print "Activate switch to start."
-    * print "\n"
+   11 print "Unit Transport - Single\nActivate switch to start.\n"
    12 printflush message1
    13 sensor *tmp2 switch1 @enabled
    14 jump *label136 equal *tmp2 false
 
    25 set :rebindUnit:first_unit @unit
    26 jump *label9 always
    27 label *label10
-    * print "[salmon]No unit of type "
-    * print UNIT
-    * print " "
-    * print "found. 1"
+   28 print "[salmon]No unit of type {0} found. 1"
+   29 format UNIT
    30 printflush message1
    31 jump *label7 always
    32 label *label9
 
    45 label *label18
    46 ubind UNIT
    47 jump *label21 notEqual @unit null
-    * print "[salmon]No unit of type "
-    * print UNIT
-    * print " "
-    * print "found. 2"
+   48 print "[salmon]No unit of type {0} found. 2"
+   49 format UNIT
    50 jump *label22 always
    51 label *label21
    52 sensor *tmp20 @unit @controlled
    53 jump *label17 equal *tmp20 0
-    * print "[salmon]Looking for a free "
-    * print UNIT
-    * print "."
-    * print ".."
+   54 print "[salmon]Looking for a free {0}..."
+   55 format UNIT
    56 label *label22
    57 printflush message1
    58 jump *label18 always
 
    82 jump *label134 greaterThan :n 0
    83 label *label30
    84 jump *label33 notEqual .CONTAINER null
-    * print "[salmon]No destination."
-    * print "\n"
+   85 print "[salmon]No destination.\n"
    86 jump *label34 always
    87 label *label33
    88 op notEqual *tmp35 .DROP_TARGET null
 
    90 op lessThan *tmp37 *tmp36 300
    91 op land *tmp38 *tmp35 *tmp37
    92 jump *label27 equal *tmp38 false
-    * print "Destination: "
-    * print .CONTAINER
-    * print "\"
-    * print "n"
-    * print "Item dump: "
-    * print .DROP_TARGET
-    * print "\"
-    * print "n"
-    * print "[salmon]Item dump must be a container or a vault!"
+   93 print "Destination: {0}\nItem dump: {0}\n[salmon]Item dump must be a container or a vault!"
+   94 format .CONTAINER
+   95 format .DROP_TARGET
    96 label *label34
    97 printflush message1
    98 jump *label25 always
 
   106 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   107 jump *label38 always
   108 label *label37
-    * print "[gold]Locating vault #"
-    * print LINK_ID
-    * print "."
-    * print ".."
+  109 print "[gold]Locating vault #{0}..."
+  110 format LINK_ID
   111 printflush message1
   112 op add .QUERY_FLAG 99999900 LINK_ID
   113 set :flag .QUERY_FLAG
 
   157 op land *tmp69 *tmp67 *tmp68
   158 jump *label53 equal *tmp69 false
   159 label *label140
-    * print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
-    * print "\n"
+  160 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter.\n"
   161 jump *label54 equal .SORTER null
   162 print "Block found: "
   163 print .SORTER
 
   233 label *label72
   234 ubind UNIT
   235 jump *label75 notEqual @unit null
-    * print "[salmon]No unit of type "
-    * print UNIT
-    * print " "
-    * print "found. 2"
+  236 print "[salmon]No unit of type {0} found. 2"
+  237 format UNIT
   238 jump *label76 always
   239 label *label75
   240 sensor *tmp117 @unit @controlled
   241 jump *label71 equal *tmp117 0
-    * print "[salmon]Looking for a free "
-    * print UNIT
-    * print "."
-    * print ".."
+  242 print "[salmon]Looking for a free {0}..."
+  243 format UNIT
   244 label *label76
   245 printflush message1
   246 jump *label72 always
 
   321 label *label98
   322 jump *label104 lessThanEq :iter 3
   323 set :iter 0
-    * print "Moving [green]"
-    * print .ITEM
-    * print .DIRECTION
-    * print *tmp98
-    * print "\"
-    * print "n"
+  324 print "Moving [green]{0}{0}{0}\nLocal items: [gold]{0}[]"
+  325 format .ITEM
+  326 format .DIRECTION
+  327 format *tmp98
   328 sensor *tmp157 .CONTAINER .ITEM
-    * print "Local items: [gold]"
-    * print *tmp157
-    * print "["
-    * print "]"
+  329 format *tmp157
   330 jump *label106 greaterThanEq .EFF_LOCAL_LIMIT 100
-    * print " (limit [orange]"
-    * print .LOCAL_MARGIN
-    * print "["
-    * print "])"
+  331 print " (limit [orange]{0}[])"
+  332 format .LOCAL_MARGIN
   333 label *label106
   334 jump *label108 equal .SHOW_REMOTE_LEVEL false
   335 sensor *tmp161 .CORE .ITEM
-    * print "\n"
-    * print "Remote items: [gold]"
-    * print *tmp161
-    * print "["
-    * print "]"
+  336 print "\nRemote items: [gold]{0}[]"
+  337 format *tmp161
   338 jump *label110 greaterThanEq .EFF_REMOTE_LIMIT 100
-    * print " (limit [orange]"
-    * print .REMOTE_MARGIN
-    * print "["
-    * print "])"
+  339 print " (limit [orange]{0}[])"
+  340 format .REMOTE_MARGIN
   341 label *label110
   342 label *label108
   343 sensor *tmp164 @unit @totalItems
   344 print .MSG
   345 print *tmp164
-    * print "[]"
-    * print "\n"
+  346 print "[]\n"
   347 jump *label114 notEqual :show_state 2
   348 sensor *tmp168 @unit @x
   349 op sub *tmp169 .SRC_X *tmp168
 
   352 op len *tmp172 *tmp169 *tmp171
   353 op idiv *tmp173 *tmp172 .SPEED_SEC
   354 op div *tmp174 *tmp173 10
-    * print "[]  arriving in [gold]"
-    * print *tmp174
-    * print " "
-    * print "sec[]"
-    * print "\n"
+  355 print "[]  arriving in [gold]{0} sec[]\n"
+  356 format *tmp174
   357 jump *label115 always
   358 label *label114
   359 jump *label116 notEqual :show_state 3
 
   364 op len *tmp181 *tmp178 *tmp180
   365 op idiv *tmp182 *tmp181 .SPEED_SEC
   366 op div *tmp183 *tmp182 10
-    * print "[]  arriving in [gold]"
-    * print *tmp183
-    * print " "
-    * print "sec[]"
-    * print "\n"
+  367 print "[]  arriving in [gold]{0} sec[]\n"
+  368 format *tmp183
   369 label *label116
   370 label *label115
   371 op floor *tmp184 :loop_time
-    * print "[lightgray]Loop time: "
-    * print *tmp184
-    * print " ms[]"
-    * print "\n"
+  372 print "[lightgray]Loop time: {0} ms[]\n"
+  373 format *tmp184
   374 printflush message1
   375 sensor *tmp185 switch1 @enabled
   376 jump *label68 equal *tmp185 0
 
   391 op strictEqual *tmp199 *tmp198 0
   392 jump *label128 notEqual *tmp199 false
   393 label *label138
-    * print "[salmon]sorter1 is missing!"
-    * print "\n"
-    * print "[gold]Please place and link sorter or inverted sorter to the processor."
-    * print "\n"
+  394 print "[salmon]sorter1 is missing!\n[gold]Please place and link sorter or inverted sorter to the processor.\n"
   395 printflush message1
   396 printflush message2
   397 sensor *tmp198 sorter1 @dead
 
   408 sensor *tmp208 switch1 @enabled
   409 jump __start__ notEqual *tmp208 false
   410 label *label139
-    * print "[salmon]Local or remote container became invalid."
-    * print "\n"
-    * print "[gold]Please fix and press button to reinitialize."
-    * print "\n"
+  411 print "[salmon]Local or remote container became invalid.\n[gold]Please fix and press button to reinitialize.\n"
   412 printflush message1
   413 printflush message2
   414 sensor *tmp208 switch1 @enabled

Final code before resolving virtual instructions:

label __start__
set UNIT @mega
set LINK_ID 0
set LOCAL_LIMIT 100
set REMOTE_LIMIT 100
op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
set .MSG null
sensor *tmp2 switch1 @enabled
jump *label2 notEqual *tmp2 false
label *label136
print "Unit Transport - Single\nActivate switch to start.\n"
printflush message1
sensor *tmp2 switch1 @enabled
jump *label136 equal *tmp2 false
label *label2
sensor *tmp4 @unit @dead
op strictNotEqual *tmp5 *tmp4 0
jump *label5 equal *tmp5 false
label *label137
# "Function: inline def rebindUnit()"
set :rebindUnit:first_unit null
label *label7
ubind UNIT
jump *label10 equal @unit null
set :rebindUnit:first_unit @unit
jump *label9 always
label *label10
print "[salmon]No unit of type {0} found. 1"
format UNIT
printflush message1
jump *label7 always
label *label9
label *label12
sensor *tmp10 @unit @controller
jump *label6 equal *tmp10 @this
ubind UNIT
print "[gold]Looking for old unit..."
printflush message1
op notEqual *tmp13 @unit :rebindUnit:first_unit
sensor *tmp14 :rebindUnit:first_unit @dead
op strictEqual *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
jump *label12 notEqual *tmp16 false
# "Function: inline def findUnit()"
label *label18
ubind UNIT
jump *label21 notEqual @unit null
print "[salmon]No unit of type {0} found. 2"
format UNIT
jump *label22 always
label *label21
sensor *tmp20 @unit @controlled
jump *label17 equal *tmp20 0
print "[salmon]Looking for a free {0}..."
format UNIT
label *label22
printflush message1
jump *label18 always
label *label17
label *label6
sensor *tmp4 @unit @dead
op strictNotEqual *tmp5 *tmp4 0
jump *label137 notEqual *tmp5 false
label *label5
sensor .UNIT_CAPACITY @unit @itemCapacity
sensor *tmp24 @unit @speed
op div .SPEED_SEC *tmp24 10
ucontrol flag 1
label *label25
set .CONTAINER null
set .DROP_TARGET null
set :n @links
jump *label30 lessThanEq :n 0
label *label134
op sub :n :n 1
getlink :block :n
sensor *tmp30 :block @itemCapacity
jump *label31 lessThanEq *tmp30 0
set .DROP_TARGET .CONTAINER
set .CONTAINER :block
label *label31
jump *label134 greaterThan :n 0
label *label30
jump *label33 notEqual .CONTAINER null
print "[salmon]No destination.\n"
jump *label34 always
label *label33
op notEqual *tmp35 .DROP_TARGET null
sensor *tmp36 .DROP_TARGET @itemCapacity
op lessThan *tmp37 *tmp36 300
op land *tmp38 *tmp35 *tmp37
jump *label27 equal *tmp38 false
print "Destination: {0}\nItem dump: {0}\n[salmon]Item dump must be a container or a vault!"
format .CONTAINER
format .DROP_TARGET
label *label34
printflush message1
jump *label25 always
label *label27
set .CORE_Y null
set .CORE_X null
set .CORE null
jump *label37 notEqual LINK_ID 0
print "[gold]Locating core..."
printflush message1
ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
jump *label38 always
label *label37
print "[gold]Locating vault #{0}..."
format LINK_ID
printflush message1
op add .QUERY_FLAG 99999900 LINK_ID
set :flag .QUERY_FLAG
ucontrol flag .QUERY_FLAG
sensor *tmp46 @unit @dead
op strictEqual *tmp48 *tmp46 0
jump *label41 equal *tmp48 false
label *label141
ucontrol stop
sensor :flag @unit @flag
op equal *tmp45 :flag .QUERY_FLAG
sensor *tmp46 @unit @dead
op strictEqual *tmp47 *tmp46 0
op land *tmp48 *tmp45 *tmp47
jump *label141 notEqual *tmp48 false
label *label41
jump *label42 equal :flag .QUERY_FLAG
op idiv :position :flag 100
op mod .CORE_X :position @mapw
op idiv .CORE_Y :position @mapw
ucontrol within .CORE_X .CORE_Y 8 *tmp55
op equal *tmp56 *tmp55 false
sensor *tmp57 @unit @dead
op equal *tmp58 *tmp57 0
op land *tmp59 *tmp56 *tmp58
jump *label46 equal *tmp59 false
label *label142
ucontrol approach .CORE_X .CORE_Y 6
ucontrol within .CORE_X .CORE_Y 8 *tmp55
op equal *tmp56 *tmp55 false
sensor *tmp57 @unit @dead
op equal *tmp58 *tmp57 0
op land *tmp59 *tmp56 *tmp58
jump *label142 notEqual *tmp59 false
label *label46
ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
select .CORE notEqual :b_type @vault null .CORE
label *label42
label *label38
jump *label49 notEqual .CORE null
end
label *label49
set .SORTER sorter1
sensor :sorter_type sorter1 @type
op notEqual *tmp67 :sorter_type @sorter
op notEqual *tmp68 :sorter_type @inverted-sorter
op land *tmp69 *tmp67 *tmp68
jump *label53 equal *tmp69 false
label *label140
print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter.\n"
jump *label54 equal .SORTER null
print "Block found: "
print .SORTER
label *label54
printflush message1
set .SORTER sorter1
sensor :sorter_type sorter1 @type
op notEqual *tmp67 :sorter_type @sorter
op notEqual *tmp68 :sorter_type @inverted-sorter
op land *tmp69 *tmp67 *tmp68
jump *label140 notEqual *tmp69 false
label *label53
jump *label56 notEqual :sorter_type @sorter
set .SHOW_REMOTE_LEVEL true
set .SRC .CORE
set .DST .CONTAINER
sensor :src_capacity .CORE @itemCapacity
sensor :dst_capacity .CONTAINER @itemCapacity
op sub *tmp77 100 .EFF_REMOTE_LIMIT
op mul *tmp78 :src_capacity *tmp77
op idiv .LOAD_LEVEL *tmp78 100
op mul *tmp80 :dst_capacity .EFF_LOCAL_LIMIT
op idiv .DROP_LEVEL *tmp80 100
set .LOCAL_MARGIN .DROP_LEVEL
set .REMOTE_MARGIN .LOAD_LEVEL
select .DIRECTION equal LINK_ID 0 "[] from core" "[] from vault #"
jump *label57 always
label *label56
op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
set .SRC .CONTAINER
set .DST .CORE
sensor :src_capacity .CONTAINER @itemCapacity
sensor :dst_capacity .CORE @itemCapacity
op sub *tmp87 100 .EFF_LOCAL_LIMIT
op mul *tmp88 :src_capacity *tmp87
op idiv .LOAD_LEVEL *tmp88 100
op mul *tmp90 :dst_capacity .EFF_REMOTE_LIMIT
op idiv *tmp91 *tmp90 100
op equal *tmp92 LINK_ID 0
op mul *tmp93 *tmp92 .UNIT_CAPACITY
op add .DROP_LEVEL *tmp91 *tmp93
set .LOCAL_MARGIN .LOAD_LEVEL
set .REMOTE_MARGIN .DROP_LEVEL
select .DIRECTION equal LINK_ID 0 "[] to core" "[] to vault #"
label *label57
select *tmp98 equal LINK_ID 0 "" LINK_ID
sensor .SRC_X .SRC @x
sensor .SRC_Y .SRC @y
sensor .DST_X .DST @x
sensor .DST_Y .DST @y
jump *label64 notEqual .DROP_TARGET null
set .DROP_TARGET .CORE
set .DROP_X .CORE_X
set .DROP_Y .CORE_Y
jump *label65 always
label *label64
sensor .DROP_X .DROP_TARGET @x
sensor .DROP_Y .DROP_TARGET @y
label *label65
set .LAST_ITEM @mono
set :iter 0
set :loop_time 0
set :state 1
ucontrol stop
label *label66
set :start @time
sensor *tmp108 @unit @dead
op strictEqual *tmp109 *tmp108 0
sensor *tmp110 @unit @controller
op notEqual *tmp111 *tmp110 @this
jump *label69 greaterThan *tmp109 *tmp111
# "Function: inline def findUnit()"
label *label72
ubind UNIT
jump *label75 notEqual @unit null
print "[salmon]No unit of type {0} found. 2"
format UNIT
jump *label76 always
label *label75
sensor *tmp117 @unit @controlled
jump *label71 equal *tmp117 0
print "[salmon]Looking for a free {0}..."
format UNIT
label *label76
printflush message1
jump *label72 always
label *label71
ucontrol flag 1
set :state 1
label *label69
sensor .ITEM .SORTER @config
jump *label79 equal .ITEM .LAST_ITEM
jump *label83 notEqual .ITEM null
label *label135
print "[salmon]No item type selected for transport."
printflush message1
sensor .ITEM .SORTER @config
jump *label135 equal .ITEM null
label *label83
set .LAST_ITEM .ITEM
set :state 1
label *label79
set :show_state 0
jump *label84 notEqual :state 1
sensor *tmp127 @unit @firstItem
jump *label86 notEqual *tmp127 .ITEM
set :state 3
jump *label87 always
label *label86
sensor *tmp130 @unit @totalItems
jump *label88 notEqual *tmp130 0
set :state 2
jump *label89 always
label *label88
set .MSG "\nUnloading previous items: [green]"
ucontrol approach .DROP_X .DROP_Y 6
ucontrol within .DROP_X .DROP_Y 8 *tmp133
jump *label90 equal *tmp133 false
ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
label *label90
label *label89
label *label87
label *label84
jump *label92 notEqual :state 2
ucontrol within .SRC_X .SRC_Y 8 *tmp137
jump *label94 equal *tmp137 false
sensor *tmp139 .SRC .ITEM
op sub *tmp140 *tmp139 .LOAD_LEVEL
op max :max_load *tmp140 0
ucontrol itemTake .SRC .ITEM :max_load
sensor *tmp142 @unit @totalItems
select :state greaterThanEq *tmp142 .UNIT_CAPACITY 3 :state
select .MSG greaterThanEq *tmp142 .UNIT_CAPACITY .MSG "\nLoading items: [green]"
jump *label95 always
label *label94
ucontrol approach .SRC_X .SRC_Y 6
set .MSG "\nGoing to source: [green]"
set :show_state 2
label *label95
label *label92
jump *label98 notEqual :state 3
ucontrol within .DST_X .DST_Y 8 *tmp147
jump *label100 equal *tmp147 false
sensor *tmp149 .DST .ITEM
op sub *tmp150 .DROP_LEVEL *tmp149
op max :max_drop *tmp150 0
ucontrol itemDrop .DST :max_drop
sensor *tmp152 @unit @totalItems
jump *label102 greaterThan *tmp152 0
set :state 2
ucontrol approach .SRC_X .SRC_Y 6
jump *label101 always
label *label102
set .MSG "\nDropping items: [green]"
jump *label101 always
label *label100
ucontrol approach .DST_X .DST_Y 6
set .MSG "\nGoing to destination: [green]"
set :show_state 3
label *label101
label *label98
jump *label104 lessThanEq :iter 3
set :iter 0
print "Moving [green]{0}{0}{0}\nLocal items: [gold]{0}[]"
format .ITEM
format .DIRECTION
format *tmp98
sensor *tmp157 .CONTAINER .ITEM
format *tmp157
jump *label106 greaterThanEq .EFF_LOCAL_LIMIT 100
print " (limit [orange]{0}[])"
format .LOCAL_MARGIN
label *label106
jump *label108 equal .SHOW_REMOTE_LEVEL false
sensor *tmp161 .CORE .ITEM
print "\nRemote items: [gold]{0}[]"
format *tmp161
jump *label110 greaterThanEq .EFF_REMOTE_LIMIT 100
print " (limit [orange]{0}[])"
format .REMOTE_MARGIN
label *label110
label *label108
sensor *tmp164 @unit @totalItems
print .MSG
print *tmp164
print "[]\n"
jump *label114 notEqual :show_state 2
sensor *tmp168 @unit @x
op sub *tmp169 .SRC_X *tmp168
sensor *tmp170 @unit @y
op sub *tmp171 .SRC_Y *tmp170
op len *tmp172 *tmp169 *tmp171
op idiv *tmp173 *tmp172 .SPEED_SEC
op div *tmp174 *tmp173 10
print "[]  arriving in [gold]{0} sec[]\n"
format *tmp174
jump *label115 always
label *label114
jump *label116 notEqual :show_state 3
sensor *tmp177 @unit @x
op sub *tmp178 .DST_X *tmp177
sensor *tmp179 @unit @y
op sub *tmp180 .DST_Y *tmp179
op len *tmp181 *tmp178 *tmp180
op idiv *tmp182 *tmp181 .SPEED_SEC
op div *tmp183 *tmp182 10
print "[]  arriving in [gold]{0} sec[]\n"
format *tmp183
label *label116
label *label115
op floor *tmp184 :loop_time
print "[lightgray]Loop time: {0} ms[]\n"
format *tmp184
printflush message1
sensor *tmp185 switch1 @enabled
jump *label68 equal *tmp185 0
sensor *tmp188 .SRC @dead
jump *label68 notEqual *tmp188 0
sensor *tmp191 .DST @dead
jump *label68 notEqual *tmp191 0
sensor *tmp194 .SORTER @dead
jump *label68 notEqual *tmp194 0
jump *label105 always
label *label104
op add :iter :iter 1
label *label105
op sub :loop_time @time :start
jump *label66 always
label *label68
sensor *tmp198 .SORTER @dead
op strictEqual *tmp199 *tmp198 0
jump *label128 notEqual *tmp199 false
label *label138
print "[salmon]sorter1 is missing!\n[gold]Please place and link sorter or inverted sorter to the processor.\n"
printflush message1
printflush message2
sensor *tmp198 sorter1 @dead
op strictEqual *tmp199 *tmp198 0
jump *label138 equal *tmp199 false
label *label128
sensor *tmp201 .SRC @dead
op strictNotEqual *tmp202 *tmp201 0
sensor *tmp203 .DST @dead
op strictNotEqual *tmp204 *tmp203 0
op or *tmp205 *tmp202 *tmp204
jump __start__ equal *tmp205 false
control enabled switch1 false
sensor *tmp208 switch1 @enabled
jump __start__ notEqual *tmp208 false
label *label139
print "[salmon]Local or remote container became invalid.\n[gold]Please fix and press button to reinitialize.\n"
printflush message1
printflush message2
sensor *tmp208 switch1 @enabled
jump *label139 equal *tmp208 false
