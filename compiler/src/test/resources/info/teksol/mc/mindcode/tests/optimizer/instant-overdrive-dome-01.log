  1446 instructions before optimizations.
    43 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   259 instructions eliminated by Dead Code Elimination (2 passes, 9 iterations).
     4 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    69 instructions eliminated by Jump Optimization (6 iterations).
    93 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
    11 instructions eliminated by If Expression Optimization (4 iterations).
    85 instructions eliminated by Data Flow Optimization (4 passes, 16 iterations).
     2 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   152 instructions added by Loop Unrolling (7 iterations).
     2 loops unrolled by Loop Unrolling.
    22 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    24 instructions updated by Jump Threading.
    19 instructions eliminated by Unreachable Code Elimination (3 iterations).
    75 instructions eliminated by Print Merging.
   920 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 193):
    Replicate loop condition at line 54:5                        size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at line 119:5                       size    +1, benefit       25.0, efficiency     25.000
  * Unroll iteration loop at line 169:9                          size    +5, benefit      375.0, efficiency     75.000 (+3 instructions)
  ! Unroll iteration loop at line 201:9                          size  +201, benefit      375.0, efficiency      1.866

Pass 1: speed optimization selection (cost limit 190):
  * Replicate loop condition at line 54:5                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at line 119:5                       size    +1, benefit       25.0, efficiency     25.000
  ! Unroll iteration loop at line 201:9                          size  +201, benefit      375.0, efficiency      1.866

Pass 1: speed optimization selection (cost limit 189):
  * Replicate loop condition at line 119:5                       size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Unroll iteration loop at line 201:9                          size  +201, benefit      375.0, efficiency      1.866

Pass 1: speed optimization selection (cost limit 188):
  ! Unroll iteration loop at line 201:9                          size  +201, benefit      375.0, efficiency      1.866

Pass 2: speed optimization selection (cost limit 203):
  * Unroll iteration loop at line 201:9                          size  +189, benefit      375.0, efficiency      1.984 (+141 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-173 instructions):
 
    37 label *label15
    38 jump *label16 equal :locateCore*retval false
    39 jump *label1 always
-    * set *tmp2 null
    40 jump *label17 always
    41 label *label16
-    * set *tmp2 null
    42 label *label17
    43 label *label9
    44 multijump *tmp1 0 0 (m:marker0)
 
   117 label *label36
   118 set *tmp29 null
   119 label *label37
-    * set *tmp27 *tmp29
   120 jump *label35 always
   121 label *label34
   122 set *tmp30 :areUnitsAvailable:occupied
   123 op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
-    * set *tmp27 *tmp30
   124 label *label35
   125 ubind :areUnitsAvailable:type
   126 label *label32
 
   130 op land *tmp34 *tmp31 *tmp33
   131 jump *label31 notEqual *tmp34 false
   132 label *label33
-    * set *tmp12 null
   133 jump *label27 always
   134 label *label26
-    * set *tmp12 null
   135 label *label27
   136 jump *label38 equal :areUnitsAvailable:output false
   137 print :areUnitsAvailable:type
 
   145 jump *label40 equal *tmp36 false
   146 print ", needed: "
   147 print :areUnitsAvailable:needed
-    * set *tmp37 null
   148 jump *label41 always
   149 label *label40
-    * set *tmp37 null
   150 label *label41
   151 print "\n"
-    * set *tmp35 null
   152 jump *label39 always
   153 label *label38
-    * set *tmp35 null
   154 label *label39
   155 set *tmp10 false
   156 jump *label25 always
 
   159 jump *label42 equal *tmp10 false
   160 set *tmp9 UNIT_TYPE
   161 jump *label21 always
-    * set *tmp38 null
   162 jump *label43 always
   163 label *label42
-    * set *tmp38 null
   164 label *label43
   165 set :chooseUnitType:type @flare
   166 setaddr *tmp39 *label47
 
   225 label *label64
   226 set *tmp61 null
   227 label *label65
-    * set *tmp59 *tmp61
   228 jump *label63 always
   229 label *label62
   230 set *tmp62 :areUnitsAvailable.1:occupied
   231 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
-    * set *tmp59 *tmp62
   232 label *label63
   233 ubind :areUnitsAvailable.1:type
   234 label *label60
 
   238 op land *tmp66 *tmp63 *tmp65
   239 jump *label59 notEqual *tmp66 false
   240 label *label61
-    * set *tmp44 null
   241 jump *label55 always
   242 label *label54
-    * set *tmp44 null
   243 label *label55
   244 jump *label66 equal :areUnitsAvailable.1:output false
   245 print :areUnitsAvailable.1:type
 
   253 jump *label68 equal *tmp68 false
   254 print ", needed: "
   255 print :areUnitsAvailable.1:needed
-    * set *tmp69 null
   256 jump *label69 always
   257 label *label68
-    * set *tmp69 null
   258 label *label69
   259 print "\n"
-    * set *tmp67 null
   260 jump *label67 always
   261 label *label66
-    * set *tmp67 null
   262 label *label67
   263 set *tmp42 false
   264 jump *label53 always
 
   273 label *label70
   274 set *tmp70 null
   275 label *label71
-    * set *tmp41 *tmp70
   276 jump *label52 always
   277 label *label51
-    * set *tmp41 null
   278 label *label52
   279 label *label45
   280 multijump *tmp39 0 0 (m:marker1)
 
   299 op equal *tmp72 :rebindUnits:firstUnit null
   300 jump *label73 equal *tmp72 false
   301 end
-    * set *tmp73 null
   302 jump *label74 always
   303 label *label73
-    * set *tmp73 null
   304 label *label74
   305 label *label75
   306 sensor *tmp74 @unit @controller
   307 op equal *tmp75 *tmp74 @this
   308 jump *label78 equal *tmp75 false
-    * set *tmp77 :rebindUnits:count
   309 op add :rebindUnits:count :rebindUnits:count 1
   310 ucontrol flag 1
   311 set .UNIT_S2 .UNIT_P2
 
   321 label *label80
   322 set *tmp80 null
   323 label *label81
-    * set *tmp76 *tmp80
   324 jump *label79 always
   325 label *label78
-    * set *tmp76 null
   326 label *label79
   327 ubind .TYPE
   328 label *label76
 
   332 op land *tmp84 *tmp81 *tmp83
   333 jump *label75 notEqual *tmp84 false
   334 label *label77
-    * set *tmp71 :rebindUnits:count
   335 jump *label72 always
-    * set *tmp71 null
   336 label *label72
   337 set :acquireUnit:currentUnit .UNIT_S1
   338 set :rebindUnit:currentUnit :acquireUnit:currentUnit
 
   345 op equal *tmp92 *tmp91 @this
   346 op land *tmp93 *tmp90 *tmp92
   347 jump *label86 equal *tmp93 false
-    * set *tmp86 :rebindUnit:currentUnit
   348 jump *label83 always
   349 set *tmp94 null
   350 jump *label87 always
   351 label *label86
   352 set *tmp94 null
   353 label *label87
-    * set *tmp88 *tmp94
   354 jump *label85 always
   355 label *label84
-    * set *tmp88 null
   356 label *label85
   357 ubind .TYPE
   358 set :rebindUnit:firstUnit @unit
 
   362 sensor *tmp97 @unit @controlled
   363 op equal *tmp98 *tmp97 0
   364 jump *label93 equal *tmp98 false
-    * set *tmp86 @unit
   365 jump *label83 always
-    * set *tmp99 null
   366 jump *label94 always
   367 label *label93
-    * set *tmp99 null
   368 label *label94
   369 ubind .TYPE
   370 label *label91
 
   374 op land *tmp103 *tmp100 *tmp102
   375 jump *label90 notEqual *tmp103 false
   376 label *label92
-    * set *tmp96 null
   377 jump *label89 always
   378 label *label88
-    * set *tmp96 null
   379 label *label89
   380 end
-    * set *tmp86 null
   381 label *label83
   382 ucontrol flag 1
   383 set *tmp85 @unit
 
   396 op equal *tmp111 *tmp110 @this
   397 op land *tmp112 *tmp109 *tmp111
   398 jump *label99 equal *tmp112 false
-    * set *tmp105 :rebindUnit.1:currentUnit
   399 jump *label96 always
   400 set *tmp113 null
   401 jump *label100 always
   402 label *label99
   403 set *tmp113 null
   404 label *label100
-    * set *tmp107 *tmp113
   405 jump *label98 always
   406 label *label97
-    * set *tmp107 null
   407 label *label98
   408 ubind .TYPE
   409 set :rebindUnit.1:firstUnit @unit
 
   413 sensor *tmp116 @unit @controlled
   414 op equal *tmp117 *tmp116 0
   415 jump *label106 equal *tmp117 false
-    * set *tmp105 @unit
   416 jump *label96 always
-    * set *tmp118 null
   417 jump *label107 always
   418 label *label106
-    * set *tmp118 null
   419 label *label107
   420 ubind .TYPE
   421 label *label104
 
   425 op land *tmp122 *tmp119 *tmp121
   426 jump *label103 notEqual *tmp122 false
   427 label *label105
-    * set *tmp115 null
   428 jump *label102 always
   429 label *label101
-    * set *tmp115 null
   430 label *label102
   431 end
-    * set *tmp105 null
   432 label *label96
   433 ucontrol flag 1
   434 set *tmp104 @unit
 
   450 label *label110
   451 set .UNIT_S1 :swap:a
   452 set .UNIT_P1 :swap:b
-    * set *tmp128 null
   453 jump *label109 always
   454 label *label108
-    * set *tmp128 null
   455 label *label109
   456 sensor *tmp129 .UNIT_S1 @itemCapacity
   457 set .UNIT_CAPACITY *tmp129
 
   462 op strictEqual *tmp132 .SPEED null
   463 jump *label111 equal *tmp132 false
   464 stop
-    * set *tmp133 null
   465 jump *label112 always
   466 label *label111
-    * set *tmp133 null
   467 label *label112
   468 set :needsFourUnits.2:unit .UNIT_S1
   469 op sub *tmp135 .DOME_X .CORE_X
 
   491 op equal *tmp150 *tmp149 @this
   492 op land *tmp151 *tmp148 *tmp150
   493 jump *label120 equal *tmp151 false
-    * set *tmp144 :rebindUnit.2:currentUnit
   494 jump *label117 always
   495 set *tmp152 null
   496 jump *label121 always
   497 label *label120
   498 set *tmp152 null
   499 label *label121
-    * set *tmp146 *tmp152
   500 jump *label119 always
   501 label *label118
-    * set *tmp146 null
   502 label *label119
   503 ubind .TYPE
   504 set :rebindUnit.2:firstUnit @unit
 
   508 sensor *tmp155 @unit @controlled
   509 op equal *tmp156 *tmp155 0
   510 jump *label127 equal *tmp156 false
-    * set *tmp144 @unit
   511 jump *label117 always
-    * set *tmp157 null
   512 jump *label128 always
   513 label *label127
-    * set *tmp157 null
   514 label *label128
   515 ubind .TYPE
   516 label *label125
 
   520 op land *tmp161 *tmp158 *tmp160
   521 jump *label124 notEqual *tmp161 false
   522 label *label126
-    * set *tmp154 null
   523 jump *label123 always
   524 label *label122
-    * set *tmp154 null
   525 label *label123
   526 end
-    * set *tmp144 null
   527 label *label117
   528 ucontrol flag 1
   529 set *tmp143 @unit
 
   542 op equal *tmp169 *tmp168 @this
   543 op land *tmp170 *tmp167 *tmp169
   544 jump *label133 equal *tmp170 false
-    * set *tmp163 :rebindUnit.3:currentUnit
   545 jump *label130 always
   546 set *tmp171 null
   547 jump *label134 always
   548 label *label133
   549 set *tmp171 null
   550 label *label134
-    * set *tmp165 *tmp171
   551 jump *label132 always
   552 label *label131
-    * set *tmp165 null
   553 label *label132
   554 ubind .TYPE
   555 set :rebindUnit.3:firstUnit @unit
 
   559 sensor *tmp174 @unit @controlled
   560 op equal *tmp175 *tmp174 0
   561 jump *label140 equal *tmp175 false
-    * set *tmp163 @unit
   562 jump *label130 always
-    * set *tmp176 null
   563 jump *label141 always
   564 label *label140
-    * set *tmp176 null
   565 label *label141
   566 ubind .TYPE
   567 label *label138
 
   571 op land *tmp180 *tmp177 *tmp179
   572 jump *label137 notEqual *tmp180 false
   573 label *label139
-    * set *tmp173 null
   574 jump *label136 always
   575 label *label135
-    * set *tmp173 null
   576 label *label136
   577 end
-    * set *tmp163 null
   578 label *label130
   579 ucontrol flag 1
   580 set *tmp162 @unit
 
   596 label *label144
   597 set .UNIT_S1 :swap.1:a
   598 set .UNIT_P2 :swap.1:b
-    * set *tmp186 null
   599 jump *label143 always
   600 label *label142
-    * set *tmp186 null
   601 label *label143
   602 sensor *tmp187 .UNIT_S2 @firstItem
   603 op equal *tmp188 *tmp187 @phase-fabric
 
   613 label *label147
   614 set .UNIT_S2 :swap.2:a
   615 set .UNIT_P2 :swap.2:b
-    * set *tmp192 null
   616 jump *label146 always
   617 label *label145
-    * set *tmp192 null
   618 label *label146
   619 set .GROUP1 "unit  1"
   620 set .GROUP2 "unit 2"
-    * set *tmp142 .GROUP2
   621 jump *label115 always
   622 label *label114
   623 ubind .UNIT_S2
 
   627 ucontrol unbind
   628 set .UNIT_P2 null
   629 set .GROUP1 "unit"
-    * set *tmp142 .GROUP1
   630 label *label115
   631 op equal *tmp193 .FOUR_UNITS false
   632 sensor *tmp194 .UNIT_S1 @totalItems
 
   666 print "["
   667 print "]"
   668 print "\n"
-    * set *tmp207 null
   669 jump *label153 always
   670 label *label152
   671 print "  dome:  [coral]"
 
   673 print "["
   674 print "]"
   675 print "\n"
-    * set *tmp207 null
   676 label *label153
   677 label *label151
   678 set :processUnit:unit .UNIT_S1
 
   689 op equal *tmp214 *tmp213 @this
   690 op land *tmp215 *tmp212 *tmp214
   691 jump *label158 equal *tmp215 false
-    * set *tmp208 :rebindUnit.4:currentUnit
   692 jump *label155 always
   693 set *tmp216 null
   694 jump *label159 always
   695 label *label158
   696 set *tmp216 null
   697 label *label159
-    * set *tmp210 *tmp216
   698 jump *label157 always
   699 label *label156
-    * set *tmp210 null
   700 label *label157
   701 ubind .TYPE
   702 set :rebindUnit.4:firstUnit @unit
 
   706 sensor *tmp219 @unit @controlled
   707 op equal *tmp220 *tmp219 0
   708 jump *label165 equal *tmp220 false
-    * set *tmp208 @unit
   709 jump *label155 always
-    * set *tmp221 null
   710 jump *label166 always
   711 label *label165
-    * set *tmp221 null
   712 label *label166
   713 ubind .TYPE
   714 label *label163
 
   718 op land *tmp225 *tmp222 *tmp224
   719 jump *label162 notEqual *tmp225 false
   720 label *label164
-    * set *tmp218 null
   721 jump *label161 always
   722 label *label160
-    * set *tmp218 null
   723 label *label161
   724 end
-    * set *tmp208 null
   725 label *label155
   726 sensor *tmp226 @unit @flag
   727 set :processUnit:state *tmp226
 
   759 label *label172
   760 set *tmp233 *tmp236
   761 label *label170
-    * set *tmp230 *tmp233
   762 jump *label168 always
   763 label *label167
-    * set *tmp230 null
   764 label *label168
   765 op equal *tmp239 :processUnit:state 2
   766 jump *label175 equal *tmp239 false
 
   793 set :processUnit:distance *tmp252
   794 set *tmp242 :processUnit:distance
   795 label *label178
-    * set *tmp240 *tmp242
   796 jump *label176 always
   797 label *label175
-    * set *tmp240 null
   798 label *label176
   799 op equal *tmp253 :processUnit:state 3
   800 jump *label181 equal *tmp253 false
 
   803 jump *label185 equal :processUnit:supply false
   804 ucontrol itemDrop .DOME .UNIT_CAPACITY
   805 set .MSG ", supplying\n"
-    * set *tmp257 .MSG
   806 jump *label186 always
   807 label *label185
   808 ucontrol approach .DOME_X .DOME_Y 6
   809 set .MSG ", waiting\n"
-    * set *tmp257 .MSG
   810 label *label186
   811 sensor *tmp258 @unit @totalItems
   812 op lessThanEq *tmp259 *tmp258 0
 
   833 set :processUnit:distance *tmp267
   834 set *tmp256 :processUnit:distance
   835 label *label184
-    * set *tmp254 *tmp256
   836 jump *label182 always
   837 label *label181
-    * set *tmp254 null
   838 label *label182
   839 ucontrol flag :processUnit:state
   840 sensor *tmp268 @unit @totalItems
 
   854 print "["
   855 print "] sec"
   856 print "\n"
-    * set *tmp270 null
   857 jump *label190 always
   858 label *label189
   859 print .MSG
-    * set *tmp270 .MSG
   860 label *label190
   861 set *tmp271 @unit
   862 set :processUnit:unit *tmp271
 
   878 op equal *tmp280 *tmp279 @this
   879 op land *tmp281 *tmp278 *tmp280
   880 jump *label197 equal *tmp281 false
-    * set *tmp274 :rebindUnit.5:currentUnit
   881 jump *label194 always
   882 set *tmp282 null
   883 jump *label198 always
   884 label *label197
   885 set *tmp282 null
   886 label *label198
-    * set *tmp276 *tmp282
   887 jump *label196 always
   888 label *label195
-    * set *tmp276 null
   889 label *label196
   890 ubind .TYPE
   891 set :rebindUnit.5:firstUnit @unit
 
   895 sensor *tmp285 @unit @controlled
   896 op equal *tmp286 *tmp285 0
   897 jump *label204 equal *tmp286 false
-    * set *tmp274 @unit
   898 jump *label194 always
-    * set *tmp287 null
   899 jump *label205 always
   900 label *label204
-    * set *tmp287 null
   901 label *label205
   902 ubind .TYPE
   903 label *label202
 
   907 op land *tmp291 *tmp288 *tmp290
   908 jump *label201 notEqual *tmp291 false
   909 label *label203
-    * set *tmp284 null
   910 jump *label200 always
   911 label *label199
-    * set *tmp284 null
   912 label *label200
   913 end
-    * set *tmp274 null
   914 label *label194
   915 sensor *tmp292 @unit @flag
   916 set :processUnit.1:state *tmp292
 
   948 label *label211
   949 set *tmp299 *tmp302
   950 label *label209
-    * set *tmp296 *tmp299
   951 jump *label207 always
   952 label *label206
-    * set *tmp296 null
   953 label *label207
   954 op equal *tmp305 :processUnit.1:state 2
   955 jump *label214 equal *tmp305 false
 
   982 set :processUnit.1:distance *tmp318
   983 set *tmp308 :processUnit.1:distance
   984 label *label217
-    * set *tmp306 *tmp308
   985 jump *label215 always
   986 label *label214
-    * set *tmp306 null
   987 label *label215
   988 op equal *tmp319 :processUnit.1:state 3
   989 jump *label220 equal *tmp319 false
 
   992 jump *label224 equal :processUnit.1:supply false
   993 ucontrol itemDrop .DOME .UNIT_CAPACITY
   994 set .MSG ", supplying\n"
-    * set *tmp323 .MSG
   995 jump *label225 always
   996 label *label224
   997 ucontrol approach .DOME_X .DOME_Y 6
   998 set .MSG ", waiting\n"
-    * set *tmp323 .MSG
   999 label *label225
  1000 sensor *tmp324 @unit @totalItems
  1001 op lessThanEq *tmp325 *tmp324 0
 
  1022 set :processUnit.1:distance *tmp333
  1023 set *tmp322 :processUnit.1:distance
  1024 label *label223
-    * set *tmp320 *tmp322
  1025 jump *label221 always
  1026 label *label220
-    * set *tmp320 null
  1027 label *label221
  1028 ucontrol flag :processUnit.1:state
  1029 sensor *tmp334 @unit @totalItems
 
  1043 print "["
  1044 print "] sec"
  1045 print "\n"
-    * set *tmp336 null
  1046 jump *label229 always
  1047 label *label228
  1048 print .MSG
-    * set *tmp336 .MSG
  1049 label *label229
  1050 set *tmp337 @unit
  1051 set :processUnit.1:unit *tmp337
 
  1062 set *tmp338 *tmp342
  1063 label *label231
  1064 set .SUPPLY_S_FIRST *tmp338
-    * set *tmp272 .SUPPLY_S_FIRST
  1065 jump *label192 always
  1066 label *label191
-    * set *tmp272 null
  1067 label *label192
  1068 set :printDomeStatus.1:item @phase-fabric
  1069 set :printDomeStatus.1:text "\n[green]Phase fabric[] status:\n"
 
  1077 print "["
  1078 print "]"
  1079 print "\n"
-    * set *tmp345 null
  1080 jump *label234 always
  1081 label *label233
  1082 print "  dome:  [coral]"
 
  1084 print "["
  1085 print "]"
  1086 print "\n"
-    * set *tmp345 null
  1087 label *label234
  1088 label *label232
  1089 set :processUnit.2:unit .UNIT_P1
 
  1100 op equal *tmp352 *tmp351 @this
  1101 op land *tmp353 *tmp350 *tmp352
  1102 jump *label239 equal *tmp353 false
-    * set *tmp346 :rebindUnit.6:currentUnit
  1103 jump *label236 always
  1104 set *tmp354 null
  1105 jump *label240 always
  1106 label *label239
  1107 set *tmp354 null
  1108 label *label240
-    * set *tmp348 *tmp354
  1109 jump *label238 always
  1110 label *label237
-    * set *tmp348 null
  1111 label *label238
  1112 ubind .TYPE
  1113 set :rebindUnit.6:firstUnit @unit
 
  1117 sensor *tmp357 @unit @controlled
  1118 op equal *tmp358 *tmp357 0
  1119 jump *label246 equal *tmp358 false
-    * set *tmp346 @unit
  1120 jump *label236 always
-    * set *tmp359 null
  1121 jump *label247 always
  1122 label *label246
-    * set *tmp359 null
  1123 label *label247
  1124 ubind .TYPE
  1125 label *label244
 
  1129 op land *tmp363 *tmp360 *tmp362
  1130 jump *label243 notEqual *tmp363 false
  1131 label *label245
-    * set *tmp356 null
  1132 jump *label242 always
  1133 label *label241
-    * set *tmp356 null
  1134 label *label242
  1135 end
-    * set *tmp346 null
  1136 label *label236
  1137 sensor *tmp364 @unit @flag
  1138 set :processUnit.2:state *tmp364
 
  1170 label *label253
  1171 set *tmp371 *tmp374
  1172 label *label251
-    * set *tmp368 *tmp371
  1173 jump *label249 always
  1174 label *label248
-    * set *tmp368 null
  1175 label *label249
  1176 op equal *tmp377 :processUnit.2:state 2
  1177 jump *label256 equal *tmp377 false
 
  1204 set :processUnit.2:distance *tmp390
  1205 set *tmp380 :processUnit.2:distance
  1206 label *label259
-    * set *tmp378 *tmp380
  1207 jump *label257 always
  1208 label *label256
-    * set *tmp378 null
  1209 label *label257
  1210 op equal *tmp391 :processUnit.2:state 3
  1211 jump *label262 equal *tmp391 false
 
  1214 jump *label266 equal :processUnit.2:supply false
  1215 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1216 set .MSG ", supplying\n"
-    * set *tmp395 .MSG
  1217 jump *label267 always
  1218 label *label266
  1219 ucontrol approach .DOME_X .DOME_Y 6
  1220 set .MSG ", waiting\n"
-    * set *tmp395 .MSG
  1221 label *label267
  1222 sensor *tmp396 @unit @totalItems
  1223 op lessThanEq *tmp397 *tmp396 0
 
  1244 set :processUnit.2:distance *tmp405
  1245 set *tmp394 :processUnit.2:distance
  1246 label *label265
-    * set *tmp392 *tmp394
  1247 jump *label263 always
  1248 label *label262
-    * set *tmp392 null
  1249 label *label263
  1250 ucontrol flag :processUnit.2:state
  1251 sensor *tmp406 @unit @totalItems
 
  1265 print "["
  1266 print "] sec"
  1267 print "\n"
-    * set *tmp408 null
  1268 jump *label271 always
  1269 label *label270
  1270 print .MSG
-    * set *tmp408 .MSG
  1271 label *label271
  1272 set *tmp409 @unit
  1273 set :processUnit.2:unit *tmp409
 
  1289 op equal *tmp418 *tmp417 @this
  1290 op land *tmp419 *tmp416 *tmp418
  1291 jump *label278 equal *tmp419 false
-    * set *tmp412 :rebindUnit.7:currentUnit
  1292 jump *label275 always
  1293 set *tmp420 null
  1294 jump *label279 always
  1295 label *label278
  1296 set *tmp420 null
  1297 label *label279
-    * set *tmp414 *tmp420
  1298 jump *label277 always
  1299 label *label276
-    * set *tmp414 null
  1300 label *label277
  1301 ubind .TYPE
  1302 set :rebindUnit.7:firstUnit @unit
 
  1306 sensor *tmp423 @unit @controlled
  1307 op equal *tmp424 *tmp423 0
  1308 jump *label285 equal *tmp424 false
-    * set *tmp412 @unit
  1309 jump *label275 always
-    * set *tmp425 null
  1310 jump *label286 always
  1311 label *label285
-    * set *tmp425 null
  1312 label *label286
  1313 ubind .TYPE
  1314 label *label283
 
  1318 op land *tmp429 *tmp426 *tmp428
  1319 jump *label282 notEqual *tmp429 false
  1320 label *label284
-    * set *tmp422 null
  1321 jump *label281 always
  1322 label *label280
-    * set *tmp422 null
  1323 label *label281
  1324 end
-    * set *tmp412 null
  1325 label *label275
  1326 sensor *tmp430 @unit @flag
  1327 set :processUnit.3:state *tmp430
 
  1359 label *label292
  1360 set *tmp437 *tmp440
  1361 label *label290
-    * set *tmp434 *tmp437
  1362 jump *label288 always
  1363 label *label287
-    * set *tmp434 null
  1364 label *label288
  1365 op equal *tmp443 :processUnit.3:state 2
  1366 jump *label295 equal *tmp443 false
 
  1393 set :processUnit.3:distance *tmp456
  1394 set *tmp446 :processUnit.3:distance
  1395 label *label298
-    * set *tmp444 *tmp446
  1396 jump *label296 always
  1397 label *label295
-    * set *tmp444 null
  1398 label *label296
  1399 op equal *tmp457 :processUnit.3:state 3
  1400 jump *label301 equal *tmp457 false
 
  1403 jump *label305 equal :processUnit.3:supply false
  1404 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1405 set .MSG ", supplying\n"
-    * set *tmp461 .MSG
  1406 jump *label306 always
  1407 label *label305
  1408 ucontrol approach .DOME_X .DOME_Y 6
  1409 set .MSG ", waiting\n"
-    * set *tmp461 .MSG
  1410 label *label306
  1411 sensor *tmp462 @unit @totalItems
  1412 op lessThanEq *tmp463 *tmp462 0
 
  1433 set :processUnit.3:distance *tmp471
  1434 set *tmp460 :processUnit.3:distance
  1435 label *label304
-    * set *tmp458 *tmp460
  1436 jump *label302 always
  1437 label *label301
-    * set *tmp458 null
  1438 label *label302
  1439 ucontrol flag :processUnit.3:state
  1440 sensor *tmp472 @unit @totalItems
 
  1454 print "["
  1455 print "] sec"
  1456 print "\n"
-    * set *tmp474 null
  1457 jump *label310 always
  1458 label *label309
  1459 print .MSG
-    * set *tmp474 .MSG
  1460 label *label310
  1461 set *tmp475 @unit
  1462 set :processUnit.3:unit *tmp475
 
  1473 set *tmp476 *tmp480
  1474 label *label312
  1475 set .SUPPLY_P_FIRST *tmp476
-    * set *tmp410 .SUPPLY_P_FIRST
  1476 jump *label273 always
  1477 label *label272
-    * set *tmp410 null
  1478 label *label273
  1479 op sub *tmp481 @time :start
  1480 op floor *tmp482 *tmp481
 
  1534 label *label326
  1535 set *tmp506 null
  1536 label *label327
-    * set *tmp504 *tmp506
  1537 jump *label325 always
  1538 label *label324
  1539 set *tmp507 :areUnitsAvailable.2:occupied
  1540 op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
-    * set *tmp504 *tmp507
  1541 label *label325
  1542 ubind :areUnitsAvailable.2:type
  1543 label *label322
 
  1547 op land *tmp511 *tmp508 *tmp510
  1548 jump *label321 notEqual *tmp511 false
  1549 label *label323
-    * set *tmp489 null
  1550 jump *label317 always
  1551 label *label316
-    * set *tmp489 null
  1552 label *label317
  1553 jump *label328 equal :areUnitsAvailable.2:output false
  1554 print :areUnitsAvailable.2:type
 
  1562 jump *label330 equal *tmp513 false
  1563 print ", needed: "
  1564 print :areUnitsAvailable.2:needed
-    * set *tmp514 null
  1565 jump *label331 always
  1566 label *label330
-    * set *tmp514 null
  1567 label *label331
  1568 print "\n"
-    * set *tmp512 null
  1569 jump *label329 always
  1570 label *label328
-    * set *tmp512 null
  1571 label *label329
  1572 set *tmp487 false
  1573 jump *label315 always
 
  1575 label *label315
  1576 jump *label332 equal *tmp487 false
  1577 end
-    * set *tmp515 null
  1578 jump *label333 always
  1579 label *label332
-    * set *tmp515 null
  1580 label *label333
  1581 op add *tmp516 @time 5000
  1582 set :unitCheck *tmp516
-    * set *tmp486 :unitCheck
  1583 jump *label314 always
  1584 label *label313
-    * set *tmp486 null
  1585 label *label314
  1586 label *label149
  1587 jump *label148 always
 
  1597 jump *label335 equal *tmp521 false
  1598 ulocate building core false @copper *tmp524 *tmp525 *tmp526 *tmp523
  1599 set .CORE *tmp523
-    * set *tmp522 .CORE
  1600 jump *label336 always
  1601 label *label335
-    * set *tmp522 null
  1602 label *label336
  1603 set :locateCore*retval .CORE
  1604 label *label334

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-53 instructions):
 
   112 jump *label36 equal *tmp28 false
   113 set *tmp10 true
   114 jump *label25 always
-    * set *tmp29 null
   115 jump *label37 always
   116 label *label36
-    * set *tmp29 null
   117 label *label37
   118 jump *label35 always
   119 label *label34
-    * set *tmp30 :areUnitsAvailable:occupied
   120 op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
   121 label *label35
   122 ubind :areUnitsAvailable:type
 
   217 jump *label64 equal *tmp60 false
   218 set *tmp42 true
   219 jump *label53 always
-    * set *tmp61 null
   220 jump *label65 always
   221 label *label64
-    * set *tmp61 null
   222 label *label65
   223 jump *label63 always
   224 label *label62
-    * set *tmp62 :areUnitsAvailable.1:occupied
   225 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   226 label *label63
   227 ubind :areUnitsAvailable.1:type
 
   262 printflush null
   263 set *tmp9 :chooseUnitType:type
   264 jump *label21 always
-    * set *tmp70 null
   265 jump *label71 always
   266 label *label70
-    * set *tmp70 null
   267 label *label71
   268 jump *label52 always
   269 label *label51
 
   308 op notEqual *tmp79 .UNIT_S2 null
   309 jump *label80 equal *tmp79 false
   310 jump *label77 always
-    * set *tmp80 null
   311 jump *label81 always
   312 label *label80
-    * set *tmp80 null
   313 label *label81
   314 jump *label79 always
   315 label *label78
 
   336 op land *tmp93 *tmp90 *tmp92
   337 jump *label86 equal *tmp93 false
   338 jump *label83 always
-    * set *tmp94 null
   339 jump *label87 always
   340 label *label86
-    * set *tmp94 null
   341 label *label87
   342 jump *label85 always
   343 label *label84
 
   385 op land *tmp112 *tmp109 *tmp111
   386 jump *label99 equal *tmp112 false
   387 jump *label96 always
-    * set *tmp113 null
   388 jump *label100 always
   389 label *label99
-    * set *tmp113 null
   390 label *label100
   391 jump *label98 always
   392 label *label97
 
   478 op land *tmp151 *tmp148 *tmp150
   479 jump *label120 equal *tmp151 false
   480 jump *label117 always
-    * set *tmp152 null
   481 jump *label121 always
   482 label *label120
-    * set *tmp152 null
   483 label *label121
   484 jump *label119 always
   485 label *label118
 
   527 op land *tmp170 *tmp167 *tmp169
   528 jump *label133 equal *tmp170 false
   529 jump *label130 always
-    * set *tmp171 null
   530 jump *label134 always
   531 label *label133
-    * set *tmp171 null
   532 label *label134
   533 jump *label132 always
   534 label *label131
 
   672 op land *tmp215 *tmp212 *tmp214
   673 jump *label158 equal *tmp215 false
   674 jump *label155 always
-    * set *tmp216 null
   675 jump *label159 always
   676 label *label158
-    * set *tmp216 null
   677 label *label159
   678 jump *label157 always
   679 label *label156
 
   715 op equal *tmp232 *tmp231 :processUnit:item
   716 jump *label169 equal *tmp232 false
   717 set :processUnit:state 3
-    * set *tmp233 :processUnit:state
   718 jump *label170 always
   719 label *label169
   720 sensor *tmp234 @unit @totalItems
 
   736 label *label174
   737 set *tmp236 *tmp238
   738 label *label172
-    * set *tmp233 *tmp236
   739 label *label170
   740 jump *label168 always
   741 label *label167
 
   756 set .MSG ", loading\n"
   757 set *tmp245 .MSG
   758 label *label180
-    * set *tmp242 *tmp245
   759 jump *label178 always
   760 label *label177
   761 ucontrol approach .CORE_X .CORE_Y 6
 
   768 op idiv *tmp251 *tmp250 .SPEED_TENTHS
   769 op div *tmp252 *tmp251 10
   770 set :processUnit:distance *tmp252
-    * set *tmp242 :processUnit:distance
   771 label *label178
   772 jump *label176 always
   773 label *label175
 
   794 label *label187
   795 set *tmp260 null
   796 label *label188
-    * set *tmp256 *tmp260
   797 jump *label184 always
   798 label *label183
   799 ucontrol approach .DOME_X .DOME_Y 6
 
   806 op idiv *tmp266 *tmp265 .SPEED_TENTHS
   807 op div *tmp267 *tmp266 10
   808 set :processUnit:distance *tmp267
-    * set *tmp256 :processUnit:distance
   809 label *label184
   810 jump *label182 always
   811 label *label181
 
   853 op land *tmp281 *tmp278 *tmp280
   854 jump *label197 equal *tmp281 false
   855 jump *label194 always
-    * set *tmp282 null
   856 jump *label198 always
   857 label *label197
-    * set *tmp282 null
   858 label *label198
   859 jump *label196 always
   860 label *label195
 
   896 op equal *tmp298 *tmp297 :processUnit.1:item
   897 jump *label208 equal *tmp298 false
   898 set :processUnit.1:state 3
-    * set *tmp299 :processUnit.1:state
   899 jump *label209 always
   900 label *label208
   901 sensor *tmp300 @unit @totalItems
 
   917 label *label213
   918 set *tmp302 *tmp304
   919 label *label211
-    * set *tmp299 *tmp302
   920 label *label209
   921 jump *label207 always
   922 label *label206
 
   937 set .MSG ", loading\n"
   938 set *tmp311 .MSG
   939 label *label219
-    * set *tmp308 *tmp311
   940 jump *label217 always
   941 label *label216
   942 ucontrol approach .CORE_X .CORE_Y 6
 
   949 op idiv *tmp317 *tmp316 .SPEED_TENTHS
   950 op div *tmp318 *tmp317 10
   951 set :processUnit.1:distance *tmp318
-    * set *tmp308 :processUnit.1:distance
   952 label *label217
   953 jump *label215 always
   954 label *label214
 
   975 label *label226
   976 set *tmp326 null
   977 label *label227
-    * set *tmp322 *tmp326
   978 jump *label223 always
   979 label *label222
   980 ucontrol approach .DOME_X .DOME_Y 6
 
   987 op idiv *tmp332 *tmp331 .SPEED_TENTHS
   988 op div *tmp333 *tmp332 10
   989 set :processUnit.1:distance *tmp333
-    * set *tmp322 :processUnit.1:distance
   990 label *label223
   991 jump *label221 always
   992 label *label220
 
  1067 op land *tmp353 *tmp350 *tmp352
  1068 jump *label239 equal *tmp353 false
  1069 jump *label236 always
-    * set *tmp354 null
  1070 jump *label240 always
  1071 label *label239
-    * set *tmp354 null
  1072 label *label240
  1073 jump *label238 always
  1074 label *label237
 
  1110 op equal *tmp370 *tmp369 :processUnit.2:item
  1111 jump *label250 equal *tmp370 false
  1112 set :processUnit.2:state 3
-    * set *tmp371 :processUnit.2:state
  1113 jump *label251 always
  1114 label *label250
  1115 sensor *tmp372 @unit @totalItems
 
  1131 label *label255
  1132 set *tmp374 *tmp376
  1133 label *label253
-    * set *tmp371 *tmp374
  1134 label *label251
  1135 jump *label249 always
  1136 label *label248
 
  1151 set .MSG ", loading\n"
  1152 set *tmp383 .MSG
  1153 label *label261
-    * set *tmp380 *tmp383
  1154 jump *label259 always
  1155 label *label258
  1156 ucontrol approach .CORE_X .CORE_Y 6
 
  1163 op idiv *tmp389 *tmp388 .SPEED_TENTHS
  1164 op div *tmp390 *tmp389 10
  1165 set :processUnit.2:distance *tmp390
-    * set *tmp380 :processUnit.2:distance
  1166 label *label259
  1167 jump *label257 always
  1168 label *label256
 
  1189 label *label268
  1190 set *tmp398 null
  1191 label *label269
-    * set *tmp394 *tmp398
  1192 jump *label265 always
  1193 label *label264
  1194 ucontrol approach .DOME_X .DOME_Y 6
 
  1201 op idiv *tmp404 *tmp403 .SPEED_TENTHS
  1202 op div *tmp405 *tmp404 10
  1203 set :processUnit.2:distance *tmp405
-    * set *tmp394 :processUnit.2:distance
  1204 label *label265
  1205 jump *label263 always
  1206 label *label262
 
  1248 op land *tmp419 *tmp416 *tmp418
  1249 jump *label278 equal *tmp419 false
  1250 jump *label275 always
-    * set *tmp420 null
  1251 jump *label279 always
  1252 label *label278
-    * set *tmp420 null
  1253 label *label279
  1254 jump *label277 always
  1255 label *label276
 
  1291 op equal *tmp436 *tmp435 :processUnit.3:item
  1292 jump *label289 equal *tmp436 false
  1293 set :processUnit.3:state 3
-    * set *tmp437 :processUnit.3:state
  1294 jump *label290 always
  1295 label *label289
  1296 sensor *tmp438 @unit @totalItems
 
  1312 label *label294
  1313 set *tmp440 *tmp442
  1314 label *label292
-    * set *tmp437 *tmp440
  1315 label *label290
  1316 jump *label288 always
  1317 label *label287
 
  1332 set .MSG ", loading\n"
  1333 set *tmp449 .MSG
  1334 label *label300
-    * set *tmp446 *tmp449
  1335 jump *label298 always
  1336 label *label297
  1337 ucontrol approach .CORE_X .CORE_Y 6
 
  1344 op idiv *tmp455 *tmp454 .SPEED_TENTHS
  1345 op div *tmp456 *tmp455 10
  1346 set :processUnit.3:distance *tmp456
-    * set *tmp446 :processUnit.3:distance
  1347 label *label298
  1348 jump *label296 always
  1349 label *label295
 
  1370 label *label307
  1371 set *tmp464 null
  1372 label *label308
-    * set *tmp460 *tmp464
  1373 jump *label304 always
  1374 label *label303
  1375 ucontrol approach .DOME_X .DOME_Y 6
 
  1382 op idiv *tmp470 *tmp469 .SPEED_TENTHS
  1383 op div *tmp471 *tmp470 10
  1384 set :processUnit.3:distance *tmp471
-    * set *tmp460 :processUnit.3:distance
  1385 label *label304
  1386 jump *label302 always
  1387 label *label301
 
  1479 jump *label326 equal *tmp505 false
  1480 set *tmp487 true
  1481 jump *label315 always
-    * set *tmp506 null
  1482 jump *label327 always
  1483 label *label326
-    * set *tmp506 null
  1484 label *label327
  1485 jump *label325 always
  1486 label *label324
-    * set *tmp507 :areUnitsAvailable.2:occupied
  1487 op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
  1488 label *label325
  1489 ubind :areUnitsAvailable.2:type

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-24 instructions):
 
   721 op equal *tmp235 *tmp234 0
   722 jump *label171 equal *tmp235 false
   723 set :processUnit:state 2
-    * set *tmp236 :processUnit:state
   724 jump *label172 always
   725 label *label171
   726 set .MSG ", initializing\n"
 
   733 label *label173
   734 set *tmp238 null
   735 label *label174
-    * set *tmp236 *tmp238
   736 label *label172
   737 label *label170
   738 jump *label168 always
 
   748 jump *label179 equal *tmp244 false
   749 ucontrol approach .DOME_X .DOME_Y 6
   750 set :processUnit:state 3
-    * set *tmp245 :processUnit:state
   751 jump *label180 always
   752 label *label179
   753 set .MSG ", loading\n"
-    * set *tmp245 .MSG
   754 label *label180
   755 jump *label178 always
   756 label *label177
 
   785 jump *label187 equal *tmp259 false
   786 ucontrol approach .CORE_X .CORE_Y 6
   787 set :processUnit:state 2
-    * set *tmp260 :processUnit:state
   788 jump *label188 always
   789 label *label187
-    * set *tmp260 null
   790 label *label188
   791 jump *label184 always
   792 label *label183
 
   896 op equal *tmp301 *tmp300 0
   897 jump *label210 equal *tmp301 false
   898 set :processUnit.1:state 2
-    * set *tmp302 :processUnit.1:state
   899 jump *label211 always
   900 label *label210
   901 set .MSG ", initializing\n"
 
   908 label *label212
   909 set *tmp304 null
   910 label *label213
-    * set *tmp302 *tmp304
   911 label *label211
   912 label *label209
   913 jump *label207 always
 
   923 jump *label218 equal *tmp310 false
   924 ucontrol approach .DOME_X .DOME_Y 6
   925 set :processUnit.1:state 3
-    * set *tmp311 :processUnit.1:state
   926 jump *label219 always
   927 label *label218
   928 set .MSG ", loading\n"
-    * set *tmp311 .MSG
   929 label *label219
   930 jump *label217 always
   931 label *label216
 
   960 jump *label226 equal *tmp325 false
   961 ucontrol approach .CORE_X .CORE_Y 6
   962 set :processUnit.1:state 2
-    * set *tmp326 :processUnit.1:state
   963 jump *label227 always
   964 label *label226
-    * set *tmp326 null
   965 label *label227
   966 jump *label223 always
   967 label *label222
 
  1104 op equal *tmp373 *tmp372 0
  1105 jump *label252 equal *tmp373 false
  1106 set :processUnit.2:state 2
-    * set *tmp374 :processUnit.2:state
  1107 jump *label253 always
  1108 label *label252
  1109 set .MSG ", initializing\n"
 
  1116 label *label254
  1117 set *tmp376 null
  1118 label *label255
-    * set *tmp374 *tmp376
  1119 label *label253
  1120 label *label251
  1121 jump *label249 always
 
  1131 jump *label260 equal *tmp382 false
  1132 ucontrol approach .DOME_X .DOME_Y 6
  1133 set :processUnit.2:state 3
-    * set *tmp383 :processUnit.2:state
  1134 jump *label261 always
  1135 label *label260
  1136 set .MSG ", loading\n"
-    * set *tmp383 .MSG
  1137 label *label261
  1138 jump *label259 always
  1139 label *label258
 
  1168 jump *label268 equal *tmp397 false
  1169 ucontrol approach .CORE_X .CORE_Y 6
  1170 set :processUnit.2:state 2
-    * set *tmp398 :processUnit.2:state
  1171 jump *label269 always
  1172 label *label268
-    * set *tmp398 null
  1173 label *label269
  1174 jump *label265 always
  1175 label *label264
 
  1279 op equal *tmp439 *tmp438 0
  1280 jump *label291 equal *tmp439 false
  1281 set :processUnit.3:state 2
-    * set *tmp440 :processUnit.3:state
  1282 jump *label292 always
  1283 label *label291
  1284 set .MSG ", initializing\n"
 
  1291 label *label293
  1292 set *tmp442 null
  1293 label *label294
-    * set *tmp440 *tmp442
  1294 label *label292
  1295 label *label290
  1296 jump *label288 always
 
  1306 jump *label299 equal *tmp448 false
  1307 ucontrol approach .DOME_X .DOME_Y 6
  1308 set :processUnit.3:state 3
-    * set *tmp449 :processUnit.3:state
  1309 jump *label300 always
  1310 label *label299
  1311 set .MSG ", loading\n"
-    * set *tmp449 .MSG
  1312 label *label300
  1313 jump *label298 always
  1314 label *label297
 
  1343 jump *label307 equal *tmp463 false
  1344 ucontrol approach .CORE_X .CORE_Y 6
  1345 set :processUnit.3:state 2
-    * set *tmp464 :processUnit.3:state
  1346 jump *label308 always
  1347 label *label307
-    * set *tmp464 null
  1348 label *label308
  1349 jump *label304 always
  1350 label *label303

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   728 ucontrol within .CORE_X .CORE_Y 8 *tmp237
   729 jump *label173 equal *tmp237 false
   730 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp238 null
   731 jump *label174 always
   732 label *label173
-    * set *tmp238 null
   733 label *label174
   734 label *label172
   735 label *label170
 
   901 ucontrol within .CORE_X .CORE_Y 8 *tmp303
   902 jump *label212 equal *tmp303 false
   903 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp304 null
   904 jump *label213 always
   905 label *label212
-    * set *tmp304 null
   906 label *label213
   907 label *label211
   908 label *label209
 
  1107 ucontrol within .CORE_X .CORE_Y 8 *tmp375
  1108 jump *label254 equal *tmp375 false
  1109 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp376 null
  1110 jump *label255 always
  1111 label *label254
-    * set *tmp376 null
  1112 label *label255
  1113 label *label253
  1114 label *label251
 
  1280 ucontrol within .CORE_X .CORE_Y 8 *tmp441
  1281 jump *label293 equal *tmp441 false
  1282 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp442 null
  1283 jump *label294 always
  1284 label *label293
-    * set *tmp442 null
  1285 label *label294
  1286 label *label292
  1287 label *label290

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-43 instructions):
 
    48 jump *label5 always
    49 label *label7
    50 label *label1
-    * sensor *tmp3 .CORE @x
-    * set .CORE_X *tmp3
-    * sensor *tmp4 .CORE @y
-    * set .CORE_Y *tmp4
-    * sensor *tmp5 .DOME @x
-    * set .DOME_X *tmp5
-    * sensor *tmp6 .DOME @y
-    * set .DOME_Y *tmp6
+   51 sensor .CORE_X .CORE @x
+   52 sensor .CORE_Y .CORE @y
+   53 sensor .DOME_X .DOME @x
+   54 sensor .DOME_Y .DOME @y
    55 label *label18
    56 sensor *tmp7 switch1 @enabled
    57 op equal *tmp8 *tmp7 false
 
    82 op len *tmp16 *tmp14 *tmp15
    83 op mul *tmp17 2 *tmp16
    84 sensor *tmp18 :needsFourUnits:unit @speed
-    * op div *tmp19 *tmp17 *tmp18
-    * set :needsFourUnits:travel_time *tmp19
-    * op greaterThanEq *tmp20 :needsFourUnits:travel_time 47
-    * set *tmp13 *tmp20
+   85 op div :needsFourUnits:travel_time *tmp17 *tmp18
+   86 op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
    87 jump *label28 always
    88 set *tmp13 null
    89 label *label28
 
   185 op len *tmp48 *tmp46 *tmp47
   186 op mul *tmp49 2 *tmp48
   187 sensor *tmp50 :needsFourUnits.1:unit @speed
-    * op div *tmp51 *tmp49 *tmp50
-    * set :needsFourUnits.1:travel_time *tmp51
-    * op greaterThanEq *tmp52 :needsFourUnits.1:travel_time 47
-    * set *tmp45 *tmp52
+  188 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  189 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
   190 jump *label56 always
   191 set *tmp45 null
   192 label *label56
 
   295 set .UNIT_S2 .UNIT_P2
   296 set .UNIT_P2 .UNIT_S1
   297 set .UNIT_S1 .UNIT_P1
-    * set *tmp78 @unit
-    * set .UNIT_P1 *tmp78
+  298 set .UNIT_P1 @unit
   299 op notEqual *tmp79 .UNIT_S2 null
   300 jump *label80 equal *tmp79 false
   301 jump *label77 always
 
   430 jump *label109 always
   431 label *label108
   432 label *label109
-    * sensor *tmp129 .UNIT_S1 @itemCapacity
-    * set .UNIT_CAPACITY *tmp129
-    * sensor *tmp130 .UNIT_S1 @speed
-    * set .SPEED *tmp130
-    * op div *tmp131 .SPEED 10
-    * set .SPEED_TENTHS *tmp131
+  433 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
+  434 sensor .SPEED .UNIT_S1 @speed
+  435 op div .SPEED_TENTHS .SPEED 10
   436 op strictEqual *tmp132 .SPEED null
   437 jump *label111 equal *tmp132 false
   438 stop
 
   445 op len *tmp137 *tmp135 *tmp136
   446 op mul *tmp138 2 *tmp137
   447 sensor *tmp139 :needsFourUnits.2:unit @speed
-    * op div *tmp140 *tmp138 *tmp139
-    * set :needsFourUnits.2:travel_time *tmp140
-    * op greaterThanEq *tmp141 :needsFourUnits.2:travel_time 47
-    * set *tmp134 *tmp141
+  448 op div :needsFourUnits.2:travel_time *tmp138 *tmp139
+  449 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
   450 jump *label113 always
   451 set *tmp134 null
   452 label *label113
 
   600 sensor *tmp194 .UNIT_S1 @totalItems
   601 sensor *tmp195 .UNIT_S2 @totalItems
   602 op lessThan *tmp196 *tmp194 *tmp195
-    * op or *tmp197 *tmp193 *tmp196
-    * set .SUPPLY_S_FIRST *tmp197
+  603 op or .SUPPLY_S_FIRST *tmp193 *tmp196
   604 op equal *tmp198 .FOUR_UNITS false
   605 sensor *tmp199 .UNIT_P1 @totalItems
   606 sensor *tmp200 .UNIT_P2 @totalItems
   607 op lessThan *tmp201 *tmp199 *tmp200
-    * op or *tmp202 *tmp198 *tmp201
-    * set .SUPPLY_P_FIRST *tmp202
-    * op add *tmp203 @time 5000
-    * set :unitCheck *tmp203
+  608 op or .SUPPLY_P_FIRST *tmp198 *tmp201
+  609 op add :unitCheck @time 5000
   610 label *label148
   611 sensor *tmp204 switch1 @enabled
   612 jump *label150 equal *tmp204 false
 
   622 set :printDomeStatus:item @silicon
   623 set :printDomeStatus:text "\n[green]Silicon[] status:\n"
   624 print :printDomeStatus:text
-    * sensor *tmp205 .DOME :printDomeStatus:item
-    * set :printDomeStatus:level *tmp205
+  625 sensor :printDomeStatus:level .DOME :printDomeStatus:item
   626 op greaterThan *tmp206 :printDomeStatus:level 3
   627 jump *label152 equal *tmp206 false
   628 print "  dome:  [green]"
 
   685 label *label161
   686 end
   687 label *label155
-    * sensor *tmp226 @unit @flag
-    * set :processUnit:state *tmp226
+  688 sensor :processUnit:state @unit @flag
   689 set :processUnit:distance -1
   690 set :processUnit:color "gold"
   691 op lessThan *tmp227 :processUnit:state 2
 
   741 op sub *tmp249 .CORE_Y *tmp248
   742 op len *tmp250 *tmp247 *tmp249
   743 op idiv *tmp251 *tmp250 .SPEED_TENTHS
-    * op div *tmp252 *tmp251 10
-    * set :processUnit:distance *tmp252
+  744 op div :processUnit:distance *tmp251 10
   745 label *label178
   746 jump *label176 always
   747 label *label175
 
   776 op sub *tmp264 .DOME_Y *tmp263
   777 op len *tmp265 *tmp262 *tmp264
   778 op idiv *tmp266 *tmp265 .SPEED_TENTHS
-    * op div *tmp267 *tmp266 10
-    * set :processUnit:distance *tmp267
+  779 op div :processUnit:distance *tmp266 10
   780 label *label184
   781 jump *label182 always
   782 label *label181
 
   803 label *label189
   804 print .MSG
   805 label *label190
-    * set *tmp271 @unit
-    * set :processUnit:unit *tmp271
+  806 set :processUnit:unit @unit
   807 label *label154
   808 set .UNIT_S1 :processUnit:unit
   809 jump *label191 equal .FOUR_UNITS false
 
   854 label *label200
   855 end
   856 label *label194
-    * sensor *tmp292 @unit @flag
-    * set :processUnit.1:state *tmp292
+  857 sensor :processUnit.1:state @unit @flag
   858 set :processUnit.1:distance -1
   859 set :processUnit.1:color "gold"
   860 op lessThan *tmp293 :processUnit.1:state 2
 
   910 op sub *tmp315 .CORE_Y *tmp314
   911 op len *tmp316 *tmp313 *tmp315
   912 op idiv *tmp317 *tmp316 .SPEED_TENTHS
-    * op div *tmp318 *tmp317 10
-    * set :processUnit.1:distance *tmp318
+  913 op div :processUnit.1:distance *tmp317 10
   914 label *label217
   915 jump *label215 always
   916 label *label214
 
   945 op sub *tmp330 .DOME_Y *tmp329
   946 op len *tmp331 *tmp328 *tmp330
   947 op idiv *tmp332 *tmp331 .SPEED_TENTHS
-    * op div *tmp333 *tmp332 10
-    * set :processUnit.1:distance *tmp333
+  948 op div :processUnit.1:distance *tmp332 10
   949 label *label223
   950 jump *label221 always
   951 label *label220
 
   972 label *label228
   973 print .MSG
   974 label *label229
-    * set *tmp337 @unit
-    * set :processUnit.1:unit *tmp337
+  975 set :processUnit.1:unit @unit
   976 label *label193
   977 set .UNIT_S2 :processUnit.1:unit
   978 jump *label230 equal .SUPPLY_S_FIRST false
   979 sensor *tmp339 .UNIT_S1 @totalItems
-    * op greaterThan *tmp340 *tmp339 0
-    * set *tmp338 *tmp340
+  980 op greaterThan *tmp338 *tmp339 0
   981 jump *label231 always
   982 label *label230
   983 sensor *tmp341 .UNIT_S2 @totalItems
-    * op equal *tmp342 *tmp341 0
-    * set *tmp338 *tmp342
+  984 op equal *tmp338 *tmp341 0
   985 label *label231
   986 set .SUPPLY_S_FIRST *tmp338
   987 jump *label192 always
 
   990 set :printDomeStatus.1:item @phase-fabric
   991 set :printDomeStatus.1:text "\n[green]Phase fabric[] status:\n"
   992 print :printDomeStatus.1:text
-    * sensor *tmp343 .DOME :printDomeStatus.1:item
-    * set :printDomeStatus.1:level *tmp343
+  993 sensor :printDomeStatus.1:level .DOME :printDomeStatus.1:item
   994 op greaterThan *tmp344 :printDomeStatus.1:level 3
   995 jump *label233 equal *tmp344 false
   996 print "  dome:  [green]"
 
  1053 label *label242
  1054 end
  1055 label *label236
-    * sensor *tmp364 @unit @flag
-    * set :processUnit.2:state *tmp364
+ 1056 sensor :processUnit.2:state @unit @flag
  1057 set :processUnit.2:distance -1
  1058 set :processUnit.2:color "gold"
  1059 op lessThan *tmp365 :processUnit.2:state 2
 
  1109 op sub *tmp387 .CORE_Y *tmp386
  1110 op len *tmp388 *tmp385 *tmp387
  1111 op idiv *tmp389 *tmp388 .SPEED_TENTHS
-    * op div *tmp390 *tmp389 10
-    * set :processUnit.2:distance *tmp390
+ 1112 op div :processUnit.2:distance *tmp389 10
  1113 label *label259
  1114 jump *label257 always
  1115 label *label256
 
  1144 op sub *tmp402 .DOME_Y *tmp401
  1145 op len *tmp403 *tmp400 *tmp402
  1146 op idiv *tmp404 *tmp403 .SPEED_TENTHS
-    * op div *tmp405 *tmp404 10
-    * set :processUnit.2:distance *tmp405
+ 1147 op div :processUnit.2:distance *tmp404 10
  1148 label *label265
  1149 jump *label263 always
  1150 label *label262
 
  1171 label *label270
  1172 print .MSG
  1173 label *label271
-    * set *tmp409 @unit
-    * set :processUnit.2:unit *tmp409
+ 1174 set :processUnit.2:unit @unit
  1175 label *label235
  1176 set .UNIT_P1 :processUnit.2:unit
  1177 jump *label272 equal .FOUR_UNITS false
 
  1222 label *label281
  1223 end
  1224 label *label275
-    * sensor *tmp430 @unit @flag
-    * set :processUnit.3:state *tmp430
+ 1225 sensor :processUnit.3:state @unit @flag
  1226 set :processUnit.3:distance -1
  1227 set :processUnit.3:color "gold"
  1228 op lessThan *tmp431 :processUnit.3:state 2
 
  1278 op sub *tmp453 .CORE_Y *tmp452
  1279 op len *tmp454 *tmp451 *tmp453
  1280 op idiv *tmp455 *tmp454 .SPEED_TENTHS
-    * op div *tmp456 *tmp455 10
-    * set :processUnit.3:distance *tmp456
+ 1281 op div :processUnit.3:distance *tmp455 10
  1282 label *label298
  1283 jump *label296 always
  1284 label *label295
 
  1313 op sub *tmp468 .DOME_Y *tmp467
  1314 op len *tmp469 *tmp466 *tmp468
  1315 op idiv *tmp470 *tmp469 .SPEED_TENTHS
-    * op div *tmp471 *tmp470 10
-    * set :processUnit.3:distance *tmp471
+ 1316 op div :processUnit.3:distance *tmp470 10
  1317 label *label304
  1318 jump *label302 always
  1319 label *label301
 
  1340 label *label309
  1341 print .MSG
  1342 label *label310
-    * set *tmp475 @unit
-    * set :processUnit.3:unit *tmp475
+ 1343 set :processUnit.3:unit @unit
  1344 label *label274
  1345 set .UNIT_P2 :processUnit.3:unit
  1346 jump *label311 equal .SUPPLY_P_FIRST false
  1347 sensor *tmp477 .UNIT_P1 @totalItems
-    * op greaterThan *tmp478 *tmp477 0
-    * set *tmp476 *tmp478
+ 1348 op greaterThan *tmp476 *tmp477 0
  1349 jump *label312 always
  1350 label *label311
  1351 sensor *tmp479 .UNIT_P2 @totalItems
-    * op equal *tmp480 *tmp479 0
-    * set *tmp476 *tmp480
+ 1352 op equal *tmp476 *tmp479 0
  1353 label *label312
  1354 set .SUPPLY_P_FIRST *tmp476
  1355 jump *label273 always
 
  1382 op len *tmp493 *tmp491 *tmp492
  1383 op mul *tmp494 2 *tmp493
  1384 sensor *tmp495 :needsFourUnits.3:unit @speed
-    * op div *tmp496 *tmp494 *tmp495
-    * set :needsFourUnits.3:travel_time *tmp496
-    * op greaterThanEq *tmp497 :needsFourUnits.3:travel_time 47
-    * set *tmp490 *tmp497
+ 1385 op div :needsFourUnits.3:travel_time *tmp494 *tmp495
+ 1386 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
  1387 jump *label318 always
  1388 set *tmp490 null
  1389 label *label318
 
  1452 jump *label333 always
  1453 label *label332
  1454 label *label333
-    * op add *tmp516 @time 5000
-    * set :unitCheck *tmp516
+ 1455 op add :unitCheck @time 5000
  1456 jump *label314 always
  1457 label *label313
  1458 label *label314
 
  1468 op equal *tmp520 *tmp519 @this
  1469 op or *tmp521 *tmp518 *tmp520
  1470 jump *label335 equal *tmp521 false
-    * ulocate building core false @copper *tmp524 *tmp525 *tmp526 *tmp523
-    * set .CORE *tmp523
+ 1471 ulocate building core false @copper *tmp524 *tmp525 *tmp526 .CORE
  1472 jump *label336 always
  1473 label *label335
  1474 label *label336

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
    15 printflush message1
    16 set .CORE null
    17 label *label5
-    * jump *label7 equal true false
    18 set :locateDomeAndCore:type @flare
    19 setaddr *tmp1 *label11
    20 jump *label8 always
 
    62 jump *label18 always
    63 label *label20
    64 label *label22
-    * jump *label24 equal true false
    65 printflush null
    66 print "[gold]Looking for suitable unit type:[]"
    67 print "\n"

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-69 instructions):
 
     3 remark "Do not modify anything below this line."
     4 set .DOME dome1
     5 label *label2
-    * op equal *tmp0 .DOME null
-    * jump *label4 equal *tmp0 false
+    6 jump *label4 notEqual .DOME null
     7 print "[gold]Waiting for an overdrive dome to be connected..."
     8 printflush message1
     9 set .DOME dome1
 
    52 sensor .DOME_Y .DOME @y
    53 label *label18
    54 sensor *tmp7 switch1 @enabled
-    * op equal *tmp8 *tmp7 false
-    * jump *label20 equal *tmp8 false
+   55 jump *label20 notEqual *tmp7 false
    56 print "[coral]Activate switch to begin supplying overdrive dome..."
    57 print "\n"
    58 printflush message1
 
    70 set :areUnitsAvailable:needed 0
    71 ubind :areUnitsAvailable:type
    72 set :areUnitsAvailable:firstUnit @unit
-    * op notEqual *tmp11 :areUnitsAvailable:firstUnit null
-    * jump *label26 equal *tmp11 false
+   73 jump *label26 equal :areUnitsAvailable:firstUnit null
    74 set :needsFourUnits:unit @unit
    75 op sub *tmp14 .DOME_X .CORE_X
    76 op sub *tmp15 .DOME_Y .CORE_Y
 
    97 op or *tmp26 *tmp23 *tmp25
    98 jump *label34 equal *tmp26 false
    99 op add :areUnitsAvailable:free :areUnitsAvailable:free 1
-    * op greaterThanEq *tmp28 :areUnitsAvailable:free :areUnitsAvailable:needed
-    * jump *label36 equal *tmp28 false
+  100 jump *label36 lessThan :areUnitsAvailable:free :areUnitsAvailable:needed
   101 set *tmp10 true
   102 jump *label25 always
   103 jump *label37 always
 
   126 print ","
   127 print " free: "
   128 print :areUnitsAvailable:free
-    * op greaterThan *tmp36 :areUnitsAvailable:needed 0
-    * jump *label40 equal *tmp36 false
+  129 jump *label40 lessThanEq :areUnitsAvailable:needed 0
   130 print ", needed: "
   131 print :areUnitsAvailable:needed
   132 jump *label41 always
 
   161 set :chooseUnitType:type @mono
   162 setaddr *tmp39 *label50
   163 label *label44
-    * op notEqual *tmp40 :chooseUnitType:type UNIT_TYPE
-    * jump *label51 equal *tmp40 false
+  164 jump *label51 equal :chooseUnitType:type UNIT_TYPE
   165 set :areUnitsAvailable.1:type :chooseUnitType:type
   166 set :areUnitsAvailable.1:output true
   167 set :areUnitsAvailable.1:free 0
 
   169 set :areUnitsAvailable.1:needed 0
   170 ubind :areUnitsAvailable.1:type
   171 set :areUnitsAvailable.1:firstUnit @unit
-    * op notEqual *tmp43 :areUnitsAvailable.1:firstUnit null
-    * jump *label54 equal *tmp43 false
+  172 jump *label54 equal :areUnitsAvailable.1:firstUnit null
   173 set :needsFourUnits.1:unit @unit
   174 op sub *tmp46 .DOME_X .CORE_X
   175 op sub *tmp47 .DOME_Y .CORE_Y
 
   196 op or *tmp58 *tmp55 *tmp57
   197 jump *label62 equal *tmp58 false
   198 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * op greaterThanEq *tmp60 :areUnitsAvailable.1:free :areUnitsAvailable.1:needed
-    * jump *label64 equal *tmp60 false
+  199 jump *label64 lessThan :areUnitsAvailable.1:free :areUnitsAvailable.1:needed
   200 set *tmp42 true
   201 jump *label53 always
   202 jump *label65 always
 
   225 print ","
   226 print " free: "
   227 print :areUnitsAvailable.1:free
-    * op greaterThan *tmp68 :areUnitsAvailable.1:needed 0
-    * jump *label68 equal *tmp68 false
+  228 jump *label68 lessThanEq :areUnitsAvailable.1:needed 0
   229 print ", needed: "
   230 print :areUnitsAvailable.1:needed
   231 jump *label69 always
 
   269 set :rebindUnits:count 0
   270 ubind .TYPE
   271 set :rebindUnits:firstUnit @unit
-    * op equal *tmp72 :rebindUnits:firstUnit null
-    * jump *label73 equal *tmp72 false
+  272 jump *label73 notEqual :rebindUnits:firstUnit null
   273 end
   274 jump *label74 always
   275 label *label73
   276 label *label74
   277 label *label75
   278 sensor *tmp74 @unit @controller
-    * op equal *tmp75 *tmp74 @this
-    * jump *label78 equal *tmp75 false
+  279 jump *label78 notEqual *tmp74 @this
   280 op add :rebindUnits:count :rebindUnits:count 1
   281 ucontrol flag 1
   282 set .UNIT_S2 .UNIT_P2
   283 set .UNIT_P2 .UNIT_S1
   284 set .UNIT_S1 .UNIT_P1
   285 set .UNIT_P1 @unit
-    * op notEqual *tmp79 .UNIT_S2 null
-    * jump *label80 equal *tmp79 false
+  286 jump *label80 equal .UNIT_S2 null
   287 jump *label77 always
   288 jump *label81 always
   289 label *label80
 
   303 label *label72
   304 set :acquireUnit:currentUnit .UNIT_S1
   305 set :rebindUnit:currentUnit :acquireUnit:currentUnit
-    * op notEqual *tmp87 :rebindUnit:currentUnit null
-    * jump *label84 equal *tmp87 false
+  306 jump *label84 equal :rebindUnit:currentUnit null
   307 ubind :rebindUnit:currentUnit
   308 sensor *tmp89 @unit @dead
   309 op equal *tmp90 *tmp89 0
 
   320 label *label85
   321 ubind .TYPE
   322 set :rebindUnit:firstUnit @unit
-    * op notEqual *tmp95 :rebindUnit:firstUnit null
-    * jump *label88 equal *tmp95 false
+  323 jump *label88 equal :rebindUnit:firstUnit null
   324 label *label90
   325 sensor *tmp97 @unit @controlled
-    * op equal *tmp98 *tmp97 0
-    * jump *label93 equal *tmp98 false
+  326 jump *label93 notEqual *tmp97 0
   327 jump *label83 always
   328 jump *label94 always
   329 label *label93
 
   349 set .UNIT_S1 *tmp85
   350 set :acquireUnit.1:currentUnit .UNIT_P1
   351 set :rebindUnit.1:currentUnit :acquireUnit.1:currentUnit
-    * op notEqual *tmp106 :rebindUnit.1:currentUnit null
-    * jump *label97 equal *tmp106 false
+  352 jump *label97 equal :rebindUnit.1:currentUnit null
   353 ubind :rebindUnit.1:currentUnit
   354 sensor *tmp108 @unit @dead
   355 op equal *tmp109 *tmp108 0
 
   366 label *label98
   367 ubind .TYPE
   368 set :rebindUnit.1:firstUnit @unit
-    * op notEqual *tmp114 :rebindUnit.1:firstUnit null
-    * jump *label101 equal *tmp114 false
+  369 jump *label101 equal :rebindUnit.1:firstUnit null
   370 label *label103
   371 sensor *tmp116 @unit @controlled
-    * op equal *tmp117 *tmp116 0
-    * jump *label106 equal *tmp117 false
+  372 jump *label106 notEqual *tmp116 0
   373 jump *label96 always
   374 jump *label107 always
   375 label *label106
 
   434 jump *label114 equal .FOUR_UNITS false
   435 set :acquireUnit.2:currentUnit .UNIT_S2
   436 set :rebindUnit.2:currentUnit :acquireUnit.2:currentUnit
-    * op notEqual *tmp145 :rebindUnit.2:currentUnit null
-    * jump *label118 equal *tmp145 false
+  437 jump *label118 equal :rebindUnit.2:currentUnit null
   438 ubind :rebindUnit.2:currentUnit
   439 sensor *tmp147 @unit @dead
   440 op equal *tmp148 *tmp147 0
 
   451 label *label119
   452 ubind .TYPE
   453 set :rebindUnit.2:firstUnit @unit
-    * op notEqual *tmp153 :rebindUnit.2:firstUnit null
-    * jump *label122 equal *tmp153 false
+  454 jump *label122 equal :rebindUnit.2:firstUnit null
   455 label *label124
   456 sensor *tmp155 @unit @controlled
-    * op equal *tmp156 *tmp155 0
-    * jump *label127 equal *tmp156 false
+  457 jump *label127 notEqual *tmp155 0
   458 jump *label117 always
   459 jump *label128 always
   460 label *label127
 
   480 set .UNIT_S2 *tmp143
   481 set :acquireUnit.3:currentUnit .UNIT_P2
   482 set :rebindUnit.3:currentUnit :acquireUnit.3:currentUnit
-    * op notEqual *tmp164 :rebindUnit.3:currentUnit null
-    * jump *label131 equal *tmp164 false
+  483 jump *label131 equal :rebindUnit.3:currentUnit null
   484 ubind :rebindUnit.3:currentUnit
   485 sensor *tmp166 @unit @dead
   486 op equal *tmp167 *tmp166 0
 
   497 label *label132
   498 ubind .TYPE
   499 set :rebindUnit.3:firstUnit @unit
-    * op notEqual *tmp172 :rebindUnit.3:firstUnit null
-    * jump *label135 equal *tmp172 false
+  500 jump *label135 equal :rebindUnit.3:firstUnit null
   501 label *label137
   502 sensor *tmp174 @unit @controlled
-    * op equal *tmp175 *tmp174 0
-    * jump *label140 equal *tmp175 false
+  503 jump *label140 notEqual *tmp174 0
   504 jump *label130 always
   505 jump *label141 always
   506 label *label140
 
   597 set :printDomeStatus:text "\n[green]Silicon[] status:\n"
   598 print :printDomeStatus:text
   599 sensor :printDomeStatus:level .DOME :printDomeStatus:item
-    * op greaterThan *tmp206 :printDomeStatus:level 3
-    * jump *label152 equal *tmp206 false
+  600 jump *label152 lessThanEq :printDomeStatus:level 3
   601 print "  dome:  [green]"
   602 print :printDomeStatus:level
   603 print "["
 
   617 set :processUnit:group .GROUP1
   618 set :processUnit:supply .SUPPLY_S_FIRST
   619 set :rebindUnit.4:currentUnit :processUnit:unit
-    * op notEqual *tmp209 :rebindUnit.4:currentUnit null
-    * jump *label156 equal *tmp209 false
+  620 jump *label156 equal :rebindUnit.4:currentUnit null
   621 ubind :rebindUnit.4:currentUnit
   622 sensor *tmp211 @unit @dead
   623 op equal *tmp212 *tmp211 0
 
   634 label *label157
   635 ubind .TYPE
   636 set :rebindUnit.4:firstUnit @unit
-    * op notEqual *tmp217 :rebindUnit.4:firstUnit null
-    * jump *label160 equal *tmp217 false
+  637 jump *label160 equal :rebindUnit.4:firstUnit null
   638 label *label162
   639 sensor *tmp219 @unit @controlled
-    * op equal *tmp220 *tmp219 0
-    * jump *label165 equal *tmp220 false
+  640 jump *label165 notEqual *tmp219 0
   641 jump *label155 always
   642 jump *label166 always
   643 label *label165
 
   663 op or *tmp229 *tmp227 *tmp228
   664 jump *label167 equal *tmp229 false
   665 sensor *tmp231 @unit @firstItem
-    * op equal *tmp232 *tmp231 :processUnit:item
-    * jump *label169 equal *tmp232 false
+  666 jump *label169 notEqual *tmp231 :processUnit:item
   667 set :processUnit:state 3
   668 jump *label170 always
   669 label *label169
   670 sensor *tmp234 @unit @totalItems
-    * op equal *tmp235 *tmp234 0
-    * jump *label171 equal *tmp235 false
+  671 jump *label171 notEqual *tmp234 0
   672 set :processUnit:state 2
   673 jump *label172 always
   674 label *label171
 
   685 jump *label168 always
   686 label *label167
   687 label *label168
-    * op equal *tmp239 :processUnit:state 2
-    * jump *label175 equal *tmp239 false
+  688 jump *label175 notEqual :processUnit:state 2
   689 ucontrol within .CORE_X .CORE_Y 8 *tmp241
   690 jump *label177 equal *tmp241 false
   691 ucontrol itemTake .CORE :processUnit:item .UNIT_CAPACITY
   692 sensor *tmp243 @unit @totalItems
-    * op greaterThanEq *tmp244 *tmp243 .UNIT_CAPACITY
-    * jump *label179 equal *tmp244 false
+  693 jump *label179 lessThan *tmp243 .UNIT_CAPACITY
   694 ucontrol approach .DOME_X .DOME_Y 6
   695 set :processUnit:state 3
   696 jump *label180 always
 
   712 jump *label176 always
   713 label *label175
   714 label *label176
-    * op equal *tmp253 :processUnit:state 3
-    * jump *label181 equal *tmp253 false
+  715 jump *label181 notEqual :processUnit:state 3
   716 ucontrol within .DOME_X .DOME_Y 8 *tmp255
   717 jump *label183 equal *tmp255 false
   718 jump *label185 equal :processUnit:supply false
 
   724 set .MSG ", waiting\n"
   725 label *label186
   726 sensor *tmp258 @unit @totalItems
-    * op lessThanEq *tmp259 *tmp258 0
-    * jump *label187 equal *tmp259 false
+  727 jump *label187 greaterThan *tmp258 0
   728 ucontrol approach .CORE_X .CORE_Y 6
   729 set :processUnit:state 2
   730 jump *label188 always
 
   756 print *tmp268
   757 print "["
   758 print "]"
-    * op greaterThanEq *tmp269 :processUnit:distance 0
-    * jump *label189 equal *tmp269 false
+  759 jump *label189 lessThan :processUnit:distance 0
   760 print .MSG
   761 print :processUnit:distance
   762 print "["
 
   776 set :processUnit.1:group .GROUP2
   777 set :processUnit.1:supply *tmp273
   778 set :rebindUnit.5:currentUnit :processUnit.1:unit
-    * op notEqual *tmp275 :rebindUnit.5:currentUnit null
-    * jump *label195 equal *tmp275 false
+  779 jump *label195 equal :rebindUnit.5:currentUnit null
   780 ubind :rebindUnit.5:currentUnit
   781 sensor *tmp277 @unit @dead
   782 op equal *tmp278 *tmp277 0
 
   793 label *label196
   794 ubind .TYPE
   795 set :rebindUnit.5:firstUnit @unit
-    * op notEqual *tmp283 :rebindUnit.5:firstUnit null
-    * jump *label199 equal *tmp283 false
+  796 jump *label199 equal :rebindUnit.5:firstUnit null
   797 label *label201
   798 sensor *tmp285 @unit @controlled
-    * op equal *tmp286 *tmp285 0
-    * jump *label204 equal *tmp286 false
+  799 jump *label204 notEqual *tmp285 0
   800 jump *label194 always
   801 jump *label205 always
   802 label *label204
 
   822 op or *tmp295 *tmp293 *tmp294
   823 jump *label206 equal *tmp295 false
   824 sensor *tmp297 @unit @firstItem
-    * op equal *tmp298 *tmp297 :processUnit.1:item
-    * jump *label208 equal *tmp298 false
+  825 jump *label208 notEqual *tmp297 :processUnit.1:item
   826 set :processUnit.1:state 3
   827 jump *label209 always
   828 label *label208
   829 sensor *tmp300 @unit @totalItems
-    * op equal *tmp301 *tmp300 0
-    * jump *label210 equal *tmp301 false
+  830 jump *label210 notEqual *tmp300 0
   831 set :processUnit.1:state 2
   832 jump *label211 always
   833 label *label210
 
   844 jump *label207 always
   845 label *label206
   846 label *label207
-    * op equal *tmp305 :processUnit.1:state 2
-    * jump *label214 equal *tmp305 false
+  847 jump *label214 notEqual :processUnit.1:state 2
   848 ucontrol within .CORE_X .CORE_Y 8 *tmp307
   849 jump *label216 equal *tmp307 false
   850 ucontrol itemTake .CORE :processUnit.1:item .UNIT_CAPACITY
   851 sensor *tmp309 @unit @totalItems
-    * op greaterThanEq *tmp310 *tmp309 .UNIT_CAPACITY
-    * jump *label218 equal *tmp310 false
+  852 jump *label218 lessThan *tmp309 .UNIT_CAPACITY
   853 ucontrol approach .DOME_X .DOME_Y 6
   854 set :processUnit.1:state 3
   855 jump *label219 always
 
   871 jump *label215 always
   872 label *label214
   873 label *label215
-    * op equal *tmp319 :processUnit.1:state 3
-    * jump *label220 equal *tmp319 false
+  874 jump *label220 notEqual :processUnit.1:state 3
   875 ucontrol within .DOME_X .DOME_Y 8 *tmp321
   876 jump *label222 equal *tmp321 false
   877 jump *label224 equal :processUnit.1:supply false
 
   883 set .MSG ", waiting\n"
   884 label *label225
   885 sensor *tmp324 @unit @totalItems
-    * op lessThanEq *tmp325 *tmp324 0
-    * jump *label226 equal *tmp325 false
+  886 jump *label226 greaterThan *tmp324 0
   887 ucontrol approach .CORE_X .CORE_Y 6
   888 set :processUnit.1:state 2
   889 jump *label227 always
 
   915 print *tmp334
   916 print "["
   917 print "]"
-    * op greaterThanEq *tmp335 :processUnit.1:distance 0
-    * jump *label228 equal *tmp335 false
+  918 jump *label228 lessThan :processUnit.1:distance 0
   919 print .MSG
   920 print :processUnit.1:distance
   921 print "["
 
   944 set :printDomeStatus.1:text "\n[green]Phase fabric[] status:\n"
   945 print :printDomeStatus.1:text
   946 sensor :printDomeStatus.1:level .DOME :printDomeStatus.1:item
-    * op greaterThan *tmp344 :printDomeStatus.1:level 3
-    * jump *label233 equal *tmp344 false
+  947 jump *label233 lessThanEq :printDomeStatus.1:level 3
   948 print "  dome:  [green]"
   949 print :printDomeStatus.1:level
   950 print "["
 
   964 set :processUnit.2:group .GROUP1
   965 set :processUnit.2:supply .SUPPLY_P_FIRST
   966 set :rebindUnit.6:currentUnit :processUnit.2:unit
-    * op notEqual *tmp347 :rebindUnit.6:currentUnit null
-    * jump *label237 equal *tmp347 false
+  967 jump *label237 equal :rebindUnit.6:currentUnit null
   968 ubind :rebindUnit.6:currentUnit
   969 sensor *tmp349 @unit @dead
   970 op equal *tmp350 *tmp349 0
 
   981 label *label238
   982 ubind .TYPE
   983 set :rebindUnit.6:firstUnit @unit
-    * op notEqual *tmp355 :rebindUnit.6:firstUnit null
-    * jump *label241 equal *tmp355 false
+  984 jump *label241 equal :rebindUnit.6:firstUnit null
   985 label *label243
   986 sensor *tmp357 @unit @controlled
-    * op equal *tmp358 *tmp357 0
-    * jump *label246 equal *tmp358 false
+  987 jump *label246 notEqual *tmp357 0
   988 jump *label236 always
   989 jump *label247 always
   990 label *label246
 
  1010 op or *tmp367 *tmp365 *tmp366
  1011 jump *label248 equal *tmp367 false
  1012 sensor *tmp369 @unit @firstItem
-    * op equal *tmp370 *tmp369 :processUnit.2:item
-    * jump *label250 equal *tmp370 false
+ 1013 jump *label250 notEqual *tmp369 :processUnit.2:item
  1014 set :processUnit.2:state 3
  1015 jump *label251 always
  1016 label *label250
  1017 sensor *tmp372 @unit @totalItems
-    * op equal *tmp373 *tmp372 0
-    * jump *label252 equal *tmp373 false
+ 1018 jump *label252 notEqual *tmp372 0
  1019 set :processUnit.2:state 2
  1020 jump *label253 always
  1021 label *label252
 
  1032 jump *label249 always
  1033 label *label248
  1034 label *label249
-    * op equal *tmp377 :processUnit.2:state 2
-    * jump *label256 equal *tmp377 false
+ 1035 jump *label256 notEqual :processUnit.2:state 2
  1036 ucontrol within .CORE_X .CORE_Y 8 *tmp379
  1037 jump *label258 equal *tmp379 false
  1038 ucontrol itemTake .CORE :processUnit.2:item .UNIT_CAPACITY
  1039 sensor *tmp381 @unit @totalItems
-    * op greaterThanEq *tmp382 *tmp381 .UNIT_CAPACITY
-    * jump *label260 equal *tmp382 false
+ 1040 jump *label260 lessThan *tmp381 .UNIT_CAPACITY
  1041 ucontrol approach .DOME_X .DOME_Y 6
  1042 set :processUnit.2:state 3
  1043 jump *label261 always
 
  1059 jump *label257 always
  1060 label *label256
  1061 label *label257
-    * op equal *tmp391 :processUnit.2:state 3
-    * jump *label262 equal *tmp391 false
+ 1062 jump *label262 notEqual :processUnit.2:state 3
  1063 ucontrol within .DOME_X .DOME_Y 8 *tmp393
  1064 jump *label264 equal *tmp393 false
  1065 jump *label266 equal :processUnit.2:supply false
 
  1071 set .MSG ", waiting\n"
  1072 label *label267
  1073 sensor *tmp396 @unit @totalItems
-    * op lessThanEq *tmp397 *tmp396 0
-    * jump *label268 equal *tmp397 false
+ 1074 jump *label268 greaterThan *tmp396 0
  1075 ucontrol approach .CORE_X .CORE_Y 6
  1076 set :processUnit.2:state 2
  1077 jump *label269 always
 
  1103 print *tmp406
  1104 print "["
  1105 print "]"
-    * op greaterThanEq *tmp407 :processUnit.2:distance 0
-    * jump *label270 equal *tmp407 false
+ 1106 jump *label270 lessThan :processUnit.2:distance 0
  1107 print .MSG
  1108 print :processUnit.2:distance
  1109 print "["
 
  1123 set :processUnit.3:group .GROUP2
  1124 set :processUnit.3:supply *tmp411
  1125 set :rebindUnit.7:currentUnit :processUnit.3:unit
-    * op notEqual *tmp413 :rebindUnit.7:currentUnit null
-    * jump *label276 equal *tmp413 false
+ 1126 jump *label276 equal :rebindUnit.7:currentUnit null
  1127 ubind :rebindUnit.7:currentUnit
  1128 sensor *tmp415 @unit @dead
  1129 op equal *tmp416 *tmp415 0
 
  1140 label *label277
  1141 ubind .TYPE
  1142 set :rebindUnit.7:firstUnit @unit
-    * op notEqual *tmp421 :rebindUnit.7:firstUnit null
-    * jump *label280 equal *tmp421 false
+ 1143 jump *label280 equal :rebindUnit.7:firstUnit null
  1144 label *label282
  1145 sensor *tmp423 @unit @controlled
-    * op equal *tmp424 *tmp423 0
-    * jump *label285 equal *tmp424 false
+ 1146 jump *label285 notEqual *tmp423 0
  1147 jump *label275 always
  1148 jump *label286 always
  1149 label *label285
 
  1169 op or *tmp433 *tmp431 *tmp432
  1170 jump *label287 equal *tmp433 false
  1171 sensor *tmp435 @unit @firstItem
-    * op equal *tmp436 *tmp435 :processUnit.3:item
-    * jump *label289 equal *tmp436 false
+ 1172 jump *label289 notEqual *tmp435 :processUnit.3:item
  1173 set :processUnit.3:state 3
  1174 jump *label290 always
  1175 label *label289
  1176 sensor *tmp438 @unit @totalItems
-    * op equal *tmp439 *tmp438 0
-    * jump *label291 equal *tmp439 false
+ 1177 jump *label291 notEqual *tmp438 0
  1178 set :processUnit.3:state 2
  1179 jump *label292 always
  1180 label *label291
 
  1191 jump *label288 always
  1192 label *label287
  1193 label *label288
-    * op equal *tmp443 :processUnit.3:state 2
-    * jump *label295 equal *tmp443 false
+ 1194 jump *label295 notEqual :processUnit.3:state 2
  1195 ucontrol within .CORE_X .CORE_Y 8 *tmp445
  1196 jump *label297 equal *tmp445 false
  1197 ucontrol itemTake .CORE :processUnit.3:item .UNIT_CAPACITY
  1198 sensor *tmp447 @unit @totalItems
-    * op greaterThanEq *tmp448 *tmp447 .UNIT_CAPACITY
-    * jump *label299 equal *tmp448 false
+ 1199 jump *label299 lessThan *tmp447 .UNIT_CAPACITY
  1200 ucontrol approach .DOME_X .DOME_Y 6
  1201 set :processUnit.3:state 3
  1202 jump *label300 always
 
  1218 jump *label296 always
  1219 label *label295
  1220 label *label296
-    * op equal *tmp457 :processUnit.3:state 3
-    * jump *label301 equal *tmp457 false
+ 1221 jump *label301 notEqual :processUnit.3:state 3
  1222 ucontrol within .DOME_X .DOME_Y 8 *tmp459
  1223 jump *label303 equal *tmp459 false
  1224 jump *label305 equal :processUnit.3:supply false
 
  1230 set .MSG ", waiting\n"
  1231 label *label306
  1232 sensor *tmp462 @unit @totalItems
-    * op lessThanEq *tmp463 *tmp462 0
-    * jump *label307 equal *tmp463 false
+ 1233 jump *label307 greaterThan *tmp462 0
  1234 ucontrol approach .CORE_X .CORE_Y 6
  1235 set :processUnit.3:state 2
  1236 jump *label308 always
 
  1262 print *tmp472
  1263 print "["
  1264 print "]"
-    * op greaterThanEq *tmp473 :processUnit.3:distance 0
-    * jump *label309 equal *tmp473 false
+ 1265 jump *label309 lessThan :processUnit.3:distance 0
  1266 print .MSG
  1267 print :processUnit.3:distance
  1268 print "["
 
  1306 set :areUnitsAvailable.2:needed 0
  1307 ubind :areUnitsAvailable.2:type
  1308 set :areUnitsAvailable.2:firstUnit @unit
-    * op notEqual *tmp488 :areUnitsAvailable.2:firstUnit null
-    * jump *label316 equal *tmp488 false
+ 1309 jump *label316 equal :areUnitsAvailable.2:firstUnit null
  1310 set :needsFourUnits.3:unit @unit
  1311 op sub *tmp491 .DOME_X .CORE_X
  1312 op sub *tmp492 .DOME_Y .CORE_Y
 
  1333 op or *tmp503 *tmp500 *tmp502
  1334 jump *label324 equal *tmp503 false
  1335 op add :areUnitsAvailable.2:free :areUnitsAvailable.2:free 1
-    * op greaterThanEq *tmp505 :areUnitsAvailable.2:free :areUnitsAvailable.2:needed
-    * jump *label326 equal *tmp505 false
+ 1336 jump *label326 lessThan :areUnitsAvailable.2:free :areUnitsAvailable.2:needed
  1337 set *tmp487 true
  1338 jump *label315 always
  1339 jump *label327 always
 
  1362 print ","
  1363 print " free: "
  1364 print :areUnitsAvailable.2:free
-    * op greaterThan *tmp513 :areUnitsAvailable.2:needed 0
-    * jump *label330 equal *tmp513 false
+ 1365 jump *label330 lessThanEq :areUnitsAvailable.2:needed 0
  1366 print ", needed: "
  1367 print :areUnitsAvailable.2:needed
  1368 jump *label331 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-81 instructions):
 
    35 label *label15
    36 jump *label16 equal :locateCore*retval false
    37 jump *label1 always
-    * jump *label17 always
    38 label *label16
    39 label *label17
    40 label *label9
 
    99 jump *label36 lessThan :areUnitsAvailable:free :areUnitsAvailable:needed
   100 set *tmp10 true
   101 jump *label25 always
-    * jump *label37 always
   102 label *label36
   103 label *label37
   104 jump *label35 always
 
   113 op land *tmp34 *tmp31 *tmp33
   114 jump *label31 notEqual *tmp34 false
   115 label *label33
-    * jump *label27 always
   116 label *label26
   117 label *label27
   118 jump *label38 equal :areUnitsAvailable:output false
 
   126 jump *label40 lessThanEq :areUnitsAvailable:needed 0
   127 print ", needed: "
   128 print :areUnitsAvailable:needed
-    * jump *label41 always
   129 label *label40
   130 label *label41
   131 print "\n"
-    * jump *label39 always
   132 label *label38
   133 label *label39
   134 set *tmp10 false
 
   138 jump *label42 equal *tmp10 false
   139 set *tmp9 UNIT_TYPE
   140 jump *label21 always
-    * jump *label43 always
   141 label *label42
   142 label *label43
   143 set :chooseUnitType:type @flare
 
   193 jump *label64 lessThan :areUnitsAvailable.1:free :areUnitsAvailable.1:needed
   194 set *tmp42 true
   195 jump *label53 always
-    * jump *label65 always
   196 label *label64
   197 label *label65
   198 jump *label63 always
 
   207 op land *tmp66 *tmp63 *tmp65
   208 jump *label59 notEqual *tmp66 false
   209 label *label61
-    * jump *label55 always
   210 label *label54
   211 label *label55
   212 jump *label66 equal :areUnitsAvailable.1:output false
 
   220 jump *label68 lessThanEq :areUnitsAvailable.1:needed 0
   221 print ", needed: "
   222 print :areUnitsAvailable.1:needed
-    * jump *label69 always
   223 label *label68
   224 label *label69
   225 print "\n"
-    * jump *label67 always
   226 label *label66
   227 label *label67
   228 set *tmp42 false
 
   233 printflush null
   234 set *tmp9 :chooseUnitType:type
   235 jump *label21 always
-    * jump *label71 always
   236 label *label70
   237 label *label71
-    * jump *label52 always
   238 label *label51
   239 label *label52
   240 label *label45
 
   259 set :rebindUnits:firstUnit @unit
   260 jump *label73 notEqual :rebindUnits:firstUnit null
   261 end
-    * jump *label74 always
   262 label *label73
   263 label *label74
   264 label *label75
 
   272 set .UNIT_P1 @unit
   273 jump *label80 equal .UNIT_S2 null
   274 jump *label77 always
-    * jump *label81 always
   275 label *label80
   276 label *label81
-    * jump *label79 always
   277 label *label78
   278 label *label79
   279 ubind .TYPE
 
   284 op land *tmp84 *tmp81 *tmp83
   285 jump *label75 notEqual *tmp84 false
   286 label *label77
-    * jump *label72 always
   287 label *label72
   288 set :acquireUnit:currentUnit .UNIT_S1
   289 set :rebindUnit:currentUnit :acquireUnit:currentUnit
 
   296 op land *tmp93 *tmp90 *tmp92
   297 jump *label86 equal *tmp93 false
   298 jump *label83 always
-    * jump *label87 always
   299 label *label86
   300 label *label87
-    * jump *label85 always
   301 label *label84
   302 label *label85
   303 ubind .TYPE
 
   307 sensor *tmp97 @unit @controlled
   308 jump *label93 notEqual *tmp97 0
   309 jump *label83 always
-    * jump *label94 always
   310 label *label93
   311 label *label94
   312 ubind .TYPE
 
   317 op land *tmp103 *tmp100 *tmp102
   318 jump *label90 notEqual *tmp103 false
   319 label *label92
-    * jump *label89 always
   320 label *label88
   321 label *label89
   322 end
 
   338 op land *tmp112 *tmp109 *tmp111
   339 jump *label99 equal *tmp112 false
   340 jump *label96 always
-    * jump *label100 always
   341 label *label99
   342 label *label100
-    * jump *label98 always
   343 label *label97
   344 label *label98
   345 ubind .TYPE
 
   349 sensor *tmp116 @unit @controlled
   350 jump *label106 notEqual *tmp116 0
   351 jump *label96 always
-    * jump *label107 always
   352 label *label106
   353 label *label107
   354 ubind .TYPE
 
   359 op land *tmp122 *tmp119 *tmp121
   360 jump *label103 notEqual *tmp122 false
   361 label *label105
-    * jump *label102 always
   362 label *label101
   363 label *label102
   364 end
 
   383 label *label110
   384 set .UNIT_S1 :swap:a
   385 set .UNIT_P1 :swap:b
-    * jump *label109 always
   386 label *label108
   387 label *label109
   388 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
 
   391 op strictEqual *tmp132 .SPEED null
   392 jump *label111 equal *tmp132 false
   393 stop
-    * jump *label112 always
   394 label *label111
   395 label *label112
   396 set :needsFourUnits.2:unit .UNIT_S1
 
   417 op land *tmp151 *tmp148 *tmp150
   418 jump *label120 equal *tmp151 false
   419 jump *label117 always
-    * jump *label121 always
   420 label *label120
   421 label *label121
-    * jump *label119 always
   422 label *label118
   423 label *label119
   424 ubind .TYPE
 
   428 sensor *tmp155 @unit @controlled
   429 jump *label127 notEqual *tmp155 0
   430 jump *label117 always
-    * jump *label128 always
   431 label *label127
   432 label *label128
   433 ubind .TYPE
 
   438 op land *tmp161 *tmp158 *tmp160
   439 jump *label124 notEqual *tmp161 false
   440 label *label126
-    * jump *label123 always
   441 label *label122
   442 label *label123
   443 end
 
   459 op land *tmp170 *tmp167 *tmp169
   460 jump *label133 equal *tmp170 false
   461 jump *label130 always
-    * jump *label134 always
   462 label *label133
   463 label *label134
-    * jump *label132 always
   464 label *label131
   465 label *label132
   466 ubind .TYPE
 
   470 sensor *tmp174 @unit @controlled
   471 jump *label140 notEqual *tmp174 0
   472 jump *label130 always
-    * jump *label141 always
   473 label *label140
   474 label *label141
   475 ubind .TYPE
 
   480 op land *tmp180 *tmp177 *tmp179
   481 jump *label137 notEqual *tmp180 false
   482 label *label139
-    * jump *label136 always
   483 label *label135
   484 label *label136
   485 end
 
   504 label *label144
   505 set .UNIT_S1 :swap.1:a
   506 set .UNIT_P2 :swap.1:b
-    * jump *label143 always
   507 label *label142
   508 label *label143
   509 sensor *tmp187 .UNIT_S2 @firstItem
 
   520 label *label147
   521 set .UNIT_S2 :swap.2:a
   522 set .UNIT_P2 :swap.2:b
-    * jump *label146 always
   523 label *label145
   524 label *label146
   525 set .GROUP1 "unit  1"
 
   590 op land *tmp215 *tmp212 *tmp214
   591 jump *label158 equal *tmp215 false
   592 jump *label155 always
-    * jump *label159 always
   593 label *label158
   594 label *label159
-    * jump *label157 always
   595 label *label156
   596 label *label157
   597 ubind .TYPE
 
   601 sensor *tmp219 @unit @controlled
   602 jump *label165 notEqual *tmp219 0
   603 jump *label155 always
-    * jump *label166 always
   604 label *label165
   605 label *label166
   606 ubind .TYPE
 
   611 op land *tmp225 *tmp222 *tmp224
   612 jump *label162 notEqual *tmp225 false
   613 label *label164
-    * jump *label161 always
   614 label *label160
   615 label *label161
   616 end
 
   637 ucontrol within .CORE_X .CORE_Y 8 *tmp237
   638 jump *label173 equal *tmp237 false
   639 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label174 always
   640 label *label173
   641 label *label174
   642 label *label172
   643 label *label170
-    * jump *label168 always
   644 label *label167
   645 label *label168
   646 jump *label175 notEqual :processUnit:state 2
 
   667 op idiv *tmp251 *tmp250 .SPEED_TENTHS
   668 op div :processUnit:distance *tmp251 10
   669 label *label178
-    * jump *label176 always
   670 label *label175
   671 label *label176
   672 jump *label181 notEqual :processUnit:state 3
 
   684 jump *label187 greaterThan *tmp258 0
   685 ucontrol approach .CORE_X .CORE_Y 6
   686 set :processUnit:state 2
-    * jump *label188 always
   687 label *label187
   688 label *label188
   689 jump *label184 always
 
   698 op idiv *tmp266 *tmp265 .SPEED_TENTHS
   699 op div :processUnit:distance *tmp266 10
   700 label *label184
-    * jump *label182 always
   701 label *label181
   702 label *label182
   703 ucontrol flag :processUnit:state
 
   740 op land *tmp281 *tmp278 *tmp280
   741 jump *label197 equal *tmp281 false
   742 jump *label194 always
-    * jump *label198 always
   743 label *label197
   744 label *label198
-    * jump *label196 always
   745 label *label195
   746 label *label196
   747 ubind .TYPE
 
   751 sensor *tmp285 @unit @controlled
   752 jump *label204 notEqual *tmp285 0
   753 jump *label194 always
-    * jump *label205 always
   754 label *label204
   755 label *label205
   756 ubind .TYPE
 
   761 op land *tmp291 *tmp288 *tmp290
   762 jump *label201 notEqual *tmp291 false
   763 label *label203
-    * jump *label200 always
   764 label *label199
   765 label *label200
   766 end
 
   787 ucontrol within .CORE_X .CORE_Y 8 *tmp303
   788 jump *label212 equal *tmp303 false
   789 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label213 always
   790 label *label212
   791 label *label213
   792 label *label211
   793 label *label209
-    * jump *label207 always
   794 label *label206
   795 label *label207
   796 jump *label214 notEqual :processUnit.1:state 2
 
   817 op idiv *tmp317 *tmp316 .SPEED_TENTHS
   818 op div :processUnit.1:distance *tmp317 10
   819 label *label217
-    * jump *label215 always
   820 label *label214
   821 label *label215
   822 jump *label220 notEqual :processUnit.1:state 3
 
   834 jump *label226 greaterThan *tmp324 0
   835 ucontrol approach .CORE_X .CORE_Y 6
   836 set :processUnit.1:state 2
-    * jump *label227 always
   837 label *label226
   838 label *label227
   839 jump *label223 always
 
   848 op idiv *tmp332 *tmp331 .SPEED_TENTHS
   849 op div :processUnit.1:distance *tmp332 10
   850 label *label223
-    * jump *label221 always
   851 label *label220
   852 label *label221
   853 ucontrol flag :processUnit.1:state
 
   883 op equal *tmp338 *tmp341 0
   884 label *label231
   885 set .SUPPLY_S_FIRST *tmp338
-    * jump *label192 always
   886 label *label191
   887 label *label192
   888 set :printDomeStatus.1:item @phase-fabric
 
   918 op land *tmp353 *tmp350 *tmp352
   919 jump *label239 equal *tmp353 false
   920 jump *label236 always
-    * jump *label240 always
   921 label *label239
   922 label *label240
-    * jump *label238 always
   923 label *label237
   924 label *label238
   925 ubind .TYPE
 
   929 sensor *tmp357 @unit @controlled
   930 jump *label246 notEqual *tmp357 0
   931 jump *label236 always
-    * jump *label247 always
   932 label *label246
   933 label *label247
   934 ubind .TYPE
 
   939 op land *tmp363 *tmp360 *tmp362
   940 jump *label243 notEqual *tmp363 false
   941 label *label245
-    * jump *label242 always
   942 label *label241
   943 label *label242
   944 end
 
   965 ucontrol within .CORE_X .CORE_Y 8 *tmp375
   966 jump *label254 equal *tmp375 false
   967 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label255 always
   968 label *label254
   969 label *label255
   970 label *label253
   971 label *label251
-    * jump *label249 always
   972 label *label248
   973 label *label249
   974 jump *label256 notEqual :processUnit.2:state 2
 
   995 op idiv *tmp389 *tmp388 .SPEED_TENTHS
   996 op div :processUnit.2:distance *tmp389 10
   997 label *label259
-    * jump *label257 always
   998 label *label256
   999 label *label257
  1000 jump *label262 notEqual :processUnit.2:state 3
 
  1012 jump *label268 greaterThan *tmp396 0
  1013 ucontrol approach .CORE_X .CORE_Y 6
  1014 set :processUnit.2:state 2
-    * jump *label269 always
  1015 label *label268
  1016 label *label269
  1017 jump *label265 always
 
  1026 op idiv *tmp404 *tmp403 .SPEED_TENTHS
  1027 op div :processUnit.2:distance *tmp404 10
  1028 label *label265
-    * jump *label263 always
  1029 label *label262
  1030 label *label263
  1031 ucontrol flag :processUnit.2:state
 
  1068 op land *tmp419 *tmp416 *tmp418
  1069 jump *label278 equal *tmp419 false
  1070 jump *label275 always
-    * jump *label279 always
  1071 label *label278
  1072 label *label279
-    * jump *label277 always
  1073 label *label276
  1074 label *label277
  1075 ubind .TYPE
 
  1079 sensor *tmp423 @unit @controlled
  1080 jump *label285 notEqual *tmp423 0
  1081 jump *label275 always
-    * jump *label286 always
  1082 label *label285
  1083 label *label286
  1084 ubind .TYPE
 
  1089 op land *tmp429 *tmp426 *tmp428
  1090 jump *label282 notEqual *tmp429 false
  1091 label *label284
-    * jump *label281 always
  1092 label *label280
  1093 label *label281
  1094 end
 
  1115 ucontrol within .CORE_X .CORE_Y 8 *tmp441
  1116 jump *label293 equal *tmp441 false
  1117 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label294 always
  1118 label *label293
  1119 label *label294
  1120 label *label292
  1121 label *label290
-    * jump *label288 always
  1122 label *label287
  1123 label *label288
  1124 jump *label295 notEqual :processUnit.3:state 2
 
  1145 op idiv *tmp455 *tmp454 .SPEED_TENTHS
  1146 op div :processUnit.3:distance *tmp455 10
  1147 label *label298
-    * jump *label296 always
  1148 label *label295
  1149 label *label296
  1150 jump *label301 notEqual :processUnit.3:state 3
 
  1162 jump *label307 greaterThan *tmp462 0
  1163 ucontrol approach .CORE_X .CORE_Y 6
  1164 set :processUnit.3:state 2
-    * jump *label308 always
  1165 label *label307
  1166 label *label308
  1167 jump *label304 always
 
  1176 op idiv *tmp470 *tmp469 .SPEED_TENTHS
  1177 op div :processUnit.3:distance *tmp470 10
  1178 label *label304
-    * jump *label302 always
  1179 label *label301
  1180 label *label302
  1181 ucontrol flag :processUnit.3:state
 
  1211 op equal *tmp476 *tmp479 0
  1212 label *label312
  1213 set .SUPPLY_P_FIRST *tmp476
-    * jump *label273 always
  1214 label *label272
  1215 label *label273
  1216 op sub *tmp481 @time :start
 
  1262 jump *label326 lessThan :areUnitsAvailable.2:free :areUnitsAvailable.2:needed
  1263 set *tmp487 true
  1264 jump *label315 always
-    * jump *label327 always
  1265 label *label326
  1266 label *label327
  1267 jump *label325 always
 
  1276 op land *tmp511 *tmp508 *tmp510
  1277 jump *label321 notEqual *tmp511 false
  1278 label *label323
-    * jump *label317 always
  1279 label *label316
  1280 label *label317
  1281 jump *label328 equal :areUnitsAvailable.2:output false
 
  1289 jump *label330 lessThanEq :areUnitsAvailable.2:needed 0
  1290 print ", needed: "
  1291 print :areUnitsAvailable.2:needed
-    * jump *label331 always
  1292 label *label330
  1293 label *label331
  1294 print "\n"
-    * jump *label329 always
  1295 label *label328
  1296 label *label329
  1297 set *tmp487 false
 
  1300 label *label315
  1301 jump *label332 equal *tmp487 false
  1302 end
-    * jump *label333 always
  1303 label *label332
  1304 label *label333
  1305 op add :unitCheck @time 5000
-    * jump *label314 always
  1306 label *label313
  1307 label *label314
  1308 label *label149
 
  1318 op or *tmp521 *tmp518 *tmp520
  1319 jump *label335 equal *tmp521 false
  1320 ulocate building core false @copper *tmp524 *tmp525 *tmp526 .CORE
-    * jump *label336 always
  1321 label *label335
  1322 label *label336
  1323 set :locateCore*retval .CORE

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-11 instructions):
 
    67 set :areUnitsAvailable:free 0
    68 set :areUnitsAvailable:occupied 0
    69 set :areUnitsAvailable:needed 0
-    * ubind :areUnitsAvailable:type
+   70 ubind UNIT_TYPE
    71 set :areUnitsAvailable:firstUnit @unit
    72 jump *label26 equal :areUnitsAvailable:firstUnit null
    73 set :needsFourUnits:unit @unit
 
    79 op div :needsFourUnits:travel_time *tmp17 *tmp18
    80 op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
    81 jump *label28 always
-    * set *tmp13 null
    82 label *label28
    83 jump *label29 equal *tmp13 false
    84 set *tmp21 4
 
    95 op or *tmp26 *tmp23 *tmp25
    96 jump *label34 equal *tmp26 false
    97 op add :areUnitsAvailable:free :areUnitsAvailable:free 1
-    * jump *label36 lessThan :areUnitsAvailable:free :areUnitsAvailable:needed
+   98 jump *label36 lessThan :areUnitsAvailable:free *tmp21
    99 set *tmp10 true
   100 jump *label25 always
   101 label *label36
 
   104 label *label34
   105 op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
   106 label *label35
-    * ubind :areUnitsAvailable:type
+  107 ubind UNIT_TYPE
   108 label *label32
   109 op notEqual *tmp31 @unit :areUnitsAvailable:firstUnit
   110 sensor *tmp32 :areUnitsAvailable:firstUnit @dead
 
   114 label *label33
   115 label *label26
   116 label *label27
-    * jump *label38 equal :areUnitsAvailable:output false
-    * print :areUnitsAvailable:type
+  117 jump *label38 equal true false
+  118 print UNIT_TYPE
   119 print ":"
   120 print " occupied: "
   121 print :areUnitsAvailable:occupied
 
   132 label *label39
   133 set *tmp10 false
   134 jump *label25 always
-    * set *tmp10 null
   135 label *label25
   136 jump *label42 equal *tmp10 false
   137 set *tmp9 UNIT_TYPE
 
   159 set :areUnitsAvailable.1:free 0
   160 set :areUnitsAvailable.1:occupied 0
   161 set :areUnitsAvailable.1:needed 0
-    * ubind :areUnitsAvailable.1:type
+  162 ubind :chooseUnitType:type
   163 set :areUnitsAvailable.1:firstUnit @unit
   164 jump *label54 equal :areUnitsAvailable.1:firstUnit null
   165 set :needsFourUnits.1:unit @unit
 
   171 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   172 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
   173 jump *label56 always
-    * set *tmp45 null
   174 label *label56
   175 jump *label57 equal *tmp45 false
   176 set *tmp53 4
 
   187 op or *tmp58 *tmp55 *tmp57
   188 jump *label62 equal *tmp58 false
   189 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label64 lessThan :areUnitsAvailable.1:free :areUnitsAvailable.1:needed
+  190 jump *label64 lessThan :areUnitsAvailable.1:free *tmp53
   191 set *tmp42 true
   192 jump *label53 always
   193 label *label64
 
   196 label *label62
   197 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   198 label *label63
-    * ubind :areUnitsAvailable.1:type
+  199 ubind :chooseUnitType:type
   200 label *label60
   201 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   202 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
 
   206 label *label61
   207 label *label54
   208 label *label55
-    * jump *label66 equal :areUnitsAvailable.1:output false
-    * print :areUnitsAvailable.1:type
+  209 jump *label66 equal true false
+  210 print :chooseUnitType:type
   211 print ":"
   212 print " occupied: "
   213 print :areUnitsAvailable.1:occupied
 
   224 label *label67
   225 set *tmp42 false
   226 jump *label53 always
-    * set *tmp42 null
   227 label *label53
   228 jump *label70 equal *tmp42 false
   229 printflush null
 
   247 print "[gold]Binding units..."
   248 printflush message1
   249 set .UNIT_P2 null
-    * set .UNIT_S2 .UNIT_P2
-    * set .UNIT_P1 .UNIT_S2
-    * set .UNIT_S1 .UNIT_P1
+  250 set .UNIT_S2 null
+  251 set .UNIT_P1 .UNIT_P2
+  252 set .UNIT_S1 .UNIT_S2
   253 set :rebindUnits:count 0
-    * ubind .TYPE
+  254 ubind *tmp9
   255 set :rebindUnits:firstUnit @unit
   256 jump *label73 notEqual :rebindUnits:firstUnit null
   257 end
 
   272 label *label81
   273 label *label78
   274 label *label79
-    * ubind .TYPE
+  275 ubind *tmp9
   276 label *label76
   277 op notEqual *tmp81 @unit :rebindUnits:firstUnit
   278 sensor *tmp82 :rebindUnits:firstUnit @dead
 
   282 label *label77
   283 label *label72
   284 set :acquireUnit:currentUnit .UNIT_S1
-    * set :rebindUnit:currentUnit :acquireUnit:currentUnit
-    * jump *label84 equal :rebindUnit:currentUnit null
-    * ubind :rebindUnit:currentUnit
+  285 set :rebindUnit:currentUnit .UNIT_S1
+  286 jump *label84 equal :acquireUnit:currentUnit null
+  287 ubind :acquireUnit:currentUnit
   288 sensor *tmp89 @unit @dead
   289 op equal *tmp90 *tmp89 0
   290 sensor *tmp91 @unit @controller
 
   296 label *label87
   297 label *label84
   298 label *label85
-    * ubind .TYPE
+  299 ubind *tmp9
   300 set :rebindUnit:firstUnit @unit
   301 jump *label88 equal :rebindUnit:firstUnit null
   302 label *label90
 
   305 jump *label83 always
   306 label *label93
   307 label *label94
-    * ubind .TYPE
+  308 ubind *tmp9
   309 label *label91
   310 op notEqual *tmp100 @unit :rebindUnit:firstUnit
   311 sensor *tmp101 :rebindUnit:firstUnit @dead
 
   320 ucontrol flag 1
   321 set *tmp85 @unit
   322 jump *label82 always
-    * set *tmp85 null
   323 label *label82
   324 set .UNIT_S1 *tmp85
   325 set :acquireUnit.1:currentUnit .UNIT_P1
-    * set :rebindUnit.1:currentUnit :acquireUnit.1:currentUnit
-    * jump *label97 equal :rebindUnit.1:currentUnit null
-    * ubind :rebindUnit.1:currentUnit
+  326 set :rebindUnit.1:currentUnit .UNIT_P1
+  327 jump *label97 equal :acquireUnit.1:currentUnit null
+  328 ubind :acquireUnit.1:currentUnit
   329 sensor *tmp108 @unit @dead
   330 op equal *tmp109 *tmp108 0
   331 sensor *tmp110 @unit @controller
 
   337 label *label100
   338 label *label97
   339 label *label98
-    * ubind .TYPE
+  340 ubind *tmp9
   341 set :rebindUnit.1:firstUnit @unit
   342 jump *label101 equal :rebindUnit.1:firstUnit null
   343 label *label103
 
   346 jump *label96 always
   347 label *label106
   348 label *label107
-    * ubind .TYPE
+  349 ubind *tmp9
   350 label *label104
   351 op notEqual *tmp119 @unit :rebindUnit.1:firstUnit
   352 sensor *tmp120 :rebindUnit.1:firstUnit @dead
 
   361 ucontrol flag 1
   362 set *tmp104 @unit
   363 jump *label95 always
-    * set *tmp104 null
   364 label *label95
   365 set .UNIT_P1 *tmp104
-    * sensor *tmp123 .UNIT_S1 @firstItem
+  366 sensor *tmp123 *tmp85 @firstItem
   367 op equal *tmp124 *tmp123 @phase-fabric
-    * sensor *tmp125 .UNIT_P1 @firstItem
+  368 sensor *tmp125 *tmp104 @firstItem
   369 op equal *tmp126 *tmp125 @silicon
   370 op or *tmp127 *tmp124 *tmp126
   371 jump *label108 equal *tmp127 false
-    * set :swap:a .UNIT_S1
-    * set :swap:b .UNIT_P1
-    * set :swap:t :swap:a
-    * set :swap:a :swap:b
+  372 set :swap:a *tmp85
+  373 set :swap:b *tmp104
+  374 set :swap:t .UNIT_S1
+  375 set :swap:a .UNIT_P1
   376 set :swap:b :swap:t
   377 label *label110
   378 set .UNIT_S1 :swap:a
-    * set .UNIT_P1 :swap:b
+  379 set .UNIT_P1 :swap:t
   380 label *label108
   381 label *label109
   382 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
 
   392 op sub *tmp136 .DOME_Y .CORE_Y
   393 op len *tmp137 *tmp135 *tmp136
   394 op mul *tmp138 2 *tmp137
-    * sensor *tmp139 :needsFourUnits.2:unit @speed
-    * op div :needsFourUnits.2:travel_time *tmp138 *tmp139
+  395 sensor *tmp139 .UNIT_S1 @speed
+  396 op div :needsFourUnits.2:travel_time *tmp138 .SPEED
   397 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
   398 jump *label113 always
-    * set *tmp134 null
   399 label *label113
   400 set .FOUR_UNITS *tmp134
-    * jump *label114 equal .FOUR_UNITS false
+  401 jump *label114 equal *tmp134 false
   402 set :acquireUnit.2:currentUnit .UNIT_S2
-    * set :rebindUnit.2:currentUnit :acquireUnit.2:currentUnit
-    * jump *label118 equal :rebindUnit.2:currentUnit null
-    * ubind :rebindUnit.2:currentUnit
+  403 set :rebindUnit.2:currentUnit .UNIT_S2
+  404 jump *label118 equal :acquireUnit.2:currentUnit null
+  405 ubind :acquireUnit.2:currentUnit
   406 sensor *tmp147 @unit @dead
   407 op equal *tmp148 *tmp147 0
   408 sensor *tmp149 @unit @controller
 
   414 label *label121
   415 label *label118
   416 label *label119
-    * ubind .TYPE
+  417 ubind *tmp9
   418 set :rebindUnit.2:firstUnit @unit
   419 jump *label122 equal :rebindUnit.2:firstUnit null
   420 label *label124
 
   423 jump *label117 always
   424 label *label127
   425 label *label128
-    * ubind .TYPE
+  426 ubind *tmp9
   427 label *label125
   428 op notEqual *tmp158 @unit :rebindUnit.2:firstUnit
   429 sensor *tmp159 :rebindUnit.2:firstUnit @dead
 
   438 ucontrol flag 1
   439 set *tmp143 @unit
   440 jump *label116 always
-    * set *tmp143 null
   441 label *label116
   442 set .UNIT_S2 *tmp143
   443 set :acquireUnit.3:currentUnit .UNIT_P2
-    * set :rebindUnit.3:currentUnit :acquireUnit.3:currentUnit
-    * jump *label131 equal :rebindUnit.3:currentUnit null
-    * ubind :rebindUnit.3:currentUnit
+  444 set :rebindUnit.3:currentUnit .UNIT_P2
+  445 jump *label131 equal :acquireUnit.3:currentUnit null
+  446 ubind :acquireUnit.3:currentUnit
   447 sensor *tmp166 @unit @dead
   448 op equal *tmp167 *tmp166 0
   449 sensor *tmp168 @unit @controller
 
   455 label *label134
   456 label *label131
   457 label *label132
-    * ubind .TYPE
+  458 ubind *tmp9
   459 set :rebindUnit.3:firstUnit @unit
   460 jump *label135 equal :rebindUnit.3:firstUnit null
   461 label *label137
 
   464 jump *label130 always
   465 label *label140
   466 label *label141
-    * ubind .TYPE
+  467 ubind *tmp9
   468 label *label138
   469 op notEqual *tmp177 @unit :rebindUnit.3:firstUnit
   470 sensor *tmp178 :rebindUnit.3:firstUnit @dead
 
   479 ucontrol flag 1
   480 set *tmp162 @unit
   481 jump *label129 always
-    * set *tmp162 null
   482 label *label129
   483 set .UNIT_P2 *tmp162
   484 sensor *tmp181 .UNIT_S1 @firstItem
   485 op equal *tmp182 *tmp181 @phase-fabric
-    * sensor *tmp183 .UNIT_P2 @firstItem
+  486 sensor *tmp183 *tmp162 @firstItem
   487 op notEqual *tmp184 *tmp183 @phase-fabric
   488 op land *tmp185 *tmp182 *tmp184
   489 jump *label142 equal *tmp185 false
   490 set :swap.1:a .UNIT_S1
-    * set :swap.1:b .UNIT_P2
-    * set :swap.1:t :swap.1:a
-    * set :swap.1:a :swap.1:b
+  491 set :swap.1:b *tmp162
+  492 set :swap.1:t .UNIT_S1
+  493 set :swap.1:a .UNIT_P2
   494 set :swap.1:b :swap.1:t
   495 label *label144
   496 set .UNIT_S1 :swap.1:a
-    * set .UNIT_P2 :swap.1:b
+  497 set .UNIT_P2 :swap.1:t
   498 label *label142
   499 label *label143
-    * sensor *tmp187 .UNIT_S2 @firstItem
+  500 sensor *tmp187 *tmp143 @firstItem
   501 op equal *tmp188 *tmp187 @phase-fabric
   502 sensor *tmp189 .UNIT_P2 @firstItem
   503 op equal *tmp190 *tmp189 @silicon
   504 op or *tmp191 *tmp188 *tmp190
   505 jump *label145 equal *tmp191 false
-    * set :swap.2:a .UNIT_S2
+  506 set :swap.2:a *tmp143
   507 set :swap.2:b .UNIT_P2
-    * set :swap.2:t :swap.2:a
-    * set :swap.2:a :swap.2:b
+  508 set :swap.2:t .UNIT_S2
+  509 set :swap.2:a .UNIT_P2
   510 set :swap.2:b :swap.2:t
   511 label *label147
   512 set .UNIT_S2 :swap.2:a
-    * set .UNIT_P2 :swap.2:b
+  513 set .UNIT_P2 :swap.2:t
   514 label *label145
   515 label *label146
   516 set .GROUP1 "unit  1"
 
   525 set .UNIT_P2 null
   526 set .GROUP1 "unit"
   527 label *label115
-    * op equal *tmp193 .FOUR_UNITS false
+  528 op equal *tmp193 *tmp134 false
   529 sensor *tmp194 .UNIT_S1 @totalItems
   530 sensor *tmp195 .UNIT_S2 @totalItems
   531 op lessThan *tmp196 *tmp194 *tmp195
   532 op or .SUPPLY_S_FIRST *tmp193 *tmp196
-    * op equal *tmp198 .FOUR_UNITS false
+  533 op equal *tmp198 *tmp134 false
   534 sensor *tmp199 .UNIT_P1 @totalItems
   535 sensor *tmp200 .UNIT_P2 @totalItems
   536 op lessThan *tmp201 *tmp199 *tmp200
-    * op or .SUPPLY_P_FIRST *tmp198 *tmp201
+  537 op or .SUPPLY_P_FIRST *tmp193 *tmp201
   538 op add :unitCheck @time 5000
   539 label *label148
   540 sensor *tmp204 switch1 @enabled
 
   544 print "\n"
   545 print "\n"
   546 print "Unit type: [green]"
-    * print .TYPE
+  547 print *tmp9
   548 print "["
   549 print "]"
   550 print "\n"
   551 set :printDomeStatus:item @silicon
   552 set :printDomeStatus:text "\n[green]Silicon[] status:\n"
-    * print :printDomeStatus:text
-    * sensor :printDomeStatus:level .DOME :printDomeStatus:item
+  553 print "\n[green]Silicon[] status:\n"
+  554 sensor :printDomeStatus:level .DOME @silicon
   555 jump *label152 lessThanEq :printDomeStatus:level 3
   556 print "  dome:  [green]"
   557 print :printDomeStatus:level
 
   571 set :processUnit:item @silicon
   572 set :processUnit:group .GROUP1
   573 set :processUnit:supply .SUPPLY_S_FIRST
-    * set :rebindUnit.4:currentUnit :processUnit:unit
-    * jump *label156 equal :rebindUnit.4:currentUnit null
-    * ubind :rebindUnit.4:currentUnit
+  574 set :rebindUnit.4:currentUnit .UNIT_S1
+  575 jump *label156 equal :processUnit:unit null
+  576 ubind :processUnit:unit
   577 sensor *tmp211 @unit @dead
   578 op equal *tmp212 *tmp211 0
   579 sensor *tmp213 @unit @controller
 
   585 label *label159
   586 label *label156
   587 label *label157
-    * ubind .TYPE
+  588 ubind *tmp9
   589 set :rebindUnit.4:firstUnit @unit
   590 jump *label160 equal :rebindUnit.4:firstUnit null
   591 label *label162
 
   594 jump *label155 always
   595 label *label165
   596 label *label166
-    * ubind .TYPE
+  597 ubind *tmp9
   598 label *label163
   599 op notEqual *tmp222 @unit :rebindUnit.4:firstUnit
   600 sensor *tmp223 :rebindUnit.4:firstUnit @dead
 
   614 op or *tmp229 *tmp227 *tmp228
   615 jump *label167 equal *tmp229 false
   616 sensor *tmp231 @unit @firstItem
-    * jump *label169 notEqual *tmp231 :processUnit:item
+  617 jump *label169 notEqual *tmp231 @silicon
   618 set :processUnit:state 3
   619 jump *label170 always
   620 label *label169
 
   637 jump *label175 notEqual :processUnit:state 2
   638 ucontrol within .CORE_X .CORE_Y 8 *tmp241
   639 jump *label177 equal *tmp241 false
-    * ucontrol itemTake .CORE :processUnit:item .UNIT_CAPACITY
+  640 ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
   641 sensor *tmp243 @unit @totalItems
   642 jump *label179 lessThan *tmp243 .UNIT_CAPACITY
   643 ucontrol approach .DOME_X .DOME_Y 6
 
   663 jump *label181 notEqual :processUnit:state 3
   664 ucontrol within .DOME_X .DOME_Y 8 *tmp255
   665 jump *label183 equal *tmp255 false
-    * jump *label185 equal :processUnit:supply false
+  666 jump *label185 equal .SUPPLY_S_FIRST false
   667 ucontrol itemDrop .DOME .UNIT_CAPACITY
   668 set .MSG ", supplying\n"
   669 jump *label186 always
 
   694 ucontrol flag :processUnit:state
   695 sensor *tmp268 @unit @totalItems
   696 print "  "
-    * print :processUnit:group
+  697 print .GROUP1
   698 print ":"
   699 print " ["
-    * print :processUnit:color
+  700 print "gold"
   701 print "]"
   702 print *tmp268
   703 print "["
 
   715 set :processUnit:unit @unit
   716 label *label154
   717 set .UNIT_S1 :processUnit:unit
-    * jump *label191 equal .FOUR_UNITS false
+  718 jump *label191 equal *tmp134 false
   719 op equal *tmp273 .SUPPLY_S_FIRST false
   720 set :processUnit.1:unit .UNIT_S2
   721 set :processUnit.1:item @silicon
   722 set :processUnit.1:group .GROUP2
   723 set :processUnit.1:supply *tmp273
-    * set :rebindUnit.5:currentUnit :processUnit.1:unit
-    * jump *label195 equal :rebindUnit.5:currentUnit null
-    * ubind :rebindUnit.5:currentUnit
+  724 set :rebindUnit.5:currentUnit .UNIT_S2
+  725 jump *label195 equal :processUnit.1:unit null
+  726 ubind :processUnit.1:unit
   727 sensor *tmp277 @unit @dead
   728 op equal *tmp278 *tmp277 0
   729 sensor *tmp279 @unit @controller
 
   735 label *label198
   736 label *label195
   737 label *label196
-    * ubind .TYPE
+  738 ubind *tmp9
   739 set :rebindUnit.5:firstUnit @unit
   740 jump *label199 equal :rebindUnit.5:firstUnit null
   741 label *label201
 
   744 jump *label194 always
   745 label *label204
   746 label *label205
-    * ubind .TYPE
+  747 ubind *tmp9
   748 label *label202
   749 op notEqual *tmp288 @unit :rebindUnit.5:firstUnit
   750 sensor *tmp289 :rebindUnit.5:firstUnit @dead
 
   764 op or *tmp295 *tmp293 *tmp294
   765 jump *label206 equal *tmp295 false
   766 sensor *tmp297 @unit @firstItem
-    * jump *label208 notEqual *tmp297 :processUnit.1:item
+  767 jump *label208 notEqual *tmp297 @silicon
   768 set :processUnit.1:state 3
   769 jump *label209 always
   770 label *label208
 
   787 jump *label214 notEqual :processUnit.1:state 2
   788 ucontrol within .CORE_X .CORE_Y 8 *tmp307
   789 jump *label216 equal *tmp307 false
-    * ucontrol itemTake .CORE :processUnit.1:item .UNIT_CAPACITY
+  790 ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
   791 sensor *tmp309 @unit @totalItems
   792 jump *label218 lessThan *tmp309 .UNIT_CAPACITY
   793 ucontrol approach .DOME_X .DOME_Y 6
 
   813 jump *label220 notEqual :processUnit.1:state 3
   814 ucontrol within .DOME_X .DOME_Y 8 *tmp321
   815 jump *label222 equal *tmp321 false
-    * jump *label224 equal :processUnit.1:supply false
+  816 jump *label224 equal *tmp273 false
   817 ucontrol itemDrop .DOME .UNIT_CAPACITY
   818 set .MSG ", supplying\n"
   819 jump *label225 always
 
   844 ucontrol flag :processUnit.1:state
   845 sensor *tmp334 @unit @totalItems
   846 print "  "
-    * print :processUnit.1:group
+  847 print .GROUP2
   848 print ":"
   849 print " ["
-    * print :processUnit.1:color
+  850 print "gold"
   851 print "]"
   852 print *tmp334
   853 print "["
 
   866 label *label193
   867 set .UNIT_S2 :processUnit.1:unit
   868 jump *label230 equal .SUPPLY_S_FIRST false
-    * sensor *tmp339 .UNIT_S1 @totalItems
+  869 sensor *tmp339 :processUnit:unit @totalItems
   870 op greaterThan *tmp338 *tmp339 0
   871 jump *label231 always
   872 label *label230
-    * sensor *tmp341 .UNIT_S2 @totalItems
+  873 sensor *tmp341 :processUnit.1:unit @totalItems
   874 op equal *tmp338 *tmp341 0
   875 label *label231
   876 set .SUPPLY_S_FIRST *tmp338
 
   878 label *label192
   879 set :printDomeStatus.1:item @phase-fabric
   880 set :printDomeStatus.1:text "\n[green]Phase fabric[] status:\n"
-    * print :printDomeStatus.1:text
-    * sensor :printDomeStatus.1:level .DOME :printDomeStatus.1:item
+  881 print "\n[green]Phase fabric[] status:\n"
+  882 sensor :printDomeStatus.1:level .DOME @phase-fabric
   883 jump *label233 lessThanEq :printDomeStatus.1:level 3
   884 print "  dome:  [green]"
   885 print :printDomeStatus.1:level
 
   899 set :processUnit.2:item @phase-fabric
   900 set :processUnit.2:group .GROUP1
   901 set :processUnit.2:supply .SUPPLY_P_FIRST
-    * set :rebindUnit.6:currentUnit :processUnit.2:unit
-    * jump *label237 equal :rebindUnit.6:currentUnit null
-    * ubind :rebindUnit.6:currentUnit
+  902 set :rebindUnit.6:currentUnit .UNIT_P1
+  903 jump *label237 equal :processUnit.2:unit null
+  904 ubind :processUnit.2:unit
   905 sensor *tmp349 @unit @dead
   906 op equal *tmp350 *tmp349 0
   907 sensor *tmp351 @unit @controller
 
   913 label *label240
   914 label *label237
   915 label *label238
-    * ubind .TYPE
+  916 ubind *tmp9
   917 set :rebindUnit.6:firstUnit @unit
   918 jump *label241 equal :rebindUnit.6:firstUnit null
   919 label *label243
 
   922 jump *label236 always
   923 label *label246
   924 label *label247
-    * ubind .TYPE
+  925 ubind *tmp9
   926 label *label244
   927 op notEqual *tmp360 @unit :rebindUnit.6:firstUnit
   928 sensor *tmp361 :rebindUnit.6:firstUnit @dead
 
   942 op or *tmp367 *tmp365 *tmp366
   943 jump *label248 equal *tmp367 false
   944 sensor *tmp369 @unit @firstItem
-    * jump *label250 notEqual *tmp369 :processUnit.2:item
+  945 jump *label250 notEqual *tmp369 @phase-fabric
   946 set :processUnit.2:state 3
   947 jump *label251 always
   948 label *label250
 
   965 jump *label256 notEqual :processUnit.2:state 2
   966 ucontrol within .CORE_X .CORE_Y 8 *tmp379
   967 jump *label258 equal *tmp379 false
-    * ucontrol itemTake .CORE :processUnit.2:item .UNIT_CAPACITY
+  968 ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
   969 sensor *tmp381 @unit @totalItems
   970 jump *label260 lessThan *tmp381 .UNIT_CAPACITY
   971 ucontrol approach .DOME_X .DOME_Y 6
 
   991 jump *label262 notEqual :processUnit.2:state 3
   992 ucontrol within .DOME_X .DOME_Y 8 *tmp393
   993 jump *label264 equal *tmp393 false
-    * jump *label266 equal :processUnit.2:supply false
+  994 jump *label266 equal .SUPPLY_P_FIRST false
   995 ucontrol itemDrop .DOME .UNIT_CAPACITY
   996 set .MSG ", supplying\n"
   997 jump *label267 always
 
  1022 ucontrol flag :processUnit.2:state
  1023 sensor *tmp406 @unit @totalItems
  1024 print "  "
-    * print :processUnit.2:group
+ 1025 print .GROUP1
  1026 print ":"
  1027 print " ["
-    * print :processUnit.2:color
+ 1028 print "gold"
  1029 print "]"
  1030 print *tmp406
  1031 print "["
 
  1043 set :processUnit.2:unit @unit
  1044 label *label235
  1045 set .UNIT_P1 :processUnit.2:unit
-    * jump *label272 equal .FOUR_UNITS false
+ 1046 jump *label272 equal *tmp134 false
  1047 op equal *tmp411 .SUPPLY_P_FIRST false
  1048 set :processUnit.3:unit .UNIT_P2
  1049 set :processUnit.3:item @phase-fabric
  1050 set :processUnit.3:group .GROUP2
  1051 set :processUnit.3:supply *tmp411
-    * set :rebindUnit.7:currentUnit :processUnit.3:unit
-    * jump *label276 equal :rebindUnit.7:currentUnit null
-    * ubind :rebindUnit.7:currentUnit
+ 1052 set :rebindUnit.7:currentUnit .UNIT_P2
+ 1053 jump *label276 equal :processUnit.3:unit null
+ 1054 ubind :processUnit.3:unit
  1055 sensor *tmp415 @unit @dead
  1056 op equal *tmp416 *tmp415 0
  1057 sensor *tmp417 @unit @controller
 
  1063 label *label279
  1064 label *label276
  1065 label *label277
-    * ubind .TYPE
+ 1066 ubind *tmp9
  1067 set :rebindUnit.7:firstUnit @unit
  1068 jump *label280 equal :rebindUnit.7:firstUnit null
  1069 label *label282
 
  1072 jump *label275 always
  1073 label *label285
  1074 label *label286
-    * ubind .TYPE
+ 1075 ubind *tmp9
  1076 label *label283
  1077 op notEqual *tmp426 @unit :rebindUnit.7:firstUnit
  1078 sensor *tmp427 :rebindUnit.7:firstUnit @dead
 
  1092 op or *tmp433 *tmp431 *tmp432
  1093 jump *label287 equal *tmp433 false
  1094 sensor *tmp435 @unit @firstItem
-    * jump *label289 notEqual *tmp435 :processUnit.3:item
+ 1095 jump *label289 notEqual *tmp435 @phase-fabric
  1096 set :processUnit.3:state 3
  1097 jump *label290 always
  1098 label *label289
 
  1115 jump *label295 notEqual :processUnit.3:state 2
  1116 ucontrol within .CORE_X .CORE_Y 8 *tmp445
  1117 jump *label297 equal *tmp445 false
-    * ucontrol itemTake .CORE :processUnit.3:item .UNIT_CAPACITY
+ 1118 ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
  1119 sensor *tmp447 @unit @totalItems
  1120 jump *label299 lessThan *tmp447 .UNIT_CAPACITY
  1121 ucontrol approach .DOME_X .DOME_Y 6
 
  1141 jump *label301 notEqual :processUnit.3:state 3
  1142 ucontrol within .DOME_X .DOME_Y 8 *tmp459
  1143 jump *label303 equal *tmp459 false
-    * jump *label305 equal :processUnit.3:supply false
+ 1144 jump *label305 equal *tmp411 false
  1145 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1146 set .MSG ", supplying\n"
  1147 jump *label306 always
 
  1172 ucontrol flag :processUnit.3:state
  1173 sensor *tmp472 @unit @totalItems
  1174 print "  "
-    * print :processUnit.3:group
+ 1175 print .GROUP2
  1176 print ":"
  1177 print " ["
-    * print :processUnit.3:color
+ 1178 print "gold"
  1179 print "]"
  1180 print *tmp472
  1181 print "["
 
  1194 label *label274
  1195 set .UNIT_P2 :processUnit.3:unit
  1196 jump *label311 equal .SUPPLY_P_FIRST false
-    * sensor *tmp477 .UNIT_P1 @totalItems
+ 1197 sensor *tmp477 :processUnit.2:unit @totalItems
  1198 op greaterThan *tmp476 *tmp477 0
  1199 jump *label312 always
  1200 label *label311
-    * sensor *tmp479 .UNIT_P2 @totalItems
+ 1201 sensor *tmp479 :processUnit.3:unit @totalItems
  1202 op equal *tmp476 *tmp479 0
  1203 label *label312
  1204 set .SUPPLY_P_FIRST *tmp476
 
  1212 print " "
  1213 print "ms"
  1214 printflush message1
-    * op notEqual *tmp483 .TYPE UNIT_TYPE
+ 1215 op notEqual *tmp483 *tmp9 UNIT_TYPE
  1216 op greaterThan *tmp484 :unitCheck @time
  1217 op land *tmp485 *tmp483 *tmp484
  1218 jump *label313 equal *tmp485 false
 
  1221 set :areUnitsAvailable.2:free 0
  1222 set :areUnitsAvailable.2:occupied 0
  1223 set :areUnitsAvailable.2:needed 0
-    * ubind :areUnitsAvailable.2:type
+ 1224 ubind UNIT_TYPE
  1225 set :areUnitsAvailable.2:firstUnit @unit
  1226 jump *label316 equal :areUnitsAvailable.2:firstUnit null
  1227 set :needsFourUnits.3:unit @unit
  1228 op sub *tmp491 .DOME_X .CORE_X
  1229 op sub *tmp492 .DOME_Y .CORE_Y
-    * op len *tmp493 *tmp491 *tmp492
-    * op mul *tmp494 2 *tmp493
+ 1230 op len *tmp493 *tmp135 *tmp136
+ 1231 op mul *tmp494 2 *tmp137
  1232 sensor *tmp495 :needsFourUnits.3:unit @speed
-    * op div :needsFourUnits.3:travel_time *tmp494 *tmp495
+ 1233 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
  1234 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
  1235 jump *label318 always
-    * set *tmp490 null
  1236 label *label318
  1237 jump *label319 equal *tmp490 false
  1238 set *tmp498 4
 
  1249 op or *tmp503 *tmp500 *tmp502
  1250 jump *label324 equal *tmp503 false
  1251 op add :areUnitsAvailable.2:free :areUnitsAvailable.2:free 1
-    * jump *label326 lessThan :areUnitsAvailable.2:free :areUnitsAvailable.2:needed
+ 1252 jump *label326 lessThan :areUnitsAvailable.2:free *tmp498
  1253 set *tmp487 true
  1254 jump *label315 always
  1255 label *label326
 
  1258 label *label324
  1259 op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
  1260 label *label325
-    * ubind :areUnitsAvailable.2:type
+ 1261 ubind UNIT_TYPE
  1262 label *label322
  1263 op notEqual *tmp508 @unit :areUnitsAvailable.2:firstUnit
  1264 sensor *tmp509 :areUnitsAvailable.2:firstUnit @dead
 
  1268 label *label323
  1269 label *label316
  1270 label *label317
-    * jump *label328 equal :areUnitsAvailable.2:output false
-    * print :areUnitsAvailable.2:type
+ 1271 jump *label328 equal false false
+ 1272 print UNIT_TYPE
  1273 print ":"
  1274 print " occupied: "
  1275 print :areUnitsAvailable.2:occupied
 
  1286 label *label329
  1287 set *tmp487 false
  1288 jump *label315 always
-    * set *tmp487 null
  1289 label *label315
  1290 jump *label332 equal *tmp487 false
  1291 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-48 instructions):
 
    62 printflush null
    63 print "[gold]Looking for suitable unit type:[]"
    64 print "\n"
-    * set :areUnitsAvailable:type UNIT_TYPE
-    * set :areUnitsAvailable:output true
    65 set :areUnitsAvailable:free 0
    66 set :areUnitsAvailable:occupied 0
    67 set :areUnitsAvailable:needed 0
 
   152 setaddr *tmp39 *label50
   153 label *label44
   154 jump *label51 equal :chooseUnitType:type UNIT_TYPE
-    * set :areUnitsAvailable.1:type :chooseUnitType:type
-    * set :areUnitsAvailable.1:output true
   155 set :areUnitsAvailable.1:free 0
   156 set :areUnitsAvailable.1:occupied 0
   157 set :areUnitsAvailable.1:needed 0
 
   239 label *label24
   240 set *tmp9 null
   241 label *label21
-    * set .TYPE *tmp9
   242 print "[gold]Binding units..."
   243 printflush message1
   244 set .UNIT_P2 null
   245 set .UNIT_S2 null
-    * set .UNIT_P1 .UNIT_P2
-    * set .UNIT_S1 .UNIT_S2
+  246 set .UNIT_P1 null
+  247 set .UNIT_S1 null
   248 set :rebindUnits:count 0
   249 ubind *tmp9
   250 set :rebindUnits:firstUnit @unit
 
   277 label *label77
   278 label *label72
   279 set :acquireUnit:currentUnit .UNIT_S1
-    * set :rebindUnit:currentUnit .UNIT_S1
-    * jump *label84 equal :acquireUnit:currentUnit null
-    * ubind :acquireUnit:currentUnit
+  280 jump *label84 equal .UNIT_S1 null
+  281 ubind .UNIT_S1
   282 sensor *tmp89 @unit @dead
   283 op equal *tmp90 *tmp89 0
   284 sensor *tmp91 @unit @controller
 
   317 label *label82
   318 set .UNIT_S1 *tmp85
   319 set :acquireUnit.1:currentUnit .UNIT_P1
-    * set :rebindUnit.1:currentUnit .UNIT_P1
-    * jump *label97 equal :acquireUnit.1:currentUnit null
-    * ubind :acquireUnit.1:currentUnit
+  320 jump *label97 equal .UNIT_P1 null
+  321 ubind .UNIT_P1
   322 sensor *tmp108 @unit @dead
   323 op equal *tmp109 *tmp108 0
   324 sensor *tmp110 @unit @controller
 
   362 op equal *tmp126 *tmp125 @silicon
   363 op or *tmp127 *tmp124 *tmp126
   364 jump *label108 equal *tmp127 false
-    * set :swap:a *tmp85
-    * set :swap:b *tmp104
-    * set :swap:t .UNIT_S1
-    * set :swap:a .UNIT_P1
-    * set :swap:b :swap:t
+  365 set :swap:t *tmp85
+  366 set :swap:a *tmp104
+  367 set :swap:b .UNIT_S1
   368 label *label110
-    * set .UNIT_S1 :swap:a
+  369 set .UNIT_S1 .UNIT_P1
   370 set .UNIT_P1 :swap:t
   371 label *label108
   372 label *label109
 
   378 stop
   379 label *label111
   380 label *label112
-    * set :needsFourUnits.2:unit .UNIT_S1
   381 op sub *tmp135 .DOME_X .CORE_X
   382 op sub *tmp136 .DOME_Y .CORE_Y
   383 op len *tmp137 *tmp135 *tmp136
 
   387 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
   388 jump *label113 always
   389 label *label113
-    * set .FOUR_UNITS *tmp134
   390 jump *label114 equal *tmp134 false
   391 set :acquireUnit.2:currentUnit .UNIT_S2
-    * set :rebindUnit.2:currentUnit .UNIT_S2
-    * jump *label118 equal :acquireUnit.2:currentUnit null
-    * ubind :acquireUnit.2:currentUnit
+  392 jump *label118 equal .UNIT_S2 null
+  393 ubind .UNIT_S2
   394 sensor *tmp147 @unit @dead
   395 op equal *tmp148 *tmp147 0
   396 sensor *tmp149 @unit @controller
 
   429 label *label116
   430 set .UNIT_S2 *tmp143
   431 set :acquireUnit.3:currentUnit .UNIT_P2
-    * set :rebindUnit.3:currentUnit .UNIT_P2
-    * jump *label131 equal :acquireUnit.3:currentUnit null
-    * ubind :acquireUnit.3:currentUnit
+  432 jump *label131 equal .UNIT_P2 null
+  433 ubind .UNIT_P2
   434 sensor *tmp166 @unit @dead
   435 op equal *tmp167 *tmp166 0
   436 sensor *tmp168 @unit @controller
 
   474 op notEqual *tmp184 *tmp183 @phase-fabric
   475 op land *tmp185 *tmp182 *tmp184
   476 jump *label142 equal *tmp185 false
-    * set :swap.1:a .UNIT_S1
-    * set :swap.1:b *tmp162
   477 set :swap.1:t .UNIT_S1
-    * set :swap.1:a .UNIT_P2
-    * set :swap.1:b :swap.1:t
+  478 set :swap.1:a *tmp162
+  479 set :swap.1:b .UNIT_S1
   480 label *label144
-    * set .UNIT_S1 :swap.1:a
+  481 set .UNIT_S1 .UNIT_P2
   482 set .UNIT_P2 :swap.1:t
   483 label *label142
   484 label *label143
 
   488 op equal *tmp190 *tmp189 @silicon
   489 op or *tmp191 *tmp188 *tmp190
   490 jump *label145 equal *tmp191 false
-    * set :swap.2:a *tmp143
-    * set :swap.2:b .UNIT_P2
-    * set :swap.2:t .UNIT_S2
+  491 set :swap.2:t *tmp143
   492 set :swap.2:a .UNIT_P2
-    * set :swap.2:b :swap.2:t
+  493 set :swap.2:b .UNIT_S2
   494 label *label147
-    * set .UNIT_S2 :swap.2:a
+  495 set .UNIT_S2 .UNIT_P2
   496 set .UNIT_P2 :swap.2:t
   497 label *label145
   498 label *label146
 
   513 sensor *tmp195 .UNIT_S2 @totalItems
   514 op lessThan *tmp196 *tmp194 *tmp195
   515 op or .SUPPLY_S_FIRST *tmp193 *tmp196
-    * op equal *tmp198 *tmp134 false
   516 sensor *tmp199 .UNIT_P1 @totalItems
   517 sensor *tmp200 .UNIT_P2 @totalItems
   518 op lessThan *tmp201 *tmp199 *tmp200
 
   530 print "["
   531 print "]"
   532 print "\n"
-    * set :printDomeStatus:item @silicon
-    * set :printDomeStatus:text "\n[green]Silicon[] status:\n"
   533 print "\n[green]Silicon[] status:\n"
   534 sensor :printDomeStatus:level .DOME @silicon
   535 jump *label152 lessThanEq :printDomeStatus:level 3
 
   548 label *label153
   549 label *label151
   550 set :processUnit:unit .UNIT_S1
-    * set :processUnit:item @silicon
-    * set :processUnit:group .GROUP1
-    * set :processUnit:supply .SUPPLY_S_FIRST
-    * set :rebindUnit.4:currentUnit .UNIT_S1
-    * jump *label156 equal :processUnit:unit null
-    * ubind :processUnit:unit
+  551 jump *label156 equal .UNIT_S1 null
+  552 ubind .UNIT_S1
   553 sensor *tmp211 @unit @dead
   554 op equal *tmp212 *tmp211 0
   555 sensor *tmp213 @unit @controller
 
   584 label *label155
   585 sensor :processUnit:state @unit @flag
   586 set :processUnit:distance -1
-    * set :processUnit:color "gold"
   587 op lessThan *tmp227 :processUnit:state 2
   588 op greaterThan *tmp228 :processUnit:state 3
   589 op or *tmp229 *tmp227 *tmp228
 
   693 jump *label191 equal *tmp134 false
   694 op equal *tmp273 .SUPPLY_S_FIRST false
   695 set :processUnit.1:unit .UNIT_S2
-    * set :processUnit.1:item @silicon
-    * set :processUnit.1:group .GROUP2
-    * set :processUnit.1:supply *tmp273
-    * set :rebindUnit.5:currentUnit .UNIT_S2
-    * jump *label195 equal :processUnit.1:unit null
-    * ubind :processUnit.1:unit
+  696 jump *label195 equal .UNIT_S2 null
+  697 ubind .UNIT_S2
   698 sensor *tmp277 @unit @dead
   699 op equal *tmp278 *tmp277 0
   700 sensor *tmp279 @unit @controller
 
   729 label *label194
   730 sensor :processUnit.1:state @unit @flag
   731 set :processUnit.1:distance -1
-    * set :processUnit.1:color "gold"
   732 op lessThan *tmp293 :processUnit.1:state 2
   733 op greaterThan *tmp294 :processUnit.1:state 3
   734 op or *tmp295 *tmp293 *tmp294
 
   846 set .SUPPLY_S_FIRST *tmp338
   847 label *label191
   848 label *label192
-    * set :printDomeStatus.1:item @phase-fabric
-    * set :printDomeStatus.1:text "\n[green]Phase fabric[] status:\n"
   849 print "\n[green]Phase fabric[] status:\n"
   850 sensor :printDomeStatus.1:level .DOME @phase-fabric
   851 jump *label233 lessThanEq :printDomeStatus.1:level 3
 
   864 label *label234
   865 label *label232
   866 set :processUnit.2:unit .UNIT_P1
-    * set :processUnit.2:item @phase-fabric
-    * set :processUnit.2:group .GROUP1
-    * set :processUnit.2:supply .SUPPLY_P_FIRST
-    * set :rebindUnit.6:currentUnit .UNIT_P1
-    * jump *label237 equal :processUnit.2:unit null
-    * ubind :processUnit.2:unit
+  867 jump *label237 equal .UNIT_P1 null
+  868 ubind .UNIT_P1
   869 sensor *tmp349 @unit @dead
   870 op equal *tmp350 *tmp349 0
   871 sensor *tmp351 @unit @controller
 
   900 label *label236
   901 sensor :processUnit.2:state @unit @flag
   902 set :processUnit.2:distance -1
-    * set :processUnit.2:color "gold"
   903 op lessThan *tmp365 :processUnit.2:state 2
   904 op greaterThan *tmp366 :processUnit.2:state 3
   905 op or *tmp367 *tmp365 *tmp366
 
  1009 jump *label272 equal *tmp134 false
  1010 op equal *tmp411 .SUPPLY_P_FIRST false
  1011 set :processUnit.3:unit .UNIT_P2
-    * set :processUnit.3:item @phase-fabric
-    * set :processUnit.3:group .GROUP2
-    * set :processUnit.3:supply *tmp411
-    * set :rebindUnit.7:currentUnit .UNIT_P2
-    * jump *label276 equal :processUnit.3:unit null
-    * ubind :processUnit.3:unit
+ 1012 jump *label276 equal .UNIT_P2 null
+ 1013 ubind .UNIT_P2
  1014 sensor *tmp415 @unit @dead
  1015 op equal *tmp416 *tmp415 0
  1016 sensor *tmp417 @unit @controller
 
  1045 label *label275
  1046 sensor :processUnit.3:state @unit @flag
  1047 set :processUnit.3:distance -1
-    * set :processUnit.3:color "gold"
  1048 op lessThan *tmp431 :processUnit.3:state 2
  1049 op greaterThan *tmp432 :processUnit.3:state 3
  1050 op or *tmp433 *tmp431 *tmp432
 
  1174 op greaterThan *tmp484 :unitCheck @time
  1175 op land *tmp485 *tmp483 *tmp484
  1176 jump *label313 equal *tmp485 false
-    * set :areUnitsAvailable.2:type UNIT_TYPE
-    * set :areUnitsAvailable.2:output false
  1177 set :areUnitsAvailable.2:free 0
  1178 set :areUnitsAvailable.2:occupied 0
  1179 set :areUnitsAvailable.2:needed 0
 
  1181 set :areUnitsAvailable.2:firstUnit @unit
  1182 jump *label316 equal :areUnitsAvailable.2:firstUnit null
  1183 set :needsFourUnits.3:unit @unit
-    * op sub *tmp491 .DOME_X .CORE_X
-    * op sub *tmp492 .DOME_Y .CORE_Y
-    * op len *tmp493 *tmp135 *tmp136
-    * op mul *tmp494 2 *tmp137
  1184 sensor *tmp495 :needsFourUnits.3:unit @speed
  1185 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
  1186 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-12 instructions):
 
   276 jump *label75 notEqual *tmp84 false
   277 label *label77
   278 label *label72
-    * set :acquireUnit:currentUnit .UNIT_S1
   279 jump *label84 equal .UNIT_S1 null
   280 ubind .UNIT_S1
   281 sensor *tmp89 @unit @dead
 
   315 jump *label82 always
   316 label *label82
   317 set .UNIT_S1 *tmp85
-    * set :acquireUnit.1:currentUnit .UNIT_P1
   318 jump *label97 equal .UNIT_P1 null
   319 ubind .UNIT_P1
   320 sensor *tmp108 @unit @dead
 
   361 op or *tmp127 *tmp124 *tmp126
   362 jump *label108 equal *tmp127 false
   363 set :swap:t *tmp85
-    * set :swap:a *tmp104
-    * set :swap:b .UNIT_S1
+  364 set :swap:b *tmp85
   365 label *label110
-    * set .UNIT_S1 .UNIT_P1
-    * set .UNIT_P1 :swap:t
+  366 set .UNIT_S1 *tmp104
+  367 set .UNIT_P1 *tmp85
   368 label *label108
   369 label *label109
   370 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
 
   385 jump *label113 always
   386 label *label113
   387 jump *label114 equal *tmp134 false
-    * set :acquireUnit.2:currentUnit .UNIT_S2
   388 jump *label118 equal .UNIT_S2 null
   389 ubind .UNIT_S2
   390 sensor *tmp147 @unit @dead
 
   424 jump *label116 always
   425 label *label116
   426 set .UNIT_S2 *tmp143
-    * set :acquireUnit.3:currentUnit .UNIT_P2
   427 jump *label131 equal .UNIT_P2 null
   428 ubind .UNIT_P2
   429 sensor *tmp166 @unit @dead
 
   470 op land *tmp185 *tmp182 *tmp184
   471 jump *label142 equal *tmp185 false
   472 set :swap.1:t .UNIT_S1
-    * set :swap.1:a *tmp162
-    * set :swap.1:b .UNIT_S1
   473 label *label144
-    * set .UNIT_S1 .UNIT_P2
+  474 set .UNIT_S1 *tmp162
   475 set .UNIT_P2 :swap.1:t
   476 label *label142
   477 label *label143
 
   482 op or *tmp191 *tmp188 *tmp190
   483 jump *label145 equal *tmp191 false
   484 set :swap.2:t *tmp143
-    * set :swap.2:a .UNIT_P2
-    * set :swap.2:b .UNIT_S2
+  485 set :swap.2:b *tmp143
   486 label *label147
   487 set .UNIT_S2 .UNIT_P2
-    * set .UNIT_P2 :swap.2:t
+  488 set .UNIT_P2 *tmp143
   489 label *label145
   490 label *label146
   491 set .GROUP1 "unit  1"
 
   539 print "\n"
   540 label *label153
   541 label *label151
-    * set :processUnit:unit .UNIT_S1
   542 jump *label156 equal .UNIT_S1 null
   543 ubind .UNIT_S1
   544 sensor *tmp211 @unit @dead
 
   683 set .UNIT_S1 :processUnit:unit
   684 jump *label191 equal *tmp134 false
   685 op equal *tmp273 .SUPPLY_S_FIRST false
-    * set :processUnit.1:unit .UNIT_S2
   686 jump *label195 equal .UNIT_S2 null
   687 ubind .UNIT_S2
   688 sensor *tmp277 @unit @dead
 
   853 print "\n"
   854 label *label234
   855 label *label232
-    * set :processUnit.2:unit .UNIT_P1
   856 jump *label237 equal .UNIT_P1 null
   857 ubind .UNIT_P1
   858 sensor *tmp349 @unit @dead
 
   997 set .UNIT_P1 :processUnit.2:unit
   998 jump *label272 equal *tmp134 false
   999 op equal *tmp411 .SUPPLY_P_FIRST false
-    * set :processUnit.3:unit .UNIT_P2
  1000 jump *label276 equal .UNIT_P2 null
  1001 ubind .UNIT_P2
  1002 sensor *tmp415 @unit @dead

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-4 instructions):
 
   360 op equal *tmp126 *tmp125 @silicon
   361 op or *tmp127 *tmp124 *tmp126
   362 jump *label108 equal *tmp127 false
-    * set :swap:t *tmp85
-    * set :swap:b *tmp85
   363 label *label110
   364 set .UNIT_S1 *tmp104
   365 set .UNIT_P1 *tmp85
 
   479 op equal *tmp190 *tmp189 @silicon
   480 op or *tmp191 *tmp188 *tmp190
   481 jump *label145 equal *tmp191 false
-    * set :swap.2:t *tmp143
-    * set :swap.2:b *tmp143
   482 label *label147
   483 set .UNIT_S2 .UNIT_P2
   484 set .UNIT_P2 *tmp143

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     4 set .DOME dome1
     5 label *label2
     6 jump *label4 notEqual .DOME null
+    7 label *label337
     8 print "[gold]Waiting for an overdrive dome to be connected..."
     9 printflush message1
    10 set .DOME dome1
    11 label *label3
-    * jump *label2 always
+   12 jump *label337 equal .DOME null
    13 label *label4
    14 print "[gold]Locating core..."
    15 printflush message1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-9 instructions):
 
    69 ubind UNIT_TYPE
    70 set :areUnitsAvailable:firstUnit @unit
    71 jump *label26 equal :areUnitsAvailable:firstUnit null
-    * set :needsFourUnits:unit @unit
-    * op sub *tmp14 .DOME_X .CORE_X
-    * op sub *tmp15 .DOME_Y .CORE_Y
-    * op len *tmp16 *tmp14 *tmp15
-    * op mul *tmp17 2 *tmp16
-    * sensor *tmp18 :needsFourUnits:unit @speed
-    * op div :needsFourUnits:travel_time *tmp17 *tmp18
-    * op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
-    * jump *label28 always
-    * label *label28
-    * jump *label29 equal *tmp13 false
-    * set *tmp21 4
-    * jump *label30 always
-    * label *label29
-    * set *tmp21 2
-    * label *label30
+   72 set :needsFourUnits:unit @unit
+   73 op sub *tmp14 .DOME_X .CORE_X
+   74 op sub *tmp15 .DOME_Y .CORE_Y
+   75 op len *tmp16 *tmp14 *tmp15
+   76 op mul *tmp17 2 *tmp16
+   77 sensor *tmp18 :needsFourUnits:unit @speed
+   78 op div :needsFourUnits:travel_time *tmp17 *tmp18
+   79 op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
+   80 jump *label338 always
+   81 label *label338
+   82 select *tmp21 notEqual *tmp13 false 4 2
    83 set :areUnitsAvailable:needed *tmp21
    84 label *label31
    85 sensor *tmp22 @unit @controlled
 
   154 ubind :chooseUnitType:type
   155 set :areUnitsAvailable.1:firstUnit @unit
   156 jump *label54 equal :areUnitsAvailable.1:firstUnit null
-    * set :needsFourUnits.1:unit @unit
-    * op sub *tmp46 .DOME_X .CORE_X
-    * op sub *tmp47 .DOME_Y .CORE_Y
-    * op len *tmp48 *tmp46 *tmp47
-    * op mul *tmp49 2 *tmp48
-    * sensor *tmp50 :needsFourUnits.1:unit @speed
-    * op div :needsFourUnits.1:travel_time *tmp49 *tmp50
-    * op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * jump *label56 always
-    * label *label56
-    * jump *label57 equal *tmp45 false
-    * set *tmp53 4
-    * jump *label58 always
-    * label *label57
-    * set *tmp53 2
-    * label *label58
+  157 set :needsFourUnits.1:unit @unit
+  158 op sub *tmp46 .DOME_X .CORE_X
+  159 op sub *tmp47 .DOME_Y .CORE_Y
+  160 op len *tmp48 *tmp46 *tmp47
+  161 op mul *tmp49 2 *tmp48
+  162 sensor *tmp50 :needsFourUnits.1:unit @speed
+  163 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  164 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
+  165 jump *label339 always
+  166 label *label339
+  167 select *tmp53 notEqual *tmp45 false 4 2
   168 set :areUnitsAvailable.1:needed *tmp53
   169 label *label59
   170 sensor *tmp54 @unit @controlled
 
  1155 ubind UNIT_TYPE
  1156 set :areUnitsAvailable.2:firstUnit @unit
  1157 jump *label316 equal :areUnitsAvailable.2:firstUnit null
-    * set :needsFourUnits.3:unit @unit
-    * sensor *tmp495 :needsFourUnits.3:unit @speed
-    * op div :needsFourUnits.3:travel_time *tmp138 *tmp495
-    * op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
-    * jump *label318 always
-    * label *label318
-    * jump *label319 equal *tmp490 false
-    * set *tmp498 4
-    * jump *label320 always
-    * label *label319
-    * set *tmp498 2
-    * label *label320
+ 1158 set :needsFourUnits.3:unit @unit
+ 1159 sensor *tmp495 :needsFourUnits.3:unit @speed
+ 1160 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
+ 1161 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
+ 1162 jump *label340 always
+ 1163 label *label340
+ 1164 select *tmp498 notEqual *tmp490 false 4 2
  1165 set :areUnitsAvailable.2:needed *tmp498
  1166 label *label321
  1167 sensor *tmp499 @unit @controlled

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2 (-2 instructions):
 
   814 set .UNIT_S2 :processUnit.1:unit
   815 jump *label230 equal .SUPPLY_S_FIRST false
   816 sensor *tmp339 :processUnit:unit @totalItems
-    * op greaterThan *tmp338 *tmp339 0
+  817 op greaterThan .SUPPLY_S_FIRST *tmp339 0
   818 jump *label231 always
   819 label *label230
   820 sensor *tmp341 :processUnit.1:unit @totalItems
-    * op equal *tmp338 *tmp341 0
+  821 op equal .SUPPLY_S_FIRST *tmp341 0
   822 label *label231
-    * set .SUPPLY_S_FIRST *tmp338
   823 label *label191
   824 label *label192
   825 print "\n[green]Phase fabric[] status:\n"
 
  1127 set .UNIT_P2 :processUnit.3:unit
  1128 jump *label311 equal .SUPPLY_P_FIRST false
  1129 sensor *tmp477 :processUnit.2:unit @totalItems
-    * op greaterThan *tmp476 *tmp477 0
+ 1130 op greaterThan .SUPPLY_P_FIRST *tmp477 0
  1131 jump *label312 always
  1132 label *label311
  1133 sensor *tmp479 :processUnit.3:unit @totalItems
-    * op equal *tmp476 *tmp479 0
+ 1134 op equal .SUPPLY_P_FIRST *tmp479 0
  1135 label *label312
-    * set .SUPPLY_P_FIRST *tmp476
  1136 label *label272
  1137 label *label273
  1138 op sub *tmp481 @time :start

Modifications by Unroll iteration loop at line 169:9 (+7 instructions):
 
    15 printflush message1
    16 set .CORE null
    17 label *label5
-    * set :locateDomeAndCore:type @flare
-    * setaddr *tmp1 *label11
-    * jump *label8 always
-    * multilabel *label11 (m:marker0)
-    * set :locateDomeAndCore:type @poly
-    * setaddr *tmp1 *label12
-    * jump *label8 always
-    * multilabel *label12 (m:marker0)
-    * set :locateDomeAndCore:type @mega
-    * setaddr *tmp1 *label13
-    * jump *label8 always
-    * multilabel *label13 (m:marker0)
-    * set :locateDomeAndCore:type @mono
-    * setaddr *tmp1 *label14
-    * label *label8
-    * set :locateCore:type :locateDomeAndCore:type
-    * setaddr :locateCore*retaddr *label15 (h:*label15)
-    * call *label0 *invalid :locateCore*retval (m:*label15) (h:*label15)
-    * label *label15
-    * jump *label16 equal :locateCore*retval false
-    * jump *label1 always
-    * label *label16
-    * label *label17
-    * label *label9
-    * multijump *tmp1 0 0 (m:marker0)
-    * multilabel *label14 (m:marker0)
-    * label *label10
+   18 set :locateDomeAndCore:type @flare
+   19 label *label341
+   20 set :locateCore:type :locateDomeAndCore:type
+   21 setaddr :locateCore*retaddr *label342 (h:*label342)
+   22 call *label0 *invalid :locateCore*retval (m:*label342) (h:*label342)
+   23 label *label342
+   24 jump *label343 equal :locateCore*retval false
+   25 jump *label1 always
+   26 label *label343
+   27 label *label344
+   28 label *label345
+   29 set :locateDomeAndCore:type @poly
+   30 label *label348
+   31 set :locateCore:type :locateDomeAndCore:type
+   32 setaddr :locateCore*retaddr *label349 (h:*label349)
+   33 call *label0 *invalid :locateCore*retval (m:*label349) (h:*label349)
+   34 label *label349
+   35 jump *label350 equal :locateCore*retval false
+   36 jump *label1 always
+   37 label *label350
+   38 label *label351
+   39 label *label352
+   40 set :locateDomeAndCore:type @mega
+   41 label *label355
+   42 set :locateCore:type :locateDomeAndCore:type
+   43 setaddr :locateCore*retaddr *label356 (h:*label356)
+   44 call *label0 *invalid :locateCore*retval (m:*label356) (h:*label356)
+   45 label *label356
+   46 jump *label357 equal :locateCore*retval false
+   47 jump *label1 always
+   48 label *label357
+   49 label *label358
+   50 label *label359
+   51 set :locateDomeAndCore:type @mono
+   52 label *label362
+   53 set :locateCore:type :locateDomeAndCore:type
+   54 setaddr :locateCore*retaddr *label363 (h:*label363)
+   55 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
+   56 label *label363
+   57 jump *label364 equal :locateCore*retval false
+   58 jump *label1 always
+   59 label *label364
+   60 label *label365
+   61 label *label366
+   62 label *label10
    63 label *label6
    64 jump *label5 always
    65 label *label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 remark "Do not modify anything below this line."
     4 set .DOME dome1
     5 label *label2
-    * jump *label4 notEqual .DOME null
+    6 jump *label4 notEqual dome1 null
     7 label *label337
     8 print "[gold]Waiting for an overdrive dome to be connected..."
     9 printflush message1
    10 set .DOME dome1
    11 label *label3
-    * jump *label337 equal .DOME null
+   12 jump *label337 equal dome1 null
    13 label *label4
    14 print "[gold]Locating core..."
    15 printflush message1
 
    17 label *label5
    18 set :locateDomeAndCore:type @flare
    19 label *label341
-    * set :locateCore:type :locateDomeAndCore:type
+   20 set :locateCore:type @flare
    21 setaddr :locateCore*retaddr *label342 (h:*label342)
    22 call *label0 *invalid :locateCore*retval (m:*label342) (h:*label342)
    23 label *label342
 
    28 label *label345
    29 set :locateDomeAndCore:type @poly
    30 label *label348
-    * set :locateCore:type :locateDomeAndCore:type
+   31 set :locateCore:type @poly
    32 setaddr :locateCore*retaddr *label349 (h:*label349)
    33 call *label0 *invalid :locateCore*retval (m:*label349) (h:*label349)
    34 label *label349
 
    39 label *label352
    40 set :locateDomeAndCore:type @mega
    41 label *label355
-    * set :locateCore:type :locateDomeAndCore:type
+   42 set :locateCore:type @mega
    43 setaddr :locateCore*retaddr *label356 (h:*label356)
    44 call *label0 *invalid :locateCore*retval (m:*label356) (h:*label356)
    45 label *label356
 
    50 label *label359
    51 set :locateDomeAndCore:type @mono
    52 label *label362
-    * set :locateCore:type :locateDomeAndCore:type
+   53 set :locateCore:type @mono
    54 setaddr :locateCore*retaddr *label363 (h:*label363)
    55 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
    56 label *label363

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    15 printflush message1
    16 set .CORE null
    17 label *label5
-    * set :locateDomeAndCore:type @flare
    18 label *label341
    19 set :locateCore:type @flare
    20 setaddr :locateCore*retaddr *label342 (h:*label342)
 
    25 label *label343
    26 label *label344
    27 label *label345
-    * set :locateDomeAndCore:type @poly
    28 label *label348
    29 set :locateCore:type @poly
    30 setaddr :locateCore*retaddr *label349 (h:*label349)
 
    35 label *label350
    36 label *label351
    37 label *label352
-    * set :locateDomeAndCore:type @mega
    38 label *label355
    39 set :locateCore:type @mega
    40 setaddr :locateCore*retaddr *label356 (h:*label356)
 
    45 label *label357
    46 label *label358
    47 label *label359
-    * set :locateDomeAndCore:type @mono
    48 label *label362
    49 set :locateCore:type @mono
    50 setaddr :locateCore*retaddr *label363 (h:*label363)

Modifications by Replicate loop condition at line 54:5 (+1 instructions):
 
    67 label *label18
    68 sensor *tmp7 switch1 @enabled
    69 jump *label20 notEqual *tmp7 false
+   70 label *label370
    71 print "[coral]Activate switch to begin supplying overdrive dome..."
    72 print "\n"
    73 printflush message1
    74 label *label19
-    * jump *label18 always
+   75 sensor *tmp7 switch1 @enabled
+   76 jump *label370 equal *tmp7 false
    77 label *label20
    78 label *label22
    79 printflush null

Modifications by Replicate loop condition at line 119:5 (+1 instructions):
 
   516 label *label148
   517 sensor *tmp204 switch1 @enabled
   518 jump *label150 equal *tmp204 false
+  519 label *label371
   520 set :start @time
   521 print " === [gold]Supplying Overdrive Dome[] === "
   522 print "\n"
 
  1232 label *label313
  1233 label *label314
  1234 label *label149
-    * jump *label148 always
+ 1235 sensor *tmp204 switch1 @enabled
+ 1236 jump *label371 notEqual *tmp204 false
  1237 label *label150
  1238 end
  1239 label *label0

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   124 label *label33
   125 label *label26
   126 label *label27
-    * jump *label38 equal true false
   127 print UNIT_TYPE
   128 print ":"
   129 print " occupied: "
 
   208 label *label61
   209 label *label54
   210 label *label55
-    * jump *label66 equal true false
   211 print :chooseUnitType:type
   212 print ":"
   213 print " occupied: "
 
  1203 label *label323
  1204 label *label316
  1205 label *label317
-    * jump *label328 equal false false
+ 1206 jump *label328 always
  1207 print UNIT_TYPE
  1208 print ":"
  1209 print " occupied: "

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-11 instructions):
 
    93 sensor *tmp18 :needsFourUnits:unit @speed
    94 op div :needsFourUnits:travel_time *tmp17 *tmp18
    95 op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
-    * jump *label338 always
    96 label *label338
    97 select *tmp21 notEqual *tmp13 false 4 2
    98 set :areUnitsAvailable:needed *tmp21
 
   139 label *label38
   140 label *label39
   141 set *tmp10 false
-    * jump *label25 always
   142 label *label25
   143 jump *label42 equal *tmp10 false
   144 set *tmp9 UNIT_TYPE
 
   175 sensor *tmp50 :needsFourUnits.1:unit @speed
   176 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   177 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * jump *label339 always
   178 label *label339
   179 select *tmp53 notEqual *tmp45 false 4 2
   180 set :areUnitsAvailable.1:needed *tmp53
 
   221 label *label66
   222 label *label67
   223 set *tmp42 false
-    * jump *label53 always
   224 label *label53
   225 jump *label70 equal *tmp42 false
   226 printflush null
 
   313 label *label83
   314 ucontrol flag 1
   315 set *tmp85 @unit
-    * jump *label82 always
   316 label *label82
   317 set .UNIT_S1 *tmp85
   318 jump *label97 equal .UNIT_P1 null
 
   351 label *label96
   352 ucontrol flag 1
   353 set *tmp104 @unit
-    * jump *label95 always
   354 label *label95
   355 set .UNIT_P1 *tmp104
   356 sensor *tmp123 *tmp85 @firstItem
 
   379 sensor *tmp139 .UNIT_S1 @speed
   380 op div :needsFourUnits.2:travel_time *tmp138 .SPEED
   381 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
-    * jump *label113 always
   382 label *label113
   383 jump *label114 equal *tmp134 false
   384 jump *label118 equal .UNIT_S2 null
 
   417 label *label117
   418 ucontrol flag 1
   419 set *tmp143 @unit
-    * jump *label116 always
   420 label *label116
   421 set .UNIT_S2 *tmp143
   422 jump *label131 equal .UNIT_P2 null
 
   455 label *label130
   456 ucontrol flag 1
   457 set *tmp162 @unit
-    * jump *label129 always
   458 label *label129
   459 set .UNIT_P2 *tmp162
   460 sensor *tmp181 .UNIT_S1 @firstItem
 
  1163 sensor *tmp495 :needsFourUnits.3:unit @speed
  1164 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
  1165 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
-    * jump *label340 always
  1166 label *label340
  1167 select *tmp498 notEqual *tmp490 false 4 2
  1168 set :areUnitsAvailable.2:needed *tmp498
 
  1210 label *label328
  1211 label *label329
  1212 set *tmp487 false
-    * jump *label315 always
  1213 label *label315
  1214 jump *label332 equal *tmp487 false
  1215 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
  1155 jump *label313 equal *tmp485 false
  1156 set :areUnitsAvailable.2:free 0
  1157 set :areUnitsAvailable.2:occupied 0
-    * set :areUnitsAvailable.2:needed 0
  1158 ubind UNIT_TYPE
  1159 set :areUnitsAvailable.2:firstUnit @unit
  1160 jump *label316 equal :areUnitsAvailable.2:firstUnit null
 
  1164 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
  1165 label *label340
  1166 select *tmp498 notEqual *tmp490 false 4 2
-    * set :areUnitsAvailable.2:needed *tmp498
  1167 label *label321
  1168 sensor *tmp499 @unit @controlled
  1169 op equal *tmp500 *tmp499 0

Modifications by Unroll iteration loop at line 201:9 (+145 instructions):
 
   145 jump *label21 always
   146 label *label42
   147 label *label43
-    * set :chooseUnitType:type @flare
-    * setaddr *tmp39 *label47
-    * jump *label44 always
-    * multilabel *label47 (m:marker1)
-    * set :chooseUnitType:type @poly
-    * setaddr *tmp39 *label48
-    * jump *label44 always
-    * multilabel *label48 (m:marker1)
-    * set :chooseUnitType:type @mega
-    * setaddr *tmp39 *label49
-    * jump *label44 always
-    * multilabel *label49 (m:marker1)
-    * set :chooseUnitType:type @mono
-    * setaddr *tmp39 *label50
-    * label *label44
-    * jump *label51 equal :chooseUnitType:type UNIT_TYPE
-    * set :areUnitsAvailable.1:free 0
-    * set :areUnitsAvailable.1:occupied 0
-    * set :areUnitsAvailable.1:needed 0
-    * ubind :chooseUnitType:type
-    * set :areUnitsAvailable.1:firstUnit @unit
-    * jump *label54 equal :areUnitsAvailable.1:firstUnit null
-    * set :needsFourUnits.1:unit @unit
-    * op sub *tmp46 .DOME_X .CORE_X
-    * op sub *tmp47 .DOME_Y .CORE_Y
-    * op len *tmp48 *tmp46 *tmp47
-    * op mul *tmp49 2 *tmp48
-    * sensor *tmp50 :needsFourUnits.1:unit @speed
-    * op div :needsFourUnits.1:travel_time *tmp49 *tmp50
-    * op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * label *label339
-    * select *tmp53 notEqual *tmp45 false 4 2
-    * set :areUnitsAvailable.1:needed *tmp53
-    * label *label59
-    * sensor *tmp54 @unit @controlled
-    * op equal *tmp55 *tmp54 0
-    * sensor *tmp56 @unit @controller
-    * op equal *tmp57 *tmp56 @this
-    * op or *tmp58 *tmp55 *tmp57
-    * jump *label62 equal *tmp58 false
-    * op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label64 lessThan :areUnitsAvailable.1:free *tmp53
-    * set *tmp42 true
-    * jump *label53 always
-    * label *label64
-    * label *label65
-    * jump *label63 always
-    * label *label62
-    * op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
-    * label *label63
-    * ubind :chooseUnitType:type
-    * label *label60
-    * op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
-    * sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
-    * op equal *tmp65 *tmp64 0
-    * op land *tmp66 *tmp63 *tmp65
-    * jump *label59 notEqual *tmp66 false
-    * label *label61
-    * label *label54
-    * label *label55
-    * print :chooseUnitType:type
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.1:occupied
-    * print ","
-    * print " free: "
-    * print :areUnitsAvailable.1:free
-    * jump *label68 lessThanEq :areUnitsAvailable.1:needed 0
-    * print ", needed: "
-    * print :areUnitsAvailable.1:needed
-    * label *label68
-    * label *label69
-    * print "\n"
-    * label *label66
-    * label *label67
-    * set *tmp42 false
-    * label *label53
-    * jump *label70 equal *tmp42 false
-    * printflush null
-    * set *tmp9 :chooseUnitType:type
-    * jump *label21 always
-    * label *label70
-    * label *label71
-    * label *label51
-    * label *label52
-    * label *label45
-    * multijump *tmp39 0 0 (m:marker1)
-    * multilabel *label50 (m:marker1)
-    * label *label46
+  148 set :chooseUnitType:type @flare
+  149 label *label372
+  150 jump *label390 equal :chooseUnitType:type UNIT_TYPE
+  151 set :areUnitsAvailable.1:free 0
+  152 set :areUnitsAvailable.1:occupied 0
+  153 set :areUnitsAvailable.1:needed 0
+  154 ubind :chooseUnitType:type
+  155 set :areUnitsAvailable.1:firstUnit @unit
+  156 jump *label381 equal :areUnitsAvailable.1:firstUnit null
+  157 set :needsFourUnits.1:unit @unit
+  158 op sub *tmp46 .DOME_X .CORE_X
+  159 op sub *tmp47 .DOME_Y .CORE_Y
+  160 op len *tmp48 *tmp46 *tmp47
+  161 op mul *tmp49 2 *tmp48
+  162 sensor *tmp50 :needsFourUnits.1:unit @speed
+  163 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  164 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
+  165 label *label373
+  166 select *tmp53 notEqual *tmp45 false 4 2
+  167 set :areUnitsAvailable.1:needed *tmp53
+  168 label *label374
+  169 sensor *tmp54 @unit @controlled
+  170 op equal *tmp55 *tmp54 0
+  171 sensor *tmp56 @unit @controller
+  172 op equal *tmp57 *tmp56 @this
+  173 op or *tmp58 *tmp55 *tmp57
+  174 jump *label377 equal *tmp58 false
+  175 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
+  176 jump *label375 lessThan :areUnitsAvailable.1:free *tmp53
+  177 set *tmp42 true
+  178 jump *label387 always
+  179 label *label375
+  180 label *label376
+  181 jump *label378 always
+  182 label *label377
+  183 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
+  184 label *label378
+  185 ubind :chooseUnitType:type
+  186 label *label379
+  187 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
+  188 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
+  189 op equal *tmp65 *tmp64 0
+  190 op land *tmp66 *tmp63 *tmp65
+  191 jump *label374 notEqual *tmp66 false
+  192 label *label380
+  193 label *label381
+  194 label *label382
+  195 print :chooseUnitType:type
+  196 print ":"
+  197 print " occupied: "
+  198 print :areUnitsAvailable.1:occupied
+  199 print ","
+  200 print " free: "
+  201 print :areUnitsAvailable.1:free
+  202 jump *label383 lessThanEq :areUnitsAvailable.1:needed 0
+  203 print ", needed: "
+  204 print :areUnitsAvailable.1:needed
+  205 label *label383
+  206 label *label384
+  207 print "\n"
+  208 label *label385
+  209 label *label386
+  210 set *tmp42 false
+  211 label *label387
+  212 jump *label388 equal *tmp42 false
+  213 printflush null
+  214 set *tmp9 :chooseUnitType:type
+  215 jump *label21 always
+  216 label *label388
+  217 label *label389
+  218 label *label390
+  219 label *label391
+  220 label *label392
+  221 set :chooseUnitType:type @poly
+  222 label *label395
+  223 jump *label413 equal :chooseUnitType:type UNIT_TYPE
+  224 set :areUnitsAvailable.1:free 0
+  225 set :areUnitsAvailable.1:occupied 0
+  226 set :areUnitsAvailable.1:needed 0
+  227 ubind :chooseUnitType:type
+  228 set :areUnitsAvailable.1:firstUnit @unit
+  229 jump *label404 equal :areUnitsAvailable.1:firstUnit null
+  230 set :needsFourUnits.1:unit @unit
+  231 op sub *tmp46 .DOME_X .CORE_X
+  232 op sub *tmp47 .DOME_Y .CORE_Y
+  233 op len *tmp48 *tmp46 *tmp47
+  234 op mul *tmp49 2 *tmp48
+  235 sensor *tmp50 :needsFourUnits.1:unit @speed
+  236 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  237 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
+  238 label *label396
+  239 select *tmp53 notEqual *tmp45 false 4 2
+  240 set :areUnitsAvailable.1:needed *tmp53
+  241 label *label397
+  242 sensor *tmp54 @unit @controlled
+  243 op equal *tmp55 *tmp54 0
+  244 sensor *tmp56 @unit @controller
+  245 op equal *tmp57 *tmp56 @this
+  246 op or *tmp58 *tmp55 *tmp57
+  247 jump *label400 equal *tmp58 false
+  248 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
+  249 jump *label398 lessThan :areUnitsAvailable.1:free *tmp53
+  250 set *tmp42 true
+  251 jump *label410 always
+  252 label *label398
+  253 label *label399
+  254 jump *label401 always
+  255 label *label400
+  256 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
+  257 label *label401
+  258 ubind :chooseUnitType:type
+  259 label *label402
+  260 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
+  261 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
+  262 op equal *tmp65 *tmp64 0
+  263 op land *tmp66 *tmp63 *tmp65
+  264 jump *label397 notEqual *tmp66 false
+  265 label *label403
+  266 label *label404
+  267 label *label405
+  268 print :chooseUnitType:type
+  269 print ":"
+  270 print " occupied: "
+  271 print :areUnitsAvailable.1:occupied
+  272 print ","
+  273 print " free: "
+  274 print :areUnitsAvailable.1:free
+  275 jump *label406 lessThanEq :areUnitsAvailable.1:needed 0
+  276 print ", needed: "
+  277 print :areUnitsAvailable.1:needed
+  278 label *label406
+  279 label *label407
+  280 print "\n"
+  281 label *label408
+  282 label *label409
+  283 set *tmp42 false
+  284 label *label410
+  285 jump *label411 equal *tmp42 false
+  286 printflush null
+  287 set *tmp9 :chooseUnitType:type
+  288 jump *label21 always
+  289 label *label411
+  290 label *label412
+  291 label *label413
+  292 label *label414
+  293 label *label415
+  294 set :chooseUnitType:type @mega
+  295 label *label418
+  296 jump *label436 equal :chooseUnitType:type UNIT_TYPE
+  297 set :areUnitsAvailable.1:free 0
+  298 set :areUnitsAvailable.1:occupied 0
+  299 set :areUnitsAvailable.1:needed 0
+  300 ubind :chooseUnitType:type
+  301 set :areUnitsAvailable.1:firstUnit @unit
+  302 jump *label427 equal :areUnitsAvailable.1:firstUnit null
+  303 set :needsFourUnits.1:unit @unit
+  304 op sub *tmp46 .DOME_X .CORE_X
+  305 op sub *tmp47 .DOME_Y .CORE_Y
+  306 op len *tmp48 *tmp46 *tmp47
+  307 op mul *tmp49 2 *tmp48
+  308 sensor *tmp50 :needsFourUnits.1:unit @speed
+  309 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  310 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
+  311 label *label419
+  312 select *tmp53 notEqual *tmp45 false 4 2
+  313 set :areUnitsAvailable.1:needed *tmp53
+  314 label *label420
+  315 sensor *tmp54 @unit @controlled
+  316 op equal *tmp55 *tmp54 0
+  317 sensor *tmp56 @unit @controller
+  318 op equal *tmp57 *tmp56 @this
+  319 op or *tmp58 *tmp55 *tmp57
+  320 jump *label423 equal *tmp58 false
+  321 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
+  322 jump *label421 lessThan :areUnitsAvailable.1:free *tmp53
+  323 set *tmp42 true
+  324 jump *label433 always
+  325 label *label421
+  326 label *label422
+  327 jump *label424 always
+  328 label *label423
+  329 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
+  330 label *label424
+  331 ubind :chooseUnitType:type
+  332 label *label425
+  333 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
+  334 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
+  335 op equal *tmp65 *tmp64 0
+  336 op land *tmp66 *tmp63 *tmp65
+  337 jump *label420 notEqual *tmp66 false
+  338 label *label426
+  339 label *label427
+  340 label *label428
+  341 print :chooseUnitType:type
+  342 print ":"
+  343 print " occupied: "
+  344 print :areUnitsAvailable.1:occupied
+  345 print ","
+  346 print " free: "
+  347 print :areUnitsAvailable.1:free
+  348 jump *label429 lessThanEq :areUnitsAvailable.1:needed 0
+  349 print ", needed: "
+  350 print :areUnitsAvailable.1:needed
+  351 label *label429
+  352 label *label430
+  353 print "\n"
+  354 label *label431
+  355 label *label432
+  356 set *tmp42 false
+  357 label *label433
+  358 jump *label434 equal *tmp42 false
+  359 printflush null
+  360 set *tmp9 :chooseUnitType:type
+  361 jump *label21 always
+  362 label *label434
+  363 label *label435
+  364 label *label436
+  365 label *label437
+  366 label *label438
+  367 set :chooseUnitType:type @mono
+  368 label *label441
+  369 jump *label459 equal :chooseUnitType:type UNIT_TYPE
+  370 set :areUnitsAvailable.1:free 0
+  371 set :areUnitsAvailable.1:occupied 0
+  372 set :areUnitsAvailable.1:needed 0
+  373 ubind :chooseUnitType:type
+  374 set :areUnitsAvailable.1:firstUnit @unit
+  375 jump *label450 equal :areUnitsAvailable.1:firstUnit null
+  376 set :needsFourUnits.1:unit @unit
+  377 op sub *tmp46 .DOME_X .CORE_X
+  378 op sub *tmp47 .DOME_Y .CORE_Y
+  379 op len *tmp48 *tmp46 *tmp47
+  380 op mul *tmp49 2 *tmp48
+  381 sensor *tmp50 :needsFourUnits.1:unit @speed
+  382 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
+  383 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
+  384 label *label442
+  385 select *tmp53 notEqual *tmp45 false 4 2
+  386 set :areUnitsAvailable.1:needed *tmp53
+  387 label *label443
+  388 sensor *tmp54 @unit @controlled
+  389 op equal *tmp55 *tmp54 0
+  390 sensor *tmp56 @unit @controller
+  391 op equal *tmp57 *tmp56 @this
+  392 op or *tmp58 *tmp55 *tmp57
+  393 jump *label446 equal *tmp58 false
+  394 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
+  395 jump *label444 lessThan :areUnitsAvailable.1:free *tmp53
+  396 set *tmp42 true
+  397 jump *label456 always
+  398 label *label444
+  399 label *label445
+  400 jump *label447 always
+  401 label *label446
+  402 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
+  403 label *label447
+  404 ubind :chooseUnitType:type
+  405 label *label448
+  406 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
+  407 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
+  408 op equal *tmp65 *tmp64 0
+  409 op land *tmp66 *tmp63 *tmp65
+  410 jump *label443 notEqual *tmp66 false
+  411 label *label449
+  412 label *label450
+  413 label *label451
+  414 print :chooseUnitType:type
+  415 print ":"
+  416 print " occupied: "
+  417 print :areUnitsAvailable.1:occupied
+  418 print ","
+  419 print " free: "
+  420 print :areUnitsAvailable.1:free
+  421 jump *label452 lessThanEq :areUnitsAvailable.1:needed 0
+  422 print ", needed: "
+  423 print :areUnitsAvailable.1:needed
+  424 label *label452
+  425 label *label453
+  426 print "\n"
+  427 label *label454
+  428 label *label455
+  429 set *tmp42 false
+  430 label *label456
+  431 jump *label457 equal *tmp42 false
+  432 printflush null
+  433 set *tmp9 :chooseUnitType:type
+  434 jump *label21 always
+  435 label *label457
+  436 label *label458
+  437 label *label459
+  438 label *label460
+  439 label *label461
+  440 label *label46
   441 printflush message1
   442 label *label23
   443 jump *label22 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   147 label *label43
   148 set :chooseUnitType:type @flare
   149 label *label372
-    * jump *label390 equal :chooseUnitType:type UNIT_TYPE
+  150 jump *label390 equal @flare UNIT_TYPE
   151 set :areUnitsAvailable.1:free 0
   152 set :areUnitsAvailable.1:occupied 0
   153 set :areUnitsAvailable.1:needed 0
-    * ubind :chooseUnitType:type
+  154 ubind @flare
   155 set :areUnitsAvailable.1:firstUnit @unit
   156 jump *label381 equal :areUnitsAvailable.1:firstUnit null
   157 set :needsFourUnits.1:unit @unit
 
   182 label *label377
   183 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   184 label *label378
-    * ubind :chooseUnitType:type
+  185 ubind @flare
   186 label *label379
   187 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   188 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
 
   192 label *label380
   193 label *label381
   194 label *label382
-    * print :chooseUnitType:type
+  195 print @flare
   196 print ":"
   197 print " occupied: "
   198 print :areUnitsAvailable.1:occupied
 
   211 label *label387
   212 jump *label388 equal *tmp42 false
   213 printflush null
-    * set *tmp9 :chooseUnitType:type
+  214 set *tmp9 @flare
   215 jump *label21 always
   216 label *label388
   217 label *label389
 
   220 label *label392
   221 set :chooseUnitType:type @poly
   222 label *label395
-    * jump *label413 equal :chooseUnitType:type UNIT_TYPE
+  223 jump *label413 equal @poly UNIT_TYPE
   224 set :areUnitsAvailable.1:free 0
   225 set :areUnitsAvailable.1:occupied 0
   226 set :areUnitsAvailable.1:needed 0
-    * ubind :chooseUnitType:type
+  227 ubind @poly
   228 set :areUnitsAvailable.1:firstUnit @unit
   229 jump *label404 equal :areUnitsAvailable.1:firstUnit null
   230 set :needsFourUnits.1:unit @unit
 
   255 label *label400
   256 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   257 label *label401
-    * ubind :chooseUnitType:type
+  258 ubind @poly
   259 label *label402
   260 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   261 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
 
   265 label *label403
   266 label *label404
   267 label *label405
-    * print :chooseUnitType:type
+  268 print @poly
   269 print ":"
   270 print " occupied: "
   271 print :areUnitsAvailable.1:occupied
 
   284 label *label410
   285 jump *label411 equal *tmp42 false
   286 printflush null
-    * set *tmp9 :chooseUnitType:type
+  287 set *tmp9 @poly
   288 jump *label21 always
   289 label *label411
   290 label *label412
 
   293 label *label415
   294 set :chooseUnitType:type @mega
   295 label *label418
-    * jump *label436 equal :chooseUnitType:type UNIT_TYPE
+  296 jump *label436 equal @mega UNIT_TYPE
   297 set :areUnitsAvailable.1:free 0
   298 set :areUnitsAvailable.1:occupied 0
   299 set :areUnitsAvailable.1:needed 0
-    * ubind :chooseUnitType:type
+  300 ubind @mega
   301 set :areUnitsAvailable.1:firstUnit @unit
   302 jump *label427 equal :areUnitsAvailable.1:firstUnit null
   303 set :needsFourUnits.1:unit @unit
 
   328 label *label423
   329 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   330 label *label424
-    * ubind :chooseUnitType:type
+  331 ubind @mega
   332 label *label425
   333 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   334 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
 
   338 label *label426
   339 label *label427
   340 label *label428
-    * print :chooseUnitType:type
+  341 print @mega
   342 print ":"
   343 print " occupied: "
   344 print :areUnitsAvailable.1:occupied
 
   357 label *label433
   358 jump *label434 equal *tmp42 false
   359 printflush null
-    * set *tmp9 :chooseUnitType:type
+  360 set *tmp9 @mega
   361 jump *label21 always
   362 label *label434
   363 label *label435
 
   366 label *label438
   367 set :chooseUnitType:type @mono
   368 label *label441
-    * jump *label459 equal :chooseUnitType:type UNIT_TYPE
+  369 jump *label459 equal @mono UNIT_TYPE
   370 set :areUnitsAvailable.1:free 0
   371 set :areUnitsAvailable.1:occupied 0
   372 set :areUnitsAvailable.1:needed 0
-    * ubind :chooseUnitType:type
+  373 ubind @mono
   374 set :areUnitsAvailable.1:firstUnit @unit
   375 jump *label450 equal :areUnitsAvailable.1:firstUnit null
   376 set :needsFourUnits.1:unit @unit
 
   401 label *label446
   402 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   403 label *label447
-    * ubind :chooseUnitType:type
+  404 ubind @mono
   405 label *label448
   406 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   407 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
 
   411 label *label449
   412 label *label450
   413 label *label451
-    * print :chooseUnitType:type
+  414 print @mono
   415 print ":"
   416 print " occupied: "
   417 print :areUnitsAvailable.1:occupied
 
   430 label *label456
   431 jump *label457 equal *tmp42 false
   432 printflush null
-    * set *tmp9 :chooseUnitType:type
+  433 set *tmp9 @mono
   434 jump *label21 always
   435 label *label457
   436 label *label458

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
   145 jump *label21 always
   146 label *label42
   147 label *label43
-    * set :chooseUnitType:type @flare
   148 label *label372
   149 jump *label390 equal @flare UNIT_TYPE
   150 set :areUnitsAvailable.1:free 0
 
   217 label *label390
   218 label *label391
   219 label *label392
-    * set :chooseUnitType:type @poly
   220 label *label395
   221 jump *label413 equal @poly UNIT_TYPE
   222 set :areUnitsAvailable.1:free 0
 
   289 label *label413
   290 label *label414
   291 label *label415
-    * set :chooseUnitType:type @mega
   292 label *label418
   293 jump *label436 equal @mega UNIT_TYPE
   294 set :areUnitsAvailable.1:free 0
 
   361 label *label436
   362 label *label437
   363 label *label438
-    * set :chooseUnitType:type @mono
   364 label *label441
   365 jump *label459 equal @mono UNIT_TYPE
   366 set :areUnitsAvailable.1:free 0

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     2 set UNIT_TYPE @flare
     3 remark "Do not modify anything below this line."
     4 set .DOME dome1
-    * label *label2
     5 jump *label4 notEqual dome1 null
     6 label *label337
     7 print "[gold]Waiting for an overdrive dome to be connected..."
     8 printflush message1
     9 set .DOME dome1
-    * label *label3
    10 jump *label337 equal dome1 null
    11 label *label4
    12 print "[gold]Locating core..."
    13 printflush message1
    14 set .CORE null
    15 label *label5
-    * label *label341
    16 set :locateCore:type @flare
    17 setaddr :locateCore*retaddr *label342 (h:*label342)
    18 call *label0 *invalid :locateCore*retval (m:*label342) (h:*label342)
 
    20 jump *label343 equal :locateCore*retval false
    21 jump *label1 always
    22 label *label343
-    * label *label344
-    * label *label345
-    * label *label348
    23 set :locateCore:type @poly
    24 setaddr :locateCore*retaddr *label349 (h:*label349)
    25 call *label0 *invalid :locateCore*retval (m:*label349) (h:*label349)
 
    27 jump *label350 equal :locateCore*retval false
    28 jump *label1 always
    29 label *label350
-    * label *label351
-    * label *label352
-    * label *label355
    30 set :locateCore:type @mega
    31 setaddr :locateCore*retaddr *label356 (h:*label356)
    32 call *label0 *invalid :locateCore*retval (m:*label356) (h:*label356)
 
    34 jump *label357 equal :locateCore*retval false
    35 jump *label1 always
    36 label *label357
-    * label *label358
-    * label *label359
-    * label *label362
    37 set :locateCore:type @mono
    38 setaddr :locateCore*retaddr *label363 (h:*label363)
    39 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
 
    41 jump *label364 equal :locateCore*retval false
    42 jump *label1 always
    43 label *label364
-    * label *label365
-    * label *label366
-    * label *label10
-    * label *label6
    44 jump *label5 always
-    * label *label7
    45 label *label1
    46 sensor .CORE_X .CORE @x
    47 sensor .CORE_Y .CORE @y
    48 sensor .DOME_X .DOME @x
    49 sensor .DOME_Y .DOME @y
-    * label *label18
    50 sensor *tmp7 switch1 @enabled
    51 jump *label20 notEqual *tmp7 false
    52 label *label370
    53 print "[coral]Activate switch to begin supplying overdrive dome..."
    54 print "\n"
    55 printflush message1
-    * label *label19
    56 sensor *tmp7 switch1 @enabled
    57 jump *label370 equal *tmp7 false
    58 label *label20
 
    74 sensor *tmp18 :needsFourUnits:unit @speed
    75 op div :needsFourUnits:travel_time *tmp17 *tmp18
    76 op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
-    * label *label338
    77 select *tmp21 notEqual *tmp13 false 4 2
    78 set :areUnitsAvailable:needed *tmp21
    79 label *label31
 
    88 set *tmp10 true
    89 jump *label25 always
    90 label *label36
-    * label *label37
    91 jump *label35 always
    92 label *label34
    93 op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
    94 label *label35
    95 ubind UNIT_TYPE
-    * label *label32
    96 op notEqual *tmp31 @unit :areUnitsAvailable:firstUnit
    97 sensor *tmp32 :areUnitsAvailable:firstUnit @dead
    98 op equal *tmp33 *tmp32 0
    99 op land *tmp34 *tmp31 *tmp33
   100 jump *label31 notEqual *tmp34 false
-    * label *label33
   101 label *label26
-    * label *label27
   102 print UNIT_TYPE
   103 print ":"
   104 print " occupied: "
 
   110 print ", needed: "
   111 print :areUnitsAvailable:needed
   112 label *label40
-    * label *label41
   113 print "\n"
-    * label *label38
-    * label *label39
   114 set *tmp10 false
   115 label *label25
   116 jump *label42 equal *tmp10 false
   117 set *tmp9 UNIT_TYPE
   118 jump *label21 always
   119 label *label42
-    * label *label43
-    * label *label372
   120 jump *label390 equal @flare UNIT_TYPE
   121 set :areUnitsAvailable.1:free 0
   122 set :areUnitsAvailable.1:occupied 0
 
   132 sensor *tmp50 :needsFourUnits.1:unit @speed
   133 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   134 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * label *label373
   135 select *tmp53 notEqual *tmp45 false 4 2
   136 set :areUnitsAvailable.1:needed *tmp53
   137 label *label374
 
   146 set *tmp42 true
   147 jump *label387 always
   148 label *label375
-    * label *label376
   149 jump *label378 always
   150 label *label377
   151 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   152 label *label378
   153 ubind @flare
-    * label *label379
   154 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   155 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
   156 op equal *tmp65 *tmp64 0
   157 op land *tmp66 *tmp63 *tmp65
   158 jump *label374 notEqual *tmp66 false
-    * label *label380
   159 label *label381
-    * label *label382
   160 print @flare
   161 print ":"
   162 print " occupied: "
 
   168 print ", needed: "
   169 print :areUnitsAvailable.1:needed
   170 label *label383
-    * label *label384
   171 print "\n"
-    * label *label385
-    * label *label386
   172 set *tmp42 false
   173 label *label387
   174 jump *label388 equal *tmp42 false
 
   176 set *tmp9 @flare
   177 jump *label21 always
   178 label *label388
-    * label *label389
   179 label *label390
-    * label *label391
-    * label *label392
-    * label *label395
   180 jump *label413 equal @poly UNIT_TYPE
   181 set :areUnitsAvailable.1:free 0
   182 set :areUnitsAvailable.1:occupied 0
 
   192 sensor *tmp50 :needsFourUnits.1:unit @speed
   193 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   194 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * label *label396
   195 select *tmp53 notEqual *tmp45 false 4 2
   196 set :areUnitsAvailable.1:needed *tmp53
   197 label *label397
 
   206 set *tmp42 true
   207 jump *label410 always
   208 label *label398
-    * label *label399
   209 jump *label401 always
   210 label *label400
   211 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   212 label *label401
   213 ubind @poly
-    * label *label402
   214 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   215 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
   216 op equal *tmp65 *tmp64 0
   217 op land *tmp66 *tmp63 *tmp65
   218 jump *label397 notEqual *tmp66 false
-    * label *label403
   219 label *label404
-    * label *label405
   220 print @poly
   221 print ":"
   222 print " occupied: "
 
   228 print ", needed: "
   229 print :areUnitsAvailable.1:needed
   230 label *label406
-    * label *label407
   231 print "\n"
-    * label *label408
-    * label *label409
   232 set *tmp42 false
   233 label *label410
   234 jump *label411 equal *tmp42 false
 
   236 set *tmp9 @poly
   237 jump *label21 always
   238 label *label411
-    * label *label412
   239 label *label413
-    * label *label414
-    * label *label415
-    * label *label418
   240 jump *label436 equal @mega UNIT_TYPE
   241 set :areUnitsAvailable.1:free 0
   242 set :areUnitsAvailable.1:occupied 0
 
   252 sensor *tmp50 :needsFourUnits.1:unit @speed
   253 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   254 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * label *label419
   255 select *tmp53 notEqual *tmp45 false 4 2
   256 set :areUnitsAvailable.1:needed *tmp53
   257 label *label420
 
   266 set *tmp42 true
   267 jump *label433 always
   268 label *label421
-    * label *label422
   269 jump *label424 always
   270 label *label423
   271 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   272 label *label424
   273 ubind @mega
-    * label *label425
   274 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   275 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
   276 op equal *tmp65 *tmp64 0
   277 op land *tmp66 *tmp63 *tmp65
   278 jump *label420 notEqual *tmp66 false
-    * label *label426
   279 label *label427
-    * label *label428
   280 print @mega
   281 print ":"
   282 print " occupied: "
 
   288 print ", needed: "
   289 print :areUnitsAvailable.1:needed
   290 label *label429
-    * label *label430
   291 print "\n"
-    * label *label431
-    * label *label432
   292 set *tmp42 false
   293 label *label433
   294 jump *label434 equal *tmp42 false
 
   296 set *tmp9 @mega
   297 jump *label21 always
   298 label *label434
-    * label *label435
   299 label *label436
-    * label *label437
-    * label *label438
-    * label *label441
   300 jump *label459 equal @mono UNIT_TYPE
   301 set :areUnitsAvailable.1:free 0
   302 set :areUnitsAvailable.1:occupied 0
 
   312 sensor *tmp50 :needsFourUnits.1:unit @speed
   313 op div :needsFourUnits.1:travel_time *tmp49 *tmp50
   314 op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
-    * label *label442
   315 select *tmp53 notEqual *tmp45 false 4 2
   316 set :areUnitsAvailable.1:needed *tmp53
   317 label *label443
 
   326 set *tmp42 true
   327 jump *label456 always
   328 label *label444
-    * label *label445
   329 jump *label447 always
   330 label *label446
   331 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   332 label *label447
   333 ubind @mono
-    * label *label448
   334 op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
   335 sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
   336 op equal *tmp65 *tmp64 0
   337 op land *tmp66 *tmp63 *tmp65
   338 jump *label443 notEqual *tmp66 false
-    * label *label449
   339 label *label450
-    * label *label451
   340 print @mono
   341 print ":"
   342 print " occupied: "
 
   348 print ", needed: "
   349 print :areUnitsAvailable.1:needed
   350 label *label452
-    * label *label453
   351 print "\n"
-    * label *label454
-    * label *label455
   352 set *tmp42 false
   353 label *label456
   354 jump *label457 equal *tmp42 false
 
   356 set *tmp9 @mono
   357 jump *label21 always
   358 label *label457
-    * label *label458
   359 label *label459
-    * label *label460
-    * label *label461
-    * label *label46
   360 printflush message1
-    * label *label23
   361 jump *label22 always
-    * label *label24
   362 set *tmp9 null
   363 label *label21
   364 print "[gold]Binding units..."
 
   373 jump *label73 notEqual :rebindUnits:firstUnit null
   374 end
   375 label *label73
-    * label *label74
   376 label *label75
   377 sensor *tmp74 @unit @controller
   378 jump *label78 notEqual *tmp74 @this
 
   385 jump *label80 equal .UNIT_S2 null
   386 jump *label77 always
   387 label *label80
-    * label *label81
   388 label *label78
-    * label *label79
   389 ubind *tmp9
-    * label *label76
   390 op notEqual *tmp81 @unit :rebindUnits:firstUnit
   391 sensor *tmp82 :rebindUnits:firstUnit @dead
   392 op equal *tmp83 *tmp82 0
   393 op land *tmp84 *tmp81 *tmp83
   394 jump *label75 notEqual *tmp84 false
   395 label *label77
-    * label *label72
   396 jump *label84 equal .UNIT_S1 null
   397 ubind .UNIT_S1
   398 sensor *tmp89 @unit @dead
 
   403 jump *label86 equal *tmp93 false
   404 jump *label83 always
   405 label *label86
-    * label *label87
   406 label *label84
-    * label *label85
   407 ubind *tmp9
   408 set :rebindUnit:firstUnit @unit
   409 jump *label88 equal :rebindUnit:firstUnit null
 
   412 jump *label93 notEqual *tmp97 0
   413 jump *label83 always
   414 label *label93
-    * label *label94
   415 ubind *tmp9
-    * label *label91
   416 op notEqual *tmp100 @unit :rebindUnit:firstUnit
   417 sensor *tmp101 :rebindUnit:firstUnit @dead
   418 op equal *tmp102 *tmp101 0
   419 op land *tmp103 *tmp100 *tmp102
   420 jump *label90 notEqual *tmp103 false
-    * label *label92
   421 label *label88
-    * label *label89
   422 end
   423 label *label83
   424 ucontrol flag 1
   425 set *tmp85 @unit
-    * label *label82
   426 set .UNIT_S1 *tmp85
   427 jump *label97 equal .UNIT_P1 null
   428 ubind .UNIT_P1
 
   434 jump *label99 equal *tmp112 false
   435 jump *label96 always
   436 label *label99
-    * label *label100
   437 label *label97
-    * label *label98
   438 ubind *tmp9
   439 set :rebindUnit.1:firstUnit @unit
   440 jump *label101 equal :rebindUnit.1:firstUnit null
 
   443 jump *label106 notEqual *tmp116 0
   444 jump *label96 always
   445 label *label106
-    * label *label107
   446 ubind *tmp9
-    * label *label104
   447 op notEqual *tmp119 @unit :rebindUnit.1:firstUnit
   448 sensor *tmp120 :rebindUnit.1:firstUnit @dead
   449 op equal *tmp121 *tmp120 0
   450 op land *tmp122 *tmp119 *tmp121
   451 jump *label103 notEqual *tmp122 false
-    * label *label105
   452 label *label101
-    * label *label102
   453 end
   454 label *label96
   455 ucontrol flag 1
   456 set *tmp104 @unit
-    * label *label95
   457 set .UNIT_P1 *tmp104
   458 sensor *tmp123 *tmp85 @firstItem
   459 op equal *tmp124 *tmp123 @phase-fabric
 
   461 op equal *tmp126 *tmp125 @silicon
   462 op or *tmp127 *tmp124 *tmp126
   463 jump *label108 equal *tmp127 false
-    * label *label110
   464 set .UNIT_S1 *tmp104
   465 set .UNIT_P1 *tmp85
   466 label *label108
-    * label *label109
   467 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
   468 sensor .SPEED .UNIT_S1 @speed
   469 op div .SPEED_TENTHS .SPEED 10
 
   471 jump *label111 equal *tmp132 false
   472 stop
   473 label *label111
-    * label *label112
   474 op sub *tmp135 .DOME_X .CORE_X
   475 op sub *tmp136 .DOME_Y .CORE_Y
   476 op len *tmp137 *tmp135 *tmp136
 
   478 sensor *tmp139 .UNIT_S1 @speed
   479 op div :needsFourUnits.2:travel_time *tmp138 .SPEED
   480 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
-    * label *label113
   481 jump *label114 equal *tmp134 false
   482 jump *label118 equal .UNIT_S2 null
   483 ubind .UNIT_S2
 
   489 jump *label120 equal *tmp151 false
   490 jump *label117 always
   491 label *label120
-    * label *label121
   492 label *label118
-    * label *label119
   493 ubind *tmp9
   494 set :rebindUnit.2:firstUnit @unit
   495 jump *label122 equal :rebindUnit.2:firstUnit null
 
   498 jump *label127 notEqual *tmp155 0
   499 jump *label117 always
   500 label *label127
-    * label *label128
   501 ubind *tmp9
-    * label *label125
   502 op notEqual *tmp158 @unit :rebindUnit.2:firstUnit
   503 sensor *tmp159 :rebindUnit.2:firstUnit @dead
   504 op equal *tmp160 *tmp159 0
   505 op land *tmp161 *tmp158 *tmp160
   506 jump *label124 notEqual *tmp161 false
-    * label *label126
   507 label *label122
-    * label *label123
   508 end
   509 label *label117
   510 ucontrol flag 1
   511 set *tmp143 @unit
-    * label *label116
   512 set .UNIT_S2 *tmp143
   513 jump *label131 equal .UNIT_P2 null
   514 ubind .UNIT_P2
 
   520 jump *label133 equal *tmp170 false
   521 jump *label130 always
   522 label *label133
-    * label *label134
   523 label *label131
-    * label *label132
   524 ubind *tmp9
   525 set :rebindUnit.3:firstUnit @unit
   526 jump *label135 equal :rebindUnit.3:firstUnit null
 
   529 jump *label140 notEqual *tmp174 0
   530 jump *label130 always
   531 label *label140
-    * label *label141
   532 ubind *tmp9
-    * label *label138
   533 op notEqual *tmp177 @unit :rebindUnit.3:firstUnit
   534 sensor *tmp178 :rebindUnit.3:firstUnit @dead
   535 op equal *tmp179 *tmp178 0
   536 op land *tmp180 *tmp177 *tmp179
   537 jump *label137 notEqual *tmp180 false
-    * label *label139
   538 label *label135
-    * label *label136
   539 end
   540 label *label130
   541 ucontrol flag 1
   542 set *tmp162 @unit
-    * label *label129
   543 set .UNIT_P2 *tmp162
   544 sensor *tmp181 .UNIT_S1 @firstItem
   545 op equal *tmp182 *tmp181 @phase-fabric
 
   548 op land *tmp185 *tmp182 *tmp184
   549 jump *label142 equal *tmp185 false
   550 set :swap.1:t .UNIT_S1
-    * label *label144
   551 set .UNIT_S1 *tmp162
   552 set .UNIT_P2 :swap.1:t
   553 label *label142
-    * label *label143
   554 sensor *tmp187 *tmp143 @firstItem
   555 op equal *tmp188 *tmp187 @phase-fabric
   556 sensor *tmp189 .UNIT_P2 @firstItem
   557 op equal *tmp190 *tmp189 @silicon
   558 op or *tmp191 *tmp188 *tmp190
   559 jump *label145 equal *tmp191 false
-    * label *label147
   560 set .UNIT_S2 .UNIT_P2
   561 set .UNIT_P2 *tmp143
   562 label *label145
-    * label *label146
   563 set .GROUP1 "unit  1"
   564 set .GROUP2 "unit 2"
   565 jump *label115 always
 
   582 op lessThan *tmp201 *tmp199 *tmp200
   583 op or .SUPPLY_P_FIRST *tmp193 *tmp201
   584 op add :unitCheck @time 5000
-    * label *label148
   585 sensor *tmp204 switch1 @enabled
   586 jump *label150 equal *tmp204 false
   587 label *label371
 
   610 print "]"
   611 print "\n"
   612 label *label153
-    * label *label151
   613 jump *label156 equal .UNIT_S1 null
   614 ubind .UNIT_S1
   615 sensor *tmp211 @unit @dead
 
   620 jump *label158 equal *tmp215 false
   621 jump *label155 always
   622 label *label158
-    * label *label159
   623 label *label156
-    * label *label157
   624 ubind *tmp9
   625 set :rebindUnit.4:firstUnit @unit
   626 jump *label160 equal :rebindUnit.4:firstUnit null
 
   629 jump *label165 notEqual *tmp219 0
   630 jump *label155 always
   631 label *label165
-    * label *label166
   632 ubind *tmp9
-    * label *label163
   633 op notEqual *tmp222 @unit :rebindUnit.4:firstUnit
   634 sensor *tmp223 :rebindUnit.4:firstUnit @dead
   635 op equal *tmp224 *tmp223 0
   636 op land *tmp225 *tmp222 *tmp224
   637 jump *label162 notEqual *tmp225 false
-    * label *label164
   638 label *label160
-    * label *label161
   639 end
   640 label *label155
   641 sensor :processUnit:state @unit @flag
 
   660 jump *label173 equal *tmp237 false
   661 ucontrol itemDrop .CORE .UNIT_CAPACITY
   662 label *label173
-    * label *label174
   663 label *label172
   664 label *label170
   665 label *label167
-    * label *label168
   666 jump *label175 notEqual :processUnit:state 2
   667 ucontrol within .CORE_X .CORE_Y 8 *tmp241
   668 jump *label177 equal *tmp241 false
 
   688 op div :processUnit:distance *tmp251 10
   689 label *label178
   690 label *label175
-    * label *label176
   691 jump *label181 notEqual :processUnit:state 3
   692 ucontrol within .DOME_X .DOME_Y 8 *tmp255
   693 jump *label183 equal *tmp255 false
 
   704 ucontrol approach .CORE_X .CORE_Y 6
   705 set :processUnit:state 2
   706 label *label187
-    * label *label188
   707 jump *label184 always
   708 label *label183
   709 ucontrol approach .DOME_X .DOME_Y 6
 
   717 op div :processUnit:distance *tmp266 10
   718 label *label184
   719 label *label181
-    * label *label182
   720 ucontrol flag :processUnit:state
   721 sensor *tmp268 @unit @totalItems
   722 print "  "
 
   739 print .MSG
   740 label *label190
   741 set :processUnit:unit @unit
-    * label *label154
   742 set .UNIT_S1 :processUnit:unit
   743 jump *label191 equal *tmp134 false
   744 op equal *tmp273 .SUPPLY_S_FIRST false
 
   752 jump *label197 equal *tmp281 false
   753 jump *label194 always
   754 label *label197
-    * label *label198
   755 label *label195
-    * label *label196
   756 ubind *tmp9
   757 set :rebindUnit.5:firstUnit @unit
   758 jump *label199 equal :rebindUnit.5:firstUnit null
 
   761 jump *label204 notEqual *tmp285 0
   762 jump *label194 always
   763 label *label204
-    * label *label205
   764 ubind *tmp9
-    * label *label202
   765 op notEqual *tmp288 @unit :rebindUnit.5:firstUnit
   766 sensor *tmp289 :rebindUnit.5:firstUnit @dead
   767 op equal *tmp290 *tmp289 0
   768 op land *tmp291 *tmp288 *tmp290
   769 jump *label201 notEqual *tmp291 false
-    * label *label203
   770 label *label199
-    * label *label200
   771 end
   772 label *label194
   773 sensor :processUnit.1:state @unit @flag
 
   792 jump *label212 equal *tmp303 false
   793 ucontrol itemDrop .CORE .UNIT_CAPACITY
   794 label *label212
-    * label *label213
   795 label *label211
   796 label *label209
   797 label *label206
-    * label *label207
   798 jump *label214 notEqual :processUnit.1:state 2
   799 ucontrol within .CORE_X .CORE_Y 8 *tmp307
   800 jump *label216 equal *tmp307 false
 
   820 op div :processUnit.1:distance *tmp317 10
   821 label *label217
   822 label *label214
-    * label *label215
   823 jump *label220 notEqual :processUnit.1:state 3
   824 ucontrol within .DOME_X .DOME_Y 8 *tmp321
   825 jump *label222 equal *tmp321 false
 
   836 ucontrol approach .CORE_X .CORE_Y 6
   837 set :processUnit.1:state 2
   838 label *label226
-    * label *label227
   839 jump *label223 always
   840 label *label222
   841 ucontrol approach .DOME_X .DOME_Y 6
 
   849 op div :processUnit.1:distance *tmp332 10
   850 label *label223
   851 label *label220
-    * label *label221
   852 ucontrol flag :processUnit.1:state
   853 sensor *tmp334 @unit @totalItems
   854 print "  "
 
   871 print .MSG
   872 label *label229
   873 set :processUnit.1:unit @unit
-    * label *label193
   874 set .UNIT_S2 :processUnit.1:unit
   875 jump *label230 equal .SUPPLY_S_FIRST false
   876 sensor *tmp339 :processUnit:unit @totalItems
 
   881 op equal .SUPPLY_S_FIRST *tmp341 0
   882 label *label231
   883 label *label191
-    * label *label192
   884 print "\n[green]Phase fabric[] status:\n"
   885 sensor :printDomeStatus.1:level .DOME @phase-fabric
   886 jump *label233 lessThanEq :printDomeStatus.1:level 3
 
   897 print "]"
   898 print "\n"
   899 label *label234
-    * label *label232
   900 jump *label237 equal .UNIT_P1 null
   901 ubind .UNIT_P1
   902 sensor *tmp349 @unit @dead
 
   907 jump *label239 equal *tmp353 false
   908 jump *label236 always
   909 label *label239
-    * label *label240
   910 label *label237
-    * label *label238
   911 ubind *tmp9
   912 set :rebindUnit.6:firstUnit @unit
   913 jump *label241 equal :rebindUnit.6:firstUnit null
 
   916 jump *label246 notEqual *tmp357 0
   917 jump *label236 always
   918 label *label246
-    * label *label247
   919 ubind *tmp9
-    * label *label244
   920 op notEqual *tmp360 @unit :rebindUnit.6:firstUnit
   921 sensor *tmp361 :rebindUnit.6:firstUnit @dead
   922 op equal *tmp362 *tmp361 0
   923 op land *tmp363 *tmp360 *tmp362
   924 jump *label243 notEqual *tmp363 false
-    * label *label245
   925 label *label241
-    * label *label242
   926 end
   927 label *label236
   928 sensor :processUnit.2:state @unit @flag
 
   947 jump *label254 equal *tmp375 false
   948 ucontrol itemDrop .CORE .UNIT_CAPACITY
   949 label *label254
-    * label *label255
   950 label *label253
   951 label *label251
   952 label *label248
-    * label *label249
   953 jump *label256 notEqual :processUnit.2:state 2
   954 ucontrol within .CORE_X .CORE_Y 8 *tmp379
   955 jump *label258 equal *tmp379 false
 
   975 op div :processUnit.2:distance *tmp389 10
   976 label *label259
   977 label *label256
-    * label *label257
   978 jump *label262 notEqual :processUnit.2:state 3
   979 ucontrol within .DOME_X .DOME_Y 8 *tmp393
   980 jump *label264 equal *tmp393 false
 
   991 ucontrol approach .CORE_X .CORE_Y 6
   992 set :processUnit.2:state 2
   993 label *label268
-    * label *label269
   994 jump *label265 always
   995 label *label264
   996 ucontrol approach .DOME_X .DOME_Y 6
 
  1004 op div :processUnit.2:distance *tmp404 10
  1005 label *label265
  1006 label *label262
-    * label *label263
  1007 ucontrol flag :processUnit.2:state
  1008 sensor *tmp406 @unit @totalItems
  1009 print "  "
 
  1026 print .MSG
  1027 label *label271
  1028 set :processUnit.2:unit @unit
-    * label *label235
  1029 set .UNIT_P1 :processUnit.2:unit
  1030 jump *label272 equal *tmp134 false
  1031 op equal *tmp411 .SUPPLY_P_FIRST false
 
  1039 jump *label278 equal *tmp419 false
  1040 jump *label275 always
  1041 label *label278
-    * label *label279
  1042 label *label276
-    * label *label277
  1043 ubind *tmp9
  1044 set :rebindUnit.7:firstUnit @unit
  1045 jump *label280 equal :rebindUnit.7:firstUnit null
 
  1048 jump *label285 notEqual *tmp423 0
  1049 jump *label275 always
  1050 label *label285
-    * label *label286
  1051 ubind *tmp9
-    * label *label283
  1052 op notEqual *tmp426 @unit :rebindUnit.7:firstUnit
  1053 sensor *tmp427 :rebindUnit.7:firstUnit @dead
  1054 op equal *tmp428 *tmp427 0
  1055 op land *tmp429 *tmp426 *tmp428
  1056 jump *label282 notEqual *tmp429 false
-    * label *label284
  1057 label *label280
-    * label *label281
  1058 end
  1059 label *label275
  1060 sensor :processUnit.3:state @unit @flag
 
  1079 jump *label293 equal *tmp441 false
  1080 ucontrol itemDrop .CORE .UNIT_CAPACITY
  1081 label *label293
-    * label *label294
  1082 label *label292
  1083 label *label290
  1084 label *label287
-    * label *label288
  1085 jump *label295 notEqual :processUnit.3:state 2
  1086 ucontrol within .CORE_X .CORE_Y 8 *tmp445
  1087 jump *label297 equal *tmp445 false
 
  1107 op div :processUnit.3:distance *tmp455 10
  1108 label *label298
  1109 label *label295
-    * label *label296
  1110 jump *label301 notEqual :processUnit.3:state 3
  1111 ucontrol within .DOME_X .DOME_Y 8 *tmp459
  1112 jump *label303 equal *tmp459 false
 
  1123 ucontrol approach .CORE_X .CORE_Y 6
  1124 set :processUnit.3:state 2
  1125 label *label307
-    * label *label308
  1126 jump *label304 always
  1127 label *label303
  1128 ucontrol approach .DOME_X .DOME_Y 6
 
  1136 op div :processUnit.3:distance *tmp470 10
  1137 label *label304
  1138 label *label301
-    * label *label302
  1139 ucontrol flag :processUnit.3:state
  1140 sensor *tmp472 @unit @totalItems
  1141 print "  "
 
  1158 print .MSG
  1159 label *label310
  1160 set :processUnit.3:unit @unit
-    * label *label274
  1161 set .UNIT_P2 :processUnit.3:unit
  1162 jump *label311 equal .SUPPLY_P_FIRST false
  1163 sensor *tmp477 :processUnit.2:unit @totalItems
 
  1168 op equal .SUPPLY_P_FIRST *tmp479 0
  1169 label *label312
  1170 label *label272
-    * label *label273
  1171 op sub *tmp481 @time :start
  1172 op floor *tmp482 *tmp481
  1173 print "\n"
 
  1189 sensor *tmp495 :needsFourUnits.3:unit @speed
  1190 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
  1191 op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
-    * label *label340
  1192 select *tmp498 notEqual *tmp490 false 4 2
  1193 label *label321
  1194 sensor *tmp499 @unit @controlled
 
  1202 set *tmp487 true
  1203 jump *label315 always
  1204 label *label326
-    * label *label327
  1205 jump *label325 always
  1206 label *label324
  1207 op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
  1208 label *label325
  1209 ubind UNIT_TYPE
-    * label *label322
  1210 op notEqual *tmp508 @unit :areUnitsAvailable.2:firstUnit
  1211 sensor *tmp509 :areUnitsAvailable.2:firstUnit @dead
  1212 op equal *tmp510 *tmp509 0
  1213 op land *tmp511 *tmp508 *tmp510
  1214 jump *label321 notEqual *tmp511 false
-    * label *label323
  1215 label *label316
-    * label *label317
  1216 jump *label328 always
  1217 print UNIT_TYPE
  1218 print ":"
 
  1225 print ", needed: "
  1226 print :areUnitsAvailable.2:needed
  1227 label *label330
-    * label *label331
  1228 print "\n"
  1229 label *label328
-    * label *label329
  1230 set *tmp487 false
  1231 label *label315
  1232 jump *label332 equal *tmp487 false
  1233 end
  1234 label *label332
-    * label *label333
  1235 op add :unitCheck @time 5000
  1236 label *label313
-    * label *label314
-    * label *label149
  1237 sensor *tmp204 switch1 @enabled
  1238 jump *label371 notEqual *tmp204 false
  1239 label *label150
 
  1248 jump *label335 equal *tmp521 false
  1249 ulocate building core false @copper *tmp524 *tmp525 *tmp526 .CORE
  1250 label *label335
-    * label *label336
  1251 set :locateCore*retval .CORE
-    * label *label334
  1252 return :locateCore*retaddr
  1253 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-21 instructions):
 
    17 setaddr :locateCore*retaddr *label342 (h:*label342)
    18 call *label0 *invalid :locateCore*retval (m:*label342) (h:*label342)
    19 label *label342
-    * jump *label343 equal :locateCore*retval false
-    * jump *label1 always
+   20 jump *label1 notEqual :locateCore*retval false
    21 label *label343
    22 set :locateCore:type @poly
    23 setaddr :locateCore*retaddr *label349 (h:*label349)
    24 call *label0 *invalid :locateCore*retval (m:*label349) (h:*label349)
    25 label *label349
-    * jump *label350 equal :locateCore*retval false
-    * jump *label1 always
+   26 jump *label1 notEqual :locateCore*retval false
    27 label *label350
    28 set :locateCore:type @mega
    29 setaddr :locateCore*retaddr *label356 (h:*label356)
    30 call *label0 *invalid :locateCore*retval (m:*label356) (h:*label356)
    31 label *label356
-    * jump *label357 equal :locateCore*retval false
-    * jump *label1 always
+   32 jump *label1 notEqual :locateCore*retval false
    33 label *label357
    34 set :locateCore:type @mono
    35 setaddr :locateCore*retaddr *label363 (h:*label363)
    36 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
    37 label *label363
-    * jump *label364 equal :locateCore*retval false
-    * jump *label1 always
+   38 jump *label1 notEqual :locateCore*retval false
    39 label *label364
    40 jump *label5 always
    41 label *label1
 
   378 set .UNIT_P2 .UNIT_S1
   379 set .UNIT_S1 .UNIT_P1
   380 set .UNIT_P1 @unit
-    * jump *label80 equal .UNIT_S2 null
-    * jump *label77 always
+  381 jump *label77 notEqual .UNIT_S2 null
   382 label *label80
   383 label *label78
   384 ubind *tmp9
 
   395 sensor *tmp91 @unit @controller
   396 op equal *tmp92 *tmp91 @this
   397 op land *tmp93 *tmp90 *tmp92
-    * jump *label86 equal *tmp93 false
-    * jump *label83 always
+  398 jump *label83 notEqual *tmp93 false
   399 label *label86
   400 label *label84
   401 ubind *tmp9
 
   403 jump *label88 equal :rebindUnit:firstUnit null
   404 label *label90
   405 sensor *tmp97 @unit @controlled
-    * jump *label93 notEqual *tmp97 0
-    * jump *label83 always
+  406 jump *label83 equal *tmp97 0
   407 label *label93
   408 ubind *tmp9
   409 op notEqual *tmp100 @unit :rebindUnit:firstUnit
 
   424 sensor *tmp110 @unit @controller
   425 op equal *tmp111 *tmp110 @this
   426 op land *tmp112 *tmp109 *tmp111
-    * jump *label99 equal *tmp112 false
-    * jump *label96 always
+  427 jump *label96 notEqual *tmp112 false
   428 label *label99
   429 label *label97
   430 ubind *tmp9
 
   432 jump *label101 equal :rebindUnit.1:firstUnit null
   433 label *label103
   434 sensor *tmp116 @unit @controlled
-    * jump *label106 notEqual *tmp116 0
-    * jump *label96 always
+  435 jump *label96 equal *tmp116 0
   436 label *label106
   437 ubind *tmp9
   438 op notEqual *tmp119 @unit :rebindUnit.1:firstUnit
 
   477 sensor *tmp149 @unit @controller
   478 op equal *tmp150 *tmp149 @this
   479 op land *tmp151 *tmp148 *tmp150
-    * jump *label120 equal *tmp151 false
-    * jump *label117 always
+  480 jump *label117 notEqual *tmp151 false
   481 label *label120
   482 label *label118
   483 ubind *tmp9
 
   485 jump *label122 equal :rebindUnit.2:firstUnit null
   486 label *label124
   487 sensor *tmp155 @unit @controlled
-    * jump *label127 notEqual *tmp155 0
-    * jump *label117 always
+  488 jump *label117 equal *tmp155 0
   489 label *label127
   490 ubind *tmp9
   491 op notEqual *tmp158 @unit :rebindUnit.2:firstUnit
 
   506 sensor *tmp168 @unit @controller
   507 op equal *tmp169 *tmp168 @this
   508 op land *tmp170 *tmp167 *tmp169
-    * jump *label133 equal *tmp170 false
-    * jump *label130 always
+  509 jump *label130 notEqual *tmp170 false
   510 label *label133
   511 label *label131
   512 ubind *tmp9
 
   514 jump *label135 equal :rebindUnit.3:firstUnit null
   515 label *label137
   516 sensor *tmp174 @unit @controlled
-    * jump *label140 notEqual *tmp174 0
-    * jump *label130 always
+  517 jump *label130 equal *tmp174 0
   518 label *label140
   519 ubind *tmp9
   520 op notEqual *tmp177 @unit :rebindUnit.3:firstUnit
 
   604 sensor *tmp213 @unit @controller
   605 op equal *tmp214 *tmp213 @this
   606 op land *tmp215 *tmp212 *tmp214
-    * jump *label158 equal *tmp215 false
-    * jump *label155 always
+  607 jump *label155 notEqual *tmp215 false
   608 label *label158
   609 label *label156
   610 ubind *tmp9
 
   612 jump *label160 equal :rebindUnit.4:firstUnit null
   613 label *label162
   614 sensor *tmp219 @unit @controlled
-    * jump *label165 notEqual *tmp219 0
-    * jump *label155 always
+  615 jump *label155 equal *tmp219 0
   616 label *label165
   617 ubind *tmp9
   618 op notEqual *tmp222 @unit :rebindUnit.4:firstUnit
 
   734 sensor *tmp279 @unit @controller
   735 op equal *tmp280 *tmp279 @this
   736 op land *tmp281 *tmp278 *tmp280
-    * jump *label197 equal *tmp281 false
-    * jump *label194 always
+  737 jump *label194 notEqual *tmp281 false
   738 label *label197
   739 label *label195
   740 ubind *tmp9
 
   742 jump *label199 equal :rebindUnit.5:firstUnit null
   743 label *label201
   744 sensor *tmp285 @unit @controlled
-    * jump *label204 notEqual *tmp285 0
-    * jump *label194 always
+  745 jump *label194 equal *tmp285 0
   746 label *label204
   747 ubind *tmp9
   748 op notEqual *tmp288 @unit :rebindUnit.5:firstUnit
 
   887 sensor *tmp351 @unit @controller
   888 op equal *tmp352 *tmp351 @this
   889 op land *tmp353 *tmp350 *tmp352
-    * jump *label239 equal *tmp353 false
-    * jump *label236 always
+  890 jump *label236 notEqual *tmp353 false
   891 label *label239
   892 label *label237
   893 ubind *tmp9
 
   895 jump *label241 equal :rebindUnit.6:firstUnit null
   896 label *label243
   897 sensor *tmp357 @unit @controlled
-    * jump *label246 notEqual *tmp357 0
-    * jump *label236 always
+  898 jump *label236 equal *tmp357 0
   899 label *label246
   900 ubind *tmp9
   901 op notEqual *tmp360 @unit :rebindUnit.6:firstUnit
 
  1017 sensor *tmp417 @unit @controller
  1018 op equal *tmp418 *tmp417 @this
  1019 op land *tmp419 *tmp416 *tmp418
-    * jump *label278 equal *tmp419 false
-    * jump *label275 always
+ 1020 jump *label275 notEqual *tmp419 false
  1021 label *label278
  1022 label *label276
  1023 ubind *tmp9
 
  1025 jump *label280 equal :rebindUnit.7:firstUnit null
  1026 label *label282
  1027 sensor *tmp423 @unit @controlled
-    * jump *label285 notEqual *tmp423 0
-    * jump *label275 always
+ 1028 jump *label275 equal *tmp423 0
  1029 label *label285
  1030 ubind *tmp9
  1031 op notEqual *tmp426 @unit :rebindUnit.7:firstUnit

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    18 call *label0 *invalid :locateCore*retval (m:*label342) (h:*label342)
    19 label *label342
    20 jump *label1 notEqual :locateCore*retval false
-    * label *label343
    21 set :locateCore:type @poly
    22 setaddr :locateCore*retaddr *label349 (h:*label349)
    23 call *label0 *invalid :locateCore*retval (m:*label349) (h:*label349)
    24 label *label349
    25 jump *label1 notEqual :locateCore*retval false
-    * label *label350
    26 set :locateCore:type @mega
    27 setaddr :locateCore*retaddr *label356 (h:*label356)
    28 call *label0 *invalid :locateCore*retval (m:*label356) (h:*label356)
    29 label *label356
    30 jump *label1 notEqual :locateCore*retval false
-    * label *label357
    31 set :locateCore:type @mono
    32 setaddr :locateCore*retaddr *label363 (h:*label363)
    33 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
    34 label *label363
    35 jump *label1 notEqual :locateCore*retval false
-    * label *label364
    36 jump *label5 always
    37 label *label1
    38 sensor .CORE_X .CORE @x
 
   375 set .UNIT_S1 .UNIT_P1
   376 set .UNIT_P1 @unit
   377 jump *label77 notEqual .UNIT_S2 null
-    * label *label80
   378 label *label78
   379 ubind *tmp9
   380 op notEqual *tmp81 @unit :rebindUnits:firstUnit
 
   391 op equal *tmp92 *tmp91 @this
   392 op land *tmp93 *tmp90 *tmp92
   393 jump *label83 notEqual *tmp93 false
-    * label *label86
   394 label *label84
   395 ubind *tmp9
   396 set :rebindUnit:firstUnit @unit
 
   398 label *label90
   399 sensor *tmp97 @unit @controlled
   400 jump *label83 equal *tmp97 0
-    * label *label93
   401 ubind *tmp9
   402 op notEqual *tmp100 @unit :rebindUnit:firstUnit
   403 sensor *tmp101 :rebindUnit:firstUnit @dead
 
   418 op equal *tmp111 *tmp110 @this
   419 op land *tmp112 *tmp109 *tmp111
   420 jump *label96 notEqual *tmp112 false
-    * label *label99
   421 label *label97
   422 ubind *tmp9
   423 set :rebindUnit.1:firstUnit @unit
 
   425 label *label103
   426 sensor *tmp116 @unit @controlled
   427 jump *label96 equal *tmp116 0
-    * label *label106
   428 ubind *tmp9
   429 op notEqual *tmp119 @unit :rebindUnit.1:firstUnit
   430 sensor *tmp120 :rebindUnit.1:firstUnit @dead
 
   469 op equal *tmp150 *tmp149 @this
   470 op land *tmp151 *tmp148 *tmp150
   471 jump *label117 notEqual *tmp151 false
-    * label *label120
   472 label *label118
   473 ubind *tmp9
   474 set :rebindUnit.2:firstUnit @unit
 
   476 label *label124
   477 sensor *tmp155 @unit @controlled
   478 jump *label117 equal *tmp155 0
-    * label *label127
   479 ubind *tmp9
   480 op notEqual *tmp158 @unit :rebindUnit.2:firstUnit
   481 sensor *tmp159 :rebindUnit.2:firstUnit @dead
 
   496 op equal *tmp169 *tmp168 @this
   497 op land *tmp170 *tmp167 *tmp169
   498 jump *label130 notEqual *tmp170 false
-    * label *label133
   499 label *label131
   500 ubind *tmp9
   501 set :rebindUnit.3:firstUnit @unit
 
   503 label *label137
   504 sensor *tmp174 @unit @controlled
   505 jump *label130 equal *tmp174 0
-    * label *label140
   506 ubind *tmp9
   507 op notEqual *tmp177 @unit :rebindUnit.3:firstUnit
   508 sensor *tmp178 :rebindUnit.3:firstUnit @dead
 
   592 op equal *tmp214 *tmp213 @this
   593 op land *tmp215 *tmp212 *tmp214
   594 jump *label155 notEqual *tmp215 false
-    * label *label158
   595 label *label156
   596 ubind *tmp9
   597 set :rebindUnit.4:firstUnit @unit
 
   599 label *label162
   600 sensor *tmp219 @unit @controlled
   601 jump *label155 equal *tmp219 0
-    * label *label165
   602 ubind *tmp9
   603 op notEqual *tmp222 @unit :rebindUnit.4:firstUnit
   604 sensor *tmp223 :rebindUnit.4:firstUnit @dead
 
   720 op equal *tmp280 *tmp279 @this
   721 op land *tmp281 *tmp278 *tmp280
   722 jump *label194 notEqual *tmp281 false
-    * label *label197
   723 label *label195
   724 ubind *tmp9
   725 set :rebindUnit.5:firstUnit @unit
 
   727 label *label201
   728 sensor *tmp285 @unit @controlled
   729 jump *label194 equal *tmp285 0
-    * label *label204
   730 ubind *tmp9
   731 op notEqual *tmp288 @unit :rebindUnit.5:firstUnit
   732 sensor *tmp289 :rebindUnit.5:firstUnit @dead
 
   871 op equal *tmp352 *tmp351 @this
   872 op land *tmp353 *tmp350 *tmp352
   873 jump *label236 notEqual *tmp353 false
-    * label *label239
   874 label *label237
   875 ubind *tmp9
   876 set :rebindUnit.6:firstUnit @unit
 
   878 label *label243
   879 sensor *tmp357 @unit @controlled
   880 jump *label236 equal *tmp357 0
-    * label *label246
   881 ubind *tmp9
   882 op notEqual *tmp360 @unit :rebindUnit.6:firstUnit
   883 sensor *tmp361 :rebindUnit.6:firstUnit @dead
 
   999 op equal *tmp418 *tmp417 @this
  1000 op land *tmp419 *tmp416 *tmp418
  1001 jump *label275 notEqual *tmp419 false
-    * label *label278
  1002 label *label276
  1003 ubind *tmp9
  1004 set :rebindUnit.7:firstUnit @unit
 
  1006 label *label282
  1007 sensor *tmp423 @unit @controlled
  1008 jump *label275 equal *tmp423 0
-    * label *label285
  1009 ubind *tmp9
  1010 op notEqual *tmp426 @unit :rebindUnit.7:firstUnit
  1011 sensor *tmp427 :rebindUnit.7:firstUnit @dead

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 remark "This is the preferred unit type to use for bringing in supplies."
     2 remark "If no units of this type exist, we'll try using other types."
     3 set UNIT_TYPE @flare
 
    77 op or *tmp26 *tmp23 *tmp25
    78 jump *label34 equal *tmp26 false
    79 op add :areUnitsAvailable:free :areUnitsAvailable:free 1
-    * jump *label36 lessThan :areUnitsAvailable:free *tmp21
+   80 jump *label35 lessThan :areUnitsAvailable:free *tmp21
    81 set *tmp10 true
    82 jump *label25 always
    83 label *label36
 
   135 op or *tmp58 *tmp55 *tmp57
   136 jump *label377 equal *tmp58 false
   137 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label375 lessThan :areUnitsAvailable.1:free *tmp53
+  138 jump *label378 lessThan :areUnitsAvailable.1:free *tmp53
   139 set *tmp42 true
   140 jump *label387 always
   141 label *label375
 
   195 op or *tmp58 *tmp55 *tmp57
   196 jump *label400 equal *tmp58 false
   197 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label398 lessThan :areUnitsAvailable.1:free *tmp53
+  198 jump *label401 lessThan :areUnitsAvailable.1:free *tmp53
   199 set *tmp42 true
   200 jump *label410 always
   201 label *label398
 
   255 op or *tmp58 *tmp55 *tmp57
   256 jump *label423 equal *tmp58 false
   257 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label421 lessThan :areUnitsAvailable.1:free *tmp53
+  258 jump *label424 lessThan :areUnitsAvailable.1:free *tmp53
   259 set *tmp42 true
   260 jump *label433 always
   261 label *label421
 
   315 op or *tmp58 *tmp55 *tmp57
   316 jump *label446 equal *tmp58 false
   317 op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
-    * jump *label444 lessThan :areUnitsAvailable.1:free *tmp53
+  318 jump *label447 lessThan :areUnitsAvailable.1:free *tmp53
   319 set *tmp42 true
   320 jump *label456 always
   321 label *label444
 
   395 label *label84
   396 ubind *tmp9
   397 set :rebindUnit:firstUnit @unit
-    * jump *label88 equal :rebindUnit:firstUnit null
+  398 jump __start__ equal :rebindUnit:firstUnit null
   399 label *label90
   400 sensor *tmp97 @unit @controlled
   401 jump *label83 equal *tmp97 0
 
   422 label *label97
   423 ubind *tmp9
   424 set :rebindUnit.1:firstUnit @unit
-    * jump *label101 equal :rebindUnit.1:firstUnit null
+  425 jump __start__ equal :rebindUnit.1:firstUnit null
   426 label *label103
   427 sensor *tmp116 @unit @controlled
   428 jump *label96 equal *tmp116 0
 
   473 label *label118
   474 ubind *tmp9
   475 set :rebindUnit.2:firstUnit @unit
-    * jump *label122 equal :rebindUnit.2:firstUnit null
+  476 jump __start__ equal :rebindUnit.2:firstUnit null
   477 label *label124
   478 sensor *tmp155 @unit @controlled
   479 jump *label117 equal *tmp155 0
 
   500 label *label131
   501 ubind *tmp9
   502 set :rebindUnit.3:firstUnit @unit
-    * jump *label135 equal :rebindUnit.3:firstUnit null
+  503 jump __start__ equal :rebindUnit.3:firstUnit null
   504 label *label137
   505 sensor *tmp174 @unit @controlled
   506 jump *label130 equal *tmp174 0
 
   558 op or .SUPPLY_P_FIRST *tmp193 *tmp201
   559 op add :unitCheck @time 5000
   560 sensor *tmp204 switch1 @enabled
-    * jump *label150 equal *tmp204 false
+  561 jump __start__ equal *tmp204 false
   562 label *label371
   563 set :start @time
   564 print " === [gold]Supplying Overdrive Dome[] === "
 
   596 label *label156
   597 ubind *tmp9
   598 set :rebindUnit.4:firstUnit @unit
-    * jump *label160 equal :rebindUnit.4:firstUnit null
+  599 jump __start__ equal :rebindUnit.4:firstUnit null
   600 label *label162
   601 sensor *tmp219 @unit @controlled
   602 jump *label155 equal *tmp219 0
 
   642 jump *label179 lessThan *tmp243 .UNIT_CAPACITY
   643 ucontrol approach .DOME_X .DOME_Y 6
   644 set :processUnit:state 3
-    * jump *label180 always
+  645 jump *label178 always
   646 label *label179
   647 set .MSG ", loading\n"
   648 label *label180
 
   671 set .MSG ", waiting\n"
   672 label *label186
   673 sensor *tmp258 @unit @totalItems
-    * jump *label187 greaterThan *tmp258 0
+  674 jump *label184 greaterThan *tmp258 0
   675 ucontrol approach .CORE_X .CORE_Y 6
   676 set :processUnit:state 2
   677 label *label187
 
   724 label *label195
   725 ubind *tmp9
   726 set :rebindUnit.5:firstUnit @unit
-    * jump *label199 equal :rebindUnit.5:firstUnit null
+  727 jump __start__ equal :rebindUnit.5:firstUnit null
   728 label *label201
   729 sensor *tmp285 @unit @controlled
   730 jump *label194 equal *tmp285 0
 
   770 jump *label218 lessThan *tmp309 .UNIT_CAPACITY
   771 ucontrol approach .DOME_X .DOME_Y 6
   772 set :processUnit.1:state 3
-    * jump *label219 always
+  773 jump *label217 always
   774 label *label218
   775 set .MSG ", loading\n"
   776 label *label219
 
   799 set .MSG ", waiting\n"
   800 label *label225
   801 sensor *tmp324 @unit @totalItems
-    * jump *label226 greaterThan *tmp324 0
+  802 jump *label223 greaterThan *tmp324 0
   803 ucontrol approach .CORE_X .CORE_Y 6
   804 set :processUnit.1:state 2
   805 label *label226
 
   875 label *label237
   876 ubind *tmp9
   877 set :rebindUnit.6:firstUnit @unit
-    * jump *label241 equal :rebindUnit.6:firstUnit null
+  878 jump __start__ equal :rebindUnit.6:firstUnit null
   879 label *label243
   880 sensor *tmp357 @unit @controlled
   881 jump *label236 equal *tmp357 0
 
   921 jump *label260 lessThan *tmp381 .UNIT_CAPACITY
   922 ucontrol approach .DOME_X .DOME_Y 6
   923 set :processUnit.2:state 3
-    * jump *label261 always
+  924 jump *label259 always
   925 label *label260
   926 set .MSG ", loading\n"
   927 label *label261
 
   950 set .MSG ", waiting\n"
   951 label *label267
   952 sensor *tmp396 @unit @totalItems
-    * jump *label268 greaterThan *tmp396 0
+  953 jump *label265 greaterThan *tmp396 0
   954 ucontrol approach .CORE_X .CORE_Y 6
   955 set :processUnit.2:state 2
   956 label *label268
 
  1003 label *label276
  1004 ubind *tmp9
  1005 set :rebindUnit.7:firstUnit @unit
-    * jump *label280 equal :rebindUnit.7:firstUnit null
+ 1006 jump __start__ equal :rebindUnit.7:firstUnit null
  1007 label *label282
  1008 sensor *tmp423 @unit @controlled
  1009 jump *label275 equal *tmp423 0
 
  1049 jump *label299 lessThan *tmp447 .UNIT_CAPACITY
  1050 ucontrol approach .DOME_X .DOME_Y 6
  1051 set :processUnit.3:state 3
-    * jump *label300 always
+ 1052 jump *label298 always
  1053 label *label299
  1054 set .MSG ", loading\n"
  1055 label *label300
 
  1078 set .MSG ", waiting\n"
  1079 label *label306
  1080 sensor *tmp462 @unit @totalItems
-    * jump *label307 greaterThan *tmp462 0
+ 1081 jump *label304 greaterThan *tmp462 0
  1082 ucontrol approach .CORE_X .CORE_Y 6
  1083 set :processUnit.3:state 2
  1084 label *label307
 
  1143 set :areUnitsAvailable.2:occupied 0
  1144 ubind UNIT_TYPE
  1145 set :areUnitsAvailable.2:firstUnit @unit
-    * jump *label316 equal :areUnitsAvailable.2:firstUnit null
+ 1146 jump *label328 equal :areUnitsAvailable.2:firstUnit null
  1147 set :needsFourUnits.3:unit @unit
  1148 sensor *tmp495 :needsFourUnits.3:unit @speed
  1149 op div :needsFourUnits.3:travel_time *tmp138 *tmp495
 
  1157 op or *tmp503 *tmp500 *tmp502
  1158 jump *label324 equal *tmp503 false
  1159 op add :areUnitsAvailable.2:free :areUnitsAvailable.2:free 1
-    * jump *label326 lessThan :areUnitsAvailable.2:free *tmp498
+ 1160 jump *label325 lessThan :areUnitsAvailable.2:free *tmp498
  1161 set *tmp487 true
  1162 jump *label315 always
  1163 label *label326

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-19 instructions):
 
    80 jump *label35 lessThan :areUnitsAvailable:free *tmp21
    81 set *tmp10 true
    82 jump *label25 always
-    * label *label36
-    * jump *label35 always
    83 label *label34
    84 op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
    85 label *label35
 
   136 jump *label378 lessThan :areUnitsAvailable.1:free *tmp53
   137 set *tmp42 true
   138 jump *label387 always
-    * label *label375
-    * jump *label378 always
   139 label *label377
   140 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   141 label *label378
 
   194 jump *label401 lessThan :areUnitsAvailable.1:free *tmp53
   195 set *tmp42 true
   196 jump *label410 always
-    * label *label398
-    * jump *label401 always
   197 label *label400
   198 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   199 label *label401
 
   252 jump *label424 lessThan :areUnitsAvailable.1:free *tmp53
   253 set *tmp42 true
   254 jump *label433 always
-    * label *label421
-    * jump *label424 always
   255 label *label423
   256 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   257 label *label424
 
   310 jump *label447 lessThan :areUnitsAvailable.1:free *tmp53
   311 set *tmp42 true
   312 jump *label456 always
-    * label *label444
-    * jump *label447 always
   313 label *label446
   314 op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
   315 label *label447
 
   342 label *label459
   343 printflush message1
   344 jump *label22 always
-    * set *tmp9 null
   345 label *label21
   346 print "[gold]Binding units..."
   347 printflush message1
 
   394 op equal *tmp102 *tmp101 0
   395 op land *tmp103 *tmp100 *tmp102
   396 jump *label90 notEqual *tmp103 false
-    * label *label88
   397 end
   398 label *label83
   399 ucontrol flag 1
 
   420 op equal *tmp121 *tmp120 0
   421 op land *tmp122 *tmp119 *tmp121
   422 jump *label103 notEqual *tmp122 false
-    * label *label101
   423 end
   424 label *label96
   425 ucontrol flag 1
 
   470 op equal *tmp160 *tmp159 0
   471 op land *tmp161 *tmp158 *tmp160
   472 jump *label124 notEqual *tmp161 false
-    * label *label122
   473 end
   474 label *label117
   475 ucontrol flag 1
 
   496 op equal *tmp179 *tmp178 0
   497 op land *tmp180 *tmp177 *tmp179
   498 jump *label137 notEqual *tmp180 false
-    * label *label135
   499 end
   500 label *label130
   501 ucontrol flag 1
 
   591 op equal *tmp224 *tmp223 0
   592 op land *tmp225 *tmp222 *tmp224
   593 jump *label162 notEqual *tmp225 false
-    * label *label160
   594 end
   595 label *label155
   596 sensor :processUnit:state @unit @flag
 
   629 jump *label178 always
   630 label *label179
   631 set .MSG ", loading\n"
-    * label *label180
   632 jump *label178 always
   633 label *label177
   634 ucontrol approach .CORE_X .CORE_Y 6
 
   657 jump *label184 greaterThan *tmp258 0
   658 ucontrol approach .CORE_X .CORE_Y 6
   659 set :processUnit:state 2
-    * label *label187
   660 jump *label184 always
   661 label *label183
   662 ucontrol approach .DOME_X .DOME_Y 6
 
   716 op equal *tmp290 *tmp289 0
   717 op land *tmp291 *tmp288 *tmp290
   718 jump *label201 notEqual *tmp291 false
-    * label *label199
   719 end
   720 label *label194
   721 sensor :processUnit.1:state @unit @flag
 
   754 jump *label217 always
   755 label *label218
   756 set .MSG ", loading\n"
-    * label *label219
   757 jump *label217 always
   758 label *label216
   759 ucontrol approach .CORE_X .CORE_Y 6
 
   782 jump *label223 greaterThan *tmp324 0
   783 ucontrol approach .CORE_X .CORE_Y 6
   784 set :processUnit.1:state 2
-    * label *label226
   785 jump *label223 always
   786 label *label222
   787 ucontrol approach .DOME_X .DOME_Y 6
 
   864 op equal *tmp362 *tmp361 0
   865 op land *tmp363 *tmp360 *tmp362
   866 jump *label243 notEqual *tmp363 false
-    * label *label241
   867 end
   868 label *label236
   869 sensor :processUnit.2:state @unit @flag
 
   902 jump *label259 always
   903 label *label260
   904 set .MSG ", loading\n"
-    * label *label261
   905 jump *label259 always
   906 label *label258
   907 ucontrol approach .CORE_X .CORE_Y 6
 
   930 jump *label265 greaterThan *tmp396 0
   931 ucontrol approach .CORE_X .CORE_Y 6
   932 set :processUnit.2:state 2
-    * label *label268
   933 jump *label265 always
   934 label *label264
   935 ucontrol approach .DOME_X .DOME_Y 6
 
   989 op equal *tmp428 *tmp427 0
   990 op land *tmp429 *tmp426 *tmp428
   991 jump *label282 notEqual *tmp429 false
-    * label *label280
   992 end
   993 label *label275
   994 sensor :processUnit.3:state @unit @flag
 
  1027 jump *label298 always
  1028 label *label299
  1029 set .MSG ", loading\n"
-    * label *label300
  1030 jump *label298 always
  1031 label *label297
  1032 ucontrol approach .CORE_X .CORE_Y 6
 
  1055 jump *label304 greaterThan *tmp462 0
  1056 ucontrol approach .CORE_X .CORE_Y 6
  1057 set :processUnit.3:state 2
-    * label *label307
  1058 jump *label304 always
  1059 label *label303
  1060 ucontrol approach .DOME_X .DOME_Y 6
 
  1133 jump *label325 lessThan :areUnitsAvailable.2:free *tmp498
  1134 set *tmp487 true
  1135 jump *label315 always
-    * label *label326
-    * jump *label325 always
  1136 label *label324
  1137 op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
  1138 label *label325
 
  1142 op equal *tmp510 *tmp509 0
  1143 op land *tmp511 *tmp508 *tmp510
  1144 jump *label321 notEqual *tmp511 false
-    * label *label316
  1145 jump *label328 always
-    * print UNIT_TYPE
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.2:occupied
-    * print ","
-    * print " free: "
-    * print :areUnitsAvailable.2:free
-    * jump *label330 lessThanEq :areUnitsAvailable.2:needed 0
-    * print ", needed: "
-    * print :areUnitsAvailable.2:needed
-    * label *label330
-    * print "\n"
  1146 label *label328
  1147 set *tmp487 false
  1148 label *label315
 
  1153 label *label313
  1154 sensor *tmp204 switch1 @enabled
  1155 jump *label371 notEqual *tmp204 false
-    * label *label150
  1156 end
  1157 label *label0
  1158 ubind :locateCore:type
 
  1166 label *label335
  1167 set :locateCore*retval .CORE
  1168 return :locateCore*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   445 op sub *tmp136 .DOME_Y .CORE_Y
   446 op len *tmp137 *tmp135 *tmp136
   447 op mul *tmp138 2 *tmp137
-    * sensor *tmp139 .UNIT_S1 @speed
   448 op div :needsFourUnits.2:travel_time *tmp138 .SPEED
   449 op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
   450 jump *label114 equal *tmp134 false

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1141 op equal *tmp510 *tmp509 0
  1142 op land *tmp511 *tmp508 *tmp510
  1143 jump *label321 notEqual *tmp511 false
-    * jump *label328 always
  1144 label *label328
  1145 set *tmp487 false
  1146 label *label315

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
    33 setaddr :locateCore*retaddr *label363 (h:*label363)
    34 call *label0 *invalid :locateCore*retval (m:*label363) (h:*label363)
    35 label *label363
-    * jump *label1 notEqual :locateCore*retval false
-    * jump *label5 always
+   36 jump *label5 equal :locateCore*retval false
    37 label *label1
    38 sensor .CORE_X .CORE @x
    39 sensor .CORE_Y .CORE @y

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
  1159 op equal *tmp520 *tmp519 @this
  1160 op or *tmp521 *tmp518 *tmp520
  1161 jump *label335 equal *tmp521 false
-    * ulocate building core false @copper *tmp524 *tmp525 *tmp526 .CORE
+ 1162 ulocate building core false @copper 0 0 0 .CORE
  1163 label *label335
  1164 set :locateCore*retval .CORE
  1165 return :locateCore*retaddr

Modifications by Final phase, Print Merging, iteration 1 (-75 instructions):
 
    42 sensor *tmp7 switch1 @enabled
    43 jump *label20 notEqual *tmp7 false
    44 label *label370
-    * print "[coral]Activate switch to begin supplying overdrive dome..."
-    * print "\n"
+   45 print "[coral]Activate switch to begin supplying overdrive dome...\n"
    46 printflush message1
    47 sensor *tmp7 switch1 @enabled
    48 jump *label370 equal *tmp7 false
    49 label *label20
    50 label *label22
    51 printflush null
-    * print "[gold]Looking for suitable unit type:[]"
-    * print "\n"
+   52 print "[gold]Looking for suitable unit type:[]\n"
    53 set :areUnitsAvailable:free 0
    54 set :areUnitsAvailable:occupied 0
    55 set :areUnitsAvailable:needed 0
 
    88 jump *label31 notEqual *tmp34 false
    89 label *label26
    90 print UNIT_TYPE
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable:occupied
-    * print ","
-    * print " free: "
+   91 print ": occupied: {0}, free: "
+   92 format :areUnitsAvailable:occupied
    93 print :areUnitsAvailable:free
    94 jump *label40 lessThanEq :areUnitsAvailable:needed 0
    95 print ", needed: "
 
   140 op land *tmp66 *tmp63 *tmp65
   141 jump *label374 notEqual *tmp66 false
   142 label *label381
-    * print @flare
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.1:occupied
-    * print ","
-    * print " free: "
+  143 print "flare: occupied: {0}, free: "
+  144 format :areUnitsAvailable.1:occupied
   145 print :areUnitsAvailable.1:free
   146 jump *label383 lessThanEq :areUnitsAvailable.1:needed 0
   147 print ", needed: "
 
   194 op land *tmp66 *tmp63 *tmp65
   195 jump *label397 notEqual *tmp66 false
   196 label *label404
-    * print @poly
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.1:occupied
-    * print ","
-    * print " free: "
+  197 print "poly: occupied: {0}, free: "
+  198 format :areUnitsAvailable.1:occupied
   199 print :areUnitsAvailable.1:free
   200 jump *label406 lessThanEq :areUnitsAvailable.1:needed 0
   201 print ", needed: "
 
   248 op land *tmp66 *tmp63 *tmp65
   249 jump *label420 notEqual *tmp66 false
   250 label *label427
-    * print @mega
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.1:occupied
-    * print ","
-    * print " free: "
+  251 print "mega: occupied: {0}, free: "
+  252 format :areUnitsAvailable.1:occupied
   253 print :areUnitsAvailable.1:free
   254 jump *label429 lessThanEq :areUnitsAvailable.1:needed 0
   255 print ", needed: "
 
   302 op land *tmp66 *tmp63 *tmp65
   303 jump *label443 notEqual *tmp66 false
   304 label *label450
-    * print @mono
-    * print ":"
-    * print " occupied: "
-    * print :areUnitsAvailable.1:occupied
-    * print ","
-    * print " free: "
+  305 print "mono: occupied: {0}, free: "
+  306 format :areUnitsAvailable.1:occupied
   307 print :areUnitsAvailable.1:free
   308 jump *label452 lessThanEq :areUnitsAvailable.1:needed 0
   309 print ", needed: "
 
   523 jump __start__ equal *tmp204 false
   524 label *label371
   525 set :start @time
-    * print " === [gold]Supplying Overdrive Dome[] === "
-    * print "\n"
-    * print "\n"
-    * print "Unit type: [green]"
-    * print *tmp9
-    * print "["
-    * print "]"
-    * print "\n"
-    * print "\n[green]Silicon[] status:\n"
+  526 print " === [gold]Supplying Overdrive Dome[] === \n\nUnit type: [green]{0}[]\n\n[green]Silicon[] status:\n"
+  527 format *tmp9
   528 sensor :printDomeStatus:level .DOME @silicon
   529 jump *label152 lessThanEq :printDomeStatus:level 3
-    * print "  dome:  [green]"
-    * print :printDomeStatus:level
-    * print "["
-    * print "]"
-    * print "\n"
+  530 print "  dome:  [green]{0}[]\n"
+  531 format :printDomeStatus:level
   532 jump *label153 always
   533 label *label152
-    * print "  dome:  [coral]"
-    * print :printDomeStatus:level
-    * print "["
-    * print "]"
-    * print "\n"
+  534 print "  dome:  [coral]{0}[]\n"
+  535 format :printDomeStatus:level
   536 label *label153
   537 jump *label156 equal .UNIT_S1 null
   538 ubind .UNIT_S1
 
   636 label *label181
   637 ucontrol flag :processUnit:state
   638 sensor *tmp268 @unit @totalItems
-    * print "  "
-    * print .GROUP1
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp268
-    * print "["
-    * print "]"
+  639 print "  {0}: [gold]{0}[]"
+  640 format .GROUP1
+  641 format *tmp268
   642 jump *label189 lessThan :processUnit:distance 0
   643 print .MSG
   644 print :processUnit:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+  645 print "[] sec\n"
   646 jump *label190 always
   647 label *label189
   648 print .MSG
 
   753 label *label220
   754 ucontrol flag :processUnit.1:state
   755 sensor *tmp334 @unit @totalItems
-    * print "  "
-    * print .GROUP2
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp334
-    * print "["
-    * print "]"
+  756 print "  {0}: [gold]{0}[]"
+  757 format .GROUP2
+  758 format *tmp334
   759 jump *label228 lessThan :processUnit.1:distance 0
   760 print .MSG
   761 print :processUnit.1:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+  762 print "[] sec\n"
   763 jump *label229 always
   764 label *label228
   765 print .MSG
 
   778 print "\n[green]Phase fabric[] status:\n"
   779 sensor :printDomeStatus.1:level .DOME @phase-fabric
   780 jump *label233 lessThanEq :printDomeStatus.1:level 3
-    * print "  dome:  [green]"
-    * print :printDomeStatus.1:level
-    * print "["
-    * print "]"
-    * print "\n"
+  781 print "  dome:  [green]{0}[]\n"
+  782 format :printDomeStatus.1:level
   783 jump *label234 always
   784 label *label233
-    * print "  dome:  [coral]"
-    * print :printDomeStatus.1:level
-    * print "["
-    * print "]"
-    * print "\n"
+  785 print "  dome:  [coral]{0}[]\n"
+  786 format :printDomeStatus.1:level
   787 label *label234
   788 jump *label237 equal .UNIT_P1 null
   789 ubind .UNIT_P1
 
   887 label *label262
   888 ucontrol flag :processUnit.2:state
   889 sensor *tmp406 @unit @totalItems
-    * print "  "
-    * print .GROUP1
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp406
-    * print "["
-    * print "]"
+  890 print "  {0}: [gold]{0}[]"
+  891 format .GROUP1
+  892 format *tmp406
   893 jump *label270 lessThan :processUnit.2:distance 0
   894 print .MSG
   895 print :processUnit.2:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+  896 print "[] sec\n"
   897 jump *label271 always
   898 label *label270
   899 print .MSG
 
  1004 label *label301
  1005 ucontrol flag :processUnit.3:state
  1006 sensor *tmp472 @unit @totalItems
-    * print "  "
-    * print .GROUP2
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp472
-    * print "["
-    * print "]"
+ 1007 print "  {0}: [gold]{0}[]"
+ 1008 format .GROUP2
+ 1009 format *tmp472
  1010 jump *label309 lessThan :processUnit.3:distance 0
  1011 print .MSG
  1012 print :processUnit.3:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+ 1013 print "[] sec\n"
  1014 jump *label310 always
  1015 label *label309
  1016 print .MSG
 
  1028 label *label272
  1029 op sub *tmp481 @time :start
  1030 op floor *tmp482 *tmp481
-    * print "\n"
-    * print "[lightgray]Loop time: "
-    * print *tmp482
-    * print " "
-    * print "ms"
+ 1031 print "\n[lightgray]Loop time: {0} ms"
+ 1032 format *tmp482
  1033 printflush message1
  1034 op notEqual *tmp483 *tmp9 UNIT_TYPE
  1035 op greaterThan *tmp484 :unitCheck @time

Final code before resolving virtual instructions:

label __start__
remark "This is the preferred unit type to use for bringing in supplies."
remark "If no units of this type exist, we'll try using other types."
set UNIT_TYPE @flare
remark "Do not modify anything below this line."
set .DOME dome1
jump *label4 notEqual dome1 null
label *label337
print "[gold]Waiting for an overdrive dome to be connected..."
printflush message1
set .DOME dome1
jump *label337 equal dome1 null
label *label4
print "[gold]Locating core..."
printflush message1
set .CORE null
label *label5
set :locateCore:type @flare
setaddr :locateCore*retaddr *label342
call *label0 *invalid :locateCore*retval
label *label342
jump *label1 notEqual :locateCore*retval false
set :locateCore:type @poly
setaddr :locateCore*retaddr *label349
call *label0 *invalid :locateCore*retval
label *label349
jump *label1 notEqual :locateCore*retval false
set :locateCore:type @mega
setaddr :locateCore*retaddr *label356
call *label0 *invalid :locateCore*retval
label *label356
jump *label1 notEqual :locateCore*retval false
set :locateCore:type @mono
setaddr :locateCore*retaddr *label363
call *label0 *invalid :locateCore*retval
label *label363
jump *label5 equal :locateCore*retval false
label *label1
sensor .CORE_X .CORE @x
sensor .CORE_Y .CORE @y
sensor .DOME_X .DOME @x
sensor .DOME_Y .DOME @y
sensor *tmp7 switch1 @enabled
jump *label20 notEqual *tmp7 false
label *label370
print "[coral]Activate switch to begin supplying overdrive dome...\n"
printflush message1
sensor *tmp7 switch1 @enabled
jump *label370 equal *tmp7 false
label *label20
label *label22
printflush null
print "[gold]Looking for suitable unit type:[]\n"
set :areUnitsAvailable:free 0
set :areUnitsAvailable:occupied 0
set :areUnitsAvailable:needed 0
ubind UNIT_TYPE
set :areUnitsAvailable:firstUnit @unit
jump *label26 equal :areUnitsAvailable:firstUnit null
set :needsFourUnits:unit @unit
op sub *tmp14 .DOME_X .CORE_X
op sub *tmp15 .DOME_Y .CORE_Y
op len *tmp16 *tmp14 *tmp15
op mul *tmp17 2 *tmp16
sensor *tmp18 :needsFourUnits:unit @speed
op div :needsFourUnits:travel_time *tmp17 *tmp18
op greaterThanEq *tmp13 :needsFourUnits:travel_time 47
select *tmp21 notEqual *tmp13 false 4 2
set :areUnitsAvailable:needed *tmp21
label *label31
sensor *tmp22 @unit @controlled
op equal *tmp23 *tmp22 0
sensor *tmp24 @unit @controller
op equal *tmp25 *tmp24 @this
op or *tmp26 *tmp23 *tmp25
jump *label34 equal *tmp26 false
op add :areUnitsAvailable:free :areUnitsAvailable:free 1
jump *label35 lessThan :areUnitsAvailable:free *tmp21
set *tmp10 true
jump *label25 always
label *label34
op add :areUnitsAvailable:occupied :areUnitsAvailable:occupied 1
label *label35
ubind UNIT_TYPE
op notEqual *tmp31 @unit :areUnitsAvailable:firstUnit
sensor *tmp32 :areUnitsAvailable:firstUnit @dead
op equal *tmp33 *tmp32 0
op land *tmp34 *tmp31 *tmp33
jump *label31 notEqual *tmp34 false
label *label26
print UNIT_TYPE
print ": occupied: {0}, free: "
format :areUnitsAvailable:occupied
print :areUnitsAvailable:free
jump *label40 lessThanEq :areUnitsAvailable:needed 0
print ", needed: "
print :areUnitsAvailable:needed
label *label40
print "\n"
set *tmp10 false
label *label25
jump *label42 equal *tmp10 false
set *tmp9 UNIT_TYPE
jump *label21 always
label *label42
jump *label390 equal @flare UNIT_TYPE
set :areUnitsAvailable.1:free 0
set :areUnitsAvailable.1:occupied 0
set :areUnitsAvailable.1:needed 0
ubind @flare
set :areUnitsAvailable.1:firstUnit @unit
jump *label381 equal :areUnitsAvailable.1:firstUnit null
set :needsFourUnits.1:unit @unit
op sub *tmp46 .DOME_X .CORE_X
op sub *tmp47 .DOME_Y .CORE_Y
op len *tmp48 *tmp46 *tmp47
op mul *tmp49 2 *tmp48
sensor *tmp50 :needsFourUnits.1:unit @speed
op div :needsFourUnits.1:travel_time *tmp49 *tmp50
op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
select *tmp53 notEqual *tmp45 false 4 2
set :areUnitsAvailable.1:needed *tmp53
label *label374
sensor *tmp54 @unit @controlled
op equal *tmp55 *tmp54 0
sensor *tmp56 @unit @controller
op equal *tmp57 *tmp56 @this
op or *tmp58 *tmp55 *tmp57
jump *label377 equal *tmp58 false
op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
jump *label378 lessThan :areUnitsAvailable.1:free *tmp53
set *tmp42 true
jump *label387 always
label *label377
op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
label *label378
ubind @flare
op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
op equal *tmp65 *tmp64 0
op land *tmp66 *tmp63 *tmp65
jump *label374 notEqual *tmp66 false
label *label381
print "flare: occupied: {0}, free: "
format :areUnitsAvailable.1:occupied
print :areUnitsAvailable.1:free
jump *label383 lessThanEq :areUnitsAvailable.1:needed 0
print ", needed: "
print :areUnitsAvailable.1:needed
label *label383
print "\n"
set *tmp42 false
label *label387
jump *label388 equal *tmp42 false
printflush null
set *tmp9 @flare
jump *label21 always
label *label388
label *label390
jump *label413 equal @poly UNIT_TYPE
set :areUnitsAvailable.1:free 0
set :areUnitsAvailable.1:occupied 0
set :areUnitsAvailable.1:needed 0
ubind @poly
set :areUnitsAvailable.1:firstUnit @unit
jump *label404 equal :areUnitsAvailable.1:firstUnit null
set :needsFourUnits.1:unit @unit
op sub *tmp46 .DOME_X .CORE_X
op sub *tmp47 .DOME_Y .CORE_Y
op len *tmp48 *tmp46 *tmp47
op mul *tmp49 2 *tmp48
sensor *tmp50 :needsFourUnits.1:unit @speed
op div :needsFourUnits.1:travel_time *tmp49 *tmp50
op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
select *tmp53 notEqual *tmp45 false 4 2
set :areUnitsAvailable.1:needed *tmp53
label *label397
sensor *tmp54 @unit @controlled
op equal *tmp55 *tmp54 0
sensor *tmp56 @unit @controller
op equal *tmp57 *tmp56 @this
op or *tmp58 *tmp55 *tmp57
jump *label400 equal *tmp58 false
op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
jump *label401 lessThan :areUnitsAvailable.1:free *tmp53
set *tmp42 true
jump *label410 always
label *label400
op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
label *label401
ubind @poly
op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
op equal *tmp65 *tmp64 0
op land *tmp66 *tmp63 *tmp65
jump *label397 notEqual *tmp66 false
label *label404
print "poly: occupied: {0}, free: "
format :areUnitsAvailable.1:occupied
print :areUnitsAvailable.1:free
jump *label406 lessThanEq :areUnitsAvailable.1:needed 0
print ", needed: "
print :areUnitsAvailable.1:needed
label *label406
print "\n"
set *tmp42 false
label *label410
jump *label411 equal *tmp42 false
printflush null
set *tmp9 @poly
jump *label21 always
label *label411
label *label413
jump *label436 equal @mega UNIT_TYPE
set :areUnitsAvailable.1:free 0
set :areUnitsAvailable.1:occupied 0
set :areUnitsAvailable.1:needed 0
ubind @mega
set :areUnitsAvailable.1:firstUnit @unit
jump *label427 equal :areUnitsAvailable.1:firstUnit null
set :needsFourUnits.1:unit @unit
op sub *tmp46 .DOME_X .CORE_X
op sub *tmp47 .DOME_Y .CORE_Y
op len *tmp48 *tmp46 *tmp47
op mul *tmp49 2 *tmp48
sensor *tmp50 :needsFourUnits.1:unit @speed
op div :needsFourUnits.1:travel_time *tmp49 *tmp50
op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
select *tmp53 notEqual *tmp45 false 4 2
set :areUnitsAvailable.1:needed *tmp53
label *label420
sensor *tmp54 @unit @controlled
op equal *tmp55 *tmp54 0
sensor *tmp56 @unit @controller
op equal *tmp57 *tmp56 @this
op or *tmp58 *tmp55 *tmp57
jump *label423 equal *tmp58 false
op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
jump *label424 lessThan :areUnitsAvailable.1:free *tmp53
set *tmp42 true
jump *label433 always
label *label423
op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
label *label424
ubind @mega
op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
op equal *tmp65 *tmp64 0
op land *tmp66 *tmp63 *tmp65
jump *label420 notEqual *tmp66 false
label *label427
print "mega: occupied: {0}, free: "
format :areUnitsAvailable.1:occupied
print :areUnitsAvailable.1:free
jump *label429 lessThanEq :areUnitsAvailable.1:needed 0
print ", needed: "
print :areUnitsAvailable.1:needed
label *label429
print "\n"
set *tmp42 false
label *label433
jump *label434 equal *tmp42 false
printflush null
set *tmp9 @mega
jump *label21 always
label *label434
label *label436
jump *label459 equal @mono UNIT_TYPE
set :areUnitsAvailable.1:free 0
set :areUnitsAvailable.1:occupied 0
set :areUnitsAvailable.1:needed 0
ubind @mono
set :areUnitsAvailable.1:firstUnit @unit
jump *label450 equal :areUnitsAvailable.1:firstUnit null
set :needsFourUnits.1:unit @unit
op sub *tmp46 .DOME_X .CORE_X
op sub *tmp47 .DOME_Y .CORE_Y
op len *tmp48 *tmp46 *tmp47
op mul *tmp49 2 *tmp48
sensor *tmp50 :needsFourUnits.1:unit @speed
op div :needsFourUnits.1:travel_time *tmp49 *tmp50
op greaterThanEq *tmp45 :needsFourUnits.1:travel_time 47
select *tmp53 notEqual *tmp45 false 4 2
set :areUnitsAvailable.1:needed *tmp53
label *label443
sensor *tmp54 @unit @controlled
op equal *tmp55 *tmp54 0
sensor *tmp56 @unit @controller
op equal *tmp57 *tmp56 @this
op or *tmp58 *tmp55 *tmp57
jump *label446 equal *tmp58 false
op add :areUnitsAvailable.1:free :areUnitsAvailable.1:free 1
jump *label447 lessThan :areUnitsAvailable.1:free *tmp53
set *tmp42 true
jump *label456 always
label *label446
op add :areUnitsAvailable.1:occupied :areUnitsAvailable.1:occupied 1
label *label447
ubind @mono
op notEqual *tmp63 @unit :areUnitsAvailable.1:firstUnit
sensor *tmp64 :areUnitsAvailable.1:firstUnit @dead
op equal *tmp65 *tmp64 0
op land *tmp66 *tmp63 *tmp65
jump *label443 notEqual *tmp66 false
label *label450
print "mono: occupied: {0}, free: "
format :areUnitsAvailable.1:occupied
print :areUnitsAvailable.1:free
jump *label452 lessThanEq :areUnitsAvailable.1:needed 0
print ", needed: "
print :areUnitsAvailable.1:needed
label *label452
print "\n"
set *tmp42 false
label *label456
jump *label457 equal *tmp42 false
printflush null
set *tmp9 @mono
jump *label21 always
label *label457
label *label459
printflush message1
jump *label22 always
label *label21
print "[gold]Binding units..."
printflush message1
set .UNIT_P2 null
set .UNIT_S2 null
set .UNIT_P1 null
set .UNIT_S1 null
set :rebindUnits:count 0
ubind *tmp9
set :rebindUnits:firstUnit @unit
jump *label73 notEqual :rebindUnits:firstUnit null
end
label *label73
label *label75
sensor *tmp74 @unit @controller
jump *label78 notEqual *tmp74 @this
op add :rebindUnits:count :rebindUnits:count 1
ucontrol flag 1
set .UNIT_S2 .UNIT_P2
set .UNIT_P2 .UNIT_S1
set .UNIT_S1 .UNIT_P1
set .UNIT_P1 @unit
jump *label77 notEqual .UNIT_S2 null
label *label78
ubind *tmp9
op notEqual *tmp81 @unit :rebindUnits:firstUnit
sensor *tmp82 :rebindUnits:firstUnit @dead
op equal *tmp83 *tmp82 0
op land *tmp84 *tmp81 *tmp83
jump *label75 notEqual *tmp84 false
label *label77
jump *label84 equal .UNIT_S1 null
ubind .UNIT_S1
sensor *tmp89 @unit @dead
op equal *tmp90 *tmp89 0
sensor *tmp91 @unit @controller
op equal *tmp92 *tmp91 @this
op land *tmp93 *tmp90 *tmp92
jump *label83 notEqual *tmp93 false
label *label84
ubind *tmp9
set :rebindUnit:firstUnit @unit
jump __start__ equal :rebindUnit:firstUnit null
label *label90
sensor *tmp97 @unit @controlled
jump *label83 equal *tmp97 0
ubind *tmp9
op notEqual *tmp100 @unit :rebindUnit:firstUnit
sensor *tmp101 :rebindUnit:firstUnit @dead
op equal *tmp102 *tmp101 0
op land *tmp103 *tmp100 *tmp102
jump *label90 notEqual *tmp103 false
end
label *label83
ucontrol flag 1
set *tmp85 @unit
set .UNIT_S1 *tmp85
jump *label97 equal .UNIT_P1 null
ubind .UNIT_P1
sensor *tmp108 @unit @dead
op equal *tmp109 *tmp108 0
sensor *tmp110 @unit @controller
op equal *tmp111 *tmp110 @this
op land *tmp112 *tmp109 *tmp111
jump *label96 notEqual *tmp112 false
label *label97
ubind *tmp9
set :rebindUnit.1:firstUnit @unit
jump __start__ equal :rebindUnit.1:firstUnit null
label *label103
sensor *tmp116 @unit @controlled
jump *label96 equal *tmp116 0
ubind *tmp9
op notEqual *tmp119 @unit :rebindUnit.1:firstUnit
sensor *tmp120 :rebindUnit.1:firstUnit @dead
op equal *tmp121 *tmp120 0
op land *tmp122 *tmp119 *tmp121
jump *label103 notEqual *tmp122 false
end
label *label96
ucontrol flag 1
set *tmp104 @unit
set .UNIT_P1 *tmp104
sensor *tmp123 *tmp85 @firstItem
op equal *tmp124 *tmp123 @phase-fabric
sensor *tmp125 *tmp104 @firstItem
op equal *tmp126 *tmp125 @silicon
op or *tmp127 *tmp124 *tmp126
jump *label108 equal *tmp127 false
set .UNIT_S1 *tmp104
set .UNIT_P1 *tmp85
label *label108
sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
sensor .SPEED .UNIT_S1 @speed
op div .SPEED_TENTHS .SPEED 10
op strictEqual *tmp132 .SPEED null
jump *label111 equal *tmp132 false
stop
label *label111
op sub *tmp135 .DOME_X .CORE_X
op sub *tmp136 .DOME_Y .CORE_Y
op len *tmp137 *tmp135 *tmp136
op mul *tmp138 2 *tmp137
op div :needsFourUnits.2:travel_time *tmp138 .SPEED
op greaterThanEq *tmp134 :needsFourUnits.2:travel_time 47
jump *label114 equal *tmp134 false
jump *label118 equal .UNIT_S2 null
ubind .UNIT_S2
sensor *tmp147 @unit @dead
op equal *tmp148 *tmp147 0
sensor *tmp149 @unit @controller
op equal *tmp150 *tmp149 @this
op land *tmp151 *tmp148 *tmp150
jump *label117 notEqual *tmp151 false
label *label118
ubind *tmp9
set :rebindUnit.2:firstUnit @unit
jump __start__ equal :rebindUnit.2:firstUnit null
label *label124
sensor *tmp155 @unit @controlled
jump *label117 equal *tmp155 0
ubind *tmp9
op notEqual *tmp158 @unit :rebindUnit.2:firstUnit
sensor *tmp159 :rebindUnit.2:firstUnit @dead
op equal *tmp160 *tmp159 0
op land *tmp161 *tmp158 *tmp160
jump *label124 notEqual *tmp161 false
end
label *label117
ucontrol flag 1
set *tmp143 @unit
set .UNIT_S2 *tmp143
jump *label131 equal .UNIT_P2 null
ubind .UNIT_P2
sensor *tmp166 @unit @dead
op equal *tmp167 *tmp166 0
sensor *tmp168 @unit @controller
op equal *tmp169 *tmp168 @this
op land *tmp170 *tmp167 *tmp169
jump *label130 notEqual *tmp170 false
label *label131
ubind *tmp9
set :rebindUnit.3:firstUnit @unit
jump __start__ equal :rebindUnit.3:firstUnit null
label *label137
sensor *tmp174 @unit @controlled
jump *label130 equal *tmp174 0
ubind *tmp9
op notEqual *tmp177 @unit :rebindUnit.3:firstUnit
sensor *tmp178 :rebindUnit.3:firstUnit @dead
op equal *tmp179 *tmp178 0
op land *tmp180 *tmp177 *tmp179
jump *label137 notEqual *tmp180 false
end
label *label130
ucontrol flag 1
set *tmp162 @unit
set .UNIT_P2 *tmp162
sensor *tmp181 .UNIT_S1 @firstItem
op equal *tmp182 *tmp181 @phase-fabric
sensor *tmp183 *tmp162 @firstItem
op notEqual *tmp184 *tmp183 @phase-fabric
op land *tmp185 *tmp182 *tmp184
jump *label142 equal *tmp185 false
set :swap.1:t .UNIT_S1
set .UNIT_S1 *tmp162
set .UNIT_P2 :swap.1:t
label *label142
sensor *tmp187 *tmp143 @firstItem
op equal *tmp188 *tmp187 @phase-fabric
sensor *tmp189 .UNIT_P2 @firstItem
op equal *tmp190 *tmp189 @silicon
op or *tmp191 *tmp188 *tmp190
jump *label145 equal *tmp191 false
set .UNIT_S2 .UNIT_P2
set .UNIT_P2 *tmp143
label *label145
set .GROUP1 "unit  1"
set .GROUP2 "unit 2"
jump *label115 always
label *label114
ubind .UNIT_S2
ucontrol unbind
set .UNIT_S2 null
ubind .UNIT_P2
ucontrol unbind
set .UNIT_P2 null
set .GROUP1 "unit"
label *label115
op equal *tmp193 *tmp134 false
sensor *tmp194 .UNIT_S1 @totalItems
sensor *tmp195 .UNIT_S2 @totalItems
op lessThan *tmp196 *tmp194 *tmp195
op or .SUPPLY_S_FIRST *tmp193 *tmp196
sensor *tmp199 .UNIT_P1 @totalItems
sensor *tmp200 .UNIT_P2 @totalItems
op lessThan *tmp201 *tmp199 *tmp200
op or .SUPPLY_P_FIRST *tmp193 *tmp201
op add :unitCheck @time 5000
sensor *tmp204 switch1 @enabled
jump __start__ equal *tmp204 false
label *label371
set :start @time
print " === [gold]Supplying Overdrive Dome[] === \n\nUnit type: [green]{0}[]\n\n[green]Silicon[] status:\n"
format *tmp9
sensor :printDomeStatus:level .DOME @silicon
jump *label152 lessThanEq :printDomeStatus:level 3
print "  dome:  [green]{0}[]\n"
format :printDomeStatus:level
jump *label153 always
label *label152
print "  dome:  [coral]{0}[]\n"
format :printDomeStatus:level
label *label153
jump *label156 equal .UNIT_S1 null
ubind .UNIT_S1
sensor *tmp211 @unit @dead
op equal *tmp212 *tmp211 0
sensor *tmp213 @unit @controller
op equal *tmp214 *tmp213 @this
op land *tmp215 *tmp212 *tmp214
jump *label155 notEqual *tmp215 false
label *label156
ubind *tmp9
set :rebindUnit.4:firstUnit @unit
jump __start__ equal :rebindUnit.4:firstUnit null
label *label162
sensor *tmp219 @unit @controlled
jump *label155 equal *tmp219 0
ubind *tmp9
op notEqual *tmp222 @unit :rebindUnit.4:firstUnit
sensor *tmp223 :rebindUnit.4:firstUnit @dead
op equal *tmp224 *tmp223 0
op land *tmp225 *tmp222 *tmp224
jump *label162 notEqual *tmp225 false
end
label *label155
sensor :processUnit:state @unit @flag
set :processUnit:distance -1
op lessThan *tmp227 :processUnit:state 2
op greaterThan *tmp228 :processUnit:state 3
op or *tmp229 *tmp227 *tmp228
jump *label167 equal *tmp229 false
sensor *tmp231 @unit @firstItem
jump *label169 notEqual *tmp231 @silicon
set :processUnit:state 3
jump *label170 always
label *label169
sensor *tmp234 @unit @totalItems
jump *label171 notEqual *tmp234 0
set :processUnit:state 2
jump *label172 always
label *label171
set .MSG ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6
ucontrol within .CORE_X .CORE_Y 8 *tmp237
jump *label173 equal *tmp237 false
ucontrol itemDrop .CORE .UNIT_CAPACITY
label *label173
label *label172
label *label170
label *label167
jump *label175 notEqual :processUnit:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp241
jump *label177 equal *tmp241 false
ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
sensor *tmp243 @unit @totalItems
jump *label179 lessThan *tmp243 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6
set :processUnit:state 3
jump *label178 always
label *label179
set .MSG ", loading\n"
jump *label178 always
label *label177
ucontrol approach .CORE_X .CORE_Y 6
set .MSG ", fetching in [gold]"
sensor *tmp246 @unit @x
op sub *tmp247 .CORE_X *tmp246
sensor *tmp248 @unit @y
op sub *tmp249 .CORE_Y *tmp248
op len *tmp250 *tmp247 *tmp249
op idiv *tmp251 *tmp250 .SPEED_TENTHS
op div :processUnit:distance *tmp251 10
label *label178
label *label175
jump *label181 notEqual :processUnit:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp255
jump *label183 equal *tmp255 false
jump *label185 equal .SUPPLY_S_FIRST false
ucontrol itemDrop .DOME .UNIT_CAPACITY
set .MSG ", supplying\n"
jump *label186 always
label *label185
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", waiting\n"
label *label186
sensor *tmp258 @unit @totalItems
jump *label184 greaterThan *tmp258 0
ucontrol approach .CORE_X .CORE_Y 6
set :processUnit:state 2
jump *label184 always
label *label183
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", returning in [gold]"
sensor *tmp261 @unit @x
op sub *tmp262 .DOME_X *tmp261
sensor *tmp263 @unit @y
op sub *tmp264 .DOME_Y *tmp263
op len *tmp265 *tmp262 *tmp264
op idiv *tmp266 *tmp265 .SPEED_TENTHS
op div :processUnit:distance *tmp266 10
label *label184
label *label181
ucontrol flag :processUnit:state
sensor *tmp268 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP1
format *tmp268
jump *label189 lessThan :processUnit:distance 0
print .MSG
print :processUnit:distance
print "[] sec\n"
jump *label190 always
label *label189
print .MSG
label *label190
set :processUnit:unit @unit
set .UNIT_S1 :processUnit:unit
jump *label191 equal *tmp134 false
op equal *tmp273 .SUPPLY_S_FIRST false
jump *label195 equal .UNIT_S2 null
ubind .UNIT_S2
sensor *tmp277 @unit @dead
op equal *tmp278 *tmp277 0
sensor *tmp279 @unit @controller
op equal *tmp280 *tmp279 @this
op land *tmp281 *tmp278 *tmp280
jump *label194 notEqual *tmp281 false
label *label195
ubind *tmp9
set :rebindUnit.5:firstUnit @unit
jump __start__ equal :rebindUnit.5:firstUnit null
label *label201
sensor *tmp285 @unit @controlled
jump *label194 equal *tmp285 0
ubind *tmp9
op notEqual *tmp288 @unit :rebindUnit.5:firstUnit
sensor *tmp289 :rebindUnit.5:firstUnit @dead
op equal *tmp290 *tmp289 0
op land *tmp291 *tmp288 *tmp290
jump *label201 notEqual *tmp291 false
end
label *label194
sensor :processUnit.1:state @unit @flag
set :processUnit.1:distance -1
op lessThan *tmp293 :processUnit.1:state 2
op greaterThan *tmp294 :processUnit.1:state 3
op or *tmp295 *tmp293 *tmp294
jump *label206 equal *tmp295 false
sensor *tmp297 @unit @firstItem
jump *label208 notEqual *tmp297 @silicon
set :processUnit.1:state 3
jump *label209 always
label *label208
sensor *tmp300 @unit @totalItems
jump *label210 notEqual *tmp300 0
set :processUnit.1:state 2
jump *label211 always
label *label210
set .MSG ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6
ucontrol within .CORE_X .CORE_Y 8 *tmp303
jump *label212 equal *tmp303 false
ucontrol itemDrop .CORE .UNIT_CAPACITY
label *label212
label *label211
label *label209
label *label206
jump *label214 notEqual :processUnit.1:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp307
jump *label216 equal *tmp307 false
ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
sensor *tmp309 @unit @totalItems
jump *label218 lessThan *tmp309 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6
set :processUnit.1:state 3
jump *label217 always
label *label218
set .MSG ", loading\n"
jump *label217 always
label *label216
ucontrol approach .CORE_X .CORE_Y 6
set .MSG ", fetching in [gold]"
sensor *tmp312 @unit @x
op sub *tmp313 .CORE_X *tmp312
sensor *tmp314 @unit @y
op sub *tmp315 .CORE_Y *tmp314
op len *tmp316 *tmp313 *tmp315
op idiv *tmp317 *tmp316 .SPEED_TENTHS
op div :processUnit.1:distance *tmp317 10
label *label217
label *label214
jump *label220 notEqual :processUnit.1:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp321
jump *label222 equal *tmp321 false
jump *label224 equal *tmp273 false
ucontrol itemDrop .DOME .UNIT_CAPACITY
set .MSG ", supplying\n"
jump *label225 always
label *label224
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", waiting\n"
label *label225
sensor *tmp324 @unit @totalItems
jump *label223 greaterThan *tmp324 0
ucontrol approach .CORE_X .CORE_Y 6
set :processUnit.1:state 2
jump *label223 always
label *label222
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", returning in [gold]"
sensor *tmp327 @unit @x
op sub *tmp328 .DOME_X *tmp327
sensor *tmp329 @unit @y
op sub *tmp330 .DOME_Y *tmp329
op len *tmp331 *tmp328 *tmp330
op idiv *tmp332 *tmp331 .SPEED_TENTHS
op div :processUnit.1:distance *tmp332 10
label *label223
label *label220
ucontrol flag :processUnit.1:state
sensor *tmp334 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP2
format *tmp334
jump *label228 lessThan :processUnit.1:distance 0
print .MSG
print :processUnit.1:distance
print "[] sec\n"
jump *label229 always
label *label228
print .MSG
label *label229
set :processUnit.1:unit @unit
set .UNIT_S2 :processUnit.1:unit
jump *label230 equal .SUPPLY_S_FIRST false
sensor *tmp339 :processUnit:unit @totalItems
op greaterThan .SUPPLY_S_FIRST *tmp339 0
jump *label231 always
label *label230
sensor *tmp341 :processUnit.1:unit @totalItems
op equal .SUPPLY_S_FIRST *tmp341 0
label *label231
label *label191
print "\n[green]Phase fabric[] status:\n"
sensor :printDomeStatus.1:level .DOME @phase-fabric
jump *label233 lessThanEq :printDomeStatus.1:level 3
print "  dome:  [green]{0}[]\n"
format :printDomeStatus.1:level
jump *label234 always
label *label233
print "  dome:  [coral]{0}[]\n"
format :printDomeStatus.1:level
label *label234
jump *label237 equal .UNIT_P1 null
ubind .UNIT_P1
sensor *tmp349 @unit @dead
op equal *tmp350 *tmp349 0
sensor *tmp351 @unit @controller
op equal *tmp352 *tmp351 @this
op land *tmp353 *tmp350 *tmp352
jump *label236 notEqual *tmp353 false
label *label237
ubind *tmp9
set :rebindUnit.6:firstUnit @unit
jump __start__ equal :rebindUnit.6:firstUnit null
label *label243
sensor *tmp357 @unit @controlled
jump *label236 equal *tmp357 0
ubind *tmp9
op notEqual *tmp360 @unit :rebindUnit.6:firstUnit
sensor *tmp361 :rebindUnit.6:firstUnit @dead
op equal *tmp362 *tmp361 0
op land *tmp363 *tmp360 *tmp362
jump *label243 notEqual *tmp363 false
end
label *label236
sensor :processUnit.2:state @unit @flag
set :processUnit.2:distance -1
op lessThan *tmp365 :processUnit.2:state 2
op greaterThan *tmp366 :processUnit.2:state 3
op or *tmp367 *tmp365 *tmp366
jump *label248 equal *tmp367 false
sensor *tmp369 @unit @firstItem
jump *label250 notEqual *tmp369 @phase-fabric
set :processUnit.2:state 3
jump *label251 always
label *label250
sensor *tmp372 @unit @totalItems
jump *label252 notEqual *tmp372 0
set :processUnit.2:state 2
jump *label253 always
label *label252
set .MSG ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6
ucontrol within .CORE_X .CORE_Y 8 *tmp375
jump *label254 equal *tmp375 false
ucontrol itemDrop .CORE .UNIT_CAPACITY
label *label254
label *label253
label *label251
label *label248
jump *label256 notEqual :processUnit.2:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp379
jump *label258 equal *tmp379 false
ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
sensor *tmp381 @unit @totalItems
jump *label260 lessThan *tmp381 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6
set :processUnit.2:state 3
jump *label259 always
label *label260
set .MSG ", loading\n"
jump *label259 always
label *label258
ucontrol approach .CORE_X .CORE_Y 6
set .MSG ", fetching in [gold]"
sensor *tmp384 @unit @x
op sub *tmp385 .CORE_X *tmp384
sensor *tmp386 @unit @y
op sub *tmp387 .CORE_Y *tmp386
op len *tmp388 *tmp385 *tmp387
op idiv *tmp389 *tmp388 .SPEED_TENTHS
op div :processUnit.2:distance *tmp389 10
label *label259
label *label256
jump *label262 notEqual :processUnit.2:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp393
jump *label264 equal *tmp393 false
jump *label266 equal .SUPPLY_P_FIRST false
ucontrol itemDrop .DOME .UNIT_CAPACITY
set .MSG ", supplying\n"
jump *label267 always
label *label266
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", waiting\n"
label *label267
sensor *tmp396 @unit @totalItems
jump *label265 greaterThan *tmp396 0
ucontrol approach .CORE_X .CORE_Y 6
set :processUnit.2:state 2
jump *label265 always
label *label264
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", returning in [gold]"
sensor *tmp399 @unit @x
op sub *tmp400 .DOME_X *tmp399
sensor *tmp401 @unit @y
op sub *tmp402 .DOME_Y *tmp401
op len *tmp403 *tmp400 *tmp402
op idiv *tmp404 *tmp403 .SPEED_TENTHS
op div :processUnit.2:distance *tmp404 10
label *label265
label *label262
ucontrol flag :processUnit.2:state
sensor *tmp406 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP1
format *tmp406
jump *label270 lessThan :processUnit.2:distance 0
print .MSG
print :processUnit.2:distance
print "[] sec\n"
jump *label271 always
label *label270
print .MSG
label *label271
set :processUnit.2:unit @unit
set .UNIT_P1 :processUnit.2:unit
jump *label272 equal *tmp134 false
op equal *tmp411 .SUPPLY_P_FIRST false
jump *label276 equal .UNIT_P2 null
ubind .UNIT_P2
sensor *tmp415 @unit @dead
op equal *tmp416 *tmp415 0
sensor *tmp417 @unit @controller
op equal *tmp418 *tmp417 @this
op land *tmp419 *tmp416 *tmp418
jump *label275 notEqual *tmp419 false
label *label276
ubind *tmp9
set :rebindUnit.7:firstUnit @unit
jump __start__ equal :rebindUnit.7:firstUnit null
label *label282
sensor *tmp423 @unit @controlled
jump *label275 equal *tmp423 0
ubind *tmp9
op notEqual *tmp426 @unit :rebindUnit.7:firstUnit
sensor *tmp427 :rebindUnit.7:firstUnit @dead
op equal *tmp428 *tmp427 0
op land *tmp429 *tmp426 *tmp428
jump *label282 notEqual *tmp429 false
end
label *label275
sensor :processUnit.3:state @unit @flag
set :processUnit.3:distance -1
op lessThan *tmp431 :processUnit.3:state 2
op greaterThan *tmp432 :processUnit.3:state 3
op or *tmp433 *tmp431 *tmp432
jump *label287 equal *tmp433 false
sensor *tmp435 @unit @firstItem
jump *label289 notEqual *tmp435 @phase-fabric
set :processUnit.3:state 3
jump *label290 always
label *label289
sensor *tmp438 @unit @totalItems
jump *label291 notEqual *tmp438 0
set :processUnit.3:state 2
jump *label292 always
label *label291
set .MSG ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6
ucontrol within .CORE_X .CORE_Y 8 *tmp441
jump *label293 equal *tmp441 false
ucontrol itemDrop .CORE .UNIT_CAPACITY
label *label293
label *label292
label *label290
label *label287
jump *label295 notEqual :processUnit.3:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp445
jump *label297 equal *tmp445 false
ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
sensor *tmp447 @unit @totalItems
jump *label299 lessThan *tmp447 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6
set :processUnit.3:state 3
jump *label298 always
label *label299
set .MSG ", loading\n"
jump *label298 always
label *label297
ucontrol approach .CORE_X .CORE_Y 6
set .MSG ", fetching in [gold]"
sensor *tmp450 @unit @x
op sub *tmp451 .CORE_X *tmp450
sensor *tmp452 @unit @y
op sub *tmp453 .CORE_Y *tmp452
op len *tmp454 *tmp451 *tmp453
op idiv *tmp455 *tmp454 .SPEED_TENTHS
op div :processUnit.3:distance *tmp455 10
label *label298
label *label295
jump *label301 notEqual :processUnit.3:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp459
jump *label303 equal *tmp459 false
jump *label305 equal *tmp411 false
ucontrol itemDrop .DOME .UNIT_CAPACITY
set .MSG ", supplying\n"
jump *label306 always
label *label305
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", waiting\n"
label *label306
sensor *tmp462 @unit @totalItems
jump *label304 greaterThan *tmp462 0
ucontrol approach .CORE_X .CORE_Y 6
set :processUnit.3:state 2
jump *label304 always
label *label303
ucontrol approach .DOME_X .DOME_Y 6
set .MSG ", returning in [gold]"
sensor *tmp465 @unit @x
op sub *tmp466 .DOME_X *tmp465
sensor *tmp467 @unit @y
op sub *tmp468 .DOME_Y *tmp467
op len *tmp469 *tmp466 *tmp468
op idiv *tmp470 *tmp469 .SPEED_TENTHS
op div :processUnit.3:distance *tmp470 10
label *label304
label *label301
ucontrol flag :processUnit.3:state
sensor *tmp472 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP2
format *tmp472
jump *label309 lessThan :processUnit.3:distance 0
print .MSG
print :processUnit.3:distance
print "[] sec\n"
jump *label310 always
label *label309
print .MSG
label *label310
set :processUnit.3:unit @unit
set .UNIT_P2 :processUnit.3:unit
jump *label311 equal .SUPPLY_P_FIRST false
sensor *tmp477 :processUnit.2:unit @totalItems
op greaterThan .SUPPLY_P_FIRST *tmp477 0
jump *label312 always
label *label311
sensor *tmp479 :processUnit.3:unit @totalItems
op equal .SUPPLY_P_FIRST *tmp479 0
label *label312
label *label272
op sub *tmp481 @time :start
op floor *tmp482 *tmp481
print "\n[lightgray]Loop time: {0} ms"
format *tmp482
printflush message1
op notEqual *tmp483 *tmp9 UNIT_TYPE
op greaterThan *tmp484 :unitCheck @time
op land *tmp485 *tmp483 *tmp484
jump *label313 equal *tmp485 false
set :areUnitsAvailable.2:free 0
set :areUnitsAvailable.2:occupied 0
ubind UNIT_TYPE
set :areUnitsAvailable.2:firstUnit @unit
jump *label328 equal :areUnitsAvailable.2:firstUnit null
set :needsFourUnits.3:unit @unit
sensor *tmp495 :needsFourUnits.3:unit @speed
op div :needsFourUnits.3:travel_time *tmp138 *tmp495
op greaterThanEq *tmp490 :needsFourUnits.3:travel_time 47
select *tmp498 notEqual *tmp490 false 4 2
label *label321
sensor *tmp499 @unit @controlled
op equal *tmp500 *tmp499 0
sensor *tmp501 @unit @controller
op equal *tmp502 *tmp501 @this
op or *tmp503 *tmp500 *tmp502
jump *label324 equal *tmp503 false
op add :areUnitsAvailable.2:free :areUnitsAvailable.2:free 1
jump *label325 lessThan :areUnitsAvailable.2:free *tmp498
set *tmp487 true
jump *label315 always
label *label324
op add :areUnitsAvailable.2:occupied :areUnitsAvailable.2:occupied 1
label *label325
ubind UNIT_TYPE
op notEqual *tmp508 @unit :areUnitsAvailable.2:firstUnit
sensor *tmp509 :areUnitsAvailable.2:firstUnit @dead
op equal *tmp510 *tmp509 0
op land *tmp511 *tmp508 *tmp510
jump *label321 notEqual *tmp511 false
label *label328
set *tmp487 false
label *label315
jump *label332 equal *tmp487 false
end
label *label332
op add :unitCheck @time 5000
label *label313
sensor *tmp204 switch1 @enabled
jump *label371 notEqual *tmp204 false
end
label *label0
ubind :locateCore:type
sensor *tmp517 @unit @controlled
op equal *tmp518 *tmp517 0
sensor *tmp519 @unit @controller
op equal *tmp520 *tmp519 @this
op or *tmp521 *tmp518 *tmp520
jump *label335 equal *tmp521 false
ulocate building core false @copper 0 0 0 .CORE
label *label335
set :locateCore*retval .CORE
return :locateCore*retaddr
