   117 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     1 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
   110 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 1):
  o Convert case at line 12:5 (#2165, segments: 5)               size   -12, benefit      980.9, efficiency   Infinity
  o Convert case at line 12:5 (#1403, segments: 6)               size   -11, benefit     1044.6, efficiency   Infinity
  o Convert case at line 12:5 (#1419, segments: 6)               size   -10, benefit     1047.5, efficiency   Infinity
  * Convert case at line 12:5 (#1405, segments: 6)               size    +1, benefit     1047.7, efficiency   1047.692 (+1 instructions)
  ! Convert case at line 12:5 (#1420, segments: 6, padded low)   size    +5, benefit     1049.3, efficiency    209.865
  ! Convert case at line 12:5 (#1406, segments: 6, padded low)   size   +16, benefit     1049.5, efficiency     65.595
  ! Convert case at line 12:5 (#1422, segments: 5, padded low)   size   +20, benefit     1049.6, efficiency     52.481
  ! Convert case at line 12:5 (#1400, segments: 4, padded low)   size   +26, benefit     1050.9, efficiency     40.418
  ! Convert case at line 12:5 (#4, segments: 1, padded both)     size  +214, benefit     1069.6, efficiency      4.998

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 set :block *tmp0
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @copper-wall
+    8 jump *label6 equal :identifyBlock:block @copper-wall
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000004
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @copper-wall-large
+   14 jump *label8 equal :identifyBlock:block @copper-wall-large
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000008
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @titanium-wall
+   20 jump *label10 equal :identifyBlock:block @titanium-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000010
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall-large
+   26 jump *label12 equal :identifyBlock:block @titanium-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000020
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @plastanium-wall
+   32 jump *label14 equal :identifyBlock:block @plastanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000040
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @plastanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000080
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @thorium-wall
+   44 jump *label18 equal :identifyBlock:block @thorium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000100
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall-large
+   50 jump *label20 equal :identifyBlock:block @thorium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000200
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @phase-wall
+   56 jump *label22 equal :identifyBlock:block @phase-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000400
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @phase-wall-large
+   62 jump *label24 equal :identifyBlock:block @phase-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000800
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @surge-wall
+   68 jump *label26 equal :identifyBlock:block @surge-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @surge-wall-large
+   74 jump *label28 equal :identifyBlock:block @surge-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00002000
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @scrap-wall
+   80 jump *label30 equal :identifyBlock:block @scrap-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00004000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall-large
+   86 jump *label32 equal :identifyBlock:block @scrap-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00008000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-huge
+   92 jump *label34 equal :identifyBlock:block @scrap-wall-huge
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00010000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-gigantic
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00020000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @tungsten-wall
+  104 jump *label38 equal :identifyBlock:block @tungsten-wall
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00040000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall-large
+  110 jump *label40 equal :identifyBlock:block @tungsten-wall-large
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00080000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @beryllium-wall
+  116 jump *label42 equal :identifyBlock:block @beryllium-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00100000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall-large
+  122 jump *label44 equal :identifyBlock:block @beryllium-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00200000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @carbide-wall
+  128 jump *label46 equal :identifyBlock:block @carbide-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00400000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall-large
+  134 jump *label48 equal :identifyBlock:block @carbide-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00800000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @reinforced-surge-wall
+  140 jump *label50 equal :identifyBlock:block @reinforced-surge-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x01000000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall-large
+  146 jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   157 op and *tmp4 :total :bit
   158 jump *label53 equal *tmp4 false
   159 op or :total :total 0x800000000
-    * set *tmp5 :total
   160 jump *label54 always
   161 label *label53
   162 op or :total :total :bit
-    * set *tmp5 :total
   163 label *label54
   164 label *label1
   165 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
     7 jump *label6 equal :identifyBlock:block @copper-wall

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @copper-wall
+    7 jump *label6 equal :block @copper-wall
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000004
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall-large
+   13 jump *label8 equal :block @copper-wall-large
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000008
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @titanium-wall
+   19 jump *label10 equal :block @titanium-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000010
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall-large
+   25 jump *label12 equal :block @titanium-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000020
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @plastanium-wall
+   31 jump *label14 equal :block @plastanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000040
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall-large
+   37 jump *label16 equal :block @plastanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000080
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @thorium-wall
+   43 jump *label18 equal :block @thorium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000100
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall-large
+   49 jump *label20 equal :block @thorium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000200
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @phase-wall
+   55 jump *label22 equal :block @phase-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000400
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall-large
+   61 jump *label24 equal :block @phase-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000800
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @surge-wall
+   67 jump *label26 equal :block @surge-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00001000
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall-large
+   73 jump *label28 equal :block @surge-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @scrap-wall
+   79 jump *label30 equal :block @scrap-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00004000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall-large
+   85 jump *label32 equal :block @scrap-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00008000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-huge
+   91 jump *label34 equal :block @scrap-wall-huge
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00010000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
+   97 jump *label36 equal :block @scrap-wall-gigantic
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00020000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @tungsten-wall
+  103 jump *label38 equal :block @tungsten-wall
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00040000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall-large
+  109 jump *label40 equal :block @tungsten-wall-large
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00080000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @beryllium-wall
+  115 jump *label42 equal :block @beryllium-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00100000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall-large
+  121 jump *label44 equal :block @beryllium-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00200000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @carbide-wall
+  127 jump *label46 equal :block @carbide-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00400000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall-large
+  133 jump *label48 equal :block @carbide-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00800000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @reinforced-surge-wall
+  139 jump *label50 equal :block @reinforced-surge-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x01000000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
+  145 jump *label52 equal :block @reinforced-surge-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x02000000
 
   152 label *label4
   153 set *tmp1 *tmp2
   154 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  155 set :bit *tmp2
+  156 op and *tmp4 :total *tmp1
   157 jump *label53 equal *tmp4 false
   158 op or :total :total 0x800000000
   159 jump *label54 always
   160 label *label53
-    * op or :total :total :bit
+  161 op or :total :total *tmp1
   162 label *label54
   163 label *label1
   164 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     6 jump *label6 equal :block @copper-wall
     7 jump *label5 always
     8 label *label6
 
   151 label *label4
   152 set *tmp1 *tmp2
   153 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  154 op and *tmp4 :total *tmp2
   155 jump *label53 equal *tmp4 false
   156 op or :total :total 0x800000000
   157 jump *label54 always
   158 label *label53
-    * op or :total :total *tmp1
+  159 op or :total :total *tmp2
   160 label *label54
   161 label *label1
   162 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   149 label *label51
   150 set *tmp2 0
   151 label *label4
-    * set *tmp1 *tmp2
   152 label *label3
   153 op and *tmp4 :total *tmp2
   154 jump *label53 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 jump *label6 equal :block @copper-wall
 
   159 label *label54
   160 label *label1
   161 op add :i :i 1
-    * jump *label0 always
+  162 jump *label55 lessThan :i @blockCount
   163 label *label2
   164 assertequals 0x03FFFFFC :total "Test selected blocks"
   165 end

Modifications by Convert case at line 12:5 (#1405, segments: 6) (+1 instructions):
 
     3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * jump *label6 equal :block @copper-wall
-    * jump *label5 always
+    6 sensor *tmp6 :block @id
+    7 jump *label57 greaterThanEq *tmp6 203
+    8 jump *label56 greaterThanEq *tmp6 35
+    9 jump *label56 lessThan *tmp6 17
+   10 multijump *label58 *tmp6 17 (m:*label76)
+   11 multilabel *label58 (m:*label76)
+   12 jump *label6 always
+   13 multilabel *label59 (m:*label76)
+   14 jump *label8 always
+   15 multilabel *label60 (m:*label76)
+   16 jump *label10 always
+   17 multilabel *label61 (m:*label76)
+   18 jump *label12 always
+   19 multilabel *label62 (m:*label76)
+   20 jump *label14 always
+   21 multilabel *label63 (m:*label76)
+   22 jump *label16 always
+   23 multilabel *label64 (m:*label76)
+   24 jump *label18 always
+   25 multilabel *label65 (m:*label76)
+   26 jump *label20 always
+   27 multilabel *label66 (m:*label76)
+   28 jump *label22 always
+   29 multilabel *label67 (m:*label76)
+   30 jump *label24 always
+   31 multilabel *label68 (m:*label76)
+   32 jump *label26 always
+   33 multilabel *label69 (m:*label76)
+   34 jump *label28 always
+   35 multilabel *label70 (m:*label76)
+   36 jump *label56 always
+   37 multilabel *label71 (m:*label76)
+   38 jump *label56 always
+   39 multilabel *label72 (m:*label76)
+   40 jump *label30 always
+   41 multilabel *label73 (m:*label76)
+   42 jump *label32 always
+   43 multilabel *label74 (m:*label76)
+   44 jump *label34 always
+   45 multilabel *label75 (m:*label76)
+   46 jump *label36 always
+   47 label *label57
+   48 jump *label56 greaterThanEq *tmp6 235
+   49 jump *label77 greaterThanEq *tmp6 220
+   50 jump *label78 greaterThanEq *tmp6 205
+   51 jump *label40 greaterThanEq *tmp6 204
+   52 jump *label38 always
+   53 label *label78
+   54 jump *label42 equal *tmp6 206
+   55 jump *label44 equal *tmp6 207
+   56 jump *label56 always
+   57 label *label77
+   58 multijump *label79 *tmp6 220 (m:*label94)
+   59 multilabel *label79 (m:*label94)
+   60 jump *label46 always
+   61 multilabel *label80 (m:*label94)
+   62 jump *label48 always
+   63 multilabel *label81 (m:*label94)
+   64 jump *label56 always
+   65 multilabel *label82 (m:*label94)
+   66 jump *label56 always
+   67 multilabel *label83 (m:*label94)
+   68 jump *label56 always
+   69 multilabel *label84 (m:*label94)
+   70 jump *label50 always
+   71 multilabel *label85 (m:*label94)
+   72 jump *label56 always
+   73 multilabel *label86 (m:*label94)
+   74 jump *label56 always
+   75 multilabel *label87 (m:*label94)
+   76 jump *label56 always
+   77 multilabel *label88 (m:*label94)
+   78 jump *label56 always
+   79 multilabel *label89 (m:*label94)
+   80 jump *label56 always
+   81 multilabel *label90 (m:*label94)
+   82 jump *label56 always
+   83 multilabel *label91 (m:*label94)
+   84 jump *label56 always
+   85 multilabel *label92 (m:*label94)
+   86 jump *label56 always
+   87 multilabel *label93 (m:*label94)
+   88 jump *label52 always
    89 label *label6
    90 set *tmp2 0x00000004
    91 jump *label4 always
    92 label *label5
-    * jump *label8 equal :block @copper-wall-large
-    * jump *label7 always
    93 label *label8
    94 set *tmp2 0x00000008
    95 jump *label4 always
    96 label *label7
-    * jump *label10 equal :block @titanium-wall
-    * jump *label9 always
    97 label *label10
    98 set *tmp2 0x00000010
    99 jump *label4 always
   100 label *label9
-    * jump *label12 equal :block @titanium-wall-large
-    * jump *label11 always
   101 label *label12
   102 set *tmp2 0x00000020
   103 jump *label4 always
   104 label *label11
-    * jump *label14 equal :block @plastanium-wall
-    * jump *label13 always
   105 label *label14
   106 set *tmp2 0x00000040
   107 jump *label4 always
   108 label *label13
-    * jump *label16 equal :block @plastanium-wall-large
-    * jump *label15 always
   109 label *label16
   110 set *tmp2 0x00000080
   111 jump *label4 always
   112 label *label15
-    * jump *label18 equal :block @thorium-wall
-    * jump *label17 always
   113 label *label18
   114 set *tmp2 0x00000100
   115 jump *label4 always
   116 label *label17
-    * jump *label20 equal :block @thorium-wall-large
-    * jump *label19 always
   117 label *label20
   118 set *tmp2 0x00000200
   119 jump *label4 always
   120 label *label19
-    * jump *label22 equal :block @phase-wall
-    * jump *label21 always
   121 label *label22
   122 set *tmp2 0x00000400
   123 jump *label4 always
   124 label *label21
-    * jump *label24 equal :block @phase-wall-large
-    * jump *label23 always
   125 label *label24
   126 set *tmp2 0x00000800
   127 jump *label4 always
   128 label *label23
-    * jump *label26 equal :block @surge-wall
-    * jump *label25 always
   129 label *label26
   130 set *tmp2 0x00001000
   131 jump *label4 always
   132 label *label25
-    * jump *label28 equal :block @surge-wall-large
-    * jump *label27 always
   133 label *label28
   134 set *tmp2 0x00002000
   135 jump *label4 always
   136 label *label27
-    * jump *label30 equal :block @scrap-wall
-    * jump *label29 always
   137 label *label30
   138 set *tmp2 0x00004000
   139 jump *label4 always
   140 label *label29
-    * jump *label32 equal :block @scrap-wall-large
-    * jump *label31 always
   141 label *label32
   142 set *tmp2 0x00008000
   143 jump *label4 always
   144 label *label31
-    * jump *label34 equal :block @scrap-wall-huge
-    * jump *label33 always
   145 label *label34
   146 set *tmp2 0x00010000
   147 jump *label4 always
   148 label *label33
-    * jump *label36 equal :block @scrap-wall-gigantic
-    * jump *label35 always
   149 label *label36
   150 set *tmp2 0x00020000
   151 jump *label4 always
   152 label *label35
-    * jump *label38 equal :block @tungsten-wall
-    * jump *label37 always
   153 label *label38
   154 set *tmp2 0x00040000
   155 jump *label4 always
   156 label *label37
-    * jump *label40 equal :block @tungsten-wall-large
-    * jump *label39 always
   157 label *label40
   158 set *tmp2 0x00080000
   159 jump *label4 always
   160 label *label39
-    * jump *label42 equal :block @beryllium-wall
-    * jump *label41 always
   161 label *label42
   162 set *tmp2 0x00100000
   163 jump *label4 always
   164 label *label41
-    * jump *label44 equal :block @beryllium-wall-large
-    * jump *label43 always
   165 label *label44
   166 set *tmp2 0x00200000
   167 jump *label4 always
   168 label *label43
-    * jump *label46 equal :block @carbide-wall
-    * jump *label45 always
   169 label *label46
   170 set *tmp2 0x00400000
   171 jump *label4 always
   172 label *label45
-    * jump *label48 equal :block @carbide-wall-large
-    * jump *label47 always
   173 label *label48
   174 set *tmp2 0x00800000
   175 jump *label4 always
   176 label *label47
-    * jump *label50 equal :block @reinforced-surge-wall
-    * jump *label49 always
   177 label *label50
   178 set *tmp2 0x01000000
   179 jump *label4 always
   180 label *label49
-    * jump *label52 equal :block @reinforced-surge-wall-large
-    * jump *label51 always
   181 label *label52
   182 set *tmp2 0x02000000
   183 jump *label4 always
   184 label *label51
+  185 label *label56
   186 set *tmp2 0
   187 label *label4
   188 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label55
     3 lookup block :block :i
     4 # "Function: def identifyBlock(in block)"
 
    88 label *label6
    89 set *tmp2 0x00000004
    90 jump *label4 always
-    * label *label5
    91 label *label8
    92 set *tmp2 0x00000008
    93 jump *label4 always
-    * label *label7
    94 label *label10
    95 set *tmp2 0x00000010
    96 jump *label4 always
-    * label *label9
    97 label *label12
    98 set *tmp2 0x00000020
    99 jump *label4 always
-    * label *label11
   100 label *label14
   101 set *tmp2 0x00000040
   102 jump *label4 always
-    * label *label13
   103 label *label16
   104 set *tmp2 0x00000080
   105 jump *label4 always
-    * label *label15
   106 label *label18
   107 set *tmp2 0x00000100
   108 jump *label4 always
-    * label *label17
   109 label *label20
   110 set *tmp2 0x00000200
   111 jump *label4 always
-    * label *label19
   112 label *label22
   113 set *tmp2 0x00000400
   114 jump *label4 always
-    * label *label21
   115 label *label24
   116 set *tmp2 0x00000800
   117 jump *label4 always
-    * label *label23
   118 label *label26
   119 set *tmp2 0x00001000
   120 jump *label4 always
-    * label *label25
   121 label *label28
   122 set *tmp2 0x00002000
   123 jump *label4 always
-    * label *label27
   124 label *label30
   125 set *tmp2 0x00004000
   126 jump *label4 always
-    * label *label29
   127 label *label32
   128 set *tmp2 0x00008000
   129 jump *label4 always
-    * label *label31
   130 label *label34
   131 set *tmp2 0x00010000
   132 jump *label4 always
-    * label *label33
   133 label *label36
   134 set *tmp2 0x00020000
   135 jump *label4 always
-    * label *label35
   136 label *label38
   137 set *tmp2 0x00040000
   138 jump *label4 always
-    * label *label37
   139 label *label40
   140 set *tmp2 0x00080000
   141 jump *label4 always
-    * label *label39
   142 label *label42
   143 set *tmp2 0x00100000
   144 jump *label4 always
-    * label *label41
   145 label *label44
   146 set *tmp2 0x00200000
   147 jump *label4 always
-    * label *label43
   148 label *label46
   149 set *tmp2 0x00400000
   150 jump *label4 always
-    * label *label45
   151 label *label48
   152 set *tmp2 0x00800000
   153 jump *label4 always
-    * label *label47
   154 label *label50
   155 set *tmp2 0x01000000
   156 jump *label4 always
-    * label *label49
   157 label *label52
   158 set *tmp2 0x02000000
   159 jump *label4 always
-    * label *label51
   160 label *label56
   161 set *tmp2 0
   162 label *label4
-    * label *label3
   163 op and *tmp4 :total *tmp2
   164 jump *label53 equal *tmp4 false
   165 op or :total :total 0x800000000
 
   167 label *label53
   168 op or :total :total *tmp2
   169 label *label54
-    * label *label1
   170 op add :i :i 1
   171 jump *label55 lessThan :i @blockCount
-    * label *label2
   172 assertequals 0x03FFFFFC :total "Test selected blocks"
   173 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label55
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label57 greaterThanEq *tmp6 203
jump *label56 greaterThanEq *tmp6 35
jump *label56 lessThan *tmp6 17
multijump *label58 *tmp6 17
multilabel *label58
jump *label6 always
multilabel *label59
jump *label8 always
multilabel *label60
jump *label10 always
multilabel *label61
jump *label12 always
multilabel *label62
jump *label14 always
multilabel *label63
jump *label16 always
multilabel *label64
jump *label18 always
multilabel *label65
jump *label20 always
multilabel *label66
jump *label22 always
multilabel *label67
jump *label24 always
multilabel *label68
jump *label26 always
multilabel *label69
jump *label28 always
multilabel *label70
jump *label56 always
multilabel *label71
jump *label56 always
multilabel *label72
jump *label30 always
multilabel *label73
jump *label32 always
multilabel *label74
jump *label34 always
multilabel *label75
jump *label36 always
label *label57
jump *label56 greaterThanEq *tmp6 235
jump *label77 greaterThanEq *tmp6 220
jump *label78 greaterThanEq *tmp6 205
jump *label40 greaterThanEq *tmp6 204
jump *label38 always
label *label78
jump *label42 equal *tmp6 206
jump *label44 equal *tmp6 207
jump *label56 always
label *label77
multijump *label79 *tmp6 220
multilabel *label79
jump *label46 always
multilabel *label80
jump *label48 always
multilabel *label81
jump *label56 always
multilabel *label82
jump *label56 always
multilabel *label83
jump *label56 always
multilabel *label84
jump *label50 always
multilabel *label85
jump *label56 always
multilabel *label86
jump *label56 always
multilabel *label87
jump *label56 always
multilabel *label88
jump *label56 always
multilabel *label89
jump *label56 always
multilabel *label90
jump *label56 always
multilabel *label91
jump *label56 always
multilabel *label92
jump *label56 always
multilabel *label93
jump *label52 always
label *label6
set *tmp2 0x00000004
jump *label4 always
label *label8
set *tmp2 0x00000008
jump *label4 always
label *label10
set *tmp2 0x00000010
jump *label4 always
label *label12
set *tmp2 0x00000020
jump *label4 always
label *label14
set *tmp2 0x00000040
jump *label4 always
label *label16
set *tmp2 0x00000080
jump *label4 always
label *label18
set *tmp2 0x00000100
jump *label4 always
label *label20
set *tmp2 0x00000200
jump *label4 always
label *label22
set *tmp2 0x00000400
jump *label4 always
label *label24
set *tmp2 0x00000800
jump *label4 always
label *label26
set *tmp2 0x00001000
jump *label4 always
label *label28
set *tmp2 0x00002000
jump *label4 always
label *label30
set *tmp2 0x00004000
jump *label4 always
label *label32
set *tmp2 0x00008000
jump *label4 always
label *label34
set *tmp2 0x00010000
jump *label4 always
label *label36
set *tmp2 0x00020000
jump *label4 always
label *label38
set *tmp2 0x00040000
jump *label4 always
label *label40
set *tmp2 0x00080000
jump *label4 always
label *label42
set *tmp2 0x00100000
jump *label4 always
label *label44
set *tmp2 0x00200000
jump *label4 always
label *label46
set *tmp2 0x00400000
jump *label4 always
label *label48
set *tmp2 0x00800000
jump *label4 always
label *label50
set *tmp2 0x01000000
jump *label4 always
label *label52
set *tmp2 0x02000000
jump *label4 always
label *label56
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label53 equal *tmp4 false
op or :total :total 0x800000000
jump *label54 always
label *label53
op or :total :total *tmp2
label *label54
op add :i :i 1
jump *label55 lessThan :i @blockCount
assertequals 0x03FFFFFC :total "Test selected blocks"
end
