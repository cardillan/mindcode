   117 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    12 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    24 instructions eliminated by Jump Straightening (4 iterations).
    96 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 25):
  * Convert case at line 5:5 (segments: 4)                       cost    12, benefit      164.6, efficiency     13.715 (+12 instructions)
  ! Convert case at line 5:5 (segments: 4, zero extension)       cost    27, benefit      197.9, efficiency      7.330
  ! Convert case at line 5:5 (segments: 3, zero extension)       cost   193, benefit      205.2, efficiency      1.063
  ! Convert case at line 5:5 (segments: 3, zero extension)       cost   194, benefit      210.4, efficiency      1.085
  ! Convert case at line 5:5 (segments: 2, zero extension)       cost   204, benefit      213.5, efficiency      1.047
  ! Convert case at line 5:5 (segments: 2, zero extension)       cost   207, benefit      213.5, efficiency      1.032

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 set :block *tmp0
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @copper-wall
+    8 jump *label6 equal :identifyBlock:block @copper-wall
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000004
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @copper-wall-large
+   14 jump *label8 equal :identifyBlock:block @copper-wall-large
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000008
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @titanium-wall
+   20 jump *label10 equal :identifyBlock:block @titanium-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000010
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall-large
+   26 jump *label12 equal :identifyBlock:block @titanium-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000020
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @plastanium-wall
+   32 jump *label14 equal :identifyBlock:block @plastanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000040
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @plastanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000080
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @thorium-wall
+   44 jump *label18 equal :identifyBlock:block @thorium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000100
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall-large
+   50 jump *label20 equal :identifyBlock:block @thorium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000200
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @phase-wall
+   56 jump *label22 equal :identifyBlock:block @phase-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000400
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @phase-wall-large
+   62 jump *label24 equal :identifyBlock:block @phase-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000800
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @surge-wall
+   68 jump *label26 equal :identifyBlock:block @surge-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @surge-wall-large
+   74 jump *label28 equal :identifyBlock:block @surge-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00002000
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @scrap-wall
+   80 jump *label30 equal :identifyBlock:block @scrap-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00004000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall-large
+   86 jump *label32 equal :identifyBlock:block @scrap-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00008000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-huge
+   92 jump *label34 equal :identifyBlock:block @scrap-wall-huge
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00010000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-gigantic
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00020000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @tungsten-wall
+  104 jump *label38 equal :identifyBlock:block @tungsten-wall
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00040000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall-large
+  110 jump *label40 equal :identifyBlock:block @tungsten-wall-large
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00080000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @beryllium-wall
+  116 jump *label42 equal :identifyBlock:block @beryllium-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00100000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall-large
+  122 jump *label44 equal :identifyBlock:block @beryllium-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00200000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @carbide-wall
+  128 jump *label46 equal :identifyBlock:block @carbide-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00400000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall-large
+  134 jump *label48 equal :identifyBlock:block @carbide-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00800000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @reinforced-surge-wall
+  140 jump *label50 equal :identifyBlock:block @reinforced-surge-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x01000000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall-large
+  146 jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   157 op and *tmp4 :total :bit
   158 jump *label53 equal *tmp4 false
   159 op or :total :total 0x800000000
-    * set *tmp5 :total
   160 jump *label54 always
   161 label *label53
   162 op or :total :total :bit
-    * set *tmp5 :total
   163 label *label54
   164 label *label1
   165 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i 240
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
     7 jump *label6 equal :identifyBlock:block @copper-wall

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-24 instructions):
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @copper-wall
-    * jump *label5 always
+    7 jump *label5 notEqual :identifyBlock:block @copper-wall
     8 label *label6
     9 set *tmp2 0x00000004
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall-large
-    * jump *label7 always
+   12 jump *label7 notEqual :identifyBlock:block @copper-wall-large
    13 label *label8
    14 set *tmp2 0x00000008
    15 jump *label4 always
    16 label *label7
-    * jump *label10 equal :identifyBlock:block @titanium-wall
-    * jump *label9 always
+   17 jump *label9 notEqual :identifyBlock:block @titanium-wall
    18 label *label10
    19 set *tmp2 0x00000010
    20 jump *label4 always
    21 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall-large
-    * jump *label11 always
+   22 jump *label11 notEqual :identifyBlock:block @titanium-wall-large
    23 label *label12
    24 set *tmp2 0x00000020
    25 jump *label4 always
    26 label *label11
-    * jump *label14 equal :identifyBlock:block @plastanium-wall
-    * jump *label13 always
+   27 jump *label13 notEqual :identifyBlock:block @plastanium-wall
    28 label *label14
    29 set *tmp2 0x00000040
    30 jump *label4 always
    31 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall-large
-    * jump *label15 always
+   32 jump *label15 notEqual :identifyBlock:block @plastanium-wall-large
    33 label *label16
    34 set *tmp2 0x00000080
    35 jump *label4 always
    36 label *label15
-    * jump *label18 equal :identifyBlock:block @thorium-wall
-    * jump *label17 always
+   37 jump *label17 notEqual :identifyBlock:block @thorium-wall
    38 label *label18
    39 set *tmp2 0x00000100
    40 jump *label4 always
    41 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall-large
-    * jump *label19 always
+   42 jump *label19 notEqual :identifyBlock:block @thorium-wall-large
    43 label *label20
    44 set *tmp2 0x00000200
    45 jump *label4 always
    46 label *label19
-    * jump *label22 equal :identifyBlock:block @phase-wall
-    * jump *label21 always
+   47 jump *label21 notEqual :identifyBlock:block @phase-wall
    48 label *label22
    49 set *tmp2 0x00000400
    50 jump *label4 always
    51 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall-large
-    * jump *label23 always
+   52 jump *label23 notEqual :identifyBlock:block @phase-wall-large
    53 label *label24
    54 set *tmp2 0x00000800
    55 jump *label4 always
    56 label *label23
-    * jump *label26 equal :identifyBlock:block @surge-wall
-    * jump *label25 always
+   57 jump *label25 notEqual :identifyBlock:block @surge-wall
    58 label *label26
    59 set *tmp2 0x00001000
    60 jump *label4 always
    61 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall-large
-    * jump *label27 always
+   62 jump *label27 notEqual :identifyBlock:block @surge-wall-large
    63 label *label28
    64 set *tmp2 0x00002000
    65 jump *label4 always
    66 label *label27
-    * jump *label30 equal :identifyBlock:block @scrap-wall
-    * jump *label29 always
+   67 jump *label29 notEqual :identifyBlock:block @scrap-wall
    68 label *label30
    69 set *tmp2 0x00004000
    70 jump *label4 always
    71 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall-large
-    * jump *label31 always
+   72 jump *label31 notEqual :identifyBlock:block @scrap-wall-large
    73 label *label32
    74 set *tmp2 0x00008000
    75 jump *label4 always
    76 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-huge
-    * jump *label33 always
+   77 jump *label33 notEqual :identifyBlock:block @scrap-wall-huge
    78 label *label34
    79 set *tmp2 0x00010000
    80 jump *label4 always
    81 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
-    * jump *label35 always
+   82 jump *label35 notEqual :identifyBlock:block @scrap-wall-gigantic
    83 label *label36
    84 set *tmp2 0x00020000
    85 jump *label4 always
    86 label *label35
-    * jump *label38 equal :identifyBlock:block @tungsten-wall
-    * jump *label37 always
+   87 jump *label37 notEqual :identifyBlock:block @tungsten-wall
    88 label *label38
    89 set *tmp2 0x00040000
    90 jump *label4 always
    91 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall-large
-    * jump *label39 always
+   92 jump *label39 notEqual :identifyBlock:block @tungsten-wall-large
    93 label *label40
    94 set *tmp2 0x00080000
    95 jump *label4 always
    96 label *label39
-    * jump *label42 equal :identifyBlock:block @beryllium-wall
-    * jump *label41 always
+   97 jump *label41 notEqual :identifyBlock:block @beryllium-wall
    98 label *label42
    99 set *tmp2 0x00100000
   100 jump *label4 always
   101 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall-large
-    * jump *label43 always
+  102 jump *label43 notEqual :identifyBlock:block @beryllium-wall-large
   103 label *label44
   104 set *tmp2 0x00200000
   105 jump *label4 always
   106 label *label43
-    * jump *label46 equal :identifyBlock:block @carbide-wall
-    * jump *label45 always
+  107 jump *label45 notEqual :identifyBlock:block @carbide-wall
   108 label *label46
   109 set *tmp2 0x00400000
   110 jump *label4 always
   111 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall-large
-    * jump *label47 always
+  112 jump *label47 notEqual :identifyBlock:block @carbide-wall-large
   113 label *label48
   114 set *tmp2 0x00800000
   115 jump *label4 always
   116 label *label47
-    * jump *label50 equal :identifyBlock:block @reinforced-surge-wall
-    * jump *label49 always
+  117 jump *label49 notEqual :identifyBlock:block @reinforced-surge-wall
   118 label *label50
   119 set *tmp2 0x01000000
   120 jump *label4 always
   121 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
-    * jump *label51 always
+  122 jump *label51 notEqual :identifyBlock:block @reinforced-surge-wall-large
   123 label *label52
   124 set *tmp2 0x02000000
   125 jump *label4 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label5 notEqual :identifyBlock:block @copper-wall
+    7 jump *label5 notEqual :block @copper-wall
     8 label *label6
     9 set *tmp2 0x00000004
    10 jump *label4 always
    11 label *label5
-    * jump *label7 notEqual :identifyBlock:block @copper-wall-large
+   12 jump *label7 notEqual :block @copper-wall-large
    13 label *label8
    14 set *tmp2 0x00000008
    15 jump *label4 always
    16 label *label7
-    * jump *label9 notEqual :identifyBlock:block @titanium-wall
+   17 jump *label9 notEqual :block @titanium-wall
    18 label *label10
    19 set *tmp2 0x00000010
    20 jump *label4 always
    21 label *label9
-    * jump *label11 notEqual :identifyBlock:block @titanium-wall-large
+   22 jump *label11 notEqual :block @titanium-wall-large
    23 label *label12
    24 set *tmp2 0x00000020
    25 jump *label4 always
    26 label *label11
-    * jump *label13 notEqual :identifyBlock:block @plastanium-wall
+   27 jump *label13 notEqual :block @plastanium-wall
    28 label *label14
    29 set *tmp2 0x00000040
    30 jump *label4 always
    31 label *label13
-    * jump *label15 notEqual :identifyBlock:block @plastanium-wall-large
+   32 jump *label15 notEqual :block @plastanium-wall-large
    33 label *label16
    34 set *tmp2 0x00000080
    35 jump *label4 always
    36 label *label15
-    * jump *label17 notEqual :identifyBlock:block @thorium-wall
+   37 jump *label17 notEqual :block @thorium-wall
    38 label *label18
    39 set *tmp2 0x00000100
    40 jump *label4 always
    41 label *label17
-    * jump *label19 notEqual :identifyBlock:block @thorium-wall-large
+   42 jump *label19 notEqual :block @thorium-wall-large
    43 label *label20
    44 set *tmp2 0x00000200
    45 jump *label4 always
    46 label *label19
-    * jump *label21 notEqual :identifyBlock:block @phase-wall
+   47 jump *label21 notEqual :block @phase-wall
    48 label *label22
    49 set *tmp2 0x00000400
    50 jump *label4 always
    51 label *label21
-    * jump *label23 notEqual :identifyBlock:block @phase-wall-large
+   52 jump *label23 notEqual :block @phase-wall-large
    53 label *label24
    54 set *tmp2 0x00000800
    55 jump *label4 always
    56 label *label23
-    * jump *label25 notEqual :identifyBlock:block @surge-wall
+   57 jump *label25 notEqual :block @surge-wall
    58 label *label26
    59 set *tmp2 0x00001000
    60 jump *label4 always
    61 label *label25
-    * jump *label27 notEqual :identifyBlock:block @surge-wall-large
+   62 jump *label27 notEqual :block @surge-wall-large
    63 label *label28
    64 set *tmp2 0x00002000
    65 jump *label4 always
    66 label *label27
-    * jump *label29 notEqual :identifyBlock:block @scrap-wall
+   67 jump *label29 notEqual :block @scrap-wall
    68 label *label30
    69 set *tmp2 0x00004000
    70 jump *label4 always
    71 label *label29
-    * jump *label31 notEqual :identifyBlock:block @scrap-wall-large
+   72 jump *label31 notEqual :block @scrap-wall-large
    73 label *label32
    74 set *tmp2 0x00008000
    75 jump *label4 always
    76 label *label31
-    * jump *label33 notEqual :identifyBlock:block @scrap-wall-huge
+   77 jump *label33 notEqual :block @scrap-wall-huge
    78 label *label34
    79 set *tmp2 0x00010000
    80 jump *label4 always
    81 label *label33
-    * jump *label35 notEqual :identifyBlock:block @scrap-wall-gigantic
+   82 jump *label35 notEqual :block @scrap-wall-gigantic
    83 label *label36
    84 set *tmp2 0x00020000
    85 jump *label4 always
    86 label *label35
-    * jump *label37 notEqual :identifyBlock:block @tungsten-wall
+   87 jump *label37 notEqual :block @tungsten-wall
    88 label *label38
    89 set *tmp2 0x00040000
    90 jump *label4 always
    91 label *label37
-    * jump *label39 notEqual :identifyBlock:block @tungsten-wall-large
+   92 jump *label39 notEqual :block @tungsten-wall-large
    93 label *label40
    94 set *tmp2 0x00080000
    95 jump *label4 always
    96 label *label39
-    * jump *label41 notEqual :identifyBlock:block @beryllium-wall
+   97 jump *label41 notEqual :block @beryllium-wall
    98 label *label42
    99 set *tmp2 0x00100000
   100 jump *label4 always
   101 label *label41
-    * jump *label43 notEqual :identifyBlock:block @beryllium-wall-large
+  102 jump *label43 notEqual :block @beryllium-wall-large
   103 label *label44
   104 set *tmp2 0x00200000
   105 jump *label4 always
   106 label *label43
-    * jump *label45 notEqual :identifyBlock:block @carbide-wall
+  107 jump *label45 notEqual :block @carbide-wall
   108 label *label46
   109 set *tmp2 0x00400000
   110 jump *label4 always
   111 label *label45
-    * jump *label47 notEqual :identifyBlock:block @carbide-wall-large
+  112 jump *label47 notEqual :block @carbide-wall-large
   113 label *label48
   114 set *tmp2 0x00800000
   115 jump *label4 always
   116 label *label47
-    * jump *label49 notEqual :identifyBlock:block @reinforced-surge-wall
+  117 jump *label49 notEqual :block @reinforced-surge-wall
   118 label *label50
   119 set *tmp2 0x01000000
   120 jump *label4 always
   121 label *label49
-    * jump *label51 notEqual :identifyBlock:block @reinforced-surge-wall-large
+  122 jump *label51 notEqual :block @reinforced-surge-wall-large
   123 label *label52
   124 set *tmp2 0x02000000
   125 jump *label4 always
 
   128 label *label4
   129 set *tmp1 *tmp2
   130 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  131 set :bit *tmp2
+  132 op and *tmp4 :total *tmp1
   133 jump *label53 equal *tmp4 false
   134 op or :total :total 0x800000000
   135 jump *label54 always
   136 label *label53
-    * op or :total :total :bit
+  137 op or :total :total *tmp1
   138 label *label54
   139 label *label1
   140 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 jump *label2 greaterThanEq :i 240
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     6 jump *label5 notEqual :block @copper-wall
     7 label *label6
     8 set *tmp2 0x00000004
 
   127 label *label4
   128 set *tmp1 *tmp2
   129 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  130 op and *tmp4 :total *tmp2
   131 jump *label53 equal *tmp4 false
   132 op or :total :total 0x800000000
   133 jump *label54 always
   134 label *label53
-    * op or :total :total *tmp1
+  135 op or :total :total *tmp2
   136 label *label54
   137 label *label1
   138 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   125 label *label51
   126 set *tmp2 0
   127 label *label4
-    * set *tmp1 *tmp2
   128 label *label3
   129 op and *tmp4 :total *tmp2
   130 jump *label53 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i 240
+    3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 jump *label5 notEqual :block @copper-wall
 
   135 label *label54
   136 label *label1
   137 op add :i :i 1
-    * jump *label0 always
+  138 jump *label55 lessThan :i 240
   139 label *label2
   140 assertequals 0x03FFFFFC :total "Test selected blocks"
   141 end

Modifications by Convert case at line 5:5 (segments: 4) (+12 instructions):
 
     3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * jump *label5 notEqual :block @copper-wall
+    6 sensor *tmp6 :block @id
+    7 jump *label57 greaterThanEq *tmp6 35
+    8 jump *label56 lessThan *tmp6 17
+    9 multijump *label58 *tmp6 17 (m:*label76)
+   10 multilabel *label58 (m:*label76)
+   11 jump *label6 always
+   12 multilabel *label59 (m:*label76)
+   13 jump *label8 always
+   14 multilabel *label60 (m:*label76)
+   15 jump *label10 always
+   16 multilabel *label61 (m:*label76)
+   17 jump *label12 always
+   18 multilabel *label62 (m:*label76)
+   19 jump *label14 always
+   20 multilabel *label63 (m:*label76)
+   21 jump *label16 always
+   22 multilabel *label64 (m:*label76)
+   23 jump *label18 always
+   24 multilabel *label65 (m:*label76)
+   25 jump *label20 always
+   26 multilabel *label66 (m:*label76)
+   27 jump *label22 always
+   28 multilabel *label67 (m:*label76)
+   29 jump *label24 always
+   30 multilabel *label68 (m:*label76)
+   31 jump *label26 always
+   32 multilabel *label69 (m:*label76)
+   33 jump *label28 always
+   34 multilabel *label70 (m:*label76)
+   35 jump *label56 always
+   36 multilabel *label71 (m:*label76)
+   37 jump *label56 always
+   38 multilabel *label72 (m:*label76)
+   39 jump *label30 always
+   40 multilabel *label73 (m:*label76)
+   41 jump *label32 always
+   42 multilabel *label74 (m:*label76)
+   43 jump *label34 always
+   44 multilabel *label75 (m:*label76)
+   45 jump *label36 always
+   46 label *label57
+   47 jump *label77 greaterThanEq *tmp6 206
+   48 jump *label38 equal *tmp6 203
+   49 jump *label40 equal *tmp6 204
+   50 jump *label56 always
+   51 label *label77
+   52 jump *label78 greaterThanEq *tmp6 222
+   53 jump *label42 equal *tmp6 206
+   54 jump *label44 equal *tmp6 207
+   55 jump *label46 equal *tmp6 220
+   56 jump *label48 equal *tmp6 221
+   57 jump *label56 always
+   58 label *label78
+   59 jump *label50 equal *tmp6 225
+   60 jump *label52 equal *tmp6 234
+   61 jump *label56 always
    62 label *label6
    63 set *tmp2 0x00000004
    64 jump *label4 always
    65 label *label5
-    * jump *label7 notEqual :block @copper-wall-large
    66 label *label8
    67 set *tmp2 0x00000008
    68 jump *label4 always
    69 label *label7
-    * jump *label9 notEqual :block @titanium-wall
    70 label *label10
    71 set *tmp2 0x00000010
    72 jump *label4 always
    73 label *label9
-    * jump *label11 notEqual :block @titanium-wall-large
    74 label *label12
    75 set *tmp2 0x00000020
    76 jump *label4 always
    77 label *label11
-    * jump *label13 notEqual :block @plastanium-wall
    78 label *label14
    79 set *tmp2 0x00000040
    80 jump *label4 always
    81 label *label13
-    * jump *label15 notEqual :block @plastanium-wall-large
    82 label *label16
    83 set *tmp2 0x00000080
    84 jump *label4 always
    85 label *label15
-    * jump *label17 notEqual :block @thorium-wall
    86 label *label18
    87 set *tmp2 0x00000100
    88 jump *label4 always
    89 label *label17
-    * jump *label19 notEqual :block @thorium-wall-large
    90 label *label20
    91 set *tmp2 0x00000200
    92 jump *label4 always
    93 label *label19
-    * jump *label21 notEqual :block @phase-wall
    94 label *label22
    95 set *tmp2 0x00000400
    96 jump *label4 always
    97 label *label21
-    * jump *label23 notEqual :block @phase-wall-large
    98 label *label24
    99 set *tmp2 0x00000800
   100 jump *label4 always
   101 label *label23
-    * jump *label25 notEqual :block @surge-wall
   102 label *label26
   103 set *tmp2 0x00001000
   104 jump *label4 always
   105 label *label25
-    * jump *label27 notEqual :block @surge-wall-large
   106 label *label28
   107 set *tmp2 0x00002000
   108 jump *label4 always
   109 label *label27
-    * jump *label29 notEqual :block @scrap-wall
   110 label *label30
   111 set *tmp2 0x00004000
   112 jump *label4 always
   113 label *label29
-    * jump *label31 notEqual :block @scrap-wall-large
   114 label *label32
   115 set *tmp2 0x00008000
   116 jump *label4 always
   117 label *label31
-    * jump *label33 notEqual :block @scrap-wall-huge
   118 label *label34
   119 set *tmp2 0x00010000
   120 jump *label4 always
   121 label *label33
-    * jump *label35 notEqual :block @scrap-wall-gigantic
   122 label *label36
   123 set *tmp2 0x00020000
   124 jump *label4 always
   125 label *label35
-    * jump *label37 notEqual :block @tungsten-wall
   126 label *label38
   127 set *tmp2 0x00040000
   128 jump *label4 always
   129 label *label37
-    * jump *label39 notEqual :block @tungsten-wall-large
   130 label *label40
   131 set *tmp2 0x00080000
   132 jump *label4 always
   133 label *label39
-    * jump *label41 notEqual :block @beryllium-wall
   134 label *label42
   135 set *tmp2 0x00100000
   136 jump *label4 always
   137 label *label41
-    * jump *label43 notEqual :block @beryllium-wall-large
   138 label *label44
   139 set *tmp2 0x00200000
   140 jump *label4 always
   141 label *label43
-    * jump *label45 notEqual :block @carbide-wall
   142 label *label46
   143 set *tmp2 0x00400000
   144 jump *label4 always
   145 label *label45
-    * jump *label47 notEqual :block @carbide-wall-large
   146 label *label48
   147 set *tmp2 0x00800000
   148 jump *label4 always
   149 label *label47
-    * jump *label49 notEqual :block @reinforced-surge-wall
   150 label *label50
   151 set *tmp2 0x01000000
   152 jump *label4 always
   153 label *label49
-    * jump *label51 notEqual :block @reinforced-surge-wall-large
   154 label *label52
   155 set *tmp2 0x02000000
   156 jump *label4 always
   157 label *label51
+  158 label *label56
   159 set *tmp2 0
   160 label *label4
   161 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label55
     3 lookup block :block :i
     4 # "Function: def identifyBlock(in block)"
 
    61 label *label6
    62 set *tmp2 0x00000004
    63 jump *label4 always
-    * label *label5
    64 label *label8
    65 set *tmp2 0x00000008
    66 jump *label4 always
-    * label *label7
    67 label *label10
    68 set *tmp2 0x00000010
    69 jump *label4 always
-    * label *label9
    70 label *label12
    71 set *tmp2 0x00000020
    72 jump *label4 always
-    * label *label11
    73 label *label14
    74 set *tmp2 0x00000040
    75 jump *label4 always
-    * label *label13
    76 label *label16
    77 set *tmp2 0x00000080
    78 jump *label4 always
-    * label *label15
    79 label *label18
    80 set *tmp2 0x00000100
    81 jump *label4 always
-    * label *label17
    82 label *label20
    83 set *tmp2 0x00000200
    84 jump *label4 always
-    * label *label19
    85 label *label22
    86 set *tmp2 0x00000400
    87 jump *label4 always
-    * label *label21
    88 label *label24
    89 set *tmp2 0x00000800
    90 jump *label4 always
-    * label *label23
    91 label *label26
    92 set *tmp2 0x00001000
    93 jump *label4 always
-    * label *label25
    94 label *label28
    95 set *tmp2 0x00002000
    96 jump *label4 always
-    * label *label27
    97 label *label30
    98 set *tmp2 0x00004000
    99 jump *label4 always
-    * label *label29
   100 label *label32
   101 set *tmp2 0x00008000
   102 jump *label4 always
-    * label *label31
   103 label *label34
   104 set *tmp2 0x00010000
   105 jump *label4 always
-    * label *label33
   106 label *label36
   107 set *tmp2 0x00020000
   108 jump *label4 always
-    * label *label35
   109 label *label38
   110 set *tmp2 0x00040000
   111 jump *label4 always
-    * label *label37
   112 label *label40
   113 set *tmp2 0x00080000
   114 jump *label4 always
-    * label *label39
   115 label *label42
   116 set *tmp2 0x00100000
   117 jump *label4 always
-    * label *label41
   118 label *label44
   119 set *tmp2 0x00200000
   120 jump *label4 always
-    * label *label43
   121 label *label46
   122 set *tmp2 0x00400000
   123 jump *label4 always
-    * label *label45
   124 label *label48
   125 set *tmp2 0x00800000
   126 jump *label4 always
-    * label *label47
   127 label *label50
   128 set *tmp2 0x01000000
   129 jump *label4 always
-    * label *label49
   130 label *label52
   131 set *tmp2 0x02000000
   132 jump *label4 always
-    * label *label51
   133 label *label56
   134 set *tmp2 0
   135 label *label4
-    * label *label3
   136 op and *tmp4 :total *tmp2
   137 jump *label53 equal *tmp4 false
   138 op or :total :total 0x800000000
 
   140 label *label53
   141 op or :total :total *tmp2
   142 label *label54
-    * label *label1
   143 op add :i :i 1
   144 jump *label55 lessThan :i 240
-    * label *label2
   145 assertequals 0x03FFFFFC :total "Test selected blocks"
   146 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   143 op add :i :i 1
   144 jump *label55 lessThan :i 240
   145 assertequals 0x03FFFFFC :total "Test selected blocks"
-    * end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label55
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label57 greaterThanEq *tmp6 35
jump *label56 lessThan *tmp6 17
multijump *label58 *tmp6 17
multilabel *label58
jump *label6 always
multilabel *label59
jump *label8 always
multilabel *label60
jump *label10 always
multilabel *label61
jump *label12 always
multilabel *label62
jump *label14 always
multilabel *label63
jump *label16 always
multilabel *label64
jump *label18 always
multilabel *label65
jump *label20 always
multilabel *label66
jump *label22 always
multilabel *label67
jump *label24 always
multilabel *label68
jump *label26 always
multilabel *label69
jump *label28 always
multilabel *label70
jump *label56 always
multilabel *label71
jump *label56 always
multilabel *label72
jump *label30 always
multilabel *label73
jump *label32 always
multilabel *label74
jump *label34 always
multilabel *label75
jump *label36 always
label *label57
jump *label77 greaterThanEq *tmp6 206
jump *label38 equal *tmp6 203
jump *label40 equal *tmp6 204
jump *label56 always
label *label77
jump *label78 greaterThanEq *tmp6 222
jump *label42 equal *tmp6 206
jump *label44 equal *tmp6 207
jump *label46 equal *tmp6 220
jump *label48 equal *tmp6 221
jump *label56 always
label *label78
jump *label50 equal *tmp6 225
jump *label52 equal *tmp6 234
jump *label56 always
label *label6
set *tmp2 0x00000004
jump *label4 always
label *label8
set *tmp2 0x00000008
jump *label4 always
label *label10
set *tmp2 0x00000010
jump *label4 always
label *label12
set *tmp2 0x00000020
jump *label4 always
label *label14
set *tmp2 0x00000040
jump *label4 always
label *label16
set *tmp2 0x00000080
jump *label4 always
label *label18
set *tmp2 0x00000100
jump *label4 always
label *label20
set *tmp2 0x00000200
jump *label4 always
label *label22
set *tmp2 0x00000400
jump *label4 always
label *label24
set *tmp2 0x00000800
jump *label4 always
label *label26
set *tmp2 0x00001000
jump *label4 always
label *label28
set *tmp2 0x00002000
jump *label4 always
label *label30
set *tmp2 0x00004000
jump *label4 always
label *label32
set *tmp2 0x00008000
jump *label4 always
label *label34
set *tmp2 0x00010000
jump *label4 always
label *label36
set *tmp2 0x00020000
jump *label4 always
label *label38
set *tmp2 0x00040000
jump *label4 always
label *label40
set *tmp2 0x00080000
jump *label4 always
label *label42
set *tmp2 0x00100000
jump *label4 always
label *label44
set *tmp2 0x00200000
jump *label4 always
label *label46
set *tmp2 0x00400000
jump *label4 always
label *label48
set *tmp2 0x00800000
jump *label4 always
label *label50
set *tmp2 0x01000000
jump *label4 always
label *label52
set *tmp2 0x02000000
jump *label4 always
label *label56
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label53 equal *tmp4 false
op or :total :total 0x800000000
jump *label54 always
label *label53
op or :total :total *tmp2
label *label54
op add :i :i 1
jump *label55 lessThan :i 240
assertequals 0x03FFFFFC :total "Test selected blocks"
