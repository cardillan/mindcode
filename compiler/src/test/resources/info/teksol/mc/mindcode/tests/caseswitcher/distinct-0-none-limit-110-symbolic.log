   117 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    16 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    93 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 1):
  * Convert case at line 11:5 (segments: 30)                     size   -16, benefit     1048.3, efficiency   Infinity (-16 instructions)
  ! Convert case at line 11:5 (segments: 4)                      size    +9, benefit     1049.2, efficiency    116.581
  ! Convert case at line 11:5 (segments: 4, padded low)          size   +24, benefit     1051.1, efficiency     43.794
  ! Convert case at line 11:5 (segments: 1, padded both)         size  +214, benefit     1069.6, efficiency      4.998

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 set :block *tmp0
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @copper-wall
+    8 jump *label6 equal :identifyBlock:block @copper-wall
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000004
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @copper-wall-large
+   14 jump *label8 equal :identifyBlock:block @copper-wall-large
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000008
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @titanium-wall
+   20 jump *label10 equal :identifyBlock:block @titanium-wall
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000010
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall-large
+   26 jump *label12 equal :identifyBlock:block @titanium-wall-large
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000020
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @plastanium-wall
+   32 jump *label14 equal :identifyBlock:block @plastanium-wall
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000040
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall-large
+   38 jump *label16 equal :identifyBlock:block @plastanium-wall-large
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000080
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @thorium-wall
+   44 jump *label18 equal :identifyBlock:block @thorium-wall
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000100
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall-large
+   50 jump *label20 equal :identifyBlock:block @thorium-wall-large
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000200
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @phase-wall
+   56 jump *label22 equal :identifyBlock:block @phase-wall
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000400
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @phase-wall-large
+   62 jump *label24 equal :identifyBlock:block @phase-wall-large
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000800
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @surge-wall
+   68 jump *label26 equal :identifyBlock:block @surge-wall
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @surge-wall-large
+   74 jump *label28 equal :identifyBlock:block @surge-wall-large
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00002000
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @scrap-wall
+   80 jump *label30 equal :identifyBlock:block @scrap-wall
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00004000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall-large
+   86 jump *label32 equal :identifyBlock:block @scrap-wall-large
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00008000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-huge
+   92 jump *label34 equal :identifyBlock:block @scrap-wall-huge
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00010000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-gigantic
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00020000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @tungsten-wall
+  104 jump *label38 equal :identifyBlock:block @tungsten-wall
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00040000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall-large
+  110 jump *label40 equal :identifyBlock:block @tungsten-wall-large
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00080000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @beryllium-wall
+  116 jump *label42 equal :identifyBlock:block @beryllium-wall
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00100000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall-large
+  122 jump *label44 equal :identifyBlock:block @beryllium-wall-large
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00200000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @carbide-wall
+  128 jump *label46 equal :identifyBlock:block @carbide-wall
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00400000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall-large
+  134 jump *label48 equal :identifyBlock:block @carbide-wall-large
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00800000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @reinforced-surge-wall
+  140 jump *label50 equal :identifyBlock:block @reinforced-surge-wall
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x01000000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall-large
+  146 jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   157 op and *tmp4 :total :bit
   158 jump *label53 equal *tmp4 false
   159 op or :total :total 0x800000000
-    * set *tmp5 :total
   160 jump *label54 always
   161 label *label53
   162 op or :total :total :bit
-    * set *tmp5 :total
   163 label *label54
   164 label *label1
   165 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
     7 jump *label6 equal :identifyBlock:block @copper-wall

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @copper-wall
+    7 jump *label6 equal :block @copper-wall
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000004
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall-large
+   13 jump *label8 equal :block @copper-wall-large
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000008
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @titanium-wall
+   19 jump *label10 equal :block @titanium-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000010
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall-large
+   25 jump *label12 equal :block @titanium-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000020
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @plastanium-wall
+   31 jump *label14 equal :block @plastanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000040
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall-large
+   37 jump *label16 equal :block @plastanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000080
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @thorium-wall
+   43 jump *label18 equal :block @thorium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000100
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall-large
+   49 jump *label20 equal :block @thorium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000200
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @phase-wall
+   55 jump *label22 equal :block @phase-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000400
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall-large
+   61 jump *label24 equal :block @phase-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000800
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @surge-wall
+   67 jump *label26 equal :block @surge-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00001000
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall-large
+   73 jump *label28 equal :block @surge-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @scrap-wall
+   79 jump *label30 equal :block @scrap-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00004000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall-large
+   85 jump *label32 equal :block @scrap-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00008000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-huge
+   91 jump *label34 equal :block @scrap-wall-huge
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00010000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-gigantic
+   97 jump *label36 equal :block @scrap-wall-gigantic
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00020000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @tungsten-wall
+  103 jump *label38 equal :block @tungsten-wall
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00040000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall-large
+  109 jump *label40 equal :block @tungsten-wall-large
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00080000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @beryllium-wall
+  115 jump *label42 equal :block @beryllium-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00100000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall-large
+  121 jump *label44 equal :block @beryllium-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00200000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @carbide-wall
+  127 jump *label46 equal :block @carbide-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00400000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall-large
+  133 jump *label48 equal :block @carbide-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00800000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @reinforced-surge-wall
+  139 jump *label50 equal :block @reinforced-surge-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x01000000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall-large
+  145 jump *label52 equal :block @reinforced-surge-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x02000000
 
   152 label *label4
   153 set *tmp1 *tmp2
   154 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  155 set :bit *tmp2
+  156 op and *tmp4 :total *tmp1
   157 jump *label53 equal *tmp4 false
   158 op or :total :total 0x800000000
   159 jump *label54 always
   160 label *label53
-    * op or :total :total :bit
+  161 op or :total :total *tmp1
   162 label *label54
   163 label *label1
   164 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     6 jump *label6 equal :block @copper-wall
     7 jump *label5 always
     8 label *label6
 
   151 label *label4
   152 set *tmp1 *tmp2
   153 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  154 op and *tmp4 :total *tmp2
   155 jump *label53 equal *tmp4 false
   156 op or :total :total 0x800000000
   157 jump *label54 always
   158 label *label53
-    * op or :total :total *tmp1
+  159 op or :total :total *tmp2
   160 label *label54
   161 label *label1
   162 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   149 label *label51
   150 set *tmp2 0
   151 label *label4
-    * set *tmp1 *tmp2
   152 label *label3
   153 op and *tmp4 :total *tmp2
   154 jump *label53 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 jump *label6 equal :block @copper-wall
 
   159 label *label54
   160 label *label1
   161 op add :i :i 1
-    * jump *label0 always
+  162 jump *label55 lessThan :i @blockCount
   163 label *label2
   164 assertequals 0x03FFFFFC :total "Test selected blocks"
   165 end

Modifications by Convert case at line 11:5 (segments: 30) (-16 instructions):
 
     3 label *label55
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * jump *label6 equal :block @copper-wall
-    * jump *label5 always
+    6 sensor *tmp6 :block @id
+    7 jump *label57 greaterThanEq *tmp6 203
+    8 jump *label56 greaterThanEq *tmp6 35
+    9 jump *label56 lessThan *tmp6 17
+   10 jump *label58 greaterThanEq *tmp6 26
+   11 jump *label59 greaterThanEq *tmp6 21
+   12 jump *label60 greaterThanEq *tmp6 19
+   13 jump *label8 greaterThanEq *tmp6 18
    14 label *label6
-    * set *tmp2 0x00000004
-    * jump *label4 always
+   15 set *tmp2 0x00000004
+   16 jump *label4 always
+   17 label *label60
+   18 jump *label12 greaterThanEq *tmp6 20
+   19 label *label10
+   20 set *tmp2 0x00000010
+   21 jump *label4 always
+   22 label *label59
+   23 jump *label61 greaterThanEq *tmp6 23
+   24 jump *label16 greaterThanEq *tmp6 22
+   25 label *label14
+   26 set *tmp2 0x00000040
+   27 jump *label4 always
+   28 label *label61
+   29 jump *label18 lessThan *tmp6 24
+   30 jump *label22 greaterThanEq *tmp6 25
+   31 label *label20
+   32 set *tmp2 0x00000200
+   33 jump *label4 always
+   34 label *label58
+   35 jump *label62 greaterThanEq *tmp6 29
+   36 jump *label24 lessThan *tmp6 27
+   37 jump *label28 greaterThanEq *tmp6 28
+   38 label *label26
+   39 set *tmp2 0x00001000
+   40 jump *label4 always
+   41 label *label62
+   42 jump *label63 greaterThanEq *tmp6 32
+   43 jump *label56 lessThan *tmp6 31
+   44 label *label30
+   45 set *tmp2 0x00004000
+   46 jump *label4 always
+   47 label *label63
+   48 jump *label32 lessThan *tmp6 33
+   49 jump *label36 greaterThanEq *tmp6 34
+   50 label *label34
+   51 set *tmp2 0x00010000
+   52 jump *label4 always
+   53 label *label57
+   54 jump *label64 greaterThanEq *tmp6 234
+   55 jump *label65 greaterThanEq *tmp6 220
+   56 jump *label56 greaterThanEq *tmp6 208
+   57 jump *label66 greaterThanEq *tmp6 205
+   58 jump *label40 greaterThanEq *tmp6 204
+   59 label *label38
+   60 set *tmp2 0x00040000
+   61 jump *label4 always
+   62 label *label66
+   63 jump *label56 lessThan *tmp6 206
+   64 jump *label44 greaterThanEq *tmp6 207
+   65 label *label42
+   66 set *tmp2 0x00100000
+   67 jump *label4 always
+   68 label *label65
+   69 jump *label56 greaterThanEq *tmp6 226
+   70 jump *label67 greaterThanEq *tmp6 222
+   71 jump *label48 greaterThanEq *tmp6 221
+   72 label *label46
+   73 set *tmp2 0x00400000
+   74 jump *label4 always
+   75 label *label67
+   76 jump *label56 lessThan *tmp6 225
+   77 label *label50
+   78 set *tmp2 0x01000000
+   79 jump *label4 always
+   80 label *label64
+   81 jump *label56 greaterThanEq *tmp6 235
+   82 label *label52
+   83 set *tmp2 0x02000000
+   84 jump *label4 always
    85 label *label5
-    * jump *label8 equal :block @copper-wall-large
-    * jump *label7 always
    86 label *label8
    87 set *tmp2 0x00000008
    88 jump *label4 always
    89 label *label7
-    * jump *label10 equal :block @titanium-wall
-    * jump *label9 always
-    * label *label10
-    * set *tmp2 0x00000010
-    * jump *label4 always
    90 label *label9
-    * jump *label12 equal :block @titanium-wall-large
-    * jump *label11 always
    91 label *label12
    92 set *tmp2 0x00000020
    93 jump *label4 always
    94 label *label11
-    * jump *label14 equal :block @plastanium-wall
-    * jump *label13 always
-    * label *label14
-    * set *tmp2 0x00000040
-    * jump *label4 always
    95 label *label13
-    * jump *label16 equal :block @plastanium-wall-large
-    * jump *label15 always
    96 label *label16
    97 set *tmp2 0x00000080
    98 jump *label4 always
    99 label *label15
-    * jump *label18 equal :block @thorium-wall
-    * jump *label17 always
   100 label *label18
   101 set *tmp2 0x00000100
   102 jump *label4 always
   103 label *label17
-    * jump *label20 equal :block @thorium-wall-large
-    * jump *label19 always
-    * label *label20
-    * set *tmp2 0x00000200
-    * jump *label4 always
   104 label *label19
-    * jump *label22 equal :block @phase-wall
-    * jump *label21 always
   105 label *label22
   106 set *tmp2 0x00000400
   107 jump *label4 always
   108 label *label21
-    * jump *label24 equal :block @phase-wall-large
-    * jump *label23 always
   109 label *label24
   110 set *tmp2 0x00000800
   111 jump *label4 always
   112 label *label23
-    * jump *label26 equal :block @surge-wall
-    * jump *label25 always
-    * label *label26
-    * set *tmp2 0x00001000
-    * jump *label4 always
   113 label *label25
-    * jump *label28 equal :block @surge-wall-large
-    * jump *label27 always
   114 label *label28
   115 set *tmp2 0x00002000
   116 jump *label4 always
   117 label *label27
-    * jump *label30 equal :block @scrap-wall
-    * jump *label29 always
-    * label *label30
-    * set *tmp2 0x00004000
-    * jump *label4 always
   118 label *label29
-    * jump *label32 equal :block @scrap-wall-large
-    * jump *label31 always
   119 label *label32
   120 set *tmp2 0x00008000
   121 jump *label4 always
   122 label *label31
-    * jump *label34 equal :block @scrap-wall-huge
-    * jump *label33 always
-    * label *label34
-    * set *tmp2 0x00010000
-    * jump *label4 always
   123 label *label33
-    * jump *label36 equal :block @scrap-wall-gigantic
-    * jump *label35 always
   124 label *label36
   125 set *tmp2 0x00020000
   126 jump *label4 always
   127 label *label35
-    * jump *label38 equal :block @tungsten-wall
-    * jump *label37 always
-    * label *label38
-    * set *tmp2 0x00040000
-    * jump *label4 always
   128 label *label37
-    * jump *label40 equal :block @tungsten-wall-large
-    * jump *label39 always
   129 label *label40
   130 set *tmp2 0x00080000
   131 jump *label4 always
   132 label *label39
-    * jump *label42 equal :block @beryllium-wall
-    * jump *label41 always
-    * label *label42
-    * set *tmp2 0x00100000
-    * jump *label4 always
   133 label *label41
-    * jump *label44 equal :block @beryllium-wall-large
-    * jump *label43 always
   134 label *label44
   135 set *tmp2 0x00200000
   136 jump *label4 always
   137 label *label43
-    * jump *label46 equal :block @carbide-wall
-    * jump *label45 always
-    * label *label46
-    * set *tmp2 0x00400000
-    * jump *label4 always
   138 label *label45
-    * jump *label48 equal :block @carbide-wall-large
-    * jump *label47 always
   139 label *label48
   140 set *tmp2 0x00800000
   141 jump *label4 always
   142 label *label47
-    * jump *label50 equal :block @reinforced-surge-wall
-    * jump *label49 always
-    * label *label50
-    * set *tmp2 0x01000000
-    * jump *label4 always
   143 label *label49
-    * jump *label52 equal :block @reinforced-surge-wall-large
-    * jump *label51 always
-    * label *label52
-    * set *tmp2 0x02000000
-    * jump *label4 always
   144 label *label51
+  145 label *label56
   146 set *tmp2 0
   147 label *label4
   148 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label55
     3 lookup block :block :i
     4 # "Function: def identifyBlock(in block)"
 
    10 jump *label59 greaterThanEq *tmp6 21
    11 jump *label60 greaterThanEq *tmp6 19
    12 jump *label8 greaterThanEq *tmp6 18
-    * label *label6
    13 set *tmp2 0x00000004
    14 jump *label4 always
    15 label *label60
    16 jump *label12 greaterThanEq *tmp6 20
-    * label *label10
    17 set *tmp2 0x00000010
    18 jump *label4 always
    19 label *label59
    20 jump *label61 greaterThanEq *tmp6 23
    21 jump *label16 greaterThanEq *tmp6 22
-    * label *label14
    22 set *tmp2 0x00000040
    23 jump *label4 always
    24 label *label61
    25 jump *label18 lessThan *tmp6 24
    26 jump *label22 greaterThanEq *tmp6 25
-    * label *label20
    27 set *tmp2 0x00000200
    28 jump *label4 always
    29 label *label58
    30 jump *label62 greaterThanEq *tmp6 29
    31 jump *label24 lessThan *tmp6 27
    32 jump *label28 greaterThanEq *tmp6 28
-    * label *label26
    33 set *tmp2 0x00001000
    34 jump *label4 always
    35 label *label62
    36 jump *label63 greaterThanEq *tmp6 32
    37 jump *label56 lessThan *tmp6 31
-    * label *label30
    38 set *tmp2 0x00004000
    39 jump *label4 always
    40 label *label63
    41 jump *label32 lessThan *tmp6 33
    42 jump *label36 greaterThanEq *tmp6 34
-    * label *label34
    43 set *tmp2 0x00010000
    44 jump *label4 always
    45 label *label57
 
    48 jump *label56 greaterThanEq *tmp6 208
    49 jump *label66 greaterThanEq *tmp6 205
    50 jump *label40 greaterThanEq *tmp6 204
-    * label *label38
    51 set *tmp2 0x00040000
    52 jump *label4 always
    53 label *label66
    54 jump *label56 lessThan *tmp6 206
    55 jump *label44 greaterThanEq *tmp6 207
-    * label *label42
    56 set *tmp2 0x00100000
    57 jump *label4 always
    58 label *label65
    59 jump *label56 greaterThanEq *tmp6 226
    60 jump *label67 greaterThanEq *tmp6 222
    61 jump *label48 greaterThanEq *tmp6 221
-    * label *label46
    62 set *tmp2 0x00400000
    63 jump *label4 always
    64 label *label67
    65 jump *label56 lessThan *tmp6 225
-    * label *label50
    66 set *tmp2 0x01000000
    67 jump *label4 always
    68 label *label64
    69 jump *label56 greaterThanEq *tmp6 235
-    * label *label52
    70 set *tmp2 0x02000000
    71 jump *label4 always
-    * label *label5
    72 label *label8
    73 set *tmp2 0x00000008
    74 jump *label4 always
-    * label *label7
-    * label *label9
    75 label *label12
    76 set *tmp2 0x00000020
    77 jump *label4 always
-    * label *label11
-    * label *label13
    78 label *label16
    79 set *tmp2 0x00000080
    80 jump *label4 always
-    * label *label15
    81 label *label18
    82 set *tmp2 0x00000100
    83 jump *label4 always
-    * label *label17
-    * label *label19
    84 label *label22
    85 set *tmp2 0x00000400
    86 jump *label4 always
-    * label *label21
    87 label *label24
    88 set *tmp2 0x00000800
    89 jump *label4 always
-    * label *label23
-    * label *label25
    90 label *label28
    91 set *tmp2 0x00002000
    92 jump *label4 always
-    * label *label27
-    * label *label29
    93 label *label32
    94 set *tmp2 0x00008000
    95 jump *label4 always
-    * label *label31
-    * label *label33
    96 label *label36
    97 set *tmp2 0x00020000
    98 jump *label4 always
-    * label *label35
-    * label *label37
    99 label *label40
   100 set *tmp2 0x00080000
   101 jump *label4 always
-    * label *label39
-    * label *label41
   102 label *label44
   103 set *tmp2 0x00200000
   104 jump *label4 always
-    * label *label43
-    * label *label45
   105 label *label48
   106 set *tmp2 0x00800000
   107 jump *label4 always
-    * label *label47
-    * label *label49
-    * label *label51
   108 label *label56
   109 set *tmp2 0
   110 label *label4
-    * label *label3
   111 op and *tmp4 :total *tmp2
   112 jump *label53 equal *tmp4 false
   113 op or :total :total 0x800000000
 
   115 label *label53
   116 op or :total :total *tmp2
   117 label *label54
-    * label *label1
   118 op add :i :i 1
   119 jump *label55 lessThan :i @blockCount
-    * label *label2
   120 assertequals 0x03FFFFFC :total "Test selected blocks"
   121 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label55
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label57 greaterThanEq *tmp6 203
jump *label56 greaterThanEq *tmp6 35
jump *label56 lessThan *tmp6 17
jump *label58 greaterThanEq *tmp6 26
jump *label59 greaterThanEq *tmp6 21
jump *label60 greaterThanEq *tmp6 19
jump *label8 greaterThanEq *tmp6 18
set *tmp2 0x00000004
jump *label4 always
label *label60
jump *label12 greaterThanEq *tmp6 20
set *tmp2 0x00000010
jump *label4 always
label *label59
jump *label61 greaterThanEq *tmp6 23
jump *label16 greaterThanEq *tmp6 22
set *tmp2 0x00000040
jump *label4 always
label *label61
jump *label18 lessThan *tmp6 24
jump *label22 greaterThanEq *tmp6 25
set *tmp2 0x00000200
jump *label4 always
label *label58
jump *label62 greaterThanEq *tmp6 29
jump *label24 lessThan *tmp6 27
jump *label28 greaterThanEq *tmp6 28
set *tmp2 0x00001000
jump *label4 always
label *label62
jump *label63 greaterThanEq *tmp6 32
jump *label56 lessThan *tmp6 31
set *tmp2 0x00004000
jump *label4 always
label *label63
jump *label32 lessThan *tmp6 33
jump *label36 greaterThanEq *tmp6 34
set *tmp2 0x00010000
jump *label4 always
label *label57
jump *label64 greaterThanEq *tmp6 234
jump *label65 greaterThanEq *tmp6 220
jump *label56 greaterThanEq *tmp6 208
jump *label66 greaterThanEq *tmp6 205
jump *label40 greaterThanEq *tmp6 204
set *tmp2 0x00040000
jump *label4 always
label *label66
jump *label56 lessThan *tmp6 206
jump *label44 greaterThanEq *tmp6 207
set *tmp2 0x00100000
jump *label4 always
label *label65
jump *label56 greaterThanEq *tmp6 226
jump *label67 greaterThanEq *tmp6 222
jump *label48 greaterThanEq *tmp6 221
set *tmp2 0x00400000
jump *label4 always
label *label67
jump *label56 lessThan *tmp6 225
set *tmp2 0x01000000
jump *label4 always
label *label64
jump *label56 greaterThanEq *tmp6 235
set *tmp2 0x02000000
jump *label4 always
label *label8
set *tmp2 0x00000008
jump *label4 always
label *label12
set *tmp2 0x00000020
jump *label4 always
label *label16
set *tmp2 0x00000080
jump *label4 always
label *label18
set *tmp2 0x00000100
jump *label4 always
label *label22
set *tmp2 0x00000400
jump *label4 always
label *label24
set *tmp2 0x00000800
jump *label4 always
label *label28
set *tmp2 0x00002000
jump *label4 always
label *label32
set *tmp2 0x00008000
jump *label4 always
label *label36
set *tmp2 0x00020000
jump *label4 always
label *label40
set *tmp2 0x00080000
jump *label4 always
label *label44
set *tmp2 0x00200000
jump *label4 always
label *label48
set *tmp2 0x00800000
jump *label4 always
label *label56
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label53 equal *tmp4 false
op or :total :total 0x800000000
jump *label54 always
label *label53
op or :total :total *tmp2
label *label54
op add :i :i 1
jump *label55 lessThan :i @blockCount
assertequals 0x03FFFFFC :total "Test selected blocks"
end
