    44 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (2 iterations).
     2 instructions eliminated by Data Flow Optimization (4 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Stack Optimization.
    31 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
     1 set :fib:n 10
     2 callrec bank1 *label0 *label1 :fib*retval
     3 label *label1
-    * set *tmp0 :fib*retval
-    * assertequals 55 *tmp0 "fib(10)"
+    4 assertequals 55 :fib*retval "fib(10)"
     5 stop
     6 end
     7 label *label0
 
    25 label *label6
    26 pop bank1 *tmp4
    27 pop bank1 :fib:n
-    * set *tmp6 :fib*retval
-    * op add *tmp7 *tmp4 *tmp6
-    * set *tmp2 *tmp7
+   28 op add *tmp2 *tmp4 :fib*retval
    29 label *label4
    30 set :fib*retval *tmp2
    31 label *label2

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
     5 stop
     6 end
     7 label *label0
-    * op lessThan *tmp1 :fib:n 2
-    * jump *label3 equal *tmp1 false
+    8 jump *label3 greaterThanEq :fib:n 2
     9 set *tmp2 :fib:n
    10 jump *label4 always
    11 label *label3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    11 label *label3
    12 op sub *tmp3 :fib:n 1
    13 push bank1 :fib:n
-    * set :fib:n *tmp3
+   14 op sub :fib:n :fib:n 1
    15 callrec bank1 *label0 *label5 :fib*retval
    16 label *label5
    17 pop bank1 :fib:n
 
    19 op sub *tmp5 :fib:n 2
    20 push bank1 :fib:n
    21 push bank1 *tmp4
-    * set :fib:n *tmp5
+   22 op sub :fib:n :fib:n 2
    23 callrec bank1 *label0 *label6 :fib*retval
    24 label *label6
    25 pop bank1 *tmp4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     9 set *tmp2 :fib:n
    10 jump *label4 always
    11 label *label3
-    * op sub *tmp3 :fib:n 1
    12 push bank1 :fib:n
    13 op sub :fib:n :fib:n 1
    14 callrec bank1 *label0 *label5 :fib*retval
    15 label *label5
    16 pop bank1 :fib:n
    17 set *tmp4 :fib*retval
-    * op sub *tmp5 :fib:n 2
    18 push bank1 :fib:n
    19 push bank1 *tmp4
    20 op sub :fib:n :fib:n 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
     5 stop
     6 end
     7 label *label0
-    * jump *label3 greaterThanEq :fib:n 2
-    * set *tmp2 :fib:n
-    * jump *label4 always
+    8 set :fib*retval :fib:n
+    9 jump *label4 lessThan :fib:n 2
    10 label *label3
    11 push bank1 :fib:n
    12 op sub :fib:n :fib:n 1
 
    21 label *label6
    22 pop bank1 *tmp4
    23 pop bank1 :fib:n
-    * op add *tmp2 *tmp4 :fib*retval
+   24 op add :fib*retval *tmp4 :fib*retval
    25 label *label4
-    * set :fib*retval *tmp2
    26 label *label2
    27 returnrec bank1
    28 end

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
     7 label *label0
     8 set :fib*retval :fib:n
     9 jump *label4 lessThan :fib:n 2
-    * label *label3
    10 push bank1 :fib:n
    11 op sub :fib:n :fib:n 1
    12 callrec bank1 *label0 *label5 :fib*retval
 
    22 pop bank1 :fib:n
    23 op add :fib*retval *tmp4 :fib*retval
    24 label *label4
-    * label *label2
    25 returnrec bank1
    26 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1 (-1 instructions):
 
    23 op add :fib*retval *tmp4 :fib*retval
    24 label *label4
    25 returnrec bank1
-    * end

Modifications by Final phase, Stack Optimization, iteration 1 (-4 instructions):
 
    13 label *label5
    14 pop bank1 :fib:n
    15 set *tmp4 :fib*retval
-    * push bank1 :fib:n
    16 push bank1 *tmp4
    17 op sub :fib:n :fib:n 2
    18 callrec bank1 *label0 *label6 :fib*retval
    19 label *label6
    20 pop bank1 *tmp4
-    * pop bank1 :fib:n
    21 op add :fib*retval *tmp4 :fib*retval
    22 label *label4
    23 returnrec bank1

Final code before resolving virtual instructions:

set *sp 0
set :fib:n 10
callrec bank1 *label0 *label1 :fib*retval
label *label1
assertequals 55 :fib*retval "fib(10)"
stop
end
label *label0
set :fib*retval :fib:n
jump *label4 lessThan :fib:n 2
push bank1 :fib:n
op sub :fib:n :fib:n 1
callrec bank1 *label0 *label5 :fib*retval
label *label5
pop bank1 :fib:n
set *tmp4 :fib*retval
push bank1 *tmp4
op sub :fib:n :fib:n 2
callrec bank1 *label0 *label6 :fib*retval
label *label6
pop bank1 *tmp4
op add :fib*retval *tmp4 :fib*retval
label *label4
returnrec bank1
