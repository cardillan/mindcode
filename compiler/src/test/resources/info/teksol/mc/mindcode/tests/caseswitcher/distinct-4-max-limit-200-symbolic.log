   130 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    71 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    26 instructions eliminated by Jump Straightening (4 iterations).
   166 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 104):
  o Convert case at line 6:5 (#5, segments: 6)                   size   +12, benefit      513.6, efficiency     42.796
  o Convert case at line 6:5 (#124, segments: 7)                 size   +14, benefit      517.3, efficiency     36.951
  o Convert case at line 6:5 (#243, segments: 8)                 size   +16, benefit      518.2, efficiency     32.386
  o Convert case at line 6:5 (#244, segments: 9)                 size   +18, benefit      518.4, efficiency     28.798
  o Convert case at line 6:5 (#136, segments: 5)                 size   +27, benefit      520.9, efficiency     19.291
  o Convert case at line 6:5 (#286, segments: 6)                 size   +29, benefit      521.7, efficiency     17.991
  o Convert case at line 6:5 (#289, segments: 7)                 size   +31, benefit      521.9, efficiency     16.836
  o Convert case at line 6:5 (#9, segments: 4)                   size   +41, benefit      522.6, efficiency     12.746
  o Convert case at line 6:5 (#44, segments: 5)                  size   +43, benefit      523.0, efficiency     12.162
  o Convert case at line 6:5 (#28, segments: 4)                  size   +49, benefit      524.8, efficiency     10.710
  * Convert case at line 6:5 (#2, segments: 3)                   size   +71, benefit      527.5, efficiency      7.430 (+71 instructions)
  ! Convert case at line 6:5 (#111, segments: 3)                 size  +192, benefit      557.8, efficiency      2.905
  ! Convert case at line 6:5 (#342, segments: 4)                 size  +194, benefit      559.1, efficiency      2.882
  ! Convert case at line 6:5 (#75, segments: 2)                  size  +202, benefit      561.9, efficiency      2.782
  ! Convert case at line 6:5 (#324, segments: 3)                 size  +204, benefit      564.1, efficiency      2.765
  ! Convert case at line 6:5 (#98, segments: 2)                  size  +205, benefit      565.7, efficiency      2.759
  ! Convert case at line 6:5 (#195, segments: 2)                 size  +213, benefit      568.8, efficiency      2.670
  ! Convert case at line 6:5 (#1, segments: 1)                   size  +235, benefit      593.7, efficiency      2.526

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     6 set :block *tmp0
     7 # "Function: def identifyBlock(in block)"
     8 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 strictEqual *tmp3 null
+    9 jump *label6 strictEqual :identifyBlock:block null
    10 jump *label5 always
    11 label *label6
    12 set *tmp2 0x00000001
    13 jump *label4 always
    14 label *label5
-    * jump *label8 equal *tmp3 @graphite-press
+   15 jump *label8 equal :identifyBlock:block @graphite-press
    16 jump *label7 always
    17 label *label8
    18 set *tmp2 0x00000002
    19 jump *label4 always
    20 label *label7
-    * jump *label10 equal *tmp3 @copper-wall
+   21 jump *label10 equal :identifyBlock:block @copper-wall
    22 jump *label9 always
    23 label *label10
    24 set *tmp2 0x00000004
    25 jump *label4 always
    26 label *label9
-    * jump *label12 equal *tmp3 @copper-wall-large
+   27 jump *label12 equal :identifyBlock:block @copper-wall-large
    28 jump *label11 always
    29 label *label12
    30 set *tmp2 0x00000008
    31 jump *label4 always
    32 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall
+   33 jump *label14 equal :identifyBlock:block @titanium-wall
    34 jump *label13 always
    35 label *label14
    36 set *tmp2 0x00000010
    37 jump *label4 always
    38 label *label13
-    * jump *label16 equal *tmp3 @titanium-wall-large
+   39 jump *label16 equal :identifyBlock:block @titanium-wall-large
    40 jump *label15 always
    41 label *label16
    42 set *tmp2 0x00000020
    43 jump *label4 always
    44 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall
+   45 jump *label18 equal :identifyBlock:block @plastanium-wall
    46 jump *label17 always
    47 label *label18
    48 set *tmp2 0x00000040
    49 jump *label4 always
    50 label *label17
-    * jump *label20 equal *tmp3 @plastanium-wall-large
+   51 jump *label20 equal :identifyBlock:block @plastanium-wall-large
    52 jump *label19 always
    53 label *label20
    54 set *tmp2 0x00000080
    55 jump *label4 always
    56 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall
+   57 jump *label22 equal :identifyBlock:block @thorium-wall
    58 jump *label21 always
    59 label *label22
    60 set *tmp2 0x00000100
    61 jump *label4 always
    62 label *label21
-    * jump *label24 equal *tmp3 @thorium-wall-large
+   63 jump *label24 equal :identifyBlock:block @thorium-wall-large
    64 jump *label23 always
    65 label *label24
    66 set *tmp2 0x00000200
    67 jump *label4 always
    68 label *label23
-    * jump *label26 equal *tmp3 @phase-wall
+   69 jump *label26 equal :identifyBlock:block @phase-wall
    70 jump *label25 always
    71 label *label26
    72 set *tmp2 0x00000400
    73 jump *label4 always
    74 label *label25
-    * jump *label28 equal *tmp3 @phase-wall-large
+   75 jump *label28 equal :identifyBlock:block @phase-wall-large
    76 jump *label27 always
    77 label *label28
    78 set *tmp2 0x00000800
    79 jump *label4 always
    80 label *label27
-    * jump *label30 equal *tmp3 @surge-wall
+   81 jump *label30 equal :identifyBlock:block @surge-wall
    82 jump *label29 always
    83 label *label30
    84 set *tmp2 0x00001000
    85 jump *label4 always
    86 label *label29
-    * jump *label32 equal *tmp3 @surge-wall-large
+   87 jump *label32 equal :identifyBlock:block @surge-wall-large
    88 jump *label31 always
    89 label *label32
    90 set *tmp2 0x00002000
    91 jump *label4 always
    92 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall
+   93 jump *label34 equal :identifyBlock:block @scrap-wall
    94 jump *label33 always
    95 label *label34
    96 set *tmp2 0x00004000
    97 jump *label4 always
    98 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-large
+   99 jump *label36 equal :identifyBlock:block @scrap-wall-large
   100 jump *label35 always
   101 label *label36
   102 set *tmp2 0x00008000
   103 jump *label4 always
   104 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-huge
+  105 jump *label38 equal :identifyBlock:block @scrap-wall-huge
   106 jump *label37 always
   107 label *label38
   108 set *tmp2 0x00010000
   109 jump *label4 always
   110 label *label37
-    * jump *label40 equal *tmp3 @scrap-wall-gigantic
+  111 jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
   112 jump *label39 always
   113 label *label40
   114 set *tmp2 0x00020000
   115 jump *label4 always
   116 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall
+  117 jump *label42 equal :identifyBlock:block @tungsten-wall
   118 jump *label41 always
   119 label *label42
   120 set *tmp2 0x00040000
   121 jump *label4 always
   122 label *label41
-    * jump *label44 equal *tmp3 @tungsten-wall-large
+  123 jump *label44 equal :identifyBlock:block @tungsten-wall-large
   124 jump *label43 always
   125 label *label44
   126 set *tmp2 0x00080000
   127 jump *label4 always
   128 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall
+  129 jump *label46 equal :identifyBlock:block @beryllium-wall
   130 jump *label45 always
   131 label *label46
   132 set *tmp2 0x00100000
   133 jump *label4 always
   134 label *label45
-    * jump *label48 equal *tmp3 @beryllium-wall-large
+  135 jump *label48 equal :identifyBlock:block @beryllium-wall-large
   136 jump *label47 always
   137 label *label48
   138 set *tmp2 0x00200000
   139 jump *label4 always
   140 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall
+  141 jump *label50 equal :identifyBlock:block @carbide-wall
   142 jump *label49 always
   143 label *label50
   144 set *tmp2 0x00400000
   145 jump *label4 always
   146 label *label49
-    * jump *label52 equal *tmp3 @carbide-wall-large
+  147 jump *label52 equal :identifyBlock:block @carbide-wall-large
   148 jump *label51 always
   149 label *label52
   150 set *tmp2 0x00800000
   151 jump *label4 always
   152 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall
+  153 jump *label54 equal :identifyBlock:block @reinforced-surge-wall
   154 jump *label53 always
   155 label *label54
   156 set *tmp2 0x01000000
   157 jump *label4 always
   158 label *label53
-    * jump *label56 equal *tmp3 @reinforced-surge-wall-large
+  159 jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
   160 jump *label55 always
   161 label *label56
   162 set *tmp2 0x02000000
   163 jump *label4 always
   164 label *label55
-    * jump *label58 equal *tmp3 @tile-logic-display
+  165 jump *label58 equal :identifyBlock:block @tile-logic-display
   166 jump *label57 always
   167 label *label58
   168 set *tmp2 0x04000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   176 op and *tmp4 :total :bit
   177 jump *label59 equal *tmp4 false
   178 op or :total :total 0x800000000
-    * set *tmp5 :total
   179 jump *label60 always
   180 label *label59
   181 op or :total :total :bit
-    * set *tmp5 :total
   182 label *label60
   183 label *label1
   184 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     2 set :i -1
     3 label *label0
     4 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    5 lookup block :block :i
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
     8 jump *label6 strictEqual :identifyBlock:block null

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-26 instructions):
 
    11 set *tmp2 0x00000001
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal :identifyBlock:block @graphite-press
-    * jump *label7 always
+   14 jump *label7 notEqual :identifyBlock:block @graphite-press
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall
-    * jump *label9 always
+   19 jump *label9 notEqual :identifyBlock:block @copper-wall
    20 label *label10
    21 set *tmp2 0x00000004
    22 jump *label4 always
    23 label *label9
-    * jump *label12 equal :identifyBlock:block @copper-wall-large
-    * jump *label11 always
+   24 jump *label11 notEqual :identifyBlock:block @copper-wall-large
    25 label *label12
    26 set *tmp2 0x00000008
    27 jump *label4 always
    28 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall
-    * jump *label13 always
+   29 jump *label13 notEqual :identifyBlock:block @titanium-wall
    30 label *label14
    31 set *tmp2 0x00000010
    32 jump *label4 always
    33 label *label13
-    * jump *label16 equal :identifyBlock:block @titanium-wall-large
-    * jump *label15 always
+   34 jump *label15 notEqual :identifyBlock:block @titanium-wall-large
    35 label *label16
    36 set *tmp2 0x00000020
    37 jump *label4 always
    38 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall
-    * jump *label17 always
+   39 jump *label17 notEqual :identifyBlock:block @plastanium-wall
    40 label *label18
    41 set *tmp2 0x00000040
    42 jump *label4 always
    43 label *label17
-    * jump *label20 equal :identifyBlock:block @plastanium-wall-large
-    * jump *label19 always
+   44 jump *label19 notEqual :identifyBlock:block @plastanium-wall-large
    45 label *label20
    46 set *tmp2 0x00000080
    47 jump *label4 always
    48 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall
-    * jump *label21 always
+   49 jump *label21 notEqual :identifyBlock:block @thorium-wall
    50 label *label22
    51 set *tmp2 0x00000100
    52 jump *label4 always
    53 label *label21
-    * jump *label24 equal :identifyBlock:block @thorium-wall-large
-    * jump *label23 always
+   54 jump *label23 notEqual :identifyBlock:block @thorium-wall-large
    55 label *label24
    56 set *tmp2 0x00000200
    57 jump *label4 always
    58 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall
-    * jump *label25 always
+   59 jump *label25 notEqual :identifyBlock:block @phase-wall
    60 label *label26
    61 set *tmp2 0x00000400
    62 jump *label4 always
    63 label *label25
-    * jump *label28 equal :identifyBlock:block @phase-wall-large
-    * jump *label27 always
+   64 jump *label27 notEqual :identifyBlock:block @phase-wall-large
    65 label *label28
    66 set *tmp2 0x00000800
    67 jump *label4 always
    68 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall
-    * jump *label29 always
+   69 jump *label29 notEqual :identifyBlock:block @surge-wall
    70 label *label30
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label29
-    * jump *label32 equal :identifyBlock:block @surge-wall-large
-    * jump *label31 always
+   74 jump *label31 notEqual :identifyBlock:block @surge-wall-large
    75 label *label32
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall
-    * jump *label33 always
+   79 jump *label33 notEqual :identifyBlock:block @scrap-wall
    80 label *label34
    81 set *tmp2 0x00004000
    82 jump *label4 always
    83 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-large
-    * jump *label35 always
+   84 jump *label35 notEqual :identifyBlock:block @scrap-wall-large
    85 label *label36
    86 set *tmp2 0x00008000
    87 jump *label4 always
    88 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-huge
-    * jump *label37 always
+   89 jump *label37 notEqual :identifyBlock:block @scrap-wall-huge
    90 label *label38
    91 set *tmp2 0x00010000
    92 jump *label4 always
    93 label *label37
-    * jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
-    * jump *label39 always
+   94 jump *label39 notEqual :identifyBlock:block @scrap-wall-gigantic
    95 label *label40
    96 set *tmp2 0x00020000
    97 jump *label4 always
    98 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall
-    * jump *label41 always
+   99 jump *label41 notEqual :identifyBlock:block @tungsten-wall
   100 label *label42
   101 set *tmp2 0x00040000
   102 jump *label4 always
   103 label *label41
-    * jump *label44 equal :identifyBlock:block @tungsten-wall-large
-    * jump *label43 always
+  104 jump *label43 notEqual :identifyBlock:block @tungsten-wall-large
   105 label *label44
   106 set *tmp2 0x00080000
   107 jump *label4 always
   108 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall
-    * jump *label45 always
+  109 jump *label45 notEqual :identifyBlock:block @beryllium-wall
   110 label *label46
   111 set *tmp2 0x00100000
   112 jump *label4 always
   113 label *label45
-    * jump *label48 equal :identifyBlock:block @beryllium-wall-large
-    * jump *label47 always
+  114 jump *label47 notEqual :identifyBlock:block @beryllium-wall-large
   115 label *label48
   116 set *tmp2 0x00200000
   117 jump *label4 always
   118 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall
-    * jump *label49 always
+  119 jump *label49 notEqual :identifyBlock:block @carbide-wall
   120 label *label50
   121 set *tmp2 0x00400000
   122 jump *label4 always
   123 label *label49
-    * jump *label52 equal :identifyBlock:block @carbide-wall-large
-    * jump *label51 always
+  124 jump *label51 notEqual :identifyBlock:block @carbide-wall-large
   125 label *label52
   126 set *tmp2 0x00800000
   127 jump *label4 always
   128 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall
-    * jump *label53 always
+  129 jump *label53 notEqual :identifyBlock:block @reinforced-surge-wall
   130 label *label54
   131 set *tmp2 0x01000000
   132 jump *label4 always
   133 label *label53
-    * jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
-    * jump *label55 always
+  134 jump *label55 notEqual :identifyBlock:block @reinforced-surge-wall-large
   135 label *label56
   136 set *tmp2 0x02000000
   137 jump *label4 always
   138 label *label55
-    * jump *label58 equal :identifyBlock:block @tile-logic-display
-    * jump *label57 always
+  139 jump *label57 notEqual :identifyBlock:block @tile-logic-display
   140 label *label58
   141 set *tmp2 0x04000000
   142 jump *label4 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 lookup block :block :i
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * jump *label6 strictEqual :identifyBlock:block null
+    8 jump *label6 strictEqual :block null
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000001
    12 jump *label4 always
    13 label *label5
-    * jump *label7 notEqual :identifyBlock:block @graphite-press
+   14 jump *label7 notEqual :block @graphite-press
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label9 notEqual :identifyBlock:block @copper-wall
+   19 jump *label9 notEqual :block @copper-wall
    20 label *label10
    21 set *tmp2 0x00000004
    22 jump *label4 always
    23 label *label9
-    * jump *label11 notEqual :identifyBlock:block @copper-wall-large
+   24 jump *label11 notEqual :block @copper-wall-large
    25 label *label12
    26 set *tmp2 0x00000008
    27 jump *label4 always
    28 label *label11
-    * jump *label13 notEqual :identifyBlock:block @titanium-wall
+   29 jump *label13 notEqual :block @titanium-wall
    30 label *label14
    31 set *tmp2 0x00000010
    32 jump *label4 always
    33 label *label13
-    * jump *label15 notEqual :identifyBlock:block @titanium-wall-large
+   34 jump *label15 notEqual :block @titanium-wall-large
    35 label *label16
    36 set *tmp2 0x00000020
    37 jump *label4 always
    38 label *label15
-    * jump *label17 notEqual :identifyBlock:block @plastanium-wall
+   39 jump *label17 notEqual :block @plastanium-wall
    40 label *label18
    41 set *tmp2 0x00000040
    42 jump *label4 always
    43 label *label17
-    * jump *label19 notEqual :identifyBlock:block @plastanium-wall-large
+   44 jump *label19 notEqual :block @plastanium-wall-large
    45 label *label20
    46 set *tmp2 0x00000080
    47 jump *label4 always
    48 label *label19
-    * jump *label21 notEqual :identifyBlock:block @thorium-wall
+   49 jump *label21 notEqual :block @thorium-wall
    50 label *label22
    51 set *tmp2 0x00000100
    52 jump *label4 always
    53 label *label21
-    * jump *label23 notEqual :identifyBlock:block @thorium-wall-large
+   54 jump *label23 notEqual :block @thorium-wall-large
    55 label *label24
    56 set *tmp2 0x00000200
    57 jump *label4 always
    58 label *label23
-    * jump *label25 notEqual :identifyBlock:block @phase-wall
+   59 jump *label25 notEqual :block @phase-wall
    60 label *label26
    61 set *tmp2 0x00000400
    62 jump *label4 always
    63 label *label25
-    * jump *label27 notEqual :identifyBlock:block @phase-wall-large
+   64 jump *label27 notEqual :block @phase-wall-large
    65 label *label28
    66 set *tmp2 0x00000800
    67 jump *label4 always
    68 label *label27
-    * jump *label29 notEqual :identifyBlock:block @surge-wall
+   69 jump *label29 notEqual :block @surge-wall
    70 label *label30
    71 set *tmp2 0x00001000
    72 jump *label4 always
    73 label *label29
-    * jump *label31 notEqual :identifyBlock:block @surge-wall-large
+   74 jump *label31 notEqual :block @surge-wall-large
    75 label *label32
    76 set *tmp2 0x00002000
    77 jump *label4 always
    78 label *label31
-    * jump *label33 notEqual :identifyBlock:block @scrap-wall
+   79 jump *label33 notEqual :block @scrap-wall
    80 label *label34
    81 set *tmp2 0x00004000
    82 jump *label4 always
    83 label *label33
-    * jump *label35 notEqual :identifyBlock:block @scrap-wall-large
+   84 jump *label35 notEqual :block @scrap-wall-large
    85 label *label36
    86 set *tmp2 0x00008000
    87 jump *label4 always
    88 label *label35
-    * jump *label37 notEqual :identifyBlock:block @scrap-wall-huge
+   89 jump *label37 notEqual :block @scrap-wall-huge
    90 label *label38
    91 set *tmp2 0x00010000
    92 jump *label4 always
    93 label *label37
-    * jump *label39 notEqual :identifyBlock:block @scrap-wall-gigantic
+   94 jump *label39 notEqual :block @scrap-wall-gigantic
    95 label *label40
    96 set *tmp2 0x00020000
    97 jump *label4 always
    98 label *label39
-    * jump *label41 notEqual :identifyBlock:block @tungsten-wall
+   99 jump *label41 notEqual :block @tungsten-wall
   100 label *label42
   101 set *tmp2 0x00040000
   102 jump *label4 always
   103 label *label41
-    * jump *label43 notEqual :identifyBlock:block @tungsten-wall-large
+  104 jump *label43 notEqual :block @tungsten-wall-large
   105 label *label44
   106 set *tmp2 0x00080000
   107 jump *label4 always
   108 label *label43
-    * jump *label45 notEqual :identifyBlock:block @beryllium-wall
+  109 jump *label45 notEqual :block @beryllium-wall
   110 label *label46
   111 set *tmp2 0x00100000
   112 jump *label4 always
   113 label *label45
-    * jump *label47 notEqual :identifyBlock:block @beryllium-wall-large
+  114 jump *label47 notEqual :block @beryllium-wall-large
   115 label *label48
   116 set *tmp2 0x00200000
   117 jump *label4 always
   118 label *label47
-    * jump *label49 notEqual :identifyBlock:block @carbide-wall
+  119 jump *label49 notEqual :block @carbide-wall
   120 label *label50
   121 set *tmp2 0x00400000
   122 jump *label4 always
   123 label *label49
-    * jump *label51 notEqual :identifyBlock:block @carbide-wall-large
+  124 jump *label51 notEqual :block @carbide-wall-large
   125 label *label52
   126 set *tmp2 0x00800000
   127 jump *label4 always
   128 label *label51
-    * jump *label53 notEqual :identifyBlock:block @reinforced-surge-wall
+  129 jump *label53 notEqual :block @reinforced-surge-wall
   130 label *label54
   131 set *tmp2 0x01000000
   132 jump *label4 always
   133 label *label53
-    * jump *label55 notEqual :identifyBlock:block @reinforced-surge-wall-large
+  134 jump *label55 notEqual :block @reinforced-surge-wall-large
   135 label *label56
   136 set *tmp2 0x02000000
   137 jump *label4 always
   138 label *label55
-    * jump *label57 notEqual :identifyBlock:block @tile-logic-display
+  139 jump *label57 notEqual :block @tile-logic-display
   140 label *label58
   141 set *tmp2 0x04000000
   142 jump *label4 always
 
   145 label *label4
   146 set *tmp1 *tmp2
   147 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  148 set :bit *tmp2
+  149 op and *tmp4 :total *tmp1
   150 jump *label59 equal *tmp4 false
   151 op or :total :total 0x800000000
   152 jump *label60 always
   153 label *label59
-    * op or :total :total :bit
+  154 op or :total :total *tmp1
   155 label *label60
   156 label *label1
   157 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     4 jump *label2 greaterThanEq :i @blockCount
     5 lookup block :block :i
     6 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     7 jump *label6 strictEqual :block null
     8 jump *label5 always
     9 label *label6
 
   144 label *label4
   145 set *tmp1 *tmp2
   146 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  147 op and *tmp4 :total *tmp2
   148 jump *label59 equal *tmp4 false
   149 op or :total :total 0x800000000
   150 jump *label60 always
   151 label *label59
-    * op or :total :total *tmp1
+  152 op or :total :total *tmp2
   153 label *label60
   154 label *label1
   155 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   142 label *label57
   143 set *tmp2 0
   144 label *label4
-    * set *tmp1 *tmp2
   145 label *label3
   146 op and *tmp4 :total *tmp2
   147 jump *label59 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set :total 0
     2 set :i -1
     3 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    4 label *label61
     5 lookup block :block :i
     6 # "Function: def identifyBlock(in block)"
     7 jump *label6 strictEqual :block null
 
   152 label *label60
   153 label *label1
   154 op add :i :i 1
-    * jump *label0 always
+  155 jump *label61 lessThan :i @blockCount
   156 label *label2
   157 assertequals 0x07FFFFFF :total "Test selected blocks"
   158 end

Modifications by Convert case at line 6:5 (#2, segments: 3) (+71 instructions):
 
     4 label *label61
     5 lookup block :block :i
     6 # "Function: def identifyBlock(in block)"
-    * jump *label6 strictEqual :block null
-    * jump *label5 always
+    7 sensor *tmp6 :block @id
+    8 jump *label64 greaterThanEq *tmp6 206
+    9 jump *label65 greaterThanEq *tmp6 35
+   10 multijump *label66 *tmp6 0 (m:*label101)
+   11 multilabel *label66 (m:*label101)
+   12 jump *label63 always
+   13 multilabel *label67 (m:*label101)
+   14 jump *label62 always
+   15 multilabel *label68 (m:*label101)
+   16 jump *label62 always
+   17 multilabel *label69 (m:*label101)
+   18 jump *label62 always
+   19 multilabel *label70 (m:*label101)
+   20 jump *label62 always
+   21 multilabel *label71 (m:*label101)
+   22 jump *label62 always
+   23 multilabel *label72 (m:*label101)
+   24 jump *label62 always
+   25 multilabel *label73 (m:*label101)
+   26 jump *label62 always
+   27 multilabel *label74 (m:*label101)
+   28 jump *label62 always
+   29 multilabel *label75 (m:*label101)
+   30 jump *label62 always
+   31 multilabel *label76 (m:*label101)
+   32 jump *label62 always
+   33 multilabel *label77 (m:*label101)
+   34 jump *label62 always
+   35 multilabel *label78 (m:*label101)
+   36 jump *label62 always
+   37 multilabel *label79 (m:*label101)
+   38 jump *label62 always
+   39 multilabel *label80 (m:*label101)
+   40 jump *label62 always
+   41 multilabel *label81 (m:*label101)
+   42 jump *label62 always
+   43 multilabel *label82 (m:*label101)
+   44 jump *label62 always
+   45 multilabel *label83 (m:*label101)
+   46 jump *label10 always
+   47 multilabel *label84 (m:*label101)
+   48 jump *label12 always
+   49 multilabel *label85 (m:*label101)
+   50 jump *label14 always
+   51 multilabel *label86 (m:*label101)
+   52 jump *label16 always
+   53 multilabel *label87 (m:*label101)
+   54 jump *label18 always
+   55 multilabel *label88 (m:*label101)
+   56 jump *label20 always
+   57 multilabel *label89 (m:*label101)
+   58 jump *label22 always
+   59 multilabel *label90 (m:*label101)
+   60 jump *label24 always
+   61 multilabel *label91 (m:*label101)
+   62 jump *label26 always
+   63 multilabel *label92 (m:*label101)
+   64 jump *label28 always
+   65 multilabel *label93 (m:*label101)
+   66 jump *label30 always
+   67 multilabel *label94 (m:*label101)
+   68 jump *label32 always
+   69 multilabel *label95 (m:*label101)
+   70 jump *label62 always
+   71 multilabel *label96 (m:*label101)
+   72 jump *label62 always
+   73 multilabel *label97 (m:*label101)
+   74 jump *label34 always
+   75 multilabel *label98 (m:*label101)
+   76 jump *label36 always
+   77 multilabel *label99 (m:*label101)
+   78 jump *label38 always
+   79 multilabel *label100 (m:*label101)
+   80 jump *label40 always
+   81 label *label65
+   82 jump *label42 equal *tmp6 203
+   83 jump *label44 equal *tmp6 204
+   84 jump *label62 always
+   85 label *label64
+   86 multijump *label102 *tmp6 206 (m:*label156)
+   87 multilabel *label102 (m:*label156)
+   88 jump *label46 always
+   89 multilabel *label103 (m:*label156)
+   90 jump *label48 always
+   91 multilabel *label104 (m:*label156)
+   92 jump *label62 always
+   93 multilabel *label105 (m:*label156)
+   94 jump *label62 always
+   95 multilabel *label106 (m:*label156)
+   96 jump *label62 always
+   97 multilabel *label107 (m:*label156)
+   98 jump *label62 always
+   99 multilabel *label108 (m:*label156)
+  100 jump *label62 always
+  101 multilabel *label109 (m:*label156)
+  102 jump *label62 always
+  103 multilabel *label110 (m:*label156)
+  104 jump *label62 always
+  105 multilabel *label111 (m:*label156)
+  106 jump *label62 always
+  107 multilabel *label112 (m:*label156)
+  108 jump *label62 always
+  109 multilabel *label113 (m:*label156)
+  110 jump *label62 always
+  111 multilabel *label114 (m:*label156)
+  112 jump *label62 always
+  113 multilabel *label115 (m:*label156)
+  114 jump *label62 always
+  115 multilabel *label116 (m:*label156)
+  116 jump *label50 always
+  117 multilabel *label117 (m:*label156)
+  118 jump *label52 always
+  119 multilabel *label118 (m:*label156)
+  120 jump *label62 always
+  121 multilabel *label119 (m:*label156)
+  122 jump *label62 always
+  123 multilabel *label120 (m:*label156)
+  124 jump *label62 always
+  125 multilabel *label121 (m:*label156)
+  126 jump *label54 always
+  127 multilabel *label122 (m:*label156)
+  128 jump *label62 always
+  129 multilabel *label123 (m:*label156)
+  130 jump *label62 always
+  131 multilabel *label124 (m:*label156)
+  132 jump *label62 always
+  133 multilabel *label125 (m:*label156)
+  134 jump *label62 always
+  135 multilabel *label126 (m:*label156)
+  136 jump *label62 always
+  137 multilabel *label127 (m:*label156)
+  138 jump *label62 always
+  139 multilabel *label128 (m:*label156)
+  140 jump *label62 always
+  141 multilabel *label129 (m:*label156)
+  142 jump *label62 always
+  143 multilabel *label130 (m:*label156)
+  144 jump *label56 always
+  145 multilabel *label131 (m:*label156)
+  146 jump *label62 always
+  147 multilabel *label132 (m:*label156)
+  148 jump *label62 always
+  149 multilabel *label133 (m:*label156)
+  150 jump *label62 always
+  151 multilabel *label134 (m:*label156)
+  152 jump *label62 always
+  153 multilabel *label135 (m:*label156)
+  154 jump *label62 always
+  155 multilabel *label136 (m:*label156)
+  156 jump *label62 always
+  157 multilabel *label137 (m:*label156)
+  158 jump *label62 always
+  159 multilabel *label138 (m:*label156)
+  160 jump *label62 always
+  161 multilabel *label139 (m:*label156)
+  162 jump *label62 always
+  163 multilabel *label140 (m:*label156)
+  164 jump *label62 always
+  165 multilabel *label141 (m:*label156)
+  166 jump *label62 always
+  167 multilabel *label142 (m:*label156)
+  168 jump *label62 always
+  169 multilabel *label143 (m:*label156)
+  170 jump *label62 always
+  171 multilabel *label144 (m:*label156)
+  172 jump *label62 always
+  173 multilabel *label145 (m:*label156)
+  174 jump *label62 always
+  175 multilabel *label146 (m:*label156)
+  176 jump *label62 always
+  177 multilabel *label147 (m:*label156)
+  178 jump *label62 always
+  179 multilabel *label148 (m:*label156)
+  180 jump *label62 always
+  181 multilabel *label149 (m:*label156)
+  182 jump *label62 always
+  183 multilabel *label150 (m:*label156)
+  184 jump *label62 always
+  185 multilabel *label151 (m:*label156)
+  186 jump *label62 always
+  187 multilabel *label152 (m:*label156)
+  188 jump *label62 always
+  189 multilabel *label153 (m:*label156)
+  190 jump *label62 always
+  191 multilabel *label154 (m:*label156)
+  192 jump *label62 always
+  193 multilabel *label155 (m:*label156)
+  194 jump *label58 always
   195 label *label6
   196 set *tmp2 0x00000001
   197 jump *label4 always
   198 label *label5
-    * jump *label7 notEqual :block @graphite-press
+  199 label *label63
+  200 jump *label6 strictEqual *tmp6 null
   201 label *label8
   202 set *tmp2 0x00000002
   203 jump *label4 always
   204 label *label7
-    * jump *label9 notEqual :block @copper-wall
   205 label *label10
   206 set *tmp2 0x00000004
   207 jump *label4 always
   208 label *label9
-    * jump *label11 notEqual :block @copper-wall-large
   209 label *label12
   210 set *tmp2 0x00000008
   211 jump *label4 always
   212 label *label11
-    * jump *label13 notEqual :block @titanium-wall
   213 label *label14
   214 set *tmp2 0x00000010
   215 jump *label4 always
   216 label *label13
-    * jump *label15 notEqual :block @titanium-wall-large
   217 label *label16
   218 set *tmp2 0x00000020
   219 jump *label4 always
   220 label *label15
-    * jump *label17 notEqual :block @plastanium-wall
   221 label *label18
   222 set *tmp2 0x00000040
   223 jump *label4 always
   224 label *label17
-    * jump *label19 notEqual :block @plastanium-wall-large
   225 label *label20
   226 set *tmp2 0x00000080
   227 jump *label4 always
   228 label *label19
-    * jump *label21 notEqual :block @thorium-wall
   229 label *label22
   230 set *tmp2 0x00000100
   231 jump *label4 always
   232 label *label21
-    * jump *label23 notEqual :block @thorium-wall-large
   233 label *label24
   234 set *tmp2 0x00000200
   235 jump *label4 always
   236 label *label23
-    * jump *label25 notEqual :block @phase-wall
   237 label *label26
   238 set *tmp2 0x00000400
   239 jump *label4 always
   240 label *label25
-    * jump *label27 notEqual :block @phase-wall-large
   241 label *label28
   242 set *tmp2 0x00000800
   243 jump *label4 always
   244 label *label27
-    * jump *label29 notEqual :block @surge-wall
   245 label *label30
   246 set *tmp2 0x00001000
   247 jump *label4 always
   248 label *label29
-    * jump *label31 notEqual :block @surge-wall-large
   249 label *label32
   250 set *tmp2 0x00002000
   251 jump *label4 always
   252 label *label31
-    * jump *label33 notEqual :block @scrap-wall
   253 label *label34
   254 set *tmp2 0x00004000
   255 jump *label4 always
   256 label *label33
-    * jump *label35 notEqual :block @scrap-wall-large
   257 label *label36
   258 set *tmp2 0x00008000
   259 jump *label4 always
   260 label *label35
-    * jump *label37 notEqual :block @scrap-wall-huge
   261 label *label38
   262 set *tmp2 0x00010000
   263 jump *label4 always
   264 label *label37
-    * jump *label39 notEqual :block @scrap-wall-gigantic
   265 label *label40
   266 set *tmp2 0x00020000
   267 jump *label4 always
   268 label *label39
-    * jump *label41 notEqual :block @tungsten-wall
   269 label *label42
   270 set *tmp2 0x00040000
   271 jump *label4 always
   272 label *label41
-    * jump *label43 notEqual :block @tungsten-wall-large
   273 label *label44
   274 set *tmp2 0x00080000
   275 jump *label4 always
   276 label *label43
-    * jump *label45 notEqual :block @beryllium-wall
   277 label *label46
   278 set *tmp2 0x00100000
   279 jump *label4 always
   280 label *label45
-    * jump *label47 notEqual :block @beryllium-wall-large
   281 label *label48
   282 set *tmp2 0x00200000
   283 jump *label4 always
   284 label *label47
-    * jump *label49 notEqual :block @carbide-wall
   285 label *label50
   286 set *tmp2 0x00400000
   287 jump *label4 always
   288 label *label49
-    * jump *label51 notEqual :block @carbide-wall-large
   289 label *label52
   290 set *tmp2 0x00800000
   291 jump *label4 always
   292 label *label51
-    * jump *label53 notEqual :block @reinforced-surge-wall
   293 label *label54
   294 set *tmp2 0x01000000
   295 jump *label4 always
   296 label *label53
-    * jump *label55 notEqual :block @reinforced-surge-wall-large
   297 label *label56
   298 set *tmp2 0x02000000
   299 jump *label4 always
   300 label *label55
-    * jump *label57 notEqual :block @tile-logic-display
   301 label *label58
   302 set *tmp2 0x04000000
   303 jump *label4 always
   304 label *label57
+  305 label *label62
   306 set *tmp2 0
   307 label *label4
   308 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 assertequals 260 @blockCount "Verify block count"
     1 set :total 0
     2 set :i -1
-    * label *label0
     3 label *label61
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
 
   194 label *label6
   195 set *tmp2 0x00000001
   196 jump *label4 always
-    * label *label5
   197 label *label63
   198 jump *label6 strictEqual *tmp6 null
-    * label *label8
   199 set *tmp2 0x00000002
   200 jump *label4 always
-    * label *label7
   201 label *label10
   202 set *tmp2 0x00000004
   203 jump *label4 always
-    * label *label9
   204 label *label12
   205 set *tmp2 0x00000008
   206 jump *label4 always
-    * label *label11
   207 label *label14
   208 set *tmp2 0x00000010
   209 jump *label4 always
-    * label *label13
   210 label *label16
   211 set *tmp2 0x00000020
   212 jump *label4 always
-    * label *label15
   213 label *label18
   214 set *tmp2 0x00000040
   215 jump *label4 always
-    * label *label17
   216 label *label20
   217 set *tmp2 0x00000080
   218 jump *label4 always
-    * label *label19
   219 label *label22
   220 set *tmp2 0x00000100
   221 jump *label4 always
-    * label *label21
   222 label *label24
   223 set *tmp2 0x00000200
   224 jump *label4 always
-    * label *label23
   225 label *label26
   226 set *tmp2 0x00000400
   227 jump *label4 always
-    * label *label25
   228 label *label28
   229 set *tmp2 0x00000800
   230 jump *label4 always
-    * label *label27
   231 label *label30
   232 set *tmp2 0x00001000
   233 jump *label4 always
-    * label *label29
   234 label *label32
   235 set *tmp2 0x00002000
   236 jump *label4 always
-    * label *label31
   237 label *label34
   238 set *tmp2 0x00004000
   239 jump *label4 always
-    * label *label33
   240 label *label36
   241 set *tmp2 0x00008000
   242 jump *label4 always
-    * label *label35
   243 label *label38
   244 set *tmp2 0x00010000
   245 jump *label4 always
-    * label *label37
   246 label *label40
   247 set *tmp2 0x00020000
   248 jump *label4 always
-    * label *label39
   249 label *label42
   250 set *tmp2 0x00040000
   251 jump *label4 always
-    * label *label41
   252 label *label44
   253 set *tmp2 0x00080000
   254 jump *label4 always
-    * label *label43
   255 label *label46
   256 set *tmp2 0x00100000
   257 jump *label4 always
-    * label *label45
   258 label *label48
   259 set *tmp2 0x00200000
   260 jump *label4 always
-    * label *label47
   261 label *label50
   262 set *tmp2 0x00400000
   263 jump *label4 always
-    * label *label49
   264 label *label52
   265 set *tmp2 0x00800000
   266 jump *label4 always
-    * label *label51
   267 label *label54
   268 set *tmp2 0x01000000
   269 jump *label4 always
-    * label *label53
   270 label *label56
   271 set *tmp2 0x02000000
   272 jump *label4 always
-    * label *label55
   273 label *label58
   274 set *tmp2 0x04000000
   275 jump *label4 always
-    * label *label57
   276 label *label62
   277 set *tmp2 0
   278 label *label4
-    * label *label3
   279 op and *tmp4 :total *tmp2
   280 jump *label59 equal *tmp4 false
   281 op or :total :total 0x800000000
 
   283 label *label59
   284 op or :total :total *tmp2
   285 label *label60
-    * label *label1
   286 op add :i :i 1
   287 jump *label61 lessThan :i @blockCount
-    * label *label2
   288 assertequals 0x07FFFFFF :total "Test selected blocks"
   289 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
   286 op add :i :i 1
   287 jump *label61 lessThan :i @blockCount
   288 assertequals 0x07FFFFFF :total "Test selected blocks"
-    * end

Final code before resolving virtual instructions:

assertequals 260 @blockCount "Verify block count"
set :total 0
set :i -1
label *label61
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label64 greaterThanEq *tmp6 206
jump *label65 greaterThanEq *tmp6 35
multijump *label66 *tmp6 0
multilabel *label66
jump *label63 always
multilabel *label67
jump *label62 always
multilabel *label68
jump *label62 always
multilabel *label69
jump *label62 always
multilabel *label70
jump *label62 always
multilabel *label71
jump *label62 always
multilabel *label72
jump *label62 always
multilabel *label73
jump *label62 always
multilabel *label74
jump *label62 always
multilabel *label75
jump *label62 always
multilabel *label76
jump *label62 always
multilabel *label77
jump *label62 always
multilabel *label78
jump *label62 always
multilabel *label79
jump *label62 always
multilabel *label80
jump *label62 always
multilabel *label81
jump *label62 always
multilabel *label82
jump *label62 always
multilabel *label83
jump *label10 always
multilabel *label84
jump *label12 always
multilabel *label85
jump *label14 always
multilabel *label86
jump *label16 always
multilabel *label87
jump *label18 always
multilabel *label88
jump *label20 always
multilabel *label89
jump *label22 always
multilabel *label90
jump *label24 always
multilabel *label91
jump *label26 always
multilabel *label92
jump *label28 always
multilabel *label93
jump *label30 always
multilabel *label94
jump *label32 always
multilabel *label95
jump *label62 always
multilabel *label96
jump *label62 always
multilabel *label97
jump *label34 always
multilabel *label98
jump *label36 always
multilabel *label99
jump *label38 always
multilabel *label100
jump *label40 always
label *label65
jump *label42 equal *tmp6 203
jump *label44 equal *tmp6 204
jump *label62 always
label *label64
multijump *label102 *tmp6 206
multilabel *label102
jump *label46 always
multilabel *label103
jump *label48 always
multilabel *label104
jump *label62 always
multilabel *label105
jump *label62 always
multilabel *label106
jump *label62 always
multilabel *label107
jump *label62 always
multilabel *label108
jump *label62 always
multilabel *label109
jump *label62 always
multilabel *label110
jump *label62 always
multilabel *label111
jump *label62 always
multilabel *label112
jump *label62 always
multilabel *label113
jump *label62 always
multilabel *label114
jump *label62 always
multilabel *label115
jump *label62 always
multilabel *label116
jump *label50 always
multilabel *label117
jump *label52 always
multilabel *label118
jump *label62 always
multilabel *label119
jump *label62 always
multilabel *label120
jump *label62 always
multilabel *label121
jump *label54 always
multilabel *label122
jump *label62 always
multilabel *label123
jump *label62 always
multilabel *label124
jump *label62 always
multilabel *label125
jump *label62 always
multilabel *label126
jump *label62 always
multilabel *label127
jump *label62 always
multilabel *label128
jump *label62 always
multilabel *label129
jump *label62 always
multilabel *label130
jump *label56 always
multilabel *label131
jump *label62 always
multilabel *label132
jump *label62 always
multilabel *label133
jump *label62 always
multilabel *label134
jump *label62 always
multilabel *label135
jump *label62 always
multilabel *label136
jump *label62 always
multilabel *label137
jump *label62 always
multilabel *label138
jump *label62 always
multilabel *label139
jump *label62 always
multilabel *label140
jump *label62 always
multilabel *label141
jump *label62 always
multilabel *label142
jump *label62 always
multilabel *label143
jump *label62 always
multilabel *label144
jump *label62 always
multilabel *label145
jump *label62 always
multilabel *label146
jump *label62 always
multilabel *label147
jump *label62 always
multilabel *label148
jump *label62 always
multilabel *label149
jump *label62 always
multilabel *label150
jump *label62 always
multilabel *label151
jump *label62 always
multilabel *label152
jump *label62 always
multilabel *label153
jump *label62 always
multilabel *label154
jump *label62 always
multilabel *label155
jump *label58 always
label *label6
set *tmp2 0x00000001
jump *label4 always
label *label63
jump *label6 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
label *label10
set *tmp2 0x00000004
jump *label4 always
label *label12
set *tmp2 0x00000008
jump *label4 always
label *label14
set *tmp2 0x00000010
jump *label4 always
label *label16
set *tmp2 0x00000020
jump *label4 always
label *label18
set *tmp2 0x00000040
jump *label4 always
label *label20
set *tmp2 0x00000080
jump *label4 always
label *label22
set *tmp2 0x00000100
jump *label4 always
label *label24
set *tmp2 0x00000200
jump *label4 always
label *label26
set *tmp2 0x00000400
jump *label4 always
label *label28
set *tmp2 0x00000800
jump *label4 always
label *label30
set *tmp2 0x00001000
jump *label4 always
label *label32
set *tmp2 0x00002000
jump *label4 always
label *label34
set *tmp2 0x00004000
jump *label4 always
label *label36
set *tmp2 0x00008000
jump *label4 always
label *label38
set *tmp2 0x00010000
jump *label4 always
label *label40
set *tmp2 0x00020000
jump *label4 always
label *label42
set *tmp2 0x00040000
jump *label4 always
label *label44
set *tmp2 0x00080000
jump *label4 always
label *label46
set *tmp2 0x00100000
jump *label4 always
label *label48
set *tmp2 0x00200000
jump *label4 always
label *label50
set *tmp2 0x00400000
jump *label4 always
label *label52
set *tmp2 0x00800000
jump *label4 always
label *label54
set *tmp2 0x01000000
jump *label4 always
label *label56
set *tmp2 0x02000000
jump *label4 always
label *label58
set *tmp2 0x04000000
jump *label4 always
label *label62
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label59 equal *tmp4 false
op or :total :total 0x800000000
jump *label60 always
label *label59
op or :total :total *tmp2
label *label60
op add :i :i 1
jump *label61 lessThan :i @blockCount
assertequals 0x07FFFFFF :total "Test selected blocks"
