   404 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
    33 instructions eliminated by Dead Code Elimination (7 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
     5 instructions eliminated by Jump Optimization (5 iterations).
    24 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   326 instructions eliminated by Data Flow Optimization (6 passes, 29 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
   374 instructions added by Loop Unrolling (16 iterations).
     2 loops unrolled by Loop Unrolling.
   347 instructions added by Function Inlining (16 iterations).
     6 function calls inlined by Function Inlining.
     8 instructions added by Case Switching (16 iterations).
     8 case expressions converted to switched jumps Case Switching.
    18 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
     5 instructions updated by Jump Threading.
    21 instructions eliminated by Unreachable Code Elimination (2 iterations).
   700 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 733):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +241, benefit       63.0, efficiency      0.261
  * Unroll loop at line 90:5                                     size  +252, benefit     5000.0, efficiency     19.841 (+252 instructions)
    Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333
    Inline function 'eraseNumbers' defined at line 77:1          size    +3, benefit       47.3, efficiency     15.750
    Inline function 'displayItem' defined at line 86:1           size  +101, benefit      100.0, efficiency      0.990
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 46:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +102, benefit       50.0, efficiency      0.490
    Inline function call at line 55:9                            size  +102, benefit       50.0, efficiency      0.490
    Inline function call at line 62:9                            size    +4, benefit       43.8, efficiency     10.938
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit     2187.5, efficiency   2187.500

Pass 1: speed optimization selection (cost limit 481):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +241, benefit       63.0, efficiency      0.261
    Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333
  * Inline function 'eraseNumbers' defined at line 77:1          size    +3, benefit       47.3, efficiency     15.750 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 46:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 62:9                            size    +4, benefit       43.8, efficiency     10.938
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 484):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
  * Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 487):
  * Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778 (-14 instructions)
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 501):
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
  * Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283 (+245 instructions)
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 256):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 255):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 254):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 253):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 252):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 251):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 250):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 249):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   247 set :drawDigit:x :displayItem:x
   248 set :drawDigit:y :displayItem:y
   249 set :drawDigit:digit *tmp19
-    * set *tmp22 :drawDigit:digit
-    * jump *label64 equal *tmp22 0
+  250 jump *label64 equal :drawDigit:digit 0
   251 jump *label63 always
   252 label *label64
   253 op sub *tmp23 :drawDigit:x 2
 
   258 set *tmp21 null
   259 jump *label62 always
   260 label *label63
-    * jump *label66 equal *tmp22 1
+  261 jump *label66 equal :drawDigit:digit 1
   262 jump *label65 always
   263 label *label66
   264 op add *tmp27 :drawDigit:x 7
 
   270 set *tmp21 null
   271 jump *label62 always
   272 label *label65
-    * jump *label68 equal *tmp22 2
+  273 jump *label68 equal :drawDigit:digit 2
   274 jump *label67 always
   275 label *label68
   276 op add *tmp32 :drawDigit:x 7
 
   293 set *tmp21 null
   294 jump *label62 always
   295 label *label67
-    * jump *label70 equal *tmp22 3
+  296 jump *label70 equal :drawDigit:digit 3
   297 jump *label69 always
   298 label *label70
   299 op add *tmp44 :drawDigit:x 7
 
   313 set *tmp21 null
   314 jump *label62 always
   315 label *label69
-    * jump *label72 equal *tmp22 4
+  316 jump *label72 equal :drawDigit:digit 4
   317 jump *label71 always
   318 label *label72
   319 op add *tmp54 :drawDigit:x 7
 
   330 set *tmp21 null
   331 jump *label62 always
   332 label *label71
-    * jump *label74 equal *tmp22 5
+  333 jump *label74 equal :drawDigit:digit 5
   334 jump *label73 always
   335 label *label74
   336 op add *tmp62 :drawDigit:x 7
 
   353 set *tmp21 null
   354 jump *label62 always
   355 label *label73
-    * jump *label76 equal *tmp22 6
+  356 jump *label76 equal :drawDigit:digit 6
   357 jump *label75 always
   358 label *label76
   359 op add *tmp74 :drawDigit:y 12
 
   375 set *tmp21 null
   376 jump *label62 always
   377 label *label75
-    * jump *label78 equal *tmp22 7
+  378 jump *label78 equal :drawDigit:digit 7
   379 jump *label77 always
   380 label *label78
   381 op add *tmp85 :drawDigit:x 7
 
   392 set *tmp21 null
   393 jump *label62 always
   394 label *label77
-    * jump *label80 equal *tmp22 8
+  395 jump *label80 equal :drawDigit:digit 8
   396 jump *label79 always
   397 label *label80
   398 op sub *tmp94 :drawDigit:x 2
 
   407 set *tmp21 null
   408 jump *label62 always
   409 label *label79
-    * jump *label82 equal *tmp22 9
+  410 jump *label82 equal :drawDigit:digit 9
   411 jump *label81 always
   412 label *label82
   413 op add *tmp101 :drawDigit:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-13 instructions):
 
     3 set :y 152
     4 set :eraseImages:first_column true
     5 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp0 :eraseImages*retval
     6 set :eraseImages:first_column false
     7 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp1 :eraseImages*retval
     8 draw color 255 255 255 255
     9 set :index 0
    10 set :item @sand
 
    85 set :y 152
    86 set :x 93
    87 draw color 255 255 255 255
-    * set *tmp8 null
    88 jump *label25 always
    89 label *label24
-    * set *tmp8 null
    90 label *label25
    91 label *label4
    92 multijump *tmp2 0 0 (m:marker0)
 
    97 set :y 152
    98 set :eraseNumbers:first_column true
    99 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp9 :eraseNumbers*retval
   100 set :index 0
   101 set :item @sand
   102 op add *tmp10 @counter 1
 
   170 set :displayItem:x 71
   171 set :displayItem:y :y
   172 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   173 jump *label48 always
   174 label *label47
   175 set :displayItem:x 157
   176 set :displayItem:y :y
   177 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   178 label *label48
   179 op add :index :index 1
   180 op sub :y :y 20
 
   185 set :eraseNumbers:first_column false
   186 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
   187 set *tmp15 :eraseNumbers*retval
-    * set *tmp14 *tmp15
   188 jump *label50 always
   189 label *label49
-    * set *tmp14 null
   190 label *label50
   191 label *label27
   192 multijump *tmp10 0 0 (m:marker1)
 
   423 label *label81
   424 set *tmp21 null
   425 label *label62
-    * set *tmp20 *tmp21
   426 label *label61
   427 op sub :displayItem:x :displayItem:x 11
   428 op idiv :displayItem:amount :displayItem:amount 10
   429 op equal *tmp113 :displayItem:amount 0
   430 jump *label83 equal *tmp113 false
   431 jump *label57 always
-    * set *tmp114 null
   432 jump *label84 always
   433 label *label83
-    * set *tmp114 null
   434 label *label84
   435 label *label59
   436 op add :displayItem:i :displayItem:i 1
 
   470 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
   471 set *tmp117 null
   472 label *label87
-    * set *tmp115 *tmp117
   473 label *label85
   474 label *label57
   475 return :displayItem*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-15 instructions):
 
   184 set :y 152
   185 set :eraseNumbers:first_column false
   186 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp15 :eraseNumbers*retval
   187 jump *label50 always
   188 label *label49
   189 label *label50
 
   205 draw rect 93 0 16 176
   206 set *tmp16 null
   207 label *label53
-    * set :eraseImages*retval *tmp16
   208 label *label51
   209 return :eraseImages*retaddr
   210 end
 
   244 op sub *tmp25 :drawDigit:y 2
   245 op add *tmp26 *tmp25 1
   246 draw lineRect *tmp24 *tmp26 9 14
-    * set *tmp21 null
   247 jump *label62 always
   248 label *label63
   249 jump *label66 equal :drawDigit:digit 1
 
   255 op sub *tmp30 *tmp29 1
   256 op add *tmp31 :drawDigit:y 12
   257 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
-    * set *tmp21 null
   258 jump *label62 always
   259 label *label65
   260 jump *label68 equal :drawDigit:digit 2
 
   277 op add *tmp42 :drawDigit:x 7
   278 op add *tmp43 :drawDigit:y 12
   279 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
-    * set *tmp21 null
   280 jump *label62 always
   281 label *label67
   282 jump *label70 equal :drawDigit:digit 3
 
   296 op add *tmp52 :drawDigit:x 7
   297 op add *tmp53 :drawDigit:y 12
   298 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
-    * set *tmp21 null
   299 jump *label62 always
   300 label *label69
   301 jump *label72 equal :drawDigit:digit 4
 
   312 op add *tmp60 :drawDigit:y 6
   313 op add *tmp61 :drawDigit:y 12
   314 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
-    * set *tmp21 null
   315 jump *label62 always
   316 label *label71
   317 jump *label74 equal :drawDigit:digit 5
 
   334 op add *tmp72 :drawDigit:x 7
   335 op add *tmp73 :drawDigit:y 12
   336 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
-    * set *tmp21 null
   337 jump *label62 always
   338 label *label73
   339 jump *label76 equal :drawDigit:digit 6
 
   355 op add *tmp83 :drawDigit:x 7
   356 op add *tmp84 :drawDigit:y 12
   357 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
-    * set *tmp21 null
   358 jump *label62 always
   359 label *label75
   360 jump *label78 equal :drawDigit:digit 7
 
   371 op sub *tmp92 *tmp91 1
   372 op add *tmp93 :drawDigit:y 12
   373 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
-    * set *tmp21 null
   374 jump *label62 always
   375 label *label77
   376 jump *label80 equal :drawDigit:digit 8
 
   385 op add *tmp99 :drawDigit:x 7
   386 op add *tmp100 :drawDigit:y 6
   387 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
-    * set *tmp21 null
   388 jump *label62 always
   389 label *label79
   390 jump *label82 equal :drawDigit:digit 9
 
   407 op add *tmp111 :drawDigit:x 7
   408 op add *tmp112 :drawDigit:y 12
   409 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * set *tmp21 null
   410 jump *label62 always
   411 label *label81
-    * set *tmp21 null
   412 label *label62
   413 label *label61
   414 op sub :displayItem:x :displayItem:x 11
 
   435 op sub *tmp121 *tmp120 1
   436 op add *tmp122 :drawDigit12:y 12
   437 draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
-    * set *tmp117 null
   438 jump *label87 always
   439 label *label86
   440 op add *tmp123 :drawDigit12:x 7
 
   454 op add *tmp133 :drawDigit12:x 7
   455 op add *tmp134 :drawDigit12:y 12
   456 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
-    * set *tmp117 null
   457 label *label87
   458 label *label85
   459 label *label57

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-3 instructions):
 
   199 draw color 0 0 80 255
   200 jump *label52 equal :eraseImages:first_column false
   201 draw rect 0 0 23 176
-    * set *tmp16 null
   202 jump *label53 always
   203 label *label52
   204 draw rect 93 0 16 176
-    * set *tmp16 null
   205 label *label53
   206 label *label51
   207 return :eraseImages*retaddr
 
   217 draw rect 109 0 176 176
   218 set *tmp17 null
   219 label *label56
-    * set :eraseNumbers*retval *tmp17
   220 label *label54
   221 return :eraseNumbers*retaddr
   222 end

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   211 draw color 0 0 80 255
   212 jump *label55 equal :eraseNumbers:first_column false
   213 draw rect 23 0 70 176
-    * set *tmp17 null
   214 jump *label56 always
   215 label *label55
   216 draw rect 109 0 176 176
-    * set *tmp17 null
   217 label *label56
   218 label *label54
   219 return :eraseNumbers*retaddr

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
   220 end
   221 label *label2
   222 # "Function: void displayItem(in x, in y)"
-    * op max *tmp18 AMOUNT 0
-    * set :displayItem:amount *tmp18
+  223 op max :displayItem:amount AMOUNT 0
   224 draw color 0 255 0 255
   225 set :displayItem:i 0
   226 label *label58

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
   230 set :drawDigit:x :displayItem:x
   231 set :drawDigit:y :displayItem:y
   232 set :drawDigit:digit *tmp19
-    * jump *label64 equal :drawDigit:digit 0
-    * jump *label63 always
+  233 jump *label63 notEqual :drawDigit:digit 0
   234 label *label64
   235 op sub *tmp23 :drawDigit:x 2
   236 op add *tmp24 *tmp23 1
 
   239 draw lineRect *tmp24 *tmp26 9 14
   240 jump *label62 always
   241 label *label63
-    * jump *label66 equal :drawDigit:digit 1
-    * jump *label65 always
+  242 jump *label65 notEqual :drawDigit:digit 1
   243 label *label66
   244 op add *tmp27 :drawDigit:x 7
   245 op sub *tmp28 *tmp27 1
 
   249 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
   250 jump *label62 always
   251 label *label65
-    * jump *label68 equal :drawDigit:digit 2
-    * jump *label67 always
+  252 jump *label67 notEqual :drawDigit:digit 2
   253 label *label68
   254 op add *tmp32 :drawDigit:x 7
   255 draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
 
   270 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
   271 jump *label62 always
   272 label *label67
-    * jump *label70 equal :drawDigit:digit 3
-    * jump *label69 always
+  273 jump *label69 notEqual :drawDigit:digit 3
   274 label *label70
   275 op add *tmp44 :drawDigit:x 7
   276 op add *tmp45 :drawDigit:x 7
 
   288 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
   289 jump *label62 always
   290 label *label69
-    * jump *label72 equal :drawDigit:digit 4
-    * jump *label71 always
+  291 jump *label71 notEqual :drawDigit:digit 4
   292 label *label72
   293 op add *tmp54 :drawDigit:x 7
   294 op add *tmp55 :drawDigit:x 7
 
   303 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
   304 jump *label62 always
   305 label *label71
-    * jump *label74 equal :drawDigit:digit 5
-    * jump *label73 always
+  306 jump *label73 notEqual :drawDigit:digit 5
   307 label *label74
   308 op add *tmp62 :drawDigit:x 7
   309 draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
 
   324 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
   325 jump *label62 always
   326 label *label73
-    * jump *label76 equal :drawDigit:digit 6
-    * jump *label75 always
+  327 jump *label75 notEqual :drawDigit:digit 6
   328 label *label76
   329 op add *tmp74 :drawDigit:y 12
   330 draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
 
   344 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
   345 jump *label62 always
   346 label *label75
-    * jump *label78 equal :drawDigit:digit 7
-    * jump *label77 always
+  347 jump *label77 notEqual :drawDigit:digit 7
   348 label *label78
   349 op add *tmp85 :drawDigit:x 7
   350 op sub *tmp86 *tmp85 1
 
   359 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
   360 jump *label62 always
   361 label *label77
-    * jump *label80 equal :drawDigit:digit 8
-    * jump *label79 always
+  362 jump *label79 notEqual :drawDigit:digit 8
   363 label *label80
   364 op sub *tmp94 :drawDigit:x 2
   365 op add *tmp95 *tmp94 1
 
   372 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
   373 jump *label62 always
   374 label *label79
-    * jump *label82 equal :drawDigit:digit 9
-    * jump *label81 always
+  375 jump *label81 notEqual :drawDigit:digit 9
   376 label *label82
   377 op add *tmp101 :drawDigit:x 7
   378 draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-5 instructions):
 
    80 draw image *tmp3 *tmp6 :item 16 0
    81 op add :index :index 1
    82 op sub :y :y 20
-    * op equal *tmp7 :index 8
-    * jump *label24 equal *tmp7 false
+   83 jump *label24 notEqual :index 8
    84 set :y 152
    85 set :x 93
    86 draw color 255 255 255 255
 
   164 jump *label46 always
   165 label *label26
   166 draw image 0 0 :item 16 0
-    * op lessThan *tmp11 :index 8
-    * jump *label47 equal *tmp11 false
+  167 jump *label47 greaterThanEq :index 8
   168 set :displayItem:x 71
   169 set :displayItem:y :y
   170 call *label2 :displayItem*retaddr :displayItem*retval
 
   176 label *label48
   177 op add :index :index 1
   178 op sub :y :y 20
-    * op equal *tmp13 :index 8
-    * jump *label49 equal *tmp13 false
+  179 jump *label49 notEqual :index 8
   180 drawflush display1
   181 set :y 152
   182 set :eraseNumbers:first_column false
 
   394 label *label61
   395 op sub :displayItem:x :displayItem:x 11
   396 op idiv :displayItem:amount :displayItem:amount 10
-    * op equal *tmp113 :displayItem:amount 0
-    * jump *label83 equal *tmp113 false
+  397 jump *label83 notEqual :displayItem:amount 0
   398 jump *label57 always
   399 jump *label84 always
   400 label *label83
 
   407 set :drawDigit12:x :displayItem:x
   408 set :drawDigit12:y :displayItem:y
   409 set :drawDigit12:digit :displayItem:amount
-    * op equal *tmp116 :drawDigit12:digit 1
-    * jump *label86 equal *tmp116 false
+  410 jump *label86 notEqual :drawDigit12:digit 1
   411 op add *tmp118 :drawDigit12:x 7
   412 op sub *tmp119 *tmp118 1
   413 op add *tmp120 :drawDigit12:x 7

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
    84 set :y 152
    85 set :x 93
    86 draw color 255 255 255 255
-    * jump *label25 always
    87 label *label24
    88 label *label25
    89 label *label4
 
   180 set :y 152
   181 set :eraseNumbers:first_column false
   182 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * jump *label50 always
   183 label *label49
   184 label *label50
   185 label *label27
 
   386 op add *tmp111 :drawDigit:x 7
   387 op add *tmp112 :drawDigit:y 12
   388 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * jump *label62 always
   389 label *label81
   390 label *label62
   391 label *label61
 
   393 op idiv :displayItem:amount :displayItem:amount 10
   394 jump *label83 notEqual :displayItem:amount 0
   395 jump *label57 always
-    * jump *label84 always
   396 label *label83
   397 label *label84
   398 label *label59

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    75 label *label3
    76 op add *tmp3 :x 8
    77 op add *tmp4 :y 8
-    * op sub *tmp5 *tmp4 2
-    * op add *tmp6 *tmp5 1
+   78 op add *tmp5 :y 6
+   79 op sub *tmp6 *tmp4 1
    80 draw image *tmp3 *tmp6 :item 16 0
    81 op add :index :index 1
    82 op sub :y :y 20
 
   225 set :drawDigit:x :displayItem:x
   226 set :drawDigit:y :displayItem:y
   227 set :drawDigit:digit *tmp19
-    * jump *label63 notEqual :drawDigit:digit 0
+  228 jump *label63 notEqual *tmp19 0
   229 label *label64
-    * op sub *tmp23 :drawDigit:x 2
-    * op add *tmp24 *tmp23 1
-    * op sub *tmp25 :drawDigit:y 2
-    * op add *tmp26 *tmp25 1
+  230 op sub *tmp23 :displayItem:x 2
+  231 op sub *tmp24 :drawDigit:x 1
+  232 op sub *tmp25 :displayItem:y 2
+  233 op sub *tmp26 :drawDigit:y 1
   234 draw lineRect *tmp24 *tmp26 9 14
   235 jump *label62 always
   236 label *label63
-    * jump *label65 notEqual :drawDigit:digit 1
+  237 jump *label65 notEqual *tmp19 1
   238 label *label66
-    * op add *tmp27 :drawDigit:x 7
-    * op sub *tmp28 *tmp27 1
-    * op add *tmp29 :drawDigit:x 7
-    * op sub *tmp30 *tmp29 1
-    * op add *tmp31 :drawDigit:y 12
-    * draw line *tmp28 :drawDigit:y *tmp30 *tmp31
+  239 op add *tmp27 :displayItem:x 7
+  240 op add *tmp28 :drawDigit:x 6
+  241 op add *tmp29 :displayItem:x 7
+  242 op sub *tmp30 *tmp27 1
+  243 op add *tmp31 :displayItem:y 12
+  244 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   245 jump *label62 always
   246 label *label65
-    * jump *label67 notEqual :drawDigit:digit 2
+  247 jump *label67 notEqual *tmp19 2
   248 label *label68
-    * op add *tmp32 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
-    * op add *tmp33 :drawDigit:y 6
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp33
-    * op add *tmp34 :drawDigit:y 6
-    * op add *tmp35 :drawDigit:x 7
-    * op add *tmp36 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp34 *tmp35 *tmp36
-    * op add *tmp37 :drawDigit:x 7
-    * op add *tmp38 :drawDigit:y 6
-    * op add *tmp39 :drawDigit:x 7
-    * op add *tmp40 :drawDigit:y 12
-    * draw line *tmp37 *tmp38 *tmp39 *tmp40
-    * op add *tmp41 :drawDigit:y 12
-    * op add *tmp42 :drawDigit:x 7
-    * op add *tmp43 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp41 *tmp42 *tmp43
+  249 op add *tmp32 :displayItem:x 7
+  250 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  251 op add *tmp33 :displayItem:y 6
+  252 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  253 op add *tmp34 :displayItem:y 6
+  254 op add *tmp35 :displayItem:x 7
+  255 op add *tmp36 :displayItem:y 6
+  256 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  257 op add *tmp37 :displayItem:x 7
+  258 op add *tmp38 :displayItem:y 6
+  259 op add *tmp39 :displayItem:x 7
+  260 op add *tmp40 :displayItem:y 12
+  261 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  262 op add *tmp41 :displayItem:y 12
+  263 op add *tmp42 :displayItem:x 7
+  264 op add *tmp43 :displayItem:y 12
+  265 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   266 jump *label62 always
   267 label *label67
-    * jump *label69 notEqual :drawDigit:digit 3
+  268 jump *label69 notEqual *tmp19 3
   269 label *label70
-    * op add *tmp44 :drawDigit:x 7
-    * op add *tmp45 :drawDigit:x 7
-    * op add *tmp46 :drawDigit:y 12
-    * draw line *tmp44 :drawDigit:y *tmp45 *tmp46
-    * op add *tmp47 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp47 :drawDigit:y
-    * op add *tmp48 :drawDigit:y 6
-    * op add *tmp49 :drawDigit:x 7
-    * op add *tmp50 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp48 *tmp49 *tmp50
-    * op add *tmp51 :drawDigit:y 12
-    * op add *tmp52 :drawDigit:x 7
-    * op add *tmp53 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp51 *tmp52 *tmp53
+  270 op add *tmp44 :displayItem:x 7
+  271 op add *tmp45 :displayItem:x 7
+  272 op add *tmp46 :displayItem:y 12
+  273 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  274 op add *tmp47 :displayItem:x 7
+  275 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  276 op add *tmp48 :displayItem:y 6
+  277 op add *tmp49 :displayItem:x 7
+  278 op add *tmp50 :displayItem:y 6
+  279 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  280 op add *tmp51 :displayItem:y 12
+  281 op add *tmp52 :displayItem:x 7
+  282 op add *tmp53 :displayItem:y 12
+  283 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   284 jump *label62 always
   285 label *label69
-    * jump *label71 notEqual :drawDigit:digit 4
+  286 jump *label71 notEqual *tmp19 4
   287 label *label72
-    * op add *tmp54 :drawDigit:x 7
-    * op add *tmp55 :drawDigit:x 7
-    * op add *tmp56 :drawDigit:y 12
-    * draw line *tmp54 :drawDigit:y *tmp55 *tmp56
-    * op add *tmp57 :drawDigit:y 6
-    * op add *tmp58 :drawDigit:x 7
-    * op add *tmp59 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp57 *tmp58 *tmp59
-    * op add *tmp60 :drawDigit:y 6
-    * op add *tmp61 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
+  288 op add *tmp54 :displayItem:x 7
+  289 op add *tmp55 :displayItem:x 7
+  290 op add *tmp56 :displayItem:y 12
+  291 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  292 op add *tmp57 :displayItem:y 6
+  293 op add *tmp58 :displayItem:x 7
+  294 op add *tmp59 :displayItem:y 6
+  295 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  296 op add *tmp60 :displayItem:y 6
+  297 op add *tmp61 :displayItem:y 12
+  298 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   299 jump *label62 always
   300 label *label71
-    * jump *label73 notEqual :drawDigit:digit 5
+  301 jump *label73 notEqual *tmp19 5
   302 label *label74
-    * op add *tmp62 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
-    * op add *tmp63 :drawDigit:x 7
-    * op add *tmp64 :drawDigit:x 7
-    * op add *tmp65 :drawDigit:y 6
-    * draw line *tmp63 :drawDigit:y *tmp64 *tmp65
-    * op add *tmp66 :drawDigit:y 6
-    * op add *tmp67 :drawDigit:x 7
-    * op add *tmp68 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp66 *tmp67 *tmp68
-    * op add *tmp69 :drawDigit:y 6
-    * op add *tmp70 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp69 :drawDigit:x *tmp70
-    * op add *tmp71 :drawDigit:y 12
-    * op add *tmp72 :drawDigit:x 7
-    * op add *tmp73 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp71 *tmp72 *tmp73
+  303 op add *tmp62 :displayItem:x 7
+  304 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  305 op add *tmp63 :displayItem:x 7
+  306 op add *tmp64 :displayItem:x 7
+  307 op add *tmp65 :displayItem:y 6
+  308 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  309 op add *tmp66 :displayItem:y 6
+  310 op add *tmp67 :displayItem:x 7
+  311 op add *tmp68 :displayItem:y 6
+  312 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  313 op add *tmp69 :displayItem:y 6
+  314 op add *tmp70 :displayItem:y 12
+  315 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  316 op add *tmp71 :displayItem:y 12
+  317 op add *tmp72 :displayItem:x 7
+  318 op add *tmp73 :displayItem:y 12
+  319 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   320 jump *label62 always
   321 label *label73
-    * jump *label75 notEqual :drawDigit:digit 6
+  322 jump *label75 notEqual *tmp19 6
   323 label *label76
-    * op add *tmp74 :drawDigit:y 12
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
-    * op add *tmp75 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp75 :drawDigit:y
-    * op add *tmp76 :drawDigit:x 7
-    * op add *tmp77 :drawDigit:x 7
-    * op add *tmp78 :drawDigit:y 6
-    * draw line *tmp76 :drawDigit:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigit:y 6
-    * op add *tmp80 :drawDigit:x 7
-    * op add *tmp81 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigit:y 12
-    * op add *tmp83 :drawDigit:x 7
-    * op add *tmp84 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp82 *tmp83 *tmp84
+  324 op add *tmp74 :displayItem:y 12
+  325 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  326 op add *tmp75 :displayItem:x 7
+  327 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  328 op add *tmp76 :displayItem:x 7
+  329 op add *tmp77 :displayItem:x 7
+  330 op add *tmp78 :displayItem:y 6
+  331 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  332 op add *tmp79 :displayItem:y 6
+  333 op add *tmp80 :displayItem:x 7
+  334 op add *tmp81 :displayItem:y 6
+  335 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  336 op add *tmp82 :displayItem:y 12
+  337 op add *tmp83 :displayItem:x 7
+  338 op add *tmp84 :displayItem:y 12
+  339 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   340 jump *label62 always
   341 label *label75
-    * jump *label77 notEqual :drawDigit:digit 7
+  342 jump *label77 notEqual *tmp19 7
   343 label *label78
-    * op add *tmp85 :drawDigit:x 7
-    * op sub *tmp86 *tmp85 1
-    * op add *tmp87 :drawDigit:x 7
-    * op sub *tmp88 *tmp87 1
-    * op add *tmp89 :drawDigit:y 12
-    * draw line *tmp86 :drawDigit:y *tmp88 *tmp89
-    * op add *tmp90 :drawDigit:y 12
-    * op add *tmp91 :drawDigit:x 7
-    * op sub *tmp92 *tmp91 1
-    * op add *tmp93 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp90 *tmp92 *tmp93
+  344 op add *tmp85 :displayItem:x 7
+  345 op add *tmp86 :drawDigit:x 6
+  346 op add *tmp87 :displayItem:x 7
+  347 op sub *tmp88 *tmp85 1
+  348 op add *tmp89 :displayItem:y 12
+  349 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  350 op add *tmp90 :displayItem:y 12
+  351 op add *tmp91 :displayItem:x 7
+  352 op sub *tmp92 *tmp85 1
+  353 op add *tmp93 :displayItem:y 12
+  354 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   355 jump *label62 always
   356 label *label77
-    * jump *label79 notEqual :drawDigit:digit 8
+  357 jump *label79 notEqual *tmp19 8
   358 label *label80
-    * op sub *tmp94 :drawDigit:x 2
-    * op add *tmp95 *tmp94 1
-    * op sub *tmp96 :drawDigit:y 2
-    * op add *tmp97 *tmp96 1
+  359 op sub *tmp94 :displayItem:x 2
+  360 op sub *tmp95 :drawDigit:x 1
+  361 op sub *tmp96 :displayItem:y 2
+  362 op sub *tmp97 :drawDigit:y 1
   363 draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :drawDigit:y 6
-    * op add *tmp99 :drawDigit:x 7
-    * op add *tmp100 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp98 *tmp99 *tmp100
+  364 op add *tmp98 :displayItem:y 6
+  365 op add *tmp99 :displayItem:x 7
+  366 op add *tmp100 :displayItem:y 6
+  367 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   368 jump *label62 always
   369 label *label79
-    * jump *label81 notEqual :drawDigit:digit 9
+  370 jump *label81 notEqual *tmp19 9
   371 label *label82
-    * op add *tmp101 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y
-    * op add *tmp102 :drawDigit:x 7
-    * op add *tmp103 :drawDigit:x 7
-    * op add *tmp104 :drawDigit:y 12
-    * draw line *tmp102 :drawDigit:y *tmp103 *tmp104
-    * op add *tmp105 :drawDigit:y 6
-    * op add *tmp106 :drawDigit:x 7
-    * op add *tmp107 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp105 *tmp106 *tmp107
-    * op add *tmp108 :drawDigit:y 6
-    * op add *tmp109 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp108 :drawDigit:x *tmp109
-    * op add *tmp110 :drawDigit:y 12
-    * op add *tmp111 :drawDigit:x 7
-    * op add *tmp112 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp110 *tmp111 *tmp112
+  372 op add *tmp101 :displayItem:x 7
+  373 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  374 op add *tmp102 :displayItem:x 7
+  375 op add *tmp103 :displayItem:x 7
+  376 op add *tmp104 :displayItem:y 12
+  377 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  378 op add *tmp105 :displayItem:y 6
+  379 op add *tmp106 :displayItem:x 7
+  380 op add *tmp107 :displayItem:y 6
+  381 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  382 op add *tmp108 :displayItem:y 6
+  383 op add *tmp109 :displayItem:y 12
+  384 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  385 op add *tmp110 :displayItem:y 12
+  386 op add *tmp111 :displayItem:x 7
+  387 op add *tmp112 :displayItem:y 12
+  388 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   389 label *label81
   390 label *label62
   391 label *label61
 
   403 set :drawDigit12:x :displayItem:x
   404 set :drawDigit12:y :displayItem:y
   405 set :drawDigit12:digit :displayItem:amount
-    * jump *label86 notEqual :drawDigit12:digit 1
-    * op add *tmp118 :drawDigit12:x 7
-    * op sub *tmp119 *tmp118 1
-    * op add *tmp120 :drawDigit12:x 7
-    * op sub *tmp121 *tmp120 1
-    * op add *tmp122 :drawDigit12:y 12
-    * draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
+  406 jump *label86 notEqual :displayItem:amount 1
+  407 op add *tmp118 :displayItem:x 7
+  408 op add *tmp119 :drawDigit12:x 6
+  409 op add *tmp120 :displayItem:x 7
+  410 op sub *tmp121 *tmp118 1
+  411 op add *tmp122 :displayItem:y 12
+  412 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   413 jump *label87 always
   414 label *label86
-    * op add *tmp123 :drawDigit12:x 7
-    * draw line :drawDigit12:x :drawDigit12:y *tmp123 :drawDigit12:y
-    * op add *tmp124 :drawDigit12:y 6
-    * draw line :drawDigit12:x :drawDigit12:y :drawDigit12:x *tmp124
-    * op add *tmp125 :drawDigit12:y 6
-    * op add *tmp126 :drawDigit12:x 7
-    * op add *tmp127 :drawDigit12:y 6
-    * draw line :drawDigit12:x *tmp125 *tmp126 *tmp127
-    * op add *tmp128 :drawDigit12:x 7
-    * op add *tmp129 :drawDigit12:y 6
-    * op add *tmp130 :drawDigit12:x 7
-    * op add *tmp131 :drawDigit12:y 12
-    * draw line *tmp128 *tmp129 *tmp130 *tmp131
-    * op add *tmp132 :drawDigit12:y 12
-    * op add *tmp133 :drawDigit12:x 7
-    * op add *tmp134 :drawDigit12:y 12
-    * draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
+  415 op add *tmp123 :displayItem:x 7
+  416 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  417 op add *tmp124 :displayItem:y 6
+  418 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  419 op add *tmp125 :displayItem:y 6
+  420 op add *tmp126 :displayItem:x 7
+  421 op add *tmp127 :displayItem:y 6
+  422 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  423 op add *tmp128 :displayItem:x 7
+  424 op add *tmp129 :displayItem:y 6
+  425 op add *tmp130 :displayItem:x 7
+  426 op add *tmp131 :displayItem:y 12
+  427 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  428 op add *tmp132 :displayItem:y 12
+  429 op add *tmp133 :displayItem:x 7
+  430 op add *tmp134 :displayItem:y 12
+  431 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   432 label *label87
   433 label *label85
   434 label *label57

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-71 instructions):
 
    75 label *label3
    76 op add *tmp3 :x 8
    77 op add *tmp4 :y 8
-    * op add *tmp5 :y 6
-    * op sub *tmp6 *tmp4 1
+   78 op add *tmp6 :y 7
    79 draw image *tmp3 *tmp6 :item 16 0
    80 op add :index :index 1
    81 op sub :y :y 20
 
   223 # "Function: def drawDigit(in x, in y, in digit)"
   224 set :drawDigit:x :displayItem:x
   225 set :drawDigit:y :displayItem:y
-    * set :drawDigit:digit *tmp19
   226 jump *label63 notEqual *tmp19 0
   227 label *label64
-    * op sub *tmp23 :displayItem:x 2
-    * op sub *tmp24 :drawDigit:x 1
-    * op sub *tmp25 :displayItem:y 2
-    * op sub *tmp26 :drawDigit:y 1
+  228 op sub *tmp24 :displayItem:x 1
+  229 op sub *tmp26 :displayItem:y 1
   230 draw lineRect *tmp24 *tmp26 9 14
   231 jump *label62 always
   232 label *label63
   233 jump *label65 notEqual *tmp19 1
   234 label *label66
   235 op add *tmp27 :displayItem:x 7
-    * op add *tmp28 :drawDigit:x 6
-    * op add *tmp29 :displayItem:x 7
-    * op sub *tmp30 *tmp27 1
+  236 op add *tmp28 :displayItem:x 6
+  237 op add *tmp30 :displayItem:x 6
   238 op add *tmp31 :displayItem:y 12
   239 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   240 jump *label62 always
 
   245 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
   246 op add *tmp33 :displayItem:y 6
   247 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * op add *tmp34 :displayItem:y 6
-    * op add *tmp35 :displayItem:x 7
-    * op add *tmp36 :displayItem:y 6
   248 draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp37 :displayItem:x 7
-    * op add *tmp38 :displayItem:y 6
-    * op add *tmp39 :displayItem:x 7
   249 op add *tmp40 :displayItem:y 12
   250 draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * op add *tmp41 :displayItem:y 12
-    * op add *tmp42 :displayItem:x 7
-    * op add *tmp43 :displayItem:y 12
   251 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   252 jump *label62 always
   253 label *label67
   254 jump *label69 notEqual *tmp19 3
   255 label *label70
   256 op add *tmp44 :displayItem:x 7
-    * op add *tmp45 :displayItem:x 7
   257 op add *tmp46 :displayItem:y 12
   258 draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * op add *tmp47 :displayItem:x 7
   259 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
   260 op add *tmp48 :displayItem:y 6
-    * op add *tmp49 :displayItem:x 7
-    * op add *tmp50 :displayItem:y 6
   261 draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * op add *tmp51 :displayItem:y 12
-    * op add *tmp52 :displayItem:x 7
-    * op add *tmp53 :displayItem:y 12
   262 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   263 jump *label62 always
   264 label *label69
   265 jump *label71 notEqual *tmp19 4
   266 label *label72
   267 op add *tmp54 :displayItem:x 7
-    * op add *tmp55 :displayItem:x 7
   268 op add *tmp56 :displayItem:y 12
   269 draw line *tmp54 :displayItem:y *tmp54 *tmp56
   270 op add *tmp57 :displayItem:y 6
-    * op add *tmp58 :displayItem:x 7
-    * op add *tmp59 :displayItem:y 6
   271 draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * op add *tmp60 :displayItem:y 6
-    * op add *tmp61 :displayItem:y 12
   272 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   273 jump *label62 always
   274 label *label71
 
   276 label *label74
   277 op add *tmp62 :displayItem:x 7
   278 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp63 :displayItem:x 7
-    * op add *tmp64 :displayItem:x 7
   279 op add *tmp65 :displayItem:y 6
   280 draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * op add *tmp66 :displayItem:y 6
-    * op add *tmp67 :displayItem:x 7
-    * op add *tmp68 :displayItem:y 6
   281 draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp69 :displayItem:y 6
   282 op add *tmp70 :displayItem:y 12
   283 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * op add *tmp71 :displayItem:y 12
-    * op add *tmp72 :displayItem:x 7
-    * op add *tmp73 :displayItem:y 12
   284 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   285 jump *label62 always
   286 label *label73
 
   290 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
   291 op add *tmp75 :displayItem:x 7
   292 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp76 :displayItem:x 7
-    * op add *tmp77 :displayItem:x 7
   293 op add *tmp78 :displayItem:y 6
   294 draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * op add *tmp79 :displayItem:y 6
-    * op add *tmp80 :displayItem:x 7
-    * op add *tmp81 :displayItem:y 6
   295 draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * op add *tmp82 :displayItem:y 12
-    * op add *tmp83 :displayItem:x 7
-    * op add *tmp84 :displayItem:y 12
   296 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   297 jump *label62 always
   298 label *label75
   299 jump *label77 notEqual *tmp19 7
   300 label *label78
   301 op add *tmp85 :displayItem:x 7
-    * op add *tmp86 :drawDigit:x 6
-    * op add *tmp87 :displayItem:x 7
-    * op sub *tmp88 *tmp85 1
+  302 op add *tmp86 :displayItem:x 6
+  303 op add *tmp88 :displayItem:x 6
   304 op add *tmp89 :displayItem:y 12
   305 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp90 :displayItem:y 12
-    * op add *tmp91 :displayItem:x 7
-    * op sub *tmp92 *tmp85 1
-    * op add *tmp93 :displayItem:y 12
+  306 op add *tmp92 :displayItem:x 6
   307 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   308 jump *label62 always
   309 label *label77
   310 jump *label79 notEqual *tmp19 8
   311 label *label80
-    * op sub *tmp94 :displayItem:x 2
-    * op sub *tmp95 :drawDigit:x 1
-    * op sub *tmp96 :displayItem:y 2
-    * op sub *tmp97 :drawDigit:y 1
+  312 op sub *tmp95 :displayItem:x 1
+  313 op sub *tmp97 :displayItem:y 1
   314 draw lineRect *tmp95 *tmp97 9 14
   315 op add *tmp98 :displayItem:y 6
   316 op add *tmp99 :displayItem:x 7
-    * op add *tmp100 :displayItem:y 6
   317 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   318 jump *label62 always
   319 label *label79
 
   321 label *label82
   322 op add *tmp101 :displayItem:x 7
   323 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp102 :displayItem:x 7
-    * op add *tmp103 :displayItem:x 7
   324 op add *tmp104 :displayItem:y 12
   325 draw line *tmp101 :displayItem:y *tmp101 *tmp104
   326 op add *tmp105 :displayItem:y 6
-    * op add *tmp106 :displayItem:x 7
-    * op add *tmp107 :displayItem:y 6
   327 draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * op add *tmp108 :displayItem:y 6
-    * op add *tmp109 :displayItem:y 12
   328 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * op add *tmp110 :displayItem:y 12
-    * op add *tmp111 :displayItem:x 7
-    * op add *tmp112 :displayItem:y 12
   329 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   330 label *label81
   331 label *label62
 
   342 label *label60
   343 # "Function: def drawDigit12(in x, in y, in digit)"
   344 set :drawDigit12:x :displayItem:x
-    * set :drawDigit12:y :displayItem:y
-    * set :drawDigit12:digit :displayItem:amount
   345 jump *label86 notEqual :displayItem:amount 1
   346 op add *tmp118 :displayItem:x 7
-    * op add *tmp119 :drawDigit12:x 6
-    * op add *tmp120 :displayItem:x 7
-    * op sub *tmp121 *tmp118 1
+  347 op add *tmp119 :displayItem:x 6
+  348 op add *tmp121 :displayItem:x 6
   349 op add *tmp122 :displayItem:y 12
   350 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   351 jump *label87 always
 
   354 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
   355 op add *tmp124 :displayItem:y 6
   356 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * op add *tmp125 :displayItem:y 6
-    * op add *tmp126 :displayItem:x 7
-    * op add *tmp127 :displayItem:y 6
   357 draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp128 :displayItem:x 7
-    * op add *tmp129 :displayItem:y 6
-    * op add *tmp130 :displayItem:x 7
   358 op add *tmp131 :displayItem:y 12
   359 draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * op add *tmp132 :displayItem:y 12
-    * op add *tmp133 :displayItem:x 7
-    * op add *tmp134 :displayItem:y 12
   360 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   361 label *label87
   362 label *label85

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-11 instructions):
 
    74 jump *label23 always
    75 label *label3
    76 op add *tmp3 :x 8
-    * op add *tmp4 :y 8
    77 op add *tmp6 :y 7
    78 draw image *tmp3 *tmp6 :item 16 0
    79 op add :index :index 1
 
   220 jump *label60 greaterThanEq :displayItem:i 4
   221 op mod *tmp19 :displayItem:amount 10
   222 # "Function: def drawDigit(in x, in y, in digit)"
-    * set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :displayItem:y
   223 jump *label63 notEqual *tmp19 0
   224 label *label64
   225 op sub *tmp24 :displayItem:x 1
 
   229 label *label63
   230 jump *label65 notEqual *tmp19 1
   231 label *label66
-    * op add *tmp27 :displayItem:x 7
   232 op add *tmp28 :displayItem:x 6
-    * op add *tmp30 :displayItem:x 6
   233 op add *tmp31 :displayItem:y 12
   234 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   235 jump *label62 always
 
   293 label *label75
   294 jump *label77 notEqual *tmp19 7
   295 label *label78
-    * op add *tmp85 :displayItem:x 7
   296 op add *tmp86 :displayItem:x 6
-    * op add *tmp88 :displayItem:x 6
   297 op add *tmp89 :displayItem:y 12
   298 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp92 :displayItem:x 6
   299 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   300 jump *label62 always
   301 label *label77
 
   333 jump *label58 always
   334 label *label60
   335 # "Function: def drawDigit12(in x, in y, in digit)"
-    * set :drawDigit12:x :displayItem:x
   336 jump *label86 notEqual :displayItem:amount 1
-    * op add *tmp118 :displayItem:x 7
   337 op add *tmp119 :displayItem:x 6
-    * op add *tmp121 :displayItem:x 6
   338 op add *tmp122 :displayItem:y 12
   339 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   340 jump *label87 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   217 draw color 0 255 0 255
   218 set :displayItem:i 0
   219 label *label58
-    * jump *label60 greaterThanEq :displayItem:i 4
+  220 label *label88
   221 op mod *tmp19 :displayItem:amount 10
   222 # "Function: def drawDigit(in x, in y, in digit)"
   223 jump *label63 notEqual *tmp19 0
 
   330 label *label84
   331 label *label59
   332 op add :displayItem:i :displayItem:i 1
-    * jump *label58 always
+  333 jump *label88 lessThan :displayItem:i 4
   334 label *label60
   335 # "Function: def drawDigit12(in x, in y, in digit)"
   336 jump *label86 notEqual :displayItem:amount 1

Modifications by Unroll loop at line 90:5 (+257 instructions):
 
   215 # "Function: void displayItem(in x, in y)"
   216 op max :displayItem:amount AMOUNT 0
   217 draw color 0 255 0 255
-    * set :displayItem:i 0
-    * label *label58
-    * label *label88
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label63 notEqual *tmp19 0
-    * label *label64
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label62 always
-    * label *label63
-    * jump *label65 notEqual *tmp19 1
-    * label *label66
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label62 always
-    * label *label65
-    * jump *label67 notEqual *tmp19 2
-    * label *label68
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label62 always
-    * label *label67
-    * jump *label69 notEqual *tmp19 3
-    * label *label70
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label62 always
-    * label *label69
-    * jump *label71 notEqual *tmp19 4
-    * label *label72
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label62 always
-    * label *label71
-    * jump *label73 notEqual *tmp19 5
-    * label *label74
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label62 always
-    * label *label73
-    * jump *label75 notEqual *tmp19 6
-    * label *label76
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label62 always
-    * label *label75
-    * jump *label77 notEqual *tmp19 7
-    * label *label78
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label62 always
-    * label *label77
-    * jump *label79 notEqual *tmp19 8
-    * label *label80
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label62 always
-    * label *label79
-    * jump *label81 notEqual *tmp19 9
-    * label *label82
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label81
-    * label *label62
-    * label *label61
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label83 notEqual :displayItem:amount 0
-    * jump *label57 always
-    * label *label83
-    * label *label84
-    * label *label59
-    * op add :displayItem:i :displayItem:i 1
-    * jump *label88 lessThan :displayItem:i 4
-    * label *label60
+  218 set :displayItem:i 0
+  219 label *label89
+  220 label *label90
+  221 op mod *tmp19 :displayItem:amount 10
+  222 # "Function: def drawDigit(in x, in y, in digit)"
+  223 jump *label92 notEqual *tmp19 0
+  224 label *label91
+  225 op sub *tmp24 :displayItem:x 1
+  226 op sub *tmp26 :displayItem:y 1
+  227 draw lineRect *tmp24 *tmp26 9 14
+  228 jump *label111 always
+  229 label *label92
+  230 jump *label94 notEqual *tmp19 1
+  231 label *label93
+  232 op add *tmp28 :displayItem:x 6
+  233 op add *tmp31 :displayItem:y 12
+  234 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  235 jump *label111 always
+  236 label *label94
+  237 jump *label96 notEqual *tmp19 2
+  238 label *label95
+  239 op add *tmp32 :displayItem:x 7
+  240 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  241 op add *tmp33 :displayItem:y 6
+  242 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  243 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  244 op add *tmp40 :displayItem:y 12
+  245 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  246 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  247 jump *label111 always
+  248 label *label96
+  249 jump *label98 notEqual *tmp19 3
+  250 label *label97
+  251 op add *tmp44 :displayItem:x 7
+  252 op add *tmp46 :displayItem:y 12
+  253 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  254 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  255 op add *tmp48 :displayItem:y 6
+  256 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  257 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  258 jump *label111 always
+  259 label *label98
+  260 jump *label100 notEqual *tmp19 4
+  261 label *label99
+  262 op add *tmp54 :displayItem:x 7
+  263 op add *tmp56 :displayItem:y 12
+  264 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  265 op add *tmp57 :displayItem:y 6
+  266 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  267 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  268 jump *label111 always
+  269 label *label100
+  270 jump *label102 notEqual *tmp19 5
+  271 label *label101
+  272 op add *tmp62 :displayItem:x 7
+  273 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  274 op add *tmp65 :displayItem:y 6
+  275 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  276 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  277 op add *tmp70 :displayItem:y 12
+  278 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  279 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  280 jump *label111 always
+  281 label *label102
+  282 jump *label104 notEqual *tmp19 6
+  283 label *label103
+  284 op add *tmp74 :displayItem:y 12
+  285 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  286 op add *tmp75 :displayItem:x 7
+  287 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  288 op add *tmp78 :displayItem:y 6
+  289 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  290 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  291 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  292 jump *label111 always
+  293 label *label104
+  294 jump *label106 notEqual *tmp19 7
+  295 label *label105
+  296 op add *tmp86 :displayItem:x 6
+  297 op add *tmp89 :displayItem:y 12
+  298 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  299 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  300 jump *label111 always
+  301 label *label106
+  302 jump *label108 notEqual *tmp19 8
+  303 label *label107
+  304 op sub *tmp95 :displayItem:x 1
+  305 op sub *tmp97 :displayItem:y 1
+  306 draw lineRect *tmp95 *tmp97 9 14
+  307 op add *tmp98 :displayItem:y 6
+  308 op add *tmp99 :displayItem:x 7
+  309 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  310 jump *label111 always
+  311 label *label108
+  312 jump *label110 notEqual *tmp19 9
+  313 label *label109
+  314 op add *tmp101 :displayItem:x 7
+  315 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  316 op add *tmp104 :displayItem:y 12
+  317 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  318 op add *tmp105 :displayItem:y 6
+  319 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  320 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  321 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  322 label *label110
+  323 label *label111
+  324 label *label112
+  325 op sub :displayItem:x :displayItem:x 11
+  326 op idiv :displayItem:amount :displayItem:amount 10
+  327 jump *label113 notEqual :displayItem:amount 0
+  328 jump *label57 always
+  329 label *label113
+  330 label *label114
+  331 label *label115
+  332 op add :displayItem:i :displayItem:i 1
+  333 label *label116
+  334 op mod *tmp19 :displayItem:amount 10
+  335 # "Function: def drawDigit(in x, in y, in digit)"
+  336 jump *label118 notEqual *tmp19 0
+  337 label *label117
+  338 op sub *tmp24 :displayItem:x 1
+  339 op sub *tmp26 :displayItem:y 1
+  340 draw lineRect *tmp24 *tmp26 9 14
+  341 jump *label137 always
+  342 label *label118
+  343 jump *label120 notEqual *tmp19 1
+  344 label *label119
+  345 op add *tmp28 :displayItem:x 6
+  346 op add *tmp31 :displayItem:y 12
+  347 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  348 jump *label137 always
+  349 label *label120
+  350 jump *label122 notEqual *tmp19 2
+  351 label *label121
+  352 op add *tmp32 :displayItem:x 7
+  353 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  354 op add *tmp33 :displayItem:y 6
+  355 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  356 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  357 op add *tmp40 :displayItem:y 12
+  358 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  359 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  360 jump *label137 always
+  361 label *label122
+  362 jump *label124 notEqual *tmp19 3
+  363 label *label123
+  364 op add *tmp44 :displayItem:x 7
+  365 op add *tmp46 :displayItem:y 12
+  366 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  367 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  368 op add *tmp48 :displayItem:y 6
+  369 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  370 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  371 jump *label137 always
+  372 label *label124
+  373 jump *label126 notEqual *tmp19 4
+  374 label *label125
+  375 op add *tmp54 :displayItem:x 7
+  376 op add *tmp56 :displayItem:y 12
+  377 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  378 op add *tmp57 :displayItem:y 6
+  379 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  380 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  381 jump *label137 always
+  382 label *label126
+  383 jump *label128 notEqual *tmp19 5
+  384 label *label127
+  385 op add *tmp62 :displayItem:x 7
+  386 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  387 op add *tmp65 :displayItem:y 6
+  388 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  389 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  390 op add *tmp70 :displayItem:y 12
+  391 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  392 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  393 jump *label137 always
+  394 label *label128
+  395 jump *label130 notEqual *tmp19 6
+  396 label *label129
+  397 op add *tmp74 :displayItem:y 12
+  398 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  399 op add *tmp75 :displayItem:x 7
+  400 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  401 op add *tmp78 :displayItem:y 6
+  402 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  403 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  404 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  405 jump *label137 always
+  406 label *label130
+  407 jump *label132 notEqual *tmp19 7
+  408 label *label131
+  409 op add *tmp86 :displayItem:x 6
+  410 op add *tmp89 :displayItem:y 12
+  411 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  412 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  413 jump *label137 always
+  414 label *label132
+  415 jump *label134 notEqual *tmp19 8
+  416 label *label133
+  417 op sub *tmp95 :displayItem:x 1
+  418 op sub *tmp97 :displayItem:y 1
+  419 draw lineRect *tmp95 *tmp97 9 14
+  420 op add *tmp98 :displayItem:y 6
+  421 op add *tmp99 :displayItem:x 7
+  422 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  423 jump *label137 always
+  424 label *label134
+  425 jump *label136 notEqual *tmp19 9
+  426 label *label135
+  427 op add *tmp101 :displayItem:x 7
+  428 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  429 op add *tmp104 :displayItem:y 12
+  430 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  431 op add *tmp105 :displayItem:y 6
+  432 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  433 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  434 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  435 label *label136
+  436 label *label137
+  437 label *label138
+  438 op sub :displayItem:x :displayItem:x 11
+  439 op idiv :displayItem:amount :displayItem:amount 10
+  440 jump *label139 notEqual :displayItem:amount 0
+  441 jump *label57 always
+  442 label *label139
+  443 label *label140
+  444 label *label141
+  445 op add :displayItem:i :displayItem:i 1
+  446 label *label142
+  447 op mod *tmp19 :displayItem:amount 10
+  448 # "Function: def drawDigit(in x, in y, in digit)"
+  449 jump *label144 notEqual *tmp19 0
+  450 label *label143
+  451 op sub *tmp24 :displayItem:x 1
+  452 op sub *tmp26 :displayItem:y 1
+  453 draw lineRect *tmp24 *tmp26 9 14
+  454 jump *label163 always
+  455 label *label144
+  456 jump *label146 notEqual *tmp19 1
+  457 label *label145
+  458 op add *tmp28 :displayItem:x 6
+  459 op add *tmp31 :displayItem:y 12
+  460 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  461 jump *label163 always
+  462 label *label146
+  463 jump *label148 notEqual *tmp19 2
+  464 label *label147
+  465 op add *tmp32 :displayItem:x 7
+  466 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  467 op add *tmp33 :displayItem:y 6
+  468 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  469 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  470 op add *tmp40 :displayItem:y 12
+  471 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  472 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  473 jump *label163 always
+  474 label *label148
+  475 jump *label150 notEqual *tmp19 3
+  476 label *label149
+  477 op add *tmp44 :displayItem:x 7
+  478 op add *tmp46 :displayItem:y 12
+  479 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  480 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  481 op add *tmp48 :displayItem:y 6
+  482 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  483 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  484 jump *label163 always
+  485 label *label150
+  486 jump *label152 notEqual *tmp19 4
+  487 label *label151
+  488 op add *tmp54 :displayItem:x 7
+  489 op add *tmp56 :displayItem:y 12
+  490 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  491 op add *tmp57 :displayItem:y 6
+  492 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  493 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  494 jump *label163 always
+  495 label *label152
+  496 jump *label154 notEqual *tmp19 5
+  497 label *label153
+  498 op add *tmp62 :displayItem:x 7
+  499 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  500 op add *tmp65 :displayItem:y 6
+  501 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  502 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  503 op add *tmp70 :displayItem:y 12
+  504 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  505 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  506 jump *label163 always
+  507 label *label154
+  508 jump *label156 notEqual *tmp19 6
+  509 label *label155
+  510 op add *tmp74 :displayItem:y 12
+  511 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  512 op add *tmp75 :displayItem:x 7
+  513 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  514 op add *tmp78 :displayItem:y 6
+  515 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  516 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  517 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  518 jump *label163 always
+  519 label *label156
+  520 jump *label158 notEqual *tmp19 7
+  521 label *label157
+  522 op add *tmp86 :displayItem:x 6
+  523 op add *tmp89 :displayItem:y 12
+  524 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  525 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  526 jump *label163 always
+  527 label *label158
+  528 jump *label160 notEqual *tmp19 8
+  529 label *label159
+  530 op sub *tmp95 :displayItem:x 1
+  531 op sub *tmp97 :displayItem:y 1
+  532 draw lineRect *tmp95 *tmp97 9 14
+  533 op add *tmp98 :displayItem:y 6
+  534 op add *tmp99 :displayItem:x 7
+  535 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  536 jump *label163 always
+  537 label *label160
+  538 jump *label162 notEqual *tmp19 9
+  539 label *label161
+  540 op add *tmp101 :displayItem:x 7
+  541 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  542 op add *tmp104 :displayItem:y 12
+  543 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  544 op add *tmp105 :displayItem:y 6
+  545 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  546 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  547 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  548 label *label162
+  549 label *label163
+  550 label *label164
+  551 op sub :displayItem:x :displayItem:x 11
+  552 op idiv :displayItem:amount :displayItem:amount 10
+  553 jump *label165 notEqual :displayItem:amount 0
+  554 jump *label57 always
+  555 label *label165
+  556 label *label166
+  557 label *label167
+  558 op add :displayItem:i :displayItem:i 1
+  559 label *label168
+  560 op mod *tmp19 :displayItem:amount 10
+  561 # "Function: def drawDigit(in x, in y, in digit)"
+  562 jump *label170 notEqual *tmp19 0
+  563 label *label169
+  564 op sub *tmp24 :displayItem:x 1
+  565 op sub *tmp26 :displayItem:y 1
+  566 draw lineRect *tmp24 *tmp26 9 14
+  567 jump *label189 always
+  568 label *label170
+  569 jump *label172 notEqual *tmp19 1
+  570 label *label171
+  571 op add *tmp28 :displayItem:x 6
+  572 op add *tmp31 :displayItem:y 12
+  573 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  574 jump *label189 always
+  575 label *label172
+  576 jump *label174 notEqual *tmp19 2
+  577 label *label173
+  578 op add *tmp32 :displayItem:x 7
+  579 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  580 op add *tmp33 :displayItem:y 6
+  581 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  582 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  583 op add *tmp40 :displayItem:y 12
+  584 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  585 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  586 jump *label189 always
+  587 label *label174
+  588 jump *label176 notEqual *tmp19 3
+  589 label *label175
+  590 op add *tmp44 :displayItem:x 7
+  591 op add *tmp46 :displayItem:y 12
+  592 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  593 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  594 op add *tmp48 :displayItem:y 6
+  595 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  596 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  597 jump *label189 always
+  598 label *label176
+  599 jump *label178 notEqual *tmp19 4
+  600 label *label177
+  601 op add *tmp54 :displayItem:x 7
+  602 op add *tmp56 :displayItem:y 12
+  603 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  604 op add *tmp57 :displayItem:y 6
+  605 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  606 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  607 jump *label189 always
+  608 label *label178
+  609 jump *label180 notEqual *tmp19 5
+  610 label *label179
+  611 op add *tmp62 :displayItem:x 7
+  612 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  613 op add *tmp65 :displayItem:y 6
+  614 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  615 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  616 op add *tmp70 :displayItem:y 12
+  617 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  618 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  619 jump *label189 always
+  620 label *label180
+  621 jump *label182 notEqual *tmp19 6
+  622 label *label181
+  623 op add *tmp74 :displayItem:y 12
+  624 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  625 op add *tmp75 :displayItem:x 7
+  626 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  627 op add *tmp78 :displayItem:y 6
+  628 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  629 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  630 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  631 jump *label189 always
+  632 label *label182
+  633 jump *label184 notEqual *tmp19 7
+  634 label *label183
+  635 op add *tmp86 :displayItem:x 6
+  636 op add *tmp89 :displayItem:y 12
+  637 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  638 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  639 jump *label189 always
+  640 label *label184
+  641 jump *label186 notEqual *tmp19 8
+  642 label *label185
+  643 op sub *tmp95 :displayItem:x 1
+  644 op sub *tmp97 :displayItem:y 1
+  645 draw lineRect *tmp95 *tmp97 9 14
+  646 op add *tmp98 :displayItem:y 6
+  647 op add *tmp99 :displayItem:x 7
+  648 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  649 jump *label189 always
+  650 label *label186
+  651 jump *label188 notEqual *tmp19 9
+  652 label *label187
+  653 op add *tmp101 :displayItem:x 7
+  654 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  655 op add *tmp104 :displayItem:y 12
+  656 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  657 op add *tmp105 :displayItem:y 6
+  658 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  659 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  660 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  661 label *label188
+  662 label *label189
+  663 label *label190
+  664 op sub :displayItem:x :displayItem:x 11
+  665 op idiv :displayItem:amount :displayItem:amount 10
+  666 jump *label191 notEqual :displayItem:amount 0
+  667 jump *label57 always
+  668 label *label191
+  669 label *label192
+  670 label *label193
+  671 op add :displayItem:i :displayItem:i 1
+  672 label *label60
   673 # "Function: def drawDigit12(in x, in y, in digit)"
   674 jump *label86 notEqual :displayItem:amount 1
   675 op add *tmp119 :displayItem:x 6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   329 label *label113
   330 label *label114
   331 label *label115
-    * op add :displayItem:i :displayItem:i 1
+  332 op add :displayItem:i 0 1
   333 label *label116
   334 op mod *tmp19 :displayItem:amount 10
   335 # "Function: def drawDigit(in x, in y, in digit)"
 
   442 label *label139
   443 label *label140
   444 label *label141
-    * op add :displayItem:i :displayItem:i 1
+  445 op add :displayItem:i 1 1
   446 label *label142
   447 op mod *tmp19 :displayItem:amount 10
   448 # "Function: def drawDigit(in x, in y, in digit)"
 
   555 label *label165
   556 label *label166
   557 label *label167
-    * op add :displayItem:i :displayItem:i 1
+  558 op add :displayItem:i 2 1
   559 label *label168
   560 op mod *tmp19 :displayItem:amount 10
   561 # "Function: def drawDigit(in x, in y, in digit)"
 
   668 label *label191
   669 label *label192
   670 label *label193
-    * op add :displayItem:i :displayItem:i 1
+  671 op add :displayItem:i 3 1
   672 label *label60
   673 # "Function: def drawDigit12(in x, in y, in digit)"
   674 jump *label86 notEqual :displayItem:amount 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   215 # "Function: void displayItem(in x, in y)"
   216 op max :displayItem:amount AMOUNT 0
   217 draw color 0 255 0 255
-    * set :displayItem:i 0
   218 label *label89
   219 label *label90
   220 op mod *tmp19 :displayItem:amount 10
 
   328 label *label113
   329 label *label114
   330 label *label115
-    * op add :displayItem:i 0 1
   331 label *label116
   332 op mod *tmp19 :displayItem:amount 10
   333 # "Function: def drawDigit(in x, in y, in digit)"
 
   440 label *label139
   441 label *label140
   442 label *label141
-    * op add :displayItem:i 1 1
   443 label *label142
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
 
   552 label *label165
   553 label *label166
   554 label *label167
-    * op add :displayItem:i 2 1
   555 label *label168
   556 op mod *tmp19 :displayItem:amount 10
   557 # "Function: def drawDigit(in x, in y, in digit)"
 
   664 label *label191
   665 label *label192
   666 label *label193
-    * op add :displayItem:i 3 1
   667 label *label60
   668 # "Function: def drawDigit12(in x, in y, in digit)"
   669 jump *label86 notEqual :displayItem:amount 1

Modifications by Inline function 'eraseNumbers' defined at line 77:1 (-1 instructions):
 
    92 drawflush display1
    93 set :y 152
    94 set :eraseNumbers:first_column true
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+   95 label *label194
+   96 # "Function: def eraseNumbers(in first_column)"
+   97 draw color 0 0 80 255
+   98 jump *label195 equal :eraseNumbers:first_column false
+   99 draw rect 23 0 70 176
+  100 jump *label196 always
+  101 label *label195
+  102 draw rect 109 0 176 176
+  103 label *label196
+  104 label *label197
   105 set :index 0
   106 set :item @sand
   107 op add *tmp10 @counter 1
 
   186 drawflush display1
   187 set :y 152
   188 set :eraseNumbers:first_column false
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+  189 label *label198
+  190 # "Function: def eraseNumbers(in first_column)"
+  191 draw color 0 0 80 255
+  192 jump *label199 equal :eraseNumbers:first_column false
+  193 draw rect 23 0 70 176
+  194 jump *label200 always
+  195 label *label199
+  196 draw rect 109 0 176 176
+  197 label *label200
+  198 label *label201
   199 label *label49
   200 label *label50
   201 label *label27
 
   217 label *label51
   218 return :eraseImages*retaddr
   219 end
-    * label *label1
-    * # "Function: def eraseNumbers(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label55 equal :eraseNumbers:first_column false
-    * draw rect 23 0 70 176
-    * jump *label56 always
-    * label *label55
-    * draw rect 109 0 176 176
-    * label *label56
-    * label *label54
-    * return :eraseNumbers*retaddr
-    * end
   220 label *label2
   221 # "Function: void displayItem(in x, in y)"
   222 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    95 label *label194
    96 # "Function: def eraseNumbers(in first_column)"
    97 draw color 0 0 80 255
-    * jump *label195 equal :eraseNumbers:first_column false
+   98 jump *label195 equal true false
    99 draw rect 23 0 70 176
   100 jump *label196 always
   101 label *label195
 
   189 label *label198
   190 # "Function: def eraseNumbers(in first_column)"
   191 draw color 0 0 80 255
-    * jump *label199 equal :eraseNumbers:first_column false
+  192 jump *label199 equal false false
   193 draw rect 23 0 70 176
   194 jump *label200 always
   195 label *label199

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    91 label *label5
    92 drawflush display1
    93 set :y 152
-    * set :eraseNumbers:first_column true
    94 label *label194
    95 # "Function: def eraseNumbers(in first_column)"
    96 draw color 0 0 80 255
 
   184 jump *label49 notEqual :index 8
   185 drawflush display1
   186 set :y 152
-    * set :eraseNumbers:first_column false
   187 label *label198
   188 # "Function: def eraseNumbers(in first_column)"
   189 draw color 0 0 80 255

Modifications by Inline function 'eraseImages' defined at line 68:1 (-1 instructions):
 
     2 set :x 7
     3 set :y 152
     4 set :eraseImages:first_column true
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+    5 label *label202
+    6 # "Function: def eraseImages(in first_column)"
+    7 draw color 0 0 80 255
+    8 jump *label203 equal :eraseImages:first_column false
+    9 draw rect 0 0 23 176
+   10 jump *label204 always
+   11 label *label203
+   12 draw rect 93 0 16 176
+   13 label *label204
+   14 label *label205
    15 set :eraseImages:first_column false
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+   16 label *label206
+   17 # "Function: def eraseImages(in first_column)"
+   18 draw color 0 0 80 255
+   19 jump *label207 equal :eraseImages:first_column false
+   20 draw rect 0 0 23 176
+   21 jump *label208 always
+   22 label *label207
+   23 draw rect 93 0 16 176
+   24 label *label208
+   25 label *label209
    26 draw color 255 255 255 255
    27 set :index 0
    28 set :item @sand
 
   221 label *label28
   222 drawflush display1
   223 end
-    * label *label0
-    * # "Function: def eraseImages(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label52 equal :eraseImages:first_column false
-    * draw rect 0 0 23 176
-    * jump *label53 always
-    * label *label52
-    * draw rect 93 0 16 176
-    * label *label53
-    * label *label51
-    * return :eraseImages*retaddr
-    * end
   224 label *label2
   225 # "Function: void displayItem(in x, in y)"
   226 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 label *label202
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label203 equal :eraseImages:first_column false
+    8 jump *label203 equal true false
     9 draw rect 0 0 23 176
    10 jump *label204 always
    11 label *label203
 
    16 label *label206
    17 # "Function: def eraseImages(in first_column)"
    18 draw color 0 0 80 255
-    * jump *label207 equal :eraseImages:first_column false
+   19 jump *label207 equal false false
    20 draw rect 0 0 23 176
    21 jump *label208 always
    22 label *label207

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     1 draw stroke 2
     2 set :x 7
     3 set :y 152
-    * set :eraseImages:first_column true
     4 label *label202
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
 
    11 draw rect 93 0 16 176
    12 label *label204
    13 label *label205
-    * set :eraseImages:first_column false
    14 label *label206
    15 # "Function: def eraseImages(in first_column)"
    16 draw color 0 0 80 255

Modifications by Unroll iteration loop at line 32:1 (+117 instructions):
 
    23 label *label209
    24 draw color 255 255 255 255
    25 set :index 0
-    * set :item @sand
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label6 (m:marker0)
-    * set :item @copper
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label7 (m:marker0)
-    * set :item @lead
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label8 (m:marker0)
-    * set :item @coal
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label9 (m:marker0)
-    * set :item @titanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label10 (m:marker0)
-    * set :item @thorium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label11 (m:marker0)
-    * set :item @scrap
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label12 (m:marker0)
-    * set :item @graphite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label13 (m:marker0)
-    * set :item @metaglass
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label14 (m:marker0)
-    * set :item @silicon
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label15 (m:marker0)
-    * set :item @pyratite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label16 (m:marker0)
-    * set :item @blast-compound
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label17 (m:marker0)
-    * set :item @plastanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label18 (m:marker0)
-    * set :item @phase-fabric
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label19 (m:marker0)
-    * set :item @surge-alloy
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label20 (m:marker0)
-    * set :item @spore-pod
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label22 (m:marker0)
-    * jump *label23 always
-    * label *label3
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label24 notEqual :index 8
-    * set :y 152
-    * set :x 93
-    * draw color 255 255 255 255
-    * label *label24
-    * label *label25
-    * label *label4
-    * multijump *tmp2 0 0 (m:marker0)
-    * multilabel *label21 (m:marker0)
-    * label *label23
-    * label *label5
+   26 set :item @sand
+   27 op add *tmp2 @counter 1
+   28 label *label210
+   29 op add *tmp3 :x 8
+   30 op add *tmp6 :y 7
+   31 draw image *tmp3 *tmp6 :item 16 0
+   32 op add :index :index 1
+   33 op sub :y :y 20
+   34 jump *label211 notEqual :index 8
+   35 set :y 152
+   36 set :x 93
+   37 draw color 255 255 255 255
+   38 label *label211
+   39 label *label212
+   40 label *label213
+   41 set :item @copper
+   42 op add *tmp2 @counter 1
+   43 label *label216
+   44 op add *tmp3 :x 8
+   45 op add *tmp6 :y 7
+   46 draw image *tmp3 *tmp6 :item 16 0
+   47 op add :index :index 1
+   48 op sub :y :y 20
+   49 jump *label217 notEqual :index 8
+   50 set :y 152
+   51 set :x 93
+   52 draw color 255 255 255 255
+   53 label *label217
+   54 label *label218
+   55 label *label219
+   56 set :item @lead
+   57 op add *tmp2 @counter 1
+   58 label *label222
+   59 op add *tmp3 :x 8
+   60 op add *tmp6 :y 7
+   61 draw image *tmp3 *tmp6 :item 16 0
+   62 op add :index :index 1
+   63 op sub :y :y 20
+   64 jump *label223 notEqual :index 8
+   65 set :y 152
+   66 set :x 93
+   67 draw color 255 255 255 255
+   68 label *label223
+   69 label *label224
+   70 label *label225
+   71 set :item @coal
+   72 op add *tmp2 @counter 1
+   73 label *label228
+   74 op add *tmp3 :x 8
+   75 op add *tmp6 :y 7
+   76 draw image *tmp3 *tmp6 :item 16 0
+   77 op add :index :index 1
+   78 op sub :y :y 20
+   79 jump *label229 notEqual :index 8
+   80 set :y 152
+   81 set :x 93
+   82 draw color 255 255 255 255
+   83 label *label229
+   84 label *label230
+   85 label *label231
+   86 set :item @titanium
+   87 op add *tmp2 @counter 1
+   88 label *label234
+   89 op add *tmp3 :x 8
+   90 op add *tmp6 :y 7
+   91 draw image *tmp3 *tmp6 :item 16 0
+   92 op add :index :index 1
+   93 op sub :y :y 20
+   94 jump *label235 notEqual :index 8
+   95 set :y 152
+   96 set :x 93
+   97 draw color 255 255 255 255
+   98 label *label235
+   99 label *label236
+  100 label *label237
+  101 set :item @thorium
+  102 op add *tmp2 @counter 1
+  103 label *label240
+  104 op add *tmp3 :x 8
+  105 op add *tmp6 :y 7
+  106 draw image *tmp3 *tmp6 :item 16 0
+  107 op add :index :index 1
+  108 op sub :y :y 20
+  109 jump *label241 notEqual :index 8
+  110 set :y 152
+  111 set :x 93
+  112 draw color 255 255 255 255
+  113 label *label241
+  114 label *label242
+  115 label *label243
+  116 set :item @scrap
+  117 op add *tmp2 @counter 1
+  118 label *label246
+  119 op add *tmp3 :x 8
+  120 op add *tmp6 :y 7
+  121 draw image *tmp3 *tmp6 :item 16 0
+  122 op add :index :index 1
+  123 op sub :y :y 20
+  124 jump *label247 notEqual :index 8
+  125 set :y 152
+  126 set :x 93
+  127 draw color 255 255 255 255
+  128 label *label247
+  129 label *label248
+  130 label *label249
+  131 set :item @graphite
+  132 op add *tmp2 @counter 1
+  133 label *label252
+  134 op add *tmp3 :x 8
+  135 op add *tmp6 :y 7
+  136 draw image *tmp3 *tmp6 :item 16 0
+  137 op add :index :index 1
+  138 op sub :y :y 20
+  139 jump *label253 notEqual :index 8
+  140 set :y 152
+  141 set :x 93
+  142 draw color 255 255 255 255
+  143 label *label253
+  144 label *label254
+  145 label *label255
+  146 set :item @metaglass
+  147 op add *tmp2 @counter 1
+  148 label *label258
+  149 op add *tmp3 :x 8
+  150 op add *tmp6 :y 7
+  151 draw image *tmp3 *tmp6 :item 16 0
+  152 op add :index :index 1
+  153 op sub :y :y 20
+  154 jump *label259 notEqual :index 8
+  155 set :y 152
+  156 set :x 93
+  157 draw color 255 255 255 255
+  158 label *label259
+  159 label *label260
+  160 label *label261
+  161 set :item @silicon
+  162 op add *tmp2 @counter 1
+  163 label *label264
+  164 op add *tmp3 :x 8
+  165 op add *tmp6 :y 7
+  166 draw image *tmp3 *tmp6 :item 16 0
+  167 op add :index :index 1
+  168 op sub :y :y 20
+  169 jump *label265 notEqual :index 8
+  170 set :y 152
+  171 set :x 93
+  172 draw color 255 255 255 255
+  173 label *label265
+  174 label *label266
+  175 label *label267
+  176 set :item @pyratite
+  177 op add *tmp2 @counter 1
+  178 label *label270
+  179 op add *tmp3 :x 8
+  180 op add *tmp6 :y 7
+  181 draw image *tmp3 *tmp6 :item 16 0
+  182 op add :index :index 1
+  183 op sub :y :y 20
+  184 jump *label271 notEqual :index 8
+  185 set :y 152
+  186 set :x 93
+  187 draw color 255 255 255 255
+  188 label *label271
+  189 label *label272
+  190 label *label273
+  191 set :item @blast-compound
+  192 op add *tmp2 @counter 1
+  193 label *label276
+  194 op add *tmp3 :x 8
+  195 op add *tmp6 :y 7
+  196 draw image *tmp3 *tmp6 :item 16 0
+  197 op add :index :index 1
+  198 op sub :y :y 20
+  199 jump *label277 notEqual :index 8
+  200 set :y 152
+  201 set :x 93
+  202 draw color 255 255 255 255
+  203 label *label277
+  204 label *label278
+  205 label *label279
+  206 set :item @plastanium
+  207 op add *tmp2 @counter 1
+  208 label *label282
+  209 op add *tmp3 :x 8
+  210 op add *tmp6 :y 7
+  211 draw image *tmp3 *tmp6 :item 16 0
+  212 op add :index :index 1
+  213 op sub :y :y 20
+  214 jump *label283 notEqual :index 8
+  215 set :y 152
+  216 set :x 93
+  217 draw color 255 255 255 255
+  218 label *label283
+  219 label *label284
+  220 label *label285
+  221 set :item @phase-fabric
+  222 op add *tmp2 @counter 1
+  223 label *label288
+  224 op add *tmp3 :x 8
+  225 op add *tmp6 :y 7
+  226 draw image *tmp3 *tmp6 :item 16 0
+  227 op add :index :index 1
+  228 op sub :y :y 20
+  229 jump *label289 notEqual :index 8
+  230 set :y 152
+  231 set :x 93
+  232 draw color 255 255 255 255
+  233 label *label289
+  234 label *label290
+  235 label *label291
+  236 set :item @surge-alloy
+  237 op add *tmp2 @counter 1
+  238 label *label294
+  239 op add *tmp3 :x 8
+  240 op add *tmp6 :y 7
+  241 draw image *tmp3 *tmp6 :item 16 0
+  242 op add :index :index 1
+  243 op sub :y :y 20
+  244 jump *label295 notEqual :index 8
+  245 set :y 152
+  246 set :x 93
+  247 draw color 255 255 255 255
+  248 label *label295
+  249 label *label296
+  250 label *label297
+  251 set :item @spore-pod
+  252 op add *tmp2 @counter 1
+  253 label *label300
+  254 op add *tmp3 :x 8
+  255 op add *tmp6 :y 7
+  256 draw image *tmp3 *tmp6 :item 16 0
+  257 op add :index :index 1
+  258 op sub :y :y 20
+  259 jump *label301 notEqual :index 8
+  260 set :y 152
+  261 set :x 93
+  262 draw color 255 255 255 255
+  263 label *label301
+  264 label *label302
+  265 label *label303
+  266 label *label23
+  267 label *label5
   268 drawflush display1
   269 set :y 152
   270 label *label194

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-46 instructions):
 
    24 draw color 255 255 255 255
    25 set :index 0
    26 set :item @sand
-    * op add *tmp2 @counter 1
    27 label *label210
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label211 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   28 op add *tmp3 7 8
+   29 op add *tmp6 152 7
+   30 draw image 15 159 @sand 16 0
+   31 op add :index 0 1
+   32 op sub :y 152 20
+   33 jump *label211 notEqual 1 8
    34 draw color 255 255 255 255
    35 label *label211
    36 label *label212
    37 label *label213
    38 set :item @copper
-    * op add *tmp2 @counter 1
    39 label *label216
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label217 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   40 op add *tmp3 7 8
+   41 op add *tmp6 132 7
+   42 draw image 15 139 @copper 16 0
+   43 op add :index 1 1
+   44 op sub :y 132 20
+   45 jump *label217 notEqual 2 8
    46 draw color 255 255 255 255
    47 label *label217
    48 label *label218
    49 label *label219
    50 set :item @lead
-    * op add *tmp2 @counter 1
    51 label *label222
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label223 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   52 op add *tmp3 7 8
+   53 op add *tmp6 112 7
+   54 draw image 15 119 @lead 16 0
+   55 op add :index 2 1
+   56 op sub :y 112 20
+   57 jump *label223 notEqual 3 8
    58 draw color 255 255 255 255
    59 label *label223
    60 label *label224
    61 label *label225
    62 set :item @coal
-    * op add *tmp2 @counter 1
    63 label *label228
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label229 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   64 op add *tmp3 7 8
+   65 op add *tmp6 92 7
+   66 draw image 15 99 @coal 16 0
+   67 op add :index 3 1
+   68 op sub :y 92 20
+   69 jump *label229 notEqual 4 8
    70 draw color 255 255 255 255
    71 label *label229
    72 label *label230
    73 label *label231
    74 set :item @titanium
-    * op add *tmp2 @counter 1
    75 label *label234
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label235 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   76 op add *tmp3 7 8
+   77 op add *tmp6 72 7
+   78 draw image 15 79 @titanium 16 0
+   79 op add :index 4 1
+   80 op sub :y 72 20
+   81 jump *label235 notEqual 5 8
    82 draw color 255 255 255 255
    83 label *label235
    84 label *label236
    85 label *label237
    86 set :item @thorium
-    * op add *tmp2 @counter 1
    87 label *label240
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label241 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   88 op add *tmp3 7 8
+   89 op add *tmp6 52 7
+   90 draw image 15 59 @thorium 16 0
+   91 op add :index 5 1
+   92 op sub :y 52 20
+   93 jump *label241 notEqual 6 8
    94 draw color 255 255 255 255
    95 label *label241
    96 label *label242
    97 label *label243
    98 set :item @scrap
-    * op add *tmp2 @counter 1
    99 label *label246
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label247 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  100 op add *tmp3 7 8
+  101 op add *tmp6 32 7
+  102 draw image 15 39 @scrap 16 0
+  103 op add :index 6 1
+  104 op sub :y 32 20
+  105 jump *label247 notEqual 7 8
   106 draw color 255 255 255 255
   107 label *label247
   108 label *label248
   109 label *label249
   110 set :item @graphite
-    * op add *tmp2 @counter 1
   111 label *label252
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label253 notEqual :index 8
+  112 op add *tmp3 7 8
+  113 op add *tmp6 12 7
+  114 draw image 15 19 @graphite 16 0
+  115 op add :index 7 1
+  116 op sub :y 12 20
+  117 jump *label253 notEqual 8 8
   118 set :y 152
   119 set :x 93
   120 draw color 255 255 255 255
 
   122 label *label254
   123 label *label255
   124 set :item @metaglass
-    * op add *tmp2 @counter 1
   125 label *label258
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label259 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  126 op add *tmp3 93 8
+  127 op add *tmp6 152 7
+  128 draw image 101 159 @metaglass 16 0
+  129 op add :index 8 1
+  130 op sub :y 152 20
+  131 jump *label259 notEqual 9 8
   132 draw color 255 255 255 255
   133 label *label259
   134 label *label260
   135 label *label261
   136 set :item @silicon
-    * op add *tmp2 @counter 1
   137 label *label264
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label265 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  138 op add *tmp3 93 8
+  139 op add *tmp6 132 7
+  140 draw image 101 139 @silicon 16 0
+  141 op add :index 9 1
+  142 op sub :y 132 20
+  143 jump *label265 notEqual 10 8
   144 draw color 255 255 255 255
   145 label *label265
   146 label *label266
   147 label *label267
   148 set :item @pyratite
-    * op add *tmp2 @counter 1
   149 label *label270
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label271 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  150 op add *tmp3 93 8
+  151 op add *tmp6 112 7
+  152 draw image 101 119 @pyratite 16 0
+  153 op add :index 10 1
+  154 op sub :y 112 20
+  155 jump *label271 notEqual 11 8
   156 draw color 255 255 255 255
   157 label *label271
   158 label *label272
   159 label *label273
   160 set :item @blast-compound
-    * op add *tmp2 @counter 1
   161 label *label276
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label277 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  162 op add *tmp3 93 8
+  163 op add *tmp6 92 7
+  164 draw image 101 99 @blast-compound 16 0
+  165 op add :index 11 1
+  166 op sub :y 92 20
+  167 jump *label277 notEqual 12 8
   168 draw color 255 255 255 255
   169 label *label277
   170 label *label278
   171 label *label279
   172 set :item @plastanium
-    * op add *tmp2 @counter 1
   173 label *label282
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label283 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  174 op add *tmp3 93 8
+  175 op add *tmp6 72 7
+  176 draw image 101 79 @plastanium 16 0
+  177 op add :index 12 1
+  178 op sub :y 72 20
+  179 jump *label283 notEqual 13 8
   180 draw color 255 255 255 255
   181 label *label283
   182 label *label284
   183 label *label285
   184 set :item @phase-fabric
-    * op add *tmp2 @counter 1
   185 label *label288
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label289 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  186 op add *tmp3 93 8
+  187 op add *tmp6 52 7
+  188 draw image 101 59 @phase-fabric 16 0
+  189 op add :index 13 1
+  190 op sub :y 52 20
+  191 jump *label289 notEqual 14 8
   192 draw color 255 255 255 255
   193 label *label289
   194 label *label290
   195 label *label291
   196 set :item @surge-alloy
-    * op add *tmp2 @counter 1
   197 label *label294
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label295 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  198 op add *tmp3 93 8
+  199 op add *tmp6 32 7
+  200 draw image 101 39 @surge-alloy 16 0
+  201 op add :index 14 1
+  202 op sub :y 32 20
+  203 jump *label295 notEqual 15 8
   204 draw color 255 255 255 255
   205 label *label295
   206 label *label296
   207 label *label297
   208 set :item @spore-pod
-    * op add *tmp2 @counter 1
   209 label *label300
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label301 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  210 op add *tmp3 93 8
+  211 op add *tmp6 12 7
+  212 draw image 101 19 @spore-pod 16 0
+  213 op add :index 15 1
+  214 op sub :y 12 20
+  215 jump *label301 notEqual 16 8
   216 draw color 255 255 255 255
   217 label *label301
   218 label *label302

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-85 instructions):
     0 set AMOUNT 12345
     1 draw stroke 2
-    * set :x 7
-    * set :y 152
     2 label *label202
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
 
    20 label *label208
    21 label *label209
    22 draw color 255 255 255 255
-    * set :index 0
-    * set :item @sand
    23 label *label210
-    * op add *tmp3 7 8
-    * op add *tmp6 152 7
    24 draw image 15 159 @sand 16 0
-    * op add :index 0 1
-    * op sub :y 152 20
    25 jump *label211 notEqual 1 8
    26 draw color 255 255 255 255
    27 label *label211
    28 label *label212
    29 label *label213
-    * set :item @copper
    30 label *label216
-    * op add *tmp3 7 8
-    * op add *tmp6 132 7
    31 draw image 15 139 @copper 16 0
-    * op add :index 1 1
-    * op sub :y 132 20
    32 jump *label217 notEqual 2 8
    33 draw color 255 255 255 255
    34 label *label217
    35 label *label218
    36 label *label219
-    * set :item @lead
    37 label *label222
-    * op add *tmp3 7 8
-    * op add *tmp6 112 7
    38 draw image 15 119 @lead 16 0
-    * op add :index 2 1
-    * op sub :y 112 20
    39 jump *label223 notEqual 3 8
    40 draw color 255 255 255 255
    41 label *label223
    42 label *label224
    43 label *label225
-    * set :item @coal
    44 label *label228
-    * op add *tmp3 7 8
-    * op add *tmp6 92 7
    45 draw image 15 99 @coal 16 0
-    * op add :index 3 1
-    * op sub :y 92 20
    46 jump *label229 notEqual 4 8
    47 draw color 255 255 255 255
    48 label *label229
    49 label *label230
    50 label *label231
-    * set :item @titanium
    51 label *label234
-    * op add *tmp3 7 8
-    * op add *tmp6 72 7
    52 draw image 15 79 @titanium 16 0
-    * op add :index 4 1
-    * op sub :y 72 20
    53 jump *label235 notEqual 5 8
    54 draw color 255 255 255 255
    55 label *label235
    56 label *label236
    57 label *label237
-    * set :item @thorium
    58 label *label240
-    * op add *tmp3 7 8
-    * op add *tmp6 52 7
    59 draw image 15 59 @thorium 16 0
-    * op add :index 5 1
-    * op sub :y 52 20
    60 jump *label241 notEqual 6 8
    61 draw color 255 255 255 255
    62 label *label241
    63 label *label242
    64 label *label243
-    * set :item @scrap
    65 label *label246
-    * op add *tmp3 7 8
-    * op add *tmp6 32 7
    66 draw image 15 39 @scrap 16 0
-    * op add :index 6 1
-    * op sub :y 32 20
    67 jump *label247 notEqual 7 8
    68 draw color 255 255 255 255
    69 label *label247
    70 label *label248
    71 label *label249
-    * set :item @graphite
    72 label *label252
-    * op add *tmp3 7 8
-    * op add *tmp6 12 7
    73 draw image 15 19 @graphite 16 0
-    * op add :index 7 1
-    * op sub :y 12 20
    74 jump *label253 notEqual 8 8
-    * set :y 152
-    * set :x 93
    75 draw color 255 255 255 255
    76 label *label253
    77 label *label254
    78 label *label255
-    * set :item @metaglass
    79 label *label258
-    * op add *tmp3 93 8
-    * op add *tmp6 152 7
    80 draw image 101 159 @metaglass 16 0
-    * op add :index 8 1
-    * op sub :y 152 20
    81 jump *label259 notEqual 9 8
    82 draw color 255 255 255 255
    83 label *label259
    84 label *label260
    85 label *label261
-    * set :item @silicon
    86 label *label264
-    * op add *tmp3 93 8
-    * op add *tmp6 132 7
    87 draw image 101 139 @silicon 16 0
-    * op add :index 9 1
-    * op sub :y 132 20
    88 jump *label265 notEqual 10 8
    89 draw color 255 255 255 255
    90 label *label265
    91 label *label266
    92 label *label267
-    * set :item @pyratite
    93 label *label270
-    * op add *tmp3 93 8
-    * op add *tmp6 112 7
    94 draw image 101 119 @pyratite 16 0
-    * op add :index 10 1
-    * op sub :y 112 20
    95 jump *label271 notEqual 11 8
    96 draw color 255 255 255 255
    97 label *label271
    98 label *label272
    99 label *label273
-    * set :item @blast-compound
   100 label *label276
-    * op add *tmp3 93 8
-    * op add *tmp6 92 7
   101 draw image 101 99 @blast-compound 16 0
-    * op add :index 11 1
-    * op sub :y 92 20
   102 jump *label277 notEqual 12 8
   103 draw color 255 255 255 255
   104 label *label277
   105 label *label278
   106 label *label279
-    * set :item @plastanium
   107 label *label282
-    * op add *tmp3 93 8
-    * op add *tmp6 72 7
   108 draw image 101 79 @plastanium 16 0
-    * op add :index 12 1
-    * op sub :y 72 20
   109 jump *label283 notEqual 13 8
   110 draw color 255 255 255 255
   111 label *label283
   112 label *label284
   113 label *label285
-    * set :item @phase-fabric
   114 label *label288
-    * op add *tmp3 93 8
-    * op add *tmp6 52 7
   115 draw image 101 59 @phase-fabric 16 0
-    * op add :index 13 1
-    * op sub :y 52 20
   116 jump *label289 notEqual 14 8
   117 draw color 255 255 255 255
   118 label *label289
   119 label *label290
   120 label *label291
-    * set :item @surge-alloy
   121 label *label294
-    * op add *tmp3 93 8
-    * op add *tmp6 32 7
   122 draw image 101 39 @surge-alloy 16 0
-    * op add :index 14 1
-    * op sub :y 32 20
   123 jump *label295 notEqual 15 8
   124 draw color 255 255 255 255
   125 label *label295
   126 label *label296
   127 label *label297
-    * set :item @spore-pod
   128 label *label300
-    * op add *tmp3 93 8
-    * op add *tmp6 12 7
   129 draw image 101 19 @spore-pod 16 0
-    * op add :index 15 1
-    * op sub :y 12 20
   130 jump *label301 notEqual 16 8
   131 draw color 255 255 255 255
   132 label *label301

Modifications by Inline function 'displayItem' defined at line 86:1 (+349 instructions):
 
   217 jump *label47 greaterThanEq :index 8
   218 set :displayItem:x 71
   219 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  220 label *label308
+  221 # "Function: void displayItem(in x, in y)"
+  222 op max :displayItem:amount AMOUNT 0
+  223 draw color 0 255 0 255
+  224 label *label309
+  225 label *label310
+  226 op mod *tmp19 :displayItem:amount 10
+  227 # "Function: def drawDigit(in x, in y, in digit)"
+  228 jump *label312 notEqual *tmp19 0
+  229 label *label311
+  230 op sub *tmp24 :displayItem:x 1
+  231 op sub *tmp26 :displayItem:y 1
+  232 draw lineRect *tmp24 *tmp26 9 14
+  233 jump *label331 always
+  234 label *label312
+  235 jump *label314 notEqual *tmp19 1
+  236 label *label313
+  237 op add *tmp28 :displayItem:x 6
+  238 op add *tmp31 :displayItem:y 12
+  239 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  240 jump *label331 always
+  241 label *label314
+  242 jump *label316 notEqual *tmp19 2
+  243 label *label315
+  244 op add *tmp32 :displayItem:x 7
+  245 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  246 op add *tmp33 :displayItem:y 6
+  247 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  248 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  249 op add *tmp40 :displayItem:y 12
+  250 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  251 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  252 jump *label331 always
+  253 label *label316
+  254 jump *label318 notEqual *tmp19 3
+  255 label *label317
+  256 op add *tmp44 :displayItem:x 7
+  257 op add *tmp46 :displayItem:y 12
+  258 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  259 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  260 op add *tmp48 :displayItem:y 6
+  261 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  262 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  263 jump *label331 always
+  264 label *label318
+  265 jump *label320 notEqual *tmp19 4
+  266 label *label319
+  267 op add *tmp54 :displayItem:x 7
+  268 op add *tmp56 :displayItem:y 12
+  269 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  270 op add *tmp57 :displayItem:y 6
+  271 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  272 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  273 jump *label331 always
+  274 label *label320
+  275 jump *label322 notEqual *tmp19 5
+  276 label *label321
+  277 op add *tmp62 :displayItem:x 7
+  278 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  279 op add *tmp65 :displayItem:y 6
+  280 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  281 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  282 op add *tmp70 :displayItem:y 12
+  283 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  284 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  285 jump *label331 always
+  286 label *label322
+  287 jump *label324 notEqual *tmp19 6
+  288 label *label323
+  289 op add *tmp74 :displayItem:y 12
+  290 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  291 op add *tmp75 :displayItem:x 7
+  292 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  293 op add *tmp78 :displayItem:y 6
+  294 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  295 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  296 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  297 jump *label331 always
+  298 label *label324
+  299 jump *label326 notEqual *tmp19 7
+  300 label *label325
+  301 op add *tmp86 :displayItem:x 6
+  302 op add *tmp89 :displayItem:y 12
+  303 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  304 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  305 jump *label331 always
+  306 label *label326
+  307 jump *label328 notEqual *tmp19 8
+  308 label *label327
+  309 op sub *tmp95 :displayItem:x 1
+  310 op sub *tmp97 :displayItem:y 1
+  311 draw lineRect *tmp95 *tmp97 9 14
+  312 op add *tmp98 :displayItem:y 6
+  313 op add *tmp99 :displayItem:x 7
+  314 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  315 jump *label331 always
+  316 label *label328
+  317 jump *label330 notEqual *tmp19 9
+  318 label *label329
+  319 op add *tmp101 :displayItem:x 7
+  320 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  321 op add *tmp104 :displayItem:y 12
+  322 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  323 op add *tmp105 :displayItem:y 6
+  324 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  325 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  326 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  327 label *label330
+  328 label *label331
+  329 label *label332
+  330 op sub :displayItem:x :displayItem:x 11
+  331 op idiv :displayItem:amount :displayItem:amount 10
+  332 jump *label333 notEqual :displayItem:amount 0
+  333 jump *label418 always
+  334 label *label333
+  335 label *label334
+  336 label *label335
+  337 label *label336
+  338 op mod *tmp19 :displayItem:amount 10
+  339 # "Function: def drawDigit(in x, in y, in digit)"
+  340 jump *label338 notEqual *tmp19 0
+  341 label *label337
+  342 op sub *tmp24 :displayItem:x 1
+  343 op sub *tmp26 :displayItem:y 1
+  344 draw lineRect *tmp24 *tmp26 9 14
+  345 jump *label357 always
+  346 label *label338
+  347 jump *label340 notEqual *tmp19 1
+  348 label *label339
+  349 op add *tmp28 :displayItem:x 6
+  350 op add *tmp31 :displayItem:y 12
+  351 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  352 jump *label357 always
+  353 label *label340
+  354 jump *label342 notEqual *tmp19 2
+  355 label *label341
+  356 op add *tmp32 :displayItem:x 7
+  357 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  358 op add *tmp33 :displayItem:y 6
+  359 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  360 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  361 op add *tmp40 :displayItem:y 12
+  362 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  363 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  364 jump *label357 always
+  365 label *label342
+  366 jump *label344 notEqual *tmp19 3
+  367 label *label343
+  368 op add *tmp44 :displayItem:x 7
+  369 op add *tmp46 :displayItem:y 12
+  370 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  371 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  372 op add *tmp48 :displayItem:y 6
+  373 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  374 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  375 jump *label357 always
+  376 label *label344
+  377 jump *label346 notEqual *tmp19 4
+  378 label *label345
+  379 op add *tmp54 :displayItem:x 7
+  380 op add *tmp56 :displayItem:y 12
+  381 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  382 op add *tmp57 :displayItem:y 6
+  383 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  384 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  385 jump *label357 always
+  386 label *label346
+  387 jump *label348 notEqual *tmp19 5
+  388 label *label347
+  389 op add *tmp62 :displayItem:x 7
+  390 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  391 op add *tmp65 :displayItem:y 6
+  392 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  393 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  394 op add *tmp70 :displayItem:y 12
+  395 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  396 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  397 jump *label357 always
+  398 label *label348
+  399 jump *label350 notEqual *tmp19 6
+  400 label *label349
+  401 op add *tmp74 :displayItem:y 12
+  402 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  403 op add *tmp75 :displayItem:x 7
+  404 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  405 op add *tmp78 :displayItem:y 6
+  406 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  407 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  408 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  409 jump *label357 always
+  410 label *label350
+  411 jump *label352 notEqual *tmp19 7
+  412 label *label351
+  413 op add *tmp86 :displayItem:x 6
+  414 op add *tmp89 :displayItem:y 12
+  415 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  416 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  417 jump *label357 always
+  418 label *label352
+  419 jump *label354 notEqual *tmp19 8
+  420 label *label353
+  421 op sub *tmp95 :displayItem:x 1
+  422 op sub *tmp97 :displayItem:y 1
+  423 draw lineRect *tmp95 *tmp97 9 14
+  424 op add *tmp98 :displayItem:y 6
+  425 op add *tmp99 :displayItem:x 7
+  426 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  427 jump *label357 always
+  428 label *label354
+  429 jump *label356 notEqual *tmp19 9
+  430 label *label355
+  431 op add *tmp101 :displayItem:x 7
+  432 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  433 op add *tmp104 :displayItem:y 12
+  434 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  435 op add *tmp105 :displayItem:y 6
+  436 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  437 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  438 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  439 label *label356
+  440 label *label357
+  441 label *label358
+  442 op sub :displayItem:x :displayItem:x 11
+  443 op idiv :displayItem:amount :displayItem:amount 10
+  444 jump *label359 notEqual :displayItem:amount 0
+  445 jump *label418 always
+  446 label *label359
+  447 label *label360
+  448 label *label361
+  449 label *label362
+  450 op mod *tmp19 :displayItem:amount 10
+  451 # "Function: def drawDigit(in x, in y, in digit)"
+  452 jump *label364 notEqual *tmp19 0
+  453 label *label363
+  454 op sub *tmp24 :displayItem:x 1
+  455 op sub *tmp26 :displayItem:y 1
+  456 draw lineRect *tmp24 *tmp26 9 14
+  457 jump *label383 always
+  458 label *label364
+  459 jump *label366 notEqual *tmp19 1
+  460 label *label365
+  461 op add *tmp28 :displayItem:x 6
+  462 op add *tmp31 :displayItem:y 12
+  463 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  464 jump *label383 always
+  465 label *label366
+  466 jump *label368 notEqual *tmp19 2
+  467 label *label367
+  468 op add *tmp32 :displayItem:x 7
+  469 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  470 op add *tmp33 :displayItem:y 6
+  471 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  472 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  473 op add *tmp40 :displayItem:y 12
+  474 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  475 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  476 jump *label383 always
+  477 label *label368
+  478 jump *label370 notEqual *tmp19 3
+  479 label *label369
+  480 op add *tmp44 :displayItem:x 7
+  481 op add *tmp46 :displayItem:y 12
+  482 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  483 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  484 op add *tmp48 :displayItem:y 6
+  485 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  486 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  487 jump *label383 always
+  488 label *label370
+  489 jump *label372 notEqual *tmp19 4
+  490 label *label371
+  491 op add *tmp54 :displayItem:x 7
+  492 op add *tmp56 :displayItem:y 12
+  493 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  494 op add *tmp57 :displayItem:y 6
+  495 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  496 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  497 jump *label383 always
+  498 label *label372
+  499 jump *label374 notEqual *tmp19 5
+  500 label *label373
+  501 op add *tmp62 :displayItem:x 7
+  502 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  503 op add *tmp65 :displayItem:y 6
+  504 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  505 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  506 op add *tmp70 :displayItem:y 12
+  507 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  508 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  509 jump *label383 always
+  510 label *label374
+  511 jump *label376 notEqual *tmp19 6
+  512 label *label375
+  513 op add *tmp74 :displayItem:y 12
+  514 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  515 op add *tmp75 :displayItem:x 7
+  516 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  517 op add *tmp78 :displayItem:y 6
+  518 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  519 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  520 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  521 jump *label383 always
+  522 label *label376
+  523 jump *label378 notEqual *tmp19 7
+  524 label *label377
+  525 op add *tmp86 :displayItem:x 6
+  526 op add *tmp89 :displayItem:y 12
+  527 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  528 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  529 jump *label383 always
+  530 label *label378
+  531 jump *label380 notEqual *tmp19 8
+  532 label *label379
+  533 op sub *tmp95 :displayItem:x 1
+  534 op sub *tmp97 :displayItem:y 1
+  535 draw lineRect *tmp95 *tmp97 9 14
+  536 op add *tmp98 :displayItem:y 6
+  537 op add *tmp99 :displayItem:x 7
+  538 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  539 jump *label383 always
+  540 label *label380
+  541 jump *label382 notEqual *tmp19 9
+  542 label *label381
+  543 op add *tmp101 :displayItem:x 7
+  544 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  545 op add *tmp104 :displayItem:y 12
+  546 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  547 op add *tmp105 :displayItem:y 6
+  548 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  549 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  550 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  551 label *label382
+  552 label *label383
+  553 label *label384
+  554 op sub :displayItem:x :displayItem:x 11
+  555 op idiv :displayItem:amount :displayItem:amount 10
+  556 jump *label385 notEqual :displayItem:amount 0
+  557 jump *label418 always
+  558 label *label385
+  559 label *label386
+  560 label *label387
+  561 label *label388
+  562 op mod *tmp19 :displayItem:amount 10
+  563 # "Function: def drawDigit(in x, in y, in digit)"
+  564 jump *label390 notEqual *tmp19 0
+  565 label *label389
+  566 op sub *tmp24 :displayItem:x 1
+  567 op sub *tmp26 :displayItem:y 1
+  568 draw lineRect *tmp24 *tmp26 9 14
+  569 jump *label409 always
+  570 label *label390
+  571 jump *label392 notEqual *tmp19 1
+  572 label *label391
+  573 op add *tmp28 :displayItem:x 6
+  574 op add *tmp31 :displayItem:y 12
+  575 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  576 jump *label409 always
+  577 label *label392
+  578 jump *label394 notEqual *tmp19 2
+  579 label *label393
+  580 op add *tmp32 :displayItem:x 7
+  581 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  582 op add *tmp33 :displayItem:y 6
+  583 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  584 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  585 op add *tmp40 :displayItem:y 12
+  586 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  587 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  588 jump *label409 always
+  589 label *label394
+  590 jump *label396 notEqual *tmp19 3
+  591 label *label395
+  592 op add *tmp44 :displayItem:x 7
+  593 op add *tmp46 :displayItem:y 12
+  594 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  595 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  596 op add *tmp48 :displayItem:y 6
+  597 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  598 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  599 jump *label409 always
+  600 label *label396
+  601 jump *label398 notEqual *tmp19 4
+  602 label *label397
+  603 op add *tmp54 :displayItem:x 7
+  604 op add *tmp56 :displayItem:y 12
+  605 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  606 op add *tmp57 :displayItem:y 6
+  607 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  608 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  609 jump *label409 always
+  610 label *label398
+  611 jump *label400 notEqual *tmp19 5
+  612 label *label399
+  613 op add *tmp62 :displayItem:x 7
+  614 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  615 op add *tmp65 :displayItem:y 6
+  616 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  617 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  618 op add *tmp70 :displayItem:y 12
+  619 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  620 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  621 jump *label409 always
+  622 label *label400
+  623 jump *label402 notEqual *tmp19 6
+  624 label *label401
+  625 op add *tmp74 :displayItem:y 12
+  626 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  627 op add *tmp75 :displayItem:x 7
+  628 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  629 op add *tmp78 :displayItem:y 6
+  630 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  631 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  632 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  633 jump *label409 always
+  634 label *label402
+  635 jump *label404 notEqual *tmp19 7
+  636 label *label403
+  637 op add *tmp86 :displayItem:x 6
+  638 op add *tmp89 :displayItem:y 12
+  639 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  640 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  641 jump *label409 always
+  642 label *label404
+  643 jump *label406 notEqual *tmp19 8
+  644 label *label405
+  645 op sub *tmp95 :displayItem:x 1
+  646 op sub *tmp97 :displayItem:y 1
+  647 draw lineRect *tmp95 *tmp97 9 14
+  648 op add *tmp98 :displayItem:y 6
+  649 op add *tmp99 :displayItem:x 7
+  650 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  651 jump *label409 always
+  652 label *label406
+  653 jump *label408 notEqual *tmp19 9
+  654 label *label407
+  655 op add *tmp101 :displayItem:x 7
+  656 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  657 op add *tmp104 :displayItem:y 12
+  658 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  659 op add *tmp105 :displayItem:y 6
+  660 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  661 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  662 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  663 label *label408
+  664 label *label409
+  665 label *label410
+  666 op sub :displayItem:x :displayItem:x 11
+  667 op idiv :displayItem:amount :displayItem:amount 10
+  668 jump *label411 notEqual :displayItem:amount 0
+  669 jump *label418 always
+  670 label *label411
+  671 label *label412
+  672 label *label413
+  673 label *label414
+  674 # "Function: def drawDigit12(in x, in y, in digit)"
+  675 jump *label415 notEqual :displayItem:amount 1
+  676 op add *tmp119 :displayItem:x 6
+  677 op add *tmp122 :displayItem:y 12
+  678 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  679 jump *label416 always
+  680 label *label415
+  681 op add *tmp123 :displayItem:x 7
+  682 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  683 op add *tmp124 :displayItem:y 6
+  684 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  685 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  686 op add *tmp131 :displayItem:y 12
+  687 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  688 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  689 label *label416
+  690 label *label417
+  691 label *label418
   692 jump *label48 always
   693 label *label47
   694 set :displayItem:x 157
   695 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  696 label *label419
+  697 # "Function: void displayItem(in x, in y)"
+  698 op max :displayItem:amount AMOUNT 0
+  699 draw color 0 255 0 255
+  700 label *label420
+  701 label *label421
+  702 op mod *tmp19 :displayItem:amount 10
+  703 # "Function: def drawDigit(in x, in y, in digit)"
+  704 jump *label423 notEqual *tmp19 0
+  705 label *label422
+  706 op sub *tmp24 :displayItem:x 1
+  707 op sub *tmp26 :displayItem:y 1
+  708 draw lineRect *tmp24 *tmp26 9 14
+  709 jump *label442 always
+  710 label *label423
+  711 jump *label425 notEqual *tmp19 1
+  712 label *label424
+  713 op add *tmp28 :displayItem:x 6
+  714 op add *tmp31 :displayItem:y 12
+  715 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  716 jump *label442 always
+  717 label *label425
+  718 jump *label427 notEqual *tmp19 2
+  719 label *label426
+  720 op add *tmp32 :displayItem:x 7
+  721 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  722 op add *tmp33 :displayItem:y 6
+  723 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  724 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  725 op add *tmp40 :displayItem:y 12
+  726 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  727 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  728 jump *label442 always
+  729 label *label427
+  730 jump *label429 notEqual *tmp19 3
+  731 label *label428
+  732 op add *tmp44 :displayItem:x 7
+  733 op add *tmp46 :displayItem:y 12
+  734 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  735 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  736 op add *tmp48 :displayItem:y 6
+  737 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  738 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  739 jump *label442 always
+  740 label *label429
+  741 jump *label431 notEqual *tmp19 4
+  742 label *label430
+  743 op add *tmp54 :displayItem:x 7
+  744 op add *tmp56 :displayItem:y 12
+  745 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  746 op add *tmp57 :displayItem:y 6
+  747 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  748 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  749 jump *label442 always
+  750 label *label431
+  751 jump *label433 notEqual *tmp19 5
+  752 label *label432
+  753 op add *tmp62 :displayItem:x 7
+  754 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  755 op add *tmp65 :displayItem:y 6
+  756 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  757 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  758 op add *tmp70 :displayItem:y 12
+  759 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  760 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  761 jump *label442 always
+  762 label *label433
+  763 jump *label435 notEqual *tmp19 6
+  764 label *label434
+  765 op add *tmp74 :displayItem:y 12
+  766 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  767 op add *tmp75 :displayItem:x 7
+  768 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  769 op add *tmp78 :displayItem:y 6
+  770 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  771 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  772 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  773 jump *label442 always
+  774 label *label435
+  775 jump *label437 notEqual *tmp19 7
+  776 label *label436
+  777 op add *tmp86 :displayItem:x 6
+  778 op add *tmp89 :displayItem:y 12
+  779 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  780 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  781 jump *label442 always
+  782 label *label437
+  783 jump *label439 notEqual *tmp19 8
+  784 label *label438
+  785 op sub *tmp95 :displayItem:x 1
+  786 op sub *tmp97 :displayItem:y 1
+  787 draw lineRect *tmp95 *tmp97 9 14
+  788 op add *tmp98 :displayItem:y 6
+  789 op add *tmp99 :displayItem:x 7
+  790 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  791 jump *label442 always
+  792 label *label439
+  793 jump *label441 notEqual *tmp19 9
+  794 label *label440
+  795 op add *tmp101 :displayItem:x 7
+  796 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  797 op add *tmp104 :displayItem:y 12
+  798 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  799 op add *tmp105 :displayItem:y 6
+  800 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  801 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  802 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  803 label *label441
+  804 label *label442
+  805 label *label443
+  806 op sub :displayItem:x :displayItem:x 11
+  807 op idiv :displayItem:amount :displayItem:amount 10
+  808 jump *label444 notEqual :displayItem:amount 0
+  809 jump *label529 always
+  810 label *label444
+  811 label *label445
+  812 label *label446
+  813 label *label447
+  814 op mod *tmp19 :displayItem:amount 10
+  815 # "Function: def drawDigit(in x, in y, in digit)"
+  816 jump *label449 notEqual *tmp19 0
+  817 label *label448
+  818 op sub *tmp24 :displayItem:x 1
+  819 op sub *tmp26 :displayItem:y 1
+  820 draw lineRect *tmp24 *tmp26 9 14
+  821 jump *label468 always
+  822 label *label449
+  823 jump *label451 notEqual *tmp19 1
+  824 label *label450
+  825 op add *tmp28 :displayItem:x 6
+  826 op add *tmp31 :displayItem:y 12
+  827 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  828 jump *label468 always
+  829 label *label451
+  830 jump *label453 notEqual *tmp19 2
+  831 label *label452
+  832 op add *tmp32 :displayItem:x 7
+  833 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  834 op add *tmp33 :displayItem:y 6
+  835 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  836 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  837 op add *tmp40 :displayItem:y 12
+  838 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  839 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  840 jump *label468 always
+  841 label *label453
+  842 jump *label455 notEqual *tmp19 3
+  843 label *label454
+  844 op add *tmp44 :displayItem:x 7
+  845 op add *tmp46 :displayItem:y 12
+  846 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  847 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  848 op add *tmp48 :displayItem:y 6
+  849 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  850 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  851 jump *label468 always
+  852 label *label455
+  853 jump *label457 notEqual *tmp19 4
+  854 label *label456
+  855 op add *tmp54 :displayItem:x 7
+  856 op add *tmp56 :displayItem:y 12
+  857 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  858 op add *tmp57 :displayItem:y 6
+  859 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  860 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  861 jump *label468 always
+  862 label *label457
+  863 jump *label459 notEqual *tmp19 5
+  864 label *label458
+  865 op add *tmp62 :displayItem:x 7
+  866 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  867 op add *tmp65 :displayItem:y 6
+  868 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  869 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  870 op add *tmp70 :displayItem:y 12
+  871 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  872 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  873 jump *label468 always
+  874 label *label459
+  875 jump *label461 notEqual *tmp19 6
+  876 label *label460
+  877 op add *tmp74 :displayItem:y 12
+  878 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  879 op add *tmp75 :displayItem:x 7
+  880 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  881 op add *tmp78 :displayItem:y 6
+  882 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  883 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  884 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  885 jump *label468 always
+  886 label *label461
+  887 jump *label463 notEqual *tmp19 7
+  888 label *label462
+  889 op add *tmp86 :displayItem:x 6
+  890 op add *tmp89 :displayItem:y 12
+  891 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  892 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  893 jump *label468 always
+  894 label *label463
+  895 jump *label465 notEqual *tmp19 8
+  896 label *label464
+  897 op sub *tmp95 :displayItem:x 1
+  898 op sub *tmp97 :displayItem:y 1
+  899 draw lineRect *tmp95 *tmp97 9 14
+  900 op add *tmp98 :displayItem:y 6
+  901 op add *tmp99 :displayItem:x 7
+  902 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  903 jump *label468 always
+  904 label *label465
+  905 jump *label467 notEqual *tmp19 9
+  906 label *label466
+  907 op add *tmp101 :displayItem:x 7
+  908 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  909 op add *tmp104 :displayItem:y 12
+  910 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  911 op add *tmp105 :displayItem:y 6
+  912 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  913 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  914 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  915 label *label467
+  916 label *label468
+  917 label *label469
+  918 op sub :displayItem:x :displayItem:x 11
+  919 op idiv :displayItem:amount :displayItem:amount 10
+  920 jump *label470 notEqual :displayItem:amount 0
+  921 jump *label529 always
+  922 label *label470
+  923 label *label471
+  924 label *label472
+  925 label *label473
+  926 op mod *tmp19 :displayItem:amount 10
+  927 # "Function: def drawDigit(in x, in y, in digit)"
+  928 jump *label475 notEqual *tmp19 0
+  929 label *label474
+  930 op sub *tmp24 :displayItem:x 1
+  931 op sub *tmp26 :displayItem:y 1
+  932 draw lineRect *tmp24 *tmp26 9 14
+  933 jump *label494 always
+  934 label *label475
+  935 jump *label477 notEqual *tmp19 1
+  936 label *label476
+  937 op add *tmp28 :displayItem:x 6
+  938 op add *tmp31 :displayItem:y 12
+  939 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  940 jump *label494 always
+  941 label *label477
+  942 jump *label479 notEqual *tmp19 2
+  943 label *label478
+  944 op add *tmp32 :displayItem:x 7
+  945 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  946 op add *tmp33 :displayItem:y 6
+  947 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  948 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  949 op add *tmp40 :displayItem:y 12
+  950 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  951 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  952 jump *label494 always
+  953 label *label479
+  954 jump *label481 notEqual *tmp19 3
+  955 label *label480
+  956 op add *tmp44 :displayItem:x 7
+  957 op add *tmp46 :displayItem:y 12
+  958 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  959 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  960 op add *tmp48 :displayItem:y 6
+  961 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  962 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  963 jump *label494 always
+  964 label *label481
+  965 jump *label483 notEqual *tmp19 4
+  966 label *label482
+  967 op add *tmp54 :displayItem:x 7
+  968 op add *tmp56 :displayItem:y 12
+  969 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  970 op add *tmp57 :displayItem:y 6
+  971 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  972 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  973 jump *label494 always
+  974 label *label483
+  975 jump *label485 notEqual *tmp19 5
+  976 label *label484
+  977 op add *tmp62 :displayItem:x 7
+  978 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  979 op add *tmp65 :displayItem:y 6
+  980 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  981 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  982 op add *tmp70 :displayItem:y 12
+  983 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  984 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  985 jump *label494 always
+  986 label *label485
+  987 jump *label487 notEqual *tmp19 6
+  988 label *label486
+  989 op add *tmp74 :displayItem:y 12
+  990 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  991 op add *tmp75 :displayItem:x 7
+  992 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  993 op add *tmp78 :displayItem:y 6
+  994 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  995 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  996 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  997 jump *label494 always
+  998 label *label487
+  999 jump *label489 notEqual *tmp19 7
+ 1000 label *label488
+ 1001 op add *tmp86 :displayItem:x 6
+ 1002 op add *tmp89 :displayItem:y 12
+ 1003 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1004 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1005 jump *label494 always
+ 1006 label *label489
+ 1007 jump *label491 notEqual *tmp19 8
+ 1008 label *label490
+ 1009 op sub *tmp95 :displayItem:x 1
+ 1010 op sub *tmp97 :displayItem:y 1
+ 1011 draw lineRect *tmp95 *tmp97 9 14
+ 1012 op add *tmp98 :displayItem:y 6
+ 1013 op add *tmp99 :displayItem:x 7
+ 1014 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1015 jump *label494 always
+ 1016 label *label491
+ 1017 jump *label493 notEqual *tmp19 9
+ 1018 label *label492
+ 1019 op add *tmp101 :displayItem:x 7
+ 1020 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1021 op add *tmp104 :displayItem:y 12
+ 1022 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1023 op add *tmp105 :displayItem:y 6
+ 1024 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1025 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1026 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1027 label *label493
+ 1028 label *label494
+ 1029 label *label495
+ 1030 op sub :displayItem:x :displayItem:x 11
+ 1031 op idiv :displayItem:amount :displayItem:amount 10
+ 1032 jump *label496 notEqual :displayItem:amount 0
+ 1033 jump *label529 always
+ 1034 label *label496
+ 1035 label *label497
+ 1036 label *label498
+ 1037 label *label499
+ 1038 op mod *tmp19 :displayItem:amount 10
+ 1039 # "Function: def drawDigit(in x, in y, in digit)"
+ 1040 jump *label501 notEqual *tmp19 0
+ 1041 label *label500
+ 1042 op sub *tmp24 :displayItem:x 1
+ 1043 op sub *tmp26 :displayItem:y 1
+ 1044 draw lineRect *tmp24 *tmp26 9 14
+ 1045 jump *label520 always
+ 1046 label *label501
+ 1047 jump *label503 notEqual *tmp19 1
+ 1048 label *label502
+ 1049 op add *tmp28 :displayItem:x 6
+ 1050 op add *tmp31 :displayItem:y 12
+ 1051 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1052 jump *label520 always
+ 1053 label *label503
+ 1054 jump *label505 notEqual *tmp19 2
+ 1055 label *label504
+ 1056 op add *tmp32 :displayItem:x 7
+ 1057 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+ 1058 op add *tmp33 :displayItem:y 6
+ 1059 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+ 1060 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+ 1061 op add *tmp40 :displayItem:y 12
+ 1062 draw line *tmp32 *tmp33 *tmp32 *tmp40
+ 1063 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1064 jump *label520 always
+ 1065 label *label505
+ 1066 jump *label507 notEqual *tmp19 3
+ 1067 label *label506
+ 1068 op add *tmp44 :displayItem:x 7
+ 1069 op add *tmp46 :displayItem:y 12
+ 1070 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+ 1071 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+ 1072 op add *tmp48 :displayItem:y 6
+ 1073 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+ 1074 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1075 jump *label520 always
+ 1076 label *label507
+ 1077 jump *label509 notEqual *tmp19 4
+ 1078 label *label508
+ 1079 op add *tmp54 :displayItem:x 7
+ 1080 op add *tmp56 :displayItem:y 12
+ 1081 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+ 1082 op add *tmp57 :displayItem:y 6
+ 1083 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+ 1084 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1085 jump *label520 always
+ 1086 label *label509
+ 1087 jump *label511 notEqual *tmp19 5
+ 1088 label *label510
+ 1089 op add *tmp62 :displayItem:x 7
+ 1090 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+ 1091 op add *tmp65 :displayItem:y 6
+ 1092 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+ 1093 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+ 1094 op add *tmp70 :displayItem:y 12
+ 1095 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+ 1096 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1097 jump *label520 always
+ 1098 label *label511
+ 1099 jump *label513 notEqual *tmp19 6
+ 1100 label *label512
+ 1101 op add *tmp74 :displayItem:y 12
+ 1102 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+ 1103 op add *tmp75 :displayItem:x 7
+ 1104 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+ 1105 op add *tmp78 :displayItem:y 6
+ 1106 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+ 1107 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+ 1108 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1109 jump *label520 always
+ 1110 label *label513
+ 1111 jump *label515 notEqual *tmp19 7
+ 1112 label *label514
+ 1113 op add *tmp86 :displayItem:x 6
+ 1114 op add *tmp89 :displayItem:y 12
+ 1115 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1116 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1117 jump *label520 always
+ 1118 label *label515
+ 1119 jump *label517 notEqual *tmp19 8
+ 1120 label *label516
+ 1121 op sub *tmp95 :displayItem:x 1
+ 1122 op sub *tmp97 :displayItem:y 1
+ 1123 draw lineRect *tmp95 *tmp97 9 14
+ 1124 op add *tmp98 :displayItem:y 6
+ 1125 op add *tmp99 :displayItem:x 7
+ 1126 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1127 jump *label520 always
+ 1128 label *label517
+ 1129 jump *label519 notEqual *tmp19 9
+ 1130 label *label518
+ 1131 op add *tmp101 :displayItem:x 7
+ 1132 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1133 op add *tmp104 :displayItem:y 12
+ 1134 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1135 op add *tmp105 :displayItem:y 6
+ 1136 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1137 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1138 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1139 label *label519
+ 1140 label *label520
+ 1141 label *label521
+ 1142 op sub :displayItem:x :displayItem:x 11
+ 1143 op idiv :displayItem:amount :displayItem:amount 10
+ 1144 jump *label522 notEqual :displayItem:amount 0
+ 1145 jump *label529 always
+ 1146 label *label522
+ 1147 label *label523
+ 1148 label *label524
+ 1149 label *label525
+ 1150 # "Function: def drawDigit12(in x, in y, in digit)"
+ 1151 jump *label526 notEqual :displayItem:amount 1
+ 1152 op add *tmp119 :displayItem:x 6
+ 1153 op add *tmp122 :displayItem:y 12
+ 1154 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1155 jump *label527 always
+ 1156 label *label526
+ 1157 op add *tmp123 :displayItem:x 7
+ 1158 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+ 1159 op add *tmp124 :displayItem:y 6
+ 1160 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+ 1161 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+ 1162 op add *tmp131 :displayItem:y 12
+ 1163 draw line *tmp123 *tmp124 *tmp123 *tmp131
+ 1164 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1165 label *label527
+ 1166 label *label528
+ 1167 label *label529
  1168 label *label48
  1169 op add :index :index 1
  1170 op sub :y :y 20
 
  1190 label *label28
  1191 drawflush display1
  1192 end
-    * label *label2
-    * # "Function: void displayItem(in x, in y)"
-    * op max :displayItem:amount AMOUNT 0
-    * draw color 0 255 0 255
-    * label *label89
-    * label *label90
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label92 notEqual *tmp19 0
-    * label *label91
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label111 always
-    * label *label92
-    * jump *label94 notEqual *tmp19 1
-    * label *label93
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label111 always
-    * label *label94
-    * jump *label96 notEqual *tmp19 2
-    * label *label95
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label111 always
-    * label *label96
-    * jump *label98 notEqual *tmp19 3
-    * label *label97
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label111 always
-    * label *label98
-    * jump *label100 notEqual *tmp19 4
-    * label *label99
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label111 always
-    * label *label100
-    * jump *label102 notEqual *tmp19 5
-    * label *label101
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label111 always
-    * label *label102
-    * jump *label104 notEqual *tmp19 6
-    * label *label103
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label111 always
-    * label *label104
-    * jump *label106 notEqual *tmp19 7
-    * label *label105
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label111 always
-    * label *label106
-    * jump *label108 notEqual *tmp19 8
-    * label *label107
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label111 always
-    * label *label108
-    * jump *label110 notEqual *tmp19 9
-    * label *label109
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label110
-    * label *label111
-    * label *label112
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label113 notEqual :displayItem:amount 0
-    * jump *label57 always
-    * label *label113
-    * label *label114
-    * label *label115
-    * label *label116
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label118 notEqual *tmp19 0
-    * label *label117
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label137 always
-    * label *label118
-    * jump *label120 notEqual *tmp19 1
-    * label *label119
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label137 always
-    * label *label120
-    * jump *label122 notEqual *tmp19 2
-    * label *label121
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label137 always
-    * label *label122
-    * jump *label124 notEqual *tmp19 3
-    * label *label123
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label137 always
-    * label *label124
-    * jump *label126 notEqual *tmp19 4
-    * label *label125
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label137 always
-    * label *label126
-    * jump *label128 notEqual *tmp19 5
-    * label *label127
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label137 always
-    * label *label128
-    * jump *label130 notEqual *tmp19 6
-    * label *label129
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label137 always
-    * label *label130
-    * jump *label132 notEqual *tmp19 7
-    * label *label131
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label137 always
-    * label *label132
-    * jump *label134 notEqual *tmp19 8
-    * label *label133
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label137 always
-    * label *label134
-    * jump *label136 notEqual *tmp19 9
-    * label *label135
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label136
-    * label *label137
-    * label *label138
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label139 notEqual :displayItem:amount 0
-    * jump *label57 always
-    * label *label139
-    * label *label140
-    * label *label141
-    * label *label142
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label144 notEqual *tmp19 0
-    * label *label143
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label163 always
-    * label *label144
-    * jump *label146 notEqual *tmp19 1
-    * label *label145
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label163 always
-    * label *label146
-    * jump *label148 notEqual *tmp19 2
-    * label *label147
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label163 always
-    * label *label148
-    * jump *label150 notEqual *tmp19 3
-    * label *label149
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label163 always
-    * label *label150
-    * jump *label152 notEqual *tmp19 4
-    * label *label151
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label163 always
-    * label *label152
-    * jump *label154 notEqual *tmp19 5
-    * label *label153
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label163 always
-    * label *label154
-    * jump *label156 notEqual *tmp19 6
-    * label *label155
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label163 always
-    * label *label156
-    * jump *label158 notEqual *tmp19 7
-    * label *label157
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label163 always
-    * label *label158
-    * jump *label160 notEqual *tmp19 8
-    * label *label159
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label163 always
-    * label *label160
-    * jump *label162 notEqual *tmp19 9
-    * label *label161
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label162
-    * label *label163
-    * label *label164
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label165 notEqual :displayItem:amount 0
-    * jump *label57 always
-    * label *label165
-    * label *label166
-    * label *label167
-    * label *label168
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label170 notEqual *tmp19 0
-    * label *label169
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label189 always
-    * label *label170
-    * jump *label172 notEqual *tmp19 1
-    * label *label171
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label189 always
-    * label *label172
-    * jump *label174 notEqual *tmp19 2
-    * label *label173
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label189 always
-    * label *label174
-    * jump *label176 notEqual *tmp19 3
-    * label *label175
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label189 always
-    * label *label176
-    * jump *label178 notEqual *tmp19 4
-    * label *label177
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label189 always
-    * label *label178
-    * jump *label180 notEqual *tmp19 5
-    * label *label179
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label189 always
-    * label *label180
-    * jump *label182 notEqual *tmp19 6
-    * label *label181
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label189 always
-    * label *label182
-    * jump *label184 notEqual *tmp19 7
-    * label *label183
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label189 always
-    * label *label184
-    * jump *label186 notEqual *tmp19 8
-    * label *label185
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label189 always
-    * label *label186
-    * jump *label188 notEqual *tmp19 9
-    * label *label187
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label188
-    * label *label189
-    * label *label190
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label191 notEqual :displayItem:amount 0
-    * jump *label57 always
-    * label *label191
-    * label *label192
-    * label *label193
-    * label *label60
-    * # "Function: def drawDigit12(in x, in y, in digit)"
-    * jump *label86 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
-    * jump *label87 always
-    * label *label86
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
-    * label *label87
-    * label *label85
-    * label *label57
-    * return :displayItem*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   227 # "Function: def drawDigit(in x, in y, in digit)"
   228 jump *label312 notEqual *tmp19 0
   229 label *label311
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  230 op sub *tmp24 71 1
+  231 op sub *tmp26 :y 1
+  232 draw lineRect 70 *tmp26 9 14
   233 jump *label331 always
   234 label *label312
   235 jump *label314 notEqual *tmp19 1
   236 label *label313
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  237 op add *tmp28 71 6
+  238 op add *tmp31 :y 12
+  239 draw line 77 :y 77 *tmp31
   240 jump *label331 always
   241 label *label314
   242 jump *label316 notEqual *tmp19 2
   243 label *label315
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  244 op add *tmp32 71 7
+  245 draw line 71 :y 78 :y
+  246 op add *tmp33 :y 6
+  247 draw line 71 :y 71 *tmp33
+  248 draw line 71 *tmp33 78 *tmp33
+  249 op add *tmp40 :y 12
+  250 draw line 78 *tmp33 78 *tmp40
+  251 draw line 71 *tmp40 78 *tmp40
   252 jump *label331 always
   253 label *label316
   254 jump *label318 notEqual *tmp19 3
   255 label *label317
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  256 op add *tmp44 71 7
+  257 op add *tmp46 :y 12
+  258 draw line 78 :y 78 *tmp46
+  259 draw line 71 :y 78 :y
+  260 op add *tmp48 :y 6
+  261 draw line 71 *tmp48 78 *tmp48
+  262 draw line 71 *tmp46 78 *tmp46
   263 jump *label331 always
   264 label *label318
   265 jump *label320 notEqual *tmp19 4
   266 label *label319
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  267 op add *tmp54 71 7
+  268 op add *tmp56 :y 12
+  269 draw line 78 :y 78 *tmp56
+  270 op add *tmp57 :y 6
+  271 draw line 71 *tmp57 78 *tmp57
+  272 draw line 71 *tmp57 71 *tmp56
   273 jump *label331 always
   274 label *label320
   275 jump *label322 notEqual *tmp19 5
   276 label *label321
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  277 op add *tmp62 71 7
+  278 draw line 71 :y 78 :y
+  279 op add *tmp65 :y 6
+  280 draw line 78 :y 78 *tmp65
+  281 draw line 71 *tmp65 78 *tmp65
+  282 op add *tmp70 :y 12
+  283 draw line 71 *tmp65 71 *tmp70
+  284 draw line 71 *tmp70 78 *tmp70
   285 jump *label331 always
   286 label *label322
   287 jump *label324 notEqual *tmp19 6
   288 label *label323
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  289 op add *tmp74 :y 12
+  290 draw line 71 :y 71 *tmp74
+  291 op add *tmp75 71 7
+  292 draw line 71 :y 78 :y
+  293 op add *tmp78 :y 6
+  294 draw line 78 :y 78 *tmp78
+  295 draw line 71 *tmp78 78 *tmp78
+  296 draw line 71 *tmp74 78 *tmp74
   297 jump *label331 always
   298 label *label324
   299 jump *label326 notEqual *tmp19 7
   300 label *label325
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  301 op add *tmp86 71 6
+  302 op add *tmp89 :y 12
+  303 draw line 77 :y 77 *tmp89
+  304 draw line 71 *tmp89 77 *tmp89
   305 jump *label331 always
   306 label *label326
   307 jump *label328 notEqual *tmp19 8
   308 label *label327
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  309 op sub *tmp95 71 1
+  310 op sub *tmp97 :y 1
+  311 draw lineRect 70 *tmp97 9 14
+  312 op add *tmp98 :y 6
+  313 op add *tmp99 71 7
+  314 draw line 71 *tmp98 78 *tmp98
   315 jump *label331 always
   316 label *label328
   317 jump *label330 notEqual *tmp19 9
   318 label *label329
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  319 op add *tmp101 71 7
+  320 draw line 71 :y 78 :y
+  321 op add *tmp104 :y 12
+  322 draw line 78 :y 78 *tmp104
+  323 op add *tmp105 :y 6
+  324 draw line 71 *tmp105 78 *tmp105
+  325 draw line 71 *tmp105 71 *tmp104
+  326 draw line 71 *tmp104 78 *tmp104
   327 label *label330
   328 label *label331
   329 label *label332
-    * op sub :displayItem:x :displayItem:x 11
+  330 op sub :displayItem:x 71 11
   331 op idiv :displayItem:amount :displayItem:amount 10
   332 jump *label333 notEqual :displayItem:amount 0
   333 jump *label418 always
 
   339 # "Function: def drawDigit(in x, in y, in digit)"
   340 jump *label338 notEqual *tmp19 0
   341 label *label337
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  342 op sub *tmp24 60 1
+  343 op sub *tmp26 :y 1
+  344 draw lineRect 59 *tmp26 9 14
   345 jump *label357 always
   346 label *label338
   347 jump *label340 notEqual *tmp19 1
   348 label *label339
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  349 op add *tmp28 60 6
+  350 op add *tmp31 :y 12
+  351 draw line 66 :y 66 *tmp31
   352 jump *label357 always
   353 label *label340
   354 jump *label342 notEqual *tmp19 2
   355 label *label341
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  356 op add *tmp32 60 7
+  357 draw line 60 :y 67 :y
+  358 op add *tmp33 :y 6
+  359 draw line 60 :y 60 *tmp33
+  360 draw line 60 *tmp33 67 *tmp33
+  361 op add *tmp40 :y 12
+  362 draw line 67 *tmp33 67 *tmp40
+  363 draw line 60 *tmp40 67 *tmp40
   364 jump *label357 always
   365 label *label342
   366 jump *label344 notEqual *tmp19 3
   367 label *label343
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  368 op add *tmp44 60 7
+  369 op add *tmp46 :y 12
+  370 draw line 67 :y 67 *tmp46
+  371 draw line 60 :y 67 :y
+  372 op add *tmp48 :y 6
+  373 draw line 60 *tmp48 67 *tmp48
+  374 draw line 60 *tmp46 67 *tmp46
   375 jump *label357 always
   376 label *label344
   377 jump *label346 notEqual *tmp19 4
   378 label *label345
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  379 op add *tmp54 60 7
+  380 op add *tmp56 :y 12
+  381 draw line 67 :y 67 *tmp56
+  382 op add *tmp57 :y 6
+  383 draw line 60 *tmp57 67 *tmp57
+  384 draw line 60 *tmp57 60 *tmp56
   385 jump *label357 always
   386 label *label346
   387 jump *label348 notEqual *tmp19 5
   388 label *label347
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  389 op add *tmp62 60 7
+  390 draw line 60 :y 67 :y
+  391 op add *tmp65 :y 6
+  392 draw line 67 :y 67 *tmp65
+  393 draw line 60 *tmp65 67 *tmp65
+  394 op add *tmp70 :y 12
+  395 draw line 60 *tmp65 60 *tmp70
+  396 draw line 60 *tmp70 67 *tmp70
   397 jump *label357 always
   398 label *label348
   399 jump *label350 notEqual *tmp19 6
   400 label *label349
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  401 op add *tmp74 :y 12
+  402 draw line 60 :y 60 *tmp74
+  403 op add *tmp75 60 7
+  404 draw line 60 :y 67 :y
+  405 op add *tmp78 :y 6
+  406 draw line 67 :y 67 *tmp78
+  407 draw line 60 *tmp78 67 *tmp78
+  408 draw line 60 *tmp74 67 *tmp74
   409 jump *label357 always
   410 label *label350
   411 jump *label352 notEqual *tmp19 7
   412 label *label351
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  413 op add *tmp86 60 6
+  414 op add *tmp89 :y 12
+  415 draw line 66 :y 66 *tmp89
+  416 draw line 60 *tmp89 66 *tmp89
   417 jump *label357 always
   418 label *label352
   419 jump *label354 notEqual *tmp19 8
   420 label *label353
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  421 op sub *tmp95 60 1
+  422 op sub *tmp97 :y 1
+  423 draw lineRect 59 *tmp97 9 14
+  424 op add *tmp98 :y 6
+  425 op add *tmp99 60 7
+  426 draw line 60 *tmp98 67 *tmp98
   427 jump *label357 always
   428 label *label354
   429 jump *label356 notEqual *tmp19 9
   430 label *label355
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  431 op add *tmp101 60 7
+  432 draw line 60 :y 67 :y
+  433 op add *tmp104 :y 12
+  434 draw line 67 :y 67 *tmp104
+  435 op add *tmp105 :y 6
+  436 draw line 60 *tmp105 67 *tmp105
+  437 draw line 60 *tmp105 60 *tmp104
+  438 draw line 60 *tmp104 67 *tmp104
   439 label *label356
   440 label *label357
   441 label *label358
-    * op sub :displayItem:x :displayItem:x 11
+  442 op sub :displayItem:x 60 11
   443 op idiv :displayItem:amount :displayItem:amount 10
   444 jump *label359 notEqual :displayItem:amount 0
   445 jump *label418 always
 
   451 # "Function: def drawDigit(in x, in y, in digit)"
   452 jump *label364 notEqual *tmp19 0
   453 label *label363
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  454 op sub *tmp24 49 1
+  455 op sub *tmp26 :y 1
+  456 draw lineRect 48 *tmp26 9 14
   457 jump *label383 always
   458 label *label364
   459 jump *label366 notEqual *tmp19 1
   460 label *label365
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  461 op add *tmp28 49 6
+  462 op add *tmp31 :y 12
+  463 draw line 55 :y 55 *tmp31
   464 jump *label383 always
   465 label *label366
   466 jump *label368 notEqual *tmp19 2
   467 label *label367
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  468 op add *tmp32 49 7
+  469 draw line 49 :y 56 :y
+  470 op add *tmp33 :y 6
+  471 draw line 49 :y 49 *tmp33
+  472 draw line 49 *tmp33 56 *tmp33
+  473 op add *tmp40 :y 12
+  474 draw line 56 *tmp33 56 *tmp40
+  475 draw line 49 *tmp40 56 *tmp40
   476 jump *label383 always
   477 label *label368
   478 jump *label370 notEqual *tmp19 3
   479 label *label369
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  480 op add *tmp44 49 7
+  481 op add *tmp46 :y 12
+  482 draw line 56 :y 56 *tmp46
+  483 draw line 49 :y 56 :y
+  484 op add *tmp48 :y 6
+  485 draw line 49 *tmp48 56 *tmp48
+  486 draw line 49 *tmp46 56 *tmp46
   487 jump *label383 always
   488 label *label370
   489 jump *label372 notEqual *tmp19 4
   490 label *label371
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  491 op add *tmp54 49 7
+  492 op add *tmp56 :y 12
+  493 draw line 56 :y 56 *tmp56
+  494 op add *tmp57 :y 6
+  495 draw line 49 *tmp57 56 *tmp57
+  496 draw line 49 *tmp57 49 *tmp56
   497 jump *label383 always
   498 label *label372
   499 jump *label374 notEqual *tmp19 5
   500 label *label373
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  501 op add *tmp62 49 7
+  502 draw line 49 :y 56 :y
+  503 op add *tmp65 :y 6
+  504 draw line 56 :y 56 *tmp65
+  505 draw line 49 *tmp65 56 *tmp65
+  506 op add *tmp70 :y 12
+  507 draw line 49 *tmp65 49 *tmp70
+  508 draw line 49 *tmp70 56 *tmp70
   509 jump *label383 always
   510 label *label374
   511 jump *label376 notEqual *tmp19 6
   512 label *label375
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  513 op add *tmp74 :y 12
+  514 draw line 49 :y 49 *tmp74
+  515 op add *tmp75 49 7
+  516 draw line 49 :y 56 :y
+  517 op add *tmp78 :y 6
+  518 draw line 56 :y 56 *tmp78
+  519 draw line 49 *tmp78 56 *tmp78
+  520 draw line 49 *tmp74 56 *tmp74
   521 jump *label383 always
   522 label *label376
   523 jump *label378 notEqual *tmp19 7
   524 label *label377
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  525 op add *tmp86 49 6
+  526 op add *tmp89 :y 12
+  527 draw line 55 :y 55 *tmp89
+  528 draw line 49 *tmp89 55 *tmp89
   529 jump *label383 always
   530 label *label378
   531 jump *label380 notEqual *tmp19 8
   532 label *label379
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  533 op sub *tmp95 49 1
+  534 op sub *tmp97 :y 1
+  535 draw lineRect 48 *tmp97 9 14
+  536 op add *tmp98 :y 6
+  537 op add *tmp99 49 7
+  538 draw line 49 *tmp98 56 *tmp98
   539 jump *label383 always
   540 label *label380
   541 jump *label382 notEqual *tmp19 9
   542 label *label381
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  543 op add *tmp101 49 7
+  544 draw line 49 :y 56 :y
+  545 op add *tmp104 :y 12
+  546 draw line 56 :y 56 *tmp104
+  547 op add *tmp105 :y 6
+  548 draw line 49 *tmp105 56 *tmp105
+  549 draw line 49 *tmp105 49 *tmp104
+  550 draw line 49 *tmp104 56 *tmp104
   551 label *label382
   552 label *label383
   553 label *label384
-    * op sub :displayItem:x :displayItem:x 11
+  554 op sub :displayItem:x 49 11
   555 op idiv :displayItem:amount :displayItem:amount 10
   556 jump *label385 notEqual :displayItem:amount 0
   557 jump *label418 always
 
   563 # "Function: def drawDigit(in x, in y, in digit)"
   564 jump *label390 notEqual *tmp19 0
   565 label *label389
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  566 op sub *tmp24 38 1
+  567 op sub *tmp26 :y 1
+  568 draw lineRect 37 *tmp26 9 14
   569 jump *label409 always
   570 label *label390
   571 jump *label392 notEqual *tmp19 1
   572 label *label391
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  573 op add *tmp28 38 6
+  574 op add *tmp31 :y 12
+  575 draw line 44 :y 44 *tmp31
   576 jump *label409 always
   577 label *label392
   578 jump *label394 notEqual *tmp19 2
   579 label *label393
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  580 op add *tmp32 38 7
+  581 draw line 38 :y 45 :y
+  582 op add *tmp33 :y 6
+  583 draw line 38 :y 38 *tmp33
+  584 draw line 38 *tmp33 45 *tmp33
+  585 op add *tmp40 :y 12
+  586 draw line 45 *tmp33 45 *tmp40
+  587 draw line 38 *tmp40 45 *tmp40
   588 jump *label409 always
   589 label *label394
   590 jump *label396 notEqual *tmp19 3
   591 label *label395
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  592 op add *tmp44 38 7
+  593 op add *tmp46 :y 12
+  594 draw line 45 :y 45 *tmp46
+  595 draw line 38 :y 45 :y
+  596 op add *tmp48 :y 6
+  597 draw line 38 *tmp48 45 *tmp48
+  598 draw line 38 *tmp46 45 *tmp46
   599 jump *label409 always
   600 label *label396
   601 jump *label398 notEqual *tmp19 4
   602 label *label397
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  603 op add *tmp54 38 7
+  604 op add *tmp56 :y 12
+  605 draw line 45 :y 45 *tmp56
+  606 op add *tmp57 :y 6
+  607 draw line 38 *tmp57 45 *tmp57
+  608 draw line 38 *tmp57 38 *tmp56
   609 jump *label409 always
   610 label *label398
   611 jump *label400 notEqual *tmp19 5
   612 label *label399
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  613 op add *tmp62 38 7
+  614 draw line 38 :y 45 :y
+  615 op add *tmp65 :y 6
+  616 draw line 45 :y 45 *tmp65
+  617 draw line 38 *tmp65 45 *tmp65
+  618 op add *tmp70 :y 12
+  619 draw line 38 *tmp65 38 *tmp70
+  620 draw line 38 *tmp70 45 *tmp70
   621 jump *label409 always
   622 label *label400
   623 jump *label402 notEqual *tmp19 6
   624 label *label401
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  625 op add *tmp74 :y 12
+  626 draw line 38 :y 38 *tmp74
+  627 op add *tmp75 38 7
+  628 draw line 38 :y 45 :y
+  629 op add *tmp78 :y 6
+  630 draw line 45 :y 45 *tmp78
+  631 draw line 38 *tmp78 45 *tmp78
+  632 draw line 38 *tmp74 45 *tmp74
   633 jump *label409 always
   634 label *label402
   635 jump *label404 notEqual *tmp19 7
   636 label *label403
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  637 op add *tmp86 38 6
+  638 op add *tmp89 :y 12
+  639 draw line 44 :y 44 *tmp89
+  640 draw line 38 *tmp89 44 *tmp89
   641 jump *label409 always
   642 label *label404
   643 jump *label406 notEqual *tmp19 8
   644 label *label405
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  645 op sub *tmp95 38 1
+  646 op sub *tmp97 :y 1
+  647 draw lineRect 37 *tmp97 9 14
+  648 op add *tmp98 :y 6
+  649 op add *tmp99 38 7
+  650 draw line 38 *tmp98 45 *tmp98
   651 jump *label409 always
   652 label *label406
   653 jump *label408 notEqual *tmp19 9
   654 label *label407
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  655 op add *tmp101 38 7
+  656 draw line 38 :y 45 :y
+  657 op add *tmp104 :y 12
+  658 draw line 45 :y 45 *tmp104
+  659 op add *tmp105 :y 6
+  660 draw line 38 *tmp105 45 *tmp105
+  661 draw line 38 *tmp105 38 *tmp104
+  662 draw line 38 *tmp104 45 *tmp104
   663 label *label408
   664 label *label409
   665 label *label410
-    * op sub :displayItem:x :displayItem:x 11
+  666 op sub :displayItem:x 38 11
   667 op idiv :displayItem:amount :displayItem:amount 10
   668 jump *label411 notEqual :displayItem:amount 0
   669 jump *label418 always
 
   673 label *label414
   674 # "Function: def drawDigit12(in x, in y, in digit)"
   675 jump *label415 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  676 op add *tmp119 27 6
+  677 op add *tmp122 :y 12
+  678 draw line 33 :y 33 *tmp122
   679 jump *label416 always
   680 label *label415
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  681 op add *tmp123 27 7
+  682 draw line 27 :y 34 :y
+  683 op add *tmp124 :y 6
+  684 draw line 27 :y 27 *tmp124
+  685 draw line 27 *tmp124 34 *tmp124
+  686 op add *tmp131 :y 12
+  687 draw line 34 *tmp124 34 *tmp131
+  688 draw line 27 *tmp131 34 *tmp131
   689 label *label416
   690 label *label417
   691 label *label418
 
   703 # "Function: def drawDigit(in x, in y, in digit)"
   704 jump *label423 notEqual *tmp19 0
   705 label *label422
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  706 op sub *tmp24 157 1
+  707 op sub *tmp26 :y 1
+  708 draw lineRect 156 *tmp26 9 14
   709 jump *label442 always
   710 label *label423
   711 jump *label425 notEqual *tmp19 1
   712 label *label424
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  713 op add *tmp28 157 6
+  714 op add *tmp31 :y 12
+  715 draw line 163 :y 163 *tmp31
   716 jump *label442 always
   717 label *label425
   718 jump *label427 notEqual *tmp19 2
   719 label *label426
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  720 op add *tmp32 157 7
+  721 draw line 157 :y 164 :y
+  722 op add *tmp33 :y 6
+  723 draw line 157 :y 157 *tmp33
+  724 draw line 157 *tmp33 164 *tmp33
+  725 op add *tmp40 :y 12
+  726 draw line 164 *tmp33 164 *tmp40
+  727 draw line 157 *tmp40 164 *tmp40
   728 jump *label442 always
   729 label *label427
   730 jump *label429 notEqual *tmp19 3
   731 label *label428
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  732 op add *tmp44 157 7
+  733 op add *tmp46 :y 12
+  734 draw line 164 :y 164 *tmp46
+  735 draw line 157 :y 164 :y
+  736 op add *tmp48 :y 6
+  737 draw line 157 *tmp48 164 *tmp48
+  738 draw line 157 *tmp46 164 *tmp46
   739 jump *label442 always
   740 label *label429
   741 jump *label431 notEqual *tmp19 4
   742 label *label430
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  743 op add *tmp54 157 7
+  744 op add *tmp56 :y 12
+  745 draw line 164 :y 164 *tmp56
+  746 op add *tmp57 :y 6
+  747 draw line 157 *tmp57 164 *tmp57
+  748 draw line 157 *tmp57 157 *tmp56
   749 jump *label442 always
   750 label *label431
   751 jump *label433 notEqual *tmp19 5
   752 label *label432
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  753 op add *tmp62 157 7
+  754 draw line 157 :y 164 :y
+  755 op add *tmp65 :y 6
+  756 draw line 164 :y 164 *tmp65
+  757 draw line 157 *tmp65 164 *tmp65
+  758 op add *tmp70 :y 12
+  759 draw line 157 *tmp65 157 *tmp70
+  760 draw line 157 *tmp70 164 *tmp70
   761 jump *label442 always
   762 label *label433
   763 jump *label435 notEqual *tmp19 6
   764 label *label434
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  765 op add *tmp74 :y 12
+  766 draw line 157 :y 157 *tmp74
+  767 op add *tmp75 157 7
+  768 draw line 157 :y 164 :y
+  769 op add *tmp78 :y 6
+  770 draw line 164 :y 164 *tmp78
+  771 draw line 157 *tmp78 164 *tmp78
+  772 draw line 157 *tmp74 164 *tmp74
   773 jump *label442 always
   774 label *label435
   775 jump *label437 notEqual *tmp19 7
   776 label *label436
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  777 op add *tmp86 157 6
+  778 op add *tmp89 :y 12
+  779 draw line 163 :y 163 *tmp89
+  780 draw line 157 *tmp89 163 *tmp89
   781 jump *label442 always
   782 label *label437
   783 jump *label439 notEqual *tmp19 8
   784 label *label438
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  785 op sub *tmp95 157 1
+  786 op sub *tmp97 :y 1
+  787 draw lineRect 156 *tmp97 9 14
+  788 op add *tmp98 :y 6
+  789 op add *tmp99 157 7
+  790 draw line 157 *tmp98 164 *tmp98
   791 jump *label442 always
   792 label *label439
   793 jump *label441 notEqual *tmp19 9
   794 label *label440
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  795 op add *tmp101 157 7
+  796 draw line 157 :y 164 :y
+  797 op add *tmp104 :y 12
+  798 draw line 164 :y 164 *tmp104
+  799 op add *tmp105 :y 6
+  800 draw line 157 *tmp105 164 *tmp105
+  801 draw line 157 *tmp105 157 *tmp104
+  802 draw line 157 *tmp104 164 *tmp104
   803 label *label441
   804 label *label442
   805 label *label443
-    * op sub :displayItem:x :displayItem:x 11
+  806 op sub :displayItem:x 157 11
   807 op idiv :displayItem:amount :displayItem:amount 10
   808 jump *label444 notEqual :displayItem:amount 0
   809 jump *label529 always
 
   815 # "Function: def drawDigit(in x, in y, in digit)"
   816 jump *label449 notEqual *tmp19 0
   817 label *label448
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  818 op sub *tmp24 146 1
+  819 op sub *tmp26 :y 1
+  820 draw lineRect 145 *tmp26 9 14
   821 jump *label468 always
   822 label *label449
   823 jump *label451 notEqual *tmp19 1
   824 label *label450
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  825 op add *tmp28 146 6
+  826 op add *tmp31 :y 12
+  827 draw line 152 :y 152 *tmp31
   828 jump *label468 always
   829 label *label451
   830 jump *label453 notEqual *tmp19 2
   831 label *label452
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  832 op add *tmp32 146 7
+  833 draw line 146 :y 153 :y
+  834 op add *tmp33 :y 6
+  835 draw line 146 :y 146 *tmp33
+  836 draw line 146 *tmp33 153 *tmp33
+  837 op add *tmp40 :y 12
+  838 draw line 153 *tmp33 153 *tmp40
+  839 draw line 146 *tmp40 153 *tmp40
   840 jump *label468 always
   841 label *label453
   842 jump *label455 notEqual *tmp19 3
   843 label *label454
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  844 op add *tmp44 146 7
+  845 op add *tmp46 :y 12
+  846 draw line 153 :y 153 *tmp46
+  847 draw line 146 :y 153 :y
+  848 op add *tmp48 :y 6
+  849 draw line 146 *tmp48 153 *tmp48
+  850 draw line 146 *tmp46 153 *tmp46
   851 jump *label468 always
   852 label *label455
   853 jump *label457 notEqual *tmp19 4
   854 label *label456
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  855 op add *tmp54 146 7
+  856 op add *tmp56 :y 12
+  857 draw line 153 :y 153 *tmp56
+  858 op add *tmp57 :y 6
+  859 draw line 146 *tmp57 153 *tmp57
+  860 draw line 146 *tmp57 146 *tmp56
   861 jump *label468 always
   862 label *label457
   863 jump *label459 notEqual *tmp19 5
   864 label *label458
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  865 op add *tmp62 146 7
+  866 draw line 146 :y 153 :y
+  867 op add *tmp65 :y 6
+  868 draw line 153 :y 153 *tmp65
+  869 draw line 146 *tmp65 153 *tmp65
+  870 op add *tmp70 :y 12
+  871 draw line 146 *tmp65 146 *tmp70
+  872 draw line 146 *tmp70 153 *tmp70
   873 jump *label468 always
   874 label *label459
   875 jump *label461 notEqual *tmp19 6
   876 label *label460
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  877 op add *tmp74 :y 12
+  878 draw line 146 :y 146 *tmp74
+  879 op add *tmp75 146 7
+  880 draw line 146 :y 153 :y
+  881 op add *tmp78 :y 6
+  882 draw line 153 :y 153 *tmp78
+  883 draw line 146 *tmp78 153 *tmp78
+  884 draw line 146 *tmp74 153 *tmp74
   885 jump *label468 always
   886 label *label461
   887 jump *label463 notEqual *tmp19 7
   888 label *label462
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  889 op add *tmp86 146 6
+  890 op add *tmp89 :y 12
+  891 draw line 152 :y 152 *tmp89
+  892 draw line 146 *tmp89 152 *tmp89
   893 jump *label468 always
   894 label *label463
   895 jump *label465 notEqual *tmp19 8
   896 label *label464
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  897 op sub *tmp95 146 1
+  898 op sub *tmp97 :y 1
+  899 draw lineRect 145 *tmp97 9 14
+  900 op add *tmp98 :y 6
+  901 op add *tmp99 146 7
+  902 draw line 146 *tmp98 153 *tmp98
   903 jump *label468 always
   904 label *label465
   905 jump *label467 notEqual *tmp19 9
   906 label *label466
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  907 op add *tmp101 146 7
+  908 draw line 146 :y 153 :y
+  909 op add *tmp104 :y 12
+  910 draw line 153 :y 153 *tmp104
+  911 op add *tmp105 :y 6
+  912 draw line 146 *tmp105 153 *tmp105
+  913 draw line 146 *tmp105 146 *tmp104
+  914 draw line 146 *tmp104 153 *tmp104
   915 label *label467
   916 label *label468
   917 label *label469
-    * op sub :displayItem:x :displayItem:x 11
+  918 op sub :displayItem:x 146 11
   919 op idiv :displayItem:amount :displayItem:amount 10
   920 jump *label470 notEqual :displayItem:amount 0
   921 jump *label529 always
 
   927 # "Function: def drawDigit(in x, in y, in digit)"
   928 jump *label475 notEqual *tmp19 0
   929 label *label474
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  930 op sub *tmp24 135 1
+  931 op sub *tmp26 :y 1
+  932 draw lineRect 134 *tmp26 9 14
   933 jump *label494 always
   934 label *label475
   935 jump *label477 notEqual *tmp19 1
   936 label *label476
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  937 op add *tmp28 135 6
+  938 op add *tmp31 :y 12
+  939 draw line 141 :y 141 *tmp31
   940 jump *label494 always
   941 label *label477
   942 jump *label479 notEqual *tmp19 2
   943 label *label478
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  944 op add *tmp32 135 7
+  945 draw line 135 :y 142 :y
+  946 op add *tmp33 :y 6
+  947 draw line 135 :y 135 *tmp33
+  948 draw line 135 *tmp33 142 *tmp33
+  949 op add *tmp40 :y 12
+  950 draw line 142 *tmp33 142 *tmp40
+  951 draw line 135 *tmp40 142 *tmp40
   952 jump *label494 always
   953 label *label479
   954 jump *label481 notEqual *tmp19 3
   955 label *label480
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  956 op add *tmp44 135 7
+  957 op add *tmp46 :y 12
+  958 draw line 142 :y 142 *tmp46
+  959 draw line 135 :y 142 :y
+  960 op add *tmp48 :y 6
+  961 draw line 135 *tmp48 142 *tmp48
+  962 draw line 135 *tmp46 142 *tmp46
   963 jump *label494 always
   964 label *label481
   965 jump *label483 notEqual *tmp19 4
   966 label *label482
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  967 op add *tmp54 135 7
+  968 op add *tmp56 :y 12
+  969 draw line 142 :y 142 *tmp56
+  970 op add *tmp57 :y 6
+  971 draw line 135 *tmp57 142 *tmp57
+  972 draw line 135 *tmp57 135 *tmp56
   973 jump *label494 always
   974 label *label483
   975 jump *label485 notEqual *tmp19 5
   976 label *label484
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  977 op add *tmp62 135 7
+  978 draw line 135 :y 142 :y
+  979 op add *tmp65 :y 6
+  980 draw line 142 :y 142 *tmp65
+  981 draw line 135 *tmp65 142 *tmp65
+  982 op add *tmp70 :y 12
+  983 draw line 135 *tmp65 135 *tmp70
+  984 draw line 135 *tmp70 142 *tmp70
   985 jump *label494 always
   986 label *label485
   987 jump *label487 notEqual *tmp19 6
   988 label *label486
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  989 op add *tmp74 :y 12
+  990 draw line 135 :y 135 *tmp74
+  991 op add *tmp75 135 7
+  992 draw line 135 :y 142 :y
+  993 op add *tmp78 :y 6
+  994 draw line 142 :y 142 *tmp78
+  995 draw line 135 *tmp78 142 *tmp78
+  996 draw line 135 *tmp74 142 *tmp74
   997 jump *label494 always
   998 label *label487
   999 jump *label489 notEqual *tmp19 7
  1000 label *label488
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1001 op add *tmp86 135 6
+ 1002 op add *tmp89 :y 12
+ 1003 draw line 141 :y 141 *tmp89
+ 1004 draw line 135 *tmp89 141 *tmp89
  1005 jump *label494 always
  1006 label *label489
  1007 jump *label491 notEqual *tmp19 8
  1008 label *label490
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1009 op sub *tmp95 135 1
+ 1010 op sub *tmp97 :y 1
+ 1011 draw lineRect 134 *tmp97 9 14
+ 1012 op add *tmp98 :y 6
+ 1013 op add *tmp99 135 7
+ 1014 draw line 135 *tmp98 142 *tmp98
  1015 jump *label494 always
  1016 label *label491
  1017 jump *label493 notEqual *tmp19 9
  1018 label *label492
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1019 op add *tmp101 135 7
+ 1020 draw line 135 :y 142 :y
+ 1021 op add *tmp104 :y 12
+ 1022 draw line 142 :y 142 *tmp104
+ 1023 op add *tmp105 :y 6
+ 1024 draw line 135 *tmp105 142 *tmp105
+ 1025 draw line 135 *tmp105 135 *tmp104
+ 1026 draw line 135 *tmp104 142 *tmp104
  1027 label *label493
  1028 label *label494
  1029 label *label495
-    * op sub :displayItem:x :displayItem:x 11
+ 1030 op sub :displayItem:x 135 11
  1031 op idiv :displayItem:amount :displayItem:amount 10
  1032 jump *label496 notEqual :displayItem:amount 0
  1033 jump *label529 always
 
  1039 # "Function: def drawDigit(in x, in y, in digit)"
  1040 jump *label501 notEqual *tmp19 0
  1041 label *label500
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+ 1042 op sub *tmp24 124 1
+ 1043 op sub *tmp26 :y 1
+ 1044 draw lineRect 123 *tmp26 9 14
  1045 jump *label520 always
  1046 label *label501
  1047 jump *label503 notEqual *tmp19 1
  1048 label *label502
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1049 op add *tmp28 124 6
+ 1050 op add *tmp31 :y 12
+ 1051 draw line 130 :y 130 *tmp31
  1052 jump *label520 always
  1053 label *label503
  1054 jump *label505 notEqual *tmp19 2
  1055 label *label504
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1056 op add *tmp32 124 7
+ 1057 draw line 124 :y 131 :y
+ 1058 op add *tmp33 :y 6
+ 1059 draw line 124 :y 124 *tmp33
+ 1060 draw line 124 *tmp33 131 *tmp33
+ 1061 op add *tmp40 :y 12
+ 1062 draw line 131 *tmp33 131 *tmp40
+ 1063 draw line 124 *tmp40 131 *tmp40
  1064 jump *label520 always
  1065 label *label505
  1066 jump *label507 notEqual *tmp19 3
  1067 label *label506
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1068 op add *tmp44 124 7
+ 1069 op add *tmp46 :y 12
+ 1070 draw line 131 :y 131 *tmp46
+ 1071 draw line 124 :y 131 :y
+ 1072 op add *tmp48 :y 6
+ 1073 draw line 124 *tmp48 131 *tmp48
+ 1074 draw line 124 *tmp46 131 *tmp46
  1075 jump *label520 always
  1076 label *label507
  1077 jump *label509 notEqual *tmp19 4
  1078 label *label508
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1079 op add *tmp54 124 7
+ 1080 op add *tmp56 :y 12
+ 1081 draw line 131 :y 131 *tmp56
+ 1082 op add *tmp57 :y 6
+ 1083 draw line 124 *tmp57 131 *tmp57
+ 1084 draw line 124 *tmp57 124 *tmp56
  1085 jump *label520 always
  1086 label *label509
  1087 jump *label511 notEqual *tmp19 5
  1088 label *label510
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1089 op add *tmp62 124 7
+ 1090 draw line 124 :y 131 :y
+ 1091 op add *tmp65 :y 6
+ 1092 draw line 131 :y 131 *tmp65
+ 1093 draw line 124 *tmp65 131 *tmp65
+ 1094 op add *tmp70 :y 12
+ 1095 draw line 124 *tmp65 124 *tmp70
+ 1096 draw line 124 *tmp70 131 *tmp70
  1097 jump *label520 always
  1098 label *label511
  1099 jump *label513 notEqual *tmp19 6
  1100 label *label512
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1101 op add *tmp74 :y 12
+ 1102 draw line 124 :y 124 *tmp74
+ 1103 op add *tmp75 124 7
+ 1104 draw line 124 :y 131 :y
+ 1105 op add *tmp78 :y 6
+ 1106 draw line 131 :y 131 *tmp78
+ 1107 draw line 124 *tmp78 131 *tmp78
+ 1108 draw line 124 *tmp74 131 *tmp74
  1109 jump *label520 always
  1110 label *label513
  1111 jump *label515 notEqual *tmp19 7
  1112 label *label514
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1113 op add *tmp86 124 6
+ 1114 op add *tmp89 :y 12
+ 1115 draw line 130 :y 130 *tmp89
+ 1116 draw line 124 *tmp89 130 *tmp89
  1117 jump *label520 always
  1118 label *label515
  1119 jump *label517 notEqual *tmp19 8
  1120 label *label516
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1121 op sub *tmp95 124 1
+ 1122 op sub *tmp97 :y 1
+ 1123 draw lineRect 123 *tmp97 9 14
+ 1124 op add *tmp98 :y 6
+ 1125 op add *tmp99 124 7
+ 1126 draw line 124 *tmp98 131 *tmp98
  1127 jump *label520 always
  1128 label *label517
  1129 jump *label519 notEqual *tmp19 9
  1130 label *label518
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1131 op add *tmp101 124 7
+ 1132 draw line 124 :y 131 :y
+ 1133 op add *tmp104 :y 12
+ 1134 draw line 131 :y 131 *tmp104
+ 1135 op add *tmp105 :y 6
+ 1136 draw line 124 *tmp105 131 *tmp105
+ 1137 draw line 124 *tmp105 124 *tmp104
+ 1138 draw line 124 *tmp104 131 *tmp104
  1139 label *label519
  1140 label *label520
  1141 label *label521
-    * op sub :displayItem:x :displayItem:x 11
+ 1142 op sub :displayItem:x 124 11
  1143 op idiv :displayItem:amount :displayItem:amount 10
  1144 jump *label522 notEqual :displayItem:amount 0
  1145 jump *label529 always
 
  1149 label *label525
  1150 # "Function: def drawDigit12(in x, in y, in digit)"
  1151 jump *label526 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1152 op add *tmp119 113 6
+ 1153 op add *tmp122 :y 12
+ 1154 draw line 119 :y 119 *tmp122
  1155 jump *label527 always
  1156 label *label526
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1157 op add *tmp123 113 7
+ 1158 draw line 113 :y 120 :y
+ 1159 op add *tmp124 :y 6
+ 1160 draw line 113 :y 113 *tmp124
+ 1161 draw line 113 *tmp124 120 *tmp124
+ 1162 op add *tmp131 :y 12
+ 1163 draw line 120 *tmp124 120 *tmp131
+ 1164 draw line 113 *tmp131 120 *tmp131
  1165 label *label527
  1166 label *label528
  1167 label *label529

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-104 instructions):
 
   215 label *label26
   216 draw image 0 0 :item 16 0
   217 jump *label47 greaterThanEq :index 8
-    * set :displayItem:x 71
-    * set :displayItem:y :y
   218 label *label308
   219 # "Function: void displayItem(in x, in y)"
   220 op max :displayItem:amount AMOUNT 0
 
   225 # "Function: def drawDigit(in x, in y, in digit)"
   226 jump *label312 notEqual *tmp19 0
   227 label *label311
-    * op sub *tmp24 71 1
   228 op sub *tmp26 :y 1
   229 draw lineRect 70 *tmp26 9 14
   230 jump *label331 always
   231 label *label312
   232 jump *label314 notEqual *tmp19 1
   233 label *label313
-    * op add *tmp28 71 6
   234 op add *tmp31 :y 12
   235 draw line 77 :y 77 *tmp31
   236 jump *label331 always
   237 label *label314
   238 jump *label316 notEqual *tmp19 2
   239 label *label315
-    * op add *tmp32 71 7
   240 draw line 71 :y 78 :y
   241 op add *tmp33 :y 6
   242 draw line 71 :y 71 *tmp33
 
   248 label *label316
   249 jump *label318 notEqual *tmp19 3
   250 label *label317
-    * op add *tmp44 71 7
   251 op add *tmp46 :y 12
   252 draw line 78 :y 78 *tmp46
   253 draw line 71 :y 78 :y
 
   258 label *label318
   259 jump *label320 notEqual *tmp19 4
   260 label *label319
-    * op add *tmp54 71 7
   261 op add *tmp56 :y 12
   262 draw line 78 :y 78 *tmp56
   263 op add *tmp57 :y 6
 
   267 label *label320
   268 jump *label322 notEqual *tmp19 5
   269 label *label321
-    * op add *tmp62 71 7
   270 draw line 71 :y 78 :y
   271 op add *tmp65 :y 6
   272 draw line 78 :y 78 *tmp65
 
   280 label *label323
   281 op add *tmp74 :y 12
   282 draw line 71 :y 71 *tmp74
-    * op add *tmp75 71 7
   283 draw line 71 :y 78 :y
   284 op add *tmp78 :y 6
   285 draw line 78 :y 78 *tmp78
 
   289 label *label324
   290 jump *label326 notEqual *tmp19 7
   291 label *label325
-    * op add *tmp86 71 6
   292 op add *tmp89 :y 12
   293 draw line 77 :y 77 *tmp89
   294 draw line 71 *tmp89 77 *tmp89
 
   296 label *label326
   297 jump *label328 notEqual *tmp19 8
   298 label *label327
-    * op sub *tmp95 71 1
   299 op sub *tmp97 :y 1
   300 draw lineRect 70 *tmp97 9 14
   301 op add *tmp98 :y 6
-    * op add *tmp99 71 7
   302 draw line 71 *tmp98 78 *tmp98
   303 jump *label331 always
   304 label *label328
   305 jump *label330 notEqual *tmp19 9
   306 label *label329
-    * op add *tmp101 71 7
   307 draw line 71 :y 78 :y
   308 op add *tmp104 :y 12
   309 draw line 78 :y 78 *tmp104
 
   314 label *label330
   315 label *label331
   316 label *label332
-    * op sub :displayItem:x 71 11
   317 op idiv :displayItem:amount :displayItem:amount 10
   318 jump *label333 notEqual :displayItem:amount 0
   319 jump *label418 always
 
   325 # "Function: def drawDigit(in x, in y, in digit)"
   326 jump *label338 notEqual *tmp19 0
   327 label *label337
-    * op sub *tmp24 60 1
   328 op sub *tmp26 :y 1
   329 draw lineRect 59 *tmp26 9 14
   330 jump *label357 always
   331 label *label338
   332 jump *label340 notEqual *tmp19 1
   333 label *label339
-    * op add *tmp28 60 6
   334 op add *tmp31 :y 12
   335 draw line 66 :y 66 *tmp31
   336 jump *label357 always
   337 label *label340
   338 jump *label342 notEqual *tmp19 2
   339 label *label341
-    * op add *tmp32 60 7
   340 draw line 60 :y 67 :y
   341 op add *tmp33 :y 6
   342 draw line 60 :y 60 *tmp33
 
   348 label *label342
   349 jump *label344 notEqual *tmp19 3
   350 label *label343
-    * op add *tmp44 60 7
   351 op add *tmp46 :y 12
   352 draw line 67 :y 67 *tmp46
   353 draw line 60 :y 67 :y
 
   358 label *label344
   359 jump *label346 notEqual *tmp19 4
   360 label *label345
-    * op add *tmp54 60 7
   361 op add *tmp56 :y 12
   362 draw line 67 :y 67 *tmp56
   363 op add *tmp57 :y 6
 
   367 label *label346
   368 jump *label348 notEqual *tmp19 5
   369 label *label347
-    * op add *tmp62 60 7
   370 draw line 60 :y 67 :y
   371 op add *tmp65 :y 6
   372 draw line 67 :y 67 *tmp65
 
   380 label *label349
   381 op add *tmp74 :y 12
   382 draw line 60 :y 60 *tmp74
-    * op add *tmp75 60 7
   383 draw line 60 :y 67 :y
   384 op add *tmp78 :y 6
   385 draw line 67 :y 67 *tmp78
 
   389 label *label350
   390 jump *label352 notEqual *tmp19 7
   391 label *label351
-    * op add *tmp86 60 6
   392 op add *tmp89 :y 12
   393 draw line 66 :y 66 *tmp89
   394 draw line 60 *tmp89 66 *tmp89
 
   396 label *label352
   397 jump *label354 notEqual *tmp19 8
   398 label *label353
-    * op sub *tmp95 60 1
   399 op sub *tmp97 :y 1
   400 draw lineRect 59 *tmp97 9 14
   401 op add *tmp98 :y 6
-    * op add *tmp99 60 7
   402 draw line 60 *tmp98 67 *tmp98
   403 jump *label357 always
   404 label *label354
   405 jump *label356 notEqual *tmp19 9
   406 label *label355
-    * op add *tmp101 60 7
   407 draw line 60 :y 67 :y
   408 op add *tmp104 :y 12
   409 draw line 67 :y 67 *tmp104
 
   414 label *label356
   415 label *label357
   416 label *label358
-    * op sub :displayItem:x 60 11
   417 op idiv :displayItem:amount :displayItem:amount 10
   418 jump *label359 notEqual :displayItem:amount 0
   419 jump *label418 always
 
   425 # "Function: def drawDigit(in x, in y, in digit)"
   426 jump *label364 notEqual *tmp19 0
   427 label *label363
-    * op sub *tmp24 49 1
   428 op sub *tmp26 :y 1
   429 draw lineRect 48 *tmp26 9 14
   430 jump *label383 always
   431 label *label364
   432 jump *label366 notEqual *tmp19 1
   433 label *label365
-    * op add *tmp28 49 6
   434 op add *tmp31 :y 12
   435 draw line 55 :y 55 *tmp31
   436 jump *label383 always
   437 label *label366
   438 jump *label368 notEqual *tmp19 2
   439 label *label367
-    * op add *tmp32 49 7
   440 draw line 49 :y 56 :y
   441 op add *tmp33 :y 6
   442 draw line 49 :y 49 *tmp33
 
   448 label *label368
   449 jump *label370 notEqual *tmp19 3
   450 label *label369
-    * op add *tmp44 49 7
   451 op add *tmp46 :y 12
   452 draw line 56 :y 56 *tmp46
   453 draw line 49 :y 56 :y
 
   458 label *label370
   459 jump *label372 notEqual *tmp19 4
   460 label *label371
-    * op add *tmp54 49 7
   461 op add *tmp56 :y 12
   462 draw line 56 :y 56 *tmp56
   463 op add *tmp57 :y 6
 
   467 label *label372
   468 jump *label374 notEqual *tmp19 5
   469 label *label373
-    * op add *tmp62 49 7
   470 draw line 49 :y 56 :y
   471 op add *tmp65 :y 6
   472 draw line 56 :y 56 *tmp65
 
   480 label *label375
   481 op add *tmp74 :y 12
   482 draw line 49 :y 49 *tmp74
-    * op add *tmp75 49 7
   483 draw line 49 :y 56 :y
   484 op add *tmp78 :y 6
   485 draw line 56 :y 56 *tmp78
 
   489 label *label376
   490 jump *label378 notEqual *tmp19 7
   491 label *label377
-    * op add *tmp86 49 6
   492 op add *tmp89 :y 12
   493 draw line 55 :y 55 *tmp89
   494 draw line 49 *tmp89 55 *tmp89
 
   496 label *label378
   497 jump *label380 notEqual *tmp19 8
   498 label *label379
-    * op sub *tmp95 49 1
   499 op sub *tmp97 :y 1
   500 draw lineRect 48 *tmp97 9 14
   501 op add *tmp98 :y 6
-    * op add *tmp99 49 7
   502 draw line 49 *tmp98 56 *tmp98
   503 jump *label383 always
   504 label *label380
   505 jump *label382 notEqual *tmp19 9
   506 label *label381
-    * op add *tmp101 49 7
   507 draw line 49 :y 56 :y
   508 op add *tmp104 :y 12
   509 draw line 56 :y 56 *tmp104
 
   514 label *label382
   515 label *label383
   516 label *label384
-    * op sub :displayItem:x 49 11
   517 op idiv :displayItem:amount :displayItem:amount 10
   518 jump *label385 notEqual :displayItem:amount 0
   519 jump *label418 always
 
   525 # "Function: def drawDigit(in x, in y, in digit)"
   526 jump *label390 notEqual *tmp19 0
   527 label *label389
-    * op sub *tmp24 38 1
   528 op sub *tmp26 :y 1
   529 draw lineRect 37 *tmp26 9 14
   530 jump *label409 always
   531 label *label390
   532 jump *label392 notEqual *tmp19 1
   533 label *label391
-    * op add *tmp28 38 6
   534 op add *tmp31 :y 12
   535 draw line 44 :y 44 *tmp31
   536 jump *label409 always
   537 label *label392
   538 jump *label394 notEqual *tmp19 2
   539 label *label393
-    * op add *tmp32 38 7
   540 draw line 38 :y 45 :y
   541 op add *tmp33 :y 6
   542 draw line 38 :y 38 *tmp33
 
   548 label *label394
   549 jump *label396 notEqual *tmp19 3
   550 label *label395
-    * op add *tmp44 38 7
   551 op add *tmp46 :y 12
   552 draw line 45 :y 45 *tmp46
   553 draw line 38 :y 45 :y
 
   558 label *label396
   559 jump *label398 notEqual *tmp19 4
   560 label *label397
-    * op add *tmp54 38 7
   561 op add *tmp56 :y 12
   562 draw line 45 :y 45 *tmp56
   563 op add *tmp57 :y 6
 
   567 label *label398
   568 jump *label400 notEqual *tmp19 5
   569 label *label399
-    * op add *tmp62 38 7
   570 draw line 38 :y 45 :y
   571 op add *tmp65 :y 6
   572 draw line 45 :y 45 *tmp65
 
   580 label *label401
   581 op add *tmp74 :y 12
   582 draw line 38 :y 38 *tmp74
-    * op add *tmp75 38 7
   583 draw line 38 :y 45 :y
   584 op add *tmp78 :y 6
   585 draw line 45 :y 45 *tmp78
 
   589 label *label402
   590 jump *label404 notEqual *tmp19 7
   591 label *label403
-    * op add *tmp86 38 6
   592 op add *tmp89 :y 12
   593 draw line 44 :y 44 *tmp89
   594 draw line 38 *tmp89 44 *tmp89
 
   596 label *label404
   597 jump *label406 notEqual *tmp19 8
   598 label *label405
-    * op sub *tmp95 38 1
   599 op sub *tmp97 :y 1
   600 draw lineRect 37 *tmp97 9 14
   601 op add *tmp98 :y 6
-    * op add *tmp99 38 7
   602 draw line 38 *tmp98 45 *tmp98
   603 jump *label409 always
   604 label *label406
   605 jump *label408 notEqual *tmp19 9
   606 label *label407
-    * op add *tmp101 38 7
   607 draw line 38 :y 45 :y
   608 op add *tmp104 :y 12
   609 draw line 45 :y 45 *tmp104
 
   614 label *label408
   615 label *label409
   616 label *label410
-    * op sub :displayItem:x 38 11
   617 op idiv :displayItem:amount :displayItem:amount 10
   618 jump *label411 notEqual :displayItem:amount 0
   619 jump *label418 always
 
   623 label *label414
   624 # "Function: def drawDigit12(in x, in y, in digit)"
   625 jump *label415 notEqual :displayItem:amount 1
-    * op add *tmp119 27 6
   626 op add *tmp122 :y 12
   627 draw line 33 :y 33 *tmp122
   628 jump *label416 always
   629 label *label415
-    * op add *tmp123 27 7
   630 draw line 27 :y 34 :y
   631 op add *tmp124 :y 6
   632 draw line 27 :y 27 *tmp124
 
   639 label *label418
   640 jump *label48 always
   641 label *label47
-    * set :displayItem:x 157
-    * set :displayItem:y :y
   642 label *label419
   643 # "Function: void displayItem(in x, in y)"
   644 op max :displayItem:amount AMOUNT 0
 
   649 # "Function: def drawDigit(in x, in y, in digit)"
   650 jump *label423 notEqual *tmp19 0
   651 label *label422
-    * op sub *tmp24 157 1
   652 op sub *tmp26 :y 1
   653 draw lineRect 156 *tmp26 9 14
   654 jump *label442 always
   655 label *label423
   656 jump *label425 notEqual *tmp19 1
   657 label *label424
-    * op add *tmp28 157 6
   658 op add *tmp31 :y 12
   659 draw line 163 :y 163 *tmp31
   660 jump *label442 always
   661 label *label425
   662 jump *label427 notEqual *tmp19 2
   663 label *label426
-    * op add *tmp32 157 7
   664 draw line 157 :y 164 :y
   665 op add *tmp33 :y 6
   666 draw line 157 :y 157 *tmp33
 
   672 label *label427
   673 jump *label429 notEqual *tmp19 3
   674 label *label428
-    * op add *tmp44 157 7
   675 op add *tmp46 :y 12
   676 draw line 164 :y 164 *tmp46
   677 draw line 157 :y 164 :y
 
   682 label *label429
   683 jump *label431 notEqual *tmp19 4
   684 label *label430
-    * op add *tmp54 157 7
   685 op add *tmp56 :y 12
   686 draw line 164 :y 164 *tmp56
   687 op add *tmp57 :y 6
 
   691 label *label431
   692 jump *label433 notEqual *tmp19 5
   693 label *label432
-    * op add *tmp62 157 7
   694 draw line 157 :y 164 :y
   695 op add *tmp65 :y 6
   696 draw line 164 :y 164 *tmp65
 
   704 label *label434
   705 op add *tmp74 :y 12
   706 draw line 157 :y 157 *tmp74
-    * op add *tmp75 157 7
   707 draw line 157 :y 164 :y
   708 op add *tmp78 :y 6
   709 draw line 164 :y 164 *tmp78
 
   713 label *label435
   714 jump *label437 notEqual *tmp19 7
   715 label *label436
-    * op add *tmp86 157 6
   716 op add *tmp89 :y 12
   717 draw line 163 :y 163 *tmp89
   718 draw line 157 *tmp89 163 *tmp89
 
   720 label *label437
   721 jump *label439 notEqual *tmp19 8
   722 label *label438
-    * op sub *tmp95 157 1
   723 op sub *tmp97 :y 1
   724 draw lineRect 156 *tmp97 9 14
   725 op add *tmp98 :y 6
-    * op add *tmp99 157 7
   726 draw line 157 *tmp98 164 *tmp98
   727 jump *label442 always
   728 label *label439
   729 jump *label441 notEqual *tmp19 9
   730 label *label440
-    * op add *tmp101 157 7
   731 draw line 157 :y 164 :y
   732 op add *tmp104 :y 12
   733 draw line 164 :y 164 *tmp104
 
   738 label *label441
   739 label *label442
   740 label *label443
-    * op sub :displayItem:x 157 11
   741 op idiv :displayItem:amount :displayItem:amount 10
   742 jump *label444 notEqual :displayItem:amount 0
   743 jump *label529 always
 
   749 # "Function: def drawDigit(in x, in y, in digit)"
   750 jump *label449 notEqual *tmp19 0
   751 label *label448
-    * op sub *tmp24 146 1
   752 op sub *tmp26 :y 1
   753 draw lineRect 145 *tmp26 9 14
   754 jump *label468 always
   755 label *label449
   756 jump *label451 notEqual *tmp19 1
   757 label *label450
-    * op add *tmp28 146 6
   758 op add *tmp31 :y 12
   759 draw line 152 :y 152 *tmp31
   760 jump *label468 always
   761 label *label451
   762 jump *label453 notEqual *tmp19 2
   763 label *label452
-    * op add *tmp32 146 7
   764 draw line 146 :y 153 :y
   765 op add *tmp33 :y 6
   766 draw line 146 :y 146 *tmp33
 
   772 label *label453
   773 jump *label455 notEqual *tmp19 3
   774 label *label454
-    * op add *tmp44 146 7
   775 op add *tmp46 :y 12
   776 draw line 153 :y 153 *tmp46
   777 draw line 146 :y 153 :y
 
   782 label *label455
   783 jump *label457 notEqual *tmp19 4
   784 label *label456
-    * op add *tmp54 146 7
   785 op add *tmp56 :y 12
   786 draw line 153 :y 153 *tmp56
   787 op add *tmp57 :y 6
 
   791 label *label457
   792 jump *label459 notEqual *tmp19 5
   793 label *label458
-    * op add *tmp62 146 7
   794 draw line 146 :y 153 :y
   795 op add *tmp65 :y 6
   796 draw line 153 :y 153 *tmp65
 
   804 label *label460
   805 op add *tmp74 :y 12
   806 draw line 146 :y 146 *tmp74
-    * op add *tmp75 146 7
   807 draw line 146 :y 153 :y
   808 op add *tmp78 :y 6
   809 draw line 153 :y 153 *tmp78
 
   813 label *label461
   814 jump *label463 notEqual *tmp19 7
   815 label *label462
-    * op add *tmp86 146 6
   816 op add *tmp89 :y 12
   817 draw line 152 :y 152 *tmp89
   818 draw line 146 *tmp89 152 *tmp89
 
   820 label *label463
   821 jump *label465 notEqual *tmp19 8
   822 label *label464
-    * op sub *tmp95 146 1
   823 op sub *tmp97 :y 1
   824 draw lineRect 145 *tmp97 9 14
   825 op add *tmp98 :y 6
-    * op add *tmp99 146 7
   826 draw line 146 *tmp98 153 *tmp98
   827 jump *label468 always
   828 label *label465
   829 jump *label467 notEqual *tmp19 9
   830 label *label466
-    * op add *tmp101 146 7
   831 draw line 146 :y 153 :y
   832 op add *tmp104 :y 12
   833 draw line 153 :y 153 *tmp104
 
   838 label *label467
   839 label *label468
   840 label *label469
-    * op sub :displayItem:x 146 11
   841 op idiv :displayItem:amount :displayItem:amount 10
   842 jump *label470 notEqual :displayItem:amount 0
   843 jump *label529 always
 
   849 # "Function: def drawDigit(in x, in y, in digit)"
   850 jump *label475 notEqual *tmp19 0
   851 label *label474
-    * op sub *tmp24 135 1
   852 op sub *tmp26 :y 1
   853 draw lineRect 134 *tmp26 9 14
   854 jump *label494 always
   855 label *label475
   856 jump *label477 notEqual *tmp19 1
   857 label *label476
-    * op add *tmp28 135 6
   858 op add *tmp31 :y 12
   859 draw line 141 :y 141 *tmp31
   860 jump *label494 always
   861 label *label477
   862 jump *label479 notEqual *tmp19 2
   863 label *label478
-    * op add *tmp32 135 7
   864 draw line 135 :y 142 :y
   865 op add *tmp33 :y 6
   866 draw line 135 :y 135 *tmp33
 
   872 label *label479
   873 jump *label481 notEqual *tmp19 3
   874 label *label480
-    * op add *tmp44 135 7
   875 op add *tmp46 :y 12
   876 draw line 142 :y 142 *tmp46
   877 draw line 135 :y 142 :y
 
   882 label *label481
   883 jump *label483 notEqual *tmp19 4
   884 label *label482
-    * op add *tmp54 135 7
   885 op add *tmp56 :y 12
   886 draw line 142 :y 142 *tmp56
   887 op add *tmp57 :y 6
 
   891 label *label483
   892 jump *label485 notEqual *tmp19 5
   893 label *label484
-    * op add *tmp62 135 7
   894 draw line 135 :y 142 :y
   895 op add *tmp65 :y 6
   896 draw line 142 :y 142 *tmp65
 
   904 label *label486
   905 op add *tmp74 :y 12
   906 draw line 135 :y 135 *tmp74
-    * op add *tmp75 135 7
   907 draw line 135 :y 142 :y
   908 op add *tmp78 :y 6
   909 draw line 142 :y 142 *tmp78
 
   913 label *label487
   914 jump *label489 notEqual *tmp19 7
   915 label *label488
-    * op add *tmp86 135 6
   916 op add *tmp89 :y 12
   917 draw line 141 :y 141 *tmp89
   918 draw line 135 *tmp89 141 *tmp89
 
   920 label *label489
   921 jump *label491 notEqual *tmp19 8
   922 label *label490
-    * op sub *tmp95 135 1
   923 op sub *tmp97 :y 1
   924 draw lineRect 134 *tmp97 9 14
   925 op add *tmp98 :y 6
-    * op add *tmp99 135 7
   926 draw line 135 *tmp98 142 *tmp98
   927 jump *label494 always
   928 label *label491
   929 jump *label493 notEqual *tmp19 9
   930 label *label492
-    * op add *tmp101 135 7
   931 draw line 135 :y 142 :y
   932 op add *tmp104 :y 12
   933 draw line 142 :y 142 *tmp104
 
   938 label *label493
   939 label *label494
   940 label *label495
-    * op sub :displayItem:x 135 11
   941 op idiv :displayItem:amount :displayItem:amount 10
   942 jump *label496 notEqual :displayItem:amount 0
   943 jump *label529 always
 
   949 # "Function: def drawDigit(in x, in y, in digit)"
   950 jump *label501 notEqual *tmp19 0
   951 label *label500
-    * op sub *tmp24 124 1
   952 op sub *tmp26 :y 1
   953 draw lineRect 123 *tmp26 9 14
   954 jump *label520 always
   955 label *label501
   956 jump *label503 notEqual *tmp19 1
   957 label *label502
-    * op add *tmp28 124 6
   958 op add *tmp31 :y 12
   959 draw line 130 :y 130 *tmp31
   960 jump *label520 always
   961 label *label503
   962 jump *label505 notEqual *tmp19 2
   963 label *label504
-    * op add *tmp32 124 7
   964 draw line 124 :y 131 :y
   965 op add *tmp33 :y 6
   966 draw line 124 :y 124 *tmp33
 
   972 label *label505
   973 jump *label507 notEqual *tmp19 3
   974 label *label506
-    * op add *tmp44 124 7
   975 op add *tmp46 :y 12
   976 draw line 131 :y 131 *tmp46
   977 draw line 124 :y 131 :y
 
   982 label *label507
   983 jump *label509 notEqual *tmp19 4
   984 label *label508
-    * op add *tmp54 124 7
   985 op add *tmp56 :y 12
   986 draw line 131 :y 131 *tmp56
   987 op add *tmp57 :y 6
 
   991 label *label509
   992 jump *label511 notEqual *tmp19 5
   993 label *label510
-    * op add *tmp62 124 7
   994 draw line 124 :y 131 :y
   995 op add *tmp65 :y 6
   996 draw line 131 :y 131 *tmp65
 
  1004 label *label512
  1005 op add *tmp74 :y 12
  1006 draw line 124 :y 124 *tmp74
-    * op add *tmp75 124 7
  1007 draw line 124 :y 131 :y
  1008 op add *tmp78 :y 6
  1009 draw line 131 :y 131 *tmp78
 
  1013 label *label513
  1014 jump *label515 notEqual *tmp19 7
  1015 label *label514
-    * op add *tmp86 124 6
  1016 op add *tmp89 :y 12
  1017 draw line 130 :y 130 *tmp89
  1018 draw line 124 *tmp89 130 *tmp89
 
  1020 label *label515
  1021 jump *label517 notEqual *tmp19 8
  1022 label *label516
-    * op sub *tmp95 124 1
  1023 op sub *tmp97 :y 1
  1024 draw lineRect 123 *tmp97 9 14
  1025 op add *tmp98 :y 6
-    * op add *tmp99 124 7
  1026 draw line 124 *tmp98 131 *tmp98
  1027 jump *label520 always
  1028 label *label517
  1029 jump *label519 notEqual *tmp19 9
  1030 label *label518
-    * op add *tmp101 124 7
  1031 draw line 124 :y 131 :y
  1032 op add *tmp104 :y 12
  1033 draw line 131 :y 131 *tmp104
 
  1038 label *label519
  1039 label *label520
  1040 label *label521
-    * op sub :displayItem:x 124 11
  1041 op idiv :displayItem:amount :displayItem:amount 10
  1042 jump *label522 notEqual :displayItem:amount 0
  1043 jump *label529 always
 
  1047 label *label525
  1048 # "Function: def drawDigit12(in x, in y, in digit)"
  1049 jump *label526 notEqual :displayItem:amount 1
-    * op add *tmp119 113 6
  1050 op add *tmp122 :y 12
  1051 draw line 119 :y 119 *tmp122
  1052 jump *label527 always
  1053 label *label526
-    * op add *tmp123 113 7
  1054 draw line 113 :y 120 :y
  1055 op add *tmp124 :y 6
  1056 draw line 113 :y 113 *tmp124

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   223 label *label310
   224 op mod *tmp19 :displayItem:amount 10
   225 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label312 notEqual *tmp19 0
+  226 multijump *label532 *tmp19 0 (m:*label531)
+  227 multilabel *label532 (m:*label531)
+  228 jump *label311 always
+  229 multilabel *label533 (m:*label531)
+  230 jump *label313 always
+  231 multilabel *label534 (m:*label531)
+  232 jump *label315 always
+  233 multilabel *label535 (m:*label531)
+  234 jump *label317 always
+  235 multilabel *label536 (m:*label531)
+  236 jump *label319 always
+  237 multilabel *label537 (m:*label531)
+  238 jump *label321 always
+  239 multilabel *label538 (m:*label531)
+  240 jump *label323 always
+  241 multilabel *label539 (m:*label531)
+  242 jump *label325 always
+  243 multilabel *label540 (m:*label531)
+  244 jump *label327 always
+  245 multilabel *label541 (m:*label531)
+  246 jump *label329 always
   247 label *label311
   248 op sub *tmp26 :y 1
   249 draw lineRect 70 *tmp26 9 14
   250 jump *label331 always
   251 label *label312
-    * jump *label314 notEqual *tmp19 1
   252 label *label313
   253 op add *tmp31 :y 12
   254 draw line 77 :y 77 *tmp31
   255 jump *label331 always
   256 label *label314
-    * jump *label316 notEqual *tmp19 2
   257 label *label315
   258 draw line 71 :y 78 :y
   259 op add *tmp33 :y 6
 
   264 draw line 71 *tmp40 78 *tmp40
   265 jump *label331 always
   266 label *label316
-    * jump *label318 notEqual *tmp19 3
   267 label *label317
   268 op add *tmp46 :y 12
   269 draw line 78 :y 78 *tmp46
 
   273 draw line 71 *tmp46 78 *tmp46
   274 jump *label331 always
   275 label *label318
-    * jump *label320 notEqual *tmp19 4
   276 label *label319
   277 op add *tmp56 :y 12
   278 draw line 78 :y 78 *tmp56
 
   281 draw line 71 *tmp57 71 *tmp56
   282 jump *label331 always
   283 label *label320
-    * jump *label322 notEqual *tmp19 5
   284 label *label321
   285 draw line 71 :y 78 :y
   286 op add *tmp65 :y 6
 
   291 draw line 71 *tmp70 78 *tmp70
   292 jump *label331 always
   293 label *label322
-    * jump *label324 notEqual *tmp19 6
   294 label *label323
   295 op add *tmp74 :y 12
   296 draw line 71 :y 71 *tmp74
 
   301 draw line 71 *tmp74 78 *tmp74
   302 jump *label331 always
   303 label *label324
-    * jump *label326 notEqual *tmp19 7
   304 label *label325
   305 op add *tmp89 :y 12
   306 draw line 77 :y 77 *tmp89
   307 draw line 71 *tmp89 77 *tmp89
   308 jump *label331 always
   309 label *label326
-    * jump *label328 notEqual *tmp19 8
   310 label *label327
   311 op sub *tmp97 :y 1
   312 draw lineRect 70 *tmp97 9 14
 
   314 draw line 71 *tmp98 78 *tmp98
   315 jump *label331 always
   316 label *label328
-    * jump *label330 notEqual *tmp19 9
   317 label *label329
   318 draw line 71 :y 78 :y
   319 op add *tmp104 :y 12
 
   323 draw line 71 *tmp105 71 *tmp104
   324 draw line 71 *tmp104 78 *tmp104
   325 label *label330
+  326 label *label530
   327 label *label331
   328 label *label332
   329 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   335 label *label336
   336 op mod *tmp19 :displayItem:amount 10
   337 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label338 notEqual *tmp19 0
+  338 multijump *label544 *tmp19 0 (m:*label543)
+  339 multilabel *label544 (m:*label543)
+  340 jump *label337 always
+  341 multilabel *label545 (m:*label543)
+  342 jump *label339 always
+  343 multilabel *label546 (m:*label543)
+  344 jump *label341 always
+  345 multilabel *label547 (m:*label543)
+  346 jump *label343 always
+  347 multilabel *label548 (m:*label543)
+  348 jump *label345 always
+  349 multilabel *label549 (m:*label543)
+  350 jump *label347 always
+  351 multilabel *label550 (m:*label543)
+  352 jump *label349 always
+  353 multilabel *label551 (m:*label543)
+  354 jump *label351 always
+  355 multilabel *label552 (m:*label543)
+  356 jump *label353 always
+  357 multilabel *label553 (m:*label543)
+  358 jump *label355 always
   359 label *label337
   360 op sub *tmp26 :y 1
   361 draw lineRect 59 *tmp26 9 14
   362 jump *label357 always
   363 label *label338
-    * jump *label340 notEqual *tmp19 1
   364 label *label339
   365 op add *tmp31 :y 12
   366 draw line 66 :y 66 *tmp31
   367 jump *label357 always
   368 label *label340
-    * jump *label342 notEqual *tmp19 2
   369 label *label341
   370 draw line 60 :y 67 :y
   371 op add *tmp33 :y 6
 
   376 draw line 60 *tmp40 67 *tmp40
   377 jump *label357 always
   378 label *label342
-    * jump *label344 notEqual *tmp19 3
   379 label *label343
   380 op add *tmp46 :y 12
   381 draw line 67 :y 67 *tmp46
 
   385 draw line 60 *tmp46 67 *tmp46
   386 jump *label357 always
   387 label *label344
-    * jump *label346 notEqual *tmp19 4
   388 label *label345
   389 op add *tmp56 :y 12
   390 draw line 67 :y 67 *tmp56
 
   393 draw line 60 *tmp57 60 *tmp56
   394 jump *label357 always
   395 label *label346
-    * jump *label348 notEqual *tmp19 5
   396 label *label347
   397 draw line 60 :y 67 :y
   398 op add *tmp65 :y 6
 
   403 draw line 60 *tmp70 67 *tmp70
   404 jump *label357 always
   405 label *label348
-    * jump *label350 notEqual *tmp19 6
   406 label *label349
   407 op add *tmp74 :y 12
   408 draw line 60 :y 60 *tmp74
 
   413 draw line 60 *tmp74 67 *tmp74
   414 jump *label357 always
   415 label *label350
-    * jump *label352 notEqual *tmp19 7
   416 label *label351
   417 op add *tmp89 :y 12
   418 draw line 66 :y 66 *tmp89
   419 draw line 60 *tmp89 66 *tmp89
   420 jump *label357 always
   421 label *label352
-    * jump *label354 notEqual *tmp19 8
   422 label *label353
   423 op sub *tmp97 :y 1
   424 draw lineRect 59 *tmp97 9 14
 
   426 draw line 60 *tmp98 67 *tmp98
   427 jump *label357 always
   428 label *label354
-    * jump *label356 notEqual *tmp19 9
   429 label *label355
   430 draw line 60 :y 67 :y
   431 op add *tmp104 :y 12
 
   435 draw line 60 *tmp105 60 *tmp104
   436 draw line 60 *tmp104 67 *tmp104
   437 label *label356
+  438 label *label542
   439 label *label357
   440 label *label358
   441 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   447 label *label362
   448 op mod *tmp19 :displayItem:amount 10
   449 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label364 notEqual *tmp19 0
+  450 multijump *label556 *tmp19 0 (m:*label555)
+  451 multilabel *label556 (m:*label555)
+  452 jump *label363 always
+  453 multilabel *label557 (m:*label555)
+  454 jump *label365 always
+  455 multilabel *label558 (m:*label555)
+  456 jump *label367 always
+  457 multilabel *label559 (m:*label555)
+  458 jump *label369 always
+  459 multilabel *label560 (m:*label555)
+  460 jump *label371 always
+  461 multilabel *label561 (m:*label555)
+  462 jump *label373 always
+  463 multilabel *label562 (m:*label555)
+  464 jump *label375 always
+  465 multilabel *label563 (m:*label555)
+  466 jump *label377 always
+  467 multilabel *label564 (m:*label555)
+  468 jump *label379 always
+  469 multilabel *label565 (m:*label555)
+  470 jump *label381 always
   471 label *label363
   472 op sub *tmp26 :y 1
   473 draw lineRect 48 *tmp26 9 14
   474 jump *label383 always
   475 label *label364
-    * jump *label366 notEqual *tmp19 1
   476 label *label365
   477 op add *tmp31 :y 12
   478 draw line 55 :y 55 *tmp31
   479 jump *label383 always
   480 label *label366
-    * jump *label368 notEqual *tmp19 2
   481 label *label367
   482 draw line 49 :y 56 :y
   483 op add *tmp33 :y 6
 
   488 draw line 49 *tmp40 56 *tmp40
   489 jump *label383 always
   490 label *label368
-    * jump *label370 notEqual *tmp19 3
   491 label *label369
   492 op add *tmp46 :y 12
   493 draw line 56 :y 56 *tmp46
 
   497 draw line 49 *tmp46 56 *tmp46
   498 jump *label383 always
   499 label *label370
-    * jump *label372 notEqual *tmp19 4
   500 label *label371
   501 op add *tmp56 :y 12
   502 draw line 56 :y 56 *tmp56
 
   505 draw line 49 *tmp57 49 *tmp56
   506 jump *label383 always
   507 label *label372
-    * jump *label374 notEqual *tmp19 5
   508 label *label373
   509 draw line 49 :y 56 :y
   510 op add *tmp65 :y 6
 
   515 draw line 49 *tmp70 56 *tmp70
   516 jump *label383 always
   517 label *label374
-    * jump *label376 notEqual *tmp19 6
   518 label *label375
   519 op add *tmp74 :y 12
   520 draw line 49 :y 49 *tmp74
 
   525 draw line 49 *tmp74 56 *tmp74
   526 jump *label383 always
   527 label *label376
-    * jump *label378 notEqual *tmp19 7
   528 label *label377
   529 op add *tmp89 :y 12
   530 draw line 55 :y 55 *tmp89
   531 draw line 49 *tmp89 55 *tmp89
   532 jump *label383 always
   533 label *label378
-    * jump *label380 notEqual *tmp19 8
   534 label *label379
   535 op sub *tmp97 :y 1
   536 draw lineRect 48 *tmp97 9 14
 
   538 draw line 49 *tmp98 56 *tmp98
   539 jump *label383 always
   540 label *label380
-    * jump *label382 notEqual *tmp19 9
   541 label *label381
   542 draw line 49 :y 56 :y
   543 op add *tmp104 :y 12
 
   547 draw line 49 *tmp105 49 *tmp104
   548 draw line 49 *tmp104 56 *tmp104
   549 label *label382
+  550 label *label554
   551 label *label383
   552 label *label384
   553 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   559 label *label388
   560 op mod *tmp19 :displayItem:amount 10
   561 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label390 notEqual *tmp19 0
+  562 multijump *label568 *tmp19 0 (m:*label567)
+  563 multilabel *label568 (m:*label567)
+  564 jump *label389 always
+  565 multilabel *label569 (m:*label567)
+  566 jump *label391 always
+  567 multilabel *label570 (m:*label567)
+  568 jump *label393 always
+  569 multilabel *label571 (m:*label567)
+  570 jump *label395 always
+  571 multilabel *label572 (m:*label567)
+  572 jump *label397 always
+  573 multilabel *label573 (m:*label567)
+  574 jump *label399 always
+  575 multilabel *label574 (m:*label567)
+  576 jump *label401 always
+  577 multilabel *label575 (m:*label567)
+  578 jump *label403 always
+  579 multilabel *label576 (m:*label567)
+  580 jump *label405 always
+  581 multilabel *label577 (m:*label567)
+  582 jump *label407 always
   583 label *label389
   584 op sub *tmp26 :y 1
   585 draw lineRect 37 *tmp26 9 14
   586 jump *label409 always
   587 label *label390
-    * jump *label392 notEqual *tmp19 1
   588 label *label391
   589 op add *tmp31 :y 12
   590 draw line 44 :y 44 *tmp31
   591 jump *label409 always
   592 label *label392
-    * jump *label394 notEqual *tmp19 2
   593 label *label393
   594 draw line 38 :y 45 :y
   595 op add *tmp33 :y 6
 
   600 draw line 38 *tmp40 45 *tmp40
   601 jump *label409 always
   602 label *label394
-    * jump *label396 notEqual *tmp19 3
   603 label *label395
   604 op add *tmp46 :y 12
   605 draw line 45 :y 45 *tmp46
 
   609 draw line 38 *tmp46 45 *tmp46
   610 jump *label409 always
   611 label *label396
-    * jump *label398 notEqual *tmp19 4
   612 label *label397
   613 op add *tmp56 :y 12
   614 draw line 45 :y 45 *tmp56
 
   617 draw line 38 *tmp57 38 *tmp56
   618 jump *label409 always
   619 label *label398
-    * jump *label400 notEqual *tmp19 5
   620 label *label399
   621 draw line 38 :y 45 :y
   622 op add *tmp65 :y 6
 
   627 draw line 38 *tmp70 45 *tmp70
   628 jump *label409 always
   629 label *label400
-    * jump *label402 notEqual *tmp19 6
   630 label *label401
   631 op add *tmp74 :y 12
   632 draw line 38 :y 38 *tmp74
 
   637 draw line 38 *tmp74 45 *tmp74
   638 jump *label409 always
   639 label *label402
-    * jump *label404 notEqual *tmp19 7
   640 label *label403
   641 op add *tmp89 :y 12
   642 draw line 44 :y 44 *tmp89
   643 draw line 38 *tmp89 44 *tmp89
   644 jump *label409 always
   645 label *label404
-    * jump *label406 notEqual *tmp19 8
   646 label *label405
   647 op sub *tmp97 :y 1
   648 draw lineRect 37 *tmp97 9 14
 
   650 draw line 38 *tmp98 45 *tmp98
   651 jump *label409 always
   652 label *label406
-    * jump *label408 notEqual *tmp19 9
   653 label *label407
   654 draw line 38 :y 45 :y
   655 op add *tmp104 :y 12
 
   659 draw line 38 *tmp105 38 *tmp104
   660 draw line 38 *tmp104 45 *tmp104
   661 label *label408
+  662 label *label566
   663 label *label409
   664 label *label410
   665 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   695 label *label421
   696 op mod *tmp19 :displayItem:amount 10
   697 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label423 notEqual *tmp19 0
+  698 multijump *label580 *tmp19 0 (m:*label579)
+  699 multilabel *label580 (m:*label579)
+  700 jump *label422 always
+  701 multilabel *label581 (m:*label579)
+  702 jump *label424 always
+  703 multilabel *label582 (m:*label579)
+  704 jump *label426 always
+  705 multilabel *label583 (m:*label579)
+  706 jump *label428 always
+  707 multilabel *label584 (m:*label579)
+  708 jump *label430 always
+  709 multilabel *label585 (m:*label579)
+  710 jump *label432 always
+  711 multilabel *label586 (m:*label579)
+  712 jump *label434 always
+  713 multilabel *label587 (m:*label579)
+  714 jump *label436 always
+  715 multilabel *label588 (m:*label579)
+  716 jump *label438 always
+  717 multilabel *label589 (m:*label579)
+  718 jump *label440 always
   719 label *label422
   720 op sub *tmp26 :y 1
   721 draw lineRect 156 *tmp26 9 14
   722 jump *label442 always
   723 label *label423
-    * jump *label425 notEqual *tmp19 1
   724 label *label424
   725 op add *tmp31 :y 12
   726 draw line 163 :y 163 *tmp31
   727 jump *label442 always
   728 label *label425
-    * jump *label427 notEqual *tmp19 2
   729 label *label426
   730 draw line 157 :y 164 :y
   731 op add *tmp33 :y 6
 
   736 draw line 157 *tmp40 164 *tmp40
   737 jump *label442 always
   738 label *label427
-    * jump *label429 notEqual *tmp19 3
   739 label *label428
   740 op add *tmp46 :y 12
   741 draw line 164 :y 164 *tmp46
 
   745 draw line 157 *tmp46 164 *tmp46
   746 jump *label442 always
   747 label *label429
-    * jump *label431 notEqual *tmp19 4
   748 label *label430
   749 op add *tmp56 :y 12
   750 draw line 164 :y 164 *tmp56
 
   753 draw line 157 *tmp57 157 *tmp56
   754 jump *label442 always
   755 label *label431
-    * jump *label433 notEqual *tmp19 5
   756 label *label432
   757 draw line 157 :y 164 :y
   758 op add *tmp65 :y 6
 
   763 draw line 157 *tmp70 164 *tmp70
   764 jump *label442 always
   765 label *label433
-    * jump *label435 notEqual *tmp19 6
   766 label *label434
   767 op add *tmp74 :y 12
   768 draw line 157 :y 157 *tmp74
 
   773 draw line 157 *tmp74 164 *tmp74
   774 jump *label442 always
   775 label *label435
-    * jump *label437 notEqual *tmp19 7
   776 label *label436
   777 op add *tmp89 :y 12
   778 draw line 163 :y 163 *tmp89
   779 draw line 157 *tmp89 163 *tmp89
   780 jump *label442 always
   781 label *label437
-    * jump *label439 notEqual *tmp19 8
   782 label *label438
   783 op sub *tmp97 :y 1
   784 draw lineRect 156 *tmp97 9 14
 
   786 draw line 157 *tmp98 164 *tmp98
   787 jump *label442 always
   788 label *label439
-    * jump *label441 notEqual *tmp19 9
   789 label *label440
   790 draw line 157 :y 164 :y
   791 op add *tmp104 :y 12
 
   795 draw line 157 *tmp105 157 *tmp104
   796 draw line 157 *tmp104 164 *tmp104
   797 label *label441
+  798 label *label578
   799 label *label442
   800 label *label443
   801 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   807 label *label447
   808 op mod *tmp19 :displayItem:amount 10
   809 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label449 notEqual *tmp19 0
+  810 multijump *label592 *tmp19 0 (m:*label591)
+  811 multilabel *label592 (m:*label591)
+  812 jump *label448 always
+  813 multilabel *label593 (m:*label591)
+  814 jump *label450 always
+  815 multilabel *label594 (m:*label591)
+  816 jump *label452 always
+  817 multilabel *label595 (m:*label591)
+  818 jump *label454 always
+  819 multilabel *label596 (m:*label591)
+  820 jump *label456 always
+  821 multilabel *label597 (m:*label591)
+  822 jump *label458 always
+  823 multilabel *label598 (m:*label591)
+  824 jump *label460 always
+  825 multilabel *label599 (m:*label591)
+  826 jump *label462 always
+  827 multilabel *label600 (m:*label591)
+  828 jump *label464 always
+  829 multilabel *label601 (m:*label591)
+  830 jump *label466 always
   831 label *label448
   832 op sub *tmp26 :y 1
   833 draw lineRect 145 *tmp26 9 14
   834 jump *label468 always
   835 label *label449
-    * jump *label451 notEqual *tmp19 1
   836 label *label450
   837 op add *tmp31 :y 12
   838 draw line 152 :y 152 *tmp31
   839 jump *label468 always
   840 label *label451
-    * jump *label453 notEqual *tmp19 2
   841 label *label452
   842 draw line 146 :y 153 :y
   843 op add *tmp33 :y 6
 
   848 draw line 146 *tmp40 153 *tmp40
   849 jump *label468 always
   850 label *label453
-    * jump *label455 notEqual *tmp19 3
   851 label *label454
   852 op add *tmp46 :y 12
   853 draw line 153 :y 153 *tmp46
 
   857 draw line 146 *tmp46 153 *tmp46
   858 jump *label468 always
   859 label *label455
-    * jump *label457 notEqual *tmp19 4
   860 label *label456
   861 op add *tmp56 :y 12
   862 draw line 153 :y 153 *tmp56
 
   865 draw line 146 *tmp57 146 *tmp56
   866 jump *label468 always
   867 label *label457
-    * jump *label459 notEqual *tmp19 5
   868 label *label458
   869 draw line 146 :y 153 :y
   870 op add *tmp65 :y 6
 
   875 draw line 146 *tmp70 153 *tmp70
   876 jump *label468 always
   877 label *label459
-    * jump *label461 notEqual *tmp19 6
   878 label *label460
   879 op add *tmp74 :y 12
   880 draw line 146 :y 146 *tmp74
 
   885 draw line 146 *tmp74 153 *tmp74
   886 jump *label468 always
   887 label *label461
-    * jump *label463 notEqual *tmp19 7
   888 label *label462
   889 op add *tmp89 :y 12
   890 draw line 152 :y 152 *tmp89
   891 draw line 146 *tmp89 152 *tmp89
   892 jump *label468 always
   893 label *label463
-    * jump *label465 notEqual *tmp19 8
   894 label *label464
   895 op sub *tmp97 :y 1
   896 draw lineRect 145 *tmp97 9 14
 
   898 draw line 146 *tmp98 153 *tmp98
   899 jump *label468 always
   900 label *label465
-    * jump *label467 notEqual *tmp19 9
   901 label *label466
   902 draw line 146 :y 153 :y
   903 op add *tmp104 :y 12
 
   907 draw line 146 *tmp105 146 *tmp104
   908 draw line 146 *tmp104 153 *tmp104
   909 label *label467
+  910 label *label590
   911 label *label468
   912 label *label469
   913 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   919 label *label473
   920 op mod *tmp19 :displayItem:amount 10
   921 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label475 notEqual *tmp19 0
+  922 multijump *label604 *tmp19 0 (m:*label603)
+  923 multilabel *label604 (m:*label603)
+  924 jump *label474 always
+  925 multilabel *label605 (m:*label603)
+  926 jump *label476 always
+  927 multilabel *label606 (m:*label603)
+  928 jump *label478 always
+  929 multilabel *label607 (m:*label603)
+  930 jump *label480 always
+  931 multilabel *label608 (m:*label603)
+  932 jump *label482 always
+  933 multilabel *label609 (m:*label603)
+  934 jump *label484 always
+  935 multilabel *label610 (m:*label603)
+  936 jump *label486 always
+  937 multilabel *label611 (m:*label603)
+  938 jump *label488 always
+  939 multilabel *label612 (m:*label603)
+  940 jump *label490 always
+  941 multilabel *label613 (m:*label603)
+  942 jump *label492 always
   943 label *label474
   944 op sub *tmp26 :y 1
   945 draw lineRect 134 *tmp26 9 14
   946 jump *label494 always
   947 label *label475
-    * jump *label477 notEqual *tmp19 1
   948 label *label476
   949 op add *tmp31 :y 12
   950 draw line 141 :y 141 *tmp31
   951 jump *label494 always
   952 label *label477
-    * jump *label479 notEqual *tmp19 2
   953 label *label478
   954 draw line 135 :y 142 :y
   955 op add *tmp33 :y 6
 
   960 draw line 135 *tmp40 142 *tmp40
   961 jump *label494 always
   962 label *label479
-    * jump *label481 notEqual *tmp19 3
   963 label *label480
   964 op add *tmp46 :y 12
   965 draw line 142 :y 142 *tmp46
 
   969 draw line 135 *tmp46 142 *tmp46
   970 jump *label494 always
   971 label *label481
-    * jump *label483 notEqual *tmp19 4
   972 label *label482
   973 op add *tmp56 :y 12
   974 draw line 142 :y 142 *tmp56
 
   977 draw line 135 *tmp57 135 *tmp56
   978 jump *label494 always
   979 label *label483
-    * jump *label485 notEqual *tmp19 5
   980 label *label484
   981 draw line 135 :y 142 :y
   982 op add *tmp65 :y 6
 
   987 draw line 135 *tmp70 142 *tmp70
   988 jump *label494 always
   989 label *label485
-    * jump *label487 notEqual *tmp19 6
   990 label *label486
   991 op add *tmp74 :y 12
   992 draw line 135 :y 135 *tmp74
 
   997 draw line 135 *tmp74 142 *tmp74
   998 jump *label494 always
   999 label *label487
-    * jump *label489 notEqual *tmp19 7
  1000 label *label488
  1001 op add *tmp89 :y 12
  1002 draw line 141 :y 141 *tmp89
  1003 draw line 135 *tmp89 141 *tmp89
  1004 jump *label494 always
  1005 label *label489
-    * jump *label491 notEqual *tmp19 8
  1006 label *label490
  1007 op sub *tmp97 :y 1
  1008 draw lineRect 134 *tmp97 9 14
 
  1010 draw line 135 *tmp98 142 *tmp98
  1011 jump *label494 always
  1012 label *label491
-    * jump *label493 notEqual *tmp19 9
  1013 label *label492
  1014 draw line 135 :y 142 :y
  1015 op add *tmp104 :y 12
 
  1019 draw line 135 *tmp105 135 *tmp104
  1020 draw line 135 *tmp104 142 *tmp104
  1021 label *label493
+ 1022 label *label602
  1023 label *label494
  1024 label *label495
  1025 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
  1031 label *label499
  1032 op mod *tmp19 :displayItem:amount 10
  1033 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label501 notEqual *tmp19 0
+ 1034 multijump *label616 *tmp19 0 (m:*label615)
+ 1035 multilabel *label616 (m:*label615)
+ 1036 jump *label500 always
+ 1037 multilabel *label617 (m:*label615)
+ 1038 jump *label502 always
+ 1039 multilabel *label618 (m:*label615)
+ 1040 jump *label504 always
+ 1041 multilabel *label619 (m:*label615)
+ 1042 jump *label506 always
+ 1043 multilabel *label620 (m:*label615)
+ 1044 jump *label508 always
+ 1045 multilabel *label621 (m:*label615)
+ 1046 jump *label510 always
+ 1047 multilabel *label622 (m:*label615)
+ 1048 jump *label512 always
+ 1049 multilabel *label623 (m:*label615)
+ 1050 jump *label514 always
+ 1051 multilabel *label624 (m:*label615)
+ 1052 jump *label516 always
+ 1053 multilabel *label625 (m:*label615)
+ 1054 jump *label518 always
  1055 label *label500
  1056 op sub *tmp26 :y 1
  1057 draw lineRect 123 *tmp26 9 14
  1058 jump *label520 always
  1059 label *label501
-    * jump *label503 notEqual *tmp19 1
  1060 label *label502
  1061 op add *tmp31 :y 12
  1062 draw line 130 :y 130 *tmp31
  1063 jump *label520 always
  1064 label *label503
-    * jump *label505 notEqual *tmp19 2
  1065 label *label504
  1066 draw line 124 :y 131 :y
  1067 op add *tmp33 :y 6
 
  1072 draw line 124 *tmp40 131 *tmp40
  1073 jump *label520 always
  1074 label *label505
-    * jump *label507 notEqual *tmp19 3
  1075 label *label506
  1076 op add *tmp46 :y 12
  1077 draw line 131 :y 131 *tmp46
 
  1081 draw line 124 *tmp46 131 *tmp46
  1082 jump *label520 always
  1083 label *label507
-    * jump *label509 notEqual *tmp19 4
  1084 label *label508
  1085 op add *tmp56 :y 12
  1086 draw line 131 :y 131 *tmp56
 
  1089 draw line 124 *tmp57 124 *tmp56
  1090 jump *label520 always
  1091 label *label509
-    * jump *label511 notEqual *tmp19 5
  1092 label *label510
  1093 draw line 124 :y 131 :y
  1094 op add *tmp65 :y 6
 
  1099 draw line 124 *tmp70 131 *tmp70
  1100 jump *label520 always
  1101 label *label511
-    * jump *label513 notEqual *tmp19 6
  1102 label *label512
  1103 op add *tmp74 :y 12
  1104 draw line 124 :y 124 *tmp74
 
  1109 draw line 124 *tmp74 131 *tmp74
  1110 jump *label520 always
  1111 label *label513
-    * jump *label515 notEqual *tmp19 7
  1112 label *label514
  1113 op add *tmp89 :y 12
  1114 draw line 130 :y 130 *tmp89
  1115 draw line 124 *tmp89 130 *tmp89
  1116 jump *label520 always
  1117 label *label515
-    * jump *label517 notEqual *tmp19 8
  1118 label *label516
  1119 op sub *tmp97 :y 1
  1120 draw lineRect 123 *tmp97 9 14
 
  1122 draw line 124 *tmp98 131 *tmp98
  1123 jump *label520 always
  1124 label *label517
-    * jump *label519 notEqual *tmp19 9
  1125 label *label518
  1126 draw line 124 :y 131 :y
  1127 op add *tmp104 :y 12
 
  1131 draw line 124 *tmp105 124 *tmp104
  1132 draw line 124 *tmp104 131 *tmp104
  1133 label *label519
+ 1134 label *label614
  1135 label *label520
  1136 label *label521
  1137 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
     2 label *label202
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
-    * jump *label203 equal true false
     5 draw rect 0 0 23 176
     6 jump *label204 always
     7 label *label203
 
    11 label *label206
    12 # "Function: def eraseImages(in first_column)"
    13 draw color 0 0 80 255
-    * jump *label207 equal false false
+   14 jump *label207 always
    15 draw rect 0 0 23 176
    16 jump *label208 always
    17 label *label207
 
    21 draw color 255 255 255 255
    22 label *label210
    23 draw image 15 159 @sand 16 0
-    * jump *label211 notEqual 1 8
+   24 jump *label211 always
    25 draw color 255 255 255 255
    26 label *label211
    27 label *label212
    28 label *label213
    29 label *label216
    30 draw image 15 139 @copper 16 0
-    * jump *label217 notEqual 2 8
+   31 jump *label217 always
    32 draw color 255 255 255 255
    33 label *label217
    34 label *label218
    35 label *label219
    36 label *label222
    37 draw image 15 119 @lead 16 0
-    * jump *label223 notEqual 3 8
+   38 jump *label223 always
    39 draw color 255 255 255 255
    40 label *label223
    41 label *label224
    42 label *label225
    43 label *label228
    44 draw image 15 99 @coal 16 0
-    * jump *label229 notEqual 4 8
+   45 jump *label229 always
    46 draw color 255 255 255 255
    47 label *label229
    48 label *label230
    49 label *label231
    50 label *label234
    51 draw image 15 79 @titanium 16 0
-    * jump *label235 notEqual 5 8
+   52 jump *label235 always
    53 draw color 255 255 255 255
    54 label *label235
    55 label *label236
    56 label *label237
    57 label *label240
    58 draw image 15 59 @thorium 16 0
-    * jump *label241 notEqual 6 8
+   59 jump *label241 always
    60 draw color 255 255 255 255
    61 label *label241
    62 label *label242
    63 label *label243
    64 label *label246
    65 draw image 15 39 @scrap 16 0
-    * jump *label247 notEqual 7 8
+   66 jump *label247 always
    67 draw color 255 255 255 255
    68 label *label247
    69 label *label248
    70 label *label249
    71 label *label252
    72 draw image 15 19 @graphite 16 0
-    * jump *label253 notEqual 8 8
    73 draw color 255 255 255 255
    74 label *label253
    75 label *label254
    76 label *label255
    77 label *label258
    78 draw image 101 159 @metaglass 16 0
-    * jump *label259 notEqual 9 8
+   79 jump *label259 always
    80 draw color 255 255 255 255
    81 label *label259
    82 label *label260
    83 label *label261
    84 label *label264
    85 draw image 101 139 @silicon 16 0
-    * jump *label265 notEqual 10 8
+   86 jump *label265 always
    87 draw color 255 255 255 255
    88 label *label265
    89 label *label266
    90 label *label267
    91 label *label270
    92 draw image 101 119 @pyratite 16 0
-    * jump *label271 notEqual 11 8
+   93 jump *label271 always
    94 draw color 255 255 255 255
    95 label *label271
    96 label *label272
    97 label *label273
    98 label *label276
    99 draw image 101 99 @blast-compound 16 0
-    * jump *label277 notEqual 12 8
+  100 jump *label277 always
   101 draw color 255 255 255 255
   102 label *label277
   103 label *label278
   104 label *label279
   105 label *label282
   106 draw image 101 79 @plastanium 16 0
-    * jump *label283 notEqual 13 8
+  107 jump *label283 always
   108 draw color 255 255 255 255
   109 label *label283
   110 label *label284
   111 label *label285
   112 label *label288
   113 draw image 101 59 @phase-fabric 16 0
-    * jump *label289 notEqual 14 8
+  114 jump *label289 always
   115 draw color 255 255 255 255
   116 label *label289
   117 label *label290
   118 label *label291
   119 label *label294
   120 draw image 101 39 @surge-alloy 16 0
-    * jump *label295 notEqual 15 8
+  121 jump *label295 always
   122 draw color 255 255 255 255
   123 label *label295
   124 label *label296
   125 label *label297
   126 label *label300
   127 draw image 101 19 @spore-pod 16 0
-    * jump *label301 notEqual 16 8
+  128 jump *label301 always
   129 draw color 255 255 255 255
   130 label *label301
   131 label *label302
 
   137 label *label194
   138 # "Function: def eraseNumbers(in first_column)"
   139 draw color 0 0 80 255
-    * jump *label195 equal true false
   140 draw rect 23 0 70 176
   141 jump *label196 always
   142 label *label195
 
  1163 label *label198
  1164 # "Function: def eraseNumbers(in first_column)"
  1165 draw color 0 0 80 255
-    * jump *label199 equal false false
+ 1166 jump *label199 always
  1167 draw rect 23 0 70 176
  1168 jump *label200 always
  1169 label *label199

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 set AMOUNT 12345
     1 draw stroke 2
-    * label *label202
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label204 always
-    * label *label203
     6 draw rect 93 0 16 176
     7 label *label204
-    * label *label205
-    * label *label206
     8 # "Function: def eraseImages(in first_column)"
     9 draw color 0 0 80 255
    10 jump *label207 always
 
    13 label *label207
    14 draw rect 93 0 16 176
    15 label *label208
-    * label *label209
    16 draw color 255 255 255 255
-    * label *label210
    17 draw image 15 159 @sand 16 0
    18 jump *label211 always
    19 draw color 255 255 255 255
    20 label *label211
-    * label *label212
-    * label *label213
-    * label *label216
    21 draw image 15 139 @copper 16 0
    22 jump *label217 always
    23 draw color 255 255 255 255
    24 label *label217
-    * label *label218
-    * label *label219
-    * label *label222
    25 draw image 15 119 @lead 16 0
    26 jump *label223 always
    27 draw color 255 255 255 255
    28 label *label223
-    * label *label224
-    * label *label225
-    * label *label228
    29 draw image 15 99 @coal 16 0
    30 jump *label229 always
    31 draw color 255 255 255 255
    32 label *label229
-    * label *label230
-    * label *label231
-    * label *label234
    33 draw image 15 79 @titanium 16 0
    34 jump *label235 always
    35 draw color 255 255 255 255
    36 label *label235
-    * label *label236
-    * label *label237
-    * label *label240
    37 draw image 15 59 @thorium 16 0
    38 jump *label241 always
    39 draw color 255 255 255 255
    40 label *label241
-    * label *label242
-    * label *label243
-    * label *label246
    41 draw image 15 39 @scrap 16 0
    42 jump *label247 always
    43 draw color 255 255 255 255
    44 label *label247
-    * label *label248
-    * label *label249
-    * label *label252
    45 draw image 15 19 @graphite 16 0
    46 draw color 255 255 255 255
-    * label *label253
-    * label *label254
-    * label *label255
-    * label *label258
    47 draw image 101 159 @metaglass 16 0
    48 jump *label259 always
    49 draw color 255 255 255 255
    50 label *label259
-    * label *label260
-    * label *label261
-    * label *label264
    51 draw image 101 139 @silicon 16 0
    52 jump *label265 always
    53 draw color 255 255 255 255
    54 label *label265
-    * label *label266
-    * label *label267
-    * label *label270
    55 draw image 101 119 @pyratite 16 0
    56 jump *label271 always
    57 draw color 255 255 255 255
    58 label *label271
-    * label *label272
-    * label *label273
-    * label *label276
    59 draw image 101 99 @blast-compound 16 0
    60 jump *label277 always
    61 draw color 255 255 255 255
    62 label *label277
-    * label *label278
-    * label *label279
-    * label *label282
    63 draw image 101 79 @plastanium 16 0
    64 jump *label283 always
    65 draw color 255 255 255 255
    66 label *label283
-    * label *label284
-    * label *label285
-    * label *label288
    67 draw image 101 59 @phase-fabric 16 0
    68 jump *label289 always
    69 draw color 255 255 255 255
    70 label *label289
-    * label *label290
-    * label *label291
-    * label *label294
    71 draw image 101 39 @surge-alloy 16 0
    72 jump *label295 always
    73 draw color 255 255 255 255
    74 label *label295
-    * label *label296
-    * label *label297
-    * label *label300
    75 draw image 101 19 @spore-pod 16 0
    76 jump *label301 always
    77 draw color 255 255 255 255
    78 label *label301
-    * label *label302
-    * label *label303
-    * label *label23
-    * label *label5
    79 drawflush display1
    80 set :y 152
-    * label *label194
    81 # "Function: def eraseNumbers(in first_column)"
    82 draw color 0 0 80 255
    83 draw rect 23 0 70 176
    84 jump *label196 always
-    * label *label195
    85 draw rect 109 0 176 176
    86 label *label196
-    * label *label197
    87 set :index 0
    88 set :item @sand
    89 op add *tmp10 @counter 1
 
   153 label *label26
   154 draw image 0 0 :item 16 0
   155 jump *label47 greaterThanEq :index 8
-    * label *label308
   156 # "Function: void displayItem(in x, in y)"
   157 op max :displayItem:amount AMOUNT 0
   158 draw color 0 255 0 255
-    * label *label309
-    * label *label310
   159 op mod *tmp19 :displayItem:amount 10
   160 # "Function: def drawDigit(in x, in y, in digit)"
   161 multijump *label532 *tmp19 0 (m:*label531)
 
   183 op sub *tmp26 :y 1
   184 draw lineRect 70 *tmp26 9 14
   185 jump *label331 always
-    * label *label312
   186 label *label313
   187 op add *tmp31 :y 12
   188 draw line 77 :y 77 *tmp31
   189 jump *label331 always
-    * label *label314
   190 label *label315
   191 draw line 71 :y 78 :y
   192 op add *tmp33 :y 6
 
   196 draw line 78 *tmp33 78 *tmp40
   197 draw line 71 *tmp40 78 *tmp40
   198 jump *label331 always
-    * label *label316
   199 label *label317
   200 op add *tmp46 :y 12
   201 draw line 78 :y 78 *tmp46
 
   204 draw line 71 *tmp48 78 *tmp48
   205 draw line 71 *tmp46 78 *tmp46
   206 jump *label331 always
-    * label *label318
   207 label *label319
   208 op add *tmp56 :y 12
   209 draw line 78 :y 78 *tmp56
 
   211 draw line 71 *tmp57 78 *tmp57
   212 draw line 71 *tmp57 71 *tmp56
   213 jump *label331 always
-    * label *label320
   214 label *label321
   215 draw line 71 :y 78 :y
   216 op add *tmp65 :y 6
 
   220 draw line 71 *tmp65 71 *tmp70
   221 draw line 71 *tmp70 78 *tmp70
   222 jump *label331 always
-    * label *label322
   223 label *label323
   224 op add *tmp74 :y 12
   225 draw line 71 :y 71 *tmp74
 
   229 draw line 71 *tmp78 78 *tmp78
   230 draw line 71 *tmp74 78 *tmp74
   231 jump *label331 always
-    * label *label324
   232 label *label325
   233 op add *tmp89 :y 12
   234 draw line 77 :y 77 *tmp89
   235 draw line 71 *tmp89 77 *tmp89
   236 jump *label331 always
-    * label *label326
   237 label *label327
   238 op sub *tmp97 :y 1
   239 draw lineRect 70 *tmp97 9 14
   240 op add *tmp98 :y 6
   241 draw line 71 *tmp98 78 *tmp98
   242 jump *label331 always
-    * label *label328
   243 label *label329
   244 draw line 71 :y 78 :y
   245 op add *tmp104 :y 12
 
   248 draw line 71 *tmp105 78 *tmp105
   249 draw line 71 *tmp105 71 *tmp104
   250 draw line 71 *tmp104 78 *tmp104
-    * label *label330
-    * label *label530
   251 label *label331
-    * label *label332
   252 op idiv :displayItem:amount :displayItem:amount 10
   253 jump *label333 notEqual :displayItem:amount 0
   254 jump *label418 always
   255 label *label333
-    * label *label334
-    * label *label335
-    * label *label336
   256 op mod *tmp19 :displayItem:amount 10
   257 # "Function: def drawDigit(in x, in y, in digit)"
   258 multijump *label544 *tmp19 0 (m:*label543)
 
   280 op sub *tmp26 :y 1
   281 draw lineRect 59 *tmp26 9 14
   282 jump *label357 always
-    * label *label338
   283 label *label339
   284 op add *tmp31 :y 12
   285 draw line 66 :y 66 *tmp31
   286 jump *label357 always
-    * label *label340
   287 label *label341
   288 draw line 60 :y 67 :y
   289 op add *tmp33 :y 6
 
   293 draw line 67 *tmp33 67 *tmp40
   294 draw line 60 *tmp40 67 *tmp40
   295 jump *label357 always
-    * label *label342
   296 label *label343
   297 op add *tmp46 :y 12
   298 draw line 67 :y 67 *tmp46
 
   301 draw line 60 *tmp48 67 *tmp48
   302 draw line 60 *tmp46 67 *tmp46
   303 jump *label357 always
-    * label *label344
   304 label *label345
   305 op add *tmp56 :y 12
   306 draw line 67 :y 67 *tmp56
 
   308 draw line 60 *tmp57 67 *tmp57
   309 draw line 60 *tmp57 60 *tmp56
   310 jump *label357 always
-    * label *label346
   311 label *label347
   312 draw line 60 :y 67 :y
   313 op add *tmp65 :y 6
 
   317 draw line 60 *tmp65 60 *tmp70
   318 draw line 60 *tmp70 67 *tmp70
   319 jump *label357 always
-    * label *label348
   320 label *label349
   321 op add *tmp74 :y 12
   322 draw line 60 :y 60 *tmp74
 
   326 draw line 60 *tmp78 67 *tmp78
   327 draw line 60 *tmp74 67 *tmp74
   328 jump *label357 always
-    * label *label350
   329 label *label351
   330 op add *tmp89 :y 12
   331 draw line 66 :y 66 *tmp89
   332 draw line 60 *tmp89 66 *tmp89
   333 jump *label357 always
-    * label *label352
   334 label *label353
   335 op sub *tmp97 :y 1
   336 draw lineRect 59 *tmp97 9 14
   337 op add *tmp98 :y 6
   338 draw line 60 *tmp98 67 *tmp98
   339 jump *label357 always
-    * label *label354
   340 label *label355
   341 draw line 60 :y 67 :y
   342 op add *tmp104 :y 12
 
   345 draw line 60 *tmp105 67 *tmp105
   346 draw line 60 *tmp105 60 *tmp104
   347 draw line 60 *tmp104 67 *tmp104
-    * label *label356
-    * label *label542
   348 label *label357
-    * label *label358
   349 op idiv :displayItem:amount :displayItem:amount 10
   350 jump *label359 notEqual :displayItem:amount 0
   351 jump *label418 always
   352 label *label359
-    * label *label360
-    * label *label361
-    * label *label362
   353 op mod *tmp19 :displayItem:amount 10
   354 # "Function: def drawDigit(in x, in y, in digit)"
   355 multijump *label556 *tmp19 0 (m:*label555)
 
   377 op sub *tmp26 :y 1
   378 draw lineRect 48 *tmp26 9 14
   379 jump *label383 always
-    * label *label364
   380 label *label365
   381 op add *tmp31 :y 12
   382 draw line 55 :y 55 *tmp31
   383 jump *label383 always
-    * label *label366
   384 label *label367
   385 draw line 49 :y 56 :y
   386 op add *tmp33 :y 6
 
   390 draw line 56 *tmp33 56 *tmp40
   391 draw line 49 *tmp40 56 *tmp40
   392 jump *label383 always
-    * label *label368
   393 label *label369
   394 op add *tmp46 :y 12
   395 draw line 56 :y 56 *tmp46
 
   398 draw line 49 *tmp48 56 *tmp48
   399 draw line 49 *tmp46 56 *tmp46
   400 jump *label383 always
-    * label *label370
   401 label *label371
   402 op add *tmp56 :y 12
   403 draw line 56 :y 56 *tmp56
 
   405 draw line 49 *tmp57 56 *tmp57
   406 draw line 49 *tmp57 49 *tmp56
   407 jump *label383 always
-    * label *label372
   408 label *label373
   409 draw line 49 :y 56 :y
   410 op add *tmp65 :y 6
 
   414 draw line 49 *tmp65 49 *tmp70
   415 draw line 49 *tmp70 56 *tmp70
   416 jump *label383 always
-    * label *label374
   417 label *label375
   418 op add *tmp74 :y 12
   419 draw line 49 :y 49 *tmp74
 
   423 draw line 49 *tmp78 56 *tmp78
   424 draw line 49 *tmp74 56 *tmp74
   425 jump *label383 always
-    * label *label376
   426 label *label377
   427 op add *tmp89 :y 12
   428 draw line 55 :y 55 *tmp89
   429 draw line 49 *tmp89 55 *tmp89
   430 jump *label383 always
-    * label *label378
   431 label *label379
   432 op sub *tmp97 :y 1
   433 draw lineRect 48 *tmp97 9 14
   434 op add *tmp98 :y 6
   435 draw line 49 *tmp98 56 *tmp98
   436 jump *label383 always
-    * label *label380
   437 label *label381
   438 draw line 49 :y 56 :y
   439 op add *tmp104 :y 12
 
   442 draw line 49 *tmp105 56 *tmp105
   443 draw line 49 *tmp105 49 *tmp104
   444 draw line 49 *tmp104 56 *tmp104
-    * label *label382
-    * label *label554
   445 label *label383
-    * label *label384
   446 op idiv :displayItem:amount :displayItem:amount 10
   447 jump *label385 notEqual :displayItem:amount 0
   448 jump *label418 always
   449 label *label385
-    * label *label386
-    * label *label387
-    * label *label388
   450 op mod *tmp19 :displayItem:amount 10
   451 # "Function: def drawDigit(in x, in y, in digit)"
   452 multijump *label568 *tmp19 0 (m:*label567)
 
   474 op sub *tmp26 :y 1
   475 draw lineRect 37 *tmp26 9 14
   476 jump *label409 always
-    * label *label390
   477 label *label391
   478 op add *tmp31 :y 12
   479 draw line 44 :y 44 *tmp31
   480 jump *label409 always
-    * label *label392
   481 label *label393
   482 draw line 38 :y 45 :y
   483 op add *tmp33 :y 6
 
   487 draw line 45 *tmp33 45 *tmp40
   488 draw line 38 *tmp40 45 *tmp40
   489 jump *label409 always
-    * label *label394
   490 label *label395
   491 op add *tmp46 :y 12
   492 draw line 45 :y 45 *tmp46
 
   495 draw line 38 *tmp48 45 *tmp48
   496 draw line 38 *tmp46 45 *tmp46
   497 jump *label409 always
-    * label *label396
   498 label *label397
   499 op add *tmp56 :y 12
   500 draw line 45 :y 45 *tmp56
 
   502 draw line 38 *tmp57 45 *tmp57
   503 draw line 38 *tmp57 38 *tmp56
   504 jump *label409 always
-    * label *label398
   505 label *label399
   506 draw line 38 :y 45 :y
   507 op add *tmp65 :y 6
 
   511 draw line 38 *tmp65 38 *tmp70
   512 draw line 38 *tmp70 45 *tmp70
   513 jump *label409 always
-    * label *label400
   514 label *label401
   515 op add *tmp74 :y 12
   516 draw line 38 :y 38 *tmp74
 
   520 draw line 38 *tmp78 45 *tmp78
   521 draw line 38 *tmp74 45 *tmp74
   522 jump *label409 always
-    * label *label402
   523 label *label403
   524 op add *tmp89 :y 12
   525 draw line 44 :y 44 *tmp89
   526 draw line 38 *tmp89 44 *tmp89
   527 jump *label409 always
-    * label *label404
   528 label *label405
   529 op sub *tmp97 :y 1
   530 draw lineRect 37 *tmp97 9 14
   531 op add *tmp98 :y 6
   532 draw line 38 *tmp98 45 *tmp98
   533 jump *label409 always
-    * label *label406
   534 label *label407
   535 draw line 38 :y 45 :y
   536 op add *tmp104 :y 12
 
   539 draw line 38 *tmp105 45 *tmp105
   540 draw line 38 *tmp105 38 *tmp104
   541 draw line 38 *tmp104 45 *tmp104
-    * label *label408
-    * label *label566
   542 label *label409
-    * label *label410
   543 op idiv :displayItem:amount :displayItem:amount 10
   544 jump *label411 notEqual :displayItem:amount 0
   545 jump *label418 always
   546 label *label411
-    * label *label412
-    * label *label413
-    * label *label414
   547 # "Function: def drawDigit12(in x, in y, in digit)"
   548 jump *label415 notEqual :displayItem:amount 1
   549 op add *tmp122 :y 12
 
   558 draw line 34 *tmp124 34 *tmp131
   559 draw line 27 *tmp131 34 *tmp131
   560 label *label416
-    * label *label417
   561 label *label418
   562 jump *label48 always
   563 label *label47
-    * label *label419
   564 # "Function: void displayItem(in x, in y)"
   565 op max :displayItem:amount AMOUNT 0
   566 draw color 0 255 0 255
-    * label *label420
-    * label *label421
   567 op mod *tmp19 :displayItem:amount 10
   568 # "Function: def drawDigit(in x, in y, in digit)"
   569 multijump *label580 *tmp19 0 (m:*label579)
 
   591 op sub *tmp26 :y 1
   592 draw lineRect 156 *tmp26 9 14
   593 jump *label442 always
-    * label *label423
   594 label *label424
   595 op add *tmp31 :y 12
   596 draw line 163 :y 163 *tmp31
   597 jump *label442 always
-    * label *label425
   598 label *label426
   599 draw line 157 :y 164 :y
   600 op add *tmp33 :y 6
 
   604 draw line 164 *tmp33 164 *tmp40
   605 draw line 157 *tmp40 164 *tmp40
   606 jump *label442 always
-    * label *label427
   607 label *label428
   608 op add *tmp46 :y 12
   609 draw line 164 :y 164 *tmp46
 
   612 draw line 157 *tmp48 164 *tmp48
   613 draw line 157 *tmp46 164 *tmp46
   614 jump *label442 always
-    * label *label429
   615 label *label430
   616 op add *tmp56 :y 12
   617 draw line 164 :y 164 *tmp56
 
   619 draw line 157 *tmp57 164 *tmp57
   620 draw line 157 *tmp57 157 *tmp56
   621 jump *label442 always
-    * label *label431
   622 label *label432
   623 draw line 157 :y 164 :y
   624 op add *tmp65 :y 6
 
   628 draw line 157 *tmp65 157 *tmp70
   629 draw line 157 *tmp70 164 *tmp70
   630 jump *label442 always
-    * label *label433
   631 label *label434
   632 op add *tmp74 :y 12
   633 draw line 157 :y 157 *tmp74
 
   637 draw line 157 *tmp78 164 *tmp78
   638 draw line 157 *tmp74 164 *tmp74
   639 jump *label442 always
-    * label *label435
   640 label *label436
   641 op add *tmp89 :y 12
   642 draw line 163 :y 163 *tmp89
   643 draw line 157 *tmp89 163 *tmp89
   644 jump *label442 always
-    * label *label437
   645 label *label438
   646 op sub *tmp97 :y 1
   647 draw lineRect 156 *tmp97 9 14
   648 op add *tmp98 :y 6
   649 draw line 157 *tmp98 164 *tmp98
   650 jump *label442 always
-    * label *label439
   651 label *label440
   652 draw line 157 :y 164 :y
   653 op add *tmp104 :y 12
 
   656 draw line 157 *tmp105 164 *tmp105
   657 draw line 157 *tmp105 157 *tmp104
   658 draw line 157 *tmp104 164 *tmp104
-    * label *label441
-    * label *label578
   659 label *label442
-    * label *label443
   660 op idiv :displayItem:amount :displayItem:amount 10
   661 jump *label444 notEqual :displayItem:amount 0
   662 jump *label529 always
   663 label *label444
-    * label *label445
-    * label *label446
-    * label *label447
   664 op mod *tmp19 :displayItem:amount 10
   665 # "Function: def drawDigit(in x, in y, in digit)"
   666 multijump *label592 *tmp19 0 (m:*label591)
 
   688 op sub *tmp26 :y 1
   689 draw lineRect 145 *tmp26 9 14
   690 jump *label468 always
-    * label *label449
   691 label *label450
   692 op add *tmp31 :y 12
   693 draw line 152 :y 152 *tmp31
   694 jump *label468 always
-    * label *label451
   695 label *label452
   696 draw line 146 :y 153 :y
   697 op add *tmp33 :y 6
 
   701 draw line 153 *tmp33 153 *tmp40
   702 draw line 146 *tmp40 153 *tmp40
   703 jump *label468 always
-    * label *label453
   704 label *label454
   705 op add *tmp46 :y 12
   706 draw line 153 :y 153 *tmp46
 
   709 draw line 146 *tmp48 153 *tmp48
   710 draw line 146 *tmp46 153 *tmp46
   711 jump *label468 always
-    * label *label455
   712 label *label456
   713 op add *tmp56 :y 12
   714 draw line 153 :y 153 *tmp56
 
   716 draw line 146 *tmp57 153 *tmp57
   717 draw line 146 *tmp57 146 *tmp56
   718 jump *label468 always
-    * label *label457
   719 label *label458
   720 draw line 146 :y 153 :y
   721 op add *tmp65 :y 6
 
   725 draw line 146 *tmp65 146 *tmp70
   726 draw line 146 *tmp70 153 *tmp70
   727 jump *label468 always
-    * label *label459
   728 label *label460
   729 op add *tmp74 :y 12
   730 draw line 146 :y 146 *tmp74
 
   734 draw line 146 *tmp78 153 *tmp78
   735 draw line 146 *tmp74 153 *tmp74
   736 jump *label468 always
-    * label *label461
   737 label *label462
   738 op add *tmp89 :y 12
   739 draw line 152 :y 152 *tmp89
   740 draw line 146 *tmp89 152 *tmp89
   741 jump *label468 always
-    * label *label463
   742 label *label464
   743 op sub *tmp97 :y 1
   744 draw lineRect 145 *tmp97 9 14
   745 op add *tmp98 :y 6
   746 draw line 146 *tmp98 153 *tmp98
   747 jump *label468 always
-    * label *label465
   748 label *label466
   749 draw line 146 :y 153 :y
   750 op add *tmp104 :y 12
 
   753 draw line 146 *tmp105 153 *tmp105
   754 draw line 146 *tmp105 146 *tmp104
   755 draw line 146 *tmp104 153 *tmp104
-    * label *label467
-    * label *label590
   756 label *label468
-    * label *label469
   757 op idiv :displayItem:amount :displayItem:amount 10
   758 jump *label470 notEqual :displayItem:amount 0
   759 jump *label529 always
   760 label *label470
-    * label *label471
-    * label *label472
-    * label *label473
   761 op mod *tmp19 :displayItem:amount 10
   762 # "Function: def drawDigit(in x, in y, in digit)"
   763 multijump *label604 *tmp19 0 (m:*label603)
 
   785 op sub *tmp26 :y 1
   786 draw lineRect 134 *tmp26 9 14
   787 jump *label494 always
-    * label *label475
   788 label *label476
   789 op add *tmp31 :y 12
   790 draw line 141 :y 141 *tmp31
   791 jump *label494 always
-    * label *label477
   792 label *label478
   793 draw line 135 :y 142 :y
   794 op add *tmp33 :y 6
 
   798 draw line 142 *tmp33 142 *tmp40
   799 draw line 135 *tmp40 142 *tmp40
   800 jump *label494 always
-    * label *label479
   801 label *label480
   802 op add *tmp46 :y 12
   803 draw line 142 :y 142 *tmp46
 
   806 draw line 135 *tmp48 142 *tmp48
   807 draw line 135 *tmp46 142 *tmp46
   808 jump *label494 always
-    * label *label481
   809 label *label482
   810 op add *tmp56 :y 12
   811 draw line 142 :y 142 *tmp56
 
   813 draw line 135 *tmp57 142 *tmp57
   814 draw line 135 *tmp57 135 *tmp56
   815 jump *label494 always
-    * label *label483
   816 label *label484
   817 draw line 135 :y 142 :y
   818 op add *tmp65 :y 6
 
   822 draw line 135 *tmp65 135 *tmp70
   823 draw line 135 *tmp70 142 *tmp70
   824 jump *label494 always
-    * label *label485
   825 label *label486
   826 op add *tmp74 :y 12
   827 draw line 135 :y 135 *tmp74
 
   831 draw line 135 *tmp78 142 *tmp78
   832 draw line 135 *tmp74 142 *tmp74
   833 jump *label494 always
-    * label *label487
   834 label *label488
   835 op add *tmp89 :y 12
   836 draw line 141 :y 141 *tmp89
   837 draw line 135 *tmp89 141 *tmp89
   838 jump *label494 always
-    * label *label489
   839 label *label490
   840 op sub *tmp97 :y 1
   841 draw lineRect 134 *tmp97 9 14
   842 op add *tmp98 :y 6
   843 draw line 135 *tmp98 142 *tmp98
   844 jump *label494 always
-    * label *label491
   845 label *label492
   846 draw line 135 :y 142 :y
   847 op add *tmp104 :y 12
 
   850 draw line 135 *tmp105 142 *tmp105
   851 draw line 135 *tmp105 135 *tmp104
   852 draw line 135 *tmp104 142 *tmp104
-    * label *label493
-    * label *label602
   853 label *label494
-    * label *label495
   854 op idiv :displayItem:amount :displayItem:amount 10
   855 jump *label496 notEqual :displayItem:amount 0
   856 jump *label529 always
   857 label *label496
-    * label *label497
-    * label *label498
-    * label *label499
   858 op mod *tmp19 :displayItem:amount 10
   859 # "Function: def drawDigit(in x, in y, in digit)"
   860 multijump *label616 *tmp19 0 (m:*label615)
 
   882 op sub *tmp26 :y 1
   883 draw lineRect 123 *tmp26 9 14
   884 jump *label520 always
-    * label *label501
   885 label *label502
   886 op add *tmp31 :y 12
   887 draw line 130 :y 130 *tmp31
   888 jump *label520 always
-    * label *label503
   889 label *label504
   890 draw line 124 :y 131 :y
   891 op add *tmp33 :y 6
 
   895 draw line 131 *tmp33 131 *tmp40
   896 draw line 124 *tmp40 131 *tmp40
   897 jump *label520 always
-    * label *label505
   898 label *label506
   899 op add *tmp46 :y 12
   900 draw line 131 :y 131 *tmp46
 
   903 draw line 124 *tmp48 131 *tmp48
   904 draw line 124 *tmp46 131 *tmp46
   905 jump *label520 always
-    * label *label507
   906 label *label508
   907 op add *tmp56 :y 12
   908 draw line 131 :y 131 *tmp56
 
   910 draw line 124 *tmp57 131 *tmp57
   911 draw line 124 *tmp57 124 *tmp56
   912 jump *label520 always
-    * label *label509
   913 label *label510
   914 draw line 124 :y 131 :y
   915 op add *tmp65 :y 6
 
   919 draw line 124 *tmp65 124 *tmp70
   920 draw line 124 *tmp70 131 *tmp70
   921 jump *label520 always
-    * label *label511
   922 label *label512
   923 op add *tmp74 :y 12
   924 draw line 124 :y 124 *tmp74
 
   928 draw line 124 *tmp78 131 *tmp78
   929 draw line 124 *tmp74 131 *tmp74
   930 jump *label520 always
-    * label *label513
   931 label *label514
   932 op add *tmp89 :y 12
   933 draw line 130 :y 130 *tmp89
   934 draw line 124 *tmp89 130 *tmp89
   935 jump *label520 always
-    * label *label515
   936 label *label516
   937 op sub *tmp97 :y 1
   938 draw lineRect 123 *tmp97 9 14
   939 op add *tmp98 :y 6
   940 draw line 124 *tmp98 131 *tmp98
   941 jump *label520 always
-    * label *label517
   942 label *label518
   943 draw line 124 :y 131 :y
   944 op add *tmp104 :y 12
 
   947 draw line 124 *tmp105 131 *tmp105
   948 draw line 124 *tmp105 124 *tmp104
   949 draw line 124 *tmp104 131 *tmp104
-    * label *label519
-    * label *label614
   950 label *label520
-    * label *label521
   951 op idiv :displayItem:amount :displayItem:amount 10
   952 jump *label522 notEqual :displayItem:amount 0
   953 jump *label529 always
   954 label *label522
-    * label *label523
-    * label *label524
-    * label *label525
   955 # "Function: def drawDigit12(in x, in y, in digit)"
   956 jump *label526 notEqual :displayItem:amount 1
   957 op add *tmp122 :y 12
 
   966 draw line 120 *tmp124 120 *tmp131
   967 draw line 113 *tmp131 120 *tmp131
   968 label *label527
-    * label *label528
   969 label *label529
   970 label *label48
   971 op add :index :index 1
 
   973 jump *label49 notEqual :index 8
   974 drawflush display1
   975 set :y 152
-    * label *label198
   976 # "Function: def eraseNumbers(in first_column)"
   977 draw color 0 0 80 255
   978 jump *label199 always
 
   981 label *label199
   982 draw rect 109 0 176 176
   983 label *label200
-    * label *label201
   984 label *label49
-    * label *label50
-    * label *label27
   985 multijump *tmp10 0 0 (m:marker1)
   986 multilabel *label44 (m:marker1)
   987 label *label46
-    * label *label28
   988 drawflush display1
   989 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   250 draw line 71 *tmp104 78 *tmp104
   251 label *label331
   252 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label333 notEqual :displayItem:amount 0
-    * jump *label418 always
+  253 jump *label418 equal :displayItem:amount 0
   254 label *label333
   255 op mod *tmp19 :displayItem:amount 10
   256 # "Function: def drawDigit(in x, in y, in digit)"
 
   346 draw line 60 *tmp104 67 *tmp104
   347 label *label357
   348 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label359 notEqual :displayItem:amount 0
-    * jump *label418 always
+  349 jump *label418 equal :displayItem:amount 0
   350 label *label359
   351 op mod *tmp19 :displayItem:amount 10
   352 # "Function: def drawDigit(in x, in y, in digit)"
 
   442 draw line 49 *tmp104 56 *tmp104
   443 label *label383
   444 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label385 notEqual :displayItem:amount 0
-    * jump *label418 always
+  445 jump *label418 equal :displayItem:amount 0
   446 label *label385
   447 op mod *tmp19 :displayItem:amount 10
   448 # "Function: def drawDigit(in x, in y, in digit)"
 
   538 draw line 38 *tmp104 45 *tmp104
   539 label *label409
   540 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label411 notEqual :displayItem:amount 0
-    * jump *label418 always
+  541 jump *label418 equal :displayItem:amount 0
   542 label *label411
   543 # "Function: def drawDigit12(in x, in y, in digit)"
   544 jump *label415 notEqual :displayItem:amount 1
 
   654 draw line 157 *tmp104 164 *tmp104
   655 label *label442
   656 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label444 notEqual :displayItem:amount 0
-    * jump *label529 always
+  657 jump *label529 equal :displayItem:amount 0
   658 label *label444
   659 op mod *tmp19 :displayItem:amount 10
   660 # "Function: def drawDigit(in x, in y, in digit)"
 
   750 draw line 146 *tmp104 153 *tmp104
   751 label *label468
   752 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label470 notEqual :displayItem:amount 0
-    * jump *label529 always
+  753 jump *label529 equal :displayItem:amount 0
   754 label *label470
   755 op mod *tmp19 :displayItem:amount 10
   756 # "Function: def drawDigit(in x, in y, in digit)"
 
   846 draw line 135 *tmp104 142 *tmp104
   847 label *label494
   848 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label496 notEqual :displayItem:amount 0
-    * jump *label529 always
+  849 jump *label529 equal :displayItem:amount 0
   850 label *label496
   851 op mod *tmp19 :displayItem:amount 10
   852 # "Function: def drawDigit(in x, in y, in digit)"
 
   942 draw line 124 *tmp104 131 *tmp104
   943 label *label520
   944 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label522 notEqual :displayItem:amount 0
-    * jump *label529 always
+  945 jump *label529 equal :displayItem:amount 0
   946 label *label522
   947 # "Function: def drawDigit12(in x, in y, in digit)"
   948 jump *label526 notEqual :displayItem:amount 1

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   251 label *label331
   252 op idiv :displayItem:amount :displayItem:amount 10
   253 jump *label418 equal :displayItem:amount 0
-    * label *label333
   254 op mod *tmp19 :displayItem:amount 10
   255 # "Function: def drawDigit(in x, in y, in digit)"
   256 multijump *label544 *tmp19 0 (m:*label543)
 
   346 label *label357
   347 op idiv :displayItem:amount :displayItem:amount 10
   348 jump *label418 equal :displayItem:amount 0
-    * label *label359
   349 op mod *tmp19 :displayItem:amount 10
   350 # "Function: def drawDigit(in x, in y, in digit)"
   351 multijump *label556 *tmp19 0 (m:*label555)
 
   441 label *label383
   442 op idiv :displayItem:amount :displayItem:amount 10
   443 jump *label418 equal :displayItem:amount 0
-    * label *label385
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
   446 multijump *label568 *tmp19 0 (m:*label567)
 
   536 label *label409
   537 op idiv :displayItem:amount :displayItem:amount 10
   538 jump *label418 equal :displayItem:amount 0
-    * label *label411
   539 # "Function: def drawDigit12(in x, in y, in digit)"
   540 jump *label415 notEqual :displayItem:amount 1
   541 op add *tmp122 :y 12
 
   651 label *label442
   652 op idiv :displayItem:amount :displayItem:amount 10
   653 jump *label529 equal :displayItem:amount 0
-    * label *label444
   654 op mod *tmp19 :displayItem:amount 10
   655 # "Function: def drawDigit(in x, in y, in digit)"
   656 multijump *label592 *tmp19 0 (m:*label591)
 
   746 label *label468
   747 op idiv :displayItem:amount :displayItem:amount 10
   748 jump *label529 equal :displayItem:amount 0
-    * label *label470
   749 op mod *tmp19 :displayItem:amount 10
   750 # "Function: def drawDigit(in x, in y, in digit)"
   751 multijump *label604 *tmp19 0 (m:*label603)
 
   841 label *label494
   842 op idiv :displayItem:amount :displayItem:amount 10
   843 jump *label529 equal :displayItem:amount 0
-    * label *label496
   844 op mod *tmp19 :displayItem:amount 10
   845 # "Function: def drawDigit(in x, in y, in digit)"
   846 multijump *label616 *tmp19 0 (m:*label615)
 
   936 label *label520
   937 op idiv :displayItem:amount :displayItem:amount 10
   938 jump *label529 equal :displayItem:amount 0
-    * label *label522
   939 # "Function: def drawDigit12(in x, in y, in digit)"
   940 jump *label526 notEqual :displayItem:amount 1
   941 op add *tmp122 :y 12

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   250 draw line 71 *tmp104 78 *tmp104
   251 label *label331
   252 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label418 equal :displayItem:amount 0
+  253 jump *label48 equal :displayItem:amount 0
   254 op mod *tmp19 :displayItem:amount 10
   255 # "Function: def drawDigit(in x, in y, in digit)"
   256 multijump *label544 *tmp19 0 (m:*label543)
 
   345 draw line 60 *tmp104 67 *tmp104
   346 label *label357
   347 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label418 equal :displayItem:amount 0
+  348 jump *label48 equal :displayItem:amount 0
   349 op mod *tmp19 :displayItem:amount 10
   350 # "Function: def drawDigit(in x, in y, in digit)"
   351 multijump *label556 *tmp19 0 (m:*label555)
 
   440 draw line 49 *tmp104 56 *tmp104
   441 label *label383
   442 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label418 equal :displayItem:amount 0
+  443 jump *label48 equal :displayItem:amount 0
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
   446 multijump *label568 *tmp19 0 (m:*label567)
 
   535 draw line 38 *tmp104 45 *tmp104
   536 label *label409
   537 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label418 equal :displayItem:amount 0
+  538 jump *label48 equal :displayItem:amount 0
   539 # "Function: def drawDigit12(in x, in y, in digit)"
   540 jump *label415 notEqual :displayItem:amount 1
   541 op add *tmp122 :y 12
   542 draw line 33 :y 33 *tmp122
-    * jump *label416 always
+  543 jump *label48 always
   544 label *label415
   545 draw line 27 :y 34 :y
   546 op add *tmp124 :y 6

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-21 instructions):
 
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label204 always
-    * draw rect 93 0 16 176
     6 label *label204
     7 # "Function: def eraseImages(in first_column)"
     8 draw color 0 0 80 255
     9 jump *label207 always
-    * draw rect 0 0 23 176
-    * jump *label208 always
    10 label *label207
    11 draw rect 93 0 16 176
    12 label *label208
    13 draw color 255 255 255 255
    14 draw image 15 159 @sand 16 0
    15 jump *label211 always
-    * draw color 255 255 255 255
    16 label *label211
    17 draw image 15 139 @copper 16 0
    18 jump *label217 always
-    * draw color 255 255 255 255
    19 label *label217
    20 draw image 15 119 @lead 16 0
    21 jump *label223 always
-    * draw color 255 255 255 255
    22 label *label223
    23 draw image 15 99 @coal 16 0
    24 jump *label229 always
-    * draw color 255 255 255 255
    25 label *label229
    26 draw image 15 79 @titanium 16 0
    27 jump *label235 always
-    * draw color 255 255 255 255
    28 label *label235
    29 draw image 15 59 @thorium 16 0
    30 jump *label241 always
-    * draw color 255 255 255 255
    31 label *label241
    32 draw image 15 39 @scrap 16 0
    33 jump *label247 always
-    * draw color 255 255 255 255
    34 label *label247
    35 draw image 15 19 @graphite 16 0
    36 draw color 255 255 255 255
    37 draw image 101 159 @metaglass 16 0
    38 jump *label259 always
-    * draw color 255 255 255 255
    39 label *label259
    40 draw image 101 139 @silicon 16 0
    41 jump *label265 always
-    * draw color 255 255 255 255
    42 label *label265
    43 draw image 101 119 @pyratite 16 0
    44 jump *label271 always
-    * draw color 255 255 255 255
    45 label *label271
    46 draw image 101 99 @blast-compound 16 0
    47 jump *label277 always
-    * draw color 255 255 255 255
    48 label *label277
    49 draw image 101 79 @plastanium 16 0
    50 jump *label283 always
-    * draw color 255 255 255 255
    51 label *label283
    52 draw image 101 59 @phase-fabric 16 0
    53 jump *label289 always
-    * draw color 255 255 255 255
    54 label *label289
    55 draw image 101 39 @surge-alloy 16 0
    56 jump *label295 always
-    * draw color 255 255 255 255
    57 label *label295
    58 draw image 101 19 @spore-pod 16 0
    59 jump *label301 always
-    * draw color 255 255 255 255
    60 label *label301
    61 drawflush display1
    62 set :y 152
 
    64 draw color 0 0 80 255
    65 draw rect 23 0 70 176
    66 jump *label196 always
-    * draw rect 109 0 176 176
    67 label *label196
    68 set :index 0
    69 set :item @sand
 
   530 op add *tmp131 :y 12
   531 draw line 34 *tmp124 34 *tmp131
   532 draw line 27 *tmp131 34 *tmp131
-    * label *label416
-    * label *label418
   533 jump *label48 always
   534 label *label47
   535 # "Function: void displayItem(in x, in y)"
 
   939 # "Function: def eraseNumbers(in first_column)"
   940 draw color 0 0 80 255
   941 jump *label199 always
-    * draw rect 23 0 70 176
-    * jump *label200 always
   942 label *label199
   943 draw rect 109 0 176 176
   944 label *label200

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
     9 jump *label207 always
    10 label *label207
    11 draw rect 93 0 16 176
-    * label *label208
    12 draw color 255 255 255 255
    13 draw image 15 159 @sand 16 0
    14 jump *label211 always
 
   940 jump *label199 always
   941 label *label199
   942 draw rect 109 0 176 176
-    * label *label200
   943 label *label49
   944 multijump *tmp10 0 0 (m:marker1)
   945 multilabel *label44 (m:marker1)

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-20 instructions):
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * jump *label204 always
     5 label *label204
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label207 always
     8 label *label207
     9 draw rect 93 0 16 176
    10 draw color 255 255 255 255
    11 draw image 15 159 @sand 16 0
-    * jump *label211 always
    12 label *label211
    13 draw image 15 139 @copper 16 0
-    * jump *label217 always
    14 label *label217
    15 draw image 15 119 @lead 16 0
-    * jump *label223 always
    16 label *label223
    17 draw image 15 99 @coal 16 0
-    * jump *label229 always
    18 label *label229
    19 draw image 15 79 @titanium 16 0
-    * jump *label235 always
    20 label *label235
    21 draw image 15 59 @thorium 16 0
-    * jump *label241 always
    22 label *label241
    23 draw image 15 39 @scrap 16 0
-    * jump *label247 always
    24 label *label247
    25 draw image 15 19 @graphite 16 0
    26 draw color 255 255 255 255
    27 draw image 101 159 @metaglass 16 0
-    * jump *label259 always
    28 label *label259
    29 draw image 101 139 @silicon 16 0
-    * jump *label265 always
    30 label *label265
    31 draw image 101 119 @pyratite 16 0
-    * jump *label271 always
    32 label *label271
    33 draw image 101 99 @blast-compound 16 0
-    * jump *label277 always
    34 label *label277
    35 draw image 101 79 @plastanium 16 0
-    * jump *label283 always
    36 label *label283
    37 draw image 101 59 @phase-fabric 16 0
-    * jump *label289 always
    38 label *label289
    39 draw image 101 39 @surge-alloy 16 0
-    * jump *label295 always
    40 label *label295
    41 draw image 101 19 @spore-pod 16 0
-    * jump *label301 always
    42 label *label301
    43 drawflush display1
    44 set :y 152
    45 # "Function: def eraseNumbers(in first_column)"
    46 draw color 0 0 80 255
    47 draw rect 23 0 70 176
-    * jump *label196 always
    48 label *label196
    49 set :index 0
    50 set :item @sand
 
   919 set :y 152
   920 # "Function: def eraseNumbers(in first_column)"
   921 draw color 0 0 80 255
-    * jump *label199 always
   922 label *label199
   923 draw rect 109 0 176 176
   924 label *label49
 
   926 multilabel *label44 (m:marker1)
   927 label *label46
   928 drawflush display1
-    * end

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * label *label204
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
-    * label *label207
     7 draw rect 93 0 16 176
     8 draw color 255 255 255 255
     9 draw image 15 159 @sand 16 0
-    * label *label211
    10 draw image 15 139 @copper 16 0
-    * label *label217
    11 draw image 15 119 @lead 16 0
-    * label *label223
    12 draw image 15 99 @coal 16 0
-    * label *label229
    13 draw image 15 79 @titanium 16 0
-    * label *label235
    14 draw image 15 59 @thorium 16 0
-    * label *label241
    15 draw image 15 39 @scrap 16 0
-    * label *label247
    16 draw image 15 19 @graphite 16 0
    17 draw color 255 255 255 255
    18 draw image 101 159 @metaglass 16 0
-    * label *label259
    19 draw image 101 139 @silicon 16 0
-    * label *label265
    20 draw image 101 119 @pyratite 16 0
-    * label *label271
    21 draw image 101 99 @blast-compound 16 0
-    * label *label277
    22 draw image 101 79 @plastanium 16 0
-    * label *label283
    23 draw image 101 59 @phase-fabric 16 0
-    * label *label289
    24 draw image 101 39 @surge-alloy 16 0
-    * label *label295
    25 draw image 101 19 @spore-pod 16 0
-    * label *label301
    26 drawflush display1
    27 set :y 152
    28 # "Function: def eraseNumbers(in first_column)"
    29 draw color 0 0 80 255
    30 draw rect 23 0 70 176
-    * label *label196
    31 set :index 0
    32 set :item @sand
    33 op add *tmp10 @counter 1
 
   901 set :y 152
   902 # "Function: def eraseNumbers(in first_column)"
   903 draw color 0 0 80 255
-    * label *label199
   904 draw rect 109 0 176 176
   905 label *label49
   906 multijump *tmp10 0 0 (m:marker1)

Final code before resolving virtual instructions:

set AMOUNT 12345
draw stroke 2
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
draw image 15 159 @sand 16 0
draw image 15 139 @copper 16 0
draw image 15 119 @lead 16 0
draw image 15 99 @coal 16 0
draw image 15 79 @titanium 16 0
draw image 15 59 @thorium 16 0
draw image 15 39 @scrap 16 0
draw image 15 19 @graphite 16 0
draw color 255 255 255 255
draw image 101 159 @metaglass 16 0
draw image 101 139 @silicon 16 0
draw image 101 119 @pyratite 16 0
draw image 101 99 @blast-compound 16 0
draw image 101 79 @plastanium 16 0
draw image 101 59 @phase-fabric 16 0
draw image 101 39 @surge-alloy 16 0
draw image 101 19 @spore-pod 16 0
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp10 @counter 1
jump *label26 always
multilabel *label29
set :item @copper
op add *tmp10 @counter 1
jump *label26 always
multilabel *label30
set :item @lead
op add *tmp10 @counter 1
jump *label26 always
multilabel *label31
set :item @coal
op add *tmp10 @counter 1
jump *label26 always
multilabel *label32
set :item @titanium
op add *tmp10 @counter 1
jump *label26 always
multilabel *label33
set :item @thorium
op add *tmp10 @counter 1
jump *label26 always
multilabel *label34
set :item @scrap
op add *tmp10 @counter 1
jump *label26 always
multilabel *label35
set :item @graphite
op add *tmp10 @counter 1
jump *label26 always
multilabel *label36
set :item @metaglass
op add *tmp10 @counter 1
jump *label26 always
multilabel *label37
set :item @silicon
op add *tmp10 @counter 1
jump *label26 always
multilabel *label38
set :item @pyratite
op add *tmp10 @counter 1
jump *label26 always
multilabel *label39
set :item @blast-compound
op add *tmp10 @counter 1
jump *label26 always
multilabel *label40
set :item @plastanium
op add *tmp10 @counter 1
jump *label26 always
multilabel *label41
set :item @phase-fabric
op add *tmp10 @counter 1
jump *label26 always
multilabel *label42
set :item @surge-alloy
op add *tmp10 @counter 1
jump *label26 always
multilabel *label43
set :item @spore-pod
op add *tmp10 @counter 1
jump *label26 always
multilabel *label45
jump *label46 always
label *label26
draw image 0 0 :item 16 0
jump *label47 greaterThanEq :index 8
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label532 *tmp19 0
multilabel *label532
jump *label311 always
multilabel *label533
jump *label313 always
multilabel *label534
jump *label315 always
multilabel *label535
jump *label317 always
multilabel *label536
jump *label319 always
multilabel *label537
jump *label321 always
multilabel *label538
jump *label323 always
multilabel *label539
jump *label325 always
multilabel *label540
jump *label327 always
multilabel *label541
jump *label329 always
label *label311
op sub *tmp26 :y 1
draw lineRect 70 *tmp26 9 14
jump *label331 always
label *label313
op add *tmp31 :y 12
draw line 77 :y 77 *tmp31
jump *label331 always
label *label315
draw line 71 :y 78 :y
op add *tmp33 :y 6
draw line 71 :y 71 *tmp33
draw line 71 *tmp33 78 *tmp33
op add *tmp40 :y 12
draw line 78 *tmp33 78 *tmp40
draw line 71 *tmp40 78 *tmp40
jump *label331 always
label *label317
op add *tmp46 :y 12
draw line 78 :y 78 *tmp46
draw line 71 :y 78 :y
op add *tmp48 :y 6
draw line 71 *tmp48 78 *tmp48
draw line 71 *tmp46 78 *tmp46
jump *label331 always
label *label319
op add *tmp56 :y 12
draw line 78 :y 78 *tmp56
op add *tmp57 :y 6
draw line 71 *tmp57 78 *tmp57
draw line 71 *tmp57 71 *tmp56
jump *label331 always
label *label321
draw line 71 :y 78 :y
op add *tmp65 :y 6
draw line 78 :y 78 *tmp65
draw line 71 *tmp65 78 *tmp65
op add *tmp70 :y 12
draw line 71 *tmp65 71 *tmp70
draw line 71 *tmp70 78 *tmp70
jump *label331 always
label *label323
op add *tmp74 :y 12
draw line 71 :y 71 *tmp74
draw line 71 :y 78 :y
op add *tmp78 :y 6
draw line 78 :y 78 *tmp78
draw line 71 *tmp78 78 *tmp78
draw line 71 *tmp74 78 *tmp74
jump *label331 always
label *label325
op add *tmp89 :y 12
draw line 77 :y 77 *tmp89
draw line 71 *tmp89 77 *tmp89
jump *label331 always
label *label327
op sub *tmp97 :y 1
draw lineRect 70 *tmp97 9 14
op add *tmp98 :y 6
draw line 71 *tmp98 78 *tmp98
jump *label331 always
label *label329
draw line 71 :y 78 :y
op add *tmp104 :y 12
draw line 78 :y 78 *tmp104
op add *tmp105 :y 6
draw line 71 *tmp105 78 *tmp105
draw line 71 *tmp105 71 *tmp104
draw line 71 *tmp104 78 *tmp104
label *label331
op idiv :displayItem:amount :displayItem:amount 10
jump *label48 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label544 *tmp19 0
multilabel *label544
jump *label337 always
multilabel *label545
jump *label339 always
multilabel *label546
jump *label341 always
multilabel *label547
jump *label343 always
multilabel *label548
jump *label345 always
multilabel *label549
jump *label347 always
multilabel *label550
jump *label349 always
multilabel *label551
jump *label351 always
multilabel *label552
jump *label353 always
multilabel *label553
jump *label355 always
label *label337
op sub *tmp26 :y 1
draw lineRect 59 *tmp26 9 14
jump *label357 always
label *label339
op add *tmp31 :y 12
draw line 66 :y 66 *tmp31
jump *label357 always
label *label341
draw line 60 :y 67 :y
op add *tmp33 :y 6
draw line 60 :y 60 *tmp33
draw line 60 *tmp33 67 *tmp33
op add *tmp40 :y 12
draw line 67 *tmp33 67 *tmp40
draw line 60 *tmp40 67 *tmp40
jump *label357 always
label *label343
op add *tmp46 :y 12
draw line 67 :y 67 *tmp46
draw line 60 :y 67 :y
op add *tmp48 :y 6
draw line 60 *tmp48 67 *tmp48
draw line 60 *tmp46 67 *tmp46
jump *label357 always
label *label345
op add *tmp56 :y 12
draw line 67 :y 67 *tmp56
op add *tmp57 :y 6
draw line 60 *tmp57 67 *tmp57
draw line 60 *tmp57 60 *tmp56
jump *label357 always
label *label347
draw line 60 :y 67 :y
op add *tmp65 :y 6
draw line 67 :y 67 *tmp65
draw line 60 *tmp65 67 *tmp65
op add *tmp70 :y 12
draw line 60 *tmp65 60 *tmp70
draw line 60 *tmp70 67 *tmp70
jump *label357 always
label *label349
op add *tmp74 :y 12
draw line 60 :y 60 *tmp74
draw line 60 :y 67 :y
op add *tmp78 :y 6
draw line 67 :y 67 *tmp78
draw line 60 *tmp78 67 *tmp78
draw line 60 *tmp74 67 *tmp74
jump *label357 always
label *label351
op add *tmp89 :y 12
draw line 66 :y 66 *tmp89
draw line 60 *tmp89 66 *tmp89
jump *label357 always
label *label353
op sub *tmp97 :y 1
draw lineRect 59 *tmp97 9 14
op add *tmp98 :y 6
draw line 60 *tmp98 67 *tmp98
jump *label357 always
label *label355
draw line 60 :y 67 :y
op add *tmp104 :y 12
draw line 67 :y 67 *tmp104
op add *tmp105 :y 6
draw line 60 *tmp105 67 *tmp105
draw line 60 *tmp105 60 *tmp104
draw line 60 *tmp104 67 *tmp104
label *label357
op idiv :displayItem:amount :displayItem:amount 10
jump *label48 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label556 *tmp19 0
multilabel *label556
jump *label363 always
multilabel *label557
jump *label365 always
multilabel *label558
jump *label367 always
multilabel *label559
jump *label369 always
multilabel *label560
jump *label371 always
multilabel *label561
jump *label373 always
multilabel *label562
jump *label375 always
multilabel *label563
jump *label377 always
multilabel *label564
jump *label379 always
multilabel *label565
jump *label381 always
label *label363
op sub *tmp26 :y 1
draw lineRect 48 *tmp26 9 14
jump *label383 always
label *label365
op add *tmp31 :y 12
draw line 55 :y 55 *tmp31
jump *label383 always
label *label367
draw line 49 :y 56 :y
op add *tmp33 :y 6
draw line 49 :y 49 *tmp33
draw line 49 *tmp33 56 *tmp33
op add *tmp40 :y 12
draw line 56 *tmp33 56 *tmp40
draw line 49 *tmp40 56 *tmp40
jump *label383 always
label *label369
op add *tmp46 :y 12
draw line 56 :y 56 *tmp46
draw line 49 :y 56 :y
op add *tmp48 :y 6
draw line 49 *tmp48 56 *tmp48
draw line 49 *tmp46 56 *tmp46
jump *label383 always
label *label371
op add *tmp56 :y 12
draw line 56 :y 56 *tmp56
op add *tmp57 :y 6
draw line 49 *tmp57 56 *tmp57
draw line 49 *tmp57 49 *tmp56
jump *label383 always
label *label373
draw line 49 :y 56 :y
op add *tmp65 :y 6
draw line 56 :y 56 *tmp65
draw line 49 *tmp65 56 *tmp65
op add *tmp70 :y 12
draw line 49 *tmp65 49 *tmp70
draw line 49 *tmp70 56 *tmp70
jump *label383 always
label *label375
op add *tmp74 :y 12
draw line 49 :y 49 *tmp74
draw line 49 :y 56 :y
op add *tmp78 :y 6
draw line 56 :y 56 *tmp78
draw line 49 *tmp78 56 *tmp78
draw line 49 *tmp74 56 *tmp74
jump *label383 always
label *label377
op add *tmp89 :y 12
draw line 55 :y 55 *tmp89
draw line 49 *tmp89 55 *tmp89
jump *label383 always
label *label379
op sub *tmp97 :y 1
draw lineRect 48 *tmp97 9 14
op add *tmp98 :y 6
draw line 49 *tmp98 56 *tmp98
jump *label383 always
label *label381
draw line 49 :y 56 :y
op add *tmp104 :y 12
draw line 56 :y 56 *tmp104
op add *tmp105 :y 6
draw line 49 *tmp105 56 *tmp105
draw line 49 *tmp105 49 *tmp104
draw line 49 *tmp104 56 *tmp104
label *label383
op idiv :displayItem:amount :displayItem:amount 10
jump *label48 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label568 *tmp19 0
multilabel *label568
jump *label389 always
multilabel *label569
jump *label391 always
multilabel *label570
jump *label393 always
multilabel *label571
jump *label395 always
multilabel *label572
jump *label397 always
multilabel *label573
jump *label399 always
multilabel *label574
jump *label401 always
multilabel *label575
jump *label403 always
multilabel *label576
jump *label405 always
multilabel *label577
jump *label407 always
label *label389
op sub *tmp26 :y 1
draw lineRect 37 *tmp26 9 14
jump *label409 always
label *label391
op add *tmp31 :y 12
draw line 44 :y 44 *tmp31
jump *label409 always
label *label393
draw line 38 :y 45 :y
op add *tmp33 :y 6
draw line 38 :y 38 *tmp33
draw line 38 *tmp33 45 *tmp33
op add *tmp40 :y 12
draw line 45 *tmp33 45 *tmp40
draw line 38 *tmp40 45 *tmp40
jump *label409 always
label *label395
op add *tmp46 :y 12
draw line 45 :y 45 *tmp46
draw line 38 :y 45 :y
op add *tmp48 :y 6
draw line 38 *tmp48 45 *tmp48
draw line 38 *tmp46 45 *tmp46
jump *label409 always
label *label397
op add *tmp56 :y 12
draw line 45 :y 45 *tmp56
op add *tmp57 :y 6
draw line 38 *tmp57 45 *tmp57
draw line 38 *tmp57 38 *tmp56
jump *label409 always
label *label399
draw line 38 :y 45 :y
op add *tmp65 :y 6
draw line 45 :y 45 *tmp65
draw line 38 *tmp65 45 *tmp65
op add *tmp70 :y 12
draw line 38 *tmp65 38 *tmp70
draw line 38 *tmp70 45 *tmp70
jump *label409 always
label *label401
op add *tmp74 :y 12
draw line 38 :y 38 *tmp74
draw line 38 :y 45 :y
op add *tmp78 :y 6
draw line 45 :y 45 *tmp78
draw line 38 *tmp78 45 *tmp78
draw line 38 *tmp74 45 *tmp74
jump *label409 always
label *label403
op add *tmp89 :y 12
draw line 44 :y 44 *tmp89
draw line 38 *tmp89 44 *tmp89
jump *label409 always
label *label405
op sub *tmp97 :y 1
draw lineRect 37 *tmp97 9 14
op add *tmp98 :y 6
draw line 38 *tmp98 45 *tmp98
jump *label409 always
label *label407
draw line 38 :y 45 :y
op add *tmp104 :y 12
draw line 45 :y 45 *tmp104
op add *tmp105 :y 6
draw line 38 *tmp105 45 *tmp105
draw line 38 *tmp105 38 *tmp104
draw line 38 *tmp104 45 *tmp104
label *label409
op idiv :displayItem:amount :displayItem:amount 10
jump *label48 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label415 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 33 :y 33 *tmp122
jump *label48 always
label *label415
draw line 27 :y 34 :y
op add *tmp124 :y 6
draw line 27 :y 27 *tmp124
draw line 27 *tmp124 34 *tmp124
op add *tmp131 :y 12
draw line 34 *tmp124 34 *tmp131
draw line 27 *tmp131 34 *tmp131
jump *label48 always
label *label47
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label580 *tmp19 0
multilabel *label580
jump *label422 always
multilabel *label581
jump *label424 always
multilabel *label582
jump *label426 always
multilabel *label583
jump *label428 always
multilabel *label584
jump *label430 always
multilabel *label585
jump *label432 always
multilabel *label586
jump *label434 always
multilabel *label587
jump *label436 always
multilabel *label588
jump *label438 always
multilabel *label589
jump *label440 always
label *label422
op sub *tmp26 :y 1
draw lineRect 156 *tmp26 9 14
jump *label442 always
label *label424
op add *tmp31 :y 12
draw line 163 :y 163 *tmp31
jump *label442 always
label *label426
draw line 157 :y 164 :y
op add *tmp33 :y 6
draw line 157 :y 157 *tmp33
draw line 157 *tmp33 164 *tmp33
op add *tmp40 :y 12
draw line 164 *tmp33 164 *tmp40
draw line 157 *tmp40 164 *tmp40
jump *label442 always
label *label428
op add *tmp46 :y 12
draw line 164 :y 164 *tmp46
draw line 157 :y 164 :y
op add *tmp48 :y 6
draw line 157 *tmp48 164 *tmp48
draw line 157 *tmp46 164 *tmp46
jump *label442 always
label *label430
op add *tmp56 :y 12
draw line 164 :y 164 *tmp56
op add *tmp57 :y 6
draw line 157 *tmp57 164 *tmp57
draw line 157 *tmp57 157 *tmp56
jump *label442 always
label *label432
draw line 157 :y 164 :y
op add *tmp65 :y 6
draw line 164 :y 164 *tmp65
draw line 157 *tmp65 164 *tmp65
op add *tmp70 :y 12
draw line 157 *tmp65 157 *tmp70
draw line 157 *tmp70 164 *tmp70
jump *label442 always
label *label434
op add *tmp74 :y 12
draw line 157 :y 157 *tmp74
draw line 157 :y 164 :y
op add *tmp78 :y 6
draw line 164 :y 164 *tmp78
draw line 157 *tmp78 164 *tmp78
draw line 157 *tmp74 164 *tmp74
jump *label442 always
label *label436
op add *tmp89 :y 12
draw line 163 :y 163 *tmp89
draw line 157 *tmp89 163 *tmp89
jump *label442 always
label *label438
op sub *tmp97 :y 1
draw lineRect 156 *tmp97 9 14
op add *tmp98 :y 6
draw line 157 *tmp98 164 *tmp98
jump *label442 always
label *label440
draw line 157 :y 164 :y
op add *tmp104 :y 12
draw line 164 :y 164 *tmp104
op add *tmp105 :y 6
draw line 157 *tmp105 164 *tmp105
draw line 157 *tmp105 157 *tmp104
draw line 157 *tmp104 164 *tmp104
label *label442
op idiv :displayItem:amount :displayItem:amount 10
jump *label529 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label592 *tmp19 0
multilabel *label592
jump *label448 always
multilabel *label593
jump *label450 always
multilabel *label594
jump *label452 always
multilabel *label595
jump *label454 always
multilabel *label596
jump *label456 always
multilabel *label597
jump *label458 always
multilabel *label598
jump *label460 always
multilabel *label599
jump *label462 always
multilabel *label600
jump *label464 always
multilabel *label601
jump *label466 always
label *label448
op sub *tmp26 :y 1
draw lineRect 145 *tmp26 9 14
jump *label468 always
label *label450
op add *tmp31 :y 12
draw line 152 :y 152 *tmp31
jump *label468 always
label *label452
draw line 146 :y 153 :y
op add *tmp33 :y 6
draw line 146 :y 146 *tmp33
draw line 146 *tmp33 153 *tmp33
op add *tmp40 :y 12
draw line 153 *tmp33 153 *tmp40
draw line 146 *tmp40 153 *tmp40
jump *label468 always
label *label454
op add *tmp46 :y 12
draw line 153 :y 153 *tmp46
draw line 146 :y 153 :y
op add *tmp48 :y 6
draw line 146 *tmp48 153 *tmp48
draw line 146 *tmp46 153 *tmp46
jump *label468 always
label *label456
op add *tmp56 :y 12
draw line 153 :y 153 *tmp56
op add *tmp57 :y 6
draw line 146 *tmp57 153 *tmp57
draw line 146 *tmp57 146 *tmp56
jump *label468 always
label *label458
draw line 146 :y 153 :y
op add *tmp65 :y 6
draw line 153 :y 153 *tmp65
draw line 146 *tmp65 153 *tmp65
op add *tmp70 :y 12
draw line 146 *tmp65 146 *tmp70
draw line 146 *tmp70 153 *tmp70
jump *label468 always
label *label460
op add *tmp74 :y 12
draw line 146 :y 146 *tmp74
draw line 146 :y 153 :y
op add *tmp78 :y 6
draw line 153 :y 153 *tmp78
draw line 146 *tmp78 153 *tmp78
draw line 146 *tmp74 153 *tmp74
jump *label468 always
label *label462
op add *tmp89 :y 12
draw line 152 :y 152 *tmp89
draw line 146 *tmp89 152 *tmp89
jump *label468 always
label *label464
op sub *tmp97 :y 1
draw lineRect 145 *tmp97 9 14
op add *tmp98 :y 6
draw line 146 *tmp98 153 *tmp98
jump *label468 always
label *label466
draw line 146 :y 153 :y
op add *tmp104 :y 12
draw line 153 :y 153 *tmp104
op add *tmp105 :y 6
draw line 146 *tmp105 153 *tmp105
draw line 146 *tmp105 146 *tmp104
draw line 146 *tmp104 153 *tmp104
label *label468
op idiv :displayItem:amount :displayItem:amount 10
jump *label529 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label604 *tmp19 0
multilabel *label604
jump *label474 always
multilabel *label605
jump *label476 always
multilabel *label606
jump *label478 always
multilabel *label607
jump *label480 always
multilabel *label608
jump *label482 always
multilabel *label609
jump *label484 always
multilabel *label610
jump *label486 always
multilabel *label611
jump *label488 always
multilabel *label612
jump *label490 always
multilabel *label613
jump *label492 always
label *label474
op sub *tmp26 :y 1
draw lineRect 134 *tmp26 9 14
jump *label494 always
label *label476
op add *tmp31 :y 12
draw line 141 :y 141 *tmp31
jump *label494 always
label *label478
draw line 135 :y 142 :y
op add *tmp33 :y 6
draw line 135 :y 135 *tmp33
draw line 135 *tmp33 142 *tmp33
op add *tmp40 :y 12
draw line 142 *tmp33 142 *tmp40
draw line 135 *tmp40 142 *tmp40
jump *label494 always
label *label480
op add *tmp46 :y 12
draw line 142 :y 142 *tmp46
draw line 135 :y 142 :y
op add *tmp48 :y 6
draw line 135 *tmp48 142 *tmp48
draw line 135 *tmp46 142 *tmp46
jump *label494 always
label *label482
op add *tmp56 :y 12
draw line 142 :y 142 *tmp56
op add *tmp57 :y 6
draw line 135 *tmp57 142 *tmp57
draw line 135 *tmp57 135 *tmp56
jump *label494 always
label *label484
draw line 135 :y 142 :y
op add *tmp65 :y 6
draw line 142 :y 142 *tmp65
draw line 135 *tmp65 142 *tmp65
op add *tmp70 :y 12
draw line 135 *tmp65 135 *tmp70
draw line 135 *tmp70 142 *tmp70
jump *label494 always
label *label486
op add *tmp74 :y 12
draw line 135 :y 135 *tmp74
draw line 135 :y 142 :y
op add *tmp78 :y 6
draw line 142 :y 142 *tmp78
draw line 135 *tmp78 142 *tmp78
draw line 135 *tmp74 142 *tmp74
jump *label494 always
label *label488
op add *tmp89 :y 12
draw line 141 :y 141 *tmp89
draw line 135 *tmp89 141 *tmp89
jump *label494 always
label *label490
op sub *tmp97 :y 1
draw lineRect 134 *tmp97 9 14
op add *tmp98 :y 6
draw line 135 *tmp98 142 *tmp98
jump *label494 always
label *label492
draw line 135 :y 142 :y
op add *tmp104 :y 12
draw line 142 :y 142 *tmp104
op add *tmp105 :y 6
draw line 135 *tmp105 142 *tmp105
draw line 135 *tmp105 135 *tmp104
draw line 135 *tmp104 142 *tmp104
label *label494
op idiv :displayItem:amount :displayItem:amount 10
jump *label529 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label616 *tmp19 0
multilabel *label616
jump *label500 always
multilabel *label617
jump *label502 always
multilabel *label618
jump *label504 always
multilabel *label619
jump *label506 always
multilabel *label620
jump *label508 always
multilabel *label621
jump *label510 always
multilabel *label622
jump *label512 always
multilabel *label623
jump *label514 always
multilabel *label624
jump *label516 always
multilabel *label625
jump *label518 always
label *label500
op sub *tmp26 :y 1
draw lineRect 123 *tmp26 9 14
jump *label520 always
label *label502
op add *tmp31 :y 12
draw line 130 :y 130 *tmp31
jump *label520 always
label *label504
draw line 124 :y 131 :y
op add *tmp33 :y 6
draw line 124 :y 124 *tmp33
draw line 124 *tmp33 131 *tmp33
op add *tmp40 :y 12
draw line 131 *tmp33 131 *tmp40
draw line 124 *tmp40 131 *tmp40
jump *label520 always
label *label506
op add *tmp46 :y 12
draw line 131 :y 131 *tmp46
draw line 124 :y 131 :y
op add *tmp48 :y 6
draw line 124 *tmp48 131 *tmp48
draw line 124 *tmp46 131 *tmp46
jump *label520 always
label *label508
op add *tmp56 :y 12
draw line 131 :y 131 *tmp56
op add *tmp57 :y 6
draw line 124 *tmp57 131 *tmp57
draw line 124 *tmp57 124 *tmp56
jump *label520 always
label *label510
draw line 124 :y 131 :y
op add *tmp65 :y 6
draw line 131 :y 131 *tmp65
draw line 124 *tmp65 131 *tmp65
op add *tmp70 :y 12
draw line 124 *tmp65 124 *tmp70
draw line 124 *tmp70 131 *tmp70
jump *label520 always
label *label512
op add *tmp74 :y 12
draw line 124 :y 124 *tmp74
draw line 124 :y 131 :y
op add *tmp78 :y 6
draw line 131 :y 131 *tmp78
draw line 124 *tmp78 131 *tmp78
draw line 124 *tmp74 131 *tmp74
jump *label520 always
label *label514
op add *tmp89 :y 12
draw line 130 :y 130 *tmp89
draw line 124 *tmp89 130 *tmp89
jump *label520 always
label *label516
op sub *tmp97 :y 1
draw lineRect 123 *tmp97 9 14
op add *tmp98 :y 6
draw line 124 *tmp98 131 *tmp98
jump *label520 always
label *label518
draw line 124 :y 131 :y
op add *tmp104 :y 12
draw line 131 :y 131 *tmp104
op add *tmp105 :y 6
draw line 124 *tmp105 131 *tmp105
draw line 124 *tmp105 124 *tmp104
draw line 124 *tmp104 131 *tmp104
label *label520
op idiv :displayItem:amount :displayItem:amount 10
jump *label529 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label526 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 119 :y 119 *tmp122
jump *label527 always
label *label526
draw line 113 :y 120 :y
op add *tmp124 :y 6
draw line 113 :y 113 *tmp124
draw line 113 *tmp124 120 *tmp124
op add *tmp131 :y 12
draw line 120 *tmp124 120 *tmp131
draw line 113 *tmp131 120 *tmp131
label *label527
label *label529
label *label48
op add :index :index 1
op sub :y :y 20
jump *label49 notEqual :index 8
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label49
multijump *tmp10 0 0
multilabel *label44
label *label46
drawflush display1
