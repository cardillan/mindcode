   400 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
    33 instructions eliminated by Dead Code Elimination (7 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
     5 instructions eliminated by Jump Optimization (5 iterations).
    24 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   310 instructions eliminated by Data Flow Optimization (6 passes, 29 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
   360 instructions added by Loop Unrolling (16 iterations).
     2 loops unrolled by Loop Unrolling.
   347 instructions added by Function Inlining (16 iterations).
     6 function calls inlined by Function Inlining.
     8 instructions added by Case Switching (16 iterations).
     8 case expressions converted to switched jumps Case Switching.
    18 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
     5 instructions updated by Jump Threading.
    21 instructions eliminated by Unreachable Code Elimination (2 iterations).
   698 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 737):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +241, benefit       63.0, efficiency      0.261
  * Unroll loop at line 90:5                                     size  +252, benefit     5000.0, efficiency     19.841 (+252 instructions)
    Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333
    Inline function 'eraseNumbers' defined at line 77:1          size    +3, benefit       47.3, efficiency     15.750
    Inline function 'displayItem' defined at line 86:1           size  +101, benefit      100.0, efficiency      0.990
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 46:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +102, benefit       50.0, efficiency      0.490
    Inline function call at line 55:9                            size  +102, benefit       50.0, efficiency      0.490
    Inline function call at line 62:9                            size    +4, benefit       43.8, efficiency     10.938
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit     2187.5, efficiency   2187.500

Pass 1: speed optimization selection (cost limit 485):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +241, benefit       63.0, efficiency      0.261
    Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333
  * Inline function 'eraseNumbers' defined at line 77:1          size    +3, benefit       47.3, efficiency     15.750 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 46:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 62:9                            size    +4, benefit       43.8, efficiency     10.938
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 488):
    Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
  * Inline function 'eraseImages' defined at line 68:1           size    +3, benefit        7.0, efficiency      2.333 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 27:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 28:1                            size    +4, benefit        3.5, efficiency      0.875
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 491):
  * Unroll iteration loop at line 32:1                           size   +81, benefit       63.0, efficiency      0.778 (-12 instructions)
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
    Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 503):
    Unroll iteration loop at line 49:1                           size  +273, benefit       63.0, efficiency      0.231
  * Inline function 'displayItem' defined at line 86:1           size  +353, benefit      100.0, efficiency      0.283 (+245 instructions)
    Inline function call at line 53:9                            size  +354, benefit       50.0, efficiency      0.141
    Inline function call at line 55:9                            size  +354, benefit       50.0, efficiency      0.141
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       87.5, efficiency     87.500

Pass 1: speed optimization selection (cost limit 258):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 257):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 256):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 255):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 254):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 253):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 252):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)
  o Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750

Pass 1: speed optimization selection (cost limit 251):
  * Convert case at line 100:5 (segments: 1)                     size    +1, benefit       43.8, efficiency     43.750 (+1 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   239 set :drawDigit:x :displayItem:x
   240 set :drawDigit:y :displayItem:y
   241 set :drawDigit:digit *tmp19
-    * set *tmp22 :drawDigit:digit
-    * jump *label60 equal *tmp22 0
+  242 jump *label60 equal :drawDigit:digit 0
   243 jump *label59 always
   244 label *label60
   245 op sub *tmp23 :drawDigit:x 2
 
   250 set *tmp21 null
   251 jump *label58 always
   252 label *label59
-    * jump *label62 equal *tmp22 1
+  253 jump *label62 equal :drawDigit:digit 1
   254 jump *label61 always
   255 label *label62
   256 op add *tmp27 :drawDigit:x 7
 
   262 set *tmp21 null
   263 jump *label58 always
   264 label *label61
-    * jump *label64 equal *tmp22 2
+  265 jump *label64 equal :drawDigit:digit 2
   266 jump *label63 always
   267 label *label64
   268 op add *tmp32 :drawDigit:x 7
 
   285 set *tmp21 null
   286 jump *label58 always
   287 label *label63
-    * jump *label66 equal *tmp22 3
+  288 jump *label66 equal :drawDigit:digit 3
   289 jump *label65 always
   290 label *label66
   291 op add *tmp44 :drawDigit:x 7
 
   305 set *tmp21 null
   306 jump *label58 always
   307 label *label65
-    * jump *label68 equal *tmp22 4
+  308 jump *label68 equal :drawDigit:digit 4
   309 jump *label67 always
   310 label *label68
   311 op add *tmp54 :drawDigit:x 7
 
   322 set *tmp21 null
   323 jump *label58 always
   324 label *label67
-    * jump *label70 equal *tmp22 5
+  325 jump *label70 equal :drawDigit:digit 5
   326 jump *label69 always
   327 label *label70
   328 op add *tmp62 :drawDigit:x 7
 
   345 set *tmp21 null
   346 jump *label58 always
   347 label *label69
-    * jump *label72 equal *tmp22 6
+  348 jump *label72 equal :drawDigit:digit 6
   349 jump *label71 always
   350 label *label72
   351 op add *tmp74 :drawDigit:y 12
 
   367 set *tmp21 null
   368 jump *label58 always
   369 label *label71
-    * jump *label74 equal *tmp22 7
+  370 jump *label74 equal :drawDigit:digit 7
   371 jump *label73 always
   372 label *label74
   373 op add *tmp85 :drawDigit:x 7
 
   384 set *tmp21 null
   385 jump *label58 always
   386 label *label73
-    * jump *label76 equal *tmp22 8
+  387 jump *label76 equal :drawDigit:digit 8
   388 jump *label75 always
   389 label *label76
   390 op sub *tmp94 :drawDigit:x 2
 
   399 set *tmp21 null
   400 jump *label58 always
   401 label *label75
-    * jump *label78 equal *tmp22 9
+  402 jump *label78 equal :drawDigit:digit 9
   403 jump *label77 always
   404 label *label78
   405 op add *tmp101 :drawDigit:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-13 instructions):
 
     3 set :y 152
     4 set :eraseImages:first_column true
     5 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp0 :eraseImages*retval
     6 set :eraseImages:first_column false
     7 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp1 :eraseImages*retval
     8 draw color 255 255 255 255
     9 set :index 0
    10 set :item @sand
 
    82 set :y 152
    83 set :x 93
    84 draw color 255 255 255 255
-    * set *tmp8 null
    85 jump *label23 always
    86 label *label22
-    * set *tmp8 null
    87 label *label23
    88 label *label4
    89 multijump *tmp2 0 0 (m:marker0)
 
    93 set :y 152
    94 set :eraseNumbers:first_column true
    95 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp9 :eraseNumbers*retval
    96 set :index 0
    97 set :item @sand
    98 op add *tmp10 @counter 1
 
   163 set :displayItem:x 71
   164 set :displayItem:y :y
   165 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   166 jump *label44 always
   167 label *label43
   168 set :displayItem:x 157
   169 set :displayItem:y :y
   170 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   171 label *label44
   172 op add :index :index 1
   173 op sub :y :y 20
 
   178 set :eraseNumbers:first_column false
   179 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
   180 set *tmp15 :eraseNumbers*retval
-    * set *tmp14 *tmp15
   181 jump *label46 always
   182 label *label45
-    * set *tmp14 null
   183 label *label46
   184 label *label25
   185 multijump *tmp10 0 0 (m:marker1)
 
   415 label *label77
   416 set *tmp21 null
   417 label *label58
-    * set *tmp20 *tmp21
   418 label *label57
   419 op sub :displayItem:x :displayItem:x 11
   420 op idiv :displayItem:amount :displayItem:amount 10
   421 op equal *tmp113 :displayItem:amount 0
   422 jump *label79 equal *tmp113 false
   423 jump *label53 always
-    * set *tmp114 null
   424 jump *label80 always
   425 label *label79
-    * set *tmp114 null
   426 label *label80
   427 label *label55
   428 op add :displayItem:i :displayItem:i 1
 
   462 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
   463 set *tmp117 null
   464 label *label83
-    * set *tmp115 *tmp117
   465 label *label81
   466 label *label53
   467 return :displayItem*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-15 instructions):
 
   177 set :y 152
   178 set :eraseNumbers:first_column false
   179 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp15 :eraseNumbers*retval
   180 jump *label46 always
   181 label *label45
   182 label *label46
 
   197 draw rect 93 0 16 176
   198 set *tmp16 null
   199 label *label49
-    * set :eraseImages*retval *tmp16
   200 label *label47
   201 return :eraseImages*retaddr
   202 end
 
   236 op sub *tmp25 :drawDigit:y 2
   237 op add *tmp26 *tmp25 1
   238 draw lineRect *tmp24 *tmp26 9 14
-    * set *tmp21 null
   239 jump *label58 always
   240 label *label59
   241 jump *label62 equal :drawDigit:digit 1
 
   247 op sub *tmp30 *tmp29 1
   248 op add *tmp31 :drawDigit:y 12
   249 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
-    * set *tmp21 null
   250 jump *label58 always
   251 label *label61
   252 jump *label64 equal :drawDigit:digit 2
 
   269 op add *tmp42 :drawDigit:x 7
   270 op add *tmp43 :drawDigit:y 12
   271 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
-    * set *tmp21 null
   272 jump *label58 always
   273 label *label63
   274 jump *label66 equal :drawDigit:digit 3
 
   288 op add *tmp52 :drawDigit:x 7
   289 op add *tmp53 :drawDigit:y 12
   290 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
-    * set *tmp21 null
   291 jump *label58 always
   292 label *label65
   293 jump *label68 equal :drawDigit:digit 4
 
   304 op add *tmp60 :drawDigit:y 6
   305 op add *tmp61 :drawDigit:y 12
   306 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
-    * set *tmp21 null
   307 jump *label58 always
   308 label *label67
   309 jump *label70 equal :drawDigit:digit 5
 
   326 op add *tmp72 :drawDigit:x 7
   327 op add *tmp73 :drawDigit:y 12
   328 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
-    * set *tmp21 null
   329 jump *label58 always
   330 label *label69
   331 jump *label72 equal :drawDigit:digit 6
 
   347 op add *tmp83 :drawDigit:x 7
   348 op add *tmp84 :drawDigit:y 12
   349 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
-    * set *tmp21 null
   350 jump *label58 always
   351 label *label71
   352 jump *label74 equal :drawDigit:digit 7
 
   363 op sub *tmp92 *tmp91 1
   364 op add *tmp93 :drawDigit:y 12
   365 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
-    * set *tmp21 null
   366 jump *label58 always
   367 label *label73
   368 jump *label76 equal :drawDigit:digit 8
 
   377 op add *tmp99 :drawDigit:x 7
   378 op add *tmp100 :drawDigit:y 6
   379 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
-    * set *tmp21 null
   380 jump *label58 always
   381 label *label75
   382 jump *label78 equal :drawDigit:digit 9
 
   399 op add *tmp111 :drawDigit:x 7
   400 op add *tmp112 :drawDigit:y 12
   401 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * set *tmp21 null
   402 jump *label58 always
   403 label *label77
-    * set *tmp21 null
   404 label *label58
   405 label *label57
   406 op sub :displayItem:x :displayItem:x 11
 
   427 op sub *tmp121 *tmp120 1
   428 op add *tmp122 :drawDigit12:y 12
   429 draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
-    * set *tmp117 null
   430 jump *label83 always
   431 label *label82
   432 op add *tmp123 :drawDigit12:x 7
 
   446 op add *tmp133 :drawDigit12:x 7
   447 op add *tmp134 :drawDigit12:y 12
   448 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
-    * set *tmp117 null
   449 label *label83
   450 label *label81
   451 label *label53

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-3 instructions):
 
   191 draw color 0 0 80 255
   192 jump *label48 equal :eraseImages:first_column false
   193 draw rect 0 0 23 176
-    * set *tmp16 null
   194 jump *label49 always
   195 label *label48
   196 draw rect 93 0 16 176
-    * set *tmp16 null
   197 label *label49
   198 label *label47
   199 return :eraseImages*retaddr
 
   209 draw rect 109 0 176 176
   210 set *tmp17 null
   211 label *label52
-    * set :eraseNumbers*retval *tmp17
   212 label *label50
   213 return :eraseNumbers*retaddr
   214 end

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   203 draw color 0 0 80 255
   204 jump *label51 equal :eraseNumbers:first_column false
   205 draw rect 23 0 70 176
-    * set *tmp17 null
   206 jump *label52 always
   207 label *label51
   208 draw rect 109 0 176 176
-    * set *tmp17 null
   209 label *label52
   210 label *label50
   211 return :eraseNumbers*retaddr

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
   212 end
   213 label *label2
   214 # "Function: void displayItem(in x, in y)"
-    * op max *tmp18 AMOUNT 0
-    * set :displayItem:amount *tmp18
+  215 op max :displayItem:amount AMOUNT 0
   216 draw color 0 255 0 255
   217 set :displayItem:i 0
   218 label *label54

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
   222 set :drawDigit:x :displayItem:x
   223 set :drawDigit:y :displayItem:y
   224 set :drawDigit:digit *tmp19
-    * jump *label60 equal :drawDigit:digit 0
-    * jump *label59 always
+  225 jump *label59 notEqual :drawDigit:digit 0
   226 label *label60
   227 op sub *tmp23 :drawDigit:x 2
   228 op add *tmp24 *tmp23 1
 
   231 draw lineRect *tmp24 *tmp26 9 14
   232 jump *label58 always
   233 label *label59
-    * jump *label62 equal :drawDigit:digit 1
-    * jump *label61 always
+  234 jump *label61 notEqual :drawDigit:digit 1
   235 label *label62
   236 op add *tmp27 :drawDigit:x 7
   237 op sub *tmp28 *tmp27 1
 
   241 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
   242 jump *label58 always
   243 label *label61
-    * jump *label64 equal :drawDigit:digit 2
-    * jump *label63 always
+  244 jump *label63 notEqual :drawDigit:digit 2
   245 label *label64
   246 op add *tmp32 :drawDigit:x 7
   247 draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
 
   262 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
   263 jump *label58 always
   264 label *label63
-    * jump *label66 equal :drawDigit:digit 3
-    * jump *label65 always
+  265 jump *label65 notEqual :drawDigit:digit 3
   266 label *label66
   267 op add *tmp44 :drawDigit:x 7
   268 op add *tmp45 :drawDigit:x 7
 
   280 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
   281 jump *label58 always
   282 label *label65
-    * jump *label68 equal :drawDigit:digit 4
-    * jump *label67 always
+  283 jump *label67 notEqual :drawDigit:digit 4
   284 label *label68
   285 op add *tmp54 :drawDigit:x 7
   286 op add *tmp55 :drawDigit:x 7
 
   295 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
   296 jump *label58 always
   297 label *label67
-    * jump *label70 equal :drawDigit:digit 5
-    * jump *label69 always
+  298 jump *label69 notEqual :drawDigit:digit 5
   299 label *label70
   300 op add *tmp62 :drawDigit:x 7
   301 draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
 
   316 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
   317 jump *label58 always
   318 label *label69
-    * jump *label72 equal :drawDigit:digit 6
-    * jump *label71 always
+  319 jump *label71 notEqual :drawDigit:digit 6
   320 label *label72
   321 op add *tmp74 :drawDigit:y 12
   322 draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
 
   336 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
   337 jump *label58 always
   338 label *label71
-    * jump *label74 equal :drawDigit:digit 7
-    * jump *label73 always
+  339 jump *label73 notEqual :drawDigit:digit 7
   340 label *label74
   341 op add *tmp85 :drawDigit:x 7
   342 op sub *tmp86 *tmp85 1
 
   351 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
   352 jump *label58 always
   353 label *label73
-    * jump *label76 equal :drawDigit:digit 8
-    * jump *label75 always
+  354 jump *label75 notEqual :drawDigit:digit 8
   355 label *label76
   356 op sub *tmp94 :drawDigit:x 2
   357 op add *tmp95 *tmp94 1
 
   364 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
   365 jump *label58 always
   366 label *label75
-    * jump *label78 equal :drawDigit:digit 9
-    * jump *label77 always
+  367 jump *label77 notEqual :drawDigit:digit 9
   368 label *label78
   369 op add *tmp101 :drawDigit:x 7
   370 draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-5 instructions):
 
    77 draw image *tmp3 *tmp6 :item 16 0
    78 op add :index :index 1
    79 op sub :y :y 20
-    * op equal *tmp7 :index 8
-    * jump *label22 equal *tmp7 false
+   80 jump *label22 notEqual :index 8
    81 set :y 152
    82 set :x 93
    83 draw color 255 255 255 255
 
   157 set *tmp10 null
   158 label *label24
   159 draw image 0 0 :item 16 0
-    * op lessThan *tmp11 :index 8
-    * jump *label43 equal *tmp11 false
+  160 jump *label43 greaterThanEq :index 8
   161 set :displayItem:x 71
   162 set :displayItem:y :y
   163 call *label2 :displayItem*retaddr :displayItem*retval
 
   169 label *label44
   170 op add :index :index 1
   171 op sub :y :y 20
-    * op equal *tmp13 :index 8
-    * jump *label45 equal *tmp13 false
+  172 jump *label45 notEqual :index 8
   173 drawflush display1
   174 set :y 152
   175 set :eraseNumbers:first_column false
 
   386 label *label57
   387 op sub :displayItem:x :displayItem:x 11
   388 op idiv :displayItem:amount :displayItem:amount 10
-    * op equal *tmp113 :displayItem:amount 0
-    * jump *label79 equal *tmp113 false
+  389 jump *label79 notEqual :displayItem:amount 0
   390 jump *label53 always
   391 jump *label80 always
   392 label *label79
 
   399 set :drawDigit12:x :displayItem:x
   400 set :drawDigit12:y :displayItem:y
   401 set :drawDigit12:digit :displayItem:amount
-    * op equal *tmp116 :drawDigit12:digit 1
-    * jump *label82 equal *tmp116 false
+  402 jump *label82 notEqual :drawDigit12:digit 1
   403 op add *tmp118 :drawDigit12:x 7
   404 op sub *tmp119 *tmp118 1
   405 op add *tmp120 :drawDigit12:x 7

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
    81 set :y 152
    82 set :x 93
    83 draw color 255 255 255 255
-    * jump *label23 always
    84 label *label22
    85 label *label23
    86 label *label4
 
   173 set :y 152
   174 set :eraseNumbers:first_column false
   175 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * jump *label46 always
   176 label *label45
   177 label *label46
   178 label *label25
 
   378 op add *tmp111 :drawDigit:x 7
   379 op add *tmp112 :drawDigit:y 12
   380 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * jump *label58 always
   381 label *label77
   382 label *label58
   383 label *label57
 
   385 op idiv :displayItem:amount :displayItem:amount 10
   386 jump *label79 notEqual :displayItem:amount 0
   387 jump *label53 always
-    * jump *label80 always
   388 label *label79
   389 label *label80
   390 label *label55

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    72 label *label3
    73 op add *tmp3 :x 8
    74 op add *tmp4 :y 8
-    * op sub *tmp5 *tmp4 2
-    * op add *tmp6 *tmp5 1
+   75 op add *tmp5 :y 6
+   76 op sub *tmp6 *tmp4 1
    77 draw image *tmp3 *tmp6 :item 16 0
    78 op add :index :index 1
    79 op sub :y :y 20
 
   217 set :drawDigit:x :displayItem:x
   218 set :drawDigit:y :displayItem:y
   219 set :drawDigit:digit *tmp19
-    * jump *label59 notEqual :drawDigit:digit 0
+  220 jump *label59 notEqual *tmp19 0
   221 label *label60
-    * op sub *tmp23 :drawDigit:x 2
-    * op add *tmp24 *tmp23 1
-    * op sub *tmp25 :drawDigit:y 2
-    * op add *tmp26 *tmp25 1
+  222 op sub *tmp23 :displayItem:x 2
+  223 op sub *tmp24 :drawDigit:x 1
+  224 op sub *tmp25 :displayItem:y 2
+  225 op sub *tmp26 :drawDigit:y 1
   226 draw lineRect *tmp24 *tmp26 9 14
   227 jump *label58 always
   228 label *label59
-    * jump *label61 notEqual :drawDigit:digit 1
+  229 jump *label61 notEqual *tmp19 1
   230 label *label62
-    * op add *tmp27 :drawDigit:x 7
-    * op sub *tmp28 *tmp27 1
-    * op add *tmp29 :drawDigit:x 7
-    * op sub *tmp30 *tmp29 1
-    * op add *tmp31 :drawDigit:y 12
-    * draw line *tmp28 :drawDigit:y *tmp30 *tmp31
+  231 op add *tmp27 :displayItem:x 7
+  232 op add *tmp28 :drawDigit:x 6
+  233 op add *tmp29 :displayItem:x 7
+  234 op sub *tmp30 *tmp27 1
+  235 op add *tmp31 :displayItem:y 12
+  236 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   237 jump *label58 always
   238 label *label61
-    * jump *label63 notEqual :drawDigit:digit 2
+  239 jump *label63 notEqual *tmp19 2
   240 label *label64
-    * op add *tmp32 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
-    * op add *tmp33 :drawDigit:y 6
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp33
-    * op add *tmp34 :drawDigit:y 6
-    * op add *tmp35 :drawDigit:x 7
-    * op add *tmp36 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp34 *tmp35 *tmp36
-    * op add *tmp37 :drawDigit:x 7
-    * op add *tmp38 :drawDigit:y 6
-    * op add *tmp39 :drawDigit:x 7
-    * op add *tmp40 :drawDigit:y 12
-    * draw line *tmp37 *tmp38 *tmp39 *tmp40
-    * op add *tmp41 :drawDigit:y 12
-    * op add *tmp42 :drawDigit:x 7
-    * op add *tmp43 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp41 *tmp42 *tmp43
+  241 op add *tmp32 :displayItem:x 7
+  242 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  243 op add *tmp33 :displayItem:y 6
+  244 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  245 op add *tmp34 :displayItem:y 6
+  246 op add *tmp35 :displayItem:x 7
+  247 op add *tmp36 :displayItem:y 6
+  248 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  249 op add *tmp37 :displayItem:x 7
+  250 op add *tmp38 :displayItem:y 6
+  251 op add *tmp39 :displayItem:x 7
+  252 op add *tmp40 :displayItem:y 12
+  253 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  254 op add *tmp41 :displayItem:y 12
+  255 op add *tmp42 :displayItem:x 7
+  256 op add *tmp43 :displayItem:y 12
+  257 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   258 jump *label58 always
   259 label *label63
-    * jump *label65 notEqual :drawDigit:digit 3
+  260 jump *label65 notEqual *tmp19 3
   261 label *label66
-    * op add *tmp44 :drawDigit:x 7
-    * op add *tmp45 :drawDigit:x 7
-    * op add *tmp46 :drawDigit:y 12
-    * draw line *tmp44 :drawDigit:y *tmp45 *tmp46
-    * op add *tmp47 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp47 :drawDigit:y
-    * op add *tmp48 :drawDigit:y 6
-    * op add *tmp49 :drawDigit:x 7
-    * op add *tmp50 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp48 *tmp49 *tmp50
-    * op add *tmp51 :drawDigit:y 12
-    * op add *tmp52 :drawDigit:x 7
-    * op add *tmp53 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp51 *tmp52 *tmp53
+  262 op add *tmp44 :displayItem:x 7
+  263 op add *tmp45 :displayItem:x 7
+  264 op add *tmp46 :displayItem:y 12
+  265 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  266 op add *tmp47 :displayItem:x 7
+  267 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  268 op add *tmp48 :displayItem:y 6
+  269 op add *tmp49 :displayItem:x 7
+  270 op add *tmp50 :displayItem:y 6
+  271 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  272 op add *tmp51 :displayItem:y 12
+  273 op add *tmp52 :displayItem:x 7
+  274 op add *tmp53 :displayItem:y 12
+  275 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   276 jump *label58 always
   277 label *label65
-    * jump *label67 notEqual :drawDigit:digit 4
+  278 jump *label67 notEqual *tmp19 4
   279 label *label68
-    * op add *tmp54 :drawDigit:x 7
-    * op add *tmp55 :drawDigit:x 7
-    * op add *tmp56 :drawDigit:y 12
-    * draw line *tmp54 :drawDigit:y *tmp55 *tmp56
-    * op add *tmp57 :drawDigit:y 6
-    * op add *tmp58 :drawDigit:x 7
-    * op add *tmp59 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp57 *tmp58 *tmp59
-    * op add *tmp60 :drawDigit:y 6
-    * op add *tmp61 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
+  280 op add *tmp54 :displayItem:x 7
+  281 op add *tmp55 :displayItem:x 7
+  282 op add *tmp56 :displayItem:y 12
+  283 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  284 op add *tmp57 :displayItem:y 6
+  285 op add *tmp58 :displayItem:x 7
+  286 op add *tmp59 :displayItem:y 6
+  287 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  288 op add *tmp60 :displayItem:y 6
+  289 op add *tmp61 :displayItem:y 12
+  290 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   291 jump *label58 always
   292 label *label67
-    * jump *label69 notEqual :drawDigit:digit 5
+  293 jump *label69 notEqual *tmp19 5
   294 label *label70
-    * op add *tmp62 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
-    * op add *tmp63 :drawDigit:x 7
-    * op add *tmp64 :drawDigit:x 7
-    * op add *tmp65 :drawDigit:y 6
-    * draw line *tmp63 :drawDigit:y *tmp64 *tmp65
-    * op add *tmp66 :drawDigit:y 6
-    * op add *tmp67 :drawDigit:x 7
-    * op add *tmp68 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp66 *tmp67 *tmp68
-    * op add *tmp69 :drawDigit:y 6
-    * op add *tmp70 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp69 :drawDigit:x *tmp70
-    * op add *tmp71 :drawDigit:y 12
-    * op add *tmp72 :drawDigit:x 7
-    * op add *tmp73 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp71 *tmp72 *tmp73
+  295 op add *tmp62 :displayItem:x 7
+  296 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  297 op add *tmp63 :displayItem:x 7
+  298 op add *tmp64 :displayItem:x 7
+  299 op add *tmp65 :displayItem:y 6
+  300 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  301 op add *tmp66 :displayItem:y 6
+  302 op add *tmp67 :displayItem:x 7
+  303 op add *tmp68 :displayItem:y 6
+  304 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  305 op add *tmp69 :displayItem:y 6
+  306 op add *tmp70 :displayItem:y 12
+  307 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  308 op add *tmp71 :displayItem:y 12
+  309 op add *tmp72 :displayItem:x 7
+  310 op add *tmp73 :displayItem:y 12
+  311 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   312 jump *label58 always
   313 label *label69
-    * jump *label71 notEqual :drawDigit:digit 6
+  314 jump *label71 notEqual *tmp19 6
   315 label *label72
-    * op add *tmp74 :drawDigit:y 12
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
-    * op add *tmp75 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp75 :drawDigit:y
-    * op add *tmp76 :drawDigit:x 7
-    * op add *tmp77 :drawDigit:x 7
-    * op add *tmp78 :drawDigit:y 6
-    * draw line *tmp76 :drawDigit:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigit:y 6
-    * op add *tmp80 :drawDigit:x 7
-    * op add *tmp81 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigit:y 12
-    * op add *tmp83 :drawDigit:x 7
-    * op add *tmp84 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp82 *tmp83 *tmp84
+  316 op add *tmp74 :displayItem:y 12
+  317 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  318 op add *tmp75 :displayItem:x 7
+  319 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  320 op add *tmp76 :displayItem:x 7
+  321 op add *tmp77 :displayItem:x 7
+  322 op add *tmp78 :displayItem:y 6
+  323 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  324 op add *tmp79 :displayItem:y 6
+  325 op add *tmp80 :displayItem:x 7
+  326 op add *tmp81 :displayItem:y 6
+  327 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  328 op add *tmp82 :displayItem:y 12
+  329 op add *tmp83 :displayItem:x 7
+  330 op add *tmp84 :displayItem:y 12
+  331 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   332 jump *label58 always
   333 label *label71
-    * jump *label73 notEqual :drawDigit:digit 7
+  334 jump *label73 notEqual *tmp19 7
   335 label *label74
-    * op add *tmp85 :drawDigit:x 7
-    * op sub *tmp86 *tmp85 1
-    * op add *tmp87 :drawDigit:x 7
-    * op sub *tmp88 *tmp87 1
-    * op add *tmp89 :drawDigit:y 12
-    * draw line *tmp86 :drawDigit:y *tmp88 *tmp89
-    * op add *tmp90 :drawDigit:y 12
-    * op add *tmp91 :drawDigit:x 7
-    * op sub *tmp92 *tmp91 1
-    * op add *tmp93 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp90 *tmp92 *tmp93
+  336 op add *tmp85 :displayItem:x 7
+  337 op add *tmp86 :drawDigit:x 6
+  338 op add *tmp87 :displayItem:x 7
+  339 op sub *tmp88 *tmp85 1
+  340 op add *tmp89 :displayItem:y 12
+  341 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  342 op add *tmp90 :displayItem:y 12
+  343 op add *tmp91 :displayItem:x 7
+  344 op sub *tmp92 *tmp85 1
+  345 op add *tmp93 :displayItem:y 12
+  346 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   347 jump *label58 always
   348 label *label73
-    * jump *label75 notEqual :drawDigit:digit 8
+  349 jump *label75 notEqual *tmp19 8
   350 label *label76
-    * op sub *tmp94 :drawDigit:x 2
-    * op add *tmp95 *tmp94 1
-    * op sub *tmp96 :drawDigit:y 2
-    * op add *tmp97 *tmp96 1
+  351 op sub *tmp94 :displayItem:x 2
+  352 op sub *tmp95 :drawDigit:x 1
+  353 op sub *tmp96 :displayItem:y 2
+  354 op sub *tmp97 :drawDigit:y 1
   355 draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :drawDigit:y 6
-    * op add *tmp99 :drawDigit:x 7
-    * op add *tmp100 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp98 *tmp99 *tmp100
+  356 op add *tmp98 :displayItem:y 6
+  357 op add *tmp99 :displayItem:x 7
+  358 op add *tmp100 :displayItem:y 6
+  359 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   360 jump *label58 always
   361 label *label75
-    * jump *label77 notEqual :drawDigit:digit 9
+  362 jump *label77 notEqual *tmp19 9
   363 label *label78
-    * op add *tmp101 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y
-    * op add *tmp102 :drawDigit:x 7
-    * op add *tmp103 :drawDigit:x 7
-    * op add *tmp104 :drawDigit:y 12
-    * draw line *tmp102 :drawDigit:y *tmp103 *tmp104
-    * op add *tmp105 :drawDigit:y 6
-    * op add *tmp106 :drawDigit:x 7
-    * op add *tmp107 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp105 *tmp106 *tmp107
-    * op add *tmp108 :drawDigit:y 6
-    * op add *tmp109 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp108 :drawDigit:x *tmp109
-    * op add *tmp110 :drawDigit:y 12
-    * op add *tmp111 :drawDigit:x 7
-    * op add *tmp112 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp110 *tmp111 *tmp112
+  364 op add *tmp101 :displayItem:x 7
+  365 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  366 op add *tmp102 :displayItem:x 7
+  367 op add *tmp103 :displayItem:x 7
+  368 op add *tmp104 :displayItem:y 12
+  369 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  370 op add *tmp105 :displayItem:y 6
+  371 op add *tmp106 :displayItem:x 7
+  372 op add *tmp107 :displayItem:y 6
+  373 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  374 op add *tmp108 :displayItem:y 6
+  375 op add *tmp109 :displayItem:y 12
+  376 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  377 op add *tmp110 :displayItem:y 12
+  378 op add *tmp111 :displayItem:x 7
+  379 op add *tmp112 :displayItem:y 12
+  380 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   381 label *label77
   382 label *label58
   383 label *label57
 
   395 set :drawDigit12:x :displayItem:x
   396 set :drawDigit12:y :displayItem:y
   397 set :drawDigit12:digit :displayItem:amount
-    * jump *label82 notEqual :drawDigit12:digit 1
-    * op add *tmp118 :drawDigit12:x 7
-    * op sub *tmp119 *tmp118 1
-    * op add *tmp120 :drawDigit12:x 7
-    * op sub *tmp121 *tmp120 1
-    * op add *tmp122 :drawDigit12:y 12
-    * draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
+  398 jump *label82 notEqual :displayItem:amount 1
+  399 op add *tmp118 :displayItem:x 7
+  400 op add *tmp119 :drawDigit12:x 6
+  401 op add *tmp120 :displayItem:x 7
+  402 op sub *tmp121 *tmp118 1
+  403 op add *tmp122 :displayItem:y 12
+  404 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   405 jump *label83 always
   406 label *label82
-    * op add *tmp123 :drawDigit12:x 7
-    * draw line :drawDigit12:x :drawDigit12:y *tmp123 :drawDigit12:y
-    * op add *tmp124 :drawDigit12:y 6
-    * draw line :drawDigit12:x :drawDigit12:y :drawDigit12:x *tmp124
-    * op add *tmp125 :drawDigit12:y 6
-    * op add *tmp126 :drawDigit12:x 7
-    * op add *tmp127 :drawDigit12:y 6
-    * draw line :drawDigit12:x *tmp125 *tmp126 *tmp127
-    * op add *tmp128 :drawDigit12:x 7
-    * op add *tmp129 :drawDigit12:y 6
-    * op add *tmp130 :drawDigit12:x 7
-    * op add *tmp131 :drawDigit12:y 12
-    * draw line *tmp128 *tmp129 *tmp130 *tmp131
-    * op add *tmp132 :drawDigit12:y 12
-    * op add *tmp133 :drawDigit12:x 7
-    * op add *tmp134 :drawDigit12:y 12
-    * draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
+  407 op add *tmp123 :displayItem:x 7
+  408 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  409 op add *tmp124 :displayItem:y 6
+  410 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  411 op add *tmp125 :displayItem:y 6
+  412 op add *tmp126 :displayItem:x 7
+  413 op add *tmp127 :displayItem:y 6
+  414 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  415 op add *tmp128 :displayItem:x 7
+  416 op add *tmp129 :displayItem:y 6
+  417 op add *tmp130 :displayItem:x 7
+  418 op add *tmp131 :displayItem:y 12
+  419 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  420 op add *tmp132 :displayItem:y 12
+  421 op add *tmp133 :displayItem:x 7
+  422 op add *tmp134 :displayItem:y 12
+  423 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   424 label *label83
   425 label *label81
   426 label *label53

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-71 instructions):
 
    72 label *label3
    73 op add *tmp3 :x 8
    74 op add *tmp4 :y 8
-    * op add *tmp5 :y 6
-    * op sub *tmp6 *tmp4 1
+   75 op add *tmp6 :y 7
    76 draw image *tmp3 *tmp6 :item 16 0
    77 op add :index :index 1
    78 op sub :y :y 20
 
   215 # "Function: def drawDigit(in x, in y, in digit)"
   216 set :drawDigit:x :displayItem:x
   217 set :drawDigit:y :displayItem:y
-    * set :drawDigit:digit *tmp19
   218 jump *label59 notEqual *tmp19 0
   219 label *label60
-    * op sub *tmp23 :displayItem:x 2
-    * op sub *tmp24 :drawDigit:x 1
-    * op sub *tmp25 :displayItem:y 2
-    * op sub *tmp26 :drawDigit:y 1
+  220 op sub *tmp24 :displayItem:x 1
+  221 op sub *tmp26 :displayItem:y 1
   222 draw lineRect *tmp24 *tmp26 9 14
   223 jump *label58 always
   224 label *label59
   225 jump *label61 notEqual *tmp19 1
   226 label *label62
   227 op add *tmp27 :displayItem:x 7
-    * op add *tmp28 :drawDigit:x 6
-    * op add *tmp29 :displayItem:x 7
-    * op sub *tmp30 *tmp27 1
+  228 op add *tmp28 :displayItem:x 6
+  229 op add *tmp30 :displayItem:x 6
   230 op add *tmp31 :displayItem:y 12
   231 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   232 jump *label58 always
 
   237 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
   238 op add *tmp33 :displayItem:y 6
   239 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * op add *tmp34 :displayItem:y 6
-    * op add *tmp35 :displayItem:x 7
-    * op add *tmp36 :displayItem:y 6
   240 draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp37 :displayItem:x 7
-    * op add *tmp38 :displayItem:y 6
-    * op add *tmp39 :displayItem:x 7
   241 op add *tmp40 :displayItem:y 12
   242 draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * op add *tmp41 :displayItem:y 12
-    * op add *tmp42 :displayItem:x 7
-    * op add *tmp43 :displayItem:y 12
   243 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   244 jump *label58 always
   245 label *label63
   246 jump *label65 notEqual *tmp19 3
   247 label *label66
   248 op add *tmp44 :displayItem:x 7
-    * op add *tmp45 :displayItem:x 7
   249 op add *tmp46 :displayItem:y 12
   250 draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * op add *tmp47 :displayItem:x 7
   251 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
   252 op add *tmp48 :displayItem:y 6
-    * op add *tmp49 :displayItem:x 7
-    * op add *tmp50 :displayItem:y 6
   253 draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * op add *tmp51 :displayItem:y 12
-    * op add *tmp52 :displayItem:x 7
-    * op add *tmp53 :displayItem:y 12
   254 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   255 jump *label58 always
   256 label *label65
   257 jump *label67 notEqual *tmp19 4
   258 label *label68
   259 op add *tmp54 :displayItem:x 7
-    * op add *tmp55 :displayItem:x 7
   260 op add *tmp56 :displayItem:y 12
   261 draw line *tmp54 :displayItem:y *tmp54 *tmp56
   262 op add *tmp57 :displayItem:y 6
-    * op add *tmp58 :displayItem:x 7
-    * op add *tmp59 :displayItem:y 6
   263 draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * op add *tmp60 :displayItem:y 6
-    * op add *tmp61 :displayItem:y 12
   264 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   265 jump *label58 always
   266 label *label67
 
   268 label *label70
   269 op add *tmp62 :displayItem:x 7
   270 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp63 :displayItem:x 7
-    * op add *tmp64 :displayItem:x 7
   271 op add *tmp65 :displayItem:y 6
   272 draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * op add *tmp66 :displayItem:y 6
-    * op add *tmp67 :displayItem:x 7
-    * op add *tmp68 :displayItem:y 6
   273 draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp69 :displayItem:y 6
   274 op add *tmp70 :displayItem:y 12
   275 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * op add *tmp71 :displayItem:y 12
-    * op add *tmp72 :displayItem:x 7
-    * op add *tmp73 :displayItem:y 12
   276 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   277 jump *label58 always
   278 label *label69
 
   282 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
   283 op add *tmp75 :displayItem:x 7
   284 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp76 :displayItem:x 7
-    * op add *tmp77 :displayItem:x 7
   285 op add *tmp78 :displayItem:y 6
   286 draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * op add *tmp79 :displayItem:y 6
-    * op add *tmp80 :displayItem:x 7
-    * op add *tmp81 :displayItem:y 6
   287 draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * op add *tmp82 :displayItem:y 12
-    * op add *tmp83 :displayItem:x 7
-    * op add *tmp84 :displayItem:y 12
   288 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   289 jump *label58 always
   290 label *label71
   291 jump *label73 notEqual *tmp19 7
   292 label *label74
   293 op add *tmp85 :displayItem:x 7
-    * op add *tmp86 :drawDigit:x 6
-    * op add *tmp87 :displayItem:x 7
-    * op sub *tmp88 *tmp85 1
+  294 op add *tmp86 :displayItem:x 6
+  295 op add *tmp88 :displayItem:x 6
   296 op add *tmp89 :displayItem:y 12
   297 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp90 :displayItem:y 12
-    * op add *tmp91 :displayItem:x 7
-    * op sub *tmp92 *tmp85 1
-    * op add *tmp93 :displayItem:y 12
+  298 op add *tmp92 :displayItem:x 6
   299 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   300 jump *label58 always
   301 label *label73
   302 jump *label75 notEqual *tmp19 8
   303 label *label76
-    * op sub *tmp94 :displayItem:x 2
-    * op sub *tmp95 :drawDigit:x 1
-    * op sub *tmp96 :displayItem:y 2
-    * op sub *tmp97 :drawDigit:y 1
+  304 op sub *tmp95 :displayItem:x 1
+  305 op sub *tmp97 :displayItem:y 1
   306 draw lineRect *tmp95 *tmp97 9 14
   307 op add *tmp98 :displayItem:y 6
   308 op add *tmp99 :displayItem:x 7
-    * op add *tmp100 :displayItem:y 6
   309 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   310 jump *label58 always
   311 label *label75
 
   313 label *label78
   314 op add *tmp101 :displayItem:x 7
   315 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp102 :displayItem:x 7
-    * op add *tmp103 :displayItem:x 7
   316 op add *tmp104 :displayItem:y 12
   317 draw line *tmp101 :displayItem:y *tmp101 *tmp104
   318 op add *tmp105 :displayItem:y 6
-    * op add *tmp106 :displayItem:x 7
-    * op add *tmp107 :displayItem:y 6
   319 draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * op add *tmp108 :displayItem:y 6
-    * op add *tmp109 :displayItem:y 12
   320 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * op add *tmp110 :displayItem:y 12
-    * op add *tmp111 :displayItem:x 7
-    * op add *tmp112 :displayItem:y 12
   321 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   322 label *label77
   323 label *label58
 
   334 label *label56
   335 # "Function: def drawDigit12(in x, in y, in digit)"
   336 set :drawDigit12:x :displayItem:x
-    * set :drawDigit12:y :displayItem:y
-    * set :drawDigit12:digit :displayItem:amount
   337 jump *label82 notEqual :displayItem:amount 1
   338 op add *tmp118 :displayItem:x 7
-    * op add *tmp119 :drawDigit12:x 6
-    * op add *tmp120 :displayItem:x 7
-    * op sub *tmp121 *tmp118 1
+  339 op add *tmp119 :displayItem:x 6
+  340 op add *tmp121 :displayItem:x 6
   341 op add *tmp122 :displayItem:y 12
   342 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   343 jump *label83 always
 
   346 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
   347 op add *tmp124 :displayItem:y 6
   348 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * op add *tmp125 :displayItem:y 6
-    * op add *tmp126 :displayItem:x 7
-    * op add *tmp127 :displayItem:y 6
   349 draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp128 :displayItem:x 7
-    * op add *tmp129 :displayItem:y 6
-    * op add *tmp130 :displayItem:x 7
   350 op add *tmp131 :displayItem:y 12
   351 draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * op add *tmp132 :displayItem:y 12
-    * op add *tmp133 :displayItem:x 7
-    * op add *tmp134 :displayItem:y 12
   352 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   353 label *label83
   354 label *label81

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-11 instructions):
 
    71 set *tmp2 null
    72 label *label3
    73 op add *tmp3 :x 8
-    * op add *tmp4 :y 8
    74 op add *tmp6 :y 7
    75 draw image *tmp3 *tmp6 :item 16 0
    76 op add :index :index 1
 
   212 jump *label56 greaterThanEq :displayItem:i 4
   213 op mod *tmp19 :displayItem:amount 10
   214 # "Function: def drawDigit(in x, in y, in digit)"
-    * set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :displayItem:y
   215 jump *label59 notEqual *tmp19 0
   216 label *label60
   217 op sub *tmp24 :displayItem:x 1
 
   221 label *label59
   222 jump *label61 notEqual *tmp19 1
   223 label *label62
-    * op add *tmp27 :displayItem:x 7
   224 op add *tmp28 :displayItem:x 6
-    * op add *tmp30 :displayItem:x 6
   225 op add *tmp31 :displayItem:y 12
   226 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   227 jump *label58 always
 
   285 label *label71
   286 jump *label73 notEqual *tmp19 7
   287 label *label74
-    * op add *tmp85 :displayItem:x 7
   288 op add *tmp86 :displayItem:x 6
-    * op add *tmp88 :displayItem:x 6
   289 op add *tmp89 :displayItem:y 12
   290 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp92 :displayItem:x 6
   291 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   292 jump *label58 always
   293 label *label73
 
   325 jump *label54 always
   326 label *label56
   327 # "Function: def drawDigit12(in x, in y, in digit)"
-    * set :drawDigit12:x :displayItem:x
   328 jump *label82 notEqual :displayItem:amount 1
-    * op add *tmp118 :displayItem:x 7
   329 op add *tmp119 :displayItem:x 6
-    * op add *tmp121 :displayItem:x 6
   330 op add *tmp122 :displayItem:y 12
   331 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   332 jump *label83 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   209 draw color 0 255 0 255
   210 set :displayItem:i 0
   211 label *label54
-    * jump *label56 greaterThanEq :displayItem:i 4
+  212 label *label84
   213 op mod *tmp19 :displayItem:amount 10
   214 # "Function: def drawDigit(in x, in y, in digit)"
   215 jump *label59 notEqual *tmp19 0
 
   322 label *label80
   323 label *label55
   324 op add :displayItem:i :displayItem:i 1
-    * jump *label54 always
+  325 jump *label84 lessThan :displayItem:i 4
   326 label *label56
   327 # "Function: def drawDigit12(in x, in y, in digit)"
   328 jump *label82 notEqual :displayItem:amount 1

Modifications by Unroll loop at line 90:5 (+257 instructions):
 
   207 # "Function: void displayItem(in x, in y)"
   208 op max :displayItem:amount AMOUNT 0
   209 draw color 0 255 0 255
-    * set :displayItem:i 0
-    * label *label54
-    * label *label84
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label59 notEqual *tmp19 0
-    * label *label60
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label58 always
-    * label *label59
-    * jump *label61 notEqual *tmp19 1
-    * label *label62
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label58 always
-    * label *label61
-    * jump *label63 notEqual *tmp19 2
-    * label *label64
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label58 always
-    * label *label63
-    * jump *label65 notEqual *tmp19 3
-    * label *label66
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label58 always
-    * label *label65
-    * jump *label67 notEqual *tmp19 4
-    * label *label68
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label58 always
-    * label *label67
-    * jump *label69 notEqual *tmp19 5
-    * label *label70
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label58 always
-    * label *label69
-    * jump *label71 notEqual *tmp19 6
-    * label *label72
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label58 always
-    * label *label71
-    * jump *label73 notEqual *tmp19 7
-    * label *label74
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label58 always
-    * label *label73
-    * jump *label75 notEqual *tmp19 8
-    * label *label76
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label58 always
-    * label *label75
-    * jump *label77 notEqual *tmp19 9
-    * label *label78
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label77
-    * label *label58
-    * label *label57
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label79 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label79
-    * label *label80
-    * label *label55
-    * op add :displayItem:i :displayItem:i 1
-    * jump *label84 lessThan :displayItem:i 4
-    * label *label56
+  210 set :displayItem:i 0
+  211 label *label85
+  212 label *label86
+  213 op mod *tmp19 :displayItem:amount 10
+  214 # "Function: def drawDigit(in x, in y, in digit)"
+  215 jump *label88 notEqual *tmp19 0
+  216 label *label87
+  217 op sub *tmp24 :displayItem:x 1
+  218 op sub *tmp26 :displayItem:y 1
+  219 draw lineRect *tmp24 *tmp26 9 14
+  220 jump *label107 always
+  221 label *label88
+  222 jump *label90 notEqual *tmp19 1
+  223 label *label89
+  224 op add *tmp28 :displayItem:x 6
+  225 op add *tmp31 :displayItem:y 12
+  226 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  227 jump *label107 always
+  228 label *label90
+  229 jump *label92 notEqual *tmp19 2
+  230 label *label91
+  231 op add *tmp32 :displayItem:x 7
+  232 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  233 op add *tmp33 :displayItem:y 6
+  234 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  235 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  236 op add *tmp40 :displayItem:y 12
+  237 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  238 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  239 jump *label107 always
+  240 label *label92
+  241 jump *label94 notEqual *tmp19 3
+  242 label *label93
+  243 op add *tmp44 :displayItem:x 7
+  244 op add *tmp46 :displayItem:y 12
+  245 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  246 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  247 op add *tmp48 :displayItem:y 6
+  248 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  249 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  250 jump *label107 always
+  251 label *label94
+  252 jump *label96 notEqual *tmp19 4
+  253 label *label95
+  254 op add *tmp54 :displayItem:x 7
+  255 op add *tmp56 :displayItem:y 12
+  256 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  257 op add *tmp57 :displayItem:y 6
+  258 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  259 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  260 jump *label107 always
+  261 label *label96
+  262 jump *label98 notEqual *tmp19 5
+  263 label *label97
+  264 op add *tmp62 :displayItem:x 7
+  265 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  266 op add *tmp65 :displayItem:y 6
+  267 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  268 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  269 op add *tmp70 :displayItem:y 12
+  270 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  271 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  272 jump *label107 always
+  273 label *label98
+  274 jump *label100 notEqual *tmp19 6
+  275 label *label99
+  276 op add *tmp74 :displayItem:y 12
+  277 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  278 op add *tmp75 :displayItem:x 7
+  279 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  280 op add *tmp78 :displayItem:y 6
+  281 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  282 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  283 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  284 jump *label107 always
+  285 label *label100
+  286 jump *label102 notEqual *tmp19 7
+  287 label *label101
+  288 op add *tmp86 :displayItem:x 6
+  289 op add *tmp89 :displayItem:y 12
+  290 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  291 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  292 jump *label107 always
+  293 label *label102
+  294 jump *label104 notEqual *tmp19 8
+  295 label *label103
+  296 op sub *tmp95 :displayItem:x 1
+  297 op sub *tmp97 :displayItem:y 1
+  298 draw lineRect *tmp95 *tmp97 9 14
+  299 op add *tmp98 :displayItem:y 6
+  300 op add *tmp99 :displayItem:x 7
+  301 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  302 jump *label107 always
+  303 label *label104
+  304 jump *label106 notEqual *tmp19 9
+  305 label *label105
+  306 op add *tmp101 :displayItem:x 7
+  307 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  308 op add *tmp104 :displayItem:y 12
+  309 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  310 op add *tmp105 :displayItem:y 6
+  311 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  312 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  313 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  314 label *label106
+  315 label *label107
+  316 label *label108
+  317 op sub :displayItem:x :displayItem:x 11
+  318 op idiv :displayItem:amount :displayItem:amount 10
+  319 jump *label109 notEqual :displayItem:amount 0
+  320 jump *label53 always
+  321 label *label109
+  322 label *label110
+  323 label *label111
+  324 op add :displayItem:i :displayItem:i 1
+  325 label *label112
+  326 op mod *tmp19 :displayItem:amount 10
+  327 # "Function: def drawDigit(in x, in y, in digit)"
+  328 jump *label114 notEqual *tmp19 0
+  329 label *label113
+  330 op sub *tmp24 :displayItem:x 1
+  331 op sub *tmp26 :displayItem:y 1
+  332 draw lineRect *tmp24 *tmp26 9 14
+  333 jump *label133 always
+  334 label *label114
+  335 jump *label116 notEqual *tmp19 1
+  336 label *label115
+  337 op add *tmp28 :displayItem:x 6
+  338 op add *tmp31 :displayItem:y 12
+  339 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  340 jump *label133 always
+  341 label *label116
+  342 jump *label118 notEqual *tmp19 2
+  343 label *label117
+  344 op add *tmp32 :displayItem:x 7
+  345 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  346 op add *tmp33 :displayItem:y 6
+  347 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  348 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  349 op add *tmp40 :displayItem:y 12
+  350 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  351 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  352 jump *label133 always
+  353 label *label118
+  354 jump *label120 notEqual *tmp19 3
+  355 label *label119
+  356 op add *tmp44 :displayItem:x 7
+  357 op add *tmp46 :displayItem:y 12
+  358 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  359 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  360 op add *tmp48 :displayItem:y 6
+  361 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  362 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  363 jump *label133 always
+  364 label *label120
+  365 jump *label122 notEqual *tmp19 4
+  366 label *label121
+  367 op add *tmp54 :displayItem:x 7
+  368 op add *tmp56 :displayItem:y 12
+  369 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  370 op add *tmp57 :displayItem:y 6
+  371 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  372 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  373 jump *label133 always
+  374 label *label122
+  375 jump *label124 notEqual *tmp19 5
+  376 label *label123
+  377 op add *tmp62 :displayItem:x 7
+  378 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  379 op add *tmp65 :displayItem:y 6
+  380 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  381 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  382 op add *tmp70 :displayItem:y 12
+  383 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  384 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  385 jump *label133 always
+  386 label *label124
+  387 jump *label126 notEqual *tmp19 6
+  388 label *label125
+  389 op add *tmp74 :displayItem:y 12
+  390 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  391 op add *tmp75 :displayItem:x 7
+  392 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  393 op add *tmp78 :displayItem:y 6
+  394 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  395 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  396 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  397 jump *label133 always
+  398 label *label126
+  399 jump *label128 notEqual *tmp19 7
+  400 label *label127
+  401 op add *tmp86 :displayItem:x 6
+  402 op add *tmp89 :displayItem:y 12
+  403 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  404 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  405 jump *label133 always
+  406 label *label128
+  407 jump *label130 notEqual *tmp19 8
+  408 label *label129
+  409 op sub *tmp95 :displayItem:x 1
+  410 op sub *tmp97 :displayItem:y 1
+  411 draw lineRect *tmp95 *tmp97 9 14
+  412 op add *tmp98 :displayItem:y 6
+  413 op add *tmp99 :displayItem:x 7
+  414 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  415 jump *label133 always
+  416 label *label130
+  417 jump *label132 notEqual *tmp19 9
+  418 label *label131
+  419 op add *tmp101 :displayItem:x 7
+  420 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  421 op add *tmp104 :displayItem:y 12
+  422 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  423 op add *tmp105 :displayItem:y 6
+  424 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  425 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  426 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  427 label *label132
+  428 label *label133
+  429 label *label134
+  430 op sub :displayItem:x :displayItem:x 11
+  431 op idiv :displayItem:amount :displayItem:amount 10
+  432 jump *label135 notEqual :displayItem:amount 0
+  433 jump *label53 always
+  434 label *label135
+  435 label *label136
+  436 label *label137
+  437 op add :displayItem:i :displayItem:i 1
+  438 label *label138
+  439 op mod *tmp19 :displayItem:amount 10
+  440 # "Function: def drawDigit(in x, in y, in digit)"
+  441 jump *label140 notEqual *tmp19 0
+  442 label *label139
+  443 op sub *tmp24 :displayItem:x 1
+  444 op sub *tmp26 :displayItem:y 1
+  445 draw lineRect *tmp24 *tmp26 9 14
+  446 jump *label159 always
+  447 label *label140
+  448 jump *label142 notEqual *tmp19 1
+  449 label *label141
+  450 op add *tmp28 :displayItem:x 6
+  451 op add *tmp31 :displayItem:y 12
+  452 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  453 jump *label159 always
+  454 label *label142
+  455 jump *label144 notEqual *tmp19 2
+  456 label *label143
+  457 op add *tmp32 :displayItem:x 7
+  458 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  459 op add *tmp33 :displayItem:y 6
+  460 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  461 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  462 op add *tmp40 :displayItem:y 12
+  463 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  464 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  465 jump *label159 always
+  466 label *label144
+  467 jump *label146 notEqual *tmp19 3
+  468 label *label145
+  469 op add *tmp44 :displayItem:x 7
+  470 op add *tmp46 :displayItem:y 12
+  471 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  472 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  473 op add *tmp48 :displayItem:y 6
+  474 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  475 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  476 jump *label159 always
+  477 label *label146
+  478 jump *label148 notEqual *tmp19 4
+  479 label *label147
+  480 op add *tmp54 :displayItem:x 7
+  481 op add *tmp56 :displayItem:y 12
+  482 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  483 op add *tmp57 :displayItem:y 6
+  484 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  485 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  486 jump *label159 always
+  487 label *label148
+  488 jump *label150 notEqual *tmp19 5
+  489 label *label149
+  490 op add *tmp62 :displayItem:x 7
+  491 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  492 op add *tmp65 :displayItem:y 6
+  493 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  494 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  495 op add *tmp70 :displayItem:y 12
+  496 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  497 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  498 jump *label159 always
+  499 label *label150
+  500 jump *label152 notEqual *tmp19 6
+  501 label *label151
+  502 op add *tmp74 :displayItem:y 12
+  503 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  504 op add *tmp75 :displayItem:x 7
+  505 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  506 op add *tmp78 :displayItem:y 6
+  507 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  508 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  509 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  510 jump *label159 always
+  511 label *label152
+  512 jump *label154 notEqual *tmp19 7
+  513 label *label153
+  514 op add *tmp86 :displayItem:x 6
+  515 op add *tmp89 :displayItem:y 12
+  516 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  517 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  518 jump *label159 always
+  519 label *label154
+  520 jump *label156 notEqual *tmp19 8
+  521 label *label155
+  522 op sub *tmp95 :displayItem:x 1
+  523 op sub *tmp97 :displayItem:y 1
+  524 draw lineRect *tmp95 *tmp97 9 14
+  525 op add *tmp98 :displayItem:y 6
+  526 op add *tmp99 :displayItem:x 7
+  527 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  528 jump *label159 always
+  529 label *label156
+  530 jump *label158 notEqual *tmp19 9
+  531 label *label157
+  532 op add *tmp101 :displayItem:x 7
+  533 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  534 op add *tmp104 :displayItem:y 12
+  535 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  536 op add *tmp105 :displayItem:y 6
+  537 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  538 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  539 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  540 label *label158
+  541 label *label159
+  542 label *label160
+  543 op sub :displayItem:x :displayItem:x 11
+  544 op idiv :displayItem:amount :displayItem:amount 10
+  545 jump *label161 notEqual :displayItem:amount 0
+  546 jump *label53 always
+  547 label *label161
+  548 label *label162
+  549 label *label163
+  550 op add :displayItem:i :displayItem:i 1
+  551 label *label164
+  552 op mod *tmp19 :displayItem:amount 10
+  553 # "Function: def drawDigit(in x, in y, in digit)"
+  554 jump *label166 notEqual *tmp19 0
+  555 label *label165
+  556 op sub *tmp24 :displayItem:x 1
+  557 op sub *tmp26 :displayItem:y 1
+  558 draw lineRect *tmp24 *tmp26 9 14
+  559 jump *label185 always
+  560 label *label166
+  561 jump *label168 notEqual *tmp19 1
+  562 label *label167
+  563 op add *tmp28 :displayItem:x 6
+  564 op add *tmp31 :displayItem:y 12
+  565 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  566 jump *label185 always
+  567 label *label168
+  568 jump *label170 notEqual *tmp19 2
+  569 label *label169
+  570 op add *tmp32 :displayItem:x 7
+  571 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  572 op add *tmp33 :displayItem:y 6
+  573 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  574 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  575 op add *tmp40 :displayItem:y 12
+  576 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  577 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  578 jump *label185 always
+  579 label *label170
+  580 jump *label172 notEqual *tmp19 3
+  581 label *label171
+  582 op add *tmp44 :displayItem:x 7
+  583 op add *tmp46 :displayItem:y 12
+  584 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  585 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  586 op add *tmp48 :displayItem:y 6
+  587 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  588 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  589 jump *label185 always
+  590 label *label172
+  591 jump *label174 notEqual *tmp19 4
+  592 label *label173
+  593 op add *tmp54 :displayItem:x 7
+  594 op add *tmp56 :displayItem:y 12
+  595 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  596 op add *tmp57 :displayItem:y 6
+  597 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  598 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  599 jump *label185 always
+  600 label *label174
+  601 jump *label176 notEqual *tmp19 5
+  602 label *label175
+  603 op add *tmp62 :displayItem:x 7
+  604 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  605 op add *tmp65 :displayItem:y 6
+  606 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  607 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  608 op add *tmp70 :displayItem:y 12
+  609 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  610 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  611 jump *label185 always
+  612 label *label176
+  613 jump *label178 notEqual *tmp19 6
+  614 label *label177
+  615 op add *tmp74 :displayItem:y 12
+  616 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  617 op add *tmp75 :displayItem:x 7
+  618 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  619 op add *tmp78 :displayItem:y 6
+  620 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  621 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  622 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  623 jump *label185 always
+  624 label *label178
+  625 jump *label180 notEqual *tmp19 7
+  626 label *label179
+  627 op add *tmp86 :displayItem:x 6
+  628 op add *tmp89 :displayItem:y 12
+  629 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  630 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  631 jump *label185 always
+  632 label *label180
+  633 jump *label182 notEqual *tmp19 8
+  634 label *label181
+  635 op sub *tmp95 :displayItem:x 1
+  636 op sub *tmp97 :displayItem:y 1
+  637 draw lineRect *tmp95 *tmp97 9 14
+  638 op add *tmp98 :displayItem:y 6
+  639 op add *tmp99 :displayItem:x 7
+  640 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  641 jump *label185 always
+  642 label *label182
+  643 jump *label184 notEqual *tmp19 9
+  644 label *label183
+  645 op add *tmp101 :displayItem:x 7
+  646 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  647 op add *tmp104 :displayItem:y 12
+  648 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  649 op add *tmp105 :displayItem:y 6
+  650 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  651 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  652 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  653 label *label184
+  654 label *label185
+  655 label *label186
+  656 op sub :displayItem:x :displayItem:x 11
+  657 op idiv :displayItem:amount :displayItem:amount 10
+  658 jump *label187 notEqual :displayItem:amount 0
+  659 jump *label53 always
+  660 label *label187
+  661 label *label188
+  662 label *label189
+  663 op add :displayItem:i :displayItem:i 1
+  664 label *label56
   665 # "Function: def drawDigit12(in x, in y, in digit)"
   666 jump *label82 notEqual :displayItem:amount 1
   667 op add *tmp119 :displayItem:x 6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   321 label *label109
   322 label *label110
   323 label *label111
-    * op add :displayItem:i :displayItem:i 1
+  324 op add :displayItem:i 0 1
   325 label *label112
   326 op mod *tmp19 :displayItem:amount 10
   327 # "Function: def drawDigit(in x, in y, in digit)"
 
   434 label *label135
   435 label *label136
   436 label *label137
-    * op add :displayItem:i :displayItem:i 1
+  437 op add :displayItem:i 1 1
   438 label *label138
   439 op mod *tmp19 :displayItem:amount 10
   440 # "Function: def drawDigit(in x, in y, in digit)"
 
   547 label *label161
   548 label *label162
   549 label *label163
-    * op add :displayItem:i :displayItem:i 1
+  550 op add :displayItem:i 2 1
   551 label *label164
   552 op mod *tmp19 :displayItem:amount 10
   553 # "Function: def drawDigit(in x, in y, in digit)"
 
   660 label *label187
   661 label *label188
   662 label *label189
-    * op add :displayItem:i :displayItem:i 1
+  663 op add :displayItem:i 3 1
   664 label *label56
   665 # "Function: def drawDigit12(in x, in y, in digit)"
   666 jump *label82 notEqual :displayItem:amount 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   207 # "Function: void displayItem(in x, in y)"
   208 op max :displayItem:amount AMOUNT 0
   209 draw color 0 255 0 255
-    * set :displayItem:i 0
   210 label *label85
   211 label *label86
   212 op mod *tmp19 :displayItem:amount 10
 
   320 label *label109
   321 label *label110
   322 label *label111
-    * op add :displayItem:i 0 1
   323 label *label112
   324 op mod *tmp19 :displayItem:amount 10
   325 # "Function: def drawDigit(in x, in y, in digit)"
 
   432 label *label135
   433 label *label136
   434 label *label137
-    * op add :displayItem:i 1 1
   435 label *label138
   436 op mod *tmp19 :displayItem:amount 10
   437 # "Function: def drawDigit(in x, in y, in digit)"
 
   544 label *label161
   545 label *label162
   546 label *label163
-    * op add :displayItem:i 2 1
   547 label *label164
   548 op mod *tmp19 :displayItem:amount 10
   549 # "Function: def drawDigit(in x, in y, in digit)"
 
   656 label *label187
   657 label *label188
   658 label *label189
-    * op add :displayItem:i 3 1
   659 label *label56
   660 # "Function: def drawDigit12(in x, in y, in digit)"
   661 jump *label82 notEqual :displayItem:amount 1

Modifications by Inline function 'eraseNumbers' defined at line 77:1 (-1 instructions):
 
    88 drawflush display1
    89 set :y 152
    90 set :eraseNumbers:first_column true
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+   91 label *label190
+   92 # "Function: def eraseNumbers(in first_column)"
+   93 draw color 0 0 80 255
+   94 jump *label191 equal :eraseNumbers:first_column false
+   95 draw rect 23 0 70 176
+   96 jump *label192 always
+   97 label *label191
+   98 draw rect 109 0 176 176
+   99 label *label192
+  100 label *label193
   101 set :index 0
   102 set :item @sand
   103 op add *tmp10 @counter 1
 
   179 drawflush display1
   180 set :y 152
   181 set :eraseNumbers:first_column false
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+  182 label *label194
+  183 # "Function: def eraseNumbers(in first_column)"
+  184 draw color 0 0 80 255
+  185 jump *label195 equal :eraseNumbers:first_column false
+  186 draw rect 23 0 70 176
+  187 jump *label196 always
+  188 label *label195
+  189 draw rect 109 0 176 176
+  190 label *label196
+  191 label *label197
   192 label *label45
   193 label *label46
   194 label *label25
 
   209 label *label47
   210 return :eraseImages*retaddr
   211 end
-    * label *label1
-    * # "Function: def eraseNumbers(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label51 equal :eraseNumbers:first_column false
-    * draw rect 23 0 70 176
-    * jump *label52 always
-    * label *label51
-    * draw rect 109 0 176 176
-    * label *label52
-    * label *label50
-    * return :eraseNumbers*retaddr
-    * end
   212 label *label2
   213 # "Function: void displayItem(in x, in y)"
   214 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    91 label *label190
    92 # "Function: def eraseNumbers(in first_column)"
    93 draw color 0 0 80 255
-    * jump *label191 equal :eraseNumbers:first_column false
+   94 jump *label191 equal true false
    95 draw rect 23 0 70 176
    96 jump *label192 always
    97 label *label191
 
   182 label *label194
   183 # "Function: def eraseNumbers(in first_column)"
   184 draw color 0 0 80 255
-    * jump *label195 equal :eraseNumbers:first_column false
+  185 jump *label195 equal false false
   186 draw rect 23 0 70 176
   187 jump *label196 always
   188 label *label195

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    87 label *label5
    88 drawflush display1
    89 set :y 152
-    * set :eraseNumbers:first_column true
    90 label *label190
    91 # "Function: def eraseNumbers(in first_column)"
    92 draw color 0 0 80 255
 
   177 jump *label45 notEqual :index 8
   178 drawflush display1
   179 set :y 152
-    * set :eraseNumbers:first_column false
   180 label *label194
   181 # "Function: def eraseNumbers(in first_column)"
   182 draw color 0 0 80 255

Modifications by Inline function 'eraseImages' defined at line 68:1 (-1 instructions):
 
     2 set :x 7
     3 set :y 152
     4 set :eraseImages:first_column true
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+    5 label *label198
+    6 # "Function: def eraseImages(in first_column)"
+    7 draw color 0 0 80 255
+    8 jump *label199 equal :eraseImages:first_column false
+    9 draw rect 0 0 23 176
+   10 jump *label200 always
+   11 label *label199
+   12 draw rect 93 0 16 176
+   13 label *label200
+   14 label *label201
    15 set :eraseImages:first_column false
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+   16 label *label202
+   17 # "Function: def eraseImages(in first_column)"
+   18 draw color 0 0 80 255
+   19 jump *label203 equal :eraseImages:first_column false
+   20 draw rect 0 0 23 176
+   21 jump *label204 always
+   22 label *label203
+   23 draw rect 93 0 16 176
+   24 label *label204
+   25 label *label205
    26 draw color 255 255 255 255
    27 set :index 0
    28 set :item @sand
 
   213 label *label26
   214 drawflush display1
   215 end
-    * label *label0
-    * # "Function: def eraseImages(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label48 equal :eraseImages:first_column false
-    * draw rect 0 0 23 176
-    * jump *label49 always
-    * label *label48
-    * draw rect 93 0 16 176
-    * label *label49
-    * label *label47
-    * return :eraseImages*retaddr
-    * end
   216 label *label2
   217 # "Function: void displayItem(in x, in y)"
   218 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 label *label198
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label199 equal :eraseImages:first_column false
+    8 jump *label199 equal true false
     9 draw rect 0 0 23 176
    10 jump *label200 always
    11 label *label199
 
    16 label *label202
    17 # "Function: def eraseImages(in first_column)"
    18 draw color 0 0 80 255
-    * jump *label203 equal :eraseImages:first_column false
+   19 jump *label203 equal false false
    20 draw rect 0 0 23 176
    21 jump *label204 always
    22 label *label203

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     1 draw stroke 2
     2 set :x 7
     3 set :y 152
-    * set :eraseImages:first_column true
     4 label *label198
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
 
    11 draw rect 93 0 16 176
    12 label *label200
    13 label *label201
-    * set :eraseImages:first_column false
    14 label *label202
    15 # "Function: def eraseImages(in first_column)"
    16 draw color 0 0 80 255

Modifications by Unroll iteration loop at line 32:1 (+103 instructions):
 
    23 label *label205
    24 draw color 255 255 255 255
    25 set :index 0
-    * set :item @sand
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label6 (m:marker0)
-    * set :item @copper
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label7 (m:marker0)
-    * set :item @lead
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label8 (m:marker0)
-    * set :item @coal
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label9 (m:marker0)
-    * set :item @titanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label10 (m:marker0)
-    * set :item @thorium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label11 (m:marker0)
-    * set :item @scrap
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label12 (m:marker0)
-    * set :item @graphite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label13 (m:marker0)
-    * set :item @metaglass
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label14 (m:marker0)
-    * set :item @silicon
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label15 (m:marker0)
-    * set :item @pyratite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label16 (m:marker0)
-    * set :item @blast-compound
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label17 (m:marker0)
-    * set :item @plastanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label18 (m:marker0)
-    * set :item @phase-fabric
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label19 (m:marker0)
-    * set :item @surge-alloy
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label20 (m:marker0)
-    * set :item @spore-pod
-    * set *tmp2 null
-    * label *label3
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label22 notEqual :index 8
-    * set :y 152
-    * set :x 93
-    * draw color 255 255 255 255
-    * label *label22
-    * label *label23
-    * label *label4
-    * multijump *tmp2 0 0 (m:marker0)
-    * multilabel *label21 (m:marker0)
-    * label *label5
+   26 set :item @sand
+   27 label *label206
+   28 op add *tmp3 :x 8
+   29 op add *tmp6 :y 7
+   30 draw image *tmp3 *tmp6 :item 16 0
+   31 op add :index :index 1
+   32 op sub :y :y 20
+   33 jump *label207 notEqual :index 8
+   34 set :y 152
+   35 set :x 93
+   36 draw color 255 255 255 255
+   37 label *label207
+   38 label *label208
+   39 label *label209
+   40 set :item @copper
+   41 label *label212
+   42 op add *tmp3 :x 8
+   43 op add *tmp6 :y 7
+   44 draw image *tmp3 *tmp6 :item 16 0
+   45 op add :index :index 1
+   46 op sub :y :y 20
+   47 jump *label213 notEqual :index 8
+   48 set :y 152
+   49 set :x 93
+   50 draw color 255 255 255 255
+   51 label *label213
+   52 label *label214
+   53 label *label215
+   54 set :item @lead
+   55 label *label218
+   56 op add *tmp3 :x 8
+   57 op add *tmp6 :y 7
+   58 draw image *tmp3 *tmp6 :item 16 0
+   59 op add :index :index 1
+   60 op sub :y :y 20
+   61 jump *label219 notEqual :index 8
+   62 set :y 152
+   63 set :x 93
+   64 draw color 255 255 255 255
+   65 label *label219
+   66 label *label220
+   67 label *label221
+   68 set :item @coal
+   69 label *label224
+   70 op add *tmp3 :x 8
+   71 op add *tmp6 :y 7
+   72 draw image *tmp3 *tmp6 :item 16 0
+   73 op add :index :index 1
+   74 op sub :y :y 20
+   75 jump *label225 notEqual :index 8
+   76 set :y 152
+   77 set :x 93
+   78 draw color 255 255 255 255
+   79 label *label225
+   80 label *label226
+   81 label *label227
+   82 set :item @titanium
+   83 label *label230
+   84 op add *tmp3 :x 8
+   85 op add *tmp6 :y 7
+   86 draw image *tmp3 *tmp6 :item 16 0
+   87 op add :index :index 1
+   88 op sub :y :y 20
+   89 jump *label231 notEqual :index 8
+   90 set :y 152
+   91 set :x 93
+   92 draw color 255 255 255 255
+   93 label *label231
+   94 label *label232
+   95 label *label233
+   96 set :item @thorium
+   97 label *label236
+   98 op add *tmp3 :x 8
+   99 op add *tmp6 :y 7
+  100 draw image *tmp3 *tmp6 :item 16 0
+  101 op add :index :index 1
+  102 op sub :y :y 20
+  103 jump *label237 notEqual :index 8
+  104 set :y 152
+  105 set :x 93
+  106 draw color 255 255 255 255
+  107 label *label237
+  108 label *label238
+  109 label *label239
+  110 set :item @scrap
+  111 label *label242
+  112 op add *tmp3 :x 8
+  113 op add *tmp6 :y 7
+  114 draw image *tmp3 *tmp6 :item 16 0
+  115 op add :index :index 1
+  116 op sub :y :y 20
+  117 jump *label243 notEqual :index 8
+  118 set :y 152
+  119 set :x 93
+  120 draw color 255 255 255 255
+  121 label *label243
+  122 label *label244
+  123 label *label245
+  124 set :item @graphite
+  125 label *label248
+  126 op add *tmp3 :x 8
+  127 op add *tmp6 :y 7
+  128 draw image *tmp3 *tmp6 :item 16 0
+  129 op add :index :index 1
+  130 op sub :y :y 20
+  131 jump *label249 notEqual :index 8
+  132 set :y 152
+  133 set :x 93
+  134 draw color 255 255 255 255
+  135 label *label249
+  136 label *label250
+  137 label *label251
+  138 set :item @metaglass
+  139 label *label254
+  140 op add *tmp3 :x 8
+  141 op add *tmp6 :y 7
+  142 draw image *tmp3 *tmp6 :item 16 0
+  143 op add :index :index 1
+  144 op sub :y :y 20
+  145 jump *label255 notEqual :index 8
+  146 set :y 152
+  147 set :x 93
+  148 draw color 255 255 255 255
+  149 label *label255
+  150 label *label256
+  151 label *label257
+  152 set :item @silicon
+  153 label *label260
+  154 op add *tmp3 :x 8
+  155 op add *tmp6 :y 7
+  156 draw image *tmp3 *tmp6 :item 16 0
+  157 op add :index :index 1
+  158 op sub :y :y 20
+  159 jump *label261 notEqual :index 8
+  160 set :y 152
+  161 set :x 93
+  162 draw color 255 255 255 255
+  163 label *label261
+  164 label *label262
+  165 label *label263
+  166 set :item @pyratite
+  167 label *label266
+  168 op add *tmp3 :x 8
+  169 op add *tmp6 :y 7
+  170 draw image *tmp3 *tmp6 :item 16 0
+  171 op add :index :index 1
+  172 op sub :y :y 20
+  173 jump *label267 notEqual :index 8
+  174 set :y 152
+  175 set :x 93
+  176 draw color 255 255 255 255
+  177 label *label267
+  178 label *label268
+  179 label *label269
+  180 set :item @blast-compound
+  181 label *label272
+  182 op add *tmp3 :x 8
+  183 op add *tmp6 :y 7
+  184 draw image *tmp3 *tmp6 :item 16 0
+  185 op add :index :index 1
+  186 op sub :y :y 20
+  187 jump *label273 notEqual :index 8
+  188 set :y 152
+  189 set :x 93
+  190 draw color 255 255 255 255
+  191 label *label273
+  192 label *label274
+  193 label *label275
+  194 set :item @plastanium
+  195 label *label278
+  196 op add *tmp3 :x 8
+  197 op add *tmp6 :y 7
+  198 draw image *tmp3 *tmp6 :item 16 0
+  199 op add :index :index 1
+  200 op sub :y :y 20
+  201 jump *label279 notEqual :index 8
+  202 set :y 152
+  203 set :x 93
+  204 draw color 255 255 255 255
+  205 label *label279
+  206 label *label280
+  207 label *label281
+  208 set :item @phase-fabric
+  209 label *label284
+  210 op add *tmp3 :x 8
+  211 op add *tmp6 :y 7
+  212 draw image *tmp3 *tmp6 :item 16 0
+  213 op add :index :index 1
+  214 op sub :y :y 20
+  215 jump *label285 notEqual :index 8
+  216 set :y 152
+  217 set :x 93
+  218 draw color 255 255 255 255
+  219 label *label285
+  220 label *label286
+  221 label *label287
+  222 set :item @surge-alloy
+  223 label *label290
+  224 op add *tmp3 :x 8
+  225 op add *tmp6 :y 7
+  226 draw image *tmp3 *tmp6 :item 16 0
+  227 op add :index :index 1
+  228 op sub :y :y 20
+  229 jump *label291 notEqual :index 8
+  230 set :y 152
+  231 set :x 93
+  232 draw color 255 255 255 255
+  233 label *label291
+  234 label *label292
+  235 label *label293
+  236 set :item @spore-pod
+  237 label *label296
+  238 op add *tmp3 :x 8
+  239 op add *tmp6 :y 7
+  240 draw image *tmp3 *tmp6 :item 16 0
+  241 op add :index :index 1
+  242 op sub :y :y 20
+  243 jump *label297 notEqual :index 8
+  244 set :y 152
+  245 set :x 93
+  246 draw color 255 255 255 255
+  247 label *label297
+  248 label *label298
+  249 label *label299
+  250 label *label5
   251 drawflush display1
   252 set :y 152
   253 label *label190

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-30 instructions):
 
    25 set :index 0
    26 set :item @sand
    27 label *label206
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label207 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   28 op add *tmp3 7 8
+   29 op add *tmp6 152 7
+   30 draw image 15 159 @sand 16 0
+   31 op add :index 0 1
+   32 op sub :y 152 20
+   33 jump *label207 notEqual 1 8
    34 draw color 255 255 255 255
    35 label *label207
    36 label *label208
    37 label *label209
    38 set :item @copper
    39 label *label212
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label213 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   40 op add *tmp3 7 8
+   41 op add *tmp6 132 7
+   42 draw image 15 139 @copper 16 0
+   43 op add :index 1 1
+   44 op sub :y 132 20
+   45 jump *label213 notEqual 2 8
    46 draw color 255 255 255 255
    47 label *label213
    48 label *label214
    49 label *label215
    50 set :item @lead
    51 label *label218
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label219 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   52 op add *tmp3 7 8
+   53 op add *tmp6 112 7
+   54 draw image 15 119 @lead 16 0
+   55 op add :index 2 1
+   56 op sub :y 112 20
+   57 jump *label219 notEqual 3 8
    58 draw color 255 255 255 255
    59 label *label219
    60 label *label220
    61 label *label221
    62 set :item @coal
    63 label *label224
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label225 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   64 op add *tmp3 7 8
+   65 op add *tmp6 92 7
+   66 draw image 15 99 @coal 16 0
+   67 op add :index 3 1
+   68 op sub :y 92 20
+   69 jump *label225 notEqual 4 8
    70 draw color 255 255 255 255
    71 label *label225
    72 label *label226
    73 label *label227
    74 set :item @titanium
    75 label *label230
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label231 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   76 op add *tmp3 7 8
+   77 op add *tmp6 72 7
+   78 draw image 15 79 @titanium 16 0
+   79 op add :index 4 1
+   80 op sub :y 72 20
+   81 jump *label231 notEqual 5 8
    82 draw color 255 255 255 255
    83 label *label231
    84 label *label232
    85 label *label233
    86 set :item @thorium
    87 label *label236
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label237 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   88 op add *tmp3 7 8
+   89 op add *tmp6 52 7
+   90 draw image 15 59 @thorium 16 0
+   91 op add :index 5 1
+   92 op sub :y 52 20
+   93 jump *label237 notEqual 6 8
    94 draw color 255 255 255 255
    95 label *label237
    96 label *label238
    97 label *label239
    98 set :item @scrap
    99 label *label242
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label243 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  100 op add *tmp3 7 8
+  101 op add *tmp6 32 7
+  102 draw image 15 39 @scrap 16 0
+  103 op add :index 6 1
+  104 op sub :y 32 20
+  105 jump *label243 notEqual 7 8
   106 draw color 255 255 255 255
   107 label *label243
   108 label *label244
   109 label *label245
   110 set :item @graphite
   111 label *label248
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label249 notEqual :index 8
+  112 op add *tmp3 7 8
+  113 op add *tmp6 12 7
+  114 draw image 15 19 @graphite 16 0
+  115 op add :index 7 1
+  116 op sub :y 12 20
+  117 jump *label249 notEqual 8 8
   118 set :y 152
   119 set :x 93
   120 draw color 255 255 255 255
 
   123 label *label251
   124 set :item @metaglass
   125 label *label254
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label255 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  126 op add *tmp3 93 8
+  127 op add *tmp6 152 7
+  128 draw image 101 159 @metaglass 16 0
+  129 op add :index 8 1
+  130 op sub :y 152 20
+  131 jump *label255 notEqual 9 8
   132 draw color 255 255 255 255
   133 label *label255
   134 label *label256
   135 label *label257
   136 set :item @silicon
   137 label *label260
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label261 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  138 op add *tmp3 93 8
+  139 op add *tmp6 132 7
+  140 draw image 101 139 @silicon 16 0
+  141 op add :index 9 1
+  142 op sub :y 132 20
+  143 jump *label261 notEqual 10 8
   144 draw color 255 255 255 255
   145 label *label261
   146 label *label262
   147 label *label263
   148 set :item @pyratite
   149 label *label266
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label267 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  150 op add *tmp3 93 8
+  151 op add *tmp6 112 7
+  152 draw image 101 119 @pyratite 16 0
+  153 op add :index 10 1
+  154 op sub :y 112 20
+  155 jump *label267 notEqual 11 8
   156 draw color 255 255 255 255
   157 label *label267
   158 label *label268
   159 label *label269
   160 set :item @blast-compound
   161 label *label272
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label273 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  162 op add *tmp3 93 8
+  163 op add *tmp6 92 7
+  164 draw image 101 99 @blast-compound 16 0
+  165 op add :index 11 1
+  166 op sub :y 92 20
+  167 jump *label273 notEqual 12 8
   168 draw color 255 255 255 255
   169 label *label273
   170 label *label274
   171 label *label275
   172 set :item @plastanium
   173 label *label278
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label279 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  174 op add *tmp3 93 8
+  175 op add *tmp6 72 7
+  176 draw image 101 79 @plastanium 16 0
+  177 op add :index 12 1
+  178 op sub :y 72 20
+  179 jump *label279 notEqual 13 8
   180 draw color 255 255 255 255
   181 label *label279
   182 label *label280
   183 label *label281
   184 set :item @phase-fabric
   185 label *label284
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label285 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  186 op add *tmp3 93 8
+  187 op add *tmp6 52 7
+  188 draw image 101 59 @phase-fabric 16 0
+  189 op add :index 13 1
+  190 op sub :y 52 20
+  191 jump *label285 notEqual 14 8
   192 draw color 255 255 255 255
   193 label *label285
   194 label *label286
   195 label *label287
   196 set :item @surge-alloy
   197 label *label290
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label291 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  198 op add *tmp3 93 8
+  199 op add *tmp6 32 7
+  200 draw image 101 39 @surge-alloy 16 0
+  201 op add :index 14 1
+  202 op sub :y 32 20
+  203 jump *label291 notEqual 15 8
   204 draw color 255 255 255 255
   205 label *label291
   206 label *label292
   207 label *label293
   208 set :item @spore-pod
   209 label *label296
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label297 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  210 op add *tmp3 93 8
+  211 op add *tmp6 12 7
+  212 draw image 101 19 @spore-pod 16 0
+  213 op add :index 15 1
+  214 op sub :y 12 20
+  215 jump *label297 notEqual 16 8
   216 draw color 255 255 255 255
   217 label *label297
   218 label *label298

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-85 instructions):
     0 set AMOUNT 12345
     1 draw stroke 2
-    * set :x 7
-    * set :y 152
     2 label *label198
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
 
    20 label *label204
    21 label *label205
    22 draw color 255 255 255 255
-    * set :index 0
-    * set :item @sand
    23 label *label206
-    * op add *tmp3 7 8
-    * op add *tmp6 152 7
    24 draw image 15 159 @sand 16 0
-    * op add :index 0 1
-    * op sub :y 152 20
    25 jump *label207 notEqual 1 8
    26 draw color 255 255 255 255
    27 label *label207
    28 label *label208
    29 label *label209
-    * set :item @copper
    30 label *label212
-    * op add *tmp3 7 8
-    * op add *tmp6 132 7
    31 draw image 15 139 @copper 16 0
-    * op add :index 1 1
-    * op sub :y 132 20
    32 jump *label213 notEqual 2 8
    33 draw color 255 255 255 255
    34 label *label213
    35 label *label214
    36 label *label215
-    * set :item @lead
    37 label *label218
-    * op add *tmp3 7 8
-    * op add *tmp6 112 7
    38 draw image 15 119 @lead 16 0
-    * op add :index 2 1
-    * op sub :y 112 20
    39 jump *label219 notEqual 3 8
    40 draw color 255 255 255 255
    41 label *label219
    42 label *label220
    43 label *label221
-    * set :item @coal
    44 label *label224
-    * op add *tmp3 7 8
-    * op add *tmp6 92 7
    45 draw image 15 99 @coal 16 0
-    * op add :index 3 1
-    * op sub :y 92 20
    46 jump *label225 notEqual 4 8
    47 draw color 255 255 255 255
    48 label *label225
    49 label *label226
    50 label *label227
-    * set :item @titanium
    51 label *label230
-    * op add *tmp3 7 8
-    * op add *tmp6 72 7
    52 draw image 15 79 @titanium 16 0
-    * op add :index 4 1
-    * op sub :y 72 20
    53 jump *label231 notEqual 5 8
    54 draw color 255 255 255 255
    55 label *label231
    56 label *label232
    57 label *label233
-    * set :item @thorium
    58 label *label236
-    * op add *tmp3 7 8
-    * op add *tmp6 52 7
    59 draw image 15 59 @thorium 16 0
-    * op add :index 5 1
-    * op sub :y 52 20
    60 jump *label237 notEqual 6 8
    61 draw color 255 255 255 255
    62 label *label237
    63 label *label238
    64 label *label239
-    * set :item @scrap
    65 label *label242
-    * op add *tmp3 7 8
-    * op add *tmp6 32 7
    66 draw image 15 39 @scrap 16 0
-    * op add :index 6 1
-    * op sub :y 32 20
    67 jump *label243 notEqual 7 8
    68 draw color 255 255 255 255
    69 label *label243
    70 label *label244
    71 label *label245
-    * set :item @graphite
    72 label *label248
-    * op add *tmp3 7 8
-    * op add *tmp6 12 7
    73 draw image 15 19 @graphite 16 0
-    * op add :index 7 1
-    * op sub :y 12 20
    74 jump *label249 notEqual 8 8
-    * set :y 152
-    * set :x 93
    75 draw color 255 255 255 255
    76 label *label249
    77 label *label250
    78 label *label251
-    * set :item @metaglass
    79 label *label254
-    * op add *tmp3 93 8
-    * op add *tmp6 152 7
    80 draw image 101 159 @metaglass 16 0
-    * op add :index 8 1
-    * op sub :y 152 20
    81 jump *label255 notEqual 9 8
    82 draw color 255 255 255 255
    83 label *label255
    84 label *label256
    85 label *label257
-    * set :item @silicon
    86 label *label260
-    * op add *tmp3 93 8
-    * op add *tmp6 132 7
    87 draw image 101 139 @silicon 16 0
-    * op add :index 9 1
-    * op sub :y 132 20
    88 jump *label261 notEqual 10 8
    89 draw color 255 255 255 255
    90 label *label261
    91 label *label262
    92 label *label263
-    * set :item @pyratite
    93 label *label266
-    * op add *tmp3 93 8
-    * op add *tmp6 112 7
    94 draw image 101 119 @pyratite 16 0
-    * op add :index 10 1
-    * op sub :y 112 20
    95 jump *label267 notEqual 11 8
    96 draw color 255 255 255 255
    97 label *label267
    98 label *label268
    99 label *label269
-    * set :item @blast-compound
   100 label *label272
-    * op add *tmp3 93 8
-    * op add *tmp6 92 7
   101 draw image 101 99 @blast-compound 16 0
-    * op add :index 11 1
-    * op sub :y 92 20
   102 jump *label273 notEqual 12 8
   103 draw color 255 255 255 255
   104 label *label273
   105 label *label274
   106 label *label275
-    * set :item @plastanium
   107 label *label278
-    * op add *tmp3 93 8
-    * op add *tmp6 72 7
   108 draw image 101 79 @plastanium 16 0
-    * op add :index 12 1
-    * op sub :y 72 20
   109 jump *label279 notEqual 13 8
   110 draw color 255 255 255 255
   111 label *label279
   112 label *label280
   113 label *label281
-    * set :item @phase-fabric
   114 label *label284
-    * op add *tmp3 93 8
-    * op add *tmp6 52 7
   115 draw image 101 59 @phase-fabric 16 0
-    * op add :index 13 1
-    * op sub :y 52 20
   116 jump *label285 notEqual 14 8
   117 draw color 255 255 255 255
   118 label *label285
   119 label *label286
   120 label *label287
-    * set :item @surge-alloy
   121 label *label290
-    * op add *tmp3 93 8
-    * op add *tmp6 32 7
   122 draw image 101 39 @surge-alloy 16 0
-    * op add :index 14 1
-    * op sub :y 32 20
   123 jump *label291 notEqual 15 8
   124 draw color 255 255 255 255
   125 label *label291
   126 label *label292
   127 label *label293
-    * set :item @spore-pod
   128 label *label296
-    * op add *tmp3 93 8
-    * op add *tmp6 12 7
   129 draw image 101 19 @spore-pod 16 0
-    * op add :index 15 1
-    * op sub :y 12 20
   130 jump *label297 notEqual 16 8
   131 draw color 255 255 255 255
   132 label *label297

Modifications by Inline function 'displayItem' defined at line 86:1 (+349 instructions):
 
   213 jump *label43 greaterThanEq :index 8
   214 set :displayItem:x 71
   215 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  216 label *label303
+  217 # "Function: void displayItem(in x, in y)"
+  218 op max :displayItem:amount AMOUNT 0
+  219 draw color 0 255 0 255
+  220 label *label304
+  221 label *label305
+  222 op mod *tmp19 :displayItem:amount 10
+  223 # "Function: def drawDigit(in x, in y, in digit)"
+  224 jump *label307 notEqual *tmp19 0
+  225 label *label306
+  226 op sub *tmp24 :displayItem:x 1
+  227 op sub *tmp26 :displayItem:y 1
+  228 draw lineRect *tmp24 *tmp26 9 14
+  229 jump *label326 always
+  230 label *label307
+  231 jump *label309 notEqual *tmp19 1
+  232 label *label308
+  233 op add *tmp28 :displayItem:x 6
+  234 op add *tmp31 :displayItem:y 12
+  235 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  236 jump *label326 always
+  237 label *label309
+  238 jump *label311 notEqual *tmp19 2
+  239 label *label310
+  240 op add *tmp32 :displayItem:x 7
+  241 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  242 op add *tmp33 :displayItem:y 6
+  243 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  244 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  245 op add *tmp40 :displayItem:y 12
+  246 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  247 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  248 jump *label326 always
+  249 label *label311
+  250 jump *label313 notEqual *tmp19 3
+  251 label *label312
+  252 op add *tmp44 :displayItem:x 7
+  253 op add *tmp46 :displayItem:y 12
+  254 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  255 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  256 op add *tmp48 :displayItem:y 6
+  257 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  258 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  259 jump *label326 always
+  260 label *label313
+  261 jump *label315 notEqual *tmp19 4
+  262 label *label314
+  263 op add *tmp54 :displayItem:x 7
+  264 op add *tmp56 :displayItem:y 12
+  265 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  266 op add *tmp57 :displayItem:y 6
+  267 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  268 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  269 jump *label326 always
+  270 label *label315
+  271 jump *label317 notEqual *tmp19 5
+  272 label *label316
+  273 op add *tmp62 :displayItem:x 7
+  274 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  275 op add *tmp65 :displayItem:y 6
+  276 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  277 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  278 op add *tmp70 :displayItem:y 12
+  279 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  280 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  281 jump *label326 always
+  282 label *label317
+  283 jump *label319 notEqual *tmp19 6
+  284 label *label318
+  285 op add *tmp74 :displayItem:y 12
+  286 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  287 op add *tmp75 :displayItem:x 7
+  288 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  289 op add *tmp78 :displayItem:y 6
+  290 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  291 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  292 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  293 jump *label326 always
+  294 label *label319
+  295 jump *label321 notEqual *tmp19 7
+  296 label *label320
+  297 op add *tmp86 :displayItem:x 6
+  298 op add *tmp89 :displayItem:y 12
+  299 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  300 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  301 jump *label326 always
+  302 label *label321
+  303 jump *label323 notEqual *tmp19 8
+  304 label *label322
+  305 op sub *tmp95 :displayItem:x 1
+  306 op sub *tmp97 :displayItem:y 1
+  307 draw lineRect *tmp95 *tmp97 9 14
+  308 op add *tmp98 :displayItem:y 6
+  309 op add *tmp99 :displayItem:x 7
+  310 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  311 jump *label326 always
+  312 label *label323
+  313 jump *label325 notEqual *tmp19 9
+  314 label *label324
+  315 op add *tmp101 :displayItem:x 7
+  316 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  317 op add *tmp104 :displayItem:y 12
+  318 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  319 op add *tmp105 :displayItem:y 6
+  320 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  321 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  322 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  323 label *label325
+  324 label *label326
+  325 label *label327
+  326 op sub :displayItem:x :displayItem:x 11
+  327 op idiv :displayItem:amount :displayItem:amount 10
+  328 jump *label328 notEqual :displayItem:amount 0
+  329 jump *label413 always
+  330 label *label328
+  331 label *label329
+  332 label *label330
+  333 label *label331
+  334 op mod *tmp19 :displayItem:amount 10
+  335 # "Function: def drawDigit(in x, in y, in digit)"
+  336 jump *label333 notEqual *tmp19 0
+  337 label *label332
+  338 op sub *tmp24 :displayItem:x 1
+  339 op sub *tmp26 :displayItem:y 1
+  340 draw lineRect *tmp24 *tmp26 9 14
+  341 jump *label352 always
+  342 label *label333
+  343 jump *label335 notEqual *tmp19 1
+  344 label *label334
+  345 op add *tmp28 :displayItem:x 6
+  346 op add *tmp31 :displayItem:y 12
+  347 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  348 jump *label352 always
+  349 label *label335
+  350 jump *label337 notEqual *tmp19 2
+  351 label *label336
+  352 op add *tmp32 :displayItem:x 7
+  353 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  354 op add *tmp33 :displayItem:y 6
+  355 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  356 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  357 op add *tmp40 :displayItem:y 12
+  358 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  359 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  360 jump *label352 always
+  361 label *label337
+  362 jump *label339 notEqual *tmp19 3
+  363 label *label338
+  364 op add *tmp44 :displayItem:x 7
+  365 op add *tmp46 :displayItem:y 12
+  366 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  367 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  368 op add *tmp48 :displayItem:y 6
+  369 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  370 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  371 jump *label352 always
+  372 label *label339
+  373 jump *label341 notEqual *tmp19 4
+  374 label *label340
+  375 op add *tmp54 :displayItem:x 7
+  376 op add *tmp56 :displayItem:y 12
+  377 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  378 op add *tmp57 :displayItem:y 6
+  379 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  380 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  381 jump *label352 always
+  382 label *label341
+  383 jump *label343 notEqual *tmp19 5
+  384 label *label342
+  385 op add *tmp62 :displayItem:x 7
+  386 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  387 op add *tmp65 :displayItem:y 6
+  388 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  389 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  390 op add *tmp70 :displayItem:y 12
+  391 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  392 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  393 jump *label352 always
+  394 label *label343
+  395 jump *label345 notEqual *tmp19 6
+  396 label *label344
+  397 op add *tmp74 :displayItem:y 12
+  398 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  399 op add *tmp75 :displayItem:x 7
+  400 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  401 op add *tmp78 :displayItem:y 6
+  402 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  403 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  404 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  405 jump *label352 always
+  406 label *label345
+  407 jump *label347 notEqual *tmp19 7
+  408 label *label346
+  409 op add *tmp86 :displayItem:x 6
+  410 op add *tmp89 :displayItem:y 12
+  411 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  412 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  413 jump *label352 always
+  414 label *label347
+  415 jump *label349 notEqual *tmp19 8
+  416 label *label348
+  417 op sub *tmp95 :displayItem:x 1
+  418 op sub *tmp97 :displayItem:y 1
+  419 draw lineRect *tmp95 *tmp97 9 14
+  420 op add *tmp98 :displayItem:y 6
+  421 op add *tmp99 :displayItem:x 7
+  422 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  423 jump *label352 always
+  424 label *label349
+  425 jump *label351 notEqual *tmp19 9
+  426 label *label350
+  427 op add *tmp101 :displayItem:x 7
+  428 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  429 op add *tmp104 :displayItem:y 12
+  430 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  431 op add *tmp105 :displayItem:y 6
+  432 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  433 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  434 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  435 label *label351
+  436 label *label352
+  437 label *label353
+  438 op sub :displayItem:x :displayItem:x 11
+  439 op idiv :displayItem:amount :displayItem:amount 10
+  440 jump *label354 notEqual :displayItem:amount 0
+  441 jump *label413 always
+  442 label *label354
+  443 label *label355
+  444 label *label356
+  445 label *label357
+  446 op mod *tmp19 :displayItem:amount 10
+  447 # "Function: def drawDigit(in x, in y, in digit)"
+  448 jump *label359 notEqual *tmp19 0
+  449 label *label358
+  450 op sub *tmp24 :displayItem:x 1
+  451 op sub *tmp26 :displayItem:y 1
+  452 draw lineRect *tmp24 *tmp26 9 14
+  453 jump *label378 always
+  454 label *label359
+  455 jump *label361 notEqual *tmp19 1
+  456 label *label360
+  457 op add *tmp28 :displayItem:x 6
+  458 op add *tmp31 :displayItem:y 12
+  459 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  460 jump *label378 always
+  461 label *label361
+  462 jump *label363 notEqual *tmp19 2
+  463 label *label362
+  464 op add *tmp32 :displayItem:x 7
+  465 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  466 op add *tmp33 :displayItem:y 6
+  467 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  468 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  469 op add *tmp40 :displayItem:y 12
+  470 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  471 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  472 jump *label378 always
+  473 label *label363
+  474 jump *label365 notEqual *tmp19 3
+  475 label *label364
+  476 op add *tmp44 :displayItem:x 7
+  477 op add *tmp46 :displayItem:y 12
+  478 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  479 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  480 op add *tmp48 :displayItem:y 6
+  481 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  482 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  483 jump *label378 always
+  484 label *label365
+  485 jump *label367 notEqual *tmp19 4
+  486 label *label366
+  487 op add *tmp54 :displayItem:x 7
+  488 op add *tmp56 :displayItem:y 12
+  489 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  490 op add *tmp57 :displayItem:y 6
+  491 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  492 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  493 jump *label378 always
+  494 label *label367
+  495 jump *label369 notEqual *tmp19 5
+  496 label *label368
+  497 op add *tmp62 :displayItem:x 7
+  498 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  499 op add *tmp65 :displayItem:y 6
+  500 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  501 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  502 op add *tmp70 :displayItem:y 12
+  503 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  504 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  505 jump *label378 always
+  506 label *label369
+  507 jump *label371 notEqual *tmp19 6
+  508 label *label370
+  509 op add *tmp74 :displayItem:y 12
+  510 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  511 op add *tmp75 :displayItem:x 7
+  512 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  513 op add *tmp78 :displayItem:y 6
+  514 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  515 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  516 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  517 jump *label378 always
+  518 label *label371
+  519 jump *label373 notEqual *tmp19 7
+  520 label *label372
+  521 op add *tmp86 :displayItem:x 6
+  522 op add *tmp89 :displayItem:y 12
+  523 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  524 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  525 jump *label378 always
+  526 label *label373
+  527 jump *label375 notEqual *tmp19 8
+  528 label *label374
+  529 op sub *tmp95 :displayItem:x 1
+  530 op sub *tmp97 :displayItem:y 1
+  531 draw lineRect *tmp95 *tmp97 9 14
+  532 op add *tmp98 :displayItem:y 6
+  533 op add *tmp99 :displayItem:x 7
+  534 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  535 jump *label378 always
+  536 label *label375
+  537 jump *label377 notEqual *tmp19 9
+  538 label *label376
+  539 op add *tmp101 :displayItem:x 7
+  540 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  541 op add *tmp104 :displayItem:y 12
+  542 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  543 op add *tmp105 :displayItem:y 6
+  544 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  545 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  546 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  547 label *label377
+  548 label *label378
+  549 label *label379
+  550 op sub :displayItem:x :displayItem:x 11
+  551 op idiv :displayItem:amount :displayItem:amount 10
+  552 jump *label380 notEqual :displayItem:amount 0
+  553 jump *label413 always
+  554 label *label380
+  555 label *label381
+  556 label *label382
+  557 label *label383
+  558 op mod *tmp19 :displayItem:amount 10
+  559 # "Function: def drawDigit(in x, in y, in digit)"
+  560 jump *label385 notEqual *tmp19 0
+  561 label *label384
+  562 op sub *tmp24 :displayItem:x 1
+  563 op sub *tmp26 :displayItem:y 1
+  564 draw lineRect *tmp24 *tmp26 9 14
+  565 jump *label404 always
+  566 label *label385
+  567 jump *label387 notEqual *tmp19 1
+  568 label *label386
+  569 op add *tmp28 :displayItem:x 6
+  570 op add *tmp31 :displayItem:y 12
+  571 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  572 jump *label404 always
+  573 label *label387
+  574 jump *label389 notEqual *tmp19 2
+  575 label *label388
+  576 op add *tmp32 :displayItem:x 7
+  577 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  578 op add *tmp33 :displayItem:y 6
+  579 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  580 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  581 op add *tmp40 :displayItem:y 12
+  582 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  583 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  584 jump *label404 always
+  585 label *label389
+  586 jump *label391 notEqual *tmp19 3
+  587 label *label390
+  588 op add *tmp44 :displayItem:x 7
+  589 op add *tmp46 :displayItem:y 12
+  590 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  591 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  592 op add *tmp48 :displayItem:y 6
+  593 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  594 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  595 jump *label404 always
+  596 label *label391
+  597 jump *label393 notEqual *tmp19 4
+  598 label *label392
+  599 op add *tmp54 :displayItem:x 7
+  600 op add *tmp56 :displayItem:y 12
+  601 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  602 op add *tmp57 :displayItem:y 6
+  603 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  604 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  605 jump *label404 always
+  606 label *label393
+  607 jump *label395 notEqual *tmp19 5
+  608 label *label394
+  609 op add *tmp62 :displayItem:x 7
+  610 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  611 op add *tmp65 :displayItem:y 6
+  612 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  613 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  614 op add *tmp70 :displayItem:y 12
+  615 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  616 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  617 jump *label404 always
+  618 label *label395
+  619 jump *label397 notEqual *tmp19 6
+  620 label *label396
+  621 op add *tmp74 :displayItem:y 12
+  622 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  623 op add *tmp75 :displayItem:x 7
+  624 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  625 op add *tmp78 :displayItem:y 6
+  626 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  627 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  628 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  629 jump *label404 always
+  630 label *label397
+  631 jump *label399 notEqual *tmp19 7
+  632 label *label398
+  633 op add *tmp86 :displayItem:x 6
+  634 op add *tmp89 :displayItem:y 12
+  635 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  636 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  637 jump *label404 always
+  638 label *label399
+  639 jump *label401 notEqual *tmp19 8
+  640 label *label400
+  641 op sub *tmp95 :displayItem:x 1
+  642 op sub *tmp97 :displayItem:y 1
+  643 draw lineRect *tmp95 *tmp97 9 14
+  644 op add *tmp98 :displayItem:y 6
+  645 op add *tmp99 :displayItem:x 7
+  646 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  647 jump *label404 always
+  648 label *label401
+  649 jump *label403 notEqual *tmp19 9
+  650 label *label402
+  651 op add *tmp101 :displayItem:x 7
+  652 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  653 op add *tmp104 :displayItem:y 12
+  654 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  655 op add *tmp105 :displayItem:y 6
+  656 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  657 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  658 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  659 label *label403
+  660 label *label404
+  661 label *label405
+  662 op sub :displayItem:x :displayItem:x 11
+  663 op idiv :displayItem:amount :displayItem:amount 10
+  664 jump *label406 notEqual :displayItem:amount 0
+  665 jump *label413 always
+  666 label *label406
+  667 label *label407
+  668 label *label408
+  669 label *label409
+  670 # "Function: def drawDigit12(in x, in y, in digit)"
+  671 jump *label410 notEqual :displayItem:amount 1
+  672 op add *tmp119 :displayItem:x 6
+  673 op add *tmp122 :displayItem:y 12
+  674 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  675 jump *label411 always
+  676 label *label410
+  677 op add *tmp123 :displayItem:x 7
+  678 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  679 op add *tmp124 :displayItem:y 6
+  680 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  681 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  682 op add *tmp131 :displayItem:y 12
+  683 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  684 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  685 label *label411
+  686 label *label412
+  687 label *label413
   688 jump *label44 always
   689 label *label43
   690 set :displayItem:x 157
   691 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  692 label *label414
+  693 # "Function: void displayItem(in x, in y)"
+  694 op max :displayItem:amount AMOUNT 0
+  695 draw color 0 255 0 255
+  696 label *label415
+  697 label *label416
+  698 op mod *tmp19 :displayItem:amount 10
+  699 # "Function: def drawDigit(in x, in y, in digit)"
+  700 jump *label418 notEqual *tmp19 0
+  701 label *label417
+  702 op sub *tmp24 :displayItem:x 1
+  703 op sub *tmp26 :displayItem:y 1
+  704 draw lineRect *tmp24 *tmp26 9 14
+  705 jump *label437 always
+  706 label *label418
+  707 jump *label420 notEqual *tmp19 1
+  708 label *label419
+  709 op add *tmp28 :displayItem:x 6
+  710 op add *tmp31 :displayItem:y 12
+  711 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  712 jump *label437 always
+  713 label *label420
+  714 jump *label422 notEqual *tmp19 2
+  715 label *label421
+  716 op add *tmp32 :displayItem:x 7
+  717 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  718 op add *tmp33 :displayItem:y 6
+  719 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  720 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  721 op add *tmp40 :displayItem:y 12
+  722 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  723 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  724 jump *label437 always
+  725 label *label422
+  726 jump *label424 notEqual *tmp19 3
+  727 label *label423
+  728 op add *tmp44 :displayItem:x 7
+  729 op add *tmp46 :displayItem:y 12
+  730 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  731 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  732 op add *tmp48 :displayItem:y 6
+  733 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  734 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  735 jump *label437 always
+  736 label *label424
+  737 jump *label426 notEqual *tmp19 4
+  738 label *label425
+  739 op add *tmp54 :displayItem:x 7
+  740 op add *tmp56 :displayItem:y 12
+  741 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  742 op add *tmp57 :displayItem:y 6
+  743 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  744 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  745 jump *label437 always
+  746 label *label426
+  747 jump *label428 notEqual *tmp19 5
+  748 label *label427
+  749 op add *tmp62 :displayItem:x 7
+  750 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  751 op add *tmp65 :displayItem:y 6
+  752 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  753 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  754 op add *tmp70 :displayItem:y 12
+  755 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  756 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  757 jump *label437 always
+  758 label *label428
+  759 jump *label430 notEqual *tmp19 6
+  760 label *label429
+  761 op add *tmp74 :displayItem:y 12
+  762 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  763 op add *tmp75 :displayItem:x 7
+  764 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  765 op add *tmp78 :displayItem:y 6
+  766 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  767 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  768 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  769 jump *label437 always
+  770 label *label430
+  771 jump *label432 notEqual *tmp19 7
+  772 label *label431
+  773 op add *tmp86 :displayItem:x 6
+  774 op add *tmp89 :displayItem:y 12
+  775 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  776 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  777 jump *label437 always
+  778 label *label432
+  779 jump *label434 notEqual *tmp19 8
+  780 label *label433
+  781 op sub *tmp95 :displayItem:x 1
+  782 op sub *tmp97 :displayItem:y 1
+  783 draw lineRect *tmp95 *tmp97 9 14
+  784 op add *tmp98 :displayItem:y 6
+  785 op add *tmp99 :displayItem:x 7
+  786 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  787 jump *label437 always
+  788 label *label434
+  789 jump *label436 notEqual *tmp19 9
+  790 label *label435
+  791 op add *tmp101 :displayItem:x 7
+  792 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  793 op add *tmp104 :displayItem:y 12
+  794 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  795 op add *tmp105 :displayItem:y 6
+  796 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  797 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  798 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  799 label *label436
+  800 label *label437
+  801 label *label438
+  802 op sub :displayItem:x :displayItem:x 11
+  803 op idiv :displayItem:amount :displayItem:amount 10
+  804 jump *label439 notEqual :displayItem:amount 0
+  805 jump *label524 always
+  806 label *label439
+  807 label *label440
+  808 label *label441
+  809 label *label442
+  810 op mod *tmp19 :displayItem:amount 10
+  811 # "Function: def drawDigit(in x, in y, in digit)"
+  812 jump *label444 notEqual *tmp19 0
+  813 label *label443
+  814 op sub *tmp24 :displayItem:x 1
+  815 op sub *tmp26 :displayItem:y 1
+  816 draw lineRect *tmp24 *tmp26 9 14
+  817 jump *label463 always
+  818 label *label444
+  819 jump *label446 notEqual *tmp19 1
+  820 label *label445
+  821 op add *tmp28 :displayItem:x 6
+  822 op add *tmp31 :displayItem:y 12
+  823 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  824 jump *label463 always
+  825 label *label446
+  826 jump *label448 notEqual *tmp19 2
+  827 label *label447
+  828 op add *tmp32 :displayItem:x 7
+  829 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  830 op add *tmp33 :displayItem:y 6
+  831 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  832 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  833 op add *tmp40 :displayItem:y 12
+  834 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  835 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  836 jump *label463 always
+  837 label *label448
+  838 jump *label450 notEqual *tmp19 3
+  839 label *label449
+  840 op add *tmp44 :displayItem:x 7
+  841 op add *tmp46 :displayItem:y 12
+  842 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  843 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  844 op add *tmp48 :displayItem:y 6
+  845 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  846 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  847 jump *label463 always
+  848 label *label450
+  849 jump *label452 notEqual *tmp19 4
+  850 label *label451
+  851 op add *tmp54 :displayItem:x 7
+  852 op add *tmp56 :displayItem:y 12
+  853 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  854 op add *tmp57 :displayItem:y 6
+  855 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  856 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  857 jump *label463 always
+  858 label *label452
+  859 jump *label454 notEqual *tmp19 5
+  860 label *label453
+  861 op add *tmp62 :displayItem:x 7
+  862 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  863 op add *tmp65 :displayItem:y 6
+  864 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  865 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  866 op add *tmp70 :displayItem:y 12
+  867 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  868 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  869 jump *label463 always
+  870 label *label454
+  871 jump *label456 notEqual *tmp19 6
+  872 label *label455
+  873 op add *tmp74 :displayItem:y 12
+  874 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  875 op add *tmp75 :displayItem:x 7
+  876 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  877 op add *tmp78 :displayItem:y 6
+  878 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  879 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  880 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  881 jump *label463 always
+  882 label *label456
+  883 jump *label458 notEqual *tmp19 7
+  884 label *label457
+  885 op add *tmp86 :displayItem:x 6
+  886 op add *tmp89 :displayItem:y 12
+  887 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  888 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  889 jump *label463 always
+  890 label *label458
+  891 jump *label460 notEqual *tmp19 8
+  892 label *label459
+  893 op sub *tmp95 :displayItem:x 1
+  894 op sub *tmp97 :displayItem:y 1
+  895 draw lineRect *tmp95 *tmp97 9 14
+  896 op add *tmp98 :displayItem:y 6
+  897 op add *tmp99 :displayItem:x 7
+  898 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  899 jump *label463 always
+  900 label *label460
+  901 jump *label462 notEqual *tmp19 9
+  902 label *label461
+  903 op add *tmp101 :displayItem:x 7
+  904 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  905 op add *tmp104 :displayItem:y 12
+  906 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  907 op add *tmp105 :displayItem:y 6
+  908 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  909 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  910 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  911 label *label462
+  912 label *label463
+  913 label *label464
+  914 op sub :displayItem:x :displayItem:x 11
+  915 op idiv :displayItem:amount :displayItem:amount 10
+  916 jump *label465 notEqual :displayItem:amount 0
+  917 jump *label524 always
+  918 label *label465
+  919 label *label466
+  920 label *label467
+  921 label *label468
+  922 op mod *tmp19 :displayItem:amount 10
+  923 # "Function: def drawDigit(in x, in y, in digit)"
+  924 jump *label470 notEqual *tmp19 0
+  925 label *label469
+  926 op sub *tmp24 :displayItem:x 1
+  927 op sub *tmp26 :displayItem:y 1
+  928 draw lineRect *tmp24 *tmp26 9 14
+  929 jump *label489 always
+  930 label *label470
+  931 jump *label472 notEqual *tmp19 1
+  932 label *label471
+  933 op add *tmp28 :displayItem:x 6
+  934 op add *tmp31 :displayItem:y 12
+  935 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  936 jump *label489 always
+  937 label *label472
+  938 jump *label474 notEqual *tmp19 2
+  939 label *label473
+  940 op add *tmp32 :displayItem:x 7
+  941 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  942 op add *tmp33 :displayItem:y 6
+  943 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  944 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  945 op add *tmp40 :displayItem:y 12
+  946 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  947 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  948 jump *label489 always
+  949 label *label474
+  950 jump *label476 notEqual *tmp19 3
+  951 label *label475
+  952 op add *tmp44 :displayItem:x 7
+  953 op add *tmp46 :displayItem:y 12
+  954 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  955 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  956 op add *tmp48 :displayItem:y 6
+  957 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  958 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  959 jump *label489 always
+  960 label *label476
+  961 jump *label478 notEqual *tmp19 4
+  962 label *label477
+  963 op add *tmp54 :displayItem:x 7
+  964 op add *tmp56 :displayItem:y 12
+  965 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  966 op add *tmp57 :displayItem:y 6
+  967 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  968 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  969 jump *label489 always
+  970 label *label478
+  971 jump *label480 notEqual *tmp19 5
+  972 label *label479
+  973 op add *tmp62 :displayItem:x 7
+  974 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  975 op add *tmp65 :displayItem:y 6
+  976 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  977 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  978 op add *tmp70 :displayItem:y 12
+  979 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  980 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  981 jump *label489 always
+  982 label *label480
+  983 jump *label482 notEqual *tmp19 6
+  984 label *label481
+  985 op add *tmp74 :displayItem:y 12
+  986 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  987 op add *tmp75 :displayItem:x 7
+  988 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  989 op add *tmp78 :displayItem:y 6
+  990 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  991 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  992 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  993 jump *label489 always
+  994 label *label482
+  995 jump *label484 notEqual *tmp19 7
+  996 label *label483
+  997 op add *tmp86 :displayItem:x 6
+  998 op add *tmp89 :displayItem:y 12
+  999 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1000 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1001 jump *label489 always
+ 1002 label *label484
+ 1003 jump *label486 notEqual *tmp19 8
+ 1004 label *label485
+ 1005 op sub *tmp95 :displayItem:x 1
+ 1006 op sub *tmp97 :displayItem:y 1
+ 1007 draw lineRect *tmp95 *tmp97 9 14
+ 1008 op add *tmp98 :displayItem:y 6
+ 1009 op add *tmp99 :displayItem:x 7
+ 1010 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1011 jump *label489 always
+ 1012 label *label486
+ 1013 jump *label488 notEqual *tmp19 9
+ 1014 label *label487
+ 1015 op add *tmp101 :displayItem:x 7
+ 1016 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1017 op add *tmp104 :displayItem:y 12
+ 1018 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1019 op add *tmp105 :displayItem:y 6
+ 1020 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1021 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1022 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1023 label *label488
+ 1024 label *label489
+ 1025 label *label490
+ 1026 op sub :displayItem:x :displayItem:x 11
+ 1027 op idiv :displayItem:amount :displayItem:amount 10
+ 1028 jump *label491 notEqual :displayItem:amount 0
+ 1029 jump *label524 always
+ 1030 label *label491
+ 1031 label *label492
+ 1032 label *label493
+ 1033 label *label494
+ 1034 op mod *tmp19 :displayItem:amount 10
+ 1035 # "Function: def drawDigit(in x, in y, in digit)"
+ 1036 jump *label496 notEqual *tmp19 0
+ 1037 label *label495
+ 1038 op sub *tmp24 :displayItem:x 1
+ 1039 op sub *tmp26 :displayItem:y 1
+ 1040 draw lineRect *tmp24 *tmp26 9 14
+ 1041 jump *label515 always
+ 1042 label *label496
+ 1043 jump *label498 notEqual *tmp19 1
+ 1044 label *label497
+ 1045 op add *tmp28 :displayItem:x 6
+ 1046 op add *tmp31 :displayItem:y 12
+ 1047 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1048 jump *label515 always
+ 1049 label *label498
+ 1050 jump *label500 notEqual *tmp19 2
+ 1051 label *label499
+ 1052 op add *tmp32 :displayItem:x 7
+ 1053 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+ 1054 op add *tmp33 :displayItem:y 6
+ 1055 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+ 1056 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+ 1057 op add *tmp40 :displayItem:y 12
+ 1058 draw line *tmp32 *tmp33 *tmp32 *tmp40
+ 1059 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1060 jump *label515 always
+ 1061 label *label500
+ 1062 jump *label502 notEqual *tmp19 3
+ 1063 label *label501
+ 1064 op add *tmp44 :displayItem:x 7
+ 1065 op add *tmp46 :displayItem:y 12
+ 1066 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+ 1067 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+ 1068 op add *tmp48 :displayItem:y 6
+ 1069 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+ 1070 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1071 jump *label515 always
+ 1072 label *label502
+ 1073 jump *label504 notEqual *tmp19 4
+ 1074 label *label503
+ 1075 op add *tmp54 :displayItem:x 7
+ 1076 op add *tmp56 :displayItem:y 12
+ 1077 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+ 1078 op add *tmp57 :displayItem:y 6
+ 1079 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+ 1080 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1081 jump *label515 always
+ 1082 label *label504
+ 1083 jump *label506 notEqual *tmp19 5
+ 1084 label *label505
+ 1085 op add *tmp62 :displayItem:x 7
+ 1086 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+ 1087 op add *tmp65 :displayItem:y 6
+ 1088 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+ 1089 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+ 1090 op add *tmp70 :displayItem:y 12
+ 1091 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+ 1092 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1093 jump *label515 always
+ 1094 label *label506
+ 1095 jump *label508 notEqual *tmp19 6
+ 1096 label *label507
+ 1097 op add *tmp74 :displayItem:y 12
+ 1098 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+ 1099 op add *tmp75 :displayItem:x 7
+ 1100 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+ 1101 op add *tmp78 :displayItem:y 6
+ 1102 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+ 1103 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+ 1104 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1105 jump *label515 always
+ 1106 label *label508
+ 1107 jump *label510 notEqual *tmp19 7
+ 1108 label *label509
+ 1109 op add *tmp86 :displayItem:x 6
+ 1110 op add *tmp89 :displayItem:y 12
+ 1111 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1112 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1113 jump *label515 always
+ 1114 label *label510
+ 1115 jump *label512 notEqual *tmp19 8
+ 1116 label *label511
+ 1117 op sub *tmp95 :displayItem:x 1
+ 1118 op sub *tmp97 :displayItem:y 1
+ 1119 draw lineRect *tmp95 *tmp97 9 14
+ 1120 op add *tmp98 :displayItem:y 6
+ 1121 op add *tmp99 :displayItem:x 7
+ 1122 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1123 jump *label515 always
+ 1124 label *label512
+ 1125 jump *label514 notEqual *tmp19 9
+ 1126 label *label513
+ 1127 op add *tmp101 :displayItem:x 7
+ 1128 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1129 op add *tmp104 :displayItem:y 12
+ 1130 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1131 op add *tmp105 :displayItem:y 6
+ 1132 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1133 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1134 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1135 label *label514
+ 1136 label *label515
+ 1137 label *label516
+ 1138 op sub :displayItem:x :displayItem:x 11
+ 1139 op idiv :displayItem:amount :displayItem:amount 10
+ 1140 jump *label517 notEqual :displayItem:amount 0
+ 1141 jump *label524 always
+ 1142 label *label517
+ 1143 label *label518
+ 1144 label *label519
+ 1145 label *label520
+ 1146 # "Function: def drawDigit12(in x, in y, in digit)"
+ 1147 jump *label521 notEqual :displayItem:amount 1
+ 1148 op add *tmp119 :displayItem:x 6
+ 1149 op add *tmp122 :displayItem:y 12
+ 1150 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1151 jump *label522 always
+ 1152 label *label521
+ 1153 op add *tmp123 :displayItem:x 7
+ 1154 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+ 1155 op add *tmp124 :displayItem:y 6
+ 1156 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+ 1157 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+ 1158 op add *tmp131 :displayItem:y 12
+ 1159 draw line *tmp123 *tmp124 *tmp123 *tmp131
+ 1160 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1161 label *label522
+ 1162 label *label523
+ 1163 label *label524
  1164 label *label44
  1165 op add :index :index 1
  1166 op sub :y :y 20
 
  1185 label *label26
  1186 drawflush display1
  1187 end
-    * label *label2
-    * # "Function: void displayItem(in x, in y)"
-    * op max :displayItem:amount AMOUNT 0
-    * draw color 0 255 0 255
-    * label *label85
-    * label *label86
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label88 notEqual *tmp19 0
-    * label *label87
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label107 always
-    * label *label88
-    * jump *label90 notEqual *tmp19 1
-    * label *label89
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label107 always
-    * label *label90
-    * jump *label92 notEqual *tmp19 2
-    * label *label91
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label107 always
-    * label *label92
-    * jump *label94 notEqual *tmp19 3
-    * label *label93
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label107 always
-    * label *label94
-    * jump *label96 notEqual *tmp19 4
-    * label *label95
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label107 always
-    * label *label96
-    * jump *label98 notEqual *tmp19 5
-    * label *label97
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label107 always
-    * label *label98
-    * jump *label100 notEqual *tmp19 6
-    * label *label99
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label107 always
-    * label *label100
-    * jump *label102 notEqual *tmp19 7
-    * label *label101
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label107 always
-    * label *label102
-    * jump *label104 notEqual *tmp19 8
-    * label *label103
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label107 always
-    * label *label104
-    * jump *label106 notEqual *tmp19 9
-    * label *label105
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label106
-    * label *label107
-    * label *label108
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label109 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label109
-    * label *label110
-    * label *label111
-    * label *label112
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label114 notEqual *tmp19 0
-    * label *label113
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label133 always
-    * label *label114
-    * jump *label116 notEqual *tmp19 1
-    * label *label115
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label133 always
-    * label *label116
-    * jump *label118 notEqual *tmp19 2
-    * label *label117
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label133 always
-    * label *label118
-    * jump *label120 notEqual *tmp19 3
-    * label *label119
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label133 always
-    * label *label120
-    * jump *label122 notEqual *tmp19 4
-    * label *label121
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label133 always
-    * label *label122
-    * jump *label124 notEqual *tmp19 5
-    * label *label123
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label133 always
-    * label *label124
-    * jump *label126 notEqual *tmp19 6
-    * label *label125
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label133 always
-    * label *label126
-    * jump *label128 notEqual *tmp19 7
-    * label *label127
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label133 always
-    * label *label128
-    * jump *label130 notEqual *tmp19 8
-    * label *label129
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label133 always
-    * label *label130
-    * jump *label132 notEqual *tmp19 9
-    * label *label131
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label132
-    * label *label133
-    * label *label134
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label135 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label135
-    * label *label136
-    * label *label137
-    * label *label138
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label140 notEqual *tmp19 0
-    * label *label139
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label159 always
-    * label *label140
-    * jump *label142 notEqual *tmp19 1
-    * label *label141
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label159 always
-    * label *label142
-    * jump *label144 notEqual *tmp19 2
-    * label *label143
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label159 always
-    * label *label144
-    * jump *label146 notEqual *tmp19 3
-    * label *label145
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label159 always
-    * label *label146
-    * jump *label148 notEqual *tmp19 4
-    * label *label147
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label159 always
-    * label *label148
-    * jump *label150 notEqual *tmp19 5
-    * label *label149
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label159 always
-    * label *label150
-    * jump *label152 notEqual *tmp19 6
-    * label *label151
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label159 always
-    * label *label152
-    * jump *label154 notEqual *tmp19 7
-    * label *label153
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label159 always
-    * label *label154
-    * jump *label156 notEqual *tmp19 8
-    * label *label155
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label159 always
-    * label *label156
-    * jump *label158 notEqual *tmp19 9
-    * label *label157
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label158
-    * label *label159
-    * label *label160
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label161 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label161
-    * label *label162
-    * label *label163
-    * label *label164
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label166 notEqual *tmp19 0
-    * label *label165
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label185 always
-    * label *label166
-    * jump *label168 notEqual *tmp19 1
-    * label *label167
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label185 always
-    * label *label168
-    * jump *label170 notEqual *tmp19 2
-    * label *label169
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label185 always
-    * label *label170
-    * jump *label172 notEqual *tmp19 3
-    * label *label171
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label185 always
-    * label *label172
-    * jump *label174 notEqual *tmp19 4
-    * label *label173
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label185 always
-    * label *label174
-    * jump *label176 notEqual *tmp19 5
-    * label *label175
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label185 always
-    * label *label176
-    * jump *label178 notEqual *tmp19 6
-    * label *label177
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label185 always
-    * label *label178
-    * jump *label180 notEqual *tmp19 7
-    * label *label179
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label185 always
-    * label *label180
-    * jump *label182 notEqual *tmp19 8
-    * label *label181
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label185 always
-    * label *label182
-    * jump *label184 notEqual *tmp19 9
-    * label *label183
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label184
-    * label *label185
-    * label *label186
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label187 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label187
-    * label *label188
-    * label *label189
-    * label *label56
-    * # "Function: def drawDigit12(in x, in y, in digit)"
-    * jump *label82 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
-    * jump *label83 always
-    * label *label82
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
-    * label *label83
-    * label *label81
-    * label *label53
-    * return :displayItem*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   223 # "Function: def drawDigit(in x, in y, in digit)"
   224 jump *label307 notEqual *tmp19 0
   225 label *label306
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  226 op sub *tmp24 71 1
+  227 op sub *tmp26 :y 1
+  228 draw lineRect 70 *tmp26 9 14
   229 jump *label326 always
   230 label *label307
   231 jump *label309 notEqual *tmp19 1
   232 label *label308
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  233 op add *tmp28 71 6
+  234 op add *tmp31 :y 12
+  235 draw line 77 :y 77 *tmp31
   236 jump *label326 always
   237 label *label309
   238 jump *label311 notEqual *tmp19 2
   239 label *label310
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  240 op add *tmp32 71 7
+  241 draw line 71 :y 78 :y
+  242 op add *tmp33 :y 6
+  243 draw line 71 :y 71 *tmp33
+  244 draw line 71 *tmp33 78 *tmp33
+  245 op add *tmp40 :y 12
+  246 draw line 78 *tmp33 78 *tmp40
+  247 draw line 71 *tmp40 78 *tmp40
   248 jump *label326 always
   249 label *label311
   250 jump *label313 notEqual *tmp19 3
   251 label *label312
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  252 op add *tmp44 71 7
+  253 op add *tmp46 :y 12
+  254 draw line 78 :y 78 *tmp46
+  255 draw line 71 :y 78 :y
+  256 op add *tmp48 :y 6
+  257 draw line 71 *tmp48 78 *tmp48
+  258 draw line 71 *tmp46 78 *tmp46
   259 jump *label326 always
   260 label *label313
   261 jump *label315 notEqual *tmp19 4
   262 label *label314
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  263 op add *tmp54 71 7
+  264 op add *tmp56 :y 12
+  265 draw line 78 :y 78 *tmp56
+  266 op add *tmp57 :y 6
+  267 draw line 71 *tmp57 78 *tmp57
+  268 draw line 71 *tmp57 71 *tmp56
   269 jump *label326 always
   270 label *label315
   271 jump *label317 notEqual *tmp19 5
   272 label *label316
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  273 op add *tmp62 71 7
+  274 draw line 71 :y 78 :y
+  275 op add *tmp65 :y 6
+  276 draw line 78 :y 78 *tmp65
+  277 draw line 71 *tmp65 78 *tmp65
+  278 op add *tmp70 :y 12
+  279 draw line 71 *tmp65 71 *tmp70
+  280 draw line 71 *tmp70 78 *tmp70
   281 jump *label326 always
   282 label *label317
   283 jump *label319 notEqual *tmp19 6
   284 label *label318
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  285 op add *tmp74 :y 12
+  286 draw line 71 :y 71 *tmp74
+  287 op add *tmp75 71 7
+  288 draw line 71 :y 78 :y
+  289 op add *tmp78 :y 6
+  290 draw line 78 :y 78 *tmp78
+  291 draw line 71 *tmp78 78 *tmp78
+  292 draw line 71 *tmp74 78 *tmp74
   293 jump *label326 always
   294 label *label319
   295 jump *label321 notEqual *tmp19 7
   296 label *label320
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  297 op add *tmp86 71 6
+  298 op add *tmp89 :y 12
+  299 draw line 77 :y 77 *tmp89
+  300 draw line 71 *tmp89 77 *tmp89
   301 jump *label326 always
   302 label *label321
   303 jump *label323 notEqual *tmp19 8
   304 label *label322
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  305 op sub *tmp95 71 1
+  306 op sub *tmp97 :y 1
+  307 draw lineRect 70 *tmp97 9 14
+  308 op add *tmp98 :y 6
+  309 op add *tmp99 71 7
+  310 draw line 71 *tmp98 78 *tmp98
   311 jump *label326 always
   312 label *label323
   313 jump *label325 notEqual *tmp19 9
   314 label *label324
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  315 op add *tmp101 71 7
+  316 draw line 71 :y 78 :y
+  317 op add *tmp104 :y 12
+  318 draw line 78 :y 78 *tmp104
+  319 op add *tmp105 :y 6
+  320 draw line 71 *tmp105 78 *tmp105
+  321 draw line 71 *tmp105 71 *tmp104
+  322 draw line 71 *tmp104 78 *tmp104
   323 label *label325
   324 label *label326
   325 label *label327
-    * op sub :displayItem:x :displayItem:x 11
+  326 op sub :displayItem:x 71 11
   327 op idiv :displayItem:amount :displayItem:amount 10
   328 jump *label328 notEqual :displayItem:amount 0
   329 jump *label413 always
 
   335 # "Function: def drawDigit(in x, in y, in digit)"
   336 jump *label333 notEqual *tmp19 0
   337 label *label332
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  338 op sub *tmp24 60 1
+  339 op sub *tmp26 :y 1
+  340 draw lineRect 59 *tmp26 9 14
   341 jump *label352 always
   342 label *label333
   343 jump *label335 notEqual *tmp19 1
   344 label *label334
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  345 op add *tmp28 60 6
+  346 op add *tmp31 :y 12
+  347 draw line 66 :y 66 *tmp31
   348 jump *label352 always
   349 label *label335
   350 jump *label337 notEqual *tmp19 2
   351 label *label336
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  352 op add *tmp32 60 7
+  353 draw line 60 :y 67 :y
+  354 op add *tmp33 :y 6
+  355 draw line 60 :y 60 *tmp33
+  356 draw line 60 *tmp33 67 *tmp33
+  357 op add *tmp40 :y 12
+  358 draw line 67 *tmp33 67 *tmp40
+  359 draw line 60 *tmp40 67 *tmp40
   360 jump *label352 always
   361 label *label337
   362 jump *label339 notEqual *tmp19 3
   363 label *label338
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  364 op add *tmp44 60 7
+  365 op add *tmp46 :y 12
+  366 draw line 67 :y 67 *tmp46
+  367 draw line 60 :y 67 :y
+  368 op add *tmp48 :y 6
+  369 draw line 60 *tmp48 67 *tmp48
+  370 draw line 60 *tmp46 67 *tmp46
   371 jump *label352 always
   372 label *label339
   373 jump *label341 notEqual *tmp19 4
   374 label *label340
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  375 op add *tmp54 60 7
+  376 op add *tmp56 :y 12
+  377 draw line 67 :y 67 *tmp56
+  378 op add *tmp57 :y 6
+  379 draw line 60 *tmp57 67 *tmp57
+  380 draw line 60 *tmp57 60 *tmp56
   381 jump *label352 always
   382 label *label341
   383 jump *label343 notEqual *tmp19 5
   384 label *label342
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  385 op add *tmp62 60 7
+  386 draw line 60 :y 67 :y
+  387 op add *tmp65 :y 6
+  388 draw line 67 :y 67 *tmp65
+  389 draw line 60 *tmp65 67 *tmp65
+  390 op add *tmp70 :y 12
+  391 draw line 60 *tmp65 60 *tmp70
+  392 draw line 60 *tmp70 67 *tmp70
   393 jump *label352 always
   394 label *label343
   395 jump *label345 notEqual *tmp19 6
   396 label *label344
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  397 op add *tmp74 :y 12
+  398 draw line 60 :y 60 *tmp74
+  399 op add *tmp75 60 7
+  400 draw line 60 :y 67 :y
+  401 op add *tmp78 :y 6
+  402 draw line 67 :y 67 *tmp78
+  403 draw line 60 *tmp78 67 *tmp78
+  404 draw line 60 *tmp74 67 *tmp74
   405 jump *label352 always
   406 label *label345
   407 jump *label347 notEqual *tmp19 7
   408 label *label346
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  409 op add *tmp86 60 6
+  410 op add *tmp89 :y 12
+  411 draw line 66 :y 66 *tmp89
+  412 draw line 60 *tmp89 66 *tmp89
   413 jump *label352 always
   414 label *label347
   415 jump *label349 notEqual *tmp19 8
   416 label *label348
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  417 op sub *tmp95 60 1
+  418 op sub *tmp97 :y 1
+  419 draw lineRect 59 *tmp97 9 14
+  420 op add *tmp98 :y 6
+  421 op add *tmp99 60 7
+  422 draw line 60 *tmp98 67 *tmp98
   423 jump *label352 always
   424 label *label349
   425 jump *label351 notEqual *tmp19 9
   426 label *label350
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  427 op add *tmp101 60 7
+  428 draw line 60 :y 67 :y
+  429 op add *tmp104 :y 12
+  430 draw line 67 :y 67 *tmp104
+  431 op add *tmp105 :y 6
+  432 draw line 60 *tmp105 67 *tmp105
+  433 draw line 60 *tmp105 60 *tmp104
+  434 draw line 60 *tmp104 67 *tmp104
   435 label *label351
   436 label *label352
   437 label *label353
-    * op sub :displayItem:x :displayItem:x 11
+  438 op sub :displayItem:x 60 11
   439 op idiv :displayItem:amount :displayItem:amount 10
   440 jump *label354 notEqual :displayItem:amount 0
   441 jump *label413 always
 
   447 # "Function: def drawDigit(in x, in y, in digit)"
   448 jump *label359 notEqual *tmp19 0
   449 label *label358
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  450 op sub *tmp24 49 1
+  451 op sub *tmp26 :y 1
+  452 draw lineRect 48 *tmp26 9 14
   453 jump *label378 always
   454 label *label359
   455 jump *label361 notEqual *tmp19 1
   456 label *label360
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  457 op add *tmp28 49 6
+  458 op add *tmp31 :y 12
+  459 draw line 55 :y 55 *tmp31
   460 jump *label378 always
   461 label *label361
   462 jump *label363 notEqual *tmp19 2
   463 label *label362
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  464 op add *tmp32 49 7
+  465 draw line 49 :y 56 :y
+  466 op add *tmp33 :y 6
+  467 draw line 49 :y 49 *tmp33
+  468 draw line 49 *tmp33 56 *tmp33
+  469 op add *tmp40 :y 12
+  470 draw line 56 *tmp33 56 *tmp40
+  471 draw line 49 *tmp40 56 *tmp40
   472 jump *label378 always
   473 label *label363
   474 jump *label365 notEqual *tmp19 3
   475 label *label364
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  476 op add *tmp44 49 7
+  477 op add *tmp46 :y 12
+  478 draw line 56 :y 56 *tmp46
+  479 draw line 49 :y 56 :y
+  480 op add *tmp48 :y 6
+  481 draw line 49 *tmp48 56 *tmp48
+  482 draw line 49 *tmp46 56 *tmp46
   483 jump *label378 always
   484 label *label365
   485 jump *label367 notEqual *tmp19 4
   486 label *label366
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  487 op add *tmp54 49 7
+  488 op add *tmp56 :y 12
+  489 draw line 56 :y 56 *tmp56
+  490 op add *tmp57 :y 6
+  491 draw line 49 *tmp57 56 *tmp57
+  492 draw line 49 *tmp57 49 *tmp56
   493 jump *label378 always
   494 label *label367
   495 jump *label369 notEqual *tmp19 5
   496 label *label368
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  497 op add *tmp62 49 7
+  498 draw line 49 :y 56 :y
+  499 op add *tmp65 :y 6
+  500 draw line 56 :y 56 *tmp65
+  501 draw line 49 *tmp65 56 *tmp65
+  502 op add *tmp70 :y 12
+  503 draw line 49 *tmp65 49 *tmp70
+  504 draw line 49 *tmp70 56 *tmp70
   505 jump *label378 always
   506 label *label369
   507 jump *label371 notEqual *tmp19 6
   508 label *label370
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  509 op add *tmp74 :y 12
+  510 draw line 49 :y 49 *tmp74
+  511 op add *tmp75 49 7
+  512 draw line 49 :y 56 :y
+  513 op add *tmp78 :y 6
+  514 draw line 56 :y 56 *tmp78
+  515 draw line 49 *tmp78 56 *tmp78
+  516 draw line 49 *tmp74 56 *tmp74
   517 jump *label378 always
   518 label *label371
   519 jump *label373 notEqual *tmp19 7
   520 label *label372
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  521 op add *tmp86 49 6
+  522 op add *tmp89 :y 12
+  523 draw line 55 :y 55 *tmp89
+  524 draw line 49 *tmp89 55 *tmp89
   525 jump *label378 always
   526 label *label373
   527 jump *label375 notEqual *tmp19 8
   528 label *label374
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  529 op sub *tmp95 49 1
+  530 op sub *tmp97 :y 1
+  531 draw lineRect 48 *tmp97 9 14
+  532 op add *tmp98 :y 6
+  533 op add *tmp99 49 7
+  534 draw line 49 *tmp98 56 *tmp98
   535 jump *label378 always
   536 label *label375
   537 jump *label377 notEqual *tmp19 9
   538 label *label376
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  539 op add *tmp101 49 7
+  540 draw line 49 :y 56 :y
+  541 op add *tmp104 :y 12
+  542 draw line 56 :y 56 *tmp104
+  543 op add *tmp105 :y 6
+  544 draw line 49 *tmp105 56 *tmp105
+  545 draw line 49 *tmp105 49 *tmp104
+  546 draw line 49 *tmp104 56 *tmp104
   547 label *label377
   548 label *label378
   549 label *label379
-    * op sub :displayItem:x :displayItem:x 11
+  550 op sub :displayItem:x 49 11
   551 op idiv :displayItem:amount :displayItem:amount 10
   552 jump *label380 notEqual :displayItem:amount 0
   553 jump *label413 always
 
   559 # "Function: def drawDigit(in x, in y, in digit)"
   560 jump *label385 notEqual *tmp19 0
   561 label *label384
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  562 op sub *tmp24 38 1
+  563 op sub *tmp26 :y 1
+  564 draw lineRect 37 *tmp26 9 14
   565 jump *label404 always
   566 label *label385
   567 jump *label387 notEqual *tmp19 1
   568 label *label386
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  569 op add *tmp28 38 6
+  570 op add *tmp31 :y 12
+  571 draw line 44 :y 44 *tmp31
   572 jump *label404 always
   573 label *label387
   574 jump *label389 notEqual *tmp19 2
   575 label *label388
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  576 op add *tmp32 38 7
+  577 draw line 38 :y 45 :y
+  578 op add *tmp33 :y 6
+  579 draw line 38 :y 38 *tmp33
+  580 draw line 38 *tmp33 45 *tmp33
+  581 op add *tmp40 :y 12
+  582 draw line 45 *tmp33 45 *tmp40
+  583 draw line 38 *tmp40 45 *tmp40
   584 jump *label404 always
   585 label *label389
   586 jump *label391 notEqual *tmp19 3
   587 label *label390
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  588 op add *tmp44 38 7
+  589 op add *tmp46 :y 12
+  590 draw line 45 :y 45 *tmp46
+  591 draw line 38 :y 45 :y
+  592 op add *tmp48 :y 6
+  593 draw line 38 *tmp48 45 *tmp48
+  594 draw line 38 *tmp46 45 *tmp46
   595 jump *label404 always
   596 label *label391
   597 jump *label393 notEqual *tmp19 4
   598 label *label392
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  599 op add *tmp54 38 7
+  600 op add *tmp56 :y 12
+  601 draw line 45 :y 45 *tmp56
+  602 op add *tmp57 :y 6
+  603 draw line 38 *tmp57 45 *tmp57
+  604 draw line 38 *tmp57 38 *tmp56
   605 jump *label404 always
   606 label *label393
   607 jump *label395 notEqual *tmp19 5
   608 label *label394
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  609 op add *tmp62 38 7
+  610 draw line 38 :y 45 :y
+  611 op add *tmp65 :y 6
+  612 draw line 45 :y 45 *tmp65
+  613 draw line 38 *tmp65 45 *tmp65
+  614 op add *tmp70 :y 12
+  615 draw line 38 *tmp65 38 *tmp70
+  616 draw line 38 *tmp70 45 *tmp70
   617 jump *label404 always
   618 label *label395
   619 jump *label397 notEqual *tmp19 6
   620 label *label396
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  621 op add *tmp74 :y 12
+  622 draw line 38 :y 38 *tmp74
+  623 op add *tmp75 38 7
+  624 draw line 38 :y 45 :y
+  625 op add *tmp78 :y 6
+  626 draw line 45 :y 45 *tmp78
+  627 draw line 38 *tmp78 45 *tmp78
+  628 draw line 38 *tmp74 45 *tmp74
   629 jump *label404 always
   630 label *label397
   631 jump *label399 notEqual *tmp19 7
   632 label *label398
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  633 op add *tmp86 38 6
+  634 op add *tmp89 :y 12
+  635 draw line 44 :y 44 *tmp89
+  636 draw line 38 *tmp89 44 *tmp89
   637 jump *label404 always
   638 label *label399
   639 jump *label401 notEqual *tmp19 8
   640 label *label400
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  641 op sub *tmp95 38 1
+  642 op sub *tmp97 :y 1
+  643 draw lineRect 37 *tmp97 9 14
+  644 op add *tmp98 :y 6
+  645 op add *tmp99 38 7
+  646 draw line 38 *tmp98 45 *tmp98
   647 jump *label404 always
   648 label *label401
   649 jump *label403 notEqual *tmp19 9
   650 label *label402
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  651 op add *tmp101 38 7
+  652 draw line 38 :y 45 :y
+  653 op add *tmp104 :y 12
+  654 draw line 45 :y 45 *tmp104
+  655 op add *tmp105 :y 6
+  656 draw line 38 *tmp105 45 *tmp105
+  657 draw line 38 *tmp105 38 *tmp104
+  658 draw line 38 *tmp104 45 *tmp104
   659 label *label403
   660 label *label404
   661 label *label405
-    * op sub :displayItem:x :displayItem:x 11
+  662 op sub :displayItem:x 38 11
   663 op idiv :displayItem:amount :displayItem:amount 10
   664 jump *label406 notEqual :displayItem:amount 0
   665 jump *label413 always
 
   669 label *label409
   670 # "Function: def drawDigit12(in x, in y, in digit)"
   671 jump *label410 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  672 op add *tmp119 27 6
+  673 op add *tmp122 :y 12
+  674 draw line 33 :y 33 *tmp122
   675 jump *label411 always
   676 label *label410
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  677 op add *tmp123 27 7
+  678 draw line 27 :y 34 :y
+  679 op add *tmp124 :y 6
+  680 draw line 27 :y 27 *tmp124
+  681 draw line 27 *tmp124 34 *tmp124
+  682 op add *tmp131 :y 12
+  683 draw line 34 *tmp124 34 *tmp131
+  684 draw line 27 *tmp131 34 *tmp131
   685 label *label411
   686 label *label412
   687 label *label413
 
   699 # "Function: def drawDigit(in x, in y, in digit)"
   700 jump *label418 notEqual *tmp19 0
   701 label *label417
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  702 op sub *tmp24 157 1
+  703 op sub *tmp26 :y 1
+  704 draw lineRect 156 *tmp26 9 14
   705 jump *label437 always
   706 label *label418
   707 jump *label420 notEqual *tmp19 1
   708 label *label419
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  709 op add *tmp28 157 6
+  710 op add *tmp31 :y 12
+  711 draw line 163 :y 163 *tmp31
   712 jump *label437 always
   713 label *label420
   714 jump *label422 notEqual *tmp19 2
   715 label *label421
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  716 op add *tmp32 157 7
+  717 draw line 157 :y 164 :y
+  718 op add *tmp33 :y 6
+  719 draw line 157 :y 157 *tmp33
+  720 draw line 157 *tmp33 164 *tmp33
+  721 op add *tmp40 :y 12
+  722 draw line 164 *tmp33 164 *tmp40
+  723 draw line 157 *tmp40 164 *tmp40
   724 jump *label437 always
   725 label *label422
   726 jump *label424 notEqual *tmp19 3
   727 label *label423
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  728 op add *tmp44 157 7
+  729 op add *tmp46 :y 12
+  730 draw line 164 :y 164 *tmp46
+  731 draw line 157 :y 164 :y
+  732 op add *tmp48 :y 6
+  733 draw line 157 *tmp48 164 *tmp48
+  734 draw line 157 *tmp46 164 *tmp46
   735 jump *label437 always
   736 label *label424
   737 jump *label426 notEqual *tmp19 4
   738 label *label425
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  739 op add *tmp54 157 7
+  740 op add *tmp56 :y 12
+  741 draw line 164 :y 164 *tmp56
+  742 op add *tmp57 :y 6
+  743 draw line 157 *tmp57 164 *tmp57
+  744 draw line 157 *tmp57 157 *tmp56
   745 jump *label437 always
   746 label *label426
   747 jump *label428 notEqual *tmp19 5
   748 label *label427
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  749 op add *tmp62 157 7
+  750 draw line 157 :y 164 :y
+  751 op add *tmp65 :y 6
+  752 draw line 164 :y 164 *tmp65
+  753 draw line 157 *tmp65 164 *tmp65
+  754 op add *tmp70 :y 12
+  755 draw line 157 *tmp65 157 *tmp70
+  756 draw line 157 *tmp70 164 *tmp70
   757 jump *label437 always
   758 label *label428
   759 jump *label430 notEqual *tmp19 6
   760 label *label429
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  761 op add *tmp74 :y 12
+  762 draw line 157 :y 157 *tmp74
+  763 op add *tmp75 157 7
+  764 draw line 157 :y 164 :y
+  765 op add *tmp78 :y 6
+  766 draw line 164 :y 164 *tmp78
+  767 draw line 157 *tmp78 164 *tmp78
+  768 draw line 157 *tmp74 164 *tmp74
   769 jump *label437 always
   770 label *label430
   771 jump *label432 notEqual *tmp19 7
   772 label *label431
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  773 op add *tmp86 157 6
+  774 op add *tmp89 :y 12
+  775 draw line 163 :y 163 *tmp89
+  776 draw line 157 *tmp89 163 *tmp89
   777 jump *label437 always
   778 label *label432
   779 jump *label434 notEqual *tmp19 8
   780 label *label433
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  781 op sub *tmp95 157 1
+  782 op sub *tmp97 :y 1
+  783 draw lineRect 156 *tmp97 9 14
+  784 op add *tmp98 :y 6
+  785 op add *tmp99 157 7
+  786 draw line 157 *tmp98 164 *tmp98
   787 jump *label437 always
   788 label *label434
   789 jump *label436 notEqual *tmp19 9
   790 label *label435
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  791 op add *tmp101 157 7
+  792 draw line 157 :y 164 :y
+  793 op add *tmp104 :y 12
+  794 draw line 164 :y 164 *tmp104
+  795 op add *tmp105 :y 6
+  796 draw line 157 *tmp105 164 *tmp105
+  797 draw line 157 *tmp105 157 *tmp104
+  798 draw line 157 *tmp104 164 *tmp104
   799 label *label436
   800 label *label437
   801 label *label438
-    * op sub :displayItem:x :displayItem:x 11
+  802 op sub :displayItem:x 157 11
   803 op idiv :displayItem:amount :displayItem:amount 10
   804 jump *label439 notEqual :displayItem:amount 0
   805 jump *label524 always
 
   811 # "Function: def drawDigit(in x, in y, in digit)"
   812 jump *label444 notEqual *tmp19 0
   813 label *label443
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  814 op sub *tmp24 146 1
+  815 op sub *tmp26 :y 1
+  816 draw lineRect 145 *tmp26 9 14
   817 jump *label463 always
   818 label *label444
   819 jump *label446 notEqual *tmp19 1
   820 label *label445
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  821 op add *tmp28 146 6
+  822 op add *tmp31 :y 12
+  823 draw line 152 :y 152 *tmp31
   824 jump *label463 always
   825 label *label446
   826 jump *label448 notEqual *tmp19 2
   827 label *label447
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  828 op add *tmp32 146 7
+  829 draw line 146 :y 153 :y
+  830 op add *tmp33 :y 6
+  831 draw line 146 :y 146 *tmp33
+  832 draw line 146 *tmp33 153 *tmp33
+  833 op add *tmp40 :y 12
+  834 draw line 153 *tmp33 153 *tmp40
+  835 draw line 146 *tmp40 153 *tmp40
   836 jump *label463 always
   837 label *label448
   838 jump *label450 notEqual *tmp19 3
   839 label *label449
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  840 op add *tmp44 146 7
+  841 op add *tmp46 :y 12
+  842 draw line 153 :y 153 *tmp46
+  843 draw line 146 :y 153 :y
+  844 op add *tmp48 :y 6
+  845 draw line 146 *tmp48 153 *tmp48
+  846 draw line 146 *tmp46 153 *tmp46
   847 jump *label463 always
   848 label *label450
   849 jump *label452 notEqual *tmp19 4
   850 label *label451
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  851 op add *tmp54 146 7
+  852 op add *tmp56 :y 12
+  853 draw line 153 :y 153 *tmp56
+  854 op add *tmp57 :y 6
+  855 draw line 146 *tmp57 153 *tmp57
+  856 draw line 146 *tmp57 146 *tmp56
   857 jump *label463 always
   858 label *label452
   859 jump *label454 notEqual *tmp19 5
   860 label *label453
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  861 op add *tmp62 146 7
+  862 draw line 146 :y 153 :y
+  863 op add *tmp65 :y 6
+  864 draw line 153 :y 153 *tmp65
+  865 draw line 146 *tmp65 153 *tmp65
+  866 op add *tmp70 :y 12
+  867 draw line 146 *tmp65 146 *tmp70
+  868 draw line 146 *tmp70 153 *tmp70
   869 jump *label463 always
   870 label *label454
   871 jump *label456 notEqual *tmp19 6
   872 label *label455
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  873 op add *tmp74 :y 12
+  874 draw line 146 :y 146 *tmp74
+  875 op add *tmp75 146 7
+  876 draw line 146 :y 153 :y
+  877 op add *tmp78 :y 6
+  878 draw line 153 :y 153 *tmp78
+  879 draw line 146 *tmp78 153 *tmp78
+  880 draw line 146 *tmp74 153 *tmp74
   881 jump *label463 always
   882 label *label456
   883 jump *label458 notEqual *tmp19 7
   884 label *label457
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  885 op add *tmp86 146 6
+  886 op add *tmp89 :y 12
+  887 draw line 152 :y 152 *tmp89
+  888 draw line 146 *tmp89 152 *tmp89
   889 jump *label463 always
   890 label *label458
   891 jump *label460 notEqual *tmp19 8
   892 label *label459
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  893 op sub *tmp95 146 1
+  894 op sub *tmp97 :y 1
+  895 draw lineRect 145 *tmp97 9 14
+  896 op add *tmp98 :y 6
+  897 op add *tmp99 146 7
+  898 draw line 146 *tmp98 153 *tmp98
   899 jump *label463 always
   900 label *label460
   901 jump *label462 notEqual *tmp19 9
   902 label *label461
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  903 op add *tmp101 146 7
+  904 draw line 146 :y 153 :y
+  905 op add *tmp104 :y 12
+  906 draw line 153 :y 153 *tmp104
+  907 op add *tmp105 :y 6
+  908 draw line 146 *tmp105 153 *tmp105
+  909 draw line 146 *tmp105 146 *tmp104
+  910 draw line 146 *tmp104 153 *tmp104
   911 label *label462
   912 label *label463
   913 label *label464
-    * op sub :displayItem:x :displayItem:x 11
+  914 op sub :displayItem:x 146 11
   915 op idiv :displayItem:amount :displayItem:amount 10
   916 jump *label465 notEqual :displayItem:amount 0
   917 jump *label524 always
 
   923 # "Function: def drawDigit(in x, in y, in digit)"
   924 jump *label470 notEqual *tmp19 0
   925 label *label469
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  926 op sub *tmp24 135 1
+  927 op sub *tmp26 :y 1
+  928 draw lineRect 134 *tmp26 9 14
   929 jump *label489 always
   930 label *label470
   931 jump *label472 notEqual *tmp19 1
   932 label *label471
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  933 op add *tmp28 135 6
+  934 op add *tmp31 :y 12
+  935 draw line 141 :y 141 *tmp31
   936 jump *label489 always
   937 label *label472
   938 jump *label474 notEqual *tmp19 2
   939 label *label473
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  940 op add *tmp32 135 7
+  941 draw line 135 :y 142 :y
+  942 op add *tmp33 :y 6
+  943 draw line 135 :y 135 *tmp33
+  944 draw line 135 *tmp33 142 *tmp33
+  945 op add *tmp40 :y 12
+  946 draw line 142 *tmp33 142 *tmp40
+  947 draw line 135 *tmp40 142 *tmp40
   948 jump *label489 always
   949 label *label474
   950 jump *label476 notEqual *tmp19 3
   951 label *label475
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  952 op add *tmp44 135 7
+  953 op add *tmp46 :y 12
+  954 draw line 142 :y 142 *tmp46
+  955 draw line 135 :y 142 :y
+  956 op add *tmp48 :y 6
+  957 draw line 135 *tmp48 142 *tmp48
+  958 draw line 135 *tmp46 142 *tmp46
   959 jump *label489 always
   960 label *label476
   961 jump *label478 notEqual *tmp19 4
   962 label *label477
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  963 op add *tmp54 135 7
+  964 op add *tmp56 :y 12
+  965 draw line 142 :y 142 *tmp56
+  966 op add *tmp57 :y 6
+  967 draw line 135 *tmp57 142 *tmp57
+  968 draw line 135 *tmp57 135 *tmp56
   969 jump *label489 always
   970 label *label478
   971 jump *label480 notEqual *tmp19 5
   972 label *label479
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  973 op add *tmp62 135 7
+  974 draw line 135 :y 142 :y
+  975 op add *tmp65 :y 6
+  976 draw line 142 :y 142 *tmp65
+  977 draw line 135 *tmp65 142 *tmp65
+  978 op add *tmp70 :y 12
+  979 draw line 135 *tmp65 135 *tmp70
+  980 draw line 135 *tmp70 142 *tmp70
   981 jump *label489 always
   982 label *label480
   983 jump *label482 notEqual *tmp19 6
   984 label *label481
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  985 op add *tmp74 :y 12
+  986 draw line 135 :y 135 *tmp74
+  987 op add *tmp75 135 7
+  988 draw line 135 :y 142 :y
+  989 op add *tmp78 :y 6
+  990 draw line 142 :y 142 *tmp78
+  991 draw line 135 *tmp78 142 *tmp78
+  992 draw line 135 *tmp74 142 *tmp74
   993 jump *label489 always
   994 label *label482
   995 jump *label484 notEqual *tmp19 7
   996 label *label483
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  997 op add *tmp86 135 6
+  998 op add *tmp89 :y 12
+  999 draw line 141 :y 141 *tmp89
+ 1000 draw line 135 *tmp89 141 *tmp89
  1001 jump *label489 always
  1002 label *label484
  1003 jump *label486 notEqual *tmp19 8
  1004 label *label485
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1005 op sub *tmp95 135 1
+ 1006 op sub *tmp97 :y 1
+ 1007 draw lineRect 134 *tmp97 9 14
+ 1008 op add *tmp98 :y 6
+ 1009 op add *tmp99 135 7
+ 1010 draw line 135 *tmp98 142 *tmp98
  1011 jump *label489 always
  1012 label *label486
  1013 jump *label488 notEqual *tmp19 9
  1014 label *label487
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1015 op add *tmp101 135 7
+ 1016 draw line 135 :y 142 :y
+ 1017 op add *tmp104 :y 12
+ 1018 draw line 142 :y 142 *tmp104
+ 1019 op add *tmp105 :y 6
+ 1020 draw line 135 *tmp105 142 *tmp105
+ 1021 draw line 135 *tmp105 135 *tmp104
+ 1022 draw line 135 *tmp104 142 *tmp104
  1023 label *label488
  1024 label *label489
  1025 label *label490
-    * op sub :displayItem:x :displayItem:x 11
+ 1026 op sub :displayItem:x 135 11
  1027 op idiv :displayItem:amount :displayItem:amount 10
  1028 jump *label491 notEqual :displayItem:amount 0
  1029 jump *label524 always
 
  1035 # "Function: def drawDigit(in x, in y, in digit)"
  1036 jump *label496 notEqual *tmp19 0
  1037 label *label495
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+ 1038 op sub *tmp24 124 1
+ 1039 op sub *tmp26 :y 1
+ 1040 draw lineRect 123 *tmp26 9 14
  1041 jump *label515 always
  1042 label *label496
  1043 jump *label498 notEqual *tmp19 1
  1044 label *label497
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1045 op add *tmp28 124 6
+ 1046 op add *tmp31 :y 12
+ 1047 draw line 130 :y 130 *tmp31
  1048 jump *label515 always
  1049 label *label498
  1050 jump *label500 notEqual *tmp19 2
  1051 label *label499
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1052 op add *tmp32 124 7
+ 1053 draw line 124 :y 131 :y
+ 1054 op add *tmp33 :y 6
+ 1055 draw line 124 :y 124 *tmp33
+ 1056 draw line 124 *tmp33 131 *tmp33
+ 1057 op add *tmp40 :y 12
+ 1058 draw line 131 *tmp33 131 *tmp40
+ 1059 draw line 124 *tmp40 131 *tmp40
  1060 jump *label515 always
  1061 label *label500
  1062 jump *label502 notEqual *tmp19 3
  1063 label *label501
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1064 op add *tmp44 124 7
+ 1065 op add *tmp46 :y 12
+ 1066 draw line 131 :y 131 *tmp46
+ 1067 draw line 124 :y 131 :y
+ 1068 op add *tmp48 :y 6
+ 1069 draw line 124 *tmp48 131 *tmp48
+ 1070 draw line 124 *tmp46 131 *tmp46
  1071 jump *label515 always
  1072 label *label502
  1073 jump *label504 notEqual *tmp19 4
  1074 label *label503
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1075 op add *tmp54 124 7
+ 1076 op add *tmp56 :y 12
+ 1077 draw line 131 :y 131 *tmp56
+ 1078 op add *tmp57 :y 6
+ 1079 draw line 124 *tmp57 131 *tmp57
+ 1080 draw line 124 *tmp57 124 *tmp56
  1081 jump *label515 always
  1082 label *label504
  1083 jump *label506 notEqual *tmp19 5
  1084 label *label505
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1085 op add *tmp62 124 7
+ 1086 draw line 124 :y 131 :y
+ 1087 op add *tmp65 :y 6
+ 1088 draw line 131 :y 131 *tmp65
+ 1089 draw line 124 *tmp65 131 *tmp65
+ 1090 op add *tmp70 :y 12
+ 1091 draw line 124 *tmp65 124 *tmp70
+ 1092 draw line 124 *tmp70 131 *tmp70
  1093 jump *label515 always
  1094 label *label506
  1095 jump *label508 notEqual *tmp19 6
  1096 label *label507
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1097 op add *tmp74 :y 12
+ 1098 draw line 124 :y 124 *tmp74
+ 1099 op add *tmp75 124 7
+ 1100 draw line 124 :y 131 :y
+ 1101 op add *tmp78 :y 6
+ 1102 draw line 131 :y 131 *tmp78
+ 1103 draw line 124 *tmp78 131 *tmp78
+ 1104 draw line 124 *tmp74 131 *tmp74
  1105 jump *label515 always
  1106 label *label508
  1107 jump *label510 notEqual *tmp19 7
  1108 label *label509
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1109 op add *tmp86 124 6
+ 1110 op add *tmp89 :y 12
+ 1111 draw line 130 :y 130 *tmp89
+ 1112 draw line 124 *tmp89 130 *tmp89
  1113 jump *label515 always
  1114 label *label510
  1115 jump *label512 notEqual *tmp19 8
  1116 label *label511
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1117 op sub *tmp95 124 1
+ 1118 op sub *tmp97 :y 1
+ 1119 draw lineRect 123 *tmp97 9 14
+ 1120 op add *tmp98 :y 6
+ 1121 op add *tmp99 124 7
+ 1122 draw line 124 *tmp98 131 *tmp98
  1123 jump *label515 always
  1124 label *label512
  1125 jump *label514 notEqual *tmp19 9
  1126 label *label513
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1127 op add *tmp101 124 7
+ 1128 draw line 124 :y 131 :y
+ 1129 op add *tmp104 :y 12
+ 1130 draw line 131 :y 131 *tmp104
+ 1131 op add *tmp105 :y 6
+ 1132 draw line 124 *tmp105 131 *tmp105
+ 1133 draw line 124 *tmp105 124 *tmp104
+ 1134 draw line 124 *tmp104 131 *tmp104
  1135 label *label514
  1136 label *label515
  1137 label *label516
-    * op sub :displayItem:x :displayItem:x 11
+ 1138 op sub :displayItem:x 124 11
  1139 op idiv :displayItem:amount :displayItem:amount 10
  1140 jump *label517 notEqual :displayItem:amount 0
  1141 jump *label524 always
 
  1145 label *label520
  1146 # "Function: def drawDigit12(in x, in y, in digit)"
  1147 jump *label521 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1148 op add *tmp119 113 6
+ 1149 op add *tmp122 :y 12
+ 1150 draw line 119 :y 119 *tmp122
  1151 jump *label522 always
  1152 label *label521
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1153 op add *tmp123 113 7
+ 1154 draw line 113 :y 120 :y
+ 1155 op add *tmp124 :y 6
+ 1156 draw line 113 :y 113 *tmp124
+ 1157 draw line 113 *tmp124 120 *tmp124
+ 1158 op add *tmp131 :y 12
+ 1159 draw line 120 *tmp124 120 *tmp131
+ 1160 draw line 113 *tmp131 120 *tmp131
  1161 label *label522
  1162 label *label523
  1163 label *label524

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-104 instructions):
 
   211 label *label24
   212 draw image 0 0 :item 16 0
   213 jump *label43 greaterThanEq :index 8
-    * set :displayItem:x 71
-    * set :displayItem:y :y
   214 label *label303
   215 # "Function: void displayItem(in x, in y)"
   216 op max :displayItem:amount AMOUNT 0
 
   221 # "Function: def drawDigit(in x, in y, in digit)"
   222 jump *label307 notEqual *tmp19 0
   223 label *label306
-    * op sub *tmp24 71 1
   224 op sub *tmp26 :y 1
   225 draw lineRect 70 *tmp26 9 14
   226 jump *label326 always
   227 label *label307
   228 jump *label309 notEqual *tmp19 1
   229 label *label308
-    * op add *tmp28 71 6
   230 op add *tmp31 :y 12
   231 draw line 77 :y 77 *tmp31
   232 jump *label326 always
   233 label *label309
   234 jump *label311 notEqual *tmp19 2
   235 label *label310
-    * op add *tmp32 71 7
   236 draw line 71 :y 78 :y
   237 op add *tmp33 :y 6
   238 draw line 71 :y 71 *tmp33
 
   244 label *label311
   245 jump *label313 notEqual *tmp19 3
   246 label *label312
-    * op add *tmp44 71 7
   247 op add *tmp46 :y 12
   248 draw line 78 :y 78 *tmp46
   249 draw line 71 :y 78 :y
 
   254 label *label313
   255 jump *label315 notEqual *tmp19 4
   256 label *label314
-    * op add *tmp54 71 7
   257 op add *tmp56 :y 12
   258 draw line 78 :y 78 *tmp56
   259 op add *tmp57 :y 6
 
   263 label *label315
   264 jump *label317 notEqual *tmp19 5
   265 label *label316
-    * op add *tmp62 71 7
   266 draw line 71 :y 78 :y
   267 op add *tmp65 :y 6
   268 draw line 78 :y 78 *tmp65
 
   276 label *label318
   277 op add *tmp74 :y 12
   278 draw line 71 :y 71 *tmp74
-    * op add *tmp75 71 7
   279 draw line 71 :y 78 :y
   280 op add *tmp78 :y 6
   281 draw line 78 :y 78 *tmp78
 
   285 label *label319
   286 jump *label321 notEqual *tmp19 7
   287 label *label320
-    * op add *tmp86 71 6
   288 op add *tmp89 :y 12
   289 draw line 77 :y 77 *tmp89
   290 draw line 71 *tmp89 77 *tmp89
 
   292 label *label321
   293 jump *label323 notEqual *tmp19 8
   294 label *label322
-    * op sub *tmp95 71 1
   295 op sub *tmp97 :y 1
   296 draw lineRect 70 *tmp97 9 14
   297 op add *tmp98 :y 6
-    * op add *tmp99 71 7
   298 draw line 71 *tmp98 78 *tmp98
   299 jump *label326 always
   300 label *label323
   301 jump *label325 notEqual *tmp19 9
   302 label *label324
-    * op add *tmp101 71 7
   303 draw line 71 :y 78 :y
   304 op add *tmp104 :y 12
   305 draw line 78 :y 78 *tmp104
 
   310 label *label325
   311 label *label326
   312 label *label327
-    * op sub :displayItem:x 71 11
   313 op idiv :displayItem:amount :displayItem:amount 10
   314 jump *label328 notEqual :displayItem:amount 0
   315 jump *label413 always
 
   321 # "Function: def drawDigit(in x, in y, in digit)"
   322 jump *label333 notEqual *tmp19 0
   323 label *label332
-    * op sub *tmp24 60 1
   324 op sub *tmp26 :y 1
   325 draw lineRect 59 *tmp26 9 14
   326 jump *label352 always
   327 label *label333
   328 jump *label335 notEqual *tmp19 1
   329 label *label334
-    * op add *tmp28 60 6
   330 op add *tmp31 :y 12
   331 draw line 66 :y 66 *tmp31
   332 jump *label352 always
   333 label *label335
   334 jump *label337 notEqual *tmp19 2
   335 label *label336
-    * op add *tmp32 60 7
   336 draw line 60 :y 67 :y
   337 op add *tmp33 :y 6
   338 draw line 60 :y 60 *tmp33
 
   344 label *label337
   345 jump *label339 notEqual *tmp19 3
   346 label *label338
-    * op add *tmp44 60 7
   347 op add *tmp46 :y 12
   348 draw line 67 :y 67 *tmp46
   349 draw line 60 :y 67 :y
 
   354 label *label339
   355 jump *label341 notEqual *tmp19 4
   356 label *label340
-    * op add *tmp54 60 7
   357 op add *tmp56 :y 12
   358 draw line 67 :y 67 *tmp56
   359 op add *tmp57 :y 6
 
   363 label *label341
   364 jump *label343 notEqual *tmp19 5
   365 label *label342
-    * op add *tmp62 60 7
   366 draw line 60 :y 67 :y
   367 op add *tmp65 :y 6
   368 draw line 67 :y 67 *tmp65
 
   376 label *label344
   377 op add *tmp74 :y 12
   378 draw line 60 :y 60 *tmp74
-    * op add *tmp75 60 7
   379 draw line 60 :y 67 :y
   380 op add *tmp78 :y 6
   381 draw line 67 :y 67 *tmp78
 
   385 label *label345
   386 jump *label347 notEqual *tmp19 7
   387 label *label346
-    * op add *tmp86 60 6
   388 op add *tmp89 :y 12
   389 draw line 66 :y 66 *tmp89
   390 draw line 60 *tmp89 66 *tmp89
 
   392 label *label347
   393 jump *label349 notEqual *tmp19 8
   394 label *label348
-    * op sub *tmp95 60 1
   395 op sub *tmp97 :y 1
   396 draw lineRect 59 *tmp97 9 14
   397 op add *tmp98 :y 6
-    * op add *tmp99 60 7
   398 draw line 60 *tmp98 67 *tmp98
   399 jump *label352 always
   400 label *label349
   401 jump *label351 notEqual *tmp19 9
   402 label *label350
-    * op add *tmp101 60 7
   403 draw line 60 :y 67 :y
   404 op add *tmp104 :y 12
   405 draw line 67 :y 67 *tmp104
 
   410 label *label351
   411 label *label352
   412 label *label353
-    * op sub :displayItem:x 60 11
   413 op idiv :displayItem:amount :displayItem:amount 10
   414 jump *label354 notEqual :displayItem:amount 0
   415 jump *label413 always
 
   421 # "Function: def drawDigit(in x, in y, in digit)"
   422 jump *label359 notEqual *tmp19 0
   423 label *label358
-    * op sub *tmp24 49 1
   424 op sub *tmp26 :y 1
   425 draw lineRect 48 *tmp26 9 14
   426 jump *label378 always
   427 label *label359
   428 jump *label361 notEqual *tmp19 1
   429 label *label360
-    * op add *tmp28 49 6
   430 op add *tmp31 :y 12
   431 draw line 55 :y 55 *tmp31
   432 jump *label378 always
   433 label *label361
   434 jump *label363 notEqual *tmp19 2
   435 label *label362
-    * op add *tmp32 49 7
   436 draw line 49 :y 56 :y
   437 op add *tmp33 :y 6
   438 draw line 49 :y 49 *tmp33
 
   444 label *label363
   445 jump *label365 notEqual *tmp19 3
   446 label *label364
-    * op add *tmp44 49 7
   447 op add *tmp46 :y 12
   448 draw line 56 :y 56 *tmp46
   449 draw line 49 :y 56 :y
 
   454 label *label365
   455 jump *label367 notEqual *tmp19 4
   456 label *label366
-    * op add *tmp54 49 7
   457 op add *tmp56 :y 12
   458 draw line 56 :y 56 *tmp56
   459 op add *tmp57 :y 6
 
   463 label *label367
   464 jump *label369 notEqual *tmp19 5
   465 label *label368
-    * op add *tmp62 49 7
   466 draw line 49 :y 56 :y
   467 op add *tmp65 :y 6
   468 draw line 56 :y 56 *tmp65
 
   476 label *label370
   477 op add *tmp74 :y 12
   478 draw line 49 :y 49 *tmp74
-    * op add *tmp75 49 7
   479 draw line 49 :y 56 :y
   480 op add *tmp78 :y 6
   481 draw line 56 :y 56 *tmp78
 
   485 label *label371
   486 jump *label373 notEqual *tmp19 7
   487 label *label372
-    * op add *tmp86 49 6
   488 op add *tmp89 :y 12
   489 draw line 55 :y 55 *tmp89
   490 draw line 49 *tmp89 55 *tmp89
 
   492 label *label373
   493 jump *label375 notEqual *tmp19 8
   494 label *label374
-    * op sub *tmp95 49 1
   495 op sub *tmp97 :y 1
   496 draw lineRect 48 *tmp97 9 14
   497 op add *tmp98 :y 6
-    * op add *tmp99 49 7
   498 draw line 49 *tmp98 56 *tmp98
   499 jump *label378 always
   500 label *label375
   501 jump *label377 notEqual *tmp19 9
   502 label *label376
-    * op add *tmp101 49 7
   503 draw line 49 :y 56 :y
   504 op add *tmp104 :y 12
   505 draw line 56 :y 56 *tmp104
 
   510 label *label377
   511 label *label378
   512 label *label379
-    * op sub :displayItem:x 49 11
   513 op idiv :displayItem:amount :displayItem:amount 10
   514 jump *label380 notEqual :displayItem:amount 0
   515 jump *label413 always
 
   521 # "Function: def drawDigit(in x, in y, in digit)"
   522 jump *label385 notEqual *tmp19 0
   523 label *label384
-    * op sub *tmp24 38 1
   524 op sub *tmp26 :y 1
   525 draw lineRect 37 *tmp26 9 14
   526 jump *label404 always
   527 label *label385
   528 jump *label387 notEqual *tmp19 1
   529 label *label386
-    * op add *tmp28 38 6
   530 op add *tmp31 :y 12
   531 draw line 44 :y 44 *tmp31
   532 jump *label404 always
   533 label *label387
   534 jump *label389 notEqual *tmp19 2
   535 label *label388
-    * op add *tmp32 38 7
   536 draw line 38 :y 45 :y
   537 op add *tmp33 :y 6
   538 draw line 38 :y 38 *tmp33
 
   544 label *label389
   545 jump *label391 notEqual *tmp19 3
   546 label *label390
-    * op add *tmp44 38 7
   547 op add *tmp46 :y 12
   548 draw line 45 :y 45 *tmp46
   549 draw line 38 :y 45 :y
 
   554 label *label391
   555 jump *label393 notEqual *tmp19 4
   556 label *label392
-    * op add *tmp54 38 7
   557 op add *tmp56 :y 12
   558 draw line 45 :y 45 *tmp56
   559 op add *tmp57 :y 6
 
   563 label *label393
   564 jump *label395 notEqual *tmp19 5
   565 label *label394
-    * op add *tmp62 38 7
   566 draw line 38 :y 45 :y
   567 op add *tmp65 :y 6
   568 draw line 45 :y 45 *tmp65
 
   576 label *label396
   577 op add *tmp74 :y 12
   578 draw line 38 :y 38 *tmp74
-    * op add *tmp75 38 7
   579 draw line 38 :y 45 :y
   580 op add *tmp78 :y 6
   581 draw line 45 :y 45 *tmp78
 
   585 label *label397
   586 jump *label399 notEqual *tmp19 7
   587 label *label398
-    * op add *tmp86 38 6
   588 op add *tmp89 :y 12
   589 draw line 44 :y 44 *tmp89
   590 draw line 38 *tmp89 44 *tmp89
 
   592 label *label399
   593 jump *label401 notEqual *tmp19 8
   594 label *label400
-    * op sub *tmp95 38 1
   595 op sub *tmp97 :y 1
   596 draw lineRect 37 *tmp97 9 14
   597 op add *tmp98 :y 6
-    * op add *tmp99 38 7
   598 draw line 38 *tmp98 45 *tmp98
   599 jump *label404 always
   600 label *label401
   601 jump *label403 notEqual *tmp19 9
   602 label *label402
-    * op add *tmp101 38 7
   603 draw line 38 :y 45 :y
   604 op add *tmp104 :y 12
   605 draw line 45 :y 45 *tmp104
 
   610 label *label403
   611 label *label404
   612 label *label405
-    * op sub :displayItem:x 38 11
   613 op idiv :displayItem:amount :displayItem:amount 10
   614 jump *label406 notEqual :displayItem:amount 0
   615 jump *label413 always
 
   619 label *label409
   620 # "Function: def drawDigit12(in x, in y, in digit)"
   621 jump *label410 notEqual :displayItem:amount 1
-    * op add *tmp119 27 6
   622 op add *tmp122 :y 12
   623 draw line 33 :y 33 *tmp122
   624 jump *label411 always
   625 label *label410
-    * op add *tmp123 27 7
   626 draw line 27 :y 34 :y
   627 op add *tmp124 :y 6
   628 draw line 27 :y 27 *tmp124
 
   635 label *label413
   636 jump *label44 always
   637 label *label43
-    * set :displayItem:x 157
-    * set :displayItem:y :y
   638 label *label414
   639 # "Function: void displayItem(in x, in y)"
   640 op max :displayItem:amount AMOUNT 0
 
   645 # "Function: def drawDigit(in x, in y, in digit)"
   646 jump *label418 notEqual *tmp19 0
   647 label *label417
-    * op sub *tmp24 157 1
   648 op sub *tmp26 :y 1
   649 draw lineRect 156 *tmp26 9 14
   650 jump *label437 always
   651 label *label418
   652 jump *label420 notEqual *tmp19 1
   653 label *label419
-    * op add *tmp28 157 6
   654 op add *tmp31 :y 12
   655 draw line 163 :y 163 *tmp31
   656 jump *label437 always
   657 label *label420
   658 jump *label422 notEqual *tmp19 2
   659 label *label421
-    * op add *tmp32 157 7
   660 draw line 157 :y 164 :y
   661 op add *tmp33 :y 6
   662 draw line 157 :y 157 *tmp33
 
   668 label *label422
   669 jump *label424 notEqual *tmp19 3
   670 label *label423
-    * op add *tmp44 157 7
   671 op add *tmp46 :y 12
   672 draw line 164 :y 164 *tmp46
   673 draw line 157 :y 164 :y
 
   678 label *label424
   679 jump *label426 notEqual *tmp19 4
   680 label *label425
-    * op add *tmp54 157 7
   681 op add *tmp56 :y 12
   682 draw line 164 :y 164 *tmp56
   683 op add *tmp57 :y 6
 
   687 label *label426
   688 jump *label428 notEqual *tmp19 5
   689 label *label427
-    * op add *tmp62 157 7
   690 draw line 157 :y 164 :y
   691 op add *tmp65 :y 6
   692 draw line 164 :y 164 *tmp65
 
   700 label *label429
   701 op add *tmp74 :y 12
   702 draw line 157 :y 157 *tmp74
-    * op add *tmp75 157 7
   703 draw line 157 :y 164 :y
   704 op add *tmp78 :y 6
   705 draw line 164 :y 164 *tmp78
 
   709 label *label430
   710 jump *label432 notEqual *tmp19 7
   711 label *label431
-    * op add *tmp86 157 6
   712 op add *tmp89 :y 12
   713 draw line 163 :y 163 *tmp89
   714 draw line 157 *tmp89 163 *tmp89
 
   716 label *label432
   717 jump *label434 notEqual *tmp19 8
   718 label *label433
-    * op sub *tmp95 157 1
   719 op sub *tmp97 :y 1
   720 draw lineRect 156 *tmp97 9 14
   721 op add *tmp98 :y 6
-    * op add *tmp99 157 7
   722 draw line 157 *tmp98 164 *tmp98
   723 jump *label437 always
   724 label *label434
   725 jump *label436 notEqual *tmp19 9
   726 label *label435
-    * op add *tmp101 157 7
   727 draw line 157 :y 164 :y
   728 op add *tmp104 :y 12
   729 draw line 164 :y 164 *tmp104
 
   734 label *label436
   735 label *label437
   736 label *label438
-    * op sub :displayItem:x 157 11
   737 op idiv :displayItem:amount :displayItem:amount 10
   738 jump *label439 notEqual :displayItem:amount 0
   739 jump *label524 always
 
   745 # "Function: def drawDigit(in x, in y, in digit)"
   746 jump *label444 notEqual *tmp19 0
   747 label *label443
-    * op sub *tmp24 146 1
   748 op sub *tmp26 :y 1
   749 draw lineRect 145 *tmp26 9 14
   750 jump *label463 always
   751 label *label444
   752 jump *label446 notEqual *tmp19 1
   753 label *label445
-    * op add *tmp28 146 6
   754 op add *tmp31 :y 12
   755 draw line 152 :y 152 *tmp31
   756 jump *label463 always
   757 label *label446
   758 jump *label448 notEqual *tmp19 2
   759 label *label447
-    * op add *tmp32 146 7
   760 draw line 146 :y 153 :y
   761 op add *tmp33 :y 6
   762 draw line 146 :y 146 *tmp33
 
   768 label *label448
   769 jump *label450 notEqual *tmp19 3
   770 label *label449
-    * op add *tmp44 146 7
   771 op add *tmp46 :y 12
   772 draw line 153 :y 153 *tmp46
   773 draw line 146 :y 153 :y
 
   778 label *label450
   779 jump *label452 notEqual *tmp19 4
   780 label *label451
-    * op add *tmp54 146 7
   781 op add *tmp56 :y 12
   782 draw line 153 :y 153 *tmp56
   783 op add *tmp57 :y 6
 
   787 label *label452
   788 jump *label454 notEqual *tmp19 5
   789 label *label453
-    * op add *tmp62 146 7
   790 draw line 146 :y 153 :y
   791 op add *tmp65 :y 6
   792 draw line 153 :y 153 *tmp65
 
   800 label *label455
   801 op add *tmp74 :y 12
   802 draw line 146 :y 146 *tmp74
-    * op add *tmp75 146 7
   803 draw line 146 :y 153 :y
   804 op add *tmp78 :y 6
   805 draw line 153 :y 153 *tmp78
 
   809 label *label456
   810 jump *label458 notEqual *tmp19 7
   811 label *label457
-    * op add *tmp86 146 6
   812 op add *tmp89 :y 12
   813 draw line 152 :y 152 *tmp89
   814 draw line 146 *tmp89 152 *tmp89
 
   816 label *label458
   817 jump *label460 notEqual *tmp19 8
   818 label *label459
-    * op sub *tmp95 146 1
   819 op sub *tmp97 :y 1
   820 draw lineRect 145 *tmp97 9 14
   821 op add *tmp98 :y 6
-    * op add *tmp99 146 7
   822 draw line 146 *tmp98 153 *tmp98
   823 jump *label463 always
   824 label *label460
   825 jump *label462 notEqual *tmp19 9
   826 label *label461
-    * op add *tmp101 146 7
   827 draw line 146 :y 153 :y
   828 op add *tmp104 :y 12
   829 draw line 153 :y 153 *tmp104
 
   834 label *label462
   835 label *label463
   836 label *label464
-    * op sub :displayItem:x 146 11
   837 op idiv :displayItem:amount :displayItem:amount 10
   838 jump *label465 notEqual :displayItem:amount 0
   839 jump *label524 always
 
   845 # "Function: def drawDigit(in x, in y, in digit)"
   846 jump *label470 notEqual *tmp19 0
   847 label *label469
-    * op sub *tmp24 135 1
   848 op sub *tmp26 :y 1
   849 draw lineRect 134 *tmp26 9 14
   850 jump *label489 always
   851 label *label470
   852 jump *label472 notEqual *tmp19 1
   853 label *label471
-    * op add *tmp28 135 6
   854 op add *tmp31 :y 12
   855 draw line 141 :y 141 *tmp31
   856 jump *label489 always
   857 label *label472
   858 jump *label474 notEqual *tmp19 2
   859 label *label473
-    * op add *tmp32 135 7
   860 draw line 135 :y 142 :y
   861 op add *tmp33 :y 6
   862 draw line 135 :y 135 *tmp33
 
   868 label *label474
   869 jump *label476 notEqual *tmp19 3
   870 label *label475
-    * op add *tmp44 135 7
   871 op add *tmp46 :y 12
   872 draw line 142 :y 142 *tmp46
   873 draw line 135 :y 142 :y
 
   878 label *label476
   879 jump *label478 notEqual *tmp19 4
   880 label *label477
-    * op add *tmp54 135 7
   881 op add *tmp56 :y 12
   882 draw line 142 :y 142 *tmp56
   883 op add *tmp57 :y 6
 
   887 label *label478
   888 jump *label480 notEqual *tmp19 5
   889 label *label479
-    * op add *tmp62 135 7
   890 draw line 135 :y 142 :y
   891 op add *tmp65 :y 6
   892 draw line 142 :y 142 *tmp65
 
   900 label *label481
   901 op add *tmp74 :y 12
   902 draw line 135 :y 135 *tmp74
-    * op add *tmp75 135 7
   903 draw line 135 :y 142 :y
   904 op add *tmp78 :y 6
   905 draw line 142 :y 142 *tmp78
 
   909 label *label482
   910 jump *label484 notEqual *tmp19 7
   911 label *label483
-    * op add *tmp86 135 6
   912 op add *tmp89 :y 12
   913 draw line 141 :y 141 *tmp89
   914 draw line 135 *tmp89 141 *tmp89
 
   916 label *label484
   917 jump *label486 notEqual *tmp19 8
   918 label *label485
-    * op sub *tmp95 135 1
   919 op sub *tmp97 :y 1
   920 draw lineRect 134 *tmp97 9 14
   921 op add *tmp98 :y 6
-    * op add *tmp99 135 7
   922 draw line 135 *tmp98 142 *tmp98
   923 jump *label489 always
   924 label *label486
   925 jump *label488 notEqual *tmp19 9
   926 label *label487
-    * op add *tmp101 135 7
   927 draw line 135 :y 142 :y
   928 op add *tmp104 :y 12
   929 draw line 142 :y 142 *tmp104
 
   934 label *label488
   935 label *label489
   936 label *label490
-    * op sub :displayItem:x 135 11
   937 op idiv :displayItem:amount :displayItem:amount 10
   938 jump *label491 notEqual :displayItem:amount 0
   939 jump *label524 always
 
   945 # "Function: def drawDigit(in x, in y, in digit)"
   946 jump *label496 notEqual *tmp19 0
   947 label *label495
-    * op sub *tmp24 124 1
   948 op sub *tmp26 :y 1
   949 draw lineRect 123 *tmp26 9 14
   950 jump *label515 always
   951 label *label496
   952 jump *label498 notEqual *tmp19 1
   953 label *label497
-    * op add *tmp28 124 6
   954 op add *tmp31 :y 12
   955 draw line 130 :y 130 *tmp31
   956 jump *label515 always
   957 label *label498
   958 jump *label500 notEqual *tmp19 2
   959 label *label499
-    * op add *tmp32 124 7
   960 draw line 124 :y 131 :y
   961 op add *tmp33 :y 6
   962 draw line 124 :y 124 *tmp33
 
   968 label *label500
   969 jump *label502 notEqual *tmp19 3
   970 label *label501
-    * op add *tmp44 124 7
   971 op add *tmp46 :y 12
   972 draw line 131 :y 131 *tmp46
   973 draw line 124 :y 131 :y
 
   978 label *label502
   979 jump *label504 notEqual *tmp19 4
   980 label *label503
-    * op add *tmp54 124 7
   981 op add *tmp56 :y 12
   982 draw line 131 :y 131 *tmp56
   983 op add *tmp57 :y 6
 
   987 label *label504
   988 jump *label506 notEqual *tmp19 5
   989 label *label505
-    * op add *tmp62 124 7
   990 draw line 124 :y 131 :y
   991 op add *tmp65 :y 6
   992 draw line 131 :y 131 *tmp65
 
  1000 label *label507
  1001 op add *tmp74 :y 12
  1002 draw line 124 :y 124 *tmp74
-    * op add *tmp75 124 7
  1003 draw line 124 :y 131 :y
  1004 op add *tmp78 :y 6
  1005 draw line 131 :y 131 *tmp78
 
  1009 label *label508
  1010 jump *label510 notEqual *tmp19 7
  1011 label *label509
-    * op add *tmp86 124 6
  1012 op add *tmp89 :y 12
  1013 draw line 130 :y 130 *tmp89
  1014 draw line 124 *tmp89 130 *tmp89
 
  1016 label *label510
  1017 jump *label512 notEqual *tmp19 8
  1018 label *label511
-    * op sub *tmp95 124 1
  1019 op sub *tmp97 :y 1
  1020 draw lineRect 123 *tmp97 9 14
  1021 op add *tmp98 :y 6
-    * op add *tmp99 124 7
  1022 draw line 124 *tmp98 131 *tmp98
  1023 jump *label515 always
  1024 label *label512
  1025 jump *label514 notEqual *tmp19 9
  1026 label *label513
-    * op add *tmp101 124 7
  1027 draw line 124 :y 131 :y
  1028 op add *tmp104 :y 12
  1029 draw line 131 :y 131 *tmp104
 
  1034 label *label514
  1035 label *label515
  1036 label *label516
-    * op sub :displayItem:x 124 11
  1037 op idiv :displayItem:amount :displayItem:amount 10
  1038 jump *label517 notEqual :displayItem:amount 0
  1039 jump *label524 always
 
  1043 label *label520
  1044 # "Function: def drawDigit12(in x, in y, in digit)"
  1045 jump *label521 notEqual :displayItem:amount 1
-    * op add *tmp119 113 6
  1046 op add *tmp122 :y 12
  1047 draw line 119 :y 119 *tmp122
  1048 jump *label522 always
  1049 label *label521
-    * op add *tmp123 113 7
  1050 draw line 113 :y 120 :y
  1051 op add *tmp124 :y 6
  1052 draw line 113 :y 113 *tmp124

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   219 label *label305
   220 op mod *tmp19 :displayItem:amount 10
   221 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label307 notEqual *tmp19 0
+  222 multijump *label527 *tmp19 0 (m:*label526)
+  223 multilabel *label527 (m:*label526)
+  224 jump *label306 always
+  225 multilabel *label528 (m:*label526)
+  226 jump *label308 always
+  227 multilabel *label529 (m:*label526)
+  228 jump *label310 always
+  229 multilabel *label530 (m:*label526)
+  230 jump *label312 always
+  231 multilabel *label531 (m:*label526)
+  232 jump *label314 always
+  233 multilabel *label532 (m:*label526)
+  234 jump *label316 always
+  235 multilabel *label533 (m:*label526)
+  236 jump *label318 always
+  237 multilabel *label534 (m:*label526)
+  238 jump *label320 always
+  239 multilabel *label535 (m:*label526)
+  240 jump *label322 always
+  241 multilabel *label536 (m:*label526)
+  242 jump *label324 always
   243 label *label306
   244 op sub *tmp26 :y 1
   245 draw lineRect 70 *tmp26 9 14
   246 jump *label326 always
   247 label *label307
-    * jump *label309 notEqual *tmp19 1
   248 label *label308
   249 op add *tmp31 :y 12
   250 draw line 77 :y 77 *tmp31
   251 jump *label326 always
   252 label *label309
-    * jump *label311 notEqual *tmp19 2
   253 label *label310
   254 draw line 71 :y 78 :y
   255 op add *tmp33 :y 6
 
   260 draw line 71 *tmp40 78 *tmp40
   261 jump *label326 always
   262 label *label311
-    * jump *label313 notEqual *tmp19 3
   263 label *label312
   264 op add *tmp46 :y 12
   265 draw line 78 :y 78 *tmp46
 
   269 draw line 71 *tmp46 78 *tmp46
   270 jump *label326 always
   271 label *label313
-    * jump *label315 notEqual *tmp19 4
   272 label *label314
   273 op add *tmp56 :y 12
   274 draw line 78 :y 78 *tmp56
 
   277 draw line 71 *tmp57 71 *tmp56
   278 jump *label326 always
   279 label *label315
-    * jump *label317 notEqual *tmp19 5
   280 label *label316
   281 draw line 71 :y 78 :y
   282 op add *tmp65 :y 6
 
   287 draw line 71 *tmp70 78 *tmp70
   288 jump *label326 always
   289 label *label317
-    * jump *label319 notEqual *tmp19 6
   290 label *label318
   291 op add *tmp74 :y 12
   292 draw line 71 :y 71 *tmp74
 
   297 draw line 71 *tmp74 78 *tmp74
   298 jump *label326 always
   299 label *label319
-    * jump *label321 notEqual *tmp19 7
   300 label *label320
   301 op add *tmp89 :y 12
   302 draw line 77 :y 77 *tmp89
   303 draw line 71 *tmp89 77 *tmp89
   304 jump *label326 always
   305 label *label321
-    * jump *label323 notEqual *tmp19 8
   306 label *label322
   307 op sub *tmp97 :y 1
   308 draw lineRect 70 *tmp97 9 14
 
   310 draw line 71 *tmp98 78 *tmp98
   311 jump *label326 always
   312 label *label323
-    * jump *label325 notEqual *tmp19 9
   313 label *label324
   314 draw line 71 :y 78 :y
   315 op add *tmp104 :y 12
 
   319 draw line 71 *tmp105 71 *tmp104
   320 draw line 71 *tmp104 78 *tmp104
   321 label *label325
+  322 label *label525
   323 label *label326
   324 label *label327
   325 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   331 label *label331
   332 op mod *tmp19 :displayItem:amount 10
   333 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label333 notEqual *tmp19 0
+  334 multijump *label539 *tmp19 0 (m:*label538)
+  335 multilabel *label539 (m:*label538)
+  336 jump *label332 always
+  337 multilabel *label540 (m:*label538)
+  338 jump *label334 always
+  339 multilabel *label541 (m:*label538)
+  340 jump *label336 always
+  341 multilabel *label542 (m:*label538)
+  342 jump *label338 always
+  343 multilabel *label543 (m:*label538)
+  344 jump *label340 always
+  345 multilabel *label544 (m:*label538)
+  346 jump *label342 always
+  347 multilabel *label545 (m:*label538)
+  348 jump *label344 always
+  349 multilabel *label546 (m:*label538)
+  350 jump *label346 always
+  351 multilabel *label547 (m:*label538)
+  352 jump *label348 always
+  353 multilabel *label548 (m:*label538)
+  354 jump *label350 always
   355 label *label332
   356 op sub *tmp26 :y 1
   357 draw lineRect 59 *tmp26 9 14
   358 jump *label352 always
   359 label *label333
-    * jump *label335 notEqual *tmp19 1
   360 label *label334
   361 op add *tmp31 :y 12
   362 draw line 66 :y 66 *tmp31
   363 jump *label352 always
   364 label *label335
-    * jump *label337 notEqual *tmp19 2
   365 label *label336
   366 draw line 60 :y 67 :y
   367 op add *tmp33 :y 6
 
   372 draw line 60 *tmp40 67 *tmp40
   373 jump *label352 always
   374 label *label337
-    * jump *label339 notEqual *tmp19 3
   375 label *label338
   376 op add *tmp46 :y 12
   377 draw line 67 :y 67 *tmp46
 
   381 draw line 60 *tmp46 67 *tmp46
   382 jump *label352 always
   383 label *label339
-    * jump *label341 notEqual *tmp19 4
   384 label *label340
   385 op add *tmp56 :y 12
   386 draw line 67 :y 67 *tmp56
 
   389 draw line 60 *tmp57 60 *tmp56
   390 jump *label352 always
   391 label *label341
-    * jump *label343 notEqual *tmp19 5
   392 label *label342
   393 draw line 60 :y 67 :y
   394 op add *tmp65 :y 6
 
   399 draw line 60 *tmp70 67 *tmp70
   400 jump *label352 always
   401 label *label343
-    * jump *label345 notEqual *tmp19 6
   402 label *label344
   403 op add *tmp74 :y 12
   404 draw line 60 :y 60 *tmp74
 
   409 draw line 60 *tmp74 67 *tmp74
   410 jump *label352 always
   411 label *label345
-    * jump *label347 notEqual *tmp19 7
   412 label *label346
   413 op add *tmp89 :y 12
   414 draw line 66 :y 66 *tmp89
   415 draw line 60 *tmp89 66 *tmp89
   416 jump *label352 always
   417 label *label347
-    * jump *label349 notEqual *tmp19 8
   418 label *label348
   419 op sub *tmp97 :y 1
   420 draw lineRect 59 *tmp97 9 14
 
   422 draw line 60 *tmp98 67 *tmp98
   423 jump *label352 always
   424 label *label349
-    * jump *label351 notEqual *tmp19 9
   425 label *label350
   426 draw line 60 :y 67 :y
   427 op add *tmp104 :y 12
 
   431 draw line 60 *tmp105 60 *tmp104
   432 draw line 60 *tmp104 67 *tmp104
   433 label *label351
+  434 label *label537
   435 label *label352
   436 label *label353
   437 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   443 label *label357
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label359 notEqual *tmp19 0
+  446 multijump *label551 *tmp19 0 (m:*label550)
+  447 multilabel *label551 (m:*label550)
+  448 jump *label358 always
+  449 multilabel *label552 (m:*label550)
+  450 jump *label360 always
+  451 multilabel *label553 (m:*label550)
+  452 jump *label362 always
+  453 multilabel *label554 (m:*label550)
+  454 jump *label364 always
+  455 multilabel *label555 (m:*label550)
+  456 jump *label366 always
+  457 multilabel *label556 (m:*label550)
+  458 jump *label368 always
+  459 multilabel *label557 (m:*label550)
+  460 jump *label370 always
+  461 multilabel *label558 (m:*label550)
+  462 jump *label372 always
+  463 multilabel *label559 (m:*label550)
+  464 jump *label374 always
+  465 multilabel *label560 (m:*label550)
+  466 jump *label376 always
   467 label *label358
   468 op sub *tmp26 :y 1
   469 draw lineRect 48 *tmp26 9 14
   470 jump *label378 always
   471 label *label359
-    * jump *label361 notEqual *tmp19 1
   472 label *label360
   473 op add *tmp31 :y 12
   474 draw line 55 :y 55 *tmp31
   475 jump *label378 always
   476 label *label361
-    * jump *label363 notEqual *tmp19 2
   477 label *label362
   478 draw line 49 :y 56 :y
   479 op add *tmp33 :y 6
 
   484 draw line 49 *tmp40 56 *tmp40
   485 jump *label378 always
   486 label *label363
-    * jump *label365 notEqual *tmp19 3
   487 label *label364
   488 op add *tmp46 :y 12
   489 draw line 56 :y 56 *tmp46
 
   493 draw line 49 *tmp46 56 *tmp46
   494 jump *label378 always
   495 label *label365
-    * jump *label367 notEqual *tmp19 4
   496 label *label366
   497 op add *tmp56 :y 12
   498 draw line 56 :y 56 *tmp56
 
   501 draw line 49 *tmp57 49 *tmp56
   502 jump *label378 always
   503 label *label367
-    * jump *label369 notEqual *tmp19 5
   504 label *label368
   505 draw line 49 :y 56 :y
   506 op add *tmp65 :y 6
 
   511 draw line 49 *tmp70 56 *tmp70
   512 jump *label378 always
   513 label *label369
-    * jump *label371 notEqual *tmp19 6
   514 label *label370
   515 op add *tmp74 :y 12
   516 draw line 49 :y 49 *tmp74
 
   521 draw line 49 *tmp74 56 *tmp74
   522 jump *label378 always
   523 label *label371
-    * jump *label373 notEqual *tmp19 7
   524 label *label372
   525 op add *tmp89 :y 12
   526 draw line 55 :y 55 *tmp89
   527 draw line 49 *tmp89 55 *tmp89
   528 jump *label378 always
   529 label *label373
-    * jump *label375 notEqual *tmp19 8
   530 label *label374
   531 op sub *tmp97 :y 1
   532 draw lineRect 48 *tmp97 9 14
 
   534 draw line 49 *tmp98 56 *tmp98
   535 jump *label378 always
   536 label *label375
-    * jump *label377 notEqual *tmp19 9
   537 label *label376
   538 draw line 49 :y 56 :y
   539 op add *tmp104 :y 12
 
   543 draw line 49 *tmp105 49 *tmp104
   544 draw line 49 *tmp104 56 *tmp104
   545 label *label377
+  546 label *label549
   547 label *label378
   548 label *label379
   549 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   555 label *label383
   556 op mod *tmp19 :displayItem:amount 10
   557 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label385 notEqual *tmp19 0
+  558 multijump *label563 *tmp19 0 (m:*label562)
+  559 multilabel *label563 (m:*label562)
+  560 jump *label384 always
+  561 multilabel *label564 (m:*label562)
+  562 jump *label386 always
+  563 multilabel *label565 (m:*label562)
+  564 jump *label388 always
+  565 multilabel *label566 (m:*label562)
+  566 jump *label390 always
+  567 multilabel *label567 (m:*label562)
+  568 jump *label392 always
+  569 multilabel *label568 (m:*label562)
+  570 jump *label394 always
+  571 multilabel *label569 (m:*label562)
+  572 jump *label396 always
+  573 multilabel *label570 (m:*label562)
+  574 jump *label398 always
+  575 multilabel *label571 (m:*label562)
+  576 jump *label400 always
+  577 multilabel *label572 (m:*label562)
+  578 jump *label402 always
   579 label *label384
   580 op sub *tmp26 :y 1
   581 draw lineRect 37 *tmp26 9 14
   582 jump *label404 always
   583 label *label385
-    * jump *label387 notEqual *tmp19 1
   584 label *label386
   585 op add *tmp31 :y 12
   586 draw line 44 :y 44 *tmp31
   587 jump *label404 always
   588 label *label387
-    * jump *label389 notEqual *tmp19 2
   589 label *label388
   590 draw line 38 :y 45 :y
   591 op add *tmp33 :y 6
 
   596 draw line 38 *tmp40 45 *tmp40
   597 jump *label404 always
   598 label *label389
-    * jump *label391 notEqual *tmp19 3
   599 label *label390
   600 op add *tmp46 :y 12
   601 draw line 45 :y 45 *tmp46
 
   605 draw line 38 *tmp46 45 *tmp46
   606 jump *label404 always
   607 label *label391
-    * jump *label393 notEqual *tmp19 4
   608 label *label392
   609 op add *tmp56 :y 12
   610 draw line 45 :y 45 *tmp56
 
   613 draw line 38 *tmp57 38 *tmp56
   614 jump *label404 always
   615 label *label393
-    * jump *label395 notEqual *tmp19 5
   616 label *label394
   617 draw line 38 :y 45 :y
   618 op add *tmp65 :y 6
 
   623 draw line 38 *tmp70 45 *tmp70
   624 jump *label404 always
   625 label *label395
-    * jump *label397 notEqual *tmp19 6
   626 label *label396
   627 op add *tmp74 :y 12
   628 draw line 38 :y 38 *tmp74
 
   633 draw line 38 *tmp74 45 *tmp74
   634 jump *label404 always
   635 label *label397
-    * jump *label399 notEqual *tmp19 7
   636 label *label398
   637 op add *tmp89 :y 12
   638 draw line 44 :y 44 *tmp89
   639 draw line 38 *tmp89 44 *tmp89
   640 jump *label404 always
   641 label *label399
-    * jump *label401 notEqual *tmp19 8
   642 label *label400
   643 op sub *tmp97 :y 1
   644 draw lineRect 37 *tmp97 9 14
 
   646 draw line 38 *tmp98 45 *tmp98
   647 jump *label404 always
   648 label *label401
-    * jump *label403 notEqual *tmp19 9
   649 label *label402
   650 draw line 38 :y 45 :y
   651 op add *tmp104 :y 12
 
   655 draw line 38 *tmp105 38 *tmp104
   656 draw line 38 *tmp104 45 *tmp104
   657 label *label403
+  658 label *label561
   659 label *label404
   660 label *label405
   661 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   691 label *label416
   692 op mod *tmp19 :displayItem:amount 10
   693 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label418 notEqual *tmp19 0
+  694 multijump *label575 *tmp19 0 (m:*label574)
+  695 multilabel *label575 (m:*label574)
+  696 jump *label417 always
+  697 multilabel *label576 (m:*label574)
+  698 jump *label419 always
+  699 multilabel *label577 (m:*label574)
+  700 jump *label421 always
+  701 multilabel *label578 (m:*label574)
+  702 jump *label423 always
+  703 multilabel *label579 (m:*label574)
+  704 jump *label425 always
+  705 multilabel *label580 (m:*label574)
+  706 jump *label427 always
+  707 multilabel *label581 (m:*label574)
+  708 jump *label429 always
+  709 multilabel *label582 (m:*label574)
+  710 jump *label431 always
+  711 multilabel *label583 (m:*label574)
+  712 jump *label433 always
+  713 multilabel *label584 (m:*label574)
+  714 jump *label435 always
   715 label *label417
   716 op sub *tmp26 :y 1
   717 draw lineRect 156 *tmp26 9 14
   718 jump *label437 always
   719 label *label418
-    * jump *label420 notEqual *tmp19 1
   720 label *label419
   721 op add *tmp31 :y 12
   722 draw line 163 :y 163 *tmp31
   723 jump *label437 always
   724 label *label420
-    * jump *label422 notEqual *tmp19 2
   725 label *label421
   726 draw line 157 :y 164 :y
   727 op add *tmp33 :y 6
 
   732 draw line 157 *tmp40 164 *tmp40
   733 jump *label437 always
   734 label *label422
-    * jump *label424 notEqual *tmp19 3
   735 label *label423
   736 op add *tmp46 :y 12
   737 draw line 164 :y 164 *tmp46
 
   741 draw line 157 *tmp46 164 *tmp46
   742 jump *label437 always
   743 label *label424
-    * jump *label426 notEqual *tmp19 4
   744 label *label425
   745 op add *tmp56 :y 12
   746 draw line 164 :y 164 *tmp56
 
   749 draw line 157 *tmp57 157 *tmp56
   750 jump *label437 always
   751 label *label426
-    * jump *label428 notEqual *tmp19 5
   752 label *label427
   753 draw line 157 :y 164 :y
   754 op add *tmp65 :y 6
 
   759 draw line 157 *tmp70 164 *tmp70
   760 jump *label437 always
   761 label *label428
-    * jump *label430 notEqual *tmp19 6
   762 label *label429
   763 op add *tmp74 :y 12
   764 draw line 157 :y 157 *tmp74
 
   769 draw line 157 *tmp74 164 *tmp74
   770 jump *label437 always
   771 label *label430
-    * jump *label432 notEqual *tmp19 7
   772 label *label431
   773 op add *tmp89 :y 12
   774 draw line 163 :y 163 *tmp89
   775 draw line 157 *tmp89 163 *tmp89
   776 jump *label437 always
   777 label *label432
-    * jump *label434 notEqual *tmp19 8
   778 label *label433
   779 op sub *tmp97 :y 1
   780 draw lineRect 156 *tmp97 9 14
 
   782 draw line 157 *tmp98 164 *tmp98
   783 jump *label437 always
   784 label *label434
-    * jump *label436 notEqual *tmp19 9
   785 label *label435
   786 draw line 157 :y 164 :y
   787 op add *tmp104 :y 12
 
   791 draw line 157 *tmp105 157 *tmp104
   792 draw line 157 *tmp104 164 *tmp104
   793 label *label436
+  794 label *label573
   795 label *label437
   796 label *label438
   797 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   803 label *label442
   804 op mod *tmp19 :displayItem:amount 10
   805 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label444 notEqual *tmp19 0
+  806 multijump *label587 *tmp19 0 (m:*label586)
+  807 multilabel *label587 (m:*label586)
+  808 jump *label443 always
+  809 multilabel *label588 (m:*label586)
+  810 jump *label445 always
+  811 multilabel *label589 (m:*label586)
+  812 jump *label447 always
+  813 multilabel *label590 (m:*label586)
+  814 jump *label449 always
+  815 multilabel *label591 (m:*label586)
+  816 jump *label451 always
+  817 multilabel *label592 (m:*label586)
+  818 jump *label453 always
+  819 multilabel *label593 (m:*label586)
+  820 jump *label455 always
+  821 multilabel *label594 (m:*label586)
+  822 jump *label457 always
+  823 multilabel *label595 (m:*label586)
+  824 jump *label459 always
+  825 multilabel *label596 (m:*label586)
+  826 jump *label461 always
   827 label *label443
   828 op sub *tmp26 :y 1
   829 draw lineRect 145 *tmp26 9 14
   830 jump *label463 always
   831 label *label444
-    * jump *label446 notEqual *tmp19 1
   832 label *label445
   833 op add *tmp31 :y 12
   834 draw line 152 :y 152 *tmp31
   835 jump *label463 always
   836 label *label446
-    * jump *label448 notEqual *tmp19 2
   837 label *label447
   838 draw line 146 :y 153 :y
   839 op add *tmp33 :y 6
 
   844 draw line 146 *tmp40 153 *tmp40
   845 jump *label463 always
   846 label *label448
-    * jump *label450 notEqual *tmp19 3
   847 label *label449
   848 op add *tmp46 :y 12
   849 draw line 153 :y 153 *tmp46
 
   853 draw line 146 *tmp46 153 *tmp46
   854 jump *label463 always
   855 label *label450
-    * jump *label452 notEqual *tmp19 4
   856 label *label451
   857 op add *tmp56 :y 12
   858 draw line 153 :y 153 *tmp56
 
   861 draw line 146 *tmp57 146 *tmp56
   862 jump *label463 always
   863 label *label452
-    * jump *label454 notEqual *tmp19 5
   864 label *label453
   865 draw line 146 :y 153 :y
   866 op add *tmp65 :y 6
 
   871 draw line 146 *tmp70 153 *tmp70
   872 jump *label463 always
   873 label *label454
-    * jump *label456 notEqual *tmp19 6
   874 label *label455
   875 op add *tmp74 :y 12
   876 draw line 146 :y 146 *tmp74
 
   881 draw line 146 *tmp74 153 *tmp74
   882 jump *label463 always
   883 label *label456
-    * jump *label458 notEqual *tmp19 7
   884 label *label457
   885 op add *tmp89 :y 12
   886 draw line 152 :y 152 *tmp89
   887 draw line 146 *tmp89 152 *tmp89
   888 jump *label463 always
   889 label *label458
-    * jump *label460 notEqual *tmp19 8
   890 label *label459
   891 op sub *tmp97 :y 1
   892 draw lineRect 145 *tmp97 9 14
 
   894 draw line 146 *tmp98 153 *tmp98
   895 jump *label463 always
   896 label *label460
-    * jump *label462 notEqual *tmp19 9
   897 label *label461
   898 draw line 146 :y 153 :y
   899 op add *tmp104 :y 12
 
   903 draw line 146 *tmp105 146 *tmp104
   904 draw line 146 *tmp104 153 *tmp104
   905 label *label462
+  906 label *label585
   907 label *label463
   908 label *label464
   909 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
   915 label *label468
   916 op mod *tmp19 :displayItem:amount 10
   917 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label470 notEqual *tmp19 0
+  918 multijump *label599 *tmp19 0 (m:*label598)
+  919 multilabel *label599 (m:*label598)
+  920 jump *label469 always
+  921 multilabel *label600 (m:*label598)
+  922 jump *label471 always
+  923 multilabel *label601 (m:*label598)
+  924 jump *label473 always
+  925 multilabel *label602 (m:*label598)
+  926 jump *label475 always
+  927 multilabel *label603 (m:*label598)
+  928 jump *label477 always
+  929 multilabel *label604 (m:*label598)
+  930 jump *label479 always
+  931 multilabel *label605 (m:*label598)
+  932 jump *label481 always
+  933 multilabel *label606 (m:*label598)
+  934 jump *label483 always
+  935 multilabel *label607 (m:*label598)
+  936 jump *label485 always
+  937 multilabel *label608 (m:*label598)
+  938 jump *label487 always
   939 label *label469
   940 op sub *tmp26 :y 1
   941 draw lineRect 134 *tmp26 9 14
   942 jump *label489 always
   943 label *label470
-    * jump *label472 notEqual *tmp19 1
   944 label *label471
   945 op add *tmp31 :y 12
   946 draw line 141 :y 141 *tmp31
   947 jump *label489 always
   948 label *label472
-    * jump *label474 notEqual *tmp19 2
   949 label *label473
   950 draw line 135 :y 142 :y
   951 op add *tmp33 :y 6
 
   956 draw line 135 *tmp40 142 *tmp40
   957 jump *label489 always
   958 label *label474
-    * jump *label476 notEqual *tmp19 3
   959 label *label475
   960 op add *tmp46 :y 12
   961 draw line 142 :y 142 *tmp46
 
   965 draw line 135 *tmp46 142 *tmp46
   966 jump *label489 always
   967 label *label476
-    * jump *label478 notEqual *tmp19 4
   968 label *label477
   969 op add *tmp56 :y 12
   970 draw line 142 :y 142 *tmp56
 
   973 draw line 135 *tmp57 135 *tmp56
   974 jump *label489 always
   975 label *label478
-    * jump *label480 notEqual *tmp19 5
   976 label *label479
   977 draw line 135 :y 142 :y
   978 op add *tmp65 :y 6
 
   983 draw line 135 *tmp70 142 *tmp70
   984 jump *label489 always
   985 label *label480
-    * jump *label482 notEqual *tmp19 6
   986 label *label481
   987 op add *tmp74 :y 12
   988 draw line 135 :y 135 *tmp74
 
   993 draw line 135 *tmp74 142 *tmp74
   994 jump *label489 always
   995 label *label482
-    * jump *label484 notEqual *tmp19 7
   996 label *label483
   997 op add *tmp89 :y 12
   998 draw line 141 :y 141 *tmp89
   999 draw line 135 *tmp89 141 *tmp89
  1000 jump *label489 always
  1001 label *label484
-    * jump *label486 notEqual *tmp19 8
  1002 label *label485
  1003 op sub *tmp97 :y 1
  1004 draw lineRect 134 *tmp97 9 14
 
  1006 draw line 135 *tmp98 142 *tmp98
  1007 jump *label489 always
  1008 label *label486
-    * jump *label488 notEqual *tmp19 9
  1009 label *label487
  1010 draw line 135 :y 142 :y
  1011 op add *tmp104 :y 12
 
  1015 draw line 135 *tmp105 135 *tmp104
  1016 draw line 135 *tmp104 142 *tmp104
  1017 label *label488
+ 1018 label *label597
  1019 label *label489
  1020 label *label490
  1021 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Convert case at line 100:5 (segments: 1) (+1 instructions):
 
  1027 label *label494
  1028 op mod *tmp19 :displayItem:amount 10
  1029 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label496 notEqual *tmp19 0
+ 1030 multijump *label611 *tmp19 0 (m:*label610)
+ 1031 multilabel *label611 (m:*label610)
+ 1032 jump *label495 always
+ 1033 multilabel *label612 (m:*label610)
+ 1034 jump *label497 always
+ 1035 multilabel *label613 (m:*label610)
+ 1036 jump *label499 always
+ 1037 multilabel *label614 (m:*label610)
+ 1038 jump *label501 always
+ 1039 multilabel *label615 (m:*label610)
+ 1040 jump *label503 always
+ 1041 multilabel *label616 (m:*label610)
+ 1042 jump *label505 always
+ 1043 multilabel *label617 (m:*label610)
+ 1044 jump *label507 always
+ 1045 multilabel *label618 (m:*label610)
+ 1046 jump *label509 always
+ 1047 multilabel *label619 (m:*label610)
+ 1048 jump *label511 always
+ 1049 multilabel *label620 (m:*label610)
+ 1050 jump *label513 always
  1051 label *label495
  1052 op sub *tmp26 :y 1
  1053 draw lineRect 123 *tmp26 9 14
  1054 jump *label515 always
  1055 label *label496
-    * jump *label498 notEqual *tmp19 1
  1056 label *label497
  1057 op add *tmp31 :y 12
  1058 draw line 130 :y 130 *tmp31
  1059 jump *label515 always
  1060 label *label498
-    * jump *label500 notEqual *tmp19 2
  1061 label *label499
  1062 draw line 124 :y 131 :y
  1063 op add *tmp33 :y 6
 
  1068 draw line 124 *tmp40 131 *tmp40
  1069 jump *label515 always
  1070 label *label500
-    * jump *label502 notEqual *tmp19 3
  1071 label *label501
  1072 op add *tmp46 :y 12
  1073 draw line 131 :y 131 *tmp46
 
  1077 draw line 124 *tmp46 131 *tmp46
  1078 jump *label515 always
  1079 label *label502
-    * jump *label504 notEqual *tmp19 4
  1080 label *label503
  1081 op add *tmp56 :y 12
  1082 draw line 131 :y 131 *tmp56
 
  1085 draw line 124 *tmp57 124 *tmp56
  1086 jump *label515 always
  1087 label *label504
-    * jump *label506 notEqual *tmp19 5
  1088 label *label505
  1089 draw line 124 :y 131 :y
  1090 op add *tmp65 :y 6
 
  1095 draw line 124 *tmp70 131 *tmp70
  1096 jump *label515 always
  1097 label *label506
-    * jump *label508 notEqual *tmp19 6
  1098 label *label507
  1099 op add *tmp74 :y 12
  1100 draw line 124 :y 124 *tmp74
 
  1105 draw line 124 *tmp74 131 *tmp74
  1106 jump *label515 always
  1107 label *label508
-    * jump *label510 notEqual *tmp19 7
  1108 label *label509
  1109 op add *tmp89 :y 12
  1110 draw line 130 :y 130 *tmp89
  1111 draw line 124 *tmp89 130 *tmp89
  1112 jump *label515 always
  1113 label *label510
-    * jump *label512 notEqual *tmp19 8
  1114 label *label511
  1115 op sub *tmp97 :y 1
  1116 draw lineRect 123 *tmp97 9 14
 
  1118 draw line 124 *tmp98 131 *tmp98
  1119 jump *label515 always
  1120 label *label512
-    * jump *label514 notEqual *tmp19 9
  1121 label *label513
  1122 draw line 124 :y 131 :y
  1123 op add *tmp104 :y 12
 
  1127 draw line 124 *tmp105 124 *tmp104
  1128 draw line 124 *tmp104 131 *tmp104
  1129 label *label514
+ 1130 label *label609
  1131 label *label515
  1132 label *label516
  1133 op idiv :displayItem:amount :displayItem:amount 10

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
     2 label *label198
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
-    * jump *label199 equal true false
     5 draw rect 0 0 23 176
     6 jump *label200 always
     7 label *label199
 
    11 label *label202
    12 # "Function: def eraseImages(in first_column)"
    13 draw color 0 0 80 255
-    * jump *label203 equal false false
+   14 jump *label203 always
    15 draw rect 0 0 23 176
    16 jump *label204 always
    17 label *label203
 
    21 draw color 255 255 255 255
    22 label *label206
    23 draw image 15 159 @sand 16 0
-    * jump *label207 notEqual 1 8
+   24 jump *label207 always
    25 draw color 255 255 255 255
    26 label *label207
    27 label *label208
    28 label *label209
    29 label *label212
    30 draw image 15 139 @copper 16 0
-    * jump *label213 notEqual 2 8
+   31 jump *label213 always
    32 draw color 255 255 255 255
    33 label *label213
    34 label *label214
    35 label *label215
    36 label *label218
    37 draw image 15 119 @lead 16 0
-    * jump *label219 notEqual 3 8
+   38 jump *label219 always
    39 draw color 255 255 255 255
    40 label *label219
    41 label *label220
    42 label *label221
    43 label *label224
    44 draw image 15 99 @coal 16 0
-    * jump *label225 notEqual 4 8
+   45 jump *label225 always
    46 draw color 255 255 255 255
    47 label *label225
    48 label *label226
    49 label *label227
    50 label *label230
    51 draw image 15 79 @titanium 16 0
-    * jump *label231 notEqual 5 8
+   52 jump *label231 always
    53 draw color 255 255 255 255
    54 label *label231
    55 label *label232
    56 label *label233
    57 label *label236
    58 draw image 15 59 @thorium 16 0
-    * jump *label237 notEqual 6 8
+   59 jump *label237 always
    60 draw color 255 255 255 255
    61 label *label237
    62 label *label238
    63 label *label239
    64 label *label242
    65 draw image 15 39 @scrap 16 0
-    * jump *label243 notEqual 7 8
+   66 jump *label243 always
    67 draw color 255 255 255 255
    68 label *label243
    69 label *label244
    70 label *label245
    71 label *label248
    72 draw image 15 19 @graphite 16 0
-    * jump *label249 notEqual 8 8
    73 draw color 255 255 255 255
    74 label *label249
    75 label *label250
    76 label *label251
    77 label *label254
    78 draw image 101 159 @metaglass 16 0
-    * jump *label255 notEqual 9 8
+   79 jump *label255 always
    80 draw color 255 255 255 255
    81 label *label255
    82 label *label256
    83 label *label257
    84 label *label260
    85 draw image 101 139 @silicon 16 0
-    * jump *label261 notEqual 10 8
+   86 jump *label261 always
    87 draw color 255 255 255 255
    88 label *label261
    89 label *label262
    90 label *label263
    91 label *label266
    92 draw image 101 119 @pyratite 16 0
-    * jump *label267 notEqual 11 8
+   93 jump *label267 always
    94 draw color 255 255 255 255
    95 label *label267
    96 label *label268
    97 label *label269
    98 label *label272
    99 draw image 101 99 @blast-compound 16 0
-    * jump *label273 notEqual 12 8
+  100 jump *label273 always
   101 draw color 255 255 255 255
   102 label *label273
   103 label *label274
   104 label *label275
   105 label *label278
   106 draw image 101 79 @plastanium 16 0
-    * jump *label279 notEqual 13 8
+  107 jump *label279 always
   108 draw color 255 255 255 255
   109 label *label279
   110 label *label280
   111 label *label281
   112 label *label284
   113 draw image 101 59 @phase-fabric 16 0
-    * jump *label285 notEqual 14 8
+  114 jump *label285 always
   115 draw color 255 255 255 255
   116 label *label285
   117 label *label286
   118 label *label287
   119 label *label290
   120 draw image 101 39 @surge-alloy 16 0
-    * jump *label291 notEqual 15 8
+  121 jump *label291 always
   122 draw color 255 255 255 255
   123 label *label291
   124 label *label292
   125 label *label293
   126 label *label296
   127 draw image 101 19 @spore-pod 16 0
-    * jump *label297 notEqual 16 8
+  128 jump *label297 always
   129 draw color 255 255 255 255
   130 label *label297
   131 label *label298
 
   136 label *label190
   137 # "Function: def eraseNumbers(in first_column)"
   138 draw color 0 0 80 255
-    * jump *label191 equal true false
   139 draw rect 23 0 70 176
   140 jump *label192 always
   141 label *label191
 
  1159 label *label194
  1160 # "Function: def eraseNumbers(in first_column)"
  1161 draw color 0 0 80 255
-    * jump *label195 equal false false
+ 1162 jump *label195 always
  1163 draw rect 23 0 70 176
  1164 jump *label196 always
  1165 label *label195

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 set AMOUNT 12345
     1 draw stroke 2
-    * label *label198
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label200 always
-    * label *label199
     6 draw rect 93 0 16 176
     7 label *label200
-    * label *label201
-    * label *label202
     8 # "Function: def eraseImages(in first_column)"
     9 draw color 0 0 80 255
    10 jump *label203 always
 
    13 label *label203
    14 draw rect 93 0 16 176
    15 label *label204
-    * label *label205
    16 draw color 255 255 255 255
-    * label *label206
    17 draw image 15 159 @sand 16 0
    18 jump *label207 always
    19 draw color 255 255 255 255
    20 label *label207
-    * label *label208
-    * label *label209
-    * label *label212
    21 draw image 15 139 @copper 16 0
    22 jump *label213 always
    23 draw color 255 255 255 255
    24 label *label213
-    * label *label214
-    * label *label215
-    * label *label218
    25 draw image 15 119 @lead 16 0
    26 jump *label219 always
    27 draw color 255 255 255 255
    28 label *label219
-    * label *label220
-    * label *label221
-    * label *label224
    29 draw image 15 99 @coal 16 0
    30 jump *label225 always
    31 draw color 255 255 255 255
    32 label *label225
-    * label *label226
-    * label *label227
-    * label *label230
    33 draw image 15 79 @titanium 16 0
    34 jump *label231 always
    35 draw color 255 255 255 255
    36 label *label231
-    * label *label232
-    * label *label233
-    * label *label236
    37 draw image 15 59 @thorium 16 0
    38 jump *label237 always
    39 draw color 255 255 255 255
    40 label *label237
-    * label *label238
-    * label *label239
-    * label *label242
    41 draw image 15 39 @scrap 16 0
    42 jump *label243 always
    43 draw color 255 255 255 255
    44 label *label243
-    * label *label244
-    * label *label245
-    * label *label248
    45 draw image 15 19 @graphite 16 0
    46 draw color 255 255 255 255
-    * label *label249
-    * label *label250
-    * label *label251
-    * label *label254
    47 draw image 101 159 @metaglass 16 0
    48 jump *label255 always
    49 draw color 255 255 255 255
    50 label *label255
-    * label *label256
-    * label *label257
-    * label *label260
    51 draw image 101 139 @silicon 16 0
    52 jump *label261 always
    53 draw color 255 255 255 255
    54 label *label261
-    * label *label262
-    * label *label263
-    * label *label266
    55 draw image 101 119 @pyratite 16 0
    56 jump *label267 always
    57 draw color 255 255 255 255
    58 label *label267
-    * label *label268
-    * label *label269
-    * label *label272
    59 draw image 101 99 @blast-compound 16 0
    60 jump *label273 always
    61 draw color 255 255 255 255
    62 label *label273
-    * label *label274
-    * label *label275
-    * label *label278
    63 draw image 101 79 @plastanium 16 0
    64 jump *label279 always
    65 draw color 255 255 255 255
    66 label *label279
-    * label *label280
-    * label *label281
-    * label *label284
    67 draw image 101 59 @phase-fabric 16 0
    68 jump *label285 always
    69 draw color 255 255 255 255
    70 label *label285
-    * label *label286
-    * label *label287
-    * label *label290
    71 draw image 101 39 @surge-alloy 16 0
    72 jump *label291 always
    73 draw color 255 255 255 255
    74 label *label291
-    * label *label292
-    * label *label293
-    * label *label296
    75 draw image 101 19 @spore-pod 16 0
    76 jump *label297 always
    77 draw color 255 255 255 255
    78 label *label297
-    * label *label298
-    * label *label299
-    * label *label5
    79 drawflush display1
    80 set :y 152
-    * label *label190
    81 # "Function: def eraseNumbers(in first_column)"
    82 draw color 0 0 80 255
    83 draw rect 23 0 70 176
    84 jump *label192 always
-    * label *label191
    85 draw rect 109 0 176 176
    86 label *label192
-    * label *label193
    87 set :index 0
    88 set :item @sand
    89 op add *tmp10 @counter 1
 
   150 label *label24
   151 draw image 0 0 :item 16 0
   152 jump *label43 greaterThanEq :index 8
-    * label *label303
   153 # "Function: void displayItem(in x, in y)"
   154 op max :displayItem:amount AMOUNT 0
   155 draw color 0 255 0 255
-    * label *label304
-    * label *label305
   156 op mod *tmp19 :displayItem:amount 10
   157 # "Function: def drawDigit(in x, in y, in digit)"
   158 multijump *label527 *tmp19 0 (m:*label526)
 
   180 op sub *tmp26 :y 1
   181 draw lineRect 70 *tmp26 9 14
   182 jump *label326 always
-    * label *label307
   183 label *label308
   184 op add *tmp31 :y 12
   185 draw line 77 :y 77 *tmp31
   186 jump *label326 always
-    * label *label309
   187 label *label310
   188 draw line 71 :y 78 :y
   189 op add *tmp33 :y 6
 
   193 draw line 78 *tmp33 78 *tmp40
   194 draw line 71 *tmp40 78 *tmp40
   195 jump *label326 always
-    * label *label311
   196 label *label312
   197 op add *tmp46 :y 12
   198 draw line 78 :y 78 *tmp46
 
   201 draw line 71 *tmp48 78 *tmp48
   202 draw line 71 *tmp46 78 *tmp46
   203 jump *label326 always
-    * label *label313
   204 label *label314
   205 op add *tmp56 :y 12
   206 draw line 78 :y 78 *tmp56
 
   208 draw line 71 *tmp57 78 *tmp57
   209 draw line 71 *tmp57 71 *tmp56
   210 jump *label326 always
-    * label *label315
   211 label *label316
   212 draw line 71 :y 78 :y
   213 op add *tmp65 :y 6
 
   217 draw line 71 *tmp65 71 *tmp70
   218 draw line 71 *tmp70 78 *tmp70
   219 jump *label326 always
-    * label *label317
   220 label *label318
   221 op add *tmp74 :y 12
   222 draw line 71 :y 71 *tmp74
 
   226 draw line 71 *tmp78 78 *tmp78
   227 draw line 71 *tmp74 78 *tmp74
   228 jump *label326 always
-    * label *label319
   229 label *label320
   230 op add *tmp89 :y 12
   231 draw line 77 :y 77 *tmp89
   232 draw line 71 *tmp89 77 *tmp89
   233 jump *label326 always
-    * label *label321
   234 label *label322
   235 op sub *tmp97 :y 1
   236 draw lineRect 70 *tmp97 9 14
   237 op add *tmp98 :y 6
   238 draw line 71 *tmp98 78 *tmp98
   239 jump *label326 always
-    * label *label323
   240 label *label324
   241 draw line 71 :y 78 :y
   242 op add *tmp104 :y 12
 
   245 draw line 71 *tmp105 78 *tmp105
   246 draw line 71 *tmp105 71 *tmp104
   247 draw line 71 *tmp104 78 *tmp104
-    * label *label325
-    * label *label525
   248 label *label326
-    * label *label327
   249 op idiv :displayItem:amount :displayItem:amount 10
   250 jump *label328 notEqual :displayItem:amount 0
   251 jump *label413 always
   252 label *label328
-    * label *label329
-    * label *label330
-    * label *label331
   253 op mod *tmp19 :displayItem:amount 10
   254 # "Function: def drawDigit(in x, in y, in digit)"
   255 multijump *label539 *tmp19 0 (m:*label538)
 
   277 op sub *tmp26 :y 1
   278 draw lineRect 59 *tmp26 9 14
   279 jump *label352 always
-    * label *label333
   280 label *label334
   281 op add *tmp31 :y 12
   282 draw line 66 :y 66 *tmp31
   283 jump *label352 always
-    * label *label335
   284 label *label336
   285 draw line 60 :y 67 :y
   286 op add *tmp33 :y 6
 
   290 draw line 67 *tmp33 67 *tmp40
   291 draw line 60 *tmp40 67 *tmp40
   292 jump *label352 always
-    * label *label337
   293 label *label338
   294 op add *tmp46 :y 12
   295 draw line 67 :y 67 *tmp46
 
   298 draw line 60 *tmp48 67 *tmp48
   299 draw line 60 *tmp46 67 *tmp46
   300 jump *label352 always
-    * label *label339
   301 label *label340
   302 op add *tmp56 :y 12
   303 draw line 67 :y 67 *tmp56
 
   305 draw line 60 *tmp57 67 *tmp57
   306 draw line 60 *tmp57 60 *tmp56
   307 jump *label352 always
-    * label *label341
   308 label *label342
   309 draw line 60 :y 67 :y
   310 op add *tmp65 :y 6
 
   314 draw line 60 *tmp65 60 *tmp70
   315 draw line 60 *tmp70 67 *tmp70
   316 jump *label352 always
-    * label *label343
   317 label *label344
   318 op add *tmp74 :y 12
   319 draw line 60 :y 60 *tmp74
 
   323 draw line 60 *tmp78 67 *tmp78
   324 draw line 60 *tmp74 67 *tmp74
   325 jump *label352 always
-    * label *label345
   326 label *label346
   327 op add *tmp89 :y 12
   328 draw line 66 :y 66 *tmp89
   329 draw line 60 *tmp89 66 *tmp89
   330 jump *label352 always
-    * label *label347
   331 label *label348
   332 op sub *tmp97 :y 1
   333 draw lineRect 59 *tmp97 9 14
   334 op add *tmp98 :y 6
   335 draw line 60 *tmp98 67 *tmp98
   336 jump *label352 always
-    * label *label349
   337 label *label350
   338 draw line 60 :y 67 :y
   339 op add *tmp104 :y 12
 
   342 draw line 60 *tmp105 67 *tmp105
   343 draw line 60 *tmp105 60 *tmp104
   344 draw line 60 *tmp104 67 *tmp104
-    * label *label351
-    * label *label537
   345 label *label352
-    * label *label353
   346 op idiv :displayItem:amount :displayItem:amount 10
   347 jump *label354 notEqual :displayItem:amount 0
   348 jump *label413 always
   349 label *label354
-    * label *label355
-    * label *label356
-    * label *label357
   350 op mod *tmp19 :displayItem:amount 10
   351 # "Function: def drawDigit(in x, in y, in digit)"
   352 multijump *label551 *tmp19 0 (m:*label550)
 
   374 op sub *tmp26 :y 1
   375 draw lineRect 48 *tmp26 9 14
   376 jump *label378 always
-    * label *label359
   377 label *label360
   378 op add *tmp31 :y 12
   379 draw line 55 :y 55 *tmp31
   380 jump *label378 always
-    * label *label361
   381 label *label362
   382 draw line 49 :y 56 :y
   383 op add *tmp33 :y 6
 
   387 draw line 56 *tmp33 56 *tmp40
   388 draw line 49 *tmp40 56 *tmp40
   389 jump *label378 always
-    * label *label363
   390 label *label364
   391 op add *tmp46 :y 12
   392 draw line 56 :y 56 *tmp46
 
   395 draw line 49 *tmp48 56 *tmp48
   396 draw line 49 *tmp46 56 *tmp46
   397 jump *label378 always
-    * label *label365
   398 label *label366
   399 op add *tmp56 :y 12
   400 draw line 56 :y 56 *tmp56
 
   402 draw line 49 *tmp57 56 *tmp57
   403 draw line 49 *tmp57 49 *tmp56
   404 jump *label378 always
-    * label *label367
   405 label *label368
   406 draw line 49 :y 56 :y
   407 op add *tmp65 :y 6
 
   411 draw line 49 *tmp65 49 *tmp70
   412 draw line 49 *tmp70 56 *tmp70
   413 jump *label378 always
-    * label *label369
   414 label *label370
   415 op add *tmp74 :y 12
   416 draw line 49 :y 49 *tmp74
 
   420 draw line 49 *tmp78 56 *tmp78
   421 draw line 49 *tmp74 56 *tmp74
   422 jump *label378 always
-    * label *label371
   423 label *label372
   424 op add *tmp89 :y 12
   425 draw line 55 :y 55 *tmp89
   426 draw line 49 *tmp89 55 *tmp89
   427 jump *label378 always
-    * label *label373
   428 label *label374
   429 op sub *tmp97 :y 1
   430 draw lineRect 48 *tmp97 9 14
   431 op add *tmp98 :y 6
   432 draw line 49 *tmp98 56 *tmp98
   433 jump *label378 always
-    * label *label375
   434 label *label376
   435 draw line 49 :y 56 :y
   436 op add *tmp104 :y 12
 
   439 draw line 49 *tmp105 56 *tmp105
   440 draw line 49 *tmp105 49 *tmp104
   441 draw line 49 *tmp104 56 *tmp104
-    * label *label377
-    * label *label549
   442 label *label378
-    * label *label379
   443 op idiv :displayItem:amount :displayItem:amount 10
   444 jump *label380 notEqual :displayItem:amount 0
   445 jump *label413 always
   446 label *label380
-    * label *label381
-    * label *label382
-    * label *label383
   447 op mod *tmp19 :displayItem:amount 10
   448 # "Function: def drawDigit(in x, in y, in digit)"
   449 multijump *label563 *tmp19 0 (m:*label562)
 
   471 op sub *tmp26 :y 1
   472 draw lineRect 37 *tmp26 9 14
   473 jump *label404 always
-    * label *label385
   474 label *label386
   475 op add *tmp31 :y 12
   476 draw line 44 :y 44 *tmp31
   477 jump *label404 always
-    * label *label387
   478 label *label388
   479 draw line 38 :y 45 :y
   480 op add *tmp33 :y 6
 
   484 draw line 45 *tmp33 45 *tmp40
   485 draw line 38 *tmp40 45 *tmp40
   486 jump *label404 always
-    * label *label389
   487 label *label390
   488 op add *tmp46 :y 12
   489 draw line 45 :y 45 *tmp46
 
   492 draw line 38 *tmp48 45 *tmp48
   493 draw line 38 *tmp46 45 *tmp46
   494 jump *label404 always
-    * label *label391
   495 label *label392
   496 op add *tmp56 :y 12
   497 draw line 45 :y 45 *tmp56
 
   499 draw line 38 *tmp57 45 *tmp57
   500 draw line 38 *tmp57 38 *tmp56
   501 jump *label404 always
-    * label *label393
   502 label *label394
   503 draw line 38 :y 45 :y
   504 op add *tmp65 :y 6
 
   508 draw line 38 *tmp65 38 *tmp70
   509 draw line 38 *tmp70 45 *tmp70
   510 jump *label404 always
-    * label *label395
   511 label *label396
   512 op add *tmp74 :y 12
   513 draw line 38 :y 38 *tmp74
 
   517 draw line 38 *tmp78 45 *tmp78
   518 draw line 38 *tmp74 45 *tmp74
   519 jump *label404 always
-    * label *label397
   520 label *label398
   521 op add *tmp89 :y 12
   522 draw line 44 :y 44 *tmp89
   523 draw line 38 *tmp89 44 *tmp89
   524 jump *label404 always
-    * label *label399
   525 label *label400
   526 op sub *tmp97 :y 1
   527 draw lineRect 37 *tmp97 9 14
   528 op add *tmp98 :y 6
   529 draw line 38 *tmp98 45 *tmp98
   530 jump *label404 always
-    * label *label401
   531 label *label402
   532 draw line 38 :y 45 :y
   533 op add *tmp104 :y 12
 
   536 draw line 38 *tmp105 45 *tmp105
   537 draw line 38 *tmp105 38 *tmp104
   538 draw line 38 *tmp104 45 *tmp104
-    * label *label403
-    * label *label561
   539 label *label404
-    * label *label405
   540 op idiv :displayItem:amount :displayItem:amount 10
   541 jump *label406 notEqual :displayItem:amount 0
   542 jump *label413 always
   543 label *label406
-    * label *label407
-    * label *label408
-    * label *label409
   544 # "Function: def drawDigit12(in x, in y, in digit)"
   545 jump *label410 notEqual :displayItem:amount 1
   546 op add *tmp122 :y 12
 
   555 draw line 34 *tmp124 34 *tmp131
   556 draw line 27 *tmp131 34 *tmp131
   557 label *label411
-    * label *label412
   558 label *label413
   559 jump *label44 always
   560 label *label43
-    * label *label414
   561 # "Function: void displayItem(in x, in y)"
   562 op max :displayItem:amount AMOUNT 0
   563 draw color 0 255 0 255
-    * label *label415
-    * label *label416
   564 op mod *tmp19 :displayItem:amount 10
   565 # "Function: def drawDigit(in x, in y, in digit)"
   566 multijump *label575 *tmp19 0 (m:*label574)
 
   588 op sub *tmp26 :y 1
   589 draw lineRect 156 *tmp26 9 14
   590 jump *label437 always
-    * label *label418
   591 label *label419
   592 op add *tmp31 :y 12
   593 draw line 163 :y 163 *tmp31
   594 jump *label437 always
-    * label *label420
   595 label *label421
   596 draw line 157 :y 164 :y
   597 op add *tmp33 :y 6
 
   601 draw line 164 *tmp33 164 *tmp40
   602 draw line 157 *tmp40 164 *tmp40
   603 jump *label437 always
-    * label *label422
   604 label *label423
   605 op add *tmp46 :y 12
   606 draw line 164 :y 164 *tmp46
 
   609 draw line 157 *tmp48 164 *tmp48
   610 draw line 157 *tmp46 164 *tmp46
   611 jump *label437 always
-    * label *label424
   612 label *label425
   613 op add *tmp56 :y 12
   614 draw line 164 :y 164 *tmp56
 
   616 draw line 157 *tmp57 164 *tmp57
   617 draw line 157 *tmp57 157 *tmp56
   618 jump *label437 always
-    * label *label426
   619 label *label427
   620 draw line 157 :y 164 :y
   621 op add *tmp65 :y 6
 
   625 draw line 157 *tmp65 157 *tmp70
   626 draw line 157 *tmp70 164 *tmp70
   627 jump *label437 always
-    * label *label428
   628 label *label429
   629 op add *tmp74 :y 12
   630 draw line 157 :y 157 *tmp74
 
   634 draw line 157 *tmp78 164 *tmp78
   635 draw line 157 *tmp74 164 *tmp74
   636 jump *label437 always
-    * label *label430
   637 label *label431
   638 op add *tmp89 :y 12
   639 draw line 163 :y 163 *tmp89
   640 draw line 157 *tmp89 163 *tmp89
   641 jump *label437 always
-    * label *label432
   642 label *label433
   643 op sub *tmp97 :y 1
   644 draw lineRect 156 *tmp97 9 14
   645 op add *tmp98 :y 6
   646 draw line 157 *tmp98 164 *tmp98
   647 jump *label437 always
-    * label *label434
   648 label *label435
   649 draw line 157 :y 164 :y
   650 op add *tmp104 :y 12
 
   653 draw line 157 *tmp105 164 *tmp105
   654 draw line 157 *tmp105 157 *tmp104
   655 draw line 157 *tmp104 164 *tmp104
-    * label *label436
-    * label *label573
   656 label *label437
-    * label *label438
   657 op idiv :displayItem:amount :displayItem:amount 10
   658 jump *label439 notEqual :displayItem:amount 0
   659 jump *label524 always
   660 label *label439
-    * label *label440
-    * label *label441
-    * label *label442
   661 op mod *tmp19 :displayItem:amount 10
   662 # "Function: def drawDigit(in x, in y, in digit)"
   663 multijump *label587 *tmp19 0 (m:*label586)
 
   685 op sub *tmp26 :y 1
   686 draw lineRect 145 *tmp26 9 14
   687 jump *label463 always
-    * label *label444
   688 label *label445
   689 op add *tmp31 :y 12
   690 draw line 152 :y 152 *tmp31
   691 jump *label463 always
-    * label *label446
   692 label *label447
   693 draw line 146 :y 153 :y
   694 op add *tmp33 :y 6
 
   698 draw line 153 *tmp33 153 *tmp40
   699 draw line 146 *tmp40 153 *tmp40
   700 jump *label463 always
-    * label *label448
   701 label *label449
   702 op add *tmp46 :y 12
   703 draw line 153 :y 153 *tmp46
 
   706 draw line 146 *tmp48 153 *tmp48
   707 draw line 146 *tmp46 153 *tmp46
   708 jump *label463 always
-    * label *label450
   709 label *label451
   710 op add *tmp56 :y 12
   711 draw line 153 :y 153 *tmp56
 
   713 draw line 146 *tmp57 153 *tmp57
   714 draw line 146 *tmp57 146 *tmp56
   715 jump *label463 always
-    * label *label452
   716 label *label453
   717 draw line 146 :y 153 :y
   718 op add *tmp65 :y 6
 
   722 draw line 146 *tmp65 146 *tmp70
   723 draw line 146 *tmp70 153 *tmp70
   724 jump *label463 always
-    * label *label454
   725 label *label455
   726 op add *tmp74 :y 12
   727 draw line 146 :y 146 *tmp74
 
   731 draw line 146 *tmp78 153 *tmp78
   732 draw line 146 *tmp74 153 *tmp74
   733 jump *label463 always
-    * label *label456
   734 label *label457
   735 op add *tmp89 :y 12
   736 draw line 152 :y 152 *tmp89
   737 draw line 146 *tmp89 152 *tmp89
   738 jump *label463 always
-    * label *label458
   739 label *label459
   740 op sub *tmp97 :y 1
   741 draw lineRect 145 *tmp97 9 14
   742 op add *tmp98 :y 6
   743 draw line 146 *tmp98 153 *tmp98
   744 jump *label463 always
-    * label *label460
   745 label *label461
   746 draw line 146 :y 153 :y
   747 op add *tmp104 :y 12
 
   750 draw line 146 *tmp105 153 *tmp105
   751 draw line 146 *tmp105 146 *tmp104
   752 draw line 146 *tmp104 153 *tmp104
-    * label *label462
-    * label *label585
   753 label *label463
-    * label *label464
   754 op idiv :displayItem:amount :displayItem:amount 10
   755 jump *label465 notEqual :displayItem:amount 0
   756 jump *label524 always
   757 label *label465
-    * label *label466
-    * label *label467
-    * label *label468
   758 op mod *tmp19 :displayItem:amount 10
   759 # "Function: def drawDigit(in x, in y, in digit)"
   760 multijump *label599 *tmp19 0 (m:*label598)
 
   782 op sub *tmp26 :y 1
   783 draw lineRect 134 *tmp26 9 14
   784 jump *label489 always
-    * label *label470
   785 label *label471
   786 op add *tmp31 :y 12
   787 draw line 141 :y 141 *tmp31
   788 jump *label489 always
-    * label *label472
   789 label *label473
   790 draw line 135 :y 142 :y
   791 op add *tmp33 :y 6
 
   795 draw line 142 *tmp33 142 *tmp40
   796 draw line 135 *tmp40 142 *tmp40
   797 jump *label489 always
-    * label *label474
   798 label *label475
   799 op add *tmp46 :y 12
   800 draw line 142 :y 142 *tmp46
 
   803 draw line 135 *tmp48 142 *tmp48
   804 draw line 135 *tmp46 142 *tmp46
   805 jump *label489 always
-    * label *label476
   806 label *label477
   807 op add *tmp56 :y 12
   808 draw line 142 :y 142 *tmp56
 
   810 draw line 135 *tmp57 142 *tmp57
   811 draw line 135 *tmp57 135 *tmp56
   812 jump *label489 always
-    * label *label478
   813 label *label479
   814 draw line 135 :y 142 :y
   815 op add *tmp65 :y 6
 
   819 draw line 135 *tmp65 135 *tmp70
   820 draw line 135 *tmp70 142 *tmp70
   821 jump *label489 always
-    * label *label480
   822 label *label481
   823 op add *tmp74 :y 12
   824 draw line 135 :y 135 *tmp74
 
   828 draw line 135 *tmp78 142 *tmp78
   829 draw line 135 *tmp74 142 *tmp74
   830 jump *label489 always
-    * label *label482
   831 label *label483
   832 op add *tmp89 :y 12
   833 draw line 141 :y 141 *tmp89
   834 draw line 135 *tmp89 141 *tmp89
   835 jump *label489 always
-    * label *label484
   836 label *label485
   837 op sub *tmp97 :y 1
   838 draw lineRect 134 *tmp97 9 14
   839 op add *tmp98 :y 6
   840 draw line 135 *tmp98 142 *tmp98
   841 jump *label489 always
-    * label *label486
   842 label *label487
   843 draw line 135 :y 142 :y
   844 op add *tmp104 :y 12
 
   847 draw line 135 *tmp105 142 *tmp105
   848 draw line 135 *tmp105 135 *tmp104
   849 draw line 135 *tmp104 142 *tmp104
-    * label *label488
-    * label *label597
   850 label *label489
-    * label *label490
   851 op idiv :displayItem:amount :displayItem:amount 10
   852 jump *label491 notEqual :displayItem:amount 0
   853 jump *label524 always
   854 label *label491
-    * label *label492
-    * label *label493
-    * label *label494
   855 op mod *tmp19 :displayItem:amount 10
   856 # "Function: def drawDigit(in x, in y, in digit)"
   857 multijump *label611 *tmp19 0 (m:*label610)
 
   879 op sub *tmp26 :y 1
   880 draw lineRect 123 *tmp26 9 14
   881 jump *label515 always
-    * label *label496
   882 label *label497
   883 op add *tmp31 :y 12
   884 draw line 130 :y 130 *tmp31
   885 jump *label515 always
-    * label *label498
   886 label *label499
   887 draw line 124 :y 131 :y
   888 op add *tmp33 :y 6
 
   892 draw line 131 *tmp33 131 *tmp40
   893 draw line 124 *tmp40 131 *tmp40
   894 jump *label515 always
-    * label *label500
   895 label *label501
   896 op add *tmp46 :y 12
   897 draw line 131 :y 131 *tmp46
 
   900 draw line 124 *tmp48 131 *tmp48
   901 draw line 124 *tmp46 131 *tmp46
   902 jump *label515 always
-    * label *label502
   903 label *label503
   904 op add *tmp56 :y 12
   905 draw line 131 :y 131 *tmp56
 
   907 draw line 124 *tmp57 131 *tmp57
   908 draw line 124 *tmp57 124 *tmp56
   909 jump *label515 always
-    * label *label504
   910 label *label505
   911 draw line 124 :y 131 :y
   912 op add *tmp65 :y 6
 
   916 draw line 124 *tmp65 124 *tmp70
   917 draw line 124 *tmp70 131 *tmp70
   918 jump *label515 always
-    * label *label506
   919 label *label507
   920 op add *tmp74 :y 12
   921 draw line 124 :y 124 *tmp74
 
   925 draw line 124 *tmp78 131 *tmp78
   926 draw line 124 *tmp74 131 *tmp74
   927 jump *label515 always
-    * label *label508
   928 label *label509
   929 op add *tmp89 :y 12
   930 draw line 130 :y 130 *tmp89
   931 draw line 124 *tmp89 130 *tmp89
   932 jump *label515 always
-    * label *label510
   933 label *label511
   934 op sub *tmp97 :y 1
   935 draw lineRect 123 *tmp97 9 14
   936 op add *tmp98 :y 6
   937 draw line 124 *tmp98 131 *tmp98
   938 jump *label515 always
-    * label *label512
   939 label *label513
   940 draw line 124 :y 131 :y
   941 op add *tmp104 :y 12
 
   944 draw line 124 *tmp105 131 *tmp105
   945 draw line 124 *tmp105 124 *tmp104
   946 draw line 124 *tmp104 131 *tmp104
-    * label *label514
-    * label *label609
   947 label *label515
-    * label *label516
   948 op idiv :displayItem:amount :displayItem:amount 10
   949 jump *label517 notEqual :displayItem:amount 0
   950 jump *label524 always
   951 label *label517
-    * label *label518
-    * label *label519
-    * label *label520
   952 # "Function: def drawDigit12(in x, in y, in digit)"
   953 jump *label521 notEqual :displayItem:amount 1
   954 op add *tmp122 :y 12
 
   963 draw line 120 *tmp124 120 *tmp131
   964 draw line 113 *tmp131 120 *tmp131
   965 label *label522
-    * label *label523
   966 label *label524
   967 label *label44
   968 op add :index :index 1
 
   970 jump *label45 notEqual :index 8
   971 drawflush display1
   972 set :y 152
-    * label *label194
   973 # "Function: def eraseNumbers(in first_column)"
   974 draw color 0 0 80 255
   975 jump *label195 always
 
   978 label *label195
   979 draw rect 109 0 176 176
   980 label *label196
-    * label *label197
   981 label *label45
-    * label *label46
-    * label *label25
   982 multijump *tmp10 0 0 (m:marker1)
   983 multilabel *label42 (m:marker1)
-    * label *label26
   984 drawflush display1
   985 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   247 draw line 71 *tmp104 78 *tmp104
   248 label *label326
   249 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label328 notEqual :displayItem:amount 0
-    * jump *label413 always
+  250 jump *label413 equal :displayItem:amount 0
   251 label *label328
   252 op mod *tmp19 :displayItem:amount 10
   253 # "Function: def drawDigit(in x, in y, in digit)"
 
   343 draw line 60 *tmp104 67 *tmp104
   344 label *label352
   345 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label354 notEqual :displayItem:amount 0
-    * jump *label413 always
+  346 jump *label413 equal :displayItem:amount 0
   347 label *label354
   348 op mod *tmp19 :displayItem:amount 10
   349 # "Function: def drawDigit(in x, in y, in digit)"
 
   439 draw line 49 *tmp104 56 *tmp104
   440 label *label378
   441 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label380 notEqual :displayItem:amount 0
-    * jump *label413 always
+  442 jump *label413 equal :displayItem:amount 0
   443 label *label380
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
 
   535 draw line 38 *tmp104 45 *tmp104
   536 label *label404
   537 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label406 notEqual :displayItem:amount 0
-    * jump *label413 always
+  538 jump *label413 equal :displayItem:amount 0
   539 label *label406
   540 # "Function: def drawDigit12(in x, in y, in digit)"
   541 jump *label410 notEqual :displayItem:amount 1
 
   651 draw line 157 *tmp104 164 *tmp104
   652 label *label437
   653 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label439 notEqual :displayItem:amount 0
-    * jump *label524 always
+  654 jump *label524 equal :displayItem:amount 0
   655 label *label439
   656 op mod *tmp19 :displayItem:amount 10
   657 # "Function: def drawDigit(in x, in y, in digit)"
 
   747 draw line 146 *tmp104 153 *tmp104
   748 label *label463
   749 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label465 notEqual :displayItem:amount 0
-    * jump *label524 always
+  750 jump *label524 equal :displayItem:amount 0
   751 label *label465
   752 op mod *tmp19 :displayItem:amount 10
   753 # "Function: def drawDigit(in x, in y, in digit)"
 
   843 draw line 135 *tmp104 142 *tmp104
   844 label *label489
   845 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label491 notEqual :displayItem:amount 0
-    * jump *label524 always
+  846 jump *label524 equal :displayItem:amount 0
   847 label *label491
   848 op mod *tmp19 :displayItem:amount 10
   849 # "Function: def drawDigit(in x, in y, in digit)"
 
   939 draw line 124 *tmp104 131 *tmp104
   940 label *label515
   941 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label517 notEqual :displayItem:amount 0
-    * jump *label524 always
+  942 jump *label524 equal :displayItem:amount 0
   943 label *label517
   944 # "Function: def drawDigit12(in x, in y, in digit)"
   945 jump *label521 notEqual :displayItem:amount 1

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   248 label *label326
   249 op idiv :displayItem:amount :displayItem:amount 10
   250 jump *label413 equal :displayItem:amount 0
-    * label *label328
   251 op mod *tmp19 :displayItem:amount 10
   252 # "Function: def drawDigit(in x, in y, in digit)"
   253 multijump *label539 *tmp19 0 (m:*label538)
 
   343 label *label352
   344 op idiv :displayItem:amount :displayItem:amount 10
   345 jump *label413 equal :displayItem:amount 0
-    * label *label354
   346 op mod *tmp19 :displayItem:amount 10
   347 # "Function: def drawDigit(in x, in y, in digit)"
   348 multijump *label551 *tmp19 0 (m:*label550)
 
   438 label *label378
   439 op idiv :displayItem:amount :displayItem:amount 10
   440 jump *label413 equal :displayItem:amount 0
-    * label *label380
   441 op mod *tmp19 :displayItem:amount 10
   442 # "Function: def drawDigit(in x, in y, in digit)"
   443 multijump *label563 *tmp19 0 (m:*label562)
 
   533 label *label404
   534 op idiv :displayItem:amount :displayItem:amount 10
   535 jump *label413 equal :displayItem:amount 0
-    * label *label406
   536 # "Function: def drawDigit12(in x, in y, in digit)"
   537 jump *label410 notEqual :displayItem:amount 1
   538 op add *tmp122 :y 12
 
   648 label *label437
   649 op idiv :displayItem:amount :displayItem:amount 10
   650 jump *label524 equal :displayItem:amount 0
-    * label *label439
   651 op mod *tmp19 :displayItem:amount 10
   652 # "Function: def drawDigit(in x, in y, in digit)"
   653 multijump *label587 *tmp19 0 (m:*label586)
 
   743 label *label463
   744 op idiv :displayItem:amount :displayItem:amount 10
   745 jump *label524 equal :displayItem:amount 0
-    * label *label465
   746 op mod *tmp19 :displayItem:amount 10
   747 # "Function: def drawDigit(in x, in y, in digit)"
   748 multijump *label599 *tmp19 0 (m:*label598)
 
   838 label *label489
   839 op idiv :displayItem:amount :displayItem:amount 10
   840 jump *label524 equal :displayItem:amount 0
-    * label *label491
   841 op mod *tmp19 :displayItem:amount 10
   842 # "Function: def drawDigit(in x, in y, in digit)"
   843 multijump *label611 *tmp19 0 (m:*label610)
 
   933 label *label515
   934 op idiv :displayItem:amount :displayItem:amount 10
   935 jump *label524 equal :displayItem:amount 0
-    * label *label517
   936 # "Function: def drawDigit12(in x, in y, in digit)"
   937 jump *label521 notEqual :displayItem:amount 1
   938 op add *tmp122 :y 12

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   247 draw line 71 *tmp104 78 *tmp104
   248 label *label326
   249 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label413 equal :displayItem:amount 0
+  250 jump *label44 equal :displayItem:amount 0
   251 op mod *tmp19 :displayItem:amount 10
   252 # "Function: def drawDigit(in x, in y, in digit)"
   253 multijump *label539 *tmp19 0 (m:*label538)
 
   342 draw line 60 *tmp104 67 *tmp104
   343 label *label352
   344 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label413 equal :displayItem:amount 0
+  345 jump *label44 equal :displayItem:amount 0
   346 op mod *tmp19 :displayItem:amount 10
   347 # "Function: def drawDigit(in x, in y, in digit)"
   348 multijump *label551 *tmp19 0 (m:*label550)
 
   437 draw line 49 *tmp104 56 *tmp104
   438 label *label378
   439 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label413 equal :displayItem:amount 0
+  440 jump *label44 equal :displayItem:amount 0
   441 op mod *tmp19 :displayItem:amount 10
   442 # "Function: def drawDigit(in x, in y, in digit)"
   443 multijump *label563 *tmp19 0 (m:*label562)
 
   532 draw line 38 *tmp104 45 *tmp104
   533 label *label404
   534 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label413 equal :displayItem:amount 0
+  535 jump *label44 equal :displayItem:amount 0
   536 # "Function: def drawDigit12(in x, in y, in digit)"
   537 jump *label410 notEqual :displayItem:amount 1
   538 op add *tmp122 :y 12
   539 draw line 33 :y 33 *tmp122
-    * jump *label411 always
+  540 jump *label44 always
   541 label *label410
   542 draw line 27 :y 34 :y
   543 op add *tmp124 :y 6

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-21 instructions):
 
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label200 always
-    * draw rect 93 0 16 176
     6 label *label200
     7 # "Function: def eraseImages(in first_column)"
     8 draw color 0 0 80 255
     9 jump *label203 always
-    * draw rect 0 0 23 176
-    * jump *label204 always
    10 label *label203
    11 draw rect 93 0 16 176
    12 label *label204
    13 draw color 255 255 255 255
    14 draw image 15 159 @sand 16 0
    15 jump *label207 always
-    * draw color 255 255 255 255
    16 label *label207
    17 draw image 15 139 @copper 16 0
    18 jump *label213 always
-    * draw color 255 255 255 255
    19 label *label213
    20 draw image 15 119 @lead 16 0
    21 jump *label219 always
-    * draw color 255 255 255 255
    22 label *label219
    23 draw image 15 99 @coal 16 0
    24 jump *label225 always
-    * draw color 255 255 255 255
    25 label *label225
    26 draw image 15 79 @titanium 16 0
    27 jump *label231 always
-    * draw color 255 255 255 255
    28 label *label231
    29 draw image 15 59 @thorium 16 0
    30 jump *label237 always
-    * draw color 255 255 255 255
    31 label *label237
    32 draw image 15 39 @scrap 16 0
    33 jump *label243 always
-    * draw color 255 255 255 255
    34 label *label243
    35 draw image 15 19 @graphite 16 0
    36 draw color 255 255 255 255
    37 draw image 101 159 @metaglass 16 0
    38 jump *label255 always
-    * draw color 255 255 255 255
    39 label *label255
    40 draw image 101 139 @silicon 16 0
    41 jump *label261 always
-    * draw color 255 255 255 255
    42 label *label261
    43 draw image 101 119 @pyratite 16 0
    44 jump *label267 always
-    * draw color 255 255 255 255
    45 label *label267
    46 draw image 101 99 @blast-compound 16 0
    47 jump *label273 always
-    * draw color 255 255 255 255
    48 label *label273
    49 draw image 101 79 @plastanium 16 0
    50 jump *label279 always
-    * draw color 255 255 255 255
    51 label *label279
    52 draw image 101 59 @phase-fabric 16 0
    53 jump *label285 always
-    * draw color 255 255 255 255
    54 label *label285
    55 draw image 101 39 @surge-alloy 16 0
    56 jump *label291 always
-    * draw color 255 255 255 255
    57 label *label291
    58 draw image 101 19 @spore-pod 16 0
    59 jump *label297 always
-    * draw color 255 255 255 255
    60 label *label297
    61 drawflush display1
    62 set :y 152
 
    64 draw color 0 0 80 255
    65 draw rect 23 0 70 176
    66 jump *label192 always
-    * draw rect 109 0 176 176
    67 label *label192
    68 set :index 0
    69 set :item @sand
 
   527 op add *tmp131 :y 12
   528 draw line 34 *tmp124 34 *tmp131
   529 draw line 27 *tmp131 34 *tmp131
-    * label *label411
-    * label *label413
   530 jump *label44 always
   531 label *label43
   532 # "Function: void displayItem(in x, in y)"
 
   936 # "Function: def eraseNumbers(in first_column)"
   937 draw color 0 0 80 255
   938 jump *label195 always
-    * draw rect 23 0 70 176
-    * jump *label196 always
   939 label *label195
   940 draw rect 109 0 176 176
   941 label *label196

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
     9 jump *label203 always
    10 label *label203
    11 draw rect 93 0 16 176
-    * label *label204
    12 draw color 255 255 255 255
    13 draw image 15 159 @sand 16 0
    14 jump *label207 always
 
   937 jump *label195 always
   938 label *label195
   939 draw rect 109 0 176 176
-    * label *label196
   940 label *label45
   941 multijump *tmp10 0 0 (m:marker1)
   942 multilabel *label42 (m:marker1)

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-20 instructions):
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * jump *label200 always
     5 label *label200
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label203 always
     8 label *label203
     9 draw rect 93 0 16 176
    10 draw color 255 255 255 255
    11 draw image 15 159 @sand 16 0
-    * jump *label207 always
    12 label *label207
    13 draw image 15 139 @copper 16 0
-    * jump *label213 always
    14 label *label213
    15 draw image 15 119 @lead 16 0
-    * jump *label219 always
    16 label *label219
    17 draw image 15 99 @coal 16 0
-    * jump *label225 always
    18 label *label225
    19 draw image 15 79 @titanium 16 0
-    * jump *label231 always
    20 label *label231
    21 draw image 15 59 @thorium 16 0
-    * jump *label237 always
    22 label *label237
    23 draw image 15 39 @scrap 16 0
-    * jump *label243 always
    24 label *label243
    25 draw image 15 19 @graphite 16 0
    26 draw color 255 255 255 255
    27 draw image 101 159 @metaglass 16 0
-    * jump *label255 always
    28 label *label255
    29 draw image 101 139 @silicon 16 0
-    * jump *label261 always
    30 label *label261
    31 draw image 101 119 @pyratite 16 0
-    * jump *label267 always
    32 label *label267
    33 draw image 101 99 @blast-compound 16 0
-    * jump *label273 always
    34 label *label273
    35 draw image 101 79 @plastanium 16 0
-    * jump *label279 always
    36 label *label279
    37 draw image 101 59 @phase-fabric 16 0
-    * jump *label285 always
    38 label *label285
    39 draw image 101 39 @surge-alloy 16 0
-    * jump *label291 always
    40 label *label291
    41 draw image 101 19 @spore-pod 16 0
-    * jump *label297 always
    42 label *label297
    43 drawflush display1
    44 set :y 152
    45 # "Function: def eraseNumbers(in first_column)"
    46 draw color 0 0 80 255
    47 draw rect 23 0 70 176
-    * jump *label192 always
    48 label *label192
    49 set :index 0
    50 set :item @sand
 
   916 set :y 152
   917 # "Function: def eraseNumbers(in first_column)"
   918 draw color 0 0 80 255
-    * jump *label195 always
   919 label *label195
   920 draw rect 109 0 176 176
   921 label *label45
   922 multijump *tmp10 0 0 (m:marker1)
   923 multilabel *label42 (m:marker1)
   924 drawflush display1
-    * end

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * label *label200
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
-    * label *label203
     7 draw rect 93 0 16 176
     8 draw color 255 255 255 255
     9 draw image 15 159 @sand 16 0
-    * label *label207
    10 draw image 15 139 @copper 16 0
-    * label *label213
    11 draw image 15 119 @lead 16 0
-    * label *label219
    12 draw image 15 99 @coal 16 0
-    * label *label225
    13 draw image 15 79 @titanium 16 0
-    * label *label231
    14 draw image 15 59 @thorium 16 0
-    * label *label237
    15 draw image 15 39 @scrap 16 0
-    * label *label243
    16 draw image 15 19 @graphite 16 0
    17 draw color 255 255 255 255
    18 draw image 101 159 @metaglass 16 0
-    * label *label255
    19 draw image 101 139 @silicon 16 0
-    * label *label261
    20 draw image 101 119 @pyratite 16 0
-    * label *label267
    21 draw image 101 99 @blast-compound 16 0
-    * label *label273
    22 draw image 101 79 @plastanium 16 0
-    * label *label279
    23 draw image 101 59 @phase-fabric 16 0
-    * label *label285
    24 draw image 101 39 @surge-alloy 16 0
-    * label *label291
    25 draw image 101 19 @spore-pod 16 0
-    * label *label297
    26 drawflush display1
    27 set :y 152
    28 # "Function: def eraseNumbers(in first_column)"
    29 draw color 0 0 80 255
    30 draw rect 23 0 70 176
-    * label *label192
    31 set :index 0
    32 set :item @sand
    33 op add *tmp10 @counter 1
 
   898 set :y 152
   899 # "Function: def eraseNumbers(in first_column)"
   900 draw color 0 0 80 255
-    * label *label195
   901 draw rect 109 0 176 176
   902 label *label45
   903 multijump *tmp10 0 0 (m:marker1)

Final code before resolving virtual instructions:

set AMOUNT 12345
draw stroke 2
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
draw image 15 159 @sand 16 0
draw image 15 139 @copper 16 0
draw image 15 119 @lead 16 0
draw image 15 99 @coal 16 0
draw image 15 79 @titanium 16 0
draw image 15 59 @thorium 16 0
draw image 15 39 @scrap 16 0
draw image 15 19 @graphite 16 0
draw color 255 255 255 255
draw image 101 159 @metaglass 16 0
draw image 101 139 @silicon 16 0
draw image 101 119 @pyratite 16 0
draw image 101 99 @blast-compound 16 0
draw image 101 79 @plastanium 16 0
draw image 101 59 @phase-fabric 16 0
draw image 101 39 @surge-alloy 16 0
draw image 101 19 @spore-pod 16 0
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp10 @counter 1
jump *label24 always
multilabel *label27
set :item @copper
op add *tmp10 @counter 1
jump *label24 always
multilabel *label28
set :item @lead
op add *tmp10 @counter 1
jump *label24 always
multilabel *label29
set :item @coal
op add *tmp10 @counter 1
jump *label24 always
multilabel *label30
set :item @titanium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label31
set :item @thorium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label32
set :item @scrap
op add *tmp10 @counter 1
jump *label24 always
multilabel *label33
set :item @graphite
op add *tmp10 @counter 1
jump *label24 always
multilabel *label34
set :item @metaglass
op add *tmp10 @counter 1
jump *label24 always
multilabel *label35
set :item @silicon
op add *tmp10 @counter 1
jump *label24 always
multilabel *label36
set :item @pyratite
op add *tmp10 @counter 1
jump *label24 always
multilabel *label37
set :item @blast-compound
op add *tmp10 @counter 1
jump *label24 always
multilabel *label38
set :item @plastanium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label39
set :item @phase-fabric
op add *tmp10 @counter 1
jump *label24 always
multilabel *label40
set :item @surge-alloy
op add *tmp10 @counter 1
jump *label24 always
multilabel *label41
set :item @spore-pod
set *tmp10 null
label *label24
draw image 0 0 :item 16 0
jump *label43 greaterThanEq :index 8
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label527 *tmp19 0
multilabel *label527
jump *label306 always
multilabel *label528
jump *label308 always
multilabel *label529
jump *label310 always
multilabel *label530
jump *label312 always
multilabel *label531
jump *label314 always
multilabel *label532
jump *label316 always
multilabel *label533
jump *label318 always
multilabel *label534
jump *label320 always
multilabel *label535
jump *label322 always
multilabel *label536
jump *label324 always
label *label306
op sub *tmp26 :y 1
draw lineRect 70 *tmp26 9 14
jump *label326 always
label *label308
op add *tmp31 :y 12
draw line 77 :y 77 *tmp31
jump *label326 always
label *label310
draw line 71 :y 78 :y
op add *tmp33 :y 6
draw line 71 :y 71 *tmp33
draw line 71 *tmp33 78 *tmp33
op add *tmp40 :y 12
draw line 78 *tmp33 78 *tmp40
draw line 71 *tmp40 78 *tmp40
jump *label326 always
label *label312
op add *tmp46 :y 12
draw line 78 :y 78 *tmp46
draw line 71 :y 78 :y
op add *tmp48 :y 6
draw line 71 *tmp48 78 *tmp48
draw line 71 *tmp46 78 *tmp46
jump *label326 always
label *label314
op add *tmp56 :y 12
draw line 78 :y 78 *tmp56
op add *tmp57 :y 6
draw line 71 *tmp57 78 *tmp57
draw line 71 *tmp57 71 *tmp56
jump *label326 always
label *label316
draw line 71 :y 78 :y
op add *tmp65 :y 6
draw line 78 :y 78 *tmp65
draw line 71 *tmp65 78 *tmp65
op add *tmp70 :y 12
draw line 71 *tmp65 71 *tmp70
draw line 71 *tmp70 78 *tmp70
jump *label326 always
label *label318
op add *tmp74 :y 12
draw line 71 :y 71 *tmp74
draw line 71 :y 78 :y
op add *tmp78 :y 6
draw line 78 :y 78 *tmp78
draw line 71 *tmp78 78 *tmp78
draw line 71 *tmp74 78 *tmp74
jump *label326 always
label *label320
op add *tmp89 :y 12
draw line 77 :y 77 *tmp89
draw line 71 *tmp89 77 *tmp89
jump *label326 always
label *label322
op sub *tmp97 :y 1
draw lineRect 70 *tmp97 9 14
op add *tmp98 :y 6
draw line 71 *tmp98 78 *tmp98
jump *label326 always
label *label324
draw line 71 :y 78 :y
op add *tmp104 :y 12
draw line 78 :y 78 *tmp104
op add *tmp105 :y 6
draw line 71 *tmp105 78 *tmp105
draw line 71 *tmp105 71 *tmp104
draw line 71 *tmp104 78 *tmp104
label *label326
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label539 *tmp19 0
multilabel *label539
jump *label332 always
multilabel *label540
jump *label334 always
multilabel *label541
jump *label336 always
multilabel *label542
jump *label338 always
multilabel *label543
jump *label340 always
multilabel *label544
jump *label342 always
multilabel *label545
jump *label344 always
multilabel *label546
jump *label346 always
multilabel *label547
jump *label348 always
multilabel *label548
jump *label350 always
label *label332
op sub *tmp26 :y 1
draw lineRect 59 *tmp26 9 14
jump *label352 always
label *label334
op add *tmp31 :y 12
draw line 66 :y 66 *tmp31
jump *label352 always
label *label336
draw line 60 :y 67 :y
op add *tmp33 :y 6
draw line 60 :y 60 *tmp33
draw line 60 *tmp33 67 *tmp33
op add *tmp40 :y 12
draw line 67 *tmp33 67 *tmp40
draw line 60 *tmp40 67 *tmp40
jump *label352 always
label *label338
op add *tmp46 :y 12
draw line 67 :y 67 *tmp46
draw line 60 :y 67 :y
op add *tmp48 :y 6
draw line 60 *tmp48 67 *tmp48
draw line 60 *tmp46 67 *tmp46
jump *label352 always
label *label340
op add *tmp56 :y 12
draw line 67 :y 67 *tmp56
op add *tmp57 :y 6
draw line 60 *tmp57 67 *tmp57
draw line 60 *tmp57 60 *tmp56
jump *label352 always
label *label342
draw line 60 :y 67 :y
op add *tmp65 :y 6
draw line 67 :y 67 *tmp65
draw line 60 *tmp65 67 *tmp65
op add *tmp70 :y 12
draw line 60 *tmp65 60 *tmp70
draw line 60 *tmp70 67 *tmp70
jump *label352 always
label *label344
op add *tmp74 :y 12
draw line 60 :y 60 *tmp74
draw line 60 :y 67 :y
op add *tmp78 :y 6
draw line 67 :y 67 *tmp78
draw line 60 *tmp78 67 *tmp78
draw line 60 *tmp74 67 *tmp74
jump *label352 always
label *label346
op add *tmp89 :y 12
draw line 66 :y 66 *tmp89
draw line 60 *tmp89 66 *tmp89
jump *label352 always
label *label348
op sub *tmp97 :y 1
draw lineRect 59 *tmp97 9 14
op add *tmp98 :y 6
draw line 60 *tmp98 67 *tmp98
jump *label352 always
label *label350
draw line 60 :y 67 :y
op add *tmp104 :y 12
draw line 67 :y 67 *tmp104
op add *tmp105 :y 6
draw line 60 *tmp105 67 *tmp105
draw line 60 *tmp105 60 *tmp104
draw line 60 *tmp104 67 *tmp104
label *label352
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label551 *tmp19 0
multilabel *label551
jump *label358 always
multilabel *label552
jump *label360 always
multilabel *label553
jump *label362 always
multilabel *label554
jump *label364 always
multilabel *label555
jump *label366 always
multilabel *label556
jump *label368 always
multilabel *label557
jump *label370 always
multilabel *label558
jump *label372 always
multilabel *label559
jump *label374 always
multilabel *label560
jump *label376 always
label *label358
op sub *tmp26 :y 1
draw lineRect 48 *tmp26 9 14
jump *label378 always
label *label360
op add *tmp31 :y 12
draw line 55 :y 55 *tmp31
jump *label378 always
label *label362
draw line 49 :y 56 :y
op add *tmp33 :y 6
draw line 49 :y 49 *tmp33
draw line 49 *tmp33 56 *tmp33
op add *tmp40 :y 12
draw line 56 *tmp33 56 *tmp40
draw line 49 *tmp40 56 *tmp40
jump *label378 always
label *label364
op add *tmp46 :y 12
draw line 56 :y 56 *tmp46
draw line 49 :y 56 :y
op add *tmp48 :y 6
draw line 49 *tmp48 56 *tmp48
draw line 49 *tmp46 56 *tmp46
jump *label378 always
label *label366
op add *tmp56 :y 12
draw line 56 :y 56 *tmp56
op add *tmp57 :y 6
draw line 49 *tmp57 56 *tmp57
draw line 49 *tmp57 49 *tmp56
jump *label378 always
label *label368
draw line 49 :y 56 :y
op add *tmp65 :y 6
draw line 56 :y 56 *tmp65
draw line 49 *tmp65 56 *tmp65
op add *tmp70 :y 12
draw line 49 *tmp65 49 *tmp70
draw line 49 *tmp70 56 *tmp70
jump *label378 always
label *label370
op add *tmp74 :y 12
draw line 49 :y 49 *tmp74
draw line 49 :y 56 :y
op add *tmp78 :y 6
draw line 56 :y 56 *tmp78
draw line 49 *tmp78 56 *tmp78
draw line 49 *tmp74 56 *tmp74
jump *label378 always
label *label372
op add *tmp89 :y 12
draw line 55 :y 55 *tmp89
draw line 49 *tmp89 55 *tmp89
jump *label378 always
label *label374
op sub *tmp97 :y 1
draw lineRect 48 *tmp97 9 14
op add *tmp98 :y 6
draw line 49 *tmp98 56 *tmp98
jump *label378 always
label *label376
draw line 49 :y 56 :y
op add *tmp104 :y 12
draw line 56 :y 56 *tmp104
op add *tmp105 :y 6
draw line 49 *tmp105 56 *tmp105
draw line 49 *tmp105 49 *tmp104
draw line 49 *tmp104 56 *tmp104
label *label378
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label563 *tmp19 0
multilabel *label563
jump *label384 always
multilabel *label564
jump *label386 always
multilabel *label565
jump *label388 always
multilabel *label566
jump *label390 always
multilabel *label567
jump *label392 always
multilabel *label568
jump *label394 always
multilabel *label569
jump *label396 always
multilabel *label570
jump *label398 always
multilabel *label571
jump *label400 always
multilabel *label572
jump *label402 always
label *label384
op sub *tmp26 :y 1
draw lineRect 37 *tmp26 9 14
jump *label404 always
label *label386
op add *tmp31 :y 12
draw line 44 :y 44 *tmp31
jump *label404 always
label *label388
draw line 38 :y 45 :y
op add *tmp33 :y 6
draw line 38 :y 38 *tmp33
draw line 38 *tmp33 45 *tmp33
op add *tmp40 :y 12
draw line 45 *tmp33 45 *tmp40
draw line 38 *tmp40 45 *tmp40
jump *label404 always
label *label390
op add *tmp46 :y 12
draw line 45 :y 45 *tmp46
draw line 38 :y 45 :y
op add *tmp48 :y 6
draw line 38 *tmp48 45 *tmp48
draw line 38 *tmp46 45 *tmp46
jump *label404 always
label *label392
op add *tmp56 :y 12
draw line 45 :y 45 *tmp56
op add *tmp57 :y 6
draw line 38 *tmp57 45 *tmp57
draw line 38 *tmp57 38 *tmp56
jump *label404 always
label *label394
draw line 38 :y 45 :y
op add *tmp65 :y 6
draw line 45 :y 45 *tmp65
draw line 38 *tmp65 45 *tmp65
op add *tmp70 :y 12
draw line 38 *tmp65 38 *tmp70
draw line 38 *tmp70 45 *tmp70
jump *label404 always
label *label396
op add *tmp74 :y 12
draw line 38 :y 38 *tmp74
draw line 38 :y 45 :y
op add *tmp78 :y 6
draw line 45 :y 45 *tmp78
draw line 38 *tmp78 45 *tmp78
draw line 38 *tmp74 45 *tmp74
jump *label404 always
label *label398
op add *tmp89 :y 12
draw line 44 :y 44 *tmp89
draw line 38 *tmp89 44 *tmp89
jump *label404 always
label *label400
op sub *tmp97 :y 1
draw lineRect 37 *tmp97 9 14
op add *tmp98 :y 6
draw line 38 *tmp98 45 *tmp98
jump *label404 always
label *label402
draw line 38 :y 45 :y
op add *tmp104 :y 12
draw line 45 :y 45 *tmp104
op add *tmp105 :y 6
draw line 38 *tmp105 45 *tmp105
draw line 38 *tmp105 38 *tmp104
draw line 38 *tmp104 45 *tmp104
label *label404
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label410 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 33 :y 33 *tmp122
jump *label44 always
label *label410
draw line 27 :y 34 :y
op add *tmp124 :y 6
draw line 27 :y 27 *tmp124
draw line 27 *tmp124 34 *tmp124
op add *tmp131 :y 12
draw line 34 *tmp124 34 *tmp131
draw line 27 *tmp131 34 *tmp131
jump *label44 always
label *label43
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label575 *tmp19 0
multilabel *label575
jump *label417 always
multilabel *label576
jump *label419 always
multilabel *label577
jump *label421 always
multilabel *label578
jump *label423 always
multilabel *label579
jump *label425 always
multilabel *label580
jump *label427 always
multilabel *label581
jump *label429 always
multilabel *label582
jump *label431 always
multilabel *label583
jump *label433 always
multilabel *label584
jump *label435 always
label *label417
op sub *tmp26 :y 1
draw lineRect 156 *tmp26 9 14
jump *label437 always
label *label419
op add *tmp31 :y 12
draw line 163 :y 163 *tmp31
jump *label437 always
label *label421
draw line 157 :y 164 :y
op add *tmp33 :y 6
draw line 157 :y 157 *tmp33
draw line 157 *tmp33 164 *tmp33
op add *tmp40 :y 12
draw line 164 *tmp33 164 *tmp40
draw line 157 *tmp40 164 *tmp40
jump *label437 always
label *label423
op add *tmp46 :y 12
draw line 164 :y 164 *tmp46
draw line 157 :y 164 :y
op add *tmp48 :y 6
draw line 157 *tmp48 164 *tmp48
draw line 157 *tmp46 164 *tmp46
jump *label437 always
label *label425
op add *tmp56 :y 12
draw line 164 :y 164 *tmp56
op add *tmp57 :y 6
draw line 157 *tmp57 164 *tmp57
draw line 157 *tmp57 157 *tmp56
jump *label437 always
label *label427
draw line 157 :y 164 :y
op add *tmp65 :y 6
draw line 164 :y 164 *tmp65
draw line 157 *tmp65 164 *tmp65
op add *tmp70 :y 12
draw line 157 *tmp65 157 *tmp70
draw line 157 *tmp70 164 *tmp70
jump *label437 always
label *label429
op add *tmp74 :y 12
draw line 157 :y 157 *tmp74
draw line 157 :y 164 :y
op add *tmp78 :y 6
draw line 164 :y 164 *tmp78
draw line 157 *tmp78 164 *tmp78
draw line 157 *tmp74 164 *tmp74
jump *label437 always
label *label431
op add *tmp89 :y 12
draw line 163 :y 163 *tmp89
draw line 157 *tmp89 163 *tmp89
jump *label437 always
label *label433
op sub *tmp97 :y 1
draw lineRect 156 *tmp97 9 14
op add *tmp98 :y 6
draw line 157 *tmp98 164 *tmp98
jump *label437 always
label *label435
draw line 157 :y 164 :y
op add *tmp104 :y 12
draw line 164 :y 164 *tmp104
op add *tmp105 :y 6
draw line 157 *tmp105 164 *tmp105
draw line 157 *tmp105 157 *tmp104
draw line 157 *tmp104 164 *tmp104
label *label437
op idiv :displayItem:amount :displayItem:amount 10
jump *label524 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label587 *tmp19 0
multilabel *label587
jump *label443 always
multilabel *label588
jump *label445 always
multilabel *label589
jump *label447 always
multilabel *label590
jump *label449 always
multilabel *label591
jump *label451 always
multilabel *label592
jump *label453 always
multilabel *label593
jump *label455 always
multilabel *label594
jump *label457 always
multilabel *label595
jump *label459 always
multilabel *label596
jump *label461 always
label *label443
op sub *tmp26 :y 1
draw lineRect 145 *tmp26 9 14
jump *label463 always
label *label445
op add *tmp31 :y 12
draw line 152 :y 152 *tmp31
jump *label463 always
label *label447
draw line 146 :y 153 :y
op add *tmp33 :y 6
draw line 146 :y 146 *tmp33
draw line 146 *tmp33 153 *tmp33
op add *tmp40 :y 12
draw line 153 *tmp33 153 *tmp40
draw line 146 *tmp40 153 *tmp40
jump *label463 always
label *label449
op add *tmp46 :y 12
draw line 153 :y 153 *tmp46
draw line 146 :y 153 :y
op add *tmp48 :y 6
draw line 146 *tmp48 153 *tmp48
draw line 146 *tmp46 153 *tmp46
jump *label463 always
label *label451
op add *tmp56 :y 12
draw line 153 :y 153 *tmp56
op add *tmp57 :y 6
draw line 146 *tmp57 153 *tmp57
draw line 146 *tmp57 146 *tmp56
jump *label463 always
label *label453
draw line 146 :y 153 :y
op add *tmp65 :y 6
draw line 153 :y 153 *tmp65
draw line 146 *tmp65 153 *tmp65
op add *tmp70 :y 12
draw line 146 *tmp65 146 *tmp70
draw line 146 *tmp70 153 *tmp70
jump *label463 always
label *label455
op add *tmp74 :y 12
draw line 146 :y 146 *tmp74
draw line 146 :y 153 :y
op add *tmp78 :y 6
draw line 153 :y 153 *tmp78
draw line 146 *tmp78 153 *tmp78
draw line 146 *tmp74 153 *tmp74
jump *label463 always
label *label457
op add *tmp89 :y 12
draw line 152 :y 152 *tmp89
draw line 146 *tmp89 152 *tmp89
jump *label463 always
label *label459
op sub *tmp97 :y 1
draw lineRect 145 *tmp97 9 14
op add *tmp98 :y 6
draw line 146 *tmp98 153 *tmp98
jump *label463 always
label *label461
draw line 146 :y 153 :y
op add *tmp104 :y 12
draw line 153 :y 153 *tmp104
op add *tmp105 :y 6
draw line 146 *tmp105 153 *tmp105
draw line 146 *tmp105 146 *tmp104
draw line 146 *tmp104 153 *tmp104
label *label463
op idiv :displayItem:amount :displayItem:amount 10
jump *label524 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label599 *tmp19 0
multilabel *label599
jump *label469 always
multilabel *label600
jump *label471 always
multilabel *label601
jump *label473 always
multilabel *label602
jump *label475 always
multilabel *label603
jump *label477 always
multilabel *label604
jump *label479 always
multilabel *label605
jump *label481 always
multilabel *label606
jump *label483 always
multilabel *label607
jump *label485 always
multilabel *label608
jump *label487 always
label *label469
op sub *tmp26 :y 1
draw lineRect 134 *tmp26 9 14
jump *label489 always
label *label471
op add *tmp31 :y 12
draw line 141 :y 141 *tmp31
jump *label489 always
label *label473
draw line 135 :y 142 :y
op add *tmp33 :y 6
draw line 135 :y 135 *tmp33
draw line 135 *tmp33 142 *tmp33
op add *tmp40 :y 12
draw line 142 *tmp33 142 *tmp40
draw line 135 *tmp40 142 *tmp40
jump *label489 always
label *label475
op add *tmp46 :y 12
draw line 142 :y 142 *tmp46
draw line 135 :y 142 :y
op add *tmp48 :y 6
draw line 135 *tmp48 142 *tmp48
draw line 135 *tmp46 142 *tmp46
jump *label489 always
label *label477
op add *tmp56 :y 12
draw line 142 :y 142 *tmp56
op add *tmp57 :y 6
draw line 135 *tmp57 142 *tmp57
draw line 135 *tmp57 135 *tmp56
jump *label489 always
label *label479
draw line 135 :y 142 :y
op add *tmp65 :y 6
draw line 142 :y 142 *tmp65
draw line 135 *tmp65 142 *tmp65
op add *tmp70 :y 12
draw line 135 *tmp65 135 *tmp70
draw line 135 *tmp70 142 *tmp70
jump *label489 always
label *label481
op add *tmp74 :y 12
draw line 135 :y 135 *tmp74
draw line 135 :y 142 :y
op add *tmp78 :y 6
draw line 142 :y 142 *tmp78
draw line 135 *tmp78 142 *tmp78
draw line 135 *tmp74 142 *tmp74
jump *label489 always
label *label483
op add *tmp89 :y 12
draw line 141 :y 141 *tmp89
draw line 135 *tmp89 141 *tmp89
jump *label489 always
label *label485
op sub *tmp97 :y 1
draw lineRect 134 *tmp97 9 14
op add *tmp98 :y 6
draw line 135 *tmp98 142 *tmp98
jump *label489 always
label *label487
draw line 135 :y 142 :y
op add *tmp104 :y 12
draw line 142 :y 142 *tmp104
op add *tmp105 :y 6
draw line 135 *tmp105 142 *tmp105
draw line 135 *tmp105 135 *tmp104
draw line 135 *tmp104 142 *tmp104
label *label489
op idiv :displayItem:amount :displayItem:amount 10
jump *label524 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label611 *tmp19 0
multilabel *label611
jump *label495 always
multilabel *label612
jump *label497 always
multilabel *label613
jump *label499 always
multilabel *label614
jump *label501 always
multilabel *label615
jump *label503 always
multilabel *label616
jump *label505 always
multilabel *label617
jump *label507 always
multilabel *label618
jump *label509 always
multilabel *label619
jump *label511 always
multilabel *label620
jump *label513 always
label *label495
op sub *tmp26 :y 1
draw lineRect 123 *tmp26 9 14
jump *label515 always
label *label497
op add *tmp31 :y 12
draw line 130 :y 130 *tmp31
jump *label515 always
label *label499
draw line 124 :y 131 :y
op add *tmp33 :y 6
draw line 124 :y 124 *tmp33
draw line 124 *tmp33 131 *tmp33
op add *tmp40 :y 12
draw line 131 *tmp33 131 *tmp40
draw line 124 *tmp40 131 *tmp40
jump *label515 always
label *label501
op add *tmp46 :y 12
draw line 131 :y 131 *tmp46
draw line 124 :y 131 :y
op add *tmp48 :y 6
draw line 124 *tmp48 131 *tmp48
draw line 124 *tmp46 131 *tmp46
jump *label515 always
label *label503
op add *tmp56 :y 12
draw line 131 :y 131 *tmp56
op add *tmp57 :y 6
draw line 124 *tmp57 131 *tmp57
draw line 124 *tmp57 124 *tmp56
jump *label515 always
label *label505
draw line 124 :y 131 :y
op add *tmp65 :y 6
draw line 131 :y 131 *tmp65
draw line 124 *tmp65 131 *tmp65
op add *tmp70 :y 12
draw line 124 *tmp65 124 *tmp70
draw line 124 *tmp70 131 *tmp70
jump *label515 always
label *label507
op add *tmp74 :y 12
draw line 124 :y 124 *tmp74
draw line 124 :y 131 :y
op add *tmp78 :y 6
draw line 131 :y 131 *tmp78
draw line 124 *tmp78 131 *tmp78
draw line 124 *tmp74 131 *tmp74
jump *label515 always
label *label509
op add *tmp89 :y 12
draw line 130 :y 130 *tmp89
draw line 124 *tmp89 130 *tmp89
jump *label515 always
label *label511
op sub *tmp97 :y 1
draw lineRect 123 *tmp97 9 14
op add *tmp98 :y 6
draw line 124 *tmp98 131 *tmp98
jump *label515 always
label *label513
draw line 124 :y 131 :y
op add *tmp104 :y 12
draw line 131 :y 131 *tmp104
op add *tmp105 :y 6
draw line 124 *tmp105 131 *tmp105
draw line 124 *tmp105 124 *tmp104
draw line 124 *tmp104 131 *tmp104
label *label515
op idiv :displayItem:amount :displayItem:amount 10
jump *label524 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label521 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 119 :y 119 *tmp122
jump *label522 always
label *label521
draw line 113 :y 120 :y
op add *tmp124 :y 6
draw line 113 :y 113 *tmp124
draw line 113 *tmp124 120 *tmp124
op add *tmp131 :y 12
draw line 120 *tmp124 120 *tmp131
draw line 113 *tmp131 120 *tmp131
label *label522
label *label524
label *label44
op add :index :index 1
op sub :y :y 20
jump *label45 notEqual :index 8
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label45
multijump *tmp10 0 0
multilabel *label42
drawflush display1
