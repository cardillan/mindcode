   400 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    33 instructions eliminated by Dead Code Elimination (7 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
     5 instructions eliminated by Jump Optimization (5 iterations).
    24 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   310 instructions eliminated by Data Flow Optimization (6 passes, 22 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
   363 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
   351 instructions added by Function Inlining (9 iterations).
     6 function calls inlined by Function Inlining.
     1 instructions added by Case Switching (9 iterations).
     1 case expressions converted to switched jumps Case Switching.
    18 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
     5 instructions updated by JumpThreading.
    21 instructions eliminated by Unreachable Code Elimination (2 iterations).
   698 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 737):
    Unroll iteration loop at line 32:1                           cost    81, benefit       63.0, efficiency        0.8
    Unroll iteration loop at line 49:1                           cost   241, benefit       63.0, efficiency        0.3
    Unroll loop at line 90:5                                     cost   252, benefit     5000.0, efficiency       19.8
    Inline function 'eraseImages' defined at line 68:1           cost     3, benefit        7.0, efficiency        2.3
    Inline function 'eraseNumbers' defined at line 77:1          cost     3, benefit       47.3, efficiency       15.8
    Inline function 'displayItem' defined at line 86:1           cost   101, benefit      100.0, efficiency        1.0
    Inline function call at line 27:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 28:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 46:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 53:9                            cost   102, benefit       50.0, efficiency        0.5
    Inline function call at line 55:9                            cost   102, benefit       50.0, efficiency        0.5
    Inline function call at line 62:9                            cost     4, benefit       43.8, efficiency       10.9
  * Convert case at line 100:5                                   cost     1, benefit     1890.7, efficiency     1890.7 (+1 instructions)

Pass 1: speed optimization selection (cost limit 736):
    Unroll iteration loop at line 32:1                           cost    81, benefit       63.0, efficiency        0.8
    Unroll iteration loop at line 49:1                           cost   241, benefit       63.0, efficiency        0.3
  * Unroll loop at line 90:5                                     cost   255, benefit     5000.0, efficiency       19.6 (+255 instructions)
    Inline function 'eraseImages' defined at line 68:1           cost     3, benefit        7.0, efficiency        2.3
    Inline function 'eraseNumbers' defined at line 77:1          cost     3, benefit       47.3, efficiency       15.8
    Inline function 'displayItem' defined at line 86:1           cost   102, benefit      100.0, efficiency        1.0
    Inline function call at line 27:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 28:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 46:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 53:9                            cost   103, benefit       50.0, efficiency        0.5
    Inline function call at line 55:9                            cost   103, benefit       50.0, efficiency        0.5
    Inline function call at line 62:9                            cost     4, benefit       43.8, efficiency       10.9

Pass 1: speed optimization selection (cost limit 481):
    Unroll iteration loop at line 32:1                           cost    81, benefit       63.0, efficiency        0.8
    Unroll iteration loop at line 49:1                           cost   241, benefit       63.0, efficiency        0.3
    Inline function 'eraseImages' defined at line 68:1           cost     3, benefit        7.0, efficiency        2.3
  * Inline function 'eraseNumbers' defined at line 77:1          cost     3, benefit       47.3, efficiency       15.8 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           cost   357, benefit      100.0, efficiency        0.3
    Inline function call at line 27:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 28:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 46:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 53:9                            cost   358, benefit       50.0, efficiency        0.1
    Inline function call at line 55:9                            cost   358, benefit       50.0, efficiency        0.1
    Inline function call at line 62:9                            cost     4, benefit       43.8, efficiency       10.9

Pass 1: speed optimization selection (cost limit 484):
    Unroll iteration loop at line 32:1                           cost    81, benefit       63.0, efficiency        0.8
    Unroll iteration loop at line 49:1                           cost   273, benefit       63.0, efficiency        0.2
  * Inline function 'eraseImages' defined at line 68:1           cost     3, benefit        7.0, efficiency        2.3 (-3 instructions)
    Inline function 'displayItem' defined at line 86:1           cost   357, benefit      100.0, efficiency        0.3
    Inline function call at line 27:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 28:1                            cost     4, benefit        3.5, efficiency        0.9
    Inline function call at line 53:9                            cost   358, benefit       50.0, efficiency        0.1
    Inline function call at line 55:9                            cost   358, benefit       50.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 487):
  * Unroll iteration loop at line 32:1                           cost    81, benefit       63.0, efficiency        0.8 (-12 instructions)
    Unroll iteration loop at line 49:1                           cost   273, benefit       63.0, efficiency        0.2
    Inline function 'displayItem' defined at line 86:1           cost   357, benefit      100.0, efficiency        0.3
    Inline function call at line 53:9                            cost   358, benefit       50.0, efficiency        0.1
    Inline function call at line 55:9                            cost   358, benefit       50.0, efficiency        0.1

Pass 1: speed optimization selection (cost limit 499):
    Unroll iteration loop at line 49:1                           cost   273, benefit       63.0, efficiency        0.2
  * Inline function 'displayItem' defined at line 86:1           cost   357, benefit      100.0, efficiency        0.3 (+249 instructions)
    Inline function call at line 53:9                            cost   358, benefit       50.0, efficiency        0.1
    Inline function call at line 55:9                            cost   358, benefit       50.0, efficiency        0.1

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   239 set :drawDigit:x :displayItem:x
   240 set :drawDigit:y :displayItem:y
   241 set :drawDigit:digit *tmp19
-    * set *tmp22 :drawDigit:digit
-    * jump *label60 equal *tmp22 0
+  242 jump *label60 equal :drawDigit:digit 0
   243 jump *label59 always
   244 label *label60
   245 op sub *tmp23 :drawDigit:x 2
 
   250 set *tmp21 null
   251 jump *label58 always
   252 label *label59
-    * jump *label62 equal *tmp22 1
+  253 jump *label62 equal :drawDigit:digit 1
   254 jump *label61 always
   255 label *label62
   256 op add *tmp27 :drawDigit:x 7
 
   262 set *tmp21 null
   263 jump *label58 always
   264 label *label61
-    * jump *label64 equal *tmp22 2
+  265 jump *label64 equal :drawDigit:digit 2
   266 jump *label63 always
   267 label *label64
   268 op add *tmp32 :drawDigit:x 7
 
   285 set *tmp21 null
   286 jump *label58 always
   287 label *label63
-    * jump *label66 equal *tmp22 3
+  288 jump *label66 equal :drawDigit:digit 3
   289 jump *label65 always
   290 label *label66
   291 op add *tmp44 :drawDigit:x 7
 
   305 set *tmp21 null
   306 jump *label58 always
   307 label *label65
-    * jump *label68 equal *tmp22 4
+  308 jump *label68 equal :drawDigit:digit 4
   309 jump *label67 always
   310 label *label68
   311 op add *tmp54 :drawDigit:x 7
 
   322 set *tmp21 null
   323 jump *label58 always
   324 label *label67
-    * jump *label70 equal *tmp22 5
+  325 jump *label70 equal :drawDigit:digit 5
   326 jump *label69 always
   327 label *label70
   328 op add *tmp62 :drawDigit:x 7
 
   345 set *tmp21 null
   346 jump *label58 always
   347 label *label69
-    * jump *label72 equal *tmp22 6
+  348 jump *label72 equal :drawDigit:digit 6
   349 jump *label71 always
   350 label *label72
   351 op add *tmp74 :drawDigit:y 12
 
   367 set *tmp21 null
   368 jump *label58 always
   369 label *label71
-    * jump *label74 equal *tmp22 7
+  370 jump *label74 equal :drawDigit:digit 7
   371 jump *label73 always
   372 label *label74
   373 op add *tmp85 :drawDigit:x 7
 
   384 set *tmp21 null
   385 jump *label58 always
   386 label *label73
-    * jump *label76 equal *tmp22 8
+  387 jump *label76 equal :drawDigit:digit 8
   388 jump *label75 always
   389 label *label76
   390 op sub *tmp94 :drawDigit:x 2
 
   399 set *tmp21 null
   400 jump *label58 always
   401 label *label75
-    * jump *label78 equal *tmp22 9
+  402 jump *label78 equal :drawDigit:digit 9
   403 jump *label77 always
   404 label *label78
   405 op add *tmp101 :drawDigit:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-13 instructions):
 
     3 set :y 152
     4 set :eraseImages:first_column true
     5 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp0 :eraseImages*retval
     6 set :eraseImages:first_column false
     7 call *label0 :eraseImages*retaddr :eraseImages*retval
-    * set *tmp1 :eraseImages*retval
     8 draw color 255 255 255 255
     9 set :index 0
    10 set :item @sand
 
    82 set :y 152
    83 set :x 93
    84 draw color 255 255 255 255
-    * set *tmp8 null
    85 jump *label23 always
    86 label *label22
-    * set *tmp8 null
    87 label *label23
    88 label *label4
    89 multijump *tmp2 0 0 (m:marker0)
 
    93 set :y 152
    94 set :eraseNumbers:first_column true
    95 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp9 :eraseNumbers*retval
    96 set :index 0
    97 set :item @sand
    98 op add *tmp10 @counter 1
 
   163 set :displayItem:x 71
   164 set :displayItem:y :y
   165 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   166 jump *label44 always
   167 label *label43
   168 set :displayItem:x 157
   169 set :displayItem:y :y
   170 call *label2 :displayItem*retaddr :displayItem*retval
-    * set *tmp12 null
   171 label *label44
   172 op add :index :index 1
   173 op sub :y :y 20
 
   178 set :eraseNumbers:first_column false
   179 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
   180 set *tmp15 :eraseNumbers*retval
-    * set *tmp14 *tmp15
   181 jump *label46 always
   182 label *label45
-    * set *tmp14 null
   183 label *label46
   184 label *label25
   185 multijump *tmp10 0 0 (m:marker1)
 
   415 label *label77
   416 set *tmp21 null
   417 label *label58
-    * set *tmp20 *tmp21
   418 label *label57
   419 op sub :displayItem:x :displayItem:x 11
   420 op idiv :displayItem:amount :displayItem:amount 10
   421 op equal *tmp113 :displayItem:amount 0
   422 jump *label79 equal *tmp113 false
   423 jump *label53 always
-    * set *tmp114 null
   424 jump *label80 always
   425 label *label79
-    * set *tmp114 null
   426 label *label80
   427 label *label55
   428 op add :displayItem:i :displayItem:i 1
 
   462 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
   463 set *tmp117 null
   464 label *label83
-    * set *tmp115 *tmp117
   465 label *label81
   466 label *label53
   467 return :displayItem*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-15 instructions):
 
   177 set :y 152
   178 set :eraseNumbers:first_column false
   179 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * set *tmp15 :eraseNumbers*retval
   180 jump *label46 always
   181 label *label45
   182 label *label46
 
   197 draw rect 93 0 16 176
   198 set *tmp16 null
   199 label *label49
-    * set :eraseImages*retval *tmp16
   200 label *label47
   201 return :eraseImages*retaddr
   202 end
 
   236 op sub *tmp25 :drawDigit:y 2
   237 op add *tmp26 *tmp25 1
   238 draw lineRect *tmp24 *tmp26 9 14
-    * set *tmp21 null
   239 jump *label58 always
   240 label *label59
   241 jump *label62 equal :drawDigit:digit 1
 
   247 op sub *tmp30 *tmp29 1
   248 op add *tmp31 :drawDigit:y 12
   249 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
-    * set *tmp21 null
   250 jump *label58 always
   251 label *label61
   252 jump *label64 equal :drawDigit:digit 2
 
   269 op add *tmp42 :drawDigit:x 7
   270 op add *tmp43 :drawDigit:y 12
   271 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
-    * set *tmp21 null
   272 jump *label58 always
   273 label *label63
   274 jump *label66 equal :drawDigit:digit 3
 
   288 op add *tmp52 :drawDigit:x 7
   289 op add *tmp53 :drawDigit:y 12
   290 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
-    * set *tmp21 null
   291 jump *label58 always
   292 label *label65
   293 jump *label68 equal :drawDigit:digit 4
 
   304 op add *tmp60 :drawDigit:y 6
   305 op add *tmp61 :drawDigit:y 12
   306 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
-    * set *tmp21 null
   307 jump *label58 always
   308 label *label67
   309 jump *label70 equal :drawDigit:digit 5
 
   326 op add *tmp72 :drawDigit:x 7
   327 op add *tmp73 :drawDigit:y 12
   328 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
-    * set *tmp21 null
   329 jump *label58 always
   330 label *label69
   331 jump *label72 equal :drawDigit:digit 6
 
   347 op add *tmp83 :drawDigit:x 7
   348 op add *tmp84 :drawDigit:y 12
   349 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
-    * set *tmp21 null
   350 jump *label58 always
   351 label *label71
   352 jump *label74 equal :drawDigit:digit 7
 
   363 op sub *tmp92 *tmp91 1
   364 op add *tmp93 :drawDigit:y 12
   365 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
-    * set *tmp21 null
   366 jump *label58 always
   367 label *label73
   368 jump *label76 equal :drawDigit:digit 8
 
   377 op add *tmp99 :drawDigit:x 7
   378 op add *tmp100 :drawDigit:y 6
   379 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
-    * set *tmp21 null
   380 jump *label58 always
   381 label *label75
   382 jump *label78 equal :drawDigit:digit 9
 
   399 op add *tmp111 :drawDigit:x 7
   400 op add *tmp112 :drawDigit:y 12
   401 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * set *tmp21 null
   402 jump *label58 always
   403 label *label77
-    * set *tmp21 null
   404 label *label58
   405 label *label57
   406 op sub :displayItem:x :displayItem:x 11
 
   427 op sub *tmp121 *tmp120 1
   428 op add *tmp122 :drawDigit12:y 12
   429 draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
-    * set *tmp117 null
   430 jump *label83 always
   431 label *label82
   432 op add *tmp123 :drawDigit12:x 7
 
   446 op add *tmp133 :drawDigit12:x 7
   447 op add *tmp134 :drawDigit12:y 12
   448 draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
-    * set *tmp117 null
   449 label *label83
   450 label *label81
   451 label *label53

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-3 instructions):
 
   191 draw color 0 0 80 255
   192 jump *label48 equal :eraseImages:first_column false
   193 draw rect 0 0 23 176
-    * set *tmp16 null
   194 jump *label49 always
   195 label *label48
   196 draw rect 93 0 16 176
-    * set *tmp16 null
   197 label *label49
   198 label *label47
   199 return :eraseImages*retaddr
 
   209 draw rect 109 0 176 176
   210 set *tmp17 null
   211 label *label52
-    * set :eraseNumbers*retval *tmp17
   212 label *label50
   213 return :eraseNumbers*retaddr
   214 end

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   203 draw color 0 0 80 255
   204 jump *label51 equal :eraseNumbers:first_column false
   205 draw rect 23 0 70 176
-    * set *tmp17 null
   206 jump *label52 always
   207 label *label51
   208 draw rect 109 0 176 176
-    * set *tmp17 null
   209 label *label52
   210 label *label50
   211 return :eraseNumbers*retaddr

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
   212 end
   213 label *label2
   214 # "Function: void displayItem(in x, in y)"
-    * op max *tmp18 AMOUNT 0
-    * set :displayItem:amount *tmp18
+  215 op max :displayItem:amount AMOUNT 0
   216 draw color 0 255 0 255
   217 set :displayItem:i 0
   218 label *label54

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
   222 set :drawDigit:x :displayItem:x
   223 set :drawDigit:y :displayItem:y
   224 set :drawDigit:digit *tmp19
-    * jump *label60 equal :drawDigit:digit 0
-    * jump *label59 always
+  225 jump *label59 notEqual :drawDigit:digit 0
   226 label *label60
   227 op sub *tmp23 :drawDigit:x 2
   228 op add *tmp24 *tmp23 1
 
   231 draw lineRect *tmp24 *tmp26 9 14
   232 jump *label58 always
   233 label *label59
-    * jump *label62 equal :drawDigit:digit 1
-    * jump *label61 always
+  234 jump *label61 notEqual :drawDigit:digit 1
   235 label *label62
   236 op add *tmp27 :drawDigit:x 7
   237 op sub *tmp28 *tmp27 1
 
   241 draw line *tmp28 :drawDigit:y *tmp30 *tmp31
   242 jump *label58 always
   243 label *label61
-    * jump *label64 equal :drawDigit:digit 2
-    * jump *label63 always
+  244 jump *label63 notEqual :drawDigit:digit 2
   245 label *label64
   246 op add *tmp32 :drawDigit:x 7
   247 draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
 
   262 draw line :drawDigit:x *tmp41 *tmp42 *tmp43
   263 jump *label58 always
   264 label *label63
-    * jump *label66 equal :drawDigit:digit 3
-    * jump *label65 always
+  265 jump *label65 notEqual :drawDigit:digit 3
   266 label *label66
   267 op add *tmp44 :drawDigit:x 7
   268 op add *tmp45 :drawDigit:x 7
 
   280 draw line :drawDigit:x *tmp51 *tmp52 *tmp53
   281 jump *label58 always
   282 label *label65
-    * jump *label68 equal :drawDigit:digit 4
-    * jump *label67 always
+  283 jump *label67 notEqual :drawDigit:digit 4
   284 label *label68
   285 op add *tmp54 :drawDigit:x 7
   286 op add *tmp55 :drawDigit:x 7
 
   295 draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
   296 jump *label58 always
   297 label *label67
-    * jump *label70 equal :drawDigit:digit 5
-    * jump *label69 always
+  298 jump *label69 notEqual :drawDigit:digit 5
   299 label *label70
   300 op add *tmp62 :drawDigit:x 7
   301 draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
 
   316 draw line :drawDigit:x *tmp71 *tmp72 *tmp73
   317 jump *label58 always
   318 label *label69
-    * jump *label72 equal :drawDigit:digit 6
-    * jump *label71 always
+  319 jump *label71 notEqual :drawDigit:digit 6
   320 label *label72
   321 op add *tmp74 :drawDigit:y 12
   322 draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
 
   336 draw line :drawDigit:x *tmp82 *tmp83 *tmp84
   337 jump *label58 always
   338 label *label71
-    * jump *label74 equal :drawDigit:digit 7
-    * jump *label73 always
+  339 jump *label73 notEqual :drawDigit:digit 7
   340 label *label74
   341 op add *tmp85 :drawDigit:x 7
   342 op sub *tmp86 *tmp85 1
 
   351 draw line :drawDigit:x *tmp90 *tmp92 *tmp93
   352 jump *label58 always
   353 label *label73
-    * jump *label76 equal :drawDigit:digit 8
-    * jump *label75 always
+  354 jump *label75 notEqual :drawDigit:digit 8
   355 label *label76
   356 op sub *tmp94 :drawDigit:x 2
   357 op add *tmp95 *tmp94 1
 
   364 draw line :drawDigit:x *tmp98 *tmp99 *tmp100
   365 jump *label58 always
   366 label *label75
-    * jump *label78 equal :drawDigit:digit 9
-    * jump *label77 always
+  367 jump *label77 notEqual :drawDigit:digit 9
   368 label *label78
   369 op add *tmp101 :drawDigit:x 7
   370 draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-5 instructions):
 
    77 draw image *tmp3 *tmp6 :item 16 0
    78 op add :index :index 1
    79 op sub :y :y 20
-    * op equal *tmp7 :index 8
-    * jump *label22 equal *tmp7 false
+   80 jump *label22 notEqual :index 8
    81 set :y 152
    82 set :x 93
    83 draw color 255 255 255 255
 
   157 set *tmp10 null
   158 label *label24
   159 draw image 0 0 :item 16 0
-    * op lessThan *tmp11 :index 8
-    * jump *label43 equal *tmp11 false
+  160 jump *label43 greaterThanEq :index 8
   161 set :displayItem:x 71
   162 set :displayItem:y :y
   163 call *label2 :displayItem*retaddr :displayItem*retval
 
   169 label *label44
   170 op add :index :index 1
   171 op sub :y :y 20
-    * op equal *tmp13 :index 8
-    * jump *label45 equal *tmp13 false
+  172 jump *label45 notEqual :index 8
   173 drawflush display1
   174 set :y 152
   175 set :eraseNumbers:first_column false
 
   386 label *label57
   387 op sub :displayItem:x :displayItem:x 11
   388 op idiv :displayItem:amount :displayItem:amount 10
-    * op equal *tmp113 :displayItem:amount 0
-    * jump *label79 equal *tmp113 false
+  389 jump *label79 notEqual :displayItem:amount 0
   390 jump *label53 always
   391 jump *label80 always
   392 label *label79
 
   399 set :drawDigit12:x :displayItem:x
   400 set :drawDigit12:y :displayItem:y
   401 set :drawDigit12:digit :displayItem:amount
-    * op equal *tmp116 :drawDigit12:digit 1
-    * jump *label82 equal *tmp116 false
+  402 jump *label82 notEqual :drawDigit12:digit 1
   403 op add *tmp118 :drawDigit12:x 7
   404 op sub *tmp119 *tmp118 1
   405 op add *tmp120 :drawDigit12:x 7

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
    81 set :y 152
    82 set :x 93
    83 draw color 255 255 255 255
-    * jump *label23 always
    84 label *label22
    85 label *label23
    86 label *label4
 
   173 set :y 152
   174 set :eraseNumbers:first_column false
   175 call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
-    * jump *label46 always
   176 label *label45
   177 label *label46
   178 label *label25
 
   378 op add *tmp111 :drawDigit:x 7
   379 op add *tmp112 :drawDigit:y 12
   380 draw line :drawDigit:x *tmp110 *tmp111 *tmp112
-    * jump *label58 always
   381 label *label77
   382 label *label58
   383 label *label57
 
   385 op idiv :displayItem:amount :displayItem:amount 10
   386 jump *label79 notEqual :displayItem:amount 0
   387 jump *label53 always
-    * jump *label80 always
   388 label *label79
   389 label *label80
   390 label *label55

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    72 label *label3
    73 op add *tmp3 :x 8
    74 op add *tmp4 :y 8
-    * op sub *tmp5 *tmp4 2
-    * op add *tmp6 *tmp5 1
+   75 op add *tmp5 :y 6
+   76 op sub *tmp6 *tmp4 1
    77 draw image *tmp3 *tmp6 :item 16 0
    78 op add :index :index 1
    79 op sub :y :y 20
 
   217 set :drawDigit:x :displayItem:x
   218 set :drawDigit:y :displayItem:y
   219 set :drawDigit:digit *tmp19
-    * jump *label59 notEqual :drawDigit:digit 0
+  220 jump *label59 notEqual *tmp19 0
   221 label *label60
-    * op sub *tmp23 :drawDigit:x 2
-    * op add *tmp24 *tmp23 1
-    * op sub *tmp25 :drawDigit:y 2
-    * op add *tmp26 *tmp25 1
+  222 op sub *tmp23 :displayItem:x 2
+  223 op sub *tmp24 :drawDigit:x 1
+  224 op sub *tmp25 :displayItem:y 2
+  225 op sub *tmp26 :drawDigit:y 1
   226 draw lineRect *tmp24 *tmp26 9 14
   227 jump *label58 always
   228 label *label59
-    * jump *label61 notEqual :drawDigit:digit 1
+  229 jump *label61 notEqual *tmp19 1
   230 label *label62
-    * op add *tmp27 :drawDigit:x 7
-    * op sub *tmp28 *tmp27 1
-    * op add *tmp29 :drawDigit:x 7
-    * op sub *tmp30 *tmp29 1
-    * op add *tmp31 :drawDigit:y 12
-    * draw line *tmp28 :drawDigit:y *tmp30 *tmp31
+  231 op add *tmp27 :displayItem:x 7
+  232 op add *tmp28 :drawDigit:x 6
+  233 op add *tmp29 :displayItem:x 7
+  234 op sub *tmp30 *tmp27 1
+  235 op add *tmp31 :displayItem:y 12
+  236 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   237 jump *label58 always
   238 label *label61
-    * jump *label63 notEqual :drawDigit:digit 2
+  239 jump *label63 notEqual *tmp19 2
   240 label *label64
-    * op add *tmp32 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp32 :drawDigit:y
-    * op add *tmp33 :drawDigit:y 6
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp33
-    * op add *tmp34 :drawDigit:y 6
-    * op add *tmp35 :drawDigit:x 7
-    * op add *tmp36 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp34 *tmp35 *tmp36
-    * op add *tmp37 :drawDigit:x 7
-    * op add *tmp38 :drawDigit:y 6
-    * op add *tmp39 :drawDigit:x 7
-    * op add *tmp40 :drawDigit:y 12
-    * draw line *tmp37 *tmp38 *tmp39 *tmp40
-    * op add *tmp41 :drawDigit:y 12
-    * op add *tmp42 :drawDigit:x 7
-    * op add *tmp43 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp41 *tmp42 *tmp43
+  241 op add *tmp32 :displayItem:x 7
+  242 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  243 op add *tmp33 :displayItem:y 6
+  244 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  245 op add *tmp34 :displayItem:y 6
+  246 op add *tmp35 :displayItem:x 7
+  247 op add *tmp36 :displayItem:y 6
+  248 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  249 op add *tmp37 :displayItem:x 7
+  250 op add *tmp38 :displayItem:y 6
+  251 op add *tmp39 :displayItem:x 7
+  252 op add *tmp40 :displayItem:y 12
+  253 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  254 op add *tmp41 :displayItem:y 12
+  255 op add *tmp42 :displayItem:x 7
+  256 op add *tmp43 :displayItem:y 12
+  257 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   258 jump *label58 always
   259 label *label63
-    * jump *label65 notEqual :drawDigit:digit 3
+  260 jump *label65 notEqual *tmp19 3
   261 label *label66
-    * op add *tmp44 :drawDigit:x 7
-    * op add *tmp45 :drawDigit:x 7
-    * op add *tmp46 :drawDigit:y 12
-    * draw line *tmp44 :drawDigit:y *tmp45 *tmp46
-    * op add *tmp47 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp47 :drawDigit:y
-    * op add *tmp48 :drawDigit:y 6
-    * op add *tmp49 :drawDigit:x 7
-    * op add *tmp50 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp48 *tmp49 *tmp50
-    * op add *tmp51 :drawDigit:y 12
-    * op add *tmp52 :drawDigit:x 7
-    * op add *tmp53 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp51 *tmp52 *tmp53
+  262 op add *tmp44 :displayItem:x 7
+  263 op add *tmp45 :displayItem:x 7
+  264 op add *tmp46 :displayItem:y 12
+  265 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  266 op add *tmp47 :displayItem:x 7
+  267 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  268 op add *tmp48 :displayItem:y 6
+  269 op add *tmp49 :displayItem:x 7
+  270 op add *tmp50 :displayItem:y 6
+  271 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  272 op add *tmp51 :displayItem:y 12
+  273 op add *tmp52 :displayItem:x 7
+  274 op add *tmp53 :displayItem:y 12
+  275 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   276 jump *label58 always
   277 label *label65
-    * jump *label67 notEqual :drawDigit:digit 4
+  278 jump *label67 notEqual *tmp19 4
   279 label *label68
-    * op add *tmp54 :drawDigit:x 7
-    * op add *tmp55 :drawDigit:x 7
-    * op add *tmp56 :drawDigit:y 12
-    * draw line *tmp54 :drawDigit:y *tmp55 *tmp56
-    * op add *tmp57 :drawDigit:y 6
-    * op add *tmp58 :drawDigit:x 7
-    * op add *tmp59 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp57 *tmp58 *tmp59
-    * op add *tmp60 :drawDigit:y 6
-    * op add *tmp61 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp60 :drawDigit:x *tmp61
+  280 op add *tmp54 :displayItem:x 7
+  281 op add *tmp55 :displayItem:x 7
+  282 op add *tmp56 :displayItem:y 12
+  283 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  284 op add *tmp57 :displayItem:y 6
+  285 op add *tmp58 :displayItem:x 7
+  286 op add *tmp59 :displayItem:y 6
+  287 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  288 op add *tmp60 :displayItem:y 6
+  289 op add *tmp61 :displayItem:y 12
+  290 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   291 jump *label58 always
   292 label *label67
-    * jump *label69 notEqual :drawDigit:digit 5
+  293 jump *label69 notEqual *tmp19 5
   294 label *label70
-    * op add *tmp62 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp62 :drawDigit:y
-    * op add *tmp63 :drawDigit:x 7
-    * op add *tmp64 :drawDigit:x 7
-    * op add *tmp65 :drawDigit:y 6
-    * draw line *tmp63 :drawDigit:y *tmp64 *tmp65
-    * op add *tmp66 :drawDigit:y 6
-    * op add *tmp67 :drawDigit:x 7
-    * op add *tmp68 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp66 *tmp67 *tmp68
-    * op add *tmp69 :drawDigit:y 6
-    * op add *tmp70 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp69 :drawDigit:x *tmp70
-    * op add *tmp71 :drawDigit:y 12
-    * op add *tmp72 :drawDigit:x 7
-    * op add *tmp73 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp71 *tmp72 *tmp73
+  295 op add *tmp62 :displayItem:x 7
+  296 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  297 op add *tmp63 :displayItem:x 7
+  298 op add *tmp64 :displayItem:x 7
+  299 op add *tmp65 :displayItem:y 6
+  300 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  301 op add *tmp66 :displayItem:y 6
+  302 op add *tmp67 :displayItem:x 7
+  303 op add *tmp68 :displayItem:y 6
+  304 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  305 op add *tmp69 :displayItem:y 6
+  306 op add *tmp70 :displayItem:y 12
+  307 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  308 op add *tmp71 :displayItem:y 12
+  309 op add *tmp72 :displayItem:x 7
+  310 op add *tmp73 :displayItem:y 12
+  311 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   312 jump *label58 always
   313 label *label69
-    * jump *label71 notEqual :drawDigit:digit 6
+  314 jump *label71 notEqual *tmp19 6
   315 label *label72
-    * op add *tmp74 :drawDigit:y 12
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp74
-    * op add *tmp75 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp75 :drawDigit:y
-    * op add *tmp76 :drawDigit:x 7
-    * op add *tmp77 :drawDigit:x 7
-    * op add *tmp78 :drawDigit:y 6
-    * draw line *tmp76 :drawDigit:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigit:y 6
-    * op add *tmp80 :drawDigit:x 7
-    * op add *tmp81 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigit:y 12
-    * op add *tmp83 :drawDigit:x 7
-    * op add *tmp84 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp82 *tmp83 *tmp84
+  316 op add *tmp74 :displayItem:y 12
+  317 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  318 op add *tmp75 :displayItem:x 7
+  319 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  320 op add *tmp76 :displayItem:x 7
+  321 op add *tmp77 :displayItem:x 7
+  322 op add *tmp78 :displayItem:y 6
+  323 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  324 op add *tmp79 :displayItem:y 6
+  325 op add *tmp80 :displayItem:x 7
+  326 op add *tmp81 :displayItem:y 6
+  327 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  328 op add *tmp82 :displayItem:y 12
+  329 op add *tmp83 :displayItem:x 7
+  330 op add *tmp84 :displayItem:y 12
+  331 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   332 jump *label58 always
   333 label *label71
-    * jump *label73 notEqual :drawDigit:digit 7
+  334 jump *label73 notEqual *tmp19 7
   335 label *label74
-    * op add *tmp85 :drawDigit:x 7
-    * op sub *tmp86 *tmp85 1
-    * op add *tmp87 :drawDigit:x 7
-    * op sub *tmp88 *tmp87 1
-    * op add *tmp89 :drawDigit:y 12
-    * draw line *tmp86 :drawDigit:y *tmp88 *tmp89
-    * op add *tmp90 :drawDigit:y 12
-    * op add *tmp91 :drawDigit:x 7
-    * op sub *tmp92 *tmp91 1
-    * op add *tmp93 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp90 *tmp92 *tmp93
+  336 op add *tmp85 :displayItem:x 7
+  337 op add *tmp86 :drawDigit:x 6
+  338 op add *tmp87 :displayItem:x 7
+  339 op sub *tmp88 *tmp85 1
+  340 op add *tmp89 :displayItem:y 12
+  341 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  342 op add *tmp90 :displayItem:y 12
+  343 op add *tmp91 :displayItem:x 7
+  344 op sub *tmp92 *tmp85 1
+  345 op add *tmp93 :displayItem:y 12
+  346 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   347 jump *label58 always
   348 label *label73
-    * jump *label75 notEqual :drawDigit:digit 8
+  349 jump *label75 notEqual *tmp19 8
   350 label *label76
-    * op sub *tmp94 :drawDigit:x 2
-    * op add *tmp95 *tmp94 1
-    * op sub *tmp96 :drawDigit:y 2
-    * op add *tmp97 *tmp96 1
+  351 op sub *tmp94 :displayItem:x 2
+  352 op sub *tmp95 :drawDigit:x 1
+  353 op sub *tmp96 :displayItem:y 2
+  354 op sub *tmp97 :drawDigit:y 1
   355 draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :drawDigit:y 6
-    * op add *tmp99 :drawDigit:x 7
-    * op add *tmp100 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp98 *tmp99 *tmp100
+  356 op add *tmp98 :displayItem:y 6
+  357 op add *tmp99 :displayItem:x 7
+  358 op add *tmp100 :displayItem:y 6
+  359 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   360 jump *label58 always
   361 label *label75
-    * jump *label77 notEqual :drawDigit:digit 9
+  362 jump *label77 notEqual *tmp19 9
   363 label *label78
-    * op add *tmp101 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp101 :drawDigit:y
-    * op add *tmp102 :drawDigit:x 7
-    * op add *tmp103 :drawDigit:x 7
-    * op add *tmp104 :drawDigit:y 12
-    * draw line *tmp102 :drawDigit:y *tmp103 *tmp104
-    * op add *tmp105 :drawDigit:y 6
-    * op add *tmp106 :drawDigit:x 7
-    * op add *tmp107 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp105 *tmp106 *tmp107
-    * op add *tmp108 :drawDigit:y 6
-    * op add *tmp109 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp108 :drawDigit:x *tmp109
-    * op add *tmp110 :drawDigit:y 12
-    * op add *tmp111 :drawDigit:x 7
-    * op add *tmp112 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp110 *tmp111 *tmp112
+  364 op add *tmp101 :displayItem:x 7
+  365 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  366 op add *tmp102 :displayItem:x 7
+  367 op add *tmp103 :displayItem:x 7
+  368 op add *tmp104 :displayItem:y 12
+  369 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  370 op add *tmp105 :displayItem:y 6
+  371 op add *tmp106 :displayItem:x 7
+  372 op add *tmp107 :displayItem:y 6
+  373 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  374 op add *tmp108 :displayItem:y 6
+  375 op add *tmp109 :displayItem:y 12
+  376 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  377 op add *tmp110 :displayItem:y 12
+  378 op add *tmp111 :displayItem:x 7
+  379 op add *tmp112 :displayItem:y 12
+  380 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   381 label *label77
   382 label *label58
   383 label *label57
 
   395 set :drawDigit12:x :displayItem:x
   396 set :drawDigit12:y :displayItem:y
   397 set :drawDigit12:digit :displayItem:amount
-    * jump *label82 notEqual :drawDigit12:digit 1
-    * op add *tmp118 :drawDigit12:x 7
-    * op sub *tmp119 *tmp118 1
-    * op add *tmp120 :drawDigit12:x 7
-    * op sub *tmp121 *tmp120 1
-    * op add *tmp122 :drawDigit12:y 12
-    * draw line *tmp119 :drawDigit12:y *tmp121 *tmp122
+  398 jump *label82 notEqual :displayItem:amount 1
+  399 op add *tmp118 :displayItem:x 7
+  400 op add *tmp119 :drawDigit12:x 6
+  401 op add *tmp120 :displayItem:x 7
+  402 op sub *tmp121 *tmp118 1
+  403 op add *tmp122 :displayItem:y 12
+  404 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   405 jump *label83 always
   406 label *label82
-    * op add *tmp123 :drawDigit12:x 7
-    * draw line :drawDigit12:x :drawDigit12:y *tmp123 :drawDigit12:y
-    * op add *tmp124 :drawDigit12:y 6
-    * draw line :drawDigit12:x :drawDigit12:y :drawDigit12:x *tmp124
-    * op add *tmp125 :drawDigit12:y 6
-    * op add *tmp126 :drawDigit12:x 7
-    * op add *tmp127 :drawDigit12:y 6
-    * draw line :drawDigit12:x *tmp125 *tmp126 *tmp127
-    * op add *tmp128 :drawDigit12:x 7
-    * op add *tmp129 :drawDigit12:y 6
-    * op add *tmp130 :drawDigit12:x 7
-    * op add *tmp131 :drawDigit12:y 12
-    * draw line *tmp128 *tmp129 *tmp130 *tmp131
-    * op add *tmp132 :drawDigit12:y 12
-    * op add *tmp133 :drawDigit12:x 7
-    * op add *tmp134 :drawDigit12:y 12
-    * draw line :drawDigit12:x *tmp132 *tmp133 *tmp134
+  407 op add *tmp123 :displayItem:x 7
+  408 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  409 op add *tmp124 :displayItem:y 6
+  410 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  411 op add *tmp125 :displayItem:y 6
+  412 op add *tmp126 :displayItem:x 7
+  413 op add *tmp127 :displayItem:y 6
+  414 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  415 op add *tmp128 :displayItem:x 7
+  416 op add *tmp129 :displayItem:y 6
+  417 op add *tmp130 :displayItem:x 7
+  418 op add *tmp131 :displayItem:y 12
+  419 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  420 op add *tmp132 :displayItem:y 12
+  421 op add *tmp133 :displayItem:x 7
+  422 op add *tmp134 :displayItem:y 12
+  423 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   424 label *label83
   425 label *label81
   426 label *label53

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-71 instructions):
 
    72 label *label3
    73 op add *tmp3 :x 8
    74 op add *tmp4 :y 8
-    * op add *tmp5 :y 6
-    * op sub *tmp6 *tmp4 1
+   75 op add *tmp6 :y 7
    76 draw image *tmp3 *tmp6 :item 16 0
    77 op add :index :index 1
    78 op sub :y :y 20
 
   215 # "Function: def drawDigit(in x, in y, in digit)"
   216 set :drawDigit:x :displayItem:x
   217 set :drawDigit:y :displayItem:y
-    * set :drawDigit:digit *tmp19
   218 jump *label59 notEqual *tmp19 0
   219 label *label60
-    * op sub *tmp23 :displayItem:x 2
-    * op sub *tmp24 :drawDigit:x 1
-    * op sub *tmp25 :displayItem:y 2
-    * op sub *tmp26 :drawDigit:y 1
+  220 op sub *tmp24 :displayItem:x 1
+  221 op sub *tmp26 :displayItem:y 1
   222 draw lineRect *tmp24 *tmp26 9 14
   223 jump *label58 always
   224 label *label59
   225 jump *label61 notEqual *tmp19 1
   226 label *label62
   227 op add *tmp27 :displayItem:x 7
-    * op add *tmp28 :drawDigit:x 6
-    * op add *tmp29 :displayItem:x 7
-    * op sub *tmp30 *tmp27 1
+  228 op add *tmp28 :displayItem:x 6
+  229 op add *tmp30 :displayItem:x 6
   230 op add *tmp31 :displayItem:y 12
   231 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   232 jump *label58 always
 
   237 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
   238 op add *tmp33 :displayItem:y 6
   239 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * op add *tmp34 :displayItem:y 6
-    * op add *tmp35 :displayItem:x 7
-    * op add *tmp36 :displayItem:y 6
   240 draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp37 :displayItem:x 7
-    * op add *tmp38 :displayItem:y 6
-    * op add *tmp39 :displayItem:x 7
   241 op add *tmp40 :displayItem:y 12
   242 draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * op add *tmp41 :displayItem:y 12
-    * op add *tmp42 :displayItem:x 7
-    * op add *tmp43 :displayItem:y 12
   243 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   244 jump *label58 always
   245 label *label63
   246 jump *label65 notEqual *tmp19 3
   247 label *label66
   248 op add *tmp44 :displayItem:x 7
-    * op add *tmp45 :displayItem:x 7
   249 op add *tmp46 :displayItem:y 12
   250 draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * op add *tmp47 :displayItem:x 7
   251 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
   252 op add *tmp48 :displayItem:y 6
-    * op add *tmp49 :displayItem:x 7
-    * op add *tmp50 :displayItem:y 6
   253 draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * op add *tmp51 :displayItem:y 12
-    * op add *tmp52 :displayItem:x 7
-    * op add *tmp53 :displayItem:y 12
   254 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   255 jump *label58 always
   256 label *label65
   257 jump *label67 notEqual *tmp19 4
   258 label *label68
   259 op add *tmp54 :displayItem:x 7
-    * op add *tmp55 :displayItem:x 7
   260 op add *tmp56 :displayItem:y 12
   261 draw line *tmp54 :displayItem:y *tmp54 *tmp56
   262 op add *tmp57 :displayItem:y 6
-    * op add *tmp58 :displayItem:x 7
-    * op add *tmp59 :displayItem:y 6
   263 draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * op add *tmp60 :displayItem:y 6
-    * op add *tmp61 :displayItem:y 12
   264 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   265 jump *label58 always
   266 label *label67
 
   268 label *label70
   269 op add *tmp62 :displayItem:x 7
   270 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp63 :displayItem:x 7
-    * op add *tmp64 :displayItem:x 7
   271 op add *tmp65 :displayItem:y 6
   272 draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * op add *tmp66 :displayItem:y 6
-    * op add *tmp67 :displayItem:x 7
-    * op add *tmp68 :displayItem:y 6
   273 draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp69 :displayItem:y 6
   274 op add *tmp70 :displayItem:y 12
   275 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * op add *tmp71 :displayItem:y 12
-    * op add *tmp72 :displayItem:x 7
-    * op add *tmp73 :displayItem:y 12
   276 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   277 jump *label58 always
   278 label *label69
 
   282 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
   283 op add *tmp75 :displayItem:x 7
   284 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp76 :displayItem:x 7
-    * op add *tmp77 :displayItem:x 7
   285 op add *tmp78 :displayItem:y 6
   286 draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * op add *tmp79 :displayItem:y 6
-    * op add *tmp80 :displayItem:x 7
-    * op add *tmp81 :displayItem:y 6
   287 draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * op add *tmp82 :displayItem:y 12
-    * op add *tmp83 :displayItem:x 7
-    * op add *tmp84 :displayItem:y 12
   288 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   289 jump *label58 always
   290 label *label71
   291 jump *label73 notEqual *tmp19 7
   292 label *label74
   293 op add *tmp85 :displayItem:x 7
-    * op add *tmp86 :drawDigit:x 6
-    * op add *tmp87 :displayItem:x 7
-    * op sub *tmp88 *tmp85 1
+  294 op add *tmp86 :displayItem:x 6
+  295 op add *tmp88 :displayItem:x 6
   296 op add *tmp89 :displayItem:y 12
   297 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp90 :displayItem:y 12
-    * op add *tmp91 :displayItem:x 7
-    * op sub *tmp92 *tmp85 1
-    * op add *tmp93 :displayItem:y 12
+  298 op add *tmp92 :displayItem:x 6
   299 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   300 jump *label58 always
   301 label *label73
   302 jump *label75 notEqual *tmp19 8
   303 label *label76
-    * op sub *tmp94 :displayItem:x 2
-    * op sub *tmp95 :drawDigit:x 1
-    * op sub *tmp96 :displayItem:y 2
-    * op sub *tmp97 :drawDigit:y 1
+  304 op sub *tmp95 :displayItem:x 1
+  305 op sub *tmp97 :displayItem:y 1
   306 draw lineRect *tmp95 *tmp97 9 14
   307 op add *tmp98 :displayItem:y 6
   308 op add *tmp99 :displayItem:x 7
-    * op add *tmp100 :displayItem:y 6
   309 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   310 jump *label58 always
   311 label *label75
 
   313 label *label78
   314 op add *tmp101 :displayItem:x 7
   315 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp102 :displayItem:x 7
-    * op add *tmp103 :displayItem:x 7
   316 op add *tmp104 :displayItem:y 12
   317 draw line *tmp101 :displayItem:y *tmp101 *tmp104
   318 op add *tmp105 :displayItem:y 6
-    * op add *tmp106 :displayItem:x 7
-    * op add *tmp107 :displayItem:y 6
   319 draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * op add *tmp108 :displayItem:y 6
-    * op add *tmp109 :displayItem:y 12
   320 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * op add *tmp110 :displayItem:y 12
-    * op add *tmp111 :displayItem:x 7
-    * op add *tmp112 :displayItem:y 12
   321 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   322 label *label77
   323 label *label58
 
   334 label *label56
   335 # "Function: def drawDigit12(in x, in y, in digit)"
   336 set :drawDigit12:x :displayItem:x
-    * set :drawDigit12:y :displayItem:y
-    * set :drawDigit12:digit :displayItem:amount
   337 jump *label82 notEqual :displayItem:amount 1
   338 op add *tmp118 :displayItem:x 7
-    * op add *tmp119 :drawDigit12:x 6
-    * op add *tmp120 :displayItem:x 7
-    * op sub *tmp121 *tmp118 1
+  339 op add *tmp119 :displayItem:x 6
+  340 op add *tmp121 :displayItem:x 6
   341 op add *tmp122 :displayItem:y 12
   342 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   343 jump *label83 always
 
   346 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
   347 op add *tmp124 :displayItem:y 6
   348 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * op add *tmp125 :displayItem:y 6
-    * op add *tmp126 :displayItem:x 7
-    * op add *tmp127 :displayItem:y 6
   349 draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp128 :displayItem:x 7
-    * op add *tmp129 :displayItem:y 6
-    * op add *tmp130 :displayItem:x 7
   350 op add *tmp131 :displayItem:y 12
   351 draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * op add *tmp132 :displayItem:y 12
-    * op add *tmp133 :displayItem:x 7
-    * op add *tmp134 :displayItem:y 12
   352 draw line :displayItem:x *tmp131 *tmp123 *tmp131
   353 label *label83
   354 label *label81

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-11 instructions):
 
    71 set *tmp2 null
    72 label *label3
    73 op add *tmp3 :x 8
-    * op add *tmp4 :y 8
    74 op add *tmp6 :y 7
    75 draw image *tmp3 *tmp6 :item 16 0
    76 op add :index :index 1
 
   212 jump *label56 greaterThanEq :displayItem:i 4
   213 op mod *tmp19 :displayItem:amount 10
   214 # "Function: def drawDigit(in x, in y, in digit)"
-    * set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :displayItem:y
   215 jump *label59 notEqual *tmp19 0
   216 label *label60
   217 op sub *tmp24 :displayItem:x 1
 
   221 label *label59
   222 jump *label61 notEqual *tmp19 1
   223 label *label62
-    * op add *tmp27 :displayItem:x 7
   224 op add *tmp28 :displayItem:x 6
-    * op add *tmp30 :displayItem:x 6
   225 op add *tmp31 :displayItem:y 12
   226 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   227 jump *label58 always
 
   285 label *label71
   286 jump *label73 notEqual *tmp19 7
   287 label *label74
-    * op add *tmp85 :displayItem:x 7
   288 op add *tmp86 :displayItem:x 6
-    * op add *tmp88 :displayItem:x 6
   289 op add *tmp89 :displayItem:y 12
   290 draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * op add *tmp92 :displayItem:x 6
   291 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   292 jump *label58 always
   293 label *label73
 
   325 jump *label54 always
   326 label *label56
   327 # "Function: def drawDigit12(in x, in y, in digit)"
-    * set :drawDigit12:x :displayItem:x
   328 jump *label82 notEqual :displayItem:amount 1
-    * op add *tmp118 :displayItem:x 7
   329 op add *tmp119 :displayItem:x 6
-    * op add *tmp121 :displayItem:x 6
   330 op add *tmp122 :displayItem:y 12
   331 draw line *tmp119 :displayItem:y *tmp119 *tmp122
   332 jump *label83 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   209 draw color 0 255 0 255
   210 set :displayItem:i 0
   211 label *label54
-    * jump *label56 greaterThanEq :displayItem:i 4
+  212 label *label84
   213 op mod *tmp19 :displayItem:amount 10
   214 # "Function: def drawDigit(in x, in y, in digit)"
   215 jump *label59 notEqual *tmp19 0
 
   322 label *label80
   323 label *label55
   324 op add :displayItem:i :displayItem:i 1
-    * jump *label54 always
+  325 jump *label84 lessThan :displayItem:i 4
   326 label *label56
   327 # "Function: def drawDigit12(in x, in y, in digit)"
   328 jump *label82 notEqual :displayItem:amount 1

Modifications by Convert case at line 100:5 (+1 instructions):
 
   212 label *label84
   213 op mod *tmp19 :displayItem:amount 10
   214 # "Function: def drawDigit(in x, in y, in digit)"
-    * jump *label59 notEqual *tmp19 0
+  215 multijump *label87 *tmp19 0 (m:*label86)
+  216 multilabel *label87 (m:*label86)
+  217 jump *label60 always
+  218 multilabel *label88 (m:*label86)
+  219 jump *label62 always
+  220 multilabel *label89 (m:*label86)
+  221 jump *label64 always
+  222 multilabel *label90 (m:*label86)
+  223 jump *label66 always
+  224 multilabel *label91 (m:*label86)
+  225 jump *label68 always
+  226 multilabel *label92 (m:*label86)
+  227 jump *label70 always
+  228 multilabel *label93 (m:*label86)
+  229 jump *label72 always
+  230 multilabel *label94 (m:*label86)
+  231 jump *label74 always
+  232 multilabel *label95 (m:*label86)
+  233 jump *label76 always
+  234 multilabel *label96 (m:*label86)
+  235 jump *label78 always
   236 label *label60
   237 op sub *tmp24 :displayItem:x 1
   238 op sub *tmp26 :displayItem:y 1
   239 draw lineRect *tmp24 *tmp26 9 14
   240 jump *label58 always
   241 label *label59
-    * jump *label61 notEqual *tmp19 1
   242 label *label62
   243 op add *tmp28 :displayItem:x 6
   244 op add *tmp31 :displayItem:y 12
   245 draw line *tmp28 :displayItem:y *tmp28 *tmp31
   246 jump *label58 always
   247 label *label61
-    * jump *label63 notEqual *tmp19 2
   248 label *label64
   249 op add *tmp32 :displayItem:x 7
   250 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
 
   256 draw line :displayItem:x *tmp40 *tmp32 *tmp40
   257 jump *label58 always
   258 label *label63
-    * jump *label65 notEqual *tmp19 3
   259 label *label66
   260 op add *tmp44 :displayItem:x 7
   261 op add *tmp46 :displayItem:y 12
 
   266 draw line :displayItem:x *tmp46 *tmp44 *tmp46
   267 jump *label58 always
   268 label *label65
-    * jump *label67 notEqual *tmp19 4
   269 label *label68
   270 op add *tmp54 :displayItem:x 7
   271 op add *tmp56 :displayItem:y 12
 
   275 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
   276 jump *label58 always
   277 label *label67
-    * jump *label69 notEqual *tmp19 5
   278 label *label70
   279 op add *tmp62 :displayItem:x 7
   280 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
 
   286 draw line :displayItem:x *tmp70 *tmp62 *tmp70
   287 jump *label58 always
   288 label *label69
-    * jump *label71 notEqual *tmp19 6
   289 label *label72
   290 op add *tmp74 :displayItem:y 12
   291 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
 
   297 draw line :displayItem:x *tmp74 *tmp75 *tmp74
   298 jump *label58 always
   299 label *label71
-    * jump *label73 notEqual *tmp19 7
   300 label *label74
   301 op add *tmp86 :displayItem:x 6
   302 op add *tmp89 :displayItem:y 12
 
   304 draw line :displayItem:x *tmp89 *tmp86 *tmp89
   305 jump *label58 always
   306 label *label73
-    * jump *label75 notEqual *tmp19 8
   307 label *label76
   308 op sub *tmp95 :displayItem:x 1
   309 op sub *tmp97 :displayItem:y 1
 
   313 draw line :displayItem:x *tmp98 *tmp99 *tmp98
   314 jump *label58 always
   315 label *label75
-    * jump *label77 notEqual *tmp19 9
   316 label *label78
   317 op add *tmp101 :displayItem:x 7
   318 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
 
   323 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
   324 draw line :displayItem:x *tmp104 *tmp101 *tmp104
   325 label *label77
+  326 label *label85
   327 label *label58
   328 label *label57
   329 op sub :displayItem:x :displayItem:x 11

Modifications by Unroll loop at line 90:5 (+260 instructions):
 
   207 # "Function: void displayItem(in x, in y)"
   208 op max :displayItem:amount AMOUNT 0
   209 draw color 0 255 0 255
-    * set :displayItem:i 0
-    * label *label54
-    * label *label84
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * multijump *label87 *tmp19 0 (m:*label86)
-    * multilabel *label87 (m:*label86)
-    * jump *label60 always
-    * multilabel *label88 (m:*label86)
-    * jump *label62 always
-    * multilabel *label89 (m:*label86)
-    * jump *label64 always
-    * multilabel *label90 (m:*label86)
-    * jump *label66 always
-    * multilabel *label91 (m:*label86)
-    * jump *label68 always
-    * multilabel *label92 (m:*label86)
-    * jump *label70 always
-    * multilabel *label93 (m:*label86)
-    * jump *label72 always
-    * multilabel *label94 (m:*label86)
-    * jump *label74 always
-    * multilabel *label95 (m:*label86)
-    * jump *label76 always
-    * multilabel *label96 (m:*label86)
-    * jump *label78 always
-    * label *label60
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label58 always
-    * label *label59
-    * label *label62
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label58 always
-    * label *label61
-    * label *label64
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label58 always
-    * label *label63
-    * label *label66
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label58 always
-    * label *label65
-    * label *label68
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label58 always
-    * label *label67
-    * label *label70
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label58 always
-    * label *label69
-    * label *label72
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label58 always
-    * label *label71
-    * label *label74
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label58 always
-    * label *label73
-    * label *label76
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label58 always
-    * label *label75
-    * label *label78
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label77
-    * label *label85
-    * label *label58
-    * label *label57
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label79 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label79
-    * label *label80
-    * label *label55
-    * op add :displayItem:i :displayItem:i 1
-    * jump *label84 lessThan :displayItem:i 4
-    * label *label56
+  210 set :displayItem:i 0
+  211 label *label97
+  212 label *label98
+  213 op mod *tmp19 :displayItem:amount 10
+  214 # "Function: def drawDigit(in x, in y, in digit)"
+  215 multijump *label99 *tmp19 0 (m:*label86)
+  216 multilabel *label99 (m:*label86)
+  217 jump *label109 always
+  218 multilabel *label100 (m:*label86)
+  219 jump *label111 always
+  220 multilabel *label101 (m:*label86)
+  221 jump *label113 always
+  222 multilabel *label102 (m:*label86)
+  223 jump *label115 always
+  224 multilabel *label103 (m:*label86)
+  225 jump *label117 always
+  226 multilabel *label104 (m:*label86)
+  227 jump *label119 always
+  228 multilabel *label105 (m:*label86)
+  229 jump *label121 always
+  230 multilabel *label106 (m:*label86)
+  231 jump *label123 always
+  232 multilabel *label107 (m:*label86)
+  233 jump *label125 always
+  234 multilabel *label108 (m:*label86)
+  235 jump *label127 always
+  236 label *label109
+  237 op sub *tmp24 :displayItem:x 1
+  238 op sub *tmp26 :displayItem:y 1
+  239 draw lineRect *tmp24 *tmp26 9 14
+  240 jump *label130 always
+  241 label *label110
+  242 label *label111
+  243 op add *tmp28 :displayItem:x 6
+  244 op add *tmp31 :displayItem:y 12
+  245 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  246 jump *label130 always
+  247 label *label112
+  248 label *label113
+  249 op add *tmp32 :displayItem:x 7
+  250 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  251 op add *tmp33 :displayItem:y 6
+  252 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  253 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  254 op add *tmp40 :displayItem:y 12
+  255 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  256 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  257 jump *label130 always
+  258 label *label114
+  259 label *label115
+  260 op add *tmp44 :displayItem:x 7
+  261 op add *tmp46 :displayItem:y 12
+  262 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  263 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  264 op add *tmp48 :displayItem:y 6
+  265 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  266 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  267 jump *label130 always
+  268 label *label116
+  269 label *label117
+  270 op add *tmp54 :displayItem:x 7
+  271 op add *tmp56 :displayItem:y 12
+  272 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  273 op add *tmp57 :displayItem:y 6
+  274 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  275 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  276 jump *label130 always
+  277 label *label118
+  278 label *label119
+  279 op add *tmp62 :displayItem:x 7
+  280 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  281 op add *tmp65 :displayItem:y 6
+  282 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  283 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  284 op add *tmp70 :displayItem:y 12
+  285 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  286 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  287 jump *label130 always
+  288 label *label120
+  289 label *label121
+  290 op add *tmp74 :displayItem:y 12
+  291 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  292 op add *tmp75 :displayItem:x 7
+  293 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  294 op add *tmp78 :displayItem:y 6
+  295 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  296 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  297 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  298 jump *label130 always
+  299 label *label122
+  300 label *label123
+  301 op add *tmp86 :displayItem:x 6
+  302 op add *tmp89 :displayItem:y 12
+  303 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  304 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  305 jump *label130 always
+  306 label *label124
+  307 label *label125
+  308 op sub *tmp95 :displayItem:x 1
+  309 op sub *tmp97 :displayItem:y 1
+  310 draw lineRect *tmp95 *tmp97 9 14
+  311 op add *tmp98 :displayItem:y 6
+  312 op add *tmp99 :displayItem:x 7
+  313 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  314 jump *label130 always
+  315 label *label126
+  316 label *label127
+  317 op add *tmp101 :displayItem:x 7
+  318 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  319 op add *tmp104 :displayItem:y 12
+  320 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  321 op add *tmp105 :displayItem:y 6
+  322 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  323 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  324 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  325 label *label128
+  326 label *label129
+  327 label *label130
+  328 label *label131
+  329 op sub :displayItem:x :displayItem:x 11
+  330 op idiv :displayItem:amount :displayItem:amount 10
+  331 jump *label132 notEqual :displayItem:amount 0
+  332 jump *label53 always
+  333 label *label132
+  334 label *label133
+  335 label *label134
+  336 op add :displayItem:i :displayItem:i 1
+  337 label *label136
+  338 op mod *tmp19 :displayItem:amount 10
+  339 # "Function: def drawDigit(in x, in y, in digit)"
+  340 multijump *label137 *tmp19 0 (m:*label86)
+  341 multilabel *label137 (m:*label86)
+  342 jump *label147 always
+  343 multilabel *label138 (m:*label86)
+  344 jump *label149 always
+  345 multilabel *label139 (m:*label86)
+  346 jump *label151 always
+  347 multilabel *label140 (m:*label86)
+  348 jump *label153 always
+  349 multilabel *label141 (m:*label86)
+  350 jump *label155 always
+  351 multilabel *label142 (m:*label86)
+  352 jump *label157 always
+  353 multilabel *label143 (m:*label86)
+  354 jump *label159 always
+  355 multilabel *label144 (m:*label86)
+  356 jump *label161 always
+  357 multilabel *label145 (m:*label86)
+  358 jump *label163 always
+  359 multilabel *label146 (m:*label86)
+  360 jump *label165 always
+  361 label *label147
+  362 op sub *tmp24 :displayItem:x 1
+  363 op sub *tmp26 :displayItem:y 1
+  364 draw lineRect *tmp24 *tmp26 9 14
+  365 jump *label168 always
+  366 label *label148
+  367 label *label149
+  368 op add *tmp28 :displayItem:x 6
+  369 op add *tmp31 :displayItem:y 12
+  370 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  371 jump *label168 always
+  372 label *label150
+  373 label *label151
+  374 op add *tmp32 :displayItem:x 7
+  375 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  376 op add *tmp33 :displayItem:y 6
+  377 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  378 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  379 op add *tmp40 :displayItem:y 12
+  380 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  381 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  382 jump *label168 always
+  383 label *label152
+  384 label *label153
+  385 op add *tmp44 :displayItem:x 7
+  386 op add *tmp46 :displayItem:y 12
+  387 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  388 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  389 op add *tmp48 :displayItem:y 6
+  390 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  391 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  392 jump *label168 always
+  393 label *label154
+  394 label *label155
+  395 op add *tmp54 :displayItem:x 7
+  396 op add *tmp56 :displayItem:y 12
+  397 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  398 op add *tmp57 :displayItem:y 6
+  399 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  400 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  401 jump *label168 always
+  402 label *label156
+  403 label *label157
+  404 op add *tmp62 :displayItem:x 7
+  405 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  406 op add *tmp65 :displayItem:y 6
+  407 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  408 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  409 op add *tmp70 :displayItem:y 12
+  410 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  411 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  412 jump *label168 always
+  413 label *label158
+  414 label *label159
+  415 op add *tmp74 :displayItem:y 12
+  416 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  417 op add *tmp75 :displayItem:x 7
+  418 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  419 op add *tmp78 :displayItem:y 6
+  420 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  421 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  422 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  423 jump *label168 always
+  424 label *label160
+  425 label *label161
+  426 op add *tmp86 :displayItem:x 6
+  427 op add *tmp89 :displayItem:y 12
+  428 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  429 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  430 jump *label168 always
+  431 label *label162
+  432 label *label163
+  433 op sub *tmp95 :displayItem:x 1
+  434 op sub *tmp97 :displayItem:y 1
+  435 draw lineRect *tmp95 *tmp97 9 14
+  436 op add *tmp98 :displayItem:y 6
+  437 op add *tmp99 :displayItem:x 7
+  438 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  439 jump *label168 always
+  440 label *label164
+  441 label *label165
+  442 op add *tmp101 :displayItem:x 7
+  443 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  444 op add *tmp104 :displayItem:y 12
+  445 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  446 op add *tmp105 :displayItem:y 6
+  447 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  448 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  449 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  450 label *label166
+  451 label *label167
+  452 label *label168
+  453 label *label169
+  454 op sub :displayItem:x :displayItem:x 11
+  455 op idiv :displayItem:amount :displayItem:amount 10
+  456 jump *label170 notEqual :displayItem:amount 0
+  457 jump *label53 always
+  458 label *label170
+  459 label *label171
+  460 label *label172
+  461 op add :displayItem:i :displayItem:i 1
+  462 label *label174
+  463 op mod *tmp19 :displayItem:amount 10
+  464 # "Function: def drawDigit(in x, in y, in digit)"
+  465 multijump *label175 *tmp19 0 (m:*label86)
+  466 multilabel *label175 (m:*label86)
+  467 jump *label185 always
+  468 multilabel *label176 (m:*label86)
+  469 jump *label187 always
+  470 multilabel *label177 (m:*label86)
+  471 jump *label189 always
+  472 multilabel *label178 (m:*label86)
+  473 jump *label191 always
+  474 multilabel *label179 (m:*label86)
+  475 jump *label193 always
+  476 multilabel *label180 (m:*label86)
+  477 jump *label195 always
+  478 multilabel *label181 (m:*label86)
+  479 jump *label197 always
+  480 multilabel *label182 (m:*label86)
+  481 jump *label199 always
+  482 multilabel *label183 (m:*label86)
+  483 jump *label201 always
+  484 multilabel *label184 (m:*label86)
+  485 jump *label203 always
+  486 label *label185
+  487 op sub *tmp24 :displayItem:x 1
+  488 op sub *tmp26 :displayItem:y 1
+  489 draw lineRect *tmp24 *tmp26 9 14
+  490 jump *label206 always
+  491 label *label186
+  492 label *label187
+  493 op add *tmp28 :displayItem:x 6
+  494 op add *tmp31 :displayItem:y 12
+  495 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  496 jump *label206 always
+  497 label *label188
+  498 label *label189
+  499 op add *tmp32 :displayItem:x 7
+  500 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  501 op add *tmp33 :displayItem:y 6
+  502 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  503 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  504 op add *tmp40 :displayItem:y 12
+  505 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  506 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  507 jump *label206 always
+  508 label *label190
+  509 label *label191
+  510 op add *tmp44 :displayItem:x 7
+  511 op add *tmp46 :displayItem:y 12
+  512 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  513 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  514 op add *tmp48 :displayItem:y 6
+  515 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  516 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  517 jump *label206 always
+  518 label *label192
+  519 label *label193
+  520 op add *tmp54 :displayItem:x 7
+  521 op add *tmp56 :displayItem:y 12
+  522 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  523 op add *tmp57 :displayItem:y 6
+  524 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  525 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  526 jump *label206 always
+  527 label *label194
+  528 label *label195
+  529 op add *tmp62 :displayItem:x 7
+  530 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  531 op add *tmp65 :displayItem:y 6
+  532 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  533 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  534 op add *tmp70 :displayItem:y 12
+  535 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  536 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  537 jump *label206 always
+  538 label *label196
+  539 label *label197
+  540 op add *tmp74 :displayItem:y 12
+  541 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  542 op add *tmp75 :displayItem:x 7
+  543 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  544 op add *tmp78 :displayItem:y 6
+  545 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  546 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  547 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  548 jump *label206 always
+  549 label *label198
+  550 label *label199
+  551 op add *tmp86 :displayItem:x 6
+  552 op add *tmp89 :displayItem:y 12
+  553 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  554 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  555 jump *label206 always
+  556 label *label200
+  557 label *label201
+  558 op sub *tmp95 :displayItem:x 1
+  559 op sub *tmp97 :displayItem:y 1
+  560 draw lineRect *tmp95 *tmp97 9 14
+  561 op add *tmp98 :displayItem:y 6
+  562 op add *tmp99 :displayItem:x 7
+  563 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  564 jump *label206 always
+  565 label *label202
+  566 label *label203
+  567 op add *tmp101 :displayItem:x 7
+  568 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  569 op add *tmp104 :displayItem:y 12
+  570 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  571 op add *tmp105 :displayItem:y 6
+  572 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  573 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  574 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  575 label *label204
+  576 label *label205
+  577 label *label206
+  578 label *label207
+  579 op sub :displayItem:x :displayItem:x 11
+  580 op idiv :displayItem:amount :displayItem:amount 10
+  581 jump *label208 notEqual :displayItem:amount 0
+  582 jump *label53 always
+  583 label *label208
+  584 label *label209
+  585 label *label210
+  586 op add :displayItem:i :displayItem:i 1
+  587 label *label212
+  588 op mod *tmp19 :displayItem:amount 10
+  589 # "Function: def drawDigit(in x, in y, in digit)"
+  590 multijump *label213 *tmp19 0 (m:*label86)
+  591 multilabel *label213 (m:*label86)
+  592 jump *label223 always
+  593 multilabel *label214 (m:*label86)
+  594 jump *label225 always
+  595 multilabel *label215 (m:*label86)
+  596 jump *label227 always
+  597 multilabel *label216 (m:*label86)
+  598 jump *label229 always
+  599 multilabel *label217 (m:*label86)
+  600 jump *label231 always
+  601 multilabel *label218 (m:*label86)
+  602 jump *label233 always
+  603 multilabel *label219 (m:*label86)
+  604 jump *label235 always
+  605 multilabel *label220 (m:*label86)
+  606 jump *label237 always
+  607 multilabel *label221 (m:*label86)
+  608 jump *label239 always
+  609 multilabel *label222 (m:*label86)
+  610 jump *label241 always
+  611 label *label223
+  612 op sub *tmp24 :displayItem:x 1
+  613 op sub *tmp26 :displayItem:y 1
+  614 draw lineRect *tmp24 *tmp26 9 14
+  615 jump *label244 always
+  616 label *label224
+  617 label *label225
+  618 op add *tmp28 :displayItem:x 6
+  619 op add *tmp31 :displayItem:y 12
+  620 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  621 jump *label244 always
+  622 label *label226
+  623 label *label227
+  624 op add *tmp32 :displayItem:x 7
+  625 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  626 op add *tmp33 :displayItem:y 6
+  627 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  628 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  629 op add *tmp40 :displayItem:y 12
+  630 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  631 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  632 jump *label244 always
+  633 label *label228
+  634 label *label229
+  635 op add *tmp44 :displayItem:x 7
+  636 op add *tmp46 :displayItem:y 12
+  637 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  638 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  639 op add *tmp48 :displayItem:y 6
+  640 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  641 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  642 jump *label244 always
+  643 label *label230
+  644 label *label231
+  645 op add *tmp54 :displayItem:x 7
+  646 op add *tmp56 :displayItem:y 12
+  647 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  648 op add *tmp57 :displayItem:y 6
+  649 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  650 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  651 jump *label244 always
+  652 label *label232
+  653 label *label233
+  654 op add *tmp62 :displayItem:x 7
+  655 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  656 op add *tmp65 :displayItem:y 6
+  657 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  658 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  659 op add *tmp70 :displayItem:y 12
+  660 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  661 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  662 jump *label244 always
+  663 label *label234
+  664 label *label235
+  665 op add *tmp74 :displayItem:y 12
+  666 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  667 op add *tmp75 :displayItem:x 7
+  668 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  669 op add *tmp78 :displayItem:y 6
+  670 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  671 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  672 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  673 jump *label244 always
+  674 label *label236
+  675 label *label237
+  676 op add *tmp86 :displayItem:x 6
+  677 op add *tmp89 :displayItem:y 12
+  678 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  679 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  680 jump *label244 always
+  681 label *label238
+  682 label *label239
+  683 op sub *tmp95 :displayItem:x 1
+  684 op sub *tmp97 :displayItem:y 1
+  685 draw lineRect *tmp95 *tmp97 9 14
+  686 op add *tmp98 :displayItem:y 6
+  687 op add *tmp99 :displayItem:x 7
+  688 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  689 jump *label244 always
+  690 label *label240
+  691 label *label241
+  692 op add *tmp101 :displayItem:x 7
+  693 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  694 op add *tmp104 :displayItem:y 12
+  695 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  696 op add *tmp105 :displayItem:y 6
+  697 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  698 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  699 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  700 label *label242
+  701 label *label243
+  702 label *label244
+  703 label *label245
+  704 op sub :displayItem:x :displayItem:x 11
+  705 op idiv :displayItem:amount :displayItem:amount 10
+  706 jump *label246 notEqual :displayItem:amount 0
+  707 jump *label53 always
+  708 label *label246
+  709 label *label247
+  710 label *label248
+  711 op add :displayItem:i :displayItem:i 1
+  712 label *label56
   713 # "Function: def drawDigit12(in x, in y, in digit)"
   714 jump *label82 notEqual :displayItem:amount 1
   715 op add *tmp119 :displayItem:x 6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   333 label *label132
   334 label *label133
   335 label *label134
-    * op add :displayItem:i :displayItem:i 1
+  336 op add :displayItem:i 0 1
   337 label *label136
   338 op mod *tmp19 :displayItem:amount 10
   339 # "Function: def drawDigit(in x, in y, in digit)"
 
   458 label *label170
   459 label *label171
   460 label *label172
-    * op add :displayItem:i :displayItem:i 1
+  461 op add :displayItem:i 1 1
   462 label *label174
   463 op mod *tmp19 :displayItem:amount 10
   464 # "Function: def drawDigit(in x, in y, in digit)"
 
   583 label *label208
   584 label *label209
   585 label *label210
-    * op add :displayItem:i :displayItem:i 1
+  586 op add :displayItem:i 2 1
   587 label *label212
   588 op mod *tmp19 :displayItem:amount 10
   589 # "Function: def drawDigit(in x, in y, in digit)"
 
   708 label *label246
   709 label *label247
   710 label *label248
-    * op add :displayItem:i :displayItem:i 1
+  711 op add :displayItem:i 3 1
   712 label *label56
   713 # "Function: def drawDigit12(in x, in y, in digit)"
   714 jump *label82 notEqual :displayItem:amount 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   207 # "Function: void displayItem(in x, in y)"
   208 op max :displayItem:amount AMOUNT 0
   209 draw color 0 255 0 255
-    * set :displayItem:i 0
   210 label *label97
   211 label *label98
   212 op mod *tmp19 :displayItem:amount 10
 
   332 label *label132
   333 label *label133
   334 label *label134
-    * op add :displayItem:i 0 1
   335 label *label136
   336 op mod *tmp19 :displayItem:amount 10
   337 # "Function: def drawDigit(in x, in y, in digit)"
 
   456 label *label170
   457 label *label171
   458 label *label172
-    * op add :displayItem:i 1 1
   459 label *label174
   460 op mod *tmp19 :displayItem:amount 10
   461 # "Function: def drawDigit(in x, in y, in digit)"
 
   580 label *label208
   581 label *label209
   582 label *label210
-    * op add :displayItem:i 2 1
   583 label *label212
   584 op mod *tmp19 :displayItem:amount 10
   585 # "Function: def drawDigit(in x, in y, in digit)"
 
   704 label *label246
   705 label *label247
   706 label *label248
-    * op add :displayItem:i 3 1
   707 label *label56
   708 # "Function: def drawDigit12(in x, in y, in digit)"
   709 jump *label82 notEqual :displayItem:amount 1

Modifications by Inline function 'eraseNumbers' defined at line 77:1 (-1 instructions):
 
    88 drawflush display1
    89 set :y 152
    90 set :eraseNumbers:first_column true
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+   91 label *label250
+   92 # "Function: def eraseNumbers(in first_column)"
+   93 draw color 0 0 80 255
+   94 jump *label251 equal :eraseNumbers:first_column false
+   95 draw rect 23 0 70 176
+   96 jump *label252 always
+   97 label *label251
+   98 draw rect 109 0 176 176
+   99 label *label252
+  100 label *label253
   101 set :index 0
   102 set :item @sand
   103 op add *tmp10 @counter 1
 
   179 drawflush display1
   180 set :y 152
   181 set :eraseNumbers:first_column false
-    * call *label1 :eraseNumbers*retaddr :eraseNumbers*retval
+  182 label *label254
+  183 # "Function: def eraseNumbers(in first_column)"
+  184 draw color 0 0 80 255
+  185 jump *label255 equal :eraseNumbers:first_column false
+  186 draw rect 23 0 70 176
+  187 jump *label256 always
+  188 label *label255
+  189 draw rect 109 0 176 176
+  190 label *label256
+  191 label *label257
   192 label *label45
   193 label *label46
   194 label *label25
 
   209 label *label47
   210 return :eraseImages*retaddr
   211 end
-    * label *label1
-    * # "Function: def eraseNumbers(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label51 equal :eraseNumbers:first_column false
-    * draw rect 23 0 70 176
-    * jump *label52 always
-    * label *label51
-    * draw rect 109 0 176 176
-    * label *label52
-    * label *label50
-    * return :eraseNumbers*retaddr
-    * end
   212 label *label2
   213 # "Function: void displayItem(in x, in y)"
   214 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    91 label *label250
    92 # "Function: def eraseNumbers(in first_column)"
    93 draw color 0 0 80 255
-    * jump *label251 equal :eraseNumbers:first_column false
+   94 jump *label251 equal true false
    95 draw rect 23 0 70 176
    96 jump *label252 always
    97 label *label251
 
   182 label *label254
   183 # "Function: def eraseNumbers(in first_column)"
   184 draw color 0 0 80 255
-    * jump *label255 equal :eraseNumbers:first_column false
+  185 jump *label255 equal false false
   186 draw rect 23 0 70 176
   187 jump *label256 always
   188 label *label255

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    87 label *label5
    88 drawflush display1
    89 set :y 152
-    * set :eraseNumbers:first_column true
    90 label *label250
    91 # "Function: def eraseNumbers(in first_column)"
    92 draw color 0 0 80 255
 
   177 jump *label45 notEqual :index 8
   178 drawflush display1
   179 set :y 152
-    * set :eraseNumbers:first_column false
   180 label *label254
   181 # "Function: def eraseNumbers(in first_column)"
   182 draw color 0 0 80 255

Modifications by Inline function 'eraseImages' defined at line 68:1 (-1 instructions):
 
     2 set :x 7
     3 set :y 152
     4 set :eraseImages:first_column true
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+    5 label *label258
+    6 # "Function: def eraseImages(in first_column)"
+    7 draw color 0 0 80 255
+    8 jump *label259 equal :eraseImages:first_column false
+    9 draw rect 0 0 23 176
+   10 jump *label260 always
+   11 label *label259
+   12 draw rect 93 0 16 176
+   13 label *label260
+   14 label *label261
    15 set :eraseImages:first_column false
-    * call *label0 :eraseImages*retaddr :eraseImages*retval
+   16 label *label262
+   17 # "Function: def eraseImages(in first_column)"
+   18 draw color 0 0 80 255
+   19 jump *label263 equal :eraseImages:first_column false
+   20 draw rect 0 0 23 176
+   21 jump *label264 always
+   22 label *label263
+   23 draw rect 93 0 16 176
+   24 label *label264
+   25 label *label265
    26 draw color 255 255 255 255
    27 set :index 0
    28 set :item @sand
 
   213 label *label26
   214 drawflush display1
   215 end
-    * label *label0
-    * # "Function: def eraseImages(in first_column)"
-    * draw color 0 0 80 255
-    * jump *label48 equal :eraseImages:first_column false
-    * draw rect 0 0 23 176
-    * jump *label49 always
-    * label *label48
-    * draw rect 93 0 16 176
-    * label *label49
-    * label *label47
-    * return :eraseImages*retaddr
-    * end
   216 label *label2
   217 # "Function: void displayItem(in x, in y)"
   218 op max :displayItem:amount AMOUNT 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 label *label258
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label259 equal :eraseImages:first_column false
+    8 jump *label259 equal true false
     9 draw rect 0 0 23 176
    10 jump *label260 always
    11 label *label259
 
    16 label *label262
    17 # "Function: def eraseImages(in first_column)"
    18 draw color 0 0 80 255
-    * jump *label263 equal :eraseImages:first_column false
+   19 jump *label263 equal false false
    20 draw rect 0 0 23 176
    21 jump *label264 always
    22 label *label263

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     1 draw stroke 2
     2 set :x 7
     3 set :y 152
-    * set :eraseImages:first_column true
     4 label *label258
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
 
    11 draw rect 93 0 16 176
    12 label *label260
    13 label *label261
-    * set :eraseImages:first_column false
    14 label *label262
    15 # "Function: def eraseImages(in first_column)"
    16 draw color 0 0 80 255

Modifications by Unroll iteration loop at line 32:1 (+103 instructions):
 
    23 label *label265
    24 draw color 255 255 255 255
    25 set :index 0
-    * set :item @sand
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label6 (m:marker0)
-    * set :item @copper
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label7 (m:marker0)
-    * set :item @lead
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label8 (m:marker0)
-    * set :item @coal
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label9 (m:marker0)
-    * set :item @titanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label10 (m:marker0)
-    * set :item @thorium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label11 (m:marker0)
-    * set :item @scrap
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label12 (m:marker0)
-    * set :item @graphite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label13 (m:marker0)
-    * set :item @metaglass
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label14 (m:marker0)
-    * set :item @silicon
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label15 (m:marker0)
-    * set :item @pyratite
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label16 (m:marker0)
-    * set :item @blast-compound
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label17 (m:marker0)
-    * set :item @plastanium
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label18 (m:marker0)
-    * set :item @phase-fabric
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label19 (m:marker0)
-    * set :item @surge-alloy
-    * op add *tmp2 @counter 1
-    * jump *label3 always
-    * multilabel *label20 (m:marker0)
-    * set :item @spore-pod
-    * set *tmp2 null
-    * label *label3
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label22 notEqual :index 8
-    * set :y 152
-    * set :x 93
-    * draw color 255 255 255 255
-    * label *label22
-    * label *label23
-    * label *label4
-    * multijump *tmp2 0 0 (m:marker0)
-    * multilabel *label21 (m:marker0)
-    * label *label5
+   26 set :item @sand
+   27 label *label266
+   28 op add *tmp3 :x 8
+   29 op add *tmp6 :y 7
+   30 draw image *tmp3 *tmp6 :item 16 0
+   31 op add :index :index 1
+   32 op sub :y :y 20
+   33 jump *label267 notEqual :index 8
+   34 set :y 152
+   35 set :x 93
+   36 draw color 255 255 255 255
+   37 label *label267
+   38 label *label268
+   39 label *label269
+   40 set :item @copper
+   41 label *label272
+   42 op add *tmp3 :x 8
+   43 op add *tmp6 :y 7
+   44 draw image *tmp3 *tmp6 :item 16 0
+   45 op add :index :index 1
+   46 op sub :y :y 20
+   47 jump *label273 notEqual :index 8
+   48 set :y 152
+   49 set :x 93
+   50 draw color 255 255 255 255
+   51 label *label273
+   52 label *label274
+   53 label *label275
+   54 set :item @lead
+   55 label *label278
+   56 op add *tmp3 :x 8
+   57 op add *tmp6 :y 7
+   58 draw image *tmp3 *tmp6 :item 16 0
+   59 op add :index :index 1
+   60 op sub :y :y 20
+   61 jump *label279 notEqual :index 8
+   62 set :y 152
+   63 set :x 93
+   64 draw color 255 255 255 255
+   65 label *label279
+   66 label *label280
+   67 label *label281
+   68 set :item @coal
+   69 label *label284
+   70 op add *tmp3 :x 8
+   71 op add *tmp6 :y 7
+   72 draw image *tmp3 *tmp6 :item 16 0
+   73 op add :index :index 1
+   74 op sub :y :y 20
+   75 jump *label285 notEqual :index 8
+   76 set :y 152
+   77 set :x 93
+   78 draw color 255 255 255 255
+   79 label *label285
+   80 label *label286
+   81 label *label287
+   82 set :item @titanium
+   83 label *label290
+   84 op add *tmp3 :x 8
+   85 op add *tmp6 :y 7
+   86 draw image *tmp3 *tmp6 :item 16 0
+   87 op add :index :index 1
+   88 op sub :y :y 20
+   89 jump *label291 notEqual :index 8
+   90 set :y 152
+   91 set :x 93
+   92 draw color 255 255 255 255
+   93 label *label291
+   94 label *label292
+   95 label *label293
+   96 set :item @thorium
+   97 label *label296
+   98 op add *tmp3 :x 8
+   99 op add *tmp6 :y 7
+  100 draw image *tmp3 *tmp6 :item 16 0
+  101 op add :index :index 1
+  102 op sub :y :y 20
+  103 jump *label297 notEqual :index 8
+  104 set :y 152
+  105 set :x 93
+  106 draw color 255 255 255 255
+  107 label *label297
+  108 label *label298
+  109 label *label299
+  110 set :item @scrap
+  111 label *label302
+  112 op add *tmp3 :x 8
+  113 op add *tmp6 :y 7
+  114 draw image *tmp3 *tmp6 :item 16 0
+  115 op add :index :index 1
+  116 op sub :y :y 20
+  117 jump *label303 notEqual :index 8
+  118 set :y 152
+  119 set :x 93
+  120 draw color 255 255 255 255
+  121 label *label303
+  122 label *label304
+  123 label *label305
+  124 set :item @graphite
+  125 label *label308
+  126 op add *tmp3 :x 8
+  127 op add *tmp6 :y 7
+  128 draw image *tmp3 *tmp6 :item 16 0
+  129 op add :index :index 1
+  130 op sub :y :y 20
+  131 jump *label309 notEqual :index 8
+  132 set :y 152
+  133 set :x 93
+  134 draw color 255 255 255 255
+  135 label *label309
+  136 label *label310
+  137 label *label311
+  138 set :item @metaglass
+  139 label *label314
+  140 op add *tmp3 :x 8
+  141 op add *tmp6 :y 7
+  142 draw image *tmp3 *tmp6 :item 16 0
+  143 op add :index :index 1
+  144 op sub :y :y 20
+  145 jump *label315 notEqual :index 8
+  146 set :y 152
+  147 set :x 93
+  148 draw color 255 255 255 255
+  149 label *label315
+  150 label *label316
+  151 label *label317
+  152 set :item @silicon
+  153 label *label320
+  154 op add *tmp3 :x 8
+  155 op add *tmp6 :y 7
+  156 draw image *tmp3 *tmp6 :item 16 0
+  157 op add :index :index 1
+  158 op sub :y :y 20
+  159 jump *label321 notEqual :index 8
+  160 set :y 152
+  161 set :x 93
+  162 draw color 255 255 255 255
+  163 label *label321
+  164 label *label322
+  165 label *label323
+  166 set :item @pyratite
+  167 label *label326
+  168 op add *tmp3 :x 8
+  169 op add *tmp6 :y 7
+  170 draw image *tmp3 *tmp6 :item 16 0
+  171 op add :index :index 1
+  172 op sub :y :y 20
+  173 jump *label327 notEqual :index 8
+  174 set :y 152
+  175 set :x 93
+  176 draw color 255 255 255 255
+  177 label *label327
+  178 label *label328
+  179 label *label329
+  180 set :item @blast-compound
+  181 label *label332
+  182 op add *tmp3 :x 8
+  183 op add *tmp6 :y 7
+  184 draw image *tmp3 *tmp6 :item 16 0
+  185 op add :index :index 1
+  186 op sub :y :y 20
+  187 jump *label333 notEqual :index 8
+  188 set :y 152
+  189 set :x 93
+  190 draw color 255 255 255 255
+  191 label *label333
+  192 label *label334
+  193 label *label335
+  194 set :item @plastanium
+  195 label *label338
+  196 op add *tmp3 :x 8
+  197 op add *tmp6 :y 7
+  198 draw image *tmp3 *tmp6 :item 16 0
+  199 op add :index :index 1
+  200 op sub :y :y 20
+  201 jump *label339 notEqual :index 8
+  202 set :y 152
+  203 set :x 93
+  204 draw color 255 255 255 255
+  205 label *label339
+  206 label *label340
+  207 label *label341
+  208 set :item @phase-fabric
+  209 label *label344
+  210 op add *tmp3 :x 8
+  211 op add *tmp6 :y 7
+  212 draw image *tmp3 *tmp6 :item 16 0
+  213 op add :index :index 1
+  214 op sub :y :y 20
+  215 jump *label345 notEqual :index 8
+  216 set :y 152
+  217 set :x 93
+  218 draw color 255 255 255 255
+  219 label *label345
+  220 label *label346
+  221 label *label347
+  222 set :item @surge-alloy
+  223 label *label350
+  224 op add *tmp3 :x 8
+  225 op add *tmp6 :y 7
+  226 draw image *tmp3 *tmp6 :item 16 0
+  227 op add :index :index 1
+  228 op sub :y :y 20
+  229 jump *label351 notEqual :index 8
+  230 set :y 152
+  231 set :x 93
+  232 draw color 255 255 255 255
+  233 label *label351
+  234 label *label352
+  235 label *label353
+  236 set :item @spore-pod
+  237 label *label356
+  238 op add *tmp3 :x 8
+  239 op add *tmp6 :y 7
+  240 draw image *tmp3 *tmp6 :item 16 0
+  241 op add :index :index 1
+  242 op sub :y :y 20
+  243 jump *label357 notEqual :index 8
+  244 set :y 152
+  245 set :x 93
+  246 draw color 255 255 255 255
+  247 label *label357
+  248 label *label358
+  249 label *label359
+  250 label *label5
   251 drawflush display1
   252 set :y 152
   253 label *label250

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-30 instructions):
 
    25 set :index 0
    26 set :item @sand
    27 label *label266
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label267 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   28 op add *tmp3 7 8
+   29 op add *tmp6 152 7
+   30 draw image 15 159 @sand 16 0
+   31 op add :index 0 1
+   32 op sub :y 152 20
+   33 jump *label267 notEqual 1 8
    34 draw color 255 255 255 255
    35 label *label267
    36 label *label268
    37 label *label269
    38 set :item @copper
    39 label *label272
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label273 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   40 op add *tmp3 7 8
+   41 op add *tmp6 132 7
+   42 draw image 15 139 @copper 16 0
+   43 op add :index 1 1
+   44 op sub :y 132 20
+   45 jump *label273 notEqual 2 8
    46 draw color 255 255 255 255
    47 label *label273
    48 label *label274
    49 label *label275
    50 set :item @lead
    51 label *label278
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label279 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   52 op add *tmp3 7 8
+   53 op add *tmp6 112 7
+   54 draw image 15 119 @lead 16 0
+   55 op add :index 2 1
+   56 op sub :y 112 20
+   57 jump *label279 notEqual 3 8
    58 draw color 255 255 255 255
    59 label *label279
    60 label *label280
    61 label *label281
    62 set :item @coal
    63 label *label284
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label285 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   64 op add *tmp3 7 8
+   65 op add *tmp6 92 7
+   66 draw image 15 99 @coal 16 0
+   67 op add :index 3 1
+   68 op sub :y 92 20
+   69 jump *label285 notEqual 4 8
    70 draw color 255 255 255 255
    71 label *label285
    72 label *label286
    73 label *label287
    74 set :item @titanium
    75 label *label290
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label291 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   76 op add *tmp3 7 8
+   77 op add *tmp6 72 7
+   78 draw image 15 79 @titanium 16 0
+   79 op add :index 4 1
+   80 op sub :y 72 20
+   81 jump *label291 notEqual 5 8
    82 draw color 255 255 255 255
    83 label *label291
    84 label *label292
    85 label *label293
    86 set :item @thorium
    87 label *label296
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label297 notEqual :index 8
-    * set :y 152
-    * set :x 93
+   88 op add *tmp3 7 8
+   89 op add *tmp6 52 7
+   90 draw image 15 59 @thorium 16 0
+   91 op add :index 5 1
+   92 op sub :y 52 20
+   93 jump *label297 notEqual 6 8
    94 draw color 255 255 255 255
    95 label *label297
    96 label *label298
    97 label *label299
    98 set :item @scrap
    99 label *label302
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label303 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  100 op add *tmp3 7 8
+  101 op add *tmp6 32 7
+  102 draw image 15 39 @scrap 16 0
+  103 op add :index 6 1
+  104 op sub :y 32 20
+  105 jump *label303 notEqual 7 8
   106 draw color 255 255 255 255
   107 label *label303
   108 label *label304
   109 label *label305
   110 set :item @graphite
   111 label *label308
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label309 notEqual :index 8
+  112 op add *tmp3 7 8
+  113 op add *tmp6 12 7
+  114 draw image 15 19 @graphite 16 0
+  115 op add :index 7 1
+  116 op sub :y 12 20
+  117 jump *label309 notEqual 8 8
   118 set :y 152
   119 set :x 93
   120 draw color 255 255 255 255
 
   123 label *label311
   124 set :item @metaglass
   125 label *label314
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label315 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  126 op add *tmp3 93 8
+  127 op add *tmp6 152 7
+  128 draw image 101 159 @metaglass 16 0
+  129 op add :index 8 1
+  130 op sub :y 152 20
+  131 jump *label315 notEqual 9 8
   132 draw color 255 255 255 255
   133 label *label315
   134 label *label316
   135 label *label317
   136 set :item @silicon
   137 label *label320
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label321 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  138 op add *tmp3 93 8
+  139 op add *tmp6 132 7
+  140 draw image 101 139 @silicon 16 0
+  141 op add :index 9 1
+  142 op sub :y 132 20
+  143 jump *label321 notEqual 10 8
   144 draw color 255 255 255 255
   145 label *label321
   146 label *label322
   147 label *label323
   148 set :item @pyratite
   149 label *label326
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label327 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  150 op add *tmp3 93 8
+  151 op add *tmp6 112 7
+  152 draw image 101 119 @pyratite 16 0
+  153 op add :index 10 1
+  154 op sub :y 112 20
+  155 jump *label327 notEqual 11 8
   156 draw color 255 255 255 255
   157 label *label327
   158 label *label328
   159 label *label329
   160 set :item @blast-compound
   161 label *label332
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label333 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  162 op add *tmp3 93 8
+  163 op add *tmp6 92 7
+  164 draw image 101 99 @blast-compound 16 0
+  165 op add :index 11 1
+  166 op sub :y 92 20
+  167 jump *label333 notEqual 12 8
   168 draw color 255 255 255 255
   169 label *label333
   170 label *label334
   171 label *label335
   172 set :item @plastanium
   173 label *label338
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label339 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  174 op add *tmp3 93 8
+  175 op add *tmp6 72 7
+  176 draw image 101 79 @plastanium 16 0
+  177 op add :index 12 1
+  178 op sub :y 72 20
+  179 jump *label339 notEqual 13 8
   180 draw color 255 255 255 255
   181 label *label339
   182 label *label340
   183 label *label341
   184 set :item @phase-fabric
   185 label *label344
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label345 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  186 op add *tmp3 93 8
+  187 op add *tmp6 52 7
+  188 draw image 101 59 @phase-fabric 16 0
+  189 op add :index 13 1
+  190 op sub :y 52 20
+  191 jump *label345 notEqual 14 8
   192 draw color 255 255 255 255
   193 label *label345
   194 label *label346
   195 label *label347
   196 set :item @surge-alloy
   197 label *label350
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label351 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  198 op add *tmp3 93 8
+  199 op add *tmp6 32 7
+  200 draw image 101 39 @surge-alloy 16 0
+  201 op add :index 14 1
+  202 op sub :y 32 20
+  203 jump *label351 notEqual 15 8
   204 draw color 255 255 255 255
   205 label *label351
   206 label *label352
   207 label *label353
   208 set :item @spore-pod
   209 label *label356
-    * op add *tmp3 :x 8
-    * op add *tmp6 :y 7
-    * draw image *tmp3 *tmp6 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label357 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  210 op add *tmp3 93 8
+  211 op add *tmp6 12 7
+  212 draw image 101 19 @spore-pod 16 0
+  213 op add :index 15 1
+  214 op sub :y 12 20
+  215 jump *label357 notEqual 16 8
   216 draw color 255 255 255 255
   217 label *label357
   218 label *label358

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-85 instructions):
     0 set AMOUNT 12345
     1 draw stroke 2
-    * set :x 7
-    * set :y 152
     2 label *label258
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
 
    20 label *label264
    21 label *label265
    22 draw color 255 255 255 255
-    * set :index 0
-    * set :item @sand
    23 label *label266
-    * op add *tmp3 7 8
-    * op add *tmp6 152 7
    24 draw image 15 159 @sand 16 0
-    * op add :index 0 1
-    * op sub :y 152 20
    25 jump *label267 notEqual 1 8
    26 draw color 255 255 255 255
    27 label *label267
    28 label *label268
    29 label *label269
-    * set :item @copper
    30 label *label272
-    * op add *tmp3 7 8
-    * op add *tmp6 132 7
    31 draw image 15 139 @copper 16 0
-    * op add :index 1 1
-    * op sub :y 132 20
    32 jump *label273 notEqual 2 8
    33 draw color 255 255 255 255
    34 label *label273
    35 label *label274
    36 label *label275
-    * set :item @lead
    37 label *label278
-    * op add *tmp3 7 8
-    * op add *tmp6 112 7
    38 draw image 15 119 @lead 16 0
-    * op add :index 2 1
-    * op sub :y 112 20
    39 jump *label279 notEqual 3 8
    40 draw color 255 255 255 255
    41 label *label279
    42 label *label280
    43 label *label281
-    * set :item @coal
    44 label *label284
-    * op add *tmp3 7 8
-    * op add *tmp6 92 7
    45 draw image 15 99 @coal 16 0
-    * op add :index 3 1
-    * op sub :y 92 20
    46 jump *label285 notEqual 4 8
    47 draw color 255 255 255 255
    48 label *label285
    49 label *label286
    50 label *label287
-    * set :item @titanium
    51 label *label290
-    * op add *tmp3 7 8
-    * op add *tmp6 72 7
    52 draw image 15 79 @titanium 16 0
-    * op add :index 4 1
-    * op sub :y 72 20
    53 jump *label291 notEqual 5 8
    54 draw color 255 255 255 255
    55 label *label291
    56 label *label292
    57 label *label293
-    * set :item @thorium
    58 label *label296
-    * op add *tmp3 7 8
-    * op add *tmp6 52 7
    59 draw image 15 59 @thorium 16 0
-    * op add :index 5 1
-    * op sub :y 52 20
    60 jump *label297 notEqual 6 8
    61 draw color 255 255 255 255
    62 label *label297
    63 label *label298
    64 label *label299
-    * set :item @scrap
    65 label *label302
-    * op add *tmp3 7 8
-    * op add *tmp6 32 7
    66 draw image 15 39 @scrap 16 0
-    * op add :index 6 1
-    * op sub :y 32 20
    67 jump *label303 notEqual 7 8
    68 draw color 255 255 255 255
    69 label *label303
    70 label *label304
    71 label *label305
-    * set :item @graphite
    72 label *label308
-    * op add *tmp3 7 8
-    * op add *tmp6 12 7
    73 draw image 15 19 @graphite 16 0
-    * op add :index 7 1
-    * op sub :y 12 20
    74 jump *label309 notEqual 8 8
-    * set :y 152
-    * set :x 93
    75 draw color 255 255 255 255
    76 label *label309
    77 label *label310
    78 label *label311
-    * set :item @metaglass
    79 label *label314
-    * op add *tmp3 93 8
-    * op add *tmp6 152 7
    80 draw image 101 159 @metaglass 16 0
-    * op add :index 8 1
-    * op sub :y 152 20
    81 jump *label315 notEqual 9 8
    82 draw color 255 255 255 255
    83 label *label315
    84 label *label316
    85 label *label317
-    * set :item @silicon
    86 label *label320
-    * op add *tmp3 93 8
-    * op add *tmp6 132 7
    87 draw image 101 139 @silicon 16 0
-    * op add :index 9 1
-    * op sub :y 132 20
    88 jump *label321 notEqual 10 8
    89 draw color 255 255 255 255
    90 label *label321
    91 label *label322
    92 label *label323
-    * set :item @pyratite
    93 label *label326
-    * op add *tmp3 93 8
-    * op add *tmp6 112 7
    94 draw image 101 119 @pyratite 16 0
-    * op add :index 10 1
-    * op sub :y 112 20
    95 jump *label327 notEqual 11 8
    96 draw color 255 255 255 255
    97 label *label327
    98 label *label328
    99 label *label329
-    * set :item @blast-compound
   100 label *label332
-    * op add *tmp3 93 8
-    * op add *tmp6 92 7
   101 draw image 101 99 @blast-compound 16 0
-    * op add :index 11 1
-    * op sub :y 92 20
   102 jump *label333 notEqual 12 8
   103 draw color 255 255 255 255
   104 label *label333
   105 label *label334
   106 label *label335
-    * set :item @plastanium
   107 label *label338
-    * op add *tmp3 93 8
-    * op add *tmp6 72 7
   108 draw image 101 79 @plastanium 16 0
-    * op add :index 12 1
-    * op sub :y 72 20
   109 jump *label339 notEqual 13 8
   110 draw color 255 255 255 255
   111 label *label339
   112 label *label340
   113 label *label341
-    * set :item @phase-fabric
   114 label *label344
-    * op add *tmp3 93 8
-    * op add *tmp6 52 7
   115 draw image 101 59 @phase-fabric 16 0
-    * op add :index 13 1
-    * op sub :y 52 20
   116 jump *label345 notEqual 14 8
   117 draw color 255 255 255 255
   118 label *label345
   119 label *label346
   120 label *label347
-    * set :item @surge-alloy
   121 label *label350
-    * op add *tmp3 93 8
-    * op add *tmp6 32 7
   122 draw image 101 39 @surge-alloy 16 0
-    * op add :index 14 1
-    * op sub :y 32 20
   123 jump *label351 notEqual 15 8
   124 draw color 255 255 255 255
   125 label *label351
   126 label *label352
   127 label *label353
-    * set :item @spore-pod
   128 label *label356
-    * op add *tmp3 93 8
-    * op add *tmp6 12 7
   129 draw image 101 19 @spore-pod 16 0
-    * op add :index 15 1
-    * op sub :y 12 20
   130 jump *label357 notEqual 16 8
   131 draw color 255 255 255 255
   132 label *label357

Modifications by Inline function 'displayItem' defined at line 86:1 (+353 instructions):
 
   213 jump *label43 greaterThanEq :index 8
   214 set :displayItem:x 71
   215 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  216 label *label363
+  217 # "Function: void displayItem(in x, in y)"
+  218 op max :displayItem:amount AMOUNT 0
+  219 draw color 0 255 0 255
+  220 label *label364
+  221 label *label365
+  222 op mod *tmp19 :displayItem:amount 10
+  223 # "Function: def drawDigit(in x, in y, in digit)"
+  224 multijump *label366 *tmp19 0 (m:*label86)
+  225 multilabel *label366 (m:*label86)
+  226 jump *label376 always
+  227 multilabel *label367 (m:*label86)
+  228 jump *label378 always
+  229 multilabel *label368 (m:*label86)
+  230 jump *label380 always
+  231 multilabel *label369 (m:*label86)
+  232 jump *label382 always
+  233 multilabel *label370 (m:*label86)
+  234 jump *label384 always
+  235 multilabel *label371 (m:*label86)
+  236 jump *label386 always
+  237 multilabel *label372 (m:*label86)
+  238 jump *label388 always
+  239 multilabel *label373 (m:*label86)
+  240 jump *label390 always
+  241 multilabel *label374 (m:*label86)
+  242 jump *label392 always
+  243 multilabel *label375 (m:*label86)
+  244 jump *label394 always
+  245 label *label376
+  246 op sub *tmp24 :displayItem:x 1
+  247 op sub *tmp26 :displayItem:y 1
+  248 draw lineRect *tmp24 *tmp26 9 14
+  249 jump *label397 always
+  250 label *label377
+  251 label *label378
+  252 op add *tmp28 :displayItem:x 6
+  253 op add *tmp31 :displayItem:y 12
+  254 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  255 jump *label397 always
+  256 label *label379
+  257 label *label380
+  258 op add *tmp32 :displayItem:x 7
+  259 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  260 op add *tmp33 :displayItem:y 6
+  261 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  262 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  263 op add *tmp40 :displayItem:y 12
+  264 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  265 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  266 jump *label397 always
+  267 label *label381
+  268 label *label382
+  269 op add *tmp44 :displayItem:x 7
+  270 op add *tmp46 :displayItem:y 12
+  271 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  272 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  273 op add *tmp48 :displayItem:y 6
+  274 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  275 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  276 jump *label397 always
+  277 label *label383
+  278 label *label384
+  279 op add *tmp54 :displayItem:x 7
+  280 op add *tmp56 :displayItem:y 12
+  281 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  282 op add *tmp57 :displayItem:y 6
+  283 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  284 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  285 jump *label397 always
+  286 label *label385
+  287 label *label386
+  288 op add *tmp62 :displayItem:x 7
+  289 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  290 op add *tmp65 :displayItem:y 6
+  291 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  292 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  293 op add *tmp70 :displayItem:y 12
+  294 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  295 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  296 jump *label397 always
+  297 label *label387
+  298 label *label388
+  299 op add *tmp74 :displayItem:y 12
+  300 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  301 op add *tmp75 :displayItem:x 7
+  302 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  303 op add *tmp78 :displayItem:y 6
+  304 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  305 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  306 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  307 jump *label397 always
+  308 label *label389
+  309 label *label390
+  310 op add *tmp86 :displayItem:x 6
+  311 op add *tmp89 :displayItem:y 12
+  312 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  313 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  314 jump *label397 always
+  315 label *label391
+  316 label *label392
+  317 op sub *tmp95 :displayItem:x 1
+  318 op sub *tmp97 :displayItem:y 1
+  319 draw lineRect *tmp95 *tmp97 9 14
+  320 op add *tmp98 :displayItem:y 6
+  321 op add *tmp99 :displayItem:x 7
+  322 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  323 jump *label397 always
+  324 label *label393
+  325 label *label394
+  326 op add *tmp101 :displayItem:x 7
+  327 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  328 op add *tmp104 :displayItem:y 12
+  329 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  330 op add *tmp105 :displayItem:y 6
+  331 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  332 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  333 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  334 label *label395
+  335 label *label396
+  336 label *label397
+  337 label *label398
+  338 op sub :displayItem:x :displayItem:x 11
+  339 op idiv :displayItem:amount :displayItem:amount 10
+  340 jump *label399 notEqual :displayItem:amount 0
+  341 jump *label517 always
+  342 label *label399
+  343 label *label400
+  344 label *label401
+  345 label *label402
+  346 op mod *tmp19 :displayItem:amount 10
+  347 # "Function: def drawDigit(in x, in y, in digit)"
+  348 multijump *label403 *tmp19 0 (m:*label86)
+  349 multilabel *label403 (m:*label86)
+  350 jump *label413 always
+  351 multilabel *label404 (m:*label86)
+  352 jump *label415 always
+  353 multilabel *label405 (m:*label86)
+  354 jump *label417 always
+  355 multilabel *label406 (m:*label86)
+  356 jump *label419 always
+  357 multilabel *label407 (m:*label86)
+  358 jump *label421 always
+  359 multilabel *label408 (m:*label86)
+  360 jump *label423 always
+  361 multilabel *label409 (m:*label86)
+  362 jump *label425 always
+  363 multilabel *label410 (m:*label86)
+  364 jump *label427 always
+  365 multilabel *label411 (m:*label86)
+  366 jump *label429 always
+  367 multilabel *label412 (m:*label86)
+  368 jump *label431 always
+  369 label *label413
+  370 op sub *tmp24 :displayItem:x 1
+  371 op sub *tmp26 :displayItem:y 1
+  372 draw lineRect *tmp24 *tmp26 9 14
+  373 jump *label434 always
+  374 label *label414
+  375 label *label415
+  376 op add *tmp28 :displayItem:x 6
+  377 op add *tmp31 :displayItem:y 12
+  378 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  379 jump *label434 always
+  380 label *label416
+  381 label *label417
+  382 op add *tmp32 :displayItem:x 7
+  383 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  384 op add *tmp33 :displayItem:y 6
+  385 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  386 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  387 op add *tmp40 :displayItem:y 12
+  388 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  389 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  390 jump *label434 always
+  391 label *label418
+  392 label *label419
+  393 op add *tmp44 :displayItem:x 7
+  394 op add *tmp46 :displayItem:y 12
+  395 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  396 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  397 op add *tmp48 :displayItem:y 6
+  398 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  399 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  400 jump *label434 always
+  401 label *label420
+  402 label *label421
+  403 op add *tmp54 :displayItem:x 7
+  404 op add *tmp56 :displayItem:y 12
+  405 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  406 op add *tmp57 :displayItem:y 6
+  407 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  408 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  409 jump *label434 always
+  410 label *label422
+  411 label *label423
+  412 op add *tmp62 :displayItem:x 7
+  413 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  414 op add *tmp65 :displayItem:y 6
+  415 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  416 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  417 op add *tmp70 :displayItem:y 12
+  418 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  419 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  420 jump *label434 always
+  421 label *label424
+  422 label *label425
+  423 op add *tmp74 :displayItem:y 12
+  424 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  425 op add *tmp75 :displayItem:x 7
+  426 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  427 op add *tmp78 :displayItem:y 6
+  428 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  429 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  430 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  431 jump *label434 always
+  432 label *label426
+  433 label *label427
+  434 op add *tmp86 :displayItem:x 6
+  435 op add *tmp89 :displayItem:y 12
+  436 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  437 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  438 jump *label434 always
+  439 label *label428
+  440 label *label429
+  441 op sub *tmp95 :displayItem:x 1
+  442 op sub *tmp97 :displayItem:y 1
+  443 draw lineRect *tmp95 *tmp97 9 14
+  444 op add *tmp98 :displayItem:y 6
+  445 op add *tmp99 :displayItem:x 7
+  446 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  447 jump *label434 always
+  448 label *label430
+  449 label *label431
+  450 op add *tmp101 :displayItem:x 7
+  451 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  452 op add *tmp104 :displayItem:y 12
+  453 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  454 op add *tmp105 :displayItem:y 6
+  455 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  456 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  457 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  458 label *label432
+  459 label *label433
+  460 label *label434
+  461 label *label435
+  462 op sub :displayItem:x :displayItem:x 11
+  463 op idiv :displayItem:amount :displayItem:amount 10
+  464 jump *label436 notEqual :displayItem:amount 0
+  465 jump *label517 always
+  466 label *label436
+  467 label *label437
+  468 label *label438
+  469 label *label439
+  470 op mod *tmp19 :displayItem:amount 10
+  471 # "Function: def drawDigit(in x, in y, in digit)"
+  472 multijump *label440 *tmp19 0 (m:*label86)
+  473 multilabel *label440 (m:*label86)
+  474 jump *label450 always
+  475 multilabel *label441 (m:*label86)
+  476 jump *label452 always
+  477 multilabel *label442 (m:*label86)
+  478 jump *label454 always
+  479 multilabel *label443 (m:*label86)
+  480 jump *label456 always
+  481 multilabel *label444 (m:*label86)
+  482 jump *label458 always
+  483 multilabel *label445 (m:*label86)
+  484 jump *label460 always
+  485 multilabel *label446 (m:*label86)
+  486 jump *label462 always
+  487 multilabel *label447 (m:*label86)
+  488 jump *label464 always
+  489 multilabel *label448 (m:*label86)
+  490 jump *label466 always
+  491 multilabel *label449 (m:*label86)
+  492 jump *label468 always
+  493 label *label450
+  494 op sub *tmp24 :displayItem:x 1
+  495 op sub *tmp26 :displayItem:y 1
+  496 draw lineRect *tmp24 *tmp26 9 14
+  497 jump *label471 always
+  498 label *label451
+  499 label *label452
+  500 op add *tmp28 :displayItem:x 6
+  501 op add *tmp31 :displayItem:y 12
+  502 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  503 jump *label471 always
+  504 label *label453
+  505 label *label454
+  506 op add *tmp32 :displayItem:x 7
+  507 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  508 op add *tmp33 :displayItem:y 6
+  509 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  510 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  511 op add *tmp40 :displayItem:y 12
+  512 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  513 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  514 jump *label471 always
+  515 label *label455
+  516 label *label456
+  517 op add *tmp44 :displayItem:x 7
+  518 op add *tmp46 :displayItem:y 12
+  519 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  520 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  521 op add *tmp48 :displayItem:y 6
+  522 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  523 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  524 jump *label471 always
+  525 label *label457
+  526 label *label458
+  527 op add *tmp54 :displayItem:x 7
+  528 op add *tmp56 :displayItem:y 12
+  529 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  530 op add *tmp57 :displayItem:y 6
+  531 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  532 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  533 jump *label471 always
+  534 label *label459
+  535 label *label460
+  536 op add *tmp62 :displayItem:x 7
+  537 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  538 op add *tmp65 :displayItem:y 6
+  539 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  540 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  541 op add *tmp70 :displayItem:y 12
+  542 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  543 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  544 jump *label471 always
+  545 label *label461
+  546 label *label462
+  547 op add *tmp74 :displayItem:y 12
+  548 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  549 op add *tmp75 :displayItem:x 7
+  550 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  551 op add *tmp78 :displayItem:y 6
+  552 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  553 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  554 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  555 jump *label471 always
+  556 label *label463
+  557 label *label464
+  558 op add *tmp86 :displayItem:x 6
+  559 op add *tmp89 :displayItem:y 12
+  560 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  561 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  562 jump *label471 always
+  563 label *label465
+  564 label *label466
+  565 op sub *tmp95 :displayItem:x 1
+  566 op sub *tmp97 :displayItem:y 1
+  567 draw lineRect *tmp95 *tmp97 9 14
+  568 op add *tmp98 :displayItem:y 6
+  569 op add *tmp99 :displayItem:x 7
+  570 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  571 jump *label471 always
+  572 label *label467
+  573 label *label468
+  574 op add *tmp101 :displayItem:x 7
+  575 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  576 op add *tmp104 :displayItem:y 12
+  577 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  578 op add *tmp105 :displayItem:y 6
+  579 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  580 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  581 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  582 label *label469
+  583 label *label470
+  584 label *label471
+  585 label *label472
+  586 op sub :displayItem:x :displayItem:x 11
+  587 op idiv :displayItem:amount :displayItem:amount 10
+  588 jump *label473 notEqual :displayItem:amount 0
+  589 jump *label517 always
+  590 label *label473
+  591 label *label474
+  592 label *label475
+  593 label *label476
+  594 op mod *tmp19 :displayItem:amount 10
+  595 # "Function: def drawDigit(in x, in y, in digit)"
+  596 multijump *label477 *tmp19 0 (m:*label86)
+  597 multilabel *label477 (m:*label86)
+  598 jump *label487 always
+  599 multilabel *label478 (m:*label86)
+  600 jump *label489 always
+  601 multilabel *label479 (m:*label86)
+  602 jump *label491 always
+  603 multilabel *label480 (m:*label86)
+  604 jump *label493 always
+  605 multilabel *label481 (m:*label86)
+  606 jump *label495 always
+  607 multilabel *label482 (m:*label86)
+  608 jump *label497 always
+  609 multilabel *label483 (m:*label86)
+  610 jump *label499 always
+  611 multilabel *label484 (m:*label86)
+  612 jump *label501 always
+  613 multilabel *label485 (m:*label86)
+  614 jump *label503 always
+  615 multilabel *label486 (m:*label86)
+  616 jump *label505 always
+  617 label *label487
+  618 op sub *tmp24 :displayItem:x 1
+  619 op sub *tmp26 :displayItem:y 1
+  620 draw lineRect *tmp24 *tmp26 9 14
+  621 jump *label508 always
+  622 label *label488
+  623 label *label489
+  624 op add *tmp28 :displayItem:x 6
+  625 op add *tmp31 :displayItem:y 12
+  626 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  627 jump *label508 always
+  628 label *label490
+  629 label *label491
+  630 op add *tmp32 :displayItem:x 7
+  631 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  632 op add *tmp33 :displayItem:y 6
+  633 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  634 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  635 op add *tmp40 :displayItem:y 12
+  636 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  637 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  638 jump *label508 always
+  639 label *label492
+  640 label *label493
+  641 op add *tmp44 :displayItem:x 7
+  642 op add *tmp46 :displayItem:y 12
+  643 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  644 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  645 op add *tmp48 :displayItem:y 6
+  646 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  647 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  648 jump *label508 always
+  649 label *label494
+  650 label *label495
+  651 op add *tmp54 :displayItem:x 7
+  652 op add *tmp56 :displayItem:y 12
+  653 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  654 op add *tmp57 :displayItem:y 6
+  655 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  656 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  657 jump *label508 always
+  658 label *label496
+  659 label *label497
+  660 op add *tmp62 :displayItem:x 7
+  661 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  662 op add *tmp65 :displayItem:y 6
+  663 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  664 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  665 op add *tmp70 :displayItem:y 12
+  666 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  667 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  668 jump *label508 always
+  669 label *label498
+  670 label *label499
+  671 op add *tmp74 :displayItem:y 12
+  672 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  673 op add *tmp75 :displayItem:x 7
+  674 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  675 op add *tmp78 :displayItem:y 6
+  676 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  677 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  678 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  679 jump *label508 always
+  680 label *label500
+  681 label *label501
+  682 op add *tmp86 :displayItem:x 6
+  683 op add *tmp89 :displayItem:y 12
+  684 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  685 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  686 jump *label508 always
+  687 label *label502
+  688 label *label503
+  689 op sub *tmp95 :displayItem:x 1
+  690 op sub *tmp97 :displayItem:y 1
+  691 draw lineRect *tmp95 *tmp97 9 14
+  692 op add *tmp98 :displayItem:y 6
+  693 op add *tmp99 :displayItem:x 7
+  694 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  695 jump *label508 always
+  696 label *label504
+  697 label *label505
+  698 op add *tmp101 :displayItem:x 7
+  699 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  700 op add *tmp104 :displayItem:y 12
+  701 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  702 op add *tmp105 :displayItem:y 6
+  703 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  704 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  705 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  706 label *label506
+  707 label *label507
+  708 label *label508
+  709 label *label509
+  710 op sub :displayItem:x :displayItem:x 11
+  711 op idiv :displayItem:amount :displayItem:amount 10
+  712 jump *label510 notEqual :displayItem:amount 0
+  713 jump *label517 always
+  714 label *label510
+  715 label *label511
+  716 label *label512
+  717 label *label513
+  718 # "Function: def drawDigit12(in x, in y, in digit)"
+  719 jump *label514 notEqual :displayItem:amount 1
+  720 op add *tmp119 :displayItem:x 6
+  721 op add *tmp122 :displayItem:y 12
+  722 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  723 jump *label515 always
+  724 label *label514
+  725 op add *tmp123 :displayItem:x 7
+  726 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+  727 op add *tmp124 :displayItem:y 6
+  728 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+  729 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+  730 op add *tmp131 :displayItem:y 12
+  731 draw line *tmp123 *tmp124 *tmp123 *tmp131
+  732 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  733 label *label515
+  734 label *label516
+  735 label *label517
   736 jump *label44 always
   737 label *label43
   738 set :displayItem:x 157
   739 set :displayItem:y :y
-    * call *label2 :displayItem*retaddr :displayItem*retval
+  740 label *label519
+  741 # "Function: void displayItem(in x, in y)"
+  742 op max :displayItem:amount AMOUNT 0
+  743 draw color 0 255 0 255
+  744 label *label520
+  745 label *label521
+  746 op mod *tmp19 :displayItem:amount 10
+  747 # "Function: def drawDigit(in x, in y, in digit)"
+  748 multijump *label522 *tmp19 0 (m:*label86)
+  749 multilabel *label522 (m:*label86)
+  750 jump *label532 always
+  751 multilabel *label523 (m:*label86)
+  752 jump *label534 always
+  753 multilabel *label524 (m:*label86)
+  754 jump *label536 always
+  755 multilabel *label525 (m:*label86)
+  756 jump *label538 always
+  757 multilabel *label526 (m:*label86)
+  758 jump *label540 always
+  759 multilabel *label527 (m:*label86)
+  760 jump *label542 always
+  761 multilabel *label528 (m:*label86)
+  762 jump *label544 always
+  763 multilabel *label529 (m:*label86)
+  764 jump *label546 always
+  765 multilabel *label530 (m:*label86)
+  766 jump *label548 always
+  767 multilabel *label531 (m:*label86)
+  768 jump *label550 always
+  769 label *label532
+  770 op sub *tmp24 :displayItem:x 1
+  771 op sub *tmp26 :displayItem:y 1
+  772 draw lineRect *tmp24 *tmp26 9 14
+  773 jump *label553 always
+  774 label *label533
+  775 label *label534
+  776 op add *tmp28 :displayItem:x 6
+  777 op add *tmp31 :displayItem:y 12
+  778 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  779 jump *label553 always
+  780 label *label535
+  781 label *label536
+  782 op add *tmp32 :displayItem:x 7
+  783 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  784 op add *tmp33 :displayItem:y 6
+  785 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  786 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  787 op add *tmp40 :displayItem:y 12
+  788 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  789 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  790 jump *label553 always
+  791 label *label537
+  792 label *label538
+  793 op add *tmp44 :displayItem:x 7
+  794 op add *tmp46 :displayItem:y 12
+  795 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  796 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  797 op add *tmp48 :displayItem:y 6
+  798 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  799 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  800 jump *label553 always
+  801 label *label539
+  802 label *label540
+  803 op add *tmp54 :displayItem:x 7
+  804 op add *tmp56 :displayItem:y 12
+  805 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  806 op add *tmp57 :displayItem:y 6
+  807 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  808 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  809 jump *label553 always
+  810 label *label541
+  811 label *label542
+  812 op add *tmp62 :displayItem:x 7
+  813 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  814 op add *tmp65 :displayItem:y 6
+  815 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  816 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  817 op add *tmp70 :displayItem:y 12
+  818 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  819 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  820 jump *label553 always
+  821 label *label543
+  822 label *label544
+  823 op add *tmp74 :displayItem:y 12
+  824 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  825 op add *tmp75 :displayItem:x 7
+  826 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  827 op add *tmp78 :displayItem:y 6
+  828 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  829 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  830 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  831 jump *label553 always
+  832 label *label545
+  833 label *label546
+  834 op add *tmp86 :displayItem:x 6
+  835 op add *tmp89 :displayItem:y 12
+  836 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  837 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  838 jump *label553 always
+  839 label *label547
+  840 label *label548
+  841 op sub *tmp95 :displayItem:x 1
+  842 op sub *tmp97 :displayItem:y 1
+  843 draw lineRect *tmp95 *tmp97 9 14
+  844 op add *tmp98 :displayItem:y 6
+  845 op add *tmp99 :displayItem:x 7
+  846 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  847 jump *label553 always
+  848 label *label549
+  849 label *label550
+  850 op add *tmp101 :displayItem:x 7
+  851 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  852 op add *tmp104 :displayItem:y 12
+  853 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  854 op add *tmp105 :displayItem:y 6
+  855 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  856 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  857 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  858 label *label551
+  859 label *label552
+  860 label *label553
+  861 label *label554
+  862 op sub :displayItem:x :displayItem:x 11
+  863 op idiv :displayItem:amount :displayItem:amount 10
+  864 jump *label555 notEqual :displayItem:amount 0
+  865 jump *label673 always
+  866 label *label555
+  867 label *label556
+  868 label *label557
+  869 label *label558
+  870 op mod *tmp19 :displayItem:amount 10
+  871 # "Function: def drawDigit(in x, in y, in digit)"
+  872 multijump *label559 *tmp19 0 (m:*label86)
+  873 multilabel *label559 (m:*label86)
+  874 jump *label569 always
+  875 multilabel *label560 (m:*label86)
+  876 jump *label571 always
+  877 multilabel *label561 (m:*label86)
+  878 jump *label573 always
+  879 multilabel *label562 (m:*label86)
+  880 jump *label575 always
+  881 multilabel *label563 (m:*label86)
+  882 jump *label577 always
+  883 multilabel *label564 (m:*label86)
+  884 jump *label579 always
+  885 multilabel *label565 (m:*label86)
+  886 jump *label581 always
+  887 multilabel *label566 (m:*label86)
+  888 jump *label583 always
+  889 multilabel *label567 (m:*label86)
+  890 jump *label585 always
+  891 multilabel *label568 (m:*label86)
+  892 jump *label587 always
+  893 label *label569
+  894 op sub *tmp24 :displayItem:x 1
+  895 op sub *tmp26 :displayItem:y 1
+  896 draw lineRect *tmp24 *tmp26 9 14
+  897 jump *label590 always
+  898 label *label570
+  899 label *label571
+  900 op add *tmp28 :displayItem:x 6
+  901 op add *tmp31 :displayItem:y 12
+  902 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  903 jump *label590 always
+  904 label *label572
+  905 label *label573
+  906 op add *tmp32 :displayItem:x 7
+  907 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+  908 op add *tmp33 :displayItem:y 6
+  909 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+  910 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+  911 op add *tmp40 :displayItem:y 12
+  912 draw line *tmp32 *tmp33 *tmp32 *tmp40
+  913 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  914 jump *label590 always
+  915 label *label574
+  916 label *label575
+  917 op add *tmp44 :displayItem:x 7
+  918 op add *tmp46 :displayItem:y 12
+  919 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+  920 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+  921 op add *tmp48 :displayItem:y 6
+  922 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+  923 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  924 jump *label590 always
+  925 label *label576
+  926 label *label577
+  927 op add *tmp54 :displayItem:x 7
+  928 op add *tmp56 :displayItem:y 12
+  929 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+  930 op add *tmp57 :displayItem:y 6
+  931 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+  932 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  933 jump *label590 always
+  934 label *label578
+  935 label *label579
+  936 op add *tmp62 :displayItem:x 7
+  937 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+  938 op add *tmp65 :displayItem:y 6
+  939 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  940 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+  941 op add *tmp70 :displayItem:y 12
+  942 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+  943 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  944 jump *label590 always
+  945 label *label580
+  946 label *label581
+  947 op add *tmp74 :displayItem:y 12
+  948 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+  949 op add *tmp75 :displayItem:x 7
+  950 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+  951 op add *tmp78 :displayItem:y 6
+  952 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+  953 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+  954 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  955 jump *label590 always
+  956 label *label582
+  957 label *label583
+  958 op add *tmp86 :displayItem:x 6
+  959 op add *tmp89 :displayItem:y 12
+  960 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+  961 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  962 jump *label590 always
+  963 label *label584
+  964 label *label585
+  965 op sub *tmp95 :displayItem:x 1
+  966 op sub *tmp97 :displayItem:y 1
+  967 draw lineRect *tmp95 *tmp97 9 14
+  968 op add *tmp98 :displayItem:y 6
+  969 op add *tmp99 :displayItem:x 7
+  970 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  971 jump *label590 always
+  972 label *label586
+  973 label *label587
+  974 op add *tmp101 :displayItem:x 7
+  975 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+  976 op add *tmp104 :displayItem:y 12
+  977 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+  978 op add *tmp105 :displayItem:y 6
+  979 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+  980 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+  981 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  982 label *label588
+  983 label *label589
+  984 label *label590
+  985 label *label591
+  986 op sub :displayItem:x :displayItem:x 11
+  987 op idiv :displayItem:amount :displayItem:amount 10
+  988 jump *label592 notEqual :displayItem:amount 0
+  989 jump *label673 always
+  990 label *label592
+  991 label *label593
+  992 label *label594
+  993 label *label595
+  994 op mod *tmp19 :displayItem:amount 10
+  995 # "Function: def drawDigit(in x, in y, in digit)"
+  996 multijump *label596 *tmp19 0 (m:*label86)
+  997 multilabel *label596 (m:*label86)
+  998 jump *label606 always
+  999 multilabel *label597 (m:*label86)
+ 1000 jump *label608 always
+ 1001 multilabel *label598 (m:*label86)
+ 1002 jump *label610 always
+ 1003 multilabel *label599 (m:*label86)
+ 1004 jump *label612 always
+ 1005 multilabel *label600 (m:*label86)
+ 1006 jump *label614 always
+ 1007 multilabel *label601 (m:*label86)
+ 1008 jump *label616 always
+ 1009 multilabel *label602 (m:*label86)
+ 1010 jump *label618 always
+ 1011 multilabel *label603 (m:*label86)
+ 1012 jump *label620 always
+ 1013 multilabel *label604 (m:*label86)
+ 1014 jump *label622 always
+ 1015 multilabel *label605 (m:*label86)
+ 1016 jump *label624 always
+ 1017 label *label606
+ 1018 op sub *tmp24 :displayItem:x 1
+ 1019 op sub *tmp26 :displayItem:y 1
+ 1020 draw lineRect *tmp24 *tmp26 9 14
+ 1021 jump *label627 always
+ 1022 label *label607
+ 1023 label *label608
+ 1024 op add *tmp28 :displayItem:x 6
+ 1025 op add *tmp31 :displayItem:y 12
+ 1026 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1027 jump *label627 always
+ 1028 label *label609
+ 1029 label *label610
+ 1030 op add *tmp32 :displayItem:x 7
+ 1031 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+ 1032 op add *tmp33 :displayItem:y 6
+ 1033 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+ 1034 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+ 1035 op add *tmp40 :displayItem:y 12
+ 1036 draw line *tmp32 *tmp33 *tmp32 *tmp40
+ 1037 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1038 jump *label627 always
+ 1039 label *label611
+ 1040 label *label612
+ 1041 op add *tmp44 :displayItem:x 7
+ 1042 op add *tmp46 :displayItem:y 12
+ 1043 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+ 1044 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+ 1045 op add *tmp48 :displayItem:y 6
+ 1046 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+ 1047 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1048 jump *label627 always
+ 1049 label *label613
+ 1050 label *label614
+ 1051 op add *tmp54 :displayItem:x 7
+ 1052 op add *tmp56 :displayItem:y 12
+ 1053 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+ 1054 op add *tmp57 :displayItem:y 6
+ 1055 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+ 1056 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1057 jump *label627 always
+ 1058 label *label615
+ 1059 label *label616
+ 1060 op add *tmp62 :displayItem:x 7
+ 1061 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+ 1062 op add *tmp65 :displayItem:y 6
+ 1063 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+ 1064 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+ 1065 op add *tmp70 :displayItem:y 12
+ 1066 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+ 1067 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1068 jump *label627 always
+ 1069 label *label617
+ 1070 label *label618
+ 1071 op add *tmp74 :displayItem:y 12
+ 1072 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+ 1073 op add *tmp75 :displayItem:x 7
+ 1074 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+ 1075 op add *tmp78 :displayItem:y 6
+ 1076 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+ 1077 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+ 1078 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1079 jump *label627 always
+ 1080 label *label619
+ 1081 label *label620
+ 1082 op add *tmp86 :displayItem:x 6
+ 1083 op add *tmp89 :displayItem:y 12
+ 1084 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1085 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1086 jump *label627 always
+ 1087 label *label621
+ 1088 label *label622
+ 1089 op sub *tmp95 :displayItem:x 1
+ 1090 op sub *tmp97 :displayItem:y 1
+ 1091 draw lineRect *tmp95 *tmp97 9 14
+ 1092 op add *tmp98 :displayItem:y 6
+ 1093 op add *tmp99 :displayItem:x 7
+ 1094 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1095 jump *label627 always
+ 1096 label *label623
+ 1097 label *label624
+ 1098 op add *tmp101 :displayItem:x 7
+ 1099 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1100 op add *tmp104 :displayItem:y 12
+ 1101 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1102 op add *tmp105 :displayItem:y 6
+ 1103 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1104 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1105 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1106 label *label625
+ 1107 label *label626
+ 1108 label *label627
+ 1109 label *label628
+ 1110 op sub :displayItem:x :displayItem:x 11
+ 1111 op idiv :displayItem:amount :displayItem:amount 10
+ 1112 jump *label629 notEqual :displayItem:amount 0
+ 1113 jump *label673 always
+ 1114 label *label629
+ 1115 label *label630
+ 1116 label *label631
+ 1117 label *label632
+ 1118 op mod *tmp19 :displayItem:amount 10
+ 1119 # "Function: def drawDigit(in x, in y, in digit)"
+ 1120 multijump *label633 *tmp19 0 (m:*label86)
+ 1121 multilabel *label633 (m:*label86)
+ 1122 jump *label643 always
+ 1123 multilabel *label634 (m:*label86)
+ 1124 jump *label645 always
+ 1125 multilabel *label635 (m:*label86)
+ 1126 jump *label647 always
+ 1127 multilabel *label636 (m:*label86)
+ 1128 jump *label649 always
+ 1129 multilabel *label637 (m:*label86)
+ 1130 jump *label651 always
+ 1131 multilabel *label638 (m:*label86)
+ 1132 jump *label653 always
+ 1133 multilabel *label639 (m:*label86)
+ 1134 jump *label655 always
+ 1135 multilabel *label640 (m:*label86)
+ 1136 jump *label657 always
+ 1137 multilabel *label641 (m:*label86)
+ 1138 jump *label659 always
+ 1139 multilabel *label642 (m:*label86)
+ 1140 jump *label661 always
+ 1141 label *label643
+ 1142 op sub *tmp24 :displayItem:x 1
+ 1143 op sub *tmp26 :displayItem:y 1
+ 1144 draw lineRect *tmp24 *tmp26 9 14
+ 1145 jump *label664 always
+ 1146 label *label644
+ 1147 label *label645
+ 1148 op add *tmp28 :displayItem:x 6
+ 1149 op add *tmp31 :displayItem:y 12
+ 1150 draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1151 jump *label664 always
+ 1152 label *label646
+ 1153 label *label647
+ 1154 op add *tmp32 :displayItem:x 7
+ 1155 draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
+ 1156 op add *tmp33 :displayItem:y 6
+ 1157 draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
+ 1158 draw line :displayItem:x *tmp33 *tmp32 *tmp33
+ 1159 op add *tmp40 :displayItem:y 12
+ 1160 draw line *tmp32 *tmp33 *tmp32 *tmp40
+ 1161 draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1162 jump *label664 always
+ 1163 label *label648
+ 1164 label *label649
+ 1165 op add *tmp44 :displayItem:x 7
+ 1166 op add *tmp46 :displayItem:y 12
+ 1167 draw line *tmp44 :displayItem:y *tmp44 *tmp46
+ 1168 draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
+ 1169 op add *tmp48 :displayItem:y 6
+ 1170 draw line :displayItem:x *tmp48 *tmp44 *tmp48
+ 1171 draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1172 jump *label664 always
+ 1173 label *label650
+ 1174 label *label651
+ 1175 op add *tmp54 :displayItem:x 7
+ 1176 op add *tmp56 :displayItem:y 12
+ 1177 draw line *tmp54 :displayItem:y *tmp54 *tmp56
+ 1178 op add *tmp57 :displayItem:y 6
+ 1179 draw line :displayItem:x *tmp57 *tmp54 *tmp57
+ 1180 draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1181 jump *label664 always
+ 1182 label *label652
+ 1183 label *label653
+ 1184 op add *tmp62 :displayItem:x 7
+ 1185 draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
+ 1186 op add *tmp65 :displayItem:y 6
+ 1187 draw line *tmp62 :displayItem:y *tmp62 *tmp65
+ 1188 draw line :displayItem:x *tmp65 *tmp62 *tmp65
+ 1189 op add *tmp70 :displayItem:y 12
+ 1190 draw line :displayItem:x *tmp65 :displayItem:x *tmp70
+ 1191 draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1192 jump *label664 always
+ 1193 label *label654
+ 1194 label *label655
+ 1195 op add *tmp74 :displayItem:y 12
+ 1196 draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
+ 1197 op add *tmp75 :displayItem:x 7
+ 1198 draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
+ 1199 op add *tmp78 :displayItem:y 6
+ 1200 draw line *tmp75 :displayItem:y *tmp75 *tmp78
+ 1201 draw line :displayItem:x *tmp78 *tmp75 *tmp78
+ 1202 draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1203 jump *label664 always
+ 1204 label *label656
+ 1205 label *label657
+ 1206 op add *tmp86 :displayItem:x 6
+ 1207 op add *tmp89 :displayItem:y 12
+ 1208 draw line *tmp86 :displayItem:y *tmp86 *tmp89
+ 1209 draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1210 jump *label664 always
+ 1211 label *label658
+ 1212 label *label659
+ 1213 op sub *tmp95 :displayItem:x 1
+ 1214 op sub *tmp97 :displayItem:y 1
+ 1215 draw lineRect *tmp95 *tmp97 9 14
+ 1216 op add *tmp98 :displayItem:y 6
+ 1217 op add *tmp99 :displayItem:x 7
+ 1218 draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1219 jump *label664 always
+ 1220 label *label660
+ 1221 label *label661
+ 1222 op add *tmp101 :displayItem:x 7
+ 1223 draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
+ 1224 op add *tmp104 :displayItem:y 12
+ 1225 draw line *tmp101 :displayItem:y *tmp101 *tmp104
+ 1226 op add *tmp105 :displayItem:y 6
+ 1227 draw line :displayItem:x *tmp105 *tmp101 *tmp105
+ 1228 draw line :displayItem:x *tmp105 :displayItem:x *tmp104
+ 1229 draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1230 label *label662
+ 1231 label *label663
+ 1232 label *label664
+ 1233 label *label665
+ 1234 op sub :displayItem:x :displayItem:x 11
+ 1235 op idiv :displayItem:amount :displayItem:amount 10
+ 1236 jump *label666 notEqual :displayItem:amount 0
+ 1237 jump *label673 always
+ 1238 label *label666
+ 1239 label *label667
+ 1240 label *label668
+ 1241 label *label669
+ 1242 # "Function: def drawDigit12(in x, in y, in digit)"
+ 1243 jump *label670 notEqual :displayItem:amount 1
+ 1244 op add *tmp119 :displayItem:x 6
+ 1245 op add *tmp122 :displayItem:y 12
+ 1246 draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1247 jump *label671 always
+ 1248 label *label670
+ 1249 op add *tmp123 :displayItem:x 7
+ 1250 draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
+ 1251 op add *tmp124 :displayItem:y 6
+ 1252 draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
+ 1253 draw line :displayItem:x *tmp124 *tmp123 *tmp124
+ 1254 op add *tmp131 :displayItem:y 12
+ 1255 draw line *tmp123 *tmp124 *tmp123 *tmp131
+ 1256 draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1257 label *label671
+ 1258 label *label672
+ 1259 label *label673
  1260 label *label44
  1261 op add :index :index 1
  1262 op sub :y :y 20
 
  1281 label *label26
  1282 drawflush display1
  1283 end
-    * label *label2
-    * # "Function: void displayItem(in x, in y)"
-    * op max :displayItem:amount AMOUNT 0
-    * draw color 0 255 0 255
-    * label *label97
-    * label *label98
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * multijump *label99 *tmp19 0 (m:*label86)
-    * multilabel *label99 (m:*label86)
-    * jump *label109 always
-    * multilabel *label100 (m:*label86)
-    * jump *label111 always
-    * multilabel *label101 (m:*label86)
-    * jump *label113 always
-    * multilabel *label102 (m:*label86)
-    * jump *label115 always
-    * multilabel *label103 (m:*label86)
-    * jump *label117 always
-    * multilabel *label104 (m:*label86)
-    * jump *label119 always
-    * multilabel *label105 (m:*label86)
-    * jump *label121 always
-    * multilabel *label106 (m:*label86)
-    * jump *label123 always
-    * multilabel *label107 (m:*label86)
-    * jump *label125 always
-    * multilabel *label108 (m:*label86)
-    * jump *label127 always
-    * label *label109
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label130 always
-    * label *label110
-    * label *label111
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label130 always
-    * label *label112
-    * label *label113
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label130 always
-    * label *label114
-    * label *label115
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label130 always
-    * label *label116
-    * label *label117
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label130 always
-    * label *label118
-    * label *label119
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label130 always
-    * label *label120
-    * label *label121
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label130 always
-    * label *label122
-    * label *label123
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label130 always
-    * label *label124
-    * label *label125
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label130 always
-    * label *label126
-    * label *label127
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label128
-    * label *label129
-    * label *label130
-    * label *label131
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label132 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label132
-    * label *label133
-    * label *label134
-    * label *label136
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * multijump *label137 *tmp19 0 (m:*label86)
-    * multilabel *label137 (m:*label86)
-    * jump *label147 always
-    * multilabel *label138 (m:*label86)
-    * jump *label149 always
-    * multilabel *label139 (m:*label86)
-    * jump *label151 always
-    * multilabel *label140 (m:*label86)
-    * jump *label153 always
-    * multilabel *label141 (m:*label86)
-    * jump *label155 always
-    * multilabel *label142 (m:*label86)
-    * jump *label157 always
-    * multilabel *label143 (m:*label86)
-    * jump *label159 always
-    * multilabel *label144 (m:*label86)
-    * jump *label161 always
-    * multilabel *label145 (m:*label86)
-    * jump *label163 always
-    * multilabel *label146 (m:*label86)
-    * jump *label165 always
-    * label *label147
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label168 always
-    * label *label148
-    * label *label149
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label168 always
-    * label *label150
-    * label *label151
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label168 always
-    * label *label152
-    * label *label153
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label168 always
-    * label *label154
-    * label *label155
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label168 always
-    * label *label156
-    * label *label157
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label168 always
-    * label *label158
-    * label *label159
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label168 always
-    * label *label160
-    * label *label161
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label168 always
-    * label *label162
-    * label *label163
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label168 always
-    * label *label164
-    * label *label165
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label166
-    * label *label167
-    * label *label168
-    * label *label169
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label170 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label170
-    * label *label171
-    * label *label172
-    * label *label174
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * multijump *label175 *tmp19 0 (m:*label86)
-    * multilabel *label175 (m:*label86)
-    * jump *label185 always
-    * multilabel *label176 (m:*label86)
-    * jump *label187 always
-    * multilabel *label177 (m:*label86)
-    * jump *label189 always
-    * multilabel *label178 (m:*label86)
-    * jump *label191 always
-    * multilabel *label179 (m:*label86)
-    * jump *label193 always
-    * multilabel *label180 (m:*label86)
-    * jump *label195 always
-    * multilabel *label181 (m:*label86)
-    * jump *label197 always
-    * multilabel *label182 (m:*label86)
-    * jump *label199 always
-    * multilabel *label183 (m:*label86)
-    * jump *label201 always
-    * multilabel *label184 (m:*label86)
-    * jump *label203 always
-    * label *label185
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label206 always
-    * label *label186
-    * label *label187
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label206 always
-    * label *label188
-    * label *label189
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label206 always
-    * label *label190
-    * label *label191
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label206 always
-    * label *label192
-    * label *label193
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label206 always
-    * label *label194
-    * label *label195
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label206 always
-    * label *label196
-    * label *label197
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label206 always
-    * label *label198
-    * label *label199
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label206 always
-    * label *label200
-    * label *label201
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label206 always
-    * label *label202
-    * label *label203
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label204
-    * label *label205
-    * label *label206
-    * label *label207
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label208 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label208
-    * label *label209
-    * label *label210
-    * label *label212
-    * op mod *tmp19 :displayItem:amount 10
-    * # "Function: def drawDigit(in x, in y, in digit)"
-    * multijump *label213 *tmp19 0 (m:*label86)
-    * multilabel *label213 (m:*label86)
-    * jump *label223 always
-    * multilabel *label214 (m:*label86)
-    * jump *label225 always
-    * multilabel *label215 (m:*label86)
-    * jump *label227 always
-    * multilabel *label216 (m:*label86)
-    * jump *label229 always
-    * multilabel *label217 (m:*label86)
-    * jump *label231 always
-    * multilabel *label218 (m:*label86)
-    * jump *label233 always
-    * multilabel *label219 (m:*label86)
-    * jump *label235 always
-    * multilabel *label220 (m:*label86)
-    * jump *label237 always
-    * multilabel *label221 (m:*label86)
-    * jump *label239 always
-    * multilabel *label222 (m:*label86)
-    * jump *label241 always
-    * label *label223
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
-    * jump *label244 always
-    * label *label224
-    * label *label225
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
-    * jump *label244 always
-    * label *label226
-    * label *label227
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
-    * jump *label244 always
-    * label *label228
-    * label *label229
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
-    * jump *label244 always
-    * label *label230
-    * label *label231
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
-    * jump *label244 always
-    * label *label232
-    * label *label233
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
-    * jump *label244 always
-    * label *label234
-    * label *label235
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
-    * jump *label244 always
-    * label *label236
-    * label *label237
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
-    * jump *label244 always
-    * label *label238
-    * label *label239
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
-    * jump *label244 always
-    * label *label240
-    * label *label241
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
-    * label *label242
-    * label *label243
-    * label *label244
-    * label *label245
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label246 notEqual :displayItem:amount 0
-    * jump *label53 always
-    * label *label246
-    * label *label247
-    * label *label248
-    * label *label56
-    * # "Function: def drawDigit12(in x, in y, in digit)"
-    * jump *label82 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
-    * jump *label83 always
-    * label *label82
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
-    * label *label83
-    * label *label81
-    * label *label53
-    * return :displayItem*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   243 multilabel *label375 (m:*label86)
   244 jump *label394 always
   245 label *label376
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  246 op sub *tmp24 71 1
+  247 op sub *tmp26 :y 1
+  248 draw lineRect 70 *tmp26 9 14
   249 jump *label397 always
   250 label *label377
   251 label *label378
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  252 op add *tmp28 71 6
+  253 op add *tmp31 :y 12
+  254 draw line 77 :y 77 *tmp31
   255 jump *label397 always
   256 label *label379
   257 label *label380
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  258 op add *tmp32 71 7
+  259 draw line 71 :y 78 :y
+  260 op add *tmp33 :y 6
+  261 draw line 71 :y 71 *tmp33
+  262 draw line 71 *tmp33 78 *tmp33
+  263 op add *tmp40 :y 12
+  264 draw line 78 *tmp33 78 *tmp40
+  265 draw line 71 *tmp40 78 *tmp40
   266 jump *label397 always
   267 label *label381
   268 label *label382
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  269 op add *tmp44 71 7
+  270 op add *tmp46 :y 12
+  271 draw line 78 :y 78 *tmp46
+  272 draw line 71 :y 78 :y
+  273 op add *tmp48 :y 6
+  274 draw line 71 *tmp48 78 *tmp48
+  275 draw line 71 *tmp46 78 *tmp46
   276 jump *label397 always
   277 label *label383
   278 label *label384
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  279 op add *tmp54 71 7
+  280 op add *tmp56 :y 12
+  281 draw line 78 :y 78 *tmp56
+  282 op add *tmp57 :y 6
+  283 draw line 71 *tmp57 78 *tmp57
+  284 draw line 71 *tmp57 71 *tmp56
   285 jump *label397 always
   286 label *label385
   287 label *label386
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  288 op add *tmp62 71 7
+  289 draw line 71 :y 78 :y
+  290 op add *tmp65 :y 6
+  291 draw line 78 :y 78 *tmp65
+  292 draw line 71 *tmp65 78 *tmp65
+  293 op add *tmp70 :y 12
+  294 draw line 71 *tmp65 71 *tmp70
+  295 draw line 71 *tmp70 78 *tmp70
   296 jump *label397 always
   297 label *label387
   298 label *label388
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  299 op add *tmp74 :y 12
+  300 draw line 71 :y 71 *tmp74
+  301 op add *tmp75 71 7
+  302 draw line 71 :y 78 :y
+  303 op add *tmp78 :y 6
+  304 draw line 78 :y 78 *tmp78
+  305 draw line 71 *tmp78 78 *tmp78
+  306 draw line 71 *tmp74 78 *tmp74
   307 jump *label397 always
   308 label *label389
   309 label *label390
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  310 op add *tmp86 71 6
+  311 op add *tmp89 :y 12
+  312 draw line 77 :y 77 *tmp89
+  313 draw line 71 *tmp89 77 *tmp89
   314 jump *label397 always
   315 label *label391
   316 label *label392
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  317 op sub *tmp95 71 1
+  318 op sub *tmp97 :y 1
+  319 draw lineRect 70 *tmp97 9 14
+  320 op add *tmp98 :y 6
+  321 op add *tmp99 71 7
+  322 draw line 71 *tmp98 78 *tmp98
   323 jump *label397 always
   324 label *label393
   325 label *label394
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  326 op add *tmp101 71 7
+  327 draw line 71 :y 78 :y
+  328 op add *tmp104 :y 12
+  329 draw line 78 :y 78 *tmp104
+  330 op add *tmp105 :y 6
+  331 draw line 71 *tmp105 78 *tmp105
+  332 draw line 71 *tmp105 71 *tmp104
+  333 draw line 71 *tmp104 78 *tmp104
   334 label *label395
   335 label *label396
   336 label *label397
   337 label *label398
-    * op sub :displayItem:x :displayItem:x 11
+  338 op sub :displayItem:x 71 11
   339 op idiv :displayItem:amount :displayItem:amount 10
   340 jump *label399 notEqual :displayItem:amount 0
   341 jump *label517 always
 
   367 multilabel *label412 (m:*label86)
   368 jump *label431 always
   369 label *label413
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  370 op sub *tmp24 60 1
+  371 op sub *tmp26 :y 1
+  372 draw lineRect 59 *tmp26 9 14
   373 jump *label434 always
   374 label *label414
   375 label *label415
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  376 op add *tmp28 60 6
+  377 op add *tmp31 :y 12
+  378 draw line 66 :y 66 *tmp31
   379 jump *label434 always
   380 label *label416
   381 label *label417
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  382 op add *tmp32 60 7
+  383 draw line 60 :y 67 :y
+  384 op add *tmp33 :y 6
+  385 draw line 60 :y 60 *tmp33
+  386 draw line 60 *tmp33 67 *tmp33
+  387 op add *tmp40 :y 12
+  388 draw line 67 *tmp33 67 *tmp40
+  389 draw line 60 *tmp40 67 *tmp40
   390 jump *label434 always
   391 label *label418
   392 label *label419
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  393 op add *tmp44 60 7
+  394 op add *tmp46 :y 12
+  395 draw line 67 :y 67 *tmp46
+  396 draw line 60 :y 67 :y
+  397 op add *tmp48 :y 6
+  398 draw line 60 *tmp48 67 *tmp48
+  399 draw line 60 *tmp46 67 *tmp46
   400 jump *label434 always
   401 label *label420
   402 label *label421
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  403 op add *tmp54 60 7
+  404 op add *tmp56 :y 12
+  405 draw line 67 :y 67 *tmp56
+  406 op add *tmp57 :y 6
+  407 draw line 60 *tmp57 67 *tmp57
+  408 draw line 60 *tmp57 60 *tmp56
   409 jump *label434 always
   410 label *label422
   411 label *label423
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  412 op add *tmp62 60 7
+  413 draw line 60 :y 67 :y
+  414 op add *tmp65 :y 6
+  415 draw line 67 :y 67 *tmp65
+  416 draw line 60 *tmp65 67 *tmp65
+  417 op add *tmp70 :y 12
+  418 draw line 60 *tmp65 60 *tmp70
+  419 draw line 60 *tmp70 67 *tmp70
   420 jump *label434 always
   421 label *label424
   422 label *label425
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  423 op add *tmp74 :y 12
+  424 draw line 60 :y 60 *tmp74
+  425 op add *tmp75 60 7
+  426 draw line 60 :y 67 :y
+  427 op add *tmp78 :y 6
+  428 draw line 67 :y 67 *tmp78
+  429 draw line 60 *tmp78 67 *tmp78
+  430 draw line 60 *tmp74 67 *tmp74
   431 jump *label434 always
   432 label *label426
   433 label *label427
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  434 op add *tmp86 60 6
+  435 op add *tmp89 :y 12
+  436 draw line 66 :y 66 *tmp89
+  437 draw line 60 *tmp89 66 *tmp89
   438 jump *label434 always
   439 label *label428
   440 label *label429
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  441 op sub *tmp95 60 1
+  442 op sub *tmp97 :y 1
+  443 draw lineRect 59 *tmp97 9 14
+  444 op add *tmp98 :y 6
+  445 op add *tmp99 60 7
+  446 draw line 60 *tmp98 67 *tmp98
   447 jump *label434 always
   448 label *label430
   449 label *label431
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  450 op add *tmp101 60 7
+  451 draw line 60 :y 67 :y
+  452 op add *tmp104 :y 12
+  453 draw line 67 :y 67 *tmp104
+  454 op add *tmp105 :y 6
+  455 draw line 60 *tmp105 67 *tmp105
+  456 draw line 60 *tmp105 60 *tmp104
+  457 draw line 60 *tmp104 67 *tmp104
   458 label *label432
   459 label *label433
   460 label *label434
   461 label *label435
-    * op sub :displayItem:x :displayItem:x 11
+  462 op sub :displayItem:x 60 11
   463 op idiv :displayItem:amount :displayItem:amount 10
   464 jump *label436 notEqual :displayItem:amount 0
   465 jump *label517 always
 
   491 multilabel *label449 (m:*label86)
   492 jump *label468 always
   493 label *label450
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  494 op sub *tmp24 49 1
+  495 op sub *tmp26 :y 1
+  496 draw lineRect 48 *tmp26 9 14
   497 jump *label471 always
   498 label *label451
   499 label *label452
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  500 op add *tmp28 49 6
+  501 op add *tmp31 :y 12
+  502 draw line 55 :y 55 *tmp31
   503 jump *label471 always
   504 label *label453
   505 label *label454
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  506 op add *tmp32 49 7
+  507 draw line 49 :y 56 :y
+  508 op add *tmp33 :y 6
+  509 draw line 49 :y 49 *tmp33
+  510 draw line 49 *tmp33 56 *tmp33
+  511 op add *tmp40 :y 12
+  512 draw line 56 *tmp33 56 *tmp40
+  513 draw line 49 *tmp40 56 *tmp40
   514 jump *label471 always
   515 label *label455
   516 label *label456
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  517 op add *tmp44 49 7
+  518 op add *tmp46 :y 12
+  519 draw line 56 :y 56 *tmp46
+  520 draw line 49 :y 56 :y
+  521 op add *tmp48 :y 6
+  522 draw line 49 *tmp48 56 *tmp48
+  523 draw line 49 *tmp46 56 *tmp46
   524 jump *label471 always
   525 label *label457
   526 label *label458
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  527 op add *tmp54 49 7
+  528 op add *tmp56 :y 12
+  529 draw line 56 :y 56 *tmp56
+  530 op add *tmp57 :y 6
+  531 draw line 49 *tmp57 56 *tmp57
+  532 draw line 49 *tmp57 49 *tmp56
   533 jump *label471 always
   534 label *label459
   535 label *label460
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  536 op add *tmp62 49 7
+  537 draw line 49 :y 56 :y
+  538 op add *tmp65 :y 6
+  539 draw line 56 :y 56 *tmp65
+  540 draw line 49 *tmp65 56 *tmp65
+  541 op add *tmp70 :y 12
+  542 draw line 49 *tmp65 49 *tmp70
+  543 draw line 49 *tmp70 56 *tmp70
   544 jump *label471 always
   545 label *label461
   546 label *label462
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  547 op add *tmp74 :y 12
+  548 draw line 49 :y 49 *tmp74
+  549 op add *tmp75 49 7
+  550 draw line 49 :y 56 :y
+  551 op add *tmp78 :y 6
+  552 draw line 56 :y 56 *tmp78
+  553 draw line 49 *tmp78 56 *tmp78
+  554 draw line 49 *tmp74 56 *tmp74
   555 jump *label471 always
   556 label *label463
   557 label *label464
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  558 op add *tmp86 49 6
+  559 op add *tmp89 :y 12
+  560 draw line 55 :y 55 *tmp89
+  561 draw line 49 *tmp89 55 *tmp89
   562 jump *label471 always
   563 label *label465
   564 label *label466
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  565 op sub *tmp95 49 1
+  566 op sub *tmp97 :y 1
+  567 draw lineRect 48 *tmp97 9 14
+  568 op add *tmp98 :y 6
+  569 op add *tmp99 49 7
+  570 draw line 49 *tmp98 56 *tmp98
   571 jump *label471 always
   572 label *label467
   573 label *label468
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  574 op add *tmp101 49 7
+  575 draw line 49 :y 56 :y
+  576 op add *tmp104 :y 12
+  577 draw line 56 :y 56 *tmp104
+  578 op add *tmp105 :y 6
+  579 draw line 49 *tmp105 56 *tmp105
+  580 draw line 49 *tmp105 49 *tmp104
+  581 draw line 49 *tmp104 56 *tmp104
   582 label *label469
   583 label *label470
   584 label *label471
   585 label *label472
-    * op sub :displayItem:x :displayItem:x 11
+  586 op sub :displayItem:x 49 11
   587 op idiv :displayItem:amount :displayItem:amount 10
   588 jump *label473 notEqual :displayItem:amount 0
   589 jump *label517 always
 
   615 multilabel *label486 (m:*label86)
   616 jump *label505 always
   617 label *label487
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  618 op sub *tmp24 38 1
+  619 op sub *tmp26 :y 1
+  620 draw lineRect 37 *tmp26 9 14
   621 jump *label508 always
   622 label *label488
   623 label *label489
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  624 op add *tmp28 38 6
+  625 op add *tmp31 :y 12
+  626 draw line 44 :y 44 *tmp31
   627 jump *label508 always
   628 label *label490
   629 label *label491
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  630 op add *tmp32 38 7
+  631 draw line 38 :y 45 :y
+  632 op add *tmp33 :y 6
+  633 draw line 38 :y 38 *tmp33
+  634 draw line 38 *tmp33 45 *tmp33
+  635 op add *tmp40 :y 12
+  636 draw line 45 *tmp33 45 *tmp40
+  637 draw line 38 *tmp40 45 *tmp40
   638 jump *label508 always
   639 label *label492
   640 label *label493
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  641 op add *tmp44 38 7
+  642 op add *tmp46 :y 12
+  643 draw line 45 :y 45 *tmp46
+  644 draw line 38 :y 45 :y
+  645 op add *tmp48 :y 6
+  646 draw line 38 *tmp48 45 *tmp48
+  647 draw line 38 *tmp46 45 *tmp46
   648 jump *label508 always
   649 label *label494
   650 label *label495
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  651 op add *tmp54 38 7
+  652 op add *tmp56 :y 12
+  653 draw line 45 :y 45 *tmp56
+  654 op add *tmp57 :y 6
+  655 draw line 38 *tmp57 45 *tmp57
+  656 draw line 38 *tmp57 38 *tmp56
   657 jump *label508 always
   658 label *label496
   659 label *label497
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  660 op add *tmp62 38 7
+  661 draw line 38 :y 45 :y
+  662 op add *tmp65 :y 6
+  663 draw line 45 :y 45 *tmp65
+  664 draw line 38 *tmp65 45 *tmp65
+  665 op add *tmp70 :y 12
+  666 draw line 38 *tmp65 38 *tmp70
+  667 draw line 38 *tmp70 45 *tmp70
   668 jump *label508 always
   669 label *label498
   670 label *label499
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  671 op add *tmp74 :y 12
+  672 draw line 38 :y 38 *tmp74
+  673 op add *tmp75 38 7
+  674 draw line 38 :y 45 :y
+  675 op add *tmp78 :y 6
+  676 draw line 45 :y 45 *tmp78
+  677 draw line 38 *tmp78 45 *tmp78
+  678 draw line 38 *tmp74 45 *tmp74
   679 jump *label508 always
   680 label *label500
   681 label *label501
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  682 op add *tmp86 38 6
+  683 op add *tmp89 :y 12
+  684 draw line 44 :y 44 *tmp89
+  685 draw line 38 *tmp89 44 *tmp89
   686 jump *label508 always
   687 label *label502
   688 label *label503
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  689 op sub *tmp95 38 1
+  690 op sub *tmp97 :y 1
+  691 draw lineRect 37 *tmp97 9 14
+  692 op add *tmp98 :y 6
+  693 op add *tmp99 38 7
+  694 draw line 38 *tmp98 45 *tmp98
   695 jump *label508 always
   696 label *label504
   697 label *label505
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  698 op add *tmp101 38 7
+  699 draw line 38 :y 45 :y
+  700 op add *tmp104 :y 12
+  701 draw line 45 :y 45 *tmp104
+  702 op add *tmp105 :y 6
+  703 draw line 38 *tmp105 45 *tmp105
+  704 draw line 38 *tmp105 38 *tmp104
+  705 draw line 38 *tmp104 45 *tmp104
   706 label *label506
   707 label *label507
   708 label *label508
   709 label *label509
-    * op sub :displayItem:x :displayItem:x 11
+  710 op sub :displayItem:x 38 11
   711 op idiv :displayItem:amount :displayItem:amount 10
   712 jump *label510 notEqual :displayItem:amount 0
   713 jump *label517 always
 
   717 label *label513
   718 # "Function: def drawDigit12(in x, in y, in digit)"
   719 jump *label514 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+  720 op add *tmp119 27 6
+  721 op add *tmp122 :y 12
+  722 draw line 33 :y 33 *tmp122
   723 jump *label515 always
   724 label *label514
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+  725 op add *tmp123 27 7
+  726 draw line 27 :y 34 :y
+  727 op add *tmp124 :y 6
+  728 draw line 27 :y 27 *tmp124
+  729 draw line 27 *tmp124 34 *tmp124
+  730 op add *tmp131 :y 12
+  731 draw line 34 *tmp124 34 *tmp131
+  732 draw line 27 *tmp131 34 *tmp131
   733 label *label515
   734 label *label516
   735 label *label517
 
   767 multilabel *label531 (m:*label86)
   768 jump *label550 always
   769 label *label532
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  770 op sub *tmp24 157 1
+  771 op sub *tmp26 :y 1
+  772 draw lineRect 156 *tmp26 9 14
   773 jump *label553 always
   774 label *label533
   775 label *label534
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  776 op add *tmp28 157 6
+  777 op add *tmp31 :y 12
+  778 draw line 163 :y 163 *tmp31
   779 jump *label553 always
   780 label *label535
   781 label *label536
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  782 op add *tmp32 157 7
+  783 draw line 157 :y 164 :y
+  784 op add *tmp33 :y 6
+  785 draw line 157 :y 157 *tmp33
+  786 draw line 157 *tmp33 164 *tmp33
+  787 op add *tmp40 :y 12
+  788 draw line 164 *tmp33 164 *tmp40
+  789 draw line 157 *tmp40 164 *tmp40
   790 jump *label553 always
   791 label *label537
   792 label *label538
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  793 op add *tmp44 157 7
+  794 op add *tmp46 :y 12
+  795 draw line 164 :y 164 *tmp46
+  796 draw line 157 :y 164 :y
+  797 op add *tmp48 :y 6
+  798 draw line 157 *tmp48 164 *tmp48
+  799 draw line 157 *tmp46 164 *tmp46
   800 jump *label553 always
   801 label *label539
   802 label *label540
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  803 op add *tmp54 157 7
+  804 op add *tmp56 :y 12
+  805 draw line 164 :y 164 *tmp56
+  806 op add *tmp57 :y 6
+  807 draw line 157 *tmp57 164 *tmp57
+  808 draw line 157 *tmp57 157 *tmp56
   809 jump *label553 always
   810 label *label541
   811 label *label542
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  812 op add *tmp62 157 7
+  813 draw line 157 :y 164 :y
+  814 op add *tmp65 :y 6
+  815 draw line 164 :y 164 *tmp65
+  816 draw line 157 *tmp65 164 *tmp65
+  817 op add *tmp70 :y 12
+  818 draw line 157 *tmp65 157 *tmp70
+  819 draw line 157 *tmp70 164 *tmp70
   820 jump *label553 always
   821 label *label543
   822 label *label544
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  823 op add *tmp74 :y 12
+  824 draw line 157 :y 157 *tmp74
+  825 op add *tmp75 157 7
+  826 draw line 157 :y 164 :y
+  827 op add *tmp78 :y 6
+  828 draw line 164 :y 164 *tmp78
+  829 draw line 157 *tmp78 164 *tmp78
+  830 draw line 157 *tmp74 164 *tmp74
   831 jump *label553 always
   832 label *label545
   833 label *label546
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  834 op add *tmp86 157 6
+  835 op add *tmp89 :y 12
+  836 draw line 163 :y 163 *tmp89
+  837 draw line 157 *tmp89 163 *tmp89
   838 jump *label553 always
   839 label *label547
   840 label *label548
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  841 op sub *tmp95 157 1
+  842 op sub *tmp97 :y 1
+  843 draw lineRect 156 *tmp97 9 14
+  844 op add *tmp98 :y 6
+  845 op add *tmp99 157 7
+  846 draw line 157 *tmp98 164 *tmp98
   847 jump *label553 always
   848 label *label549
   849 label *label550
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  850 op add *tmp101 157 7
+  851 draw line 157 :y 164 :y
+  852 op add *tmp104 :y 12
+  853 draw line 164 :y 164 *tmp104
+  854 op add *tmp105 :y 6
+  855 draw line 157 *tmp105 164 *tmp105
+  856 draw line 157 *tmp105 157 *tmp104
+  857 draw line 157 *tmp104 164 *tmp104
   858 label *label551
   859 label *label552
   860 label *label553
   861 label *label554
-    * op sub :displayItem:x :displayItem:x 11
+  862 op sub :displayItem:x 157 11
   863 op idiv :displayItem:amount :displayItem:amount 10
   864 jump *label555 notEqual :displayItem:amount 0
   865 jump *label673 always
 
   891 multilabel *label568 (m:*label86)
   892 jump *label587 always
   893 label *label569
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+  894 op sub *tmp24 146 1
+  895 op sub *tmp26 :y 1
+  896 draw lineRect 145 *tmp26 9 14
   897 jump *label590 always
   898 label *label570
   899 label *label571
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+  900 op add *tmp28 146 6
+  901 op add *tmp31 :y 12
+  902 draw line 152 :y 152 *tmp31
   903 jump *label590 always
   904 label *label572
   905 label *label573
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+  906 op add *tmp32 146 7
+  907 draw line 146 :y 153 :y
+  908 op add *tmp33 :y 6
+  909 draw line 146 :y 146 *tmp33
+  910 draw line 146 *tmp33 153 *tmp33
+  911 op add *tmp40 :y 12
+  912 draw line 153 *tmp33 153 *tmp40
+  913 draw line 146 *tmp40 153 *tmp40
   914 jump *label590 always
   915 label *label574
   916 label *label575
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+  917 op add *tmp44 146 7
+  918 op add *tmp46 :y 12
+  919 draw line 153 :y 153 *tmp46
+  920 draw line 146 :y 153 :y
+  921 op add *tmp48 :y 6
+  922 draw line 146 *tmp48 153 *tmp48
+  923 draw line 146 *tmp46 153 *tmp46
   924 jump *label590 always
   925 label *label576
   926 label *label577
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+  927 op add *tmp54 146 7
+  928 op add *tmp56 :y 12
+  929 draw line 153 :y 153 *tmp56
+  930 op add *tmp57 :y 6
+  931 draw line 146 *tmp57 153 *tmp57
+  932 draw line 146 *tmp57 146 *tmp56
   933 jump *label590 always
   934 label *label578
   935 label *label579
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+  936 op add *tmp62 146 7
+  937 draw line 146 :y 153 :y
+  938 op add *tmp65 :y 6
+  939 draw line 153 :y 153 *tmp65
+  940 draw line 146 *tmp65 153 *tmp65
+  941 op add *tmp70 :y 12
+  942 draw line 146 *tmp65 146 *tmp70
+  943 draw line 146 *tmp70 153 *tmp70
   944 jump *label590 always
   945 label *label580
   946 label *label581
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+  947 op add *tmp74 :y 12
+  948 draw line 146 :y 146 *tmp74
+  949 op add *tmp75 146 7
+  950 draw line 146 :y 153 :y
+  951 op add *tmp78 :y 6
+  952 draw line 153 :y 153 *tmp78
+  953 draw line 146 *tmp78 153 *tmp78
+  954 draw line 146 *tmp74 153 *tmp74
   955 jump *label590 always
   956 label *label582
   957 label *label583
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+  958 op add *tmp86 146 6
+  959 op add *tmp89 :y 12
+  960 draw line 152 :y 152 *tmp89
+  961 draw line 146 *tmp89 152 *tmp89
   962 jump *label590 always
   963 label *label584
   964 label *label585
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+  965 op sub *tmp95 146 1
+  966 op sub *tmp97 :y 1
+  967 draw lineRect 145 *tmp97 9 14
+  968 op add *tmp98 :y 6
+  969 op add *tmp99 146 7
+  970 draw line 146 *tmp98 153 *tmp98
   971 jump *label590 always
   972 label *label586
   973 label *label587
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+  974 op add *tmp101 146 7
+  975 draw line 146 :y 153 :y
+  976 op add *tmp104 :y 12
+  977 draw line 153 :y 153 *tmp104
+  978 op add *tmp105 :y 6
+  979 draw line 146 *tmp105 153 *tmp105
+  980 draw line 146 *tmp105 146 *tmp104
+  981 draw line 146 *tmp104 153 *tmp104
   982 label *label588
   983 label *label589
   984 label *label590
   985 label *label591
-    * op sub :displayItem:x :displayItem:x 11
+  986 op sub :displayItem:x 146 11
   987 op idiv :displayItem:amount :displayItem:amount 10
   988 jump *label592 notEqual :displayItem:amount 0
   989 jump *label673 always
 
  1015 multilabel *label605 (m:*label86)
  1016 jump *label624 always
  1017 label *label606
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+ 1018 op sub *tmp24 135 1
+ 1019 op sub *tmp26 :y 1
+ 1020 draw lineRect 134 *tmp26 9 14
  1021 jump *label627 always
  1022 label *label607
  1023 label *label608
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1024 op add *tmp28 135 6
+ 1025 op add *tmp31 :y 12
+ 1026 draw line 141 :y 141 *tmp31
  1027 jump *label627 always
  1028 label *label609
  1029 label *label610
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1030 op add *tmp32 135 7
+ 1031 draw line 135 :y 142 :y
+ 1032 op add *tmp33 :y 6
+ 1033 draw line 135 :y 135 *tmp33
+ 1034 draw line 135 *tmp33 142 *tmp33
+ 1035 op add *tmp40 :y 12
+ 1036 draw line 142 *tmp33 142 *tmp40
+ 1037 draw line 135 *tmp40 142 *tmp40
  1038 jump *label627 always
  1039 label *label611
  1040 label *label612
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1041 op add *tmp44 135 7
+ 1042 op add *tmp46 :y 12
+ 1043 draw line 142 :y 142 *tmp46
+ 1044 draw line 135 :y 142 :y
+ 1045 op add *tmp48 :y 6
+ 1046 draw line 135 *tmp48 142 *tmp48
+ 1047 draw line 135 *tmp46 142 *tmp46
  1048 jump *label627 always
  1049 label *label613
  1050 label *label614
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1051 op add *tmp54 135 7
+ 1052 op add *tmp56 :y 12
+ 1053 draw line 142 :y 142 *tmp56
+ 1054 op add *tmp57 :y 6
+ 1055 draw line 135 *tmp57 142 *tmp57
+ 1056 draw line 135 *tmp57 135 *tmp56
  1057 jump *label627 always
  1058 label *label615
  1059 label *label616
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1060 op add *tmp62 135 7
+ 1061 draw line 135 :y 142 :y
+ 1062 op add *tmp65 :y 6
+ 1063 draw line 142 :y 142 *tmp65
+ 1064 draw line 135 *tmp65 142 *tmp65
+ 1065 op add *tmp70 :y 12
+ 1066 draw line 135 *tmp65 135 *tmp70
+ 1067 draw line 135 *tmp70 142 *tmp70
  1068 jump *label627 always
  1069 label *label617
  1070 label *label618
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1071 op add *tmp74 :y 12
+ 1072 draw line 135 :y 135 *tmp74
+ 1073 op add *tmp75 135 7
+ 1074 draw line 135 :y 142 :y
+ 1075 op add *tmp78 :y 6
+ 1076 draw line 142 :y 142 *tmp78
+ 1077 draw line 135 *tmp78 142 *tmp78
+ 1078 draw line 135 *tmp74 142 *tmp74
  1079 jump *label627 always
  1080 label *label619
  1081 label *label620
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1082 op add *tmp86 135 6
+ 1083 op add *tmp89 :y 12
+ 1084 draw line 141 :y 141 *tmp89
+ 1085 draw line 135 *tmp89 141 *tmp89
  1086 jump *label627 always
  1087 label *label621
  1088 label *label622
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1089 op sub *tmp95 135 1
+ 1090 op sub *tmp97 :y 1
+ 1091 draw lineRect 134 *tmp97 9 14
+ 1092 op add *tmp98 :y 6
+ 1093 op add *tmp99 135 7
+ 1094 draw line 135 *tmp98 142 *tmp98
  1095 jump *label627 always
  1096 label *label623
  1097 label *label624
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1098 op add *tmp101 135 7
+ 1099 draw line 135 :y 142 :y
+ 1100 op add *tmp104 :y 12
+ 1101 draw line 142 :y 142 *tmp104
+ 1102 op add *tmp105 :y 6
+ 1103 draw line 135 *tmp105 142 *tmp105
+ 1104 draw line 135 *tmp105 135 *tmp104
+ 1105 draw line 135 *tmp104 142 *tmp104
  1106 label *label625
  1107 label *label626
  1108 label *label627
  1109 label *label628
-    * op sub :displayItem:x :displayItem:x 11
+ 1110 op sub :displayItem:x 135 11
  1111 op idiv :displayItem:amount :displayItem:amount 10
  1112 jump *label629 notEqual :displayItem:amount 0
  1113 jump *label673 always
 
  1139 multilabel *label642 (m:*label86)
  1140 jump *label661 always
  1141 label *label643
-    * op sub *tmp24 :displayItem:x 1
-    * op sub *tmp26 :displayItem:y 1
-    * draw lineRect *tmp24 *tmp26 9 14
+ 1142 op sub *tmp24 124 1
+ 1143 op sub *tmp26 :y 1
+ 1144 draw lineRect 123 *tmp26 9 14
  1145 jump *label664 always
  1146 label *label644
  1147 label *label645
-    * op add *tmp28 :displayItem:x 6
-    * op add *tmp31 :displayItem:y 12
-    * draw line *tmp28 :displayItem:y *tmp28 *tmp31
+ 1148 op add *tmp28 124 6
+ 1149 op add *tmp31 :y 12
+ 1150 draw line 130 :y 130 *tmp31
  1151 jump *label664 always
  1152 label *label646
  1153 label *label647
-    * op add *tmp32 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp32 :displayItem:y
-    * op add *tmp33 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp33
-    * draw line :displayItem:x *tmp33 *tmp32 *tmp33
-    * op add *tmp40 :displayItem:y 12
-    * draw line *tmp32 *tmp33 *tmp32 *tmp40
-    * draw line :displayItem:x *tmp40 *tmp32 *tmp40
+ 1154 op add *tmp32 124 7
+ 1155 draw line 124 :y 131 :y
+ 1156 op add *tmp33 :y 6
+ 1157 draw line 124 :y 124 *tmp33
+ 1158 draw line 124 *tmp33 131 *tmp33
+ 1159 op add *tmp40 :y 12
+ 1160 draw line 131 *tmp33 131 *tmp40
+ 1161 draw line 124 *tmp40 131 *tmp40
  1162 jump *label664 always
  1163 label *label648
  1164 label *label649
-    * op add *tmp44 :displayItem:x 7
-    * op add *tmp46 :displayItem:y 12
-    * draw line *tmp44 :displayItem:y *tmp44 *tmp46
-    * draw line :displayItem:x :displayItem:y *tmp44 :displayItem:y
-    * op add *tmp48 :displayItem:y 6
-    * draw line :displayItem:x *tmp48 *tmp44 *tmp48
-    * draw line :displayItem:x *tmp46 *tmp44 *tmp46
+ 1165 op add *tmp44 124 7
+ 1166 op add *tmp46 :y 12
+ 1167 draw line 131 :y 131 *tmp46
+ 1168 draw line 124 :y 131 :y
+ 1169 op add *tmp48 :y 6
+ 1170 draw line 124 *tmp48 131 *tmp48
+ 1171 draw line 124 *tmp46 131 *tmp46
  1172 jump *label664 always
  1173 label *label650
  1174 label *label651
-    * op add *tmp54 :displayItem:x 7
-    * op add *tmp56 :displayItem:y 12
-    * draw line *tmp54 :displayItem:y *tmp54 *tmp56
-    * op add *tmp57 :displayItem:y 6
-    * draw line :displayItem:x *tmp57 *tmp54 *tmp57
-    * draw line :displayItem:x *tmp57 :displayItem:x *tmp56
+ 1175 op add *tmp54 124 7
+ 1176 op add *tmp56 :y 12
+ 1177 draw line 131 :y 131 *tmp56
+ 1178 op add *tmp57 :y 6
+ 1179 draw line 124 *tmp57 131 *tmp57
+ 1180 draw line 124 *tmp57 124 *tmp56
  1181 jump *label664 always
  1182 label *label652
  1183 label *label653
-    * op add *tmp62 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp62 :displayItem:y
-    * op add *tmp65 :displayItem:y 6
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
-    * draw line :displayItem:x *tmp65 *tmp62 *tmp65
-    * op add *tmp70 :displayItem:y 12
-    * draw line :displayItem:x *tmp65 :displayItem:x *tmp70
-    * draw line :displayItem:x *tmp70 *tmp62 *tmp70
+ 1184 op add *tmp62 124 7
+ 1185 draw line 124 :y 131 :y
+ 1186 op add *tmp65 :y 6
+ 1187 draw line 131 :y 131 *tmp65
+ 1188 draw line 124 *tmp65 131 *tmp65
+ 1189 op add *tmp70 :y 12
+ 1190 draw line 124 *tmp65 124 *tmp70
+ 1191 draw line 124 *tmp70 131 *tmp70
  1192 jump *label664 always
  1193 label *label654
  1194 label *label655
-    * op add *tmp74 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp74
-    * op add *tmp75 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp75 :displayItem:y
-    * op add *tmp78 :displayItem:y 6
-    * draw line *tmp75 :displayItem:y *tmp75 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp75 *tmp78
-    * draw line :displayItem:x *tmp74 *tmp75 *tmp74
+ 1195 op add *tmp74 :y 12
+ 1196 draw line 124 :y 124 *tmp74
+ 1197 op add *tmp75 124 7
+ 1198 draw line 124 :y 131 :y
+ 1199 op add *tmp78 :y 6
+ 1200 draw line 131 :y 131 *tmp78
+ 1201 draw line 124 *tmp78 131 *tmp78
+ 1202 draw line 124 *tmp74 131 *tmp74
  1203 jump *label664 always
  1204 label *label656
  1205 label *label657
-    * op add *tmp86 :displayItem:x 6
-    * op add *tmp89 :displayItem:y 12
-    * draw line *tmp86 :displayItem:y *tmp86 *tmp89
-    * draw line :displayItem:x *tmp89 *tmp86 *tmp89
+ 1206 op add *tmp86 124 6
+ 1207 op add *tmp89 :y 12
+ 1208 draw line 130 :y 130 *tmp89
+ 1209 draw line 124 *tmp89 130 *tmp89
  1210 jump *label664 always
  1211 label *label658
  1212 label *label659
-    * op sub *tmp95 :displayItem:x 1
-    * op sub *tmp97 :displayItem:y 1
-    * draw lineRect *tmp95 *tmp97 9 14
-    * op add *tmp98 :displayItem:y 6
-    * op add *tmp99 :displayItem:x 7
-    * draw line :displayItem:x *tmp98 *tmp99 *tmp98
+ 1213 op sub *tmp95 124 1
+ 1214 op sub *tmp97 :y 1
+ 1215 draw lineRect 123 *tmp97 9 14
+ 1216 op add *tmp98 :y 6
+ 1217 op add *tmp99 124 7
+ 1218 draw line 124 *tmp98 131 *tmp98
  1219 jump *label664 always
  1220 label *label660
  1221 label *label661
-    * op add *tmp101 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp101 :displayItem:y
-    * op add *tmp104 :displayItem:y 12
-    * draw line *tmp101 :displayItem:y *tmp101 *tmp104
-    * op add *tmp105 :displayItem:y 6
-    * draw line :displayItem:x *tmp105 *tmp101 *tmp105
-    * draw line :displayItem:x *tmp105 :displayItem:x *tmp104
-    * draw line :displayItem:x *tmp104 *tmp101 *tmp104
+ 1222 op add *tmp101 124 7
+ 1223 draw line 124 :y 131 :y
+ 1224 op add *tmp104 :y 12
+ 1225 draw line 131 :y 131 *tmp104
+ 1226 op add *tmp105 :y 6
+ 1227 draw line 124 *tmp105 131 *tmp105
+ 1228 draw line 124 *tmp105 124 *tmp104
+ 1229 draw line 124 *tmp104 131 *tmp104
  1230 label *label662
  1231 label *label663
  1232 label *label664
  1233 label *label665
-    * op sub :displayItem:x :displayItem:x 11
+ 1234 op sub :displayItem:x 124 11
  1235 op idiv :displayItem:amount :displayItem:amount 10
  1236 jump *label666 notEqual :displayItem:amount 0
  1237 jump *label673 always
 
  1241 label *label669
  1242 # "Function: def drawDigit12(in x, in y, in digit)"
  1243 jump *label670 notEqual :displayItem:amount 1
-    * op add *tmp119 :displayItem:x 6
-    * op add *tmp122 :displayItem:y 12
-    * draw line *tmp119 :displayItem:y *tmp119 *tmp122
+ 1244 op add *tmp119 113 6
+ 1245 op add *tmp122 :y 12
+ 1246 draw line 119 :y 119 *tmp122
  1247 jump *label671 always
  1248 label *label670
-    * op add *tmp123 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp123 :displayItem:y
-    * op add *tmp124 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp124
-    * draw line :displayItem:x *tmp124 *tmp123 *tmp124
-    * op add *tmp131 :displayItem:y 12
-    * draw line *tmp123 *tmp124 *tmp123 *tmp131
-    * draw line :displayItem:x *tmp131 *tmp123 *tmp131
+ 1249 op add *tmp123 113 7
+ 1250 draw line 113 :y 120 :y
+ 1251 op add *tmp124 :y 6
+ 1252 draw line 113 :y 113 *tmp124
+ 1253 draw line 113 *tmp124 120 *tmp124
+ 1254 op add *tmp131 :y 12
+ 1255 draw line 120 *tmp124 120 *tmp131
+ 1256 draw line 113 *tmp131 120 *tmp131
  1257 label *label671
  1258 label *label672
  1259 label *label673

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-104 instructions):
 
   211 label *label24
   212 draw image 0 0 :item 16 0
   213 jump *label43 greaterThanEq :index 8
-    * set :displayItem:x 71
-    * set :displayItem:y :y
   214 label *label363
   215 # "Function: void displayItem(in x, in y)"
   216 op max :displayItem:amount AMOUNT 0
 
   241 multilabel *label375 (m:*label86)
   242 jump *label394 always
   243 label *label376
-    * op sub *tmp24 71 1
   244 op sub *tmp26 :y 1
   245 draw lineRect 70 *tmp26 9 14
   246 jump *label397 always
   247 label *label377
   248 label *label378
-    * op add *tmp28 71 6
   249 op add *tmp31 :y 12
   250 draw line 77 :y 77 *tmp31
   251 jump *label397 always
   252 label *label379
   253 label *label380
-    * op add *tmp32 71 7
   254 draw line 71 :y 78 :y
   255 op add *tmp33 :y 6
   256 draw line 71 :y 71 *tmp33
 
   261 jump *label397 always
   262 label *label381
   263 label *label382
-    * op add *tmp44 71 7
   264 op add *tmp46 :y 12
   265 draw line 78 :y 78 *tmp46
   266 draw line 71 :y 78 :y
 
   270 jump *label397 always
   271 label *label383
   272 label *label384
-    * op add *tmp54 71 7
   273 op add *tmp56 :y 12
   274 draw line 78 :y 78 *tmp56
   275 op add *tmp57 :y 6
 
   278 jump *label397 always
   279 label *label385
   280 label *label386
-    * op add *tmp62 71 7
   281 draw line 71 :y 78 :y
   282 op add *tmp65 :y 6
   283 draw line 78 :y 78 *tmp65
 
   290 label *label388
   291 op add *tmp74 :y 12
   292 draw line 71 :y 71 *tmp74
-    * op add *tmp75 71 7
   293 draw line 71 :y 78 :y
   294 op add *tmp78 :y 6
   295 draw line 78 :y 78 *tmp78
 
   298 jump *label397 always
   299 label *label389
   300 label *label390
-    * op add *tmp86 71 6
   301 op add *tmp89 :y 12
   302 draw line 77 :y 77 *tmp89
   303 draw line 71 *tmp89 77 *tmp89
   304 jump *label397 always
   305 label *label391
   306 label *label392
-    * op sub *tmp95 71 1
   307 op sub *tmp97 :y 1
   308 draw lineRect 70 *tmp97 9 14
   309 op add *tmp98 :y 6
-    * op add *tmp99 71 7
   310 draw line 71 *tmp98 78 *tmp98
   311 jump *label397 always
   312 label *label393
   313 label *label394
-    * op add *tmp101 71 7
   314 draw line 71 :y 78 :y
   315 op add *tmp104 :y 12
   316 draw line 78 :y 78 *tmp104
 
   322 label *label396
   323 label *label397
   324 label *label398
-    * op sub :displayItem:x 71 11
   325 op idiv :displayItem:amount :displayItem:amount 10
   326 jump *label399 notEqual :displayItem:amount 0
   327 jump *label517 always
 
   353 multilabel *label412 (m:*label86)
   354 jump *label431 always
   355 label *label413
-    * op sub *tmp24 60 1
   356 op sub *tmp26 :y 1
   357 draw lineRect 59 *tmp26 9 14
   358 jump *label434 always
   359 label *label414
   360 label *label415
-    * op add *tmp28 60 6
   361 op add *tmp31 :y 12
   362 draw line 66 :y 66 *tmp31
   363 jump *label434 always
   364 label *label416
   365 label *label417
-    * op add *tmp32 60 7
   366 draw line 60 :y 67 :y
   367 op add *tmp33 :y 6
   368 draw line 60 :y 60 *tmp33
 
   373 jump *label434 always
   374 label *label418
   375 label *label419
-    * op add *tmp44 60 7
   376 op add *tmp46 :y 12
   377 draw line 67 :y 67 *tmp46
   378 draw line 60 :y 67 :y
 
   382 jump *label434 always
   383 label *label420
   384 label *label421
-    * op add *tmp54 60 7
   385 op add *tmp56 :y 12
   386 draw line 67 :y 67 *tmp56
   387 op add *tmp57 :y 6
 
   390 jump *label434 always
   391 label *label422
   392 label *label423
-    * op add *tmp62 60 7
   393 draw line 60 :y 67 :y
   394 op add *tmp65 :y 6
   395 draw line 67 :y 67 *tmp65
 
   402 label *label425
   403 op add *tmp74 :y 12
   404 draw line 60 :y 60 *tmp74
-    * op add *tmp75 60 7
   405 draw line 60 :y 67 :y
   406 op add *tmp78 :y 6
   407 draw line 67 :y 67 *tmp78
 
   410 jump *label434 always
   411 label *label426
   412 label *label427
-    * op add *tmp86 60 6
   413 op add *tmp89 :y 12
   414 draw line 66 :y 66 *tmp89
   415 draw line 60 *tmp89 66 *tmp89
   416 jump *label434 always
   417 label *label428
   418 label *label429
-    * op sub *tmp95 60 1
   419 op sub *tmp97 :y 1
   420 draw lineRect 59 *tmp97 9 14
   421 op add *tmp98 :y 6
-    * op add *tmp99 60 7
   422 draw line 60 *tmp98 67 *tmp98
   423 jump *label434 always
   424 label *label430
   425 label *label431
-    * op add *tmp101 60 7
   426 draw line 60 :y 67 :y
   427 op add *tmp104 :y 12
   428 draw line 67 :y 67 *tmp104
 
   434 label *label433
   435 label *label434
   436 label *label435
-    * op sub :displayItem:x 60 11
   437 op idiv :displayItem:amount :displayItem:amount 10
   438 jump *label436 notEqual :displayItem:amount 0
   439 jump *label517 always
 
   465 multilabel *label449 (m:*label86)
   466 jump *label468 always
   467 label *label450
-    * op sub *tmp24 49 1
   468 op sub *tmp26 :y 1
   469 draw lineRect 48 *tmp26 9 14
   470 jump *label471 always
   471 label *label451
   472 label *label452
-    * op add *tmp28 49 6
   473 op add *tmp31 :y 12
   474 draw line 55 :y 55 *tmp31
   475 jump *label471 always
   476 label *label453
   477 label *label454
-    * op add *tmp32 49 7
   478 draw line 49 :y 56 :y
   479 op add *tmp33 :y 6
   480 draw line 49 :y 49 *tmp33
 
   485 jump *label471 always
   486 label *label455
   487 label *label456
-    * op add *tmp44 49 7
   488 op add *tmp46 :y 12
   489 draw line 56 :y 56 *tmp46
   490 draw line 49 :y 56 :y
 
   494 jump *label471 always
   495 label *label457
   496 label *label458
-    * op add *tmp54 49 7
   497 op add *tmp56 :y 12
   498 draw line 56 :y 56 *tmp56
   499 op add *tmp57 :y 6
 
   502 jump *label471 always
   503 label *label459
   504 label *label460
-    * op add *tmp62 49 7
   505 draw line 49 :y 56 :y
   506 op add *tmp65 :y 6
   507 draw line 56 :y 56 *tmp65
 
   514 label *label462
   515 op add *tmp74 :y 12
   516 draw line 49 :y 49 *tmp74
-    * op add *tmp75 49 7
   517 draw line 49 :y 56 :y
   518 op add *tmp78 :y 6
   519 draw line 56 :y 56 *tmp78
 
   522 jump *label471 always
   523 label *label463
   524 label *label464
-    * op add *tmp86 49 6
   525 op add *tmp89 :y 12
   526 draw line 55 :y 55 *tmp89
   527 draw line 49 *tmp89 55 *tmp89
   528 jump *label471 always
   529 label *label465
   530 label *label466
-    * op sub *tmp95 49 1
   531 op sub *tmp97 :y 1
   532 draw lineRect 48 *tmp97 9 14
   533 op add *tmp98 :y 6
-    * op add *tmp99 49 7
   534 draw line 49 *tmp98 56 *tmp98
   535 jump *label471 always
   536 label *label467
   537 label *label468
-    * op add *tmp101 49 7
   538 draw line 49 :y 56 :y
   539 op add *tmp104 :y 12
   540 draw line 56 :y 56 *tmp104
 
   546 label *label470
   547 label *label471
   548 label *label472
-    * op sub :displayItem:x 49 11
   549 op idiv :displayItem:amount :displayItem:amount 10
   550 jump *label473 notEqual :displayItem:amount 0
   551 jump *label517 always
 
   577 multilabel *label486 (m:*label86)
   578 jump *label505 always
   579 label *label487
-    * op sub *tmp24 38 1
   580 op sub *tmp26 :y 1
   581 draw lineRect 37 *tmp26 9 14
   582 jump *label508 always
   583 label *label488
   584 label *label489
-    * op add *tmp28 38 6
   585 op add *tmp31 :y 12
   586 draw line 44 :y 44 *tmp31
   587 jump *label508 always
   588 label *label490
   589 label *label491
-    * op add *tmp32 38 7
   590 draw line 38 :y 45 :y
   591 op add *tmp33 :y 6
   592 draw line 38 :y 38 *tmp33
 
   597 jump *label508 always
   598 label *label492
   599 label *label493
-    * op add *tmp44 38 7
   600 op add *tmp46 :y 12
   601 draw line 45 :y 45 *tmp46
   602 draw line 38 :y 45 :y
 
   606 jump *label508 always
   607 label *label494
   608 label *label495
-    * op add *tmp54 38 7
   609 op add *tmp56 :y 12
   610 draw line 45 :y 45 *tmp56
   611 op add *tmp57 :y 6
 
   614 jump *label508 always
   615 label *label496
   616 label *label497
-    * op add *tmp62 38 7
   617 draw line 38 :y 45 :y
   618 op add *tmp65 :y 6
   619 draw line 45 :y 45 *tmp65
 
   626 label *label499
   627 op add *tmp74 :y 12
   628 draw line 38 :y 38 *tmp74
-    * op add *tmp75 38 7
   629 draw line 38 :y 45 :y
   630 op add *tmp78 :y 6
   631 draw line 45 :y 45 *tmp78
 
   634 jump *label508 always
   635 label *label500
   636 label *label501
-    * op add *tmp86 38 6
   637 op add *tmp89 :y 12
   638 draw line 44 :y 44 *tmp89
   639 draw line 38 *tmp89 44 *tmp89
   640 jump *label508 always
   641 label *label502
   642 label *label503
-    * op sub *tmp95 38 1
   643 op sub *tmp97 :y 1
   644 draw lineRect 37 *tmp97 9 14
   645 op add *tmp98 :y 6
-    * op add *tmp99 38 7
   646 draw line 38 *tmp98 45 *tmp98
   647 jump *label508 always
   648 label *label504
   649 label *label505
-    * op add *tmp101 38 7
   650 draw line 38 :y 45 :y
   651 op add *tmp104 :y 12
   652 draw line 45 :y 45 *tmp104
 
   658 label *label507
   659 label *label508
   660 label *label509
-    * op sub :displayItem:x 38 11
   661 op idiv :displayItem:amount :displayItem:amount 10
   662 jump *label510 notEqual :displayItem:amount 0
   663 jump *label517 always
 
   667 label *label513
   668 # "Function: def drawDigit12(in x, in y, in digit)"
   669 jump *label514 notEqual :displayItem:amount 1
-    * op add *tmp119 27 6
   670 op add *tmp122 :y 12
   671 draw line 33 :y 33 *tmp122
   672 jump *label515 always
   673 label *label514
-    * op add *tmp123 27 7
   674 draw line 27 :y 34 :y
   675 op add *tmp124 :y 6
   676 draw line 27 :y 27 *tmp124
 
   683 label *label517
   684 jump *label44 always
   685 label *label43
-    * set :displayItem:x 157
-    * set :displayItem:y :y
   686 label *label519
   687 # "Function: void displayItem(in x, in y)"
   688 op max :displayItem:amount AMOUNT 0
 
   713 multilabel *label531 (m:*label86)
   714 jump *label550 always
   715 label *label532
-    * op sub *tmp24 157 1
   716 op sub *tmp26 :y 1
   717 draw lineRect 156 *tmp26 9 14
   718 jump *label553 always
   719 label *label533
   720 label *label534
-    * op add *tmp28 157 6
   721 op add *tmp31 :y 12
   722 draw line 163 :y 163 *tmp31
   723 jump *label553 always
   724 label *label535
   725 label *label536
-    * op add *tmp32 157 7
   726 draw line 157 :y 164 :y
   727 op add *tmp33 :y 6
   728 draw line 157 :y 157 *tmp33
 
   733 jump *label553 always
   734 label *label537
   735 label *label538
-    * op add *tmp44 157 7
   736 op add *tmp46 :y 12
   737 draw line 164 :y 164 *tmp46
   738 draw line 157 :y 164 :y
 
   742 jump *label553 always
   743 label *label539
   744 label *label540
-    * op add *tmp54 157 7
   745 op add *tmp56 :y 12
   746 draw line 164 :y 164 *tmp56
   747 op add *tmp57 :y 6
 
   750 jump *label553 always
   751 label *label541
   752 label *label542
-    * op add *tmp62 157 7
   753 draw line 157 :y 164 :y
   754 op add *tmp65 :y 6
   755 draw line 164 :y 164 *tmp65
 
   762 label *label544
   763 op add *tmp74 :y 12
   764 draw line 157 :y 157 *tmp74
-    * op add *tmp75 157 7
   765 draw line 157 :y 164 :y
   766 op add *tmp78 :y 6
   767 draw line 164 :y 164 *tmp78
 
   770 jump *label553 always
   771 label *label545
   772 label *label546
-    * op add *tmp86 157 6
   773 op add *tmp89 :y 12
   774 draw line 163 :y 163 *tmp89
   775 draw line 157 *tmp89 163 *tmp89
   776 jump *label553 always
   777 label *label547
   778 label *label548
-    * op sub *tmp95 157 1
   779 op sub *tmp97 :y 1
   780 draw lineRect 156 *tmp97 9 14
   781 op add *tmp98 :y 6
-    * op add *tmp99 157 7
   782 draw line 157 *tmp98 164 *tmp98
   783 jump *label553 always
   784 label *label549
   785 label *label550
-    * op add *tmp101 157 7
   786 draw line 157 :y 164 :y
   787 op add *tmp104 :y 12
   788 draw line 164 :y 164 *tmp104
 
   794 label *label552
   795 label *label553
   796 label *label554
-    * op sub :displayItem:x 157 11
   797 op idiv :displayItem:amount :displayItem:amount 10
   798 jump *label555 notEqual :displayItem:amount 0
   799 jump *label673 always
 
   825 multilabel *label568 (m:*label86)
   826 jump *label587 always
   827 label *label569
-    * op sub *tmp24 146 1
   828 op sub *tmp26 :y 1
   829 draw lineRect 145 *tmp26 9 14
   830 jump *label590 always
   831 label *label570
   832 label *label571
-    * op add *tmp28 146 6
   833 op add *tmp31 :y 12
   834 draw line 152 :y 152 *tmp31
   835 jump *label590 always
   836 label *label572
   837 label *label573
-    * op add *tmp32 146 7
   838 draw line 146 :y 153 :y
   839 op add *tmp33 :y 6
   840 draw line 146 :y 146 *tmp33
 
   845 jump *label590 always
   846 label *label574
   847 label *label575
-    * op add *tmp44 146 7
   848 op add *tmp46 :y 12
   849 draw line 153 :y 153 *tmp46
   850 draw line 146 :y 153 :y
 
   854 jump *label590 always
   855 label *label576
   856 label *label577
-    * op add *tmp54 146 7
   857 op add *tmp56 :y 12
   858 draw line 153 :y 153 *tmp56
   859 op add *tmp57 :y 6
 
   862 jump *label590 always
   863 label *label578
   864 label *label579
-    * op add *tmp62 146 7
   865 draw line 146 :y 153 :y
   866 op add *tmp65 :y 6
   867 draw line 153 :y 153 *tmp65
 
   874 label *label581
   875 op add *tmp74 :y 12
   876 draw line 146 :y 146 *tmp74
-    * op add *tmp75 146 7
   877 draw line 146 :y 153 :y
   878 op add *tmp78 :y 6
   879 draw line 153 :y 153 *tmp78
 
   882 jump *label590 always
   883 label *label582
   884 label *label583
-    * op add *tmp86 146 6
   885 op add *tmp89 :y 12
   886 draw line 152 :y 152 *tmp89
   887 draw line 146 *tmp89 152 *tmp89
   888 jump *label590 always
   889 label *label584
   890 label *label585
-    * op sub *tmp95 146 1
   891 op sub *tmp97 :y 1
   892 draw lineRect 145 *tmp97 9 14
   893 op add *tmp98 :y 6
-    * op add *tmp99 146 7
   894 draw line 146 *tmp98 153 *tmp98
   895 jump *label590 always
   896 label *label586
   897 label *label587
-    * op add *tmp101 146 7
   898 draw line 146 :y 153 :y
   899 op add *tmp104 :y 12
   900 draw line 153 :y 153 *tmp104
 
   906 label *label589
   907 label *label590
   908 label *label591
-    * op sub :displayItem:x 146 11
   909 op idiv :displayItem:amount :displayItem:amount 10
   910 jump *label592 notEqual :displayItem:amount 0
   911 jump *label673 always
 
   937 multilabel *label605 (m:*label86)
   938 jump *label624 always
   939 label *label606
-    * op sub *tmp24 135 1
   940 op sub *tmp26 :y 1
   941 draw lineRect 134 *tmp26 9 14
   942 jump *label627 always
   943 label *label607
   944 label *label608
-    * op add *tmp28 135 6
   945 op add *tmp31 :y 12
   946 draw line 141 :y 141 *tmp31
   947 jump *label627 always
   948 label *label609
   949 label *label610
-    * op add *tmp32 135 7
   950 draw line 135 :y 142 :y
   951 op add *tmp33 :y 6
   952 draw line 135 :y 135 *tmp33
 
   957 jump *label627 always
   958 label *label611
   959 label *label612
-    * op add *tmp44 135 7
   960 op add *tmp46 :y 12
   961 draw line 142 :y 142 *tmp46
   962 draw line 135 :y 142 :y
 
   966 jump *label627 always
   967 label *label613
   968 label *label614
-    * op add *tmp54 135 7
   969 op add *tmp56 :y 12
   970 draw line 142 :y 142 *tmp56
   971 op add *tmp57 :y 6
 
   974 jump *label627 always
   975 label *label615
   976 label *label616
-    * op add *tmp62 135 7
   977 draw line 135 :y 142 :y
   978 op add *tmp65 :y 6
   979 draw line 142 :y 142 *tmp65
 
   986 label *label618
   987 op add *tmp74 :y 12
   988 draw line 135 :y 135 *tmp74
-    * op add *tmp75 135 7
   989 draw line 135 :y 142 :y
   990 op add *tmp78 :y 6
   991 draw line 142 :y 142 *tmp78
 
   994 jump *label627 always
   995 label *label619
   996 label *label620
-    * op add *tmp86 135 6
   997 op add *tmp89 :y 12
   998 draw line 141 :y 141 *tmp89
   999 draw line 135 *tmp89 141 *tmp89
  1000 jump *label627 always
  1001 label *label621
  1002 label *label622
-    * op sub *tmp95 135 1
  1003 op sub *tmp97 :y 1
  1004 draw lineRect 134 *tmp97 9 14
  1005 op add *tmp98 :y 6
-    * op add *tmp99 135 7
  1006 draw line 135 *tmp98 142 *tmp98
  1007 jump *label627 always
  1008 label *label623
  1009 label *label624
-    * op add *tmp101 135 7
  1010 draw line 135 :y 142 :y
  1011 op add *tmp104 :y 12
  1012 draw line 142 :y 142 *tmp104
 
  1018 label *label626
  1019 label *label627
  1020 label *label628
-    * op sub :displayItem:x 135 11
  1021 op idiv :displayItem:amount :displayItem:amount 10
  1022 jump *label629 notEqual :displayItem:amount 0
  1023 jump *label673 always
 
  1049 multilabel *label642 (m:*label86)
  1050 jump *label661 always
  1051 label *label643
-    * op sub *tmp24 124 1
  1052 op sub *tmp26 :y 1
  1053 draw lineRect 123 *tmp26 9 14
  1054 jump *label664 always
  1055 label *label644
  1056 label *label645
-    * op add *tmp28 124 6
  1057 op add *tmp31 :y 12
  1058 draw line 130 :y 130 *tmp31
  1059 jump *label664 always
  1060 label *label646
  1061 label *label647
-    * op add *tmp32 124 7
  1062 draw line 124 :y 131 :y
  1063 op add *tmp33 :y 6
  1064 draw line 124 :y 124 *tmp33
 
  1069 jump *label664 always
  1070 label *label648
  1071 label *label649
-    * op add *tmp44 124 7
  1072 op add *tmp46 :y 12
  1073 draw line 131 :y 131 *tmp46
  1074 draw line 124 :y 131 :y
 
  1078 jump *label664 always
  1079 label *label650
  1080 label *label651
-    * op add *tmp54 124 7
  1081 op add *tmp56 :y 12
  1082 draw line 131 :y 131 *tmp56
  1083 op add *tmp57 :y 6
 
  1086 jump *label664 always
  1087 label *label652
  1088 label *label653
-    * op add *tmp62 124 7
  1089 draw line 124 :y 131 :y
  1090 op add *tmp65 :y 6
  1091 draw line 131 :y 131 *tmp65
 
  1098 label *label655
  1099 op add *tmp74 :y 12
  1100 draw line 124 :y 124 *tmp74
-    * op add *tmp75 124 7
  1101 draw line 124 :y 131 :y
  1102 op add *tmp78 :y 6
  1103 draw line 131 :y 131 *tmp78
 
  1106 jump *label664 always
  1107 label *label656
  1108 label *label657
-    * op add *tmp86 124 6
  1109 op add *tmp89 :y 12
  1110 draw line 130 :y 130 *tmp89
  1111 draw line 124 *tmp89 130 *tmp89
  1112 jump *label664 always
  1113 label *label658
  1114 label *label659
-    * op sub *tmp95 124 1
  1115 op sub *tmp97 :y 1
  1116 draw lineRect 123 *tmp97 9 14
  1117 op add *tmp98 :y 6
-    * op add *tmp99 124 7
  1118 draw line 124 *tmp98 131 *tmp98
  1119 jump *label664 always
  1120 label *label660
  1121 label *label661
-    * op add *tmp101 124 7
  1122 draw line 124 :y 131 :y
  1123 op add *tmp104 :y 12
  1124 draw line 131 :y 131 *tmp104
 
  1130 label *label663
  1131 label *label664
  1132 label *label665
-    * op sub :displayItem:x 124 11
  1133 op idiv :displayItem:amount :displayItem:amount 10
  1134 jump *label666 notEqual :displayItem:amount 0
  1135 jump *label673 always
 
  1139 label *label669
  1140 # "Function: def drawDigit12(in x, in y, in digit)"
  1141 jump *label670 notEqual :displayItem:amount 1
-    * op add *tmp119 113 6
  1142 op add *tmp122 :y 12
  1143 draw line 119 :y 119 *tmp122
  1144 jump *label671 always
  1145 label *label670
-    * op add *tmp123 113 7
  1146 draw line 113 :y 120 :y
  1147 op add *tmp124 :y 6
  1148 draw line 113 :y 113 *tmp124

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
     2 label *label258
     3 # "Function: def eraseImages(in first_column)"
     4 draw color 0 0 80 255
-    * jump *label259 equal true false
     5 draw rect 0 0 23 176
     6 jump *label260 always
     7 label *label259
 
    11 label *label262
    12 # "Function: def eraseImages(in first_column)"
    13 draw color 0 0 80 255
-    * jump *label263 equal false false
+   14 jump *label263 always
    15 draw rect 0 0 23 176
    16 jump *label264 always
    17 label *label263
 
    21 draw color 255 255 255 255
    22 label *label266
    23 draw image 15 159 @sand 16 0
-    * jump *label267 notEqual 1 8
+   24 jump *label267 always
    25 draw color 255 255 255 255
    26 label *label267
    27 label *label268
    28 label *label269
    29 label *label272
    30 draw image 15 139 @copper 16 0
-    * jump *label273 notEqual 2 8
+   31 jump *label273 always
    32 draw color 255 255 255 255
    33 label *label273
    34 label *label274
    35 label *label275
    36 label *label278
    37 draw image 15 119 @lead 16 0
-    * jump *label279 notEqual 3 8
+   38 jump *label279 always
    39 draw color 255 255 255 255
    40 label *label279
    41 label *label280
    42 label *label281
    43 label *label284
    44 draw image 15 99 @coal 16 0
-    * jump *label285 notEqual 4 8
+   45 jump *label285 always
    46 draw color 255 255 255 255
    47 label *label285
    48 label *label286
    49 label *label287
    50 label *label290
    51 draw image 15 79 @titanium 16 0
-    * jump *label291 notEqual 5 8
+   52 jump *label291 always
    53 draw color 255 255 255 255
    54 label *label291
    55 label *label292
    56 label *label293
    57 label *label296
    58 draw image 15 59 @thorium 16 0
-    * jump *label297 notEqual 6 8
+   59 jump *label297 always
    60 draw color 255 255 255 255
    61 label *label297
    62 label *label298
    63 label *label299
    64 label *label302
    65 draw image 15 39 @scrap 16 0
-    * jump *label303 notEqual 7 8
+   66 jump *label303 always
    67 draw color 255 255 255 255
    68 label *label303
    69 label *label304
    70 label *label305
    71 label *label308
    72 draw image 15 19 @graphite 16 0
-    * jump *label309 notEqual 8 8
    73 draw color 255 255 255 255
    74 label *label309
    75 label *label310
    76 label *label311
    77 label *label314
    78 draw image 101 159 @metaglass 16 0
-    * jump *label315 notEqual 9 8
+   79 jump *label315 always
    80 draw color 255 255 255 255
    81 label *label315
    82 label *label316
    83 label *label317
    84 label *label320
    85 draw image 101 139 @silicon 16 0
-    * jump *label321 notEqual 10 8
+   86 jump *label321 always
    87 draw color 255 255 255 255
    88 label *label321
    89 label *label322
    90 label *label323
    91 label *label326
    92 draw image 101 119 @pyratite 16 0
-    * jump *label327 notEqual 11 8
+   93 jump *label327 always
    94 draw color 255 255 255 255
    95 label *label327
    96 label *label328
    97 label *label329
    98 label *label332
    99 draw image 101 99 @blast-compound 16 0
-    * jump *label333 notEqual 12 8
+  100 jump *label333 always
   101 draw color 255 255 255 255
   102 label *label333
   103 label *label334
   104 label *label335
   105 label *label338
   106 draw image 101 79 @plastanium 16 0
-    * jump *label339 notEqual 13 8
+  107 jump *label339 always
   108 draw color 255 255 255 255
   109 label *label339
   110 label *label340
   111 label *label341
   112 label *label344
   113 draw image 101 59 @phase-fabric 16 0
-    * jump *label345 notEqual 14 8
+  114 jump *label345 always
   115 draw color 255 255 255 255
   116 label *label345
   117 label *label346
   118 label *label347
   119 label *label350
   120 draw image 101 39 @surge-alloy 16 0
-    * jump *label351 notEqual 15 8
+  121 jump *label351 always
   122 draw color 255 255 255 255
   123 label *label351
   124 label *label352
   125 label *label353
   126 label *label356
   127 draw image 101 19 @spore-pod 16 0
-    * jump *label357 notEqual 16 8
+  128 jump *label357 always
   129 draw color 255 255 255 255
   130 label *label357
   131 label *label358
 
   136 label *label250
   137 # "Function: def eraseNumbers(in first_column)"
   138 draw color 0 0 80 255
-    * jump *label251 equal true false
   139 draw rect 23 0 70 176
   140 jump *label252 always
   141 label *label251
 
  1159 label *label254
  1160 # "Function: def eraseNumbers(in first_column)"
  1161 draw color 0 0 80 255
-    * jump *label255 equal false false
+ 1162 jump *label255 always
  1163 draw rect 23 0 70 176
  1164 jump *label256 always
  1165 label *label255

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 set AMOUNT 12345
     1 draw stroke 2
-    * label *label258
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label260 always
-    * label *label259
     6 draw rect 93 0 16 176
     7 label *label260
-    * label *label261
-    * label *label262
     8 # "Function: def eraseImages(in first_column)"
     9 draw color 0 0 80 255
    10 jump *label263 always
 
    13 label *label263
    14 draw rect 93 0 16 176
    15 label *label264
-    * label *label265
    16 draw color 255 255 255 255
-    * label *label266
    17 draw image 15 159 @sand 16 0
    18 jump *label267 always
    19 draw color 255 255 255 255
    20 label *label267
-    * label *label268
-    * label *label269
-    * label *label272
    21 draw image 15 139 @copper 16 0
    22 jump *label273 always
    23 draw color 255 255 255 255
    24 label *label273
-    * label *label274
-    * label *label275
-    * label *label278
    25 draw image 15 119 @lead 16 0
    26 jump *label279 always
    27 draw color 255 255 255 255
    28 label *label279
-    * label *label280
-    * label *label281
-    * label *label284
    29 draw image 15 99 @coal 16 0
    30 jump *label285 always
    31 draw color 255 255 255 255
    32 label *label285
-    * label *label286
-    * label *label287
-    * label *label290
    33 draw image 15 79 @titanium 16 0
    34 jump *label291 always
    35 draw color 255 255 255 255
    36 label *label291
-    * label *label292
-    * label *label293
-    * label *label296
    37 draw image 15 59 @thorium 16 0
    38 jump *label297 always
    39 draw color 255 255 255 255
    40 label *label297
-    * label *label298
-    * label *label299
-    * label *label302
    41 draw image 15 39 @scrap 16 0
    42 jump *label303 always
    43 draw color 255 255 255 255
    44 label *label303
-    * label *label304
-    * label *label305
-    * label *label308
    45 draw image 15 19 @graphite 16 0
    46 draw color 255 255 255 255
-    * label *label309
-    * label *label310
-    * label *label311
-    * label *label314
    47 draw image 101 159 @metaglass 16 0
    48 jump *label315 always
    49 draw color 255 255 255 255
    50 label *label315
-    * label *label316
-    * label *label317
-    * label *label320
    51 draw image 101 139 @silicon 16 0
    52 jump *label321 always
    53 draw color 255 255 255 255
    54 label *label321
-    * label *label322
-    * label *label323
-    * label *label326
    55 draw image 101 119 @pyratite 16 0
    56 jump *label327 always
    57 draw color 255 255 255 255
    58 label *label327
-    * label *label328
-    * label *label329
-    * label *label332
    59 draw image 101 99 @blast-compound 16 0
    60 jump *label333 always
    61 draw color 255 255 255 255
    62 label *label333
-    * label *label334
-    * label *label335
-    * label *label338
    63 draw image 101 79 @plastanium 16 0
    64 jump *label339 always
    65 draw color 255 255 255 255
    66 label *label339
-    * label *label340
-    * label *label341
-    * label *label344
    67 draw image 101 59 @phase-fabric 16 0
    68 jump *label345 always
    69 draw color 255 255 255 255
    70 label *label345
-    * label *label346
-    * label *label347
-    * label *label350
    71 draw image 101 39 @surge-alloy 16 0
    72 jump *label351 always
    73 draw color 255 255 255 255
    74 label *label351
-    * label *label352
-    * label *label353
-    * label *label356
    75 draw image 101 19 @spore-pod 16 0
    76 jump *label357 always
    77 draw color 255 255 255 255
    78 label *label357
-    * label *label358
-    * label *label359
-    * label *label5
    79 drawflush display1
    80 set :y 152
-    * label *label250
    81 # "Function: def eraseNumbers(in first_column)"
    82 draw color 0 0 80 255
    83 draw rect 23 0 70 176
    84 jump *label252 always
-    * label *label251
    85 draw rect 109 0 176 176
    86 label *label252
-    * label *label253
    87 set :index 0
    88 set :item @sand
    89 op add *tmp10 @counter 1
 
   150 label *label24
   151 draw image 0 0 :item 16 0
   152 jump *label43 greaterThanEq :index 8
-    * label *label363
   153 # "Function: void displayItem(in x, in y)"
   154 op max :displayItem:amount AMOUNT 0
   155 draw color 0 255 0 255
-    * label *label364
-    * label *label365
   156 op mod *tmp19 :displayItem:amount 10
   157 # "Function: def drawDigit(in x, in y, in digit)"
   158 multijump *label366 *tmp19 0 (m:*label86)
 
   180 op sub *tmp26 :y 1
   181 draw lineRect 70 *tmp26 9 14
   182 jump *label397 always
-    * label *label377
   183 label *label378
   184 op add *tmp31 :y 12
   185 draw line 77 :y 77 *tmp31
   186 jump *label397 always
-    * label *label379
   187 label *label380
   188 draw line 71 :y 78 :y
   189 op add *tmp33 :y 6
 
   193 draw line 78 *tmp33 78 *tmp40
   194 draw line 71 *tmp40 78 *tmp40
   195 jump *label397 always
-    * label *label381
   196 label *label382
   197 op add *tmp46 :y 12
   198 draw line 78 :y 78 *tmp46
 
   201 draw line 71 *tmp48 78 *tmp48
   202 draw line 71 *tmp46 78 *tmp46
   203 jump *label397 always
-    * label *label383
   204 label *label384
   205 op add *tmp56 :y 12
   206 draw line 78 :y 78 *tmp56
 
   208 draw line 71 *tmp57 78 *tmp57
   209 draw line 71 *tmp57 71 *tmp56
   210 jump *label397 always
-    * label *label385
   211 label *label386
   212 draw line 71 :y 78 :y
   213 op add *tmp65 :y 6
 
   217 draw line 71 *tmp65 71 *tmp70
   218 draw line 71 *tmp70 78 *tmp70
   219 jump *label397 always
-    * label *label387
   220 label *label388
   221 op add *tmp74 :y 12
   222 draw line 71 :y 71 *tmp74
 
   226 draw line 71 *tmp78 78 *tmp78
   227 draw line 71 *tmp74 78 *tmp74
   228 jump *label397 always
-    * label *label389
   229 label *label390
   230 op add *tmp89 :y 12
   231 draw line 77 :y 77 *tmp89
   232 draw line 71 *tmp89 77 *tmp89
   233 jump *label397 always
-    * label *label391
   234 label *label392
   235 op sub *tmp97 :y 1
   236 draw lineRect 70 *tmp97 9 14
   237 op add *tmp98 :y 6
   238 draw line 71 *tmp98 78 *tmp98
   239 jump *label397 always
-    * label *label393
   240 label *label394
   241 draw line 71 :y 78 :y
   242 op add *tmp104 :y 12
 
   245 draw line 71 *tmp105 78 *tmp105
   246 draw line 71 *tmp105 71 *tmp104
   247 draw line 71 *tmp104 78 *tmp104
-    * label *label395
-    * label *label396
   248 label *label397
-    * label *label398
   249 op idiv :displayItem:amount :displayItem:amount 10
   250 jump *label399 notEqual :displayItem:amount 0
   251 jump *label517 always
   252 label *label399
-    * label *label400
-    * label *label401
-    * label *label402
   253 op mod *tmp19 :displayItem:amount 10
   254 # "Function: def drawDigit(in x, in y, in digit)"
   255 multijump *label403 *tmp19 0 (m:*label86)
 
   277 op sub *tmp26 :y 1
   278 draw lineRect 59 *tmp26 9 14
   279 jump *label434 always
-    * label *label414
   280 label *label415
   281 op add *tmp31 :y 12
   282 draw line 66 :y 66 *tmp31
   283 jump *label434 always
-    * label *label416
   284 label *label417
   285 draw line 60 :y 67 :y
   286 op add *tmp33 :y 6
 
   290 draw line 67 *tmp33 67 *tmp40
   291 draw line 60 *tmp40 67 *tmp40
   292 jump *label434 always
-    * label *label418
   293 label *label419
   294 op add *tmp46 :y 12
   295 draw line 67 :y 67 *tmp46
 
   298 draw line 60 *tmp48 67 *tmp48
   299 draw line 60 *tmp46 67 *tmp46
   300 jump *label434 always
-    * label *label420
   301 label *label421
   302 op add *tmp56 :y 12
   303 draw line 67 :y 67 *tmp56
 
   305 draw line 60 *tmp57 67 *tmp57
   306 draw line 60 *tmp57 60 *tmp56
   307 jump *label434 always
-    * label *label422
   308 label *label423
   309 draw line 60 :y 67 :y
   310 op add *tmp65 :y 6
 
   314 draw line 60 *tmp65 60 *tmp70
   315 draw line 60 *tmp70 67 *tmp70
   316 jump *label434 always
-    * label *label424
   317 label *label425
   318 op add *tmp74 :y 12
   319 draw line 60 :y 60 *tmp74
 
   323 draw line 60 *tmp78 67 *tmp78
   324 draw line 60 *tmp74 67 *tmp74
   325 jump *label434 always
-    * label *label426
   326 label *label427
   327 op add *tmp89 :y 12
   328 draw line 66 :y 66 *tmp89
   329 draw line 60 *tmp89 66 *tmp89
   330 jump *label434 always
-    * label *label428
   331 label *label429
   332 op sub *tmp97 :y 1
   333 draw lineRect 59 *tmp97 9 14
   334 op add *tmp98 :y 6
   335 draw line 60 *tmp98 67 *tmp98
   336 jump *label434 always
-    * label *label430
   337 label *label431
   338 draw line 60 :y 67 :y
   339 op add *tmp104 :y 12
 
   342 draw line 60 *tmp105 67 *tmp105
   343 draw line 60 *tmp105 60 *tmp104
   344 draw line 60 *tmp104 67 *tmp104
-    * label *label432
-    * label *label433
   345 label *label434
-    * label *label435
   346 op idiv :displayItem:amount :displayItem:amount 10
   347 jump *label436 notEqual :displayItem:amount 0
   348 jump *label517 always
   349 label *label436
-    * label *label437
-    * label *label438
-    * label *label439
   350 op mod *tmp19 :displayItem:amount 10
   351 # "Function: def drawDigit(in x, in y, in digit)"
   352 multijump *label440 *tmp19 0 (m:*label86)
 
   374 op sub *tmp26 :y 1
   375 draw lineRect 48 *tmp26 9 14
   376 jump *label471 always
-    * label *label451
   377 label *label452
   378 op add *tmp31 :y 12
   379 draw line 55 :y 55 *tmp31
   380 jump *label471 always
-    * label *label453
   381 label *label454
   382 draw line 49 :y 56 :y
   383 op add *tmp33 :y 6
 
   387 draw line 56 *tmp33 56 *tmp40
   388 draw line 49 *tmp40 56 *tmp40
   389 jump *label471 always
-    * label *label455
   390 label *label456
   391 op add *tmp46 :y 12
   392 draw line 56 :y 56 *tmp46
 
   395 draw line 49 *tmp48 56 *tmp48
   396 draw line 49 *tmp46 56 *tmp46
   397 jump *label471 always
-    * label *label457
   398 label *label458
   399 op add *tmp56 :y 12
   400 draw line 56 :y 56 *tmp56
 
   402 draw line 49 *tmp57 56 *tmp57
   403 draw line 49 *tmp57 49 *tmp56
   404 jump *label471 always
-    * label *label459
   405 label *label460
   406 draw line 49 :y 56 :y
   407 op add *tmp65 :y 6
 
   411 draw line 49 *tmp65 49 *tmp70
   412 draw line 49 *tmp70 56 *tmp70
   413 jump *label471 always
-    * label *label461
   414 label *label462
   415 op add *tmp74 :y 12
   416 draw line 49 :y 49 *tmp74
 
   420 draw line 49 *tmp78 56 *tmp78
   421 draw line 49 *tmp74 56 *tmp74
   422 jump *label471 always
-    * label *label463
   423 label *label464
   424 op add *tmp89 :y 12
   425 draw line 55 :y 55 *tmp89
   426 draw line 49 *tmp89 55 *tmp89
   427 jump *label471 always
-    * label *label465
   428 label *label466
   429 op sub *tmp97 :y 1
   430 draw lineRect 48 *tmp97 9 14
   431 op add *tmp98 :y 6
   432 draw line 49 *tmp98 56 *tmp98
   433 jump *label471 always
-    * label *label467
   434 label *label468
   435 draw line 49 :y 56 :y
   436 op add *tmp104 :y 12
 
   439 draw line 49 *tmp105 56 *tmp105
   440 draw line 49 *tmp105 49 *tmp104
   441 draw line 49 *tmp104 56 *tmp104
-    * label *label469
-    * label *label470
   442 label *label471
-    * label *label472
   443 op idiv :displayItem:amount :displayItem:amount 10
   444 jump *label473 notEqual :displayItem:amount 0
   445 jump *label517 always
   446 label *label473
-    * label *label474
-    * label *label475
-    * label *label476
   447 op mod *tmp19 :displayItem:amount 10
   448 # "Function: def drawDigit(in x, in y, in digit)"
   449 multijump *label477 *tmp19 0 (m:*label86)
 
   471 op sub *tmp26 :y 1
   472 draw lineRect 37 *tmp26 9 14
   473 jump *label508 always
-    * label *label488
   474 label *label489
   475 op add *tmp31 :y 12
   476 draw line 44 :y 44 *tmp31
   477 jump *label508 always
-    * label *label490
   478 label *label491
   479 draw line 38 :y 45 :y
   480 op add *tmp33 :y 6
 
   484 draw line 45 *tmp33 45 *tmp40
   485 draw line 38 *tmp40 45 *tmp40
   486 jump *label508 always
-    * label *label492
   487 label *label493
   488 op add *tmp46 :y 12
   489 draw line 45 :y 45 *tmp46
 
   492 draw line 38 *tmp48 45 *tmp48
   493 draw line 38 *tmp46 45 *tmp46
   494 jump *label508 always
-    * label *label494
   495 label *label495
   496 op add *tmp56 :y 12
   497 draw line 45 :y 45 *tmp56
 
   499 draw line 38 *tmp57 45 *tmp57
   500 draw line 38 *tmp57 38 *tmp56
   501 jump *label508 always
-    * label *label496
   502 label *label497
   503 draw line 38 :y 45 :y
   504 op add *tmp65 :y 6
 
   508 draw line 38 *tmp65 38 *tmp70
   509 draw line 38 *tmp70 45 *tmp70
   510 jump *label508 always
-    * label *label498
   511 label *label499
   512 op add *tmp74 :y 12
   513 draw line 38 :y 38 *tmp74
 
   517 draw line 38 *tmp78 45 *tmp78
   518 draw line 38 *tmp74 45 *tmp74
   519 jump *label508 always
-    * label *label500
   520 label *label501
   521 op add *tmp89 :y 12
   522 draw line 44 :y 44 *tmp89
   523 draw line 38 *tmp89 44 *tmp89
   524 jump *label508 always
-    * label *label502
   525 label *label503
   526 op sub *tmp97 :y 1
   527 draw lineRect 37 *tmp97 9 14
   528 op add *tmp98 :y 6
   529 draw line 38 *tmp98 45 *tmp98
   530 jump *label508 always
-    * label *label504
   531 label *label505
   532 draw line 38 :y 45 :y
   533 op add *tmp104 :y 12
 
   536 draw line 38 *tmp105 45 *tmp105
   537 draw line 38 *tmp105 38 *tmp104
   538 draw line 38 *tmp104 45 *tmp104
-    * label *label506
-    * label *label507
   539 label *label508
-    * label *label509
   540 op idiv :displayItem:amount :displayItem:amount 10
   541 jump *label510 notEqual :displayItem:amount 0
   542 jump *label517 always
   543 label *label510
-    * label *label511
-    * label *label512
-    * label *label513
   544 # "Function: def drawDigit12(in x, in y, in digit)"
   545 jump *label514 notEqual :displayItem:amount 1
   546 op add *tmp122 :y 12
 
   555 draw line 34 *tmp124 34 *tmp131
   556 draw line 27 *tmp131 34 *tmp131
   557 label *label515
-    * label *label516
   558 label *label517
   559 jump *label44 always
   560 label *label43
-    * label *label519
   561 # "Function: void displayItem(in x, in y)"
   562 op max :displayItem:amount AMOUNT 0
   563 draw color 0 255 0 255
-    * label *label520
-    * label *label521
   564 op mod *tmp19 :displayItem:amount 10
   565 # "Function: def drawDigit(in x, in y, in digit)"
   566 multijump *label522 *tmp19 0 (m:*label86)
 
   588 op sub *tmp26 :y 1
   589 draw lineRect 156 *tmp26 9 14
   590 jump *label553 always
-    * label *label533
   591 label *label534
   592 op add *tmp31 :y 12
   593 draw line 163 :y 163 *tmp31
   594 jump *label553 always
-    * label *label535
   595 label *label536
   596 draw line 157 :y 164 :y
   597 op add *tmp33 :y 6
 
   601 draw line 164 *tmp33 164 *tmp40
   602 draw line 157 *tmp40 164 *tmp40
   603 jump *label553 always
-    * label *label537
   604 label *label538
   605 op add *tmp46 :y 12
   606 draw line 164 :y 164 *tmp46
 
   609 draw line 157 *tmp48 164 *tmp48
   610 draw line 157 *tmp46 164 *tmp46
   611 jump *label553 always
-    * label *label539
   612 label *label540
   613 op add *tmp56 :y 12
   614 draw line 164 :y 164 *tmp56
 
   616 draw line 157 *tmp57 164 *tmp57
   617 draw line 157 *tmp57 157 *tmp56
   618 jump *label553 always
-    * label *label541
   619 label *label542
   620 draw line 157 :y 164 :y
   621 op add *tmp65 :y 6
 
   625 draw line 157 *tmp65 157 *tmp70
   626 draw line 157 *tmp70 164 *tmp70
   627 jump *label553 always
-    * label *label543
   628 label *label544
   629 op add *tmp74 :y 12
   630 draw line 157 :y 157 *tmp74
 
   634 draw line 157 *tmp78 164 *tmp78
   635 draw line 157 *tmp74 164 *tmp74
   636 jump *label553 always
-    * label *label545
   637 label *label546
   638 op add *tmp89 :y 12
   639 draw line 163 :y 163 *tmp89
   640 draw line 157 *tmp89 163 *tmp89
   641 jump *label553 always
-    * label *label547
   642 label *label548
   643 op sub *tmp97 :y 1
   644 draw lineRect 156 *tmp97 9 14
   645 op add *tmp98 :y 6
   646 draw line 157 *tmp98 164 *tmp98
   647 jump *label553 always
-    * label *label549
   648 label *label550
   649 draw line 157 :y 164 :y
   650 op add *tmp104 :y 12
 
   653 draw line 157 *tmp105 164 *tmp105
   654 draw line 157 *tmp105 157 *tmp104
   655 draw line 157 *tmp104 164 *tmp104
-    * label *label551
-    * label *label552
   656 label *label553
-    * label *label554
   657 op idiv :displayItem:amount :displayItem:amount 10
   658 jump *label555 notEqual :displayItem:amount 0
   659 jump *label673 always
   660 label *label555
-    * label *label556
-    * label *label557
-    * label *label558
   661 op mod *tmp19 :displayItem:amount 10
   662 # "Function: def drawDigit(in x, in y, in digit)"
   663 multijump *label559 *tmp19 0 (m:*label86)
 
   685 op sub *tmp26 :y 1
   686 draw lineRect 145 *tmp26 9 14
   687 jump *label590 always
-    * label *label570
   688 label *label571
   689 op add *tmp31 :y 12
   690 draw line 152 :y 152 *tmp31
   691 jump *label590 always
-    * label *label572
   692 label *label573
   693 draw line 146 :y 153 :y
   694 op add *tmp33 :y 6
 
   698 draw line 153 *tmp33 153 *tmp40
   699 draw line 146 *tmp40 153 *tmp40
   700 jump *label590 always
-    * label *label574
   701 label *label575
   702 op add *tmp46 :y 12
   703 draw line 153 :y 153 *tmp46
 
   706 draw line 146 *tmp48 153 *tmp48
   707 draw line 146 *tmp46 153 *tmp46
   708 jump *label590 always
-    * label *label576
   709 label *label577
   710 op add *tmp56 :y 12
   711 draw line 153 :y 153 *tmp56
 
   713 draw line 146 *tmp57 153 *tmp57
   714 draw line 146 *tmp57 146 *tmp56
   715 jump *label590 always
-    * label *label578
   716 label *label579
   717 draw line 146 :y 153 :y
   718 op add *tmp65 :y 6
 
   722 draw line 146 *tmp65 146 *tmp70
   723 draw line 146 *tmp70 153 *tmp70
   724 jump *label590 always
-    * label *label580
   725 label *label581
   726 op add *tmp74 :y 12
   727 draw line 146 :y 146 *tmp74
 
   731 draw line 146 *tmp78 153 *tmp78
   732 draw line 146 *tmp74 153 *tmp74
   733 jump *label590 always
-    * label *label582
   734 label *label583
   735 op add *tmp89 :y 12
   736 draw line 152 :y 152 *tmp89
   737 draw line 146 *tmp89 152 *tmp89
   738 jump *label590 always
-    * label *label584
   739 label *label585
   740 op sub *tmp97 :y 1
   741 draw lineRect 145 *tmp97 9 14
   742 op add *tmp98 :y 6
   743 draw line 146 *tmp98 153 *tmp98
   744 jump *label590 always
-    * label *label586
   745 label *label587
   746 draw line 146 :y 153 :y
   747 op add *tmp104 :y 12
 
   750 draw line 146 *tmp105 153 *tmp105
   751 draw line 146 *tmp105 146 *tmp104
   752 draw line 146 *tmp104 153 *tmp104
-    * label *label588
-    * label *label589
   753 label *label590
-    * label *label591
   754 op idiv :displayItem:amount :displayItem:amount 10
   755 jump *label592 notEqual :displayItem:amount 0
   756 jump *label673 always
   757 label *label592
-    * label *label593
-    * label *label594
-    * label *label595
   758 op mod *tmp19 :displayItem:amount 10
   759 # "Function: def drawDigit(in x, in y, in digit)"
   760 multijump *label596 *tmp19 0 (m:*label86)
 
   782 op sub *tmp26 :y 1
   783 draw lineRect 134 *tmp26 9 14
   784 jump *label627 always
-    * label *label607
   785 label *label608
   786 op add *tmp31 :y 12
   787 draw line 141 :y 141 *tmp31
   788 jump *label627 always
-    * label *label609
   789 label *label610
   790 draw line 135 :y 142 :y
   791 op add *tmp33 :y 6
 
   795 draw line 142 *tmp33 142 *tmp40
   796 draw line 135 *tmp40 142 *tmp40
   797 jump *label627 always
-    * label *label611
   798 label *label612
   799 op add *tmp46 :y 12
   800 draw line 142 :y 142 *tmp46
 
   803 draw line 135 *tmp48 142 *tmp48
   804 draw line 135 *tmp46 142 *tmp46
   805 jump *label627 always
-    * label *label613
   806 label *label614
   807 op add *tmp56 :y 12
   808 draw line 142 :y 142 *tmp56
 
   810 draw line 135 *tmp57 142 *tmp57
   811 draw line 135 *tmp57 135 *tmp56
   812 jump *label627 always
-    * label *label615
   813 label *label616
   814 draw line 135 :y 142 :y
   815 op add *tmp65 :y 6
 
   819 draw line 135 *tmp65 135 *tmp70
   820 draw line 135 *tmp70 142 *tmp70
   821 jump *label627 always
-    * label *label617
   822 label *label618
   823 op add *tmp74 :y 12
   824 draw line 135 :y 135 *tmp74
 
   828 draw line 135 *tmp78 142 *tmp78
   829 draw line 135 *tmp74 142 *tmp74
   830 jump *label627 always
-    * label *label619
   831 label *label620
   832 op add *tmp89 :y 12
   833 draw line 141 :y 141 *tmp89
   834 draw line 135 *tmp89 141 *tmp89
   835 jump *label627 always
-    * label *label621
   836 label *label622
   837 op sub *tmp97 :y 1
   838 draw lineRect 134 *tmp97 9 14
   839 op add *tmp98 :y 6
   840 draw line 135 *tmp98 142 *tmp98
   841 jump *label627 always
-    * label *label623
   842 label *label624
   843 draw line 135 :y 142 :y
   844 op add *tmp104 :y 12
 
   847 draw line 135 *tmp105 142 *tmp105
   848 draw line 135 *tmp105 135 *tmp104
   849 draw line 135 *tmp104 142 *tmp104
-    * label *label625
-    * label *label626
   850 label *label627
-    * label *label628
   851 op idiv :displayItem:amount :displayItem:amount 10
   852 jump *label629 notEqual :displayItem:amount 0
   853 jump *label673 always
   854 label *label629
-    * label *label630
-    * label *label631
-    * label *label632
   855 op mod *tmp19 :displayItem:amount 10
   856 # "Function: def drawDigit(in x, in y, in digit)"
   857 multijump *label633 *tmp19 0 (m:*label86)
 
   879 op sub *tmp26 :y 1
   880 draw lineRect 123 *tmp26 9 14
   881 jump *label664 always
-    * label *label644
   882 label *label645
   883 op add *tmp31 :y 12
   884 draw line 130 :y 130 *tmp31
   885 jump *label664 always
-    * label *label646
   886 label *label647
   887 draw line 124 :y 131 :y
   888 op add *tmp33 :y 6
 
   892 draw line 131 *tmp33 131 *tmp40
   893 draw line 124 *tmp40 131 *tmp40
   894 jump *label664 always
-    * label *label648
   895 label *label649
   896 op add *tmp46 :y 12
   897 draw line 131 :y 131 *tmp46
 
   900 draw line 124 *tmp48 131 *tmp48
   901 draw line 124 *tmp46 131 *tmp46
   902 jump *label664 always
-    * label *label650
   903 label *label651
   904 op add *tmp56 :y 12
   905 draw line 131 :y 131 *tmp56
 
   907 draw line 124 *tmp57 131 *tmp57
   908 draw line 124 *tmp57 124 *tmp56
   909 jump *label664 always
-    * label *label652
   910 label *label653
   911 draw line 124 :y 131 :y
   912 op add *tmp65 :y 6
 
   916 draw line 124 *tmp65 124 *tmp70
   917 draw line 124 *tmp70 131 *tmp70
   918 jump *label664 always
-    * label *label654
   919 label *label655
   920 op add *tmp74 :y 12
   921 draw line 124 :y 124 *tmp74
 
   925 draw line 124 *tmp78 131 *tmp78
   926 draw line 124 *tmp74 131 *tmp74
   927 jump *label664 always
-    * label *label656
   928 label *label657
   929 op add *tmp89 :y 12
   930 draw line 130 :y 130 *tmp89
   931 draw line 124 *tmp89 130 *tmp89
   932 jump *label664 always
-    * label *label658
   933 label *label659
   934 op sub *tmp97 :y 1
   935 draw lineRect 123 *tmp97 9 14
   936 op add *tmp98 :y 6
   937 draw line 124 *tmp98 131 *tmp98
   938 jump *label664 always
-    * label *label660
   939 label *label661
   940 draw line 124 :y 131 :y
   941 op add *tmp104 :y 12
 
   944 draw line 124 *tmp105 131 *tmp105
   945 draw line 124 *tmp105 124 *tmp104
   946 draw line 124 *tmp104 131 *tmp104
-    * label *label662
-    * label *label663
   947 label *label664
-    * label *label665
   948 op idiv :displayItem:amount :displayItem:amount 10
   949 jump *label666 notEqual :displayItem:amount 0
   950 jump *label673 always
   951 label *label666
-    * label *label667
-    * label *label668
-    * label *label669
   952 # "Function: def drawDigit12(in x, in y, in digit)"
   953 jump *label670 notEqual :displayItem:amount 1
   954 op add *tmp122 :y 12
 
   963 draw line 120 *tmp124 120 *tmp131
   964 draw line 113 *tmp131 120 *tmp131
   965 label *label671
-    * label *label672
   966 label *label673
   967 label *label44
   968 op add :index :index 1
 
   970 jump *label45 notEqual :index 8
   971 drawflush display1
   972 set :y 152
-    * label *label254
   973 # "Function: def eraseNumbers(in first_column)"
   974 draw color 0 0 80 255
   975 jump *label255 always
 
   978 label *label255
   979 draw rect 109 0 176 176
   980 label *label256
-    * label *label257
   981 label *label45
-    * label *label46
-    * label *label25
   982 multijump *tmp10 0 0 (m:marker1)
   983 multilabel *label42 (m:marker1)
-    * label *label26
   984 drawflush display1
   985 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   247 draw line 71 *tmp104 78 *tmp104
   248 label *label397
   249 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label399 notEqual :displayItem:amount 0
-    * jump *label517 always
+  250 jump *label517 equal :displayItem:amount 0
   251 label *label399
   252 op mod *tmp19 :displayItem:amount 10
   253 # "Function: def drawDigit(in x, in y, in digit)"
 
   343 draw line 60 *tmp104 67 *tmp104
   344 label *label434
   345 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label436 notEqual :displayItem:amount 0
-    * jump *label517 always
+  346 jump *label517 equal :displayItem:amount 0
   347 label *label436
   348 op mod *tmp19 :displayItem:amount 10
   349 # "Function: def drawDigit(in x, in y, in digit)"
 
   439 draw line 49 *tmp104 56 *tmp104
   440 label *label471
   441 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label473 notEqual :displayItem:amount 0
-    * jump *label517 always
+  442 jump *label517 equal :displayItem:amount 0
   443 label *label473
   444 op mod *tmp19 :displayItem:amount 10
   445 # "Function: def drawDigit(in x, in y, in digit)"
 
   535 draw line 38 *tmp104 45 *tmp104
   536 label *label508
   537 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label510 notEqual :displayItem:amount 0
-    * jump *label517 always
+  538 jump *label517 equal :displayItem:amount 0
   539 label *label510
   540 # "Function: def drawDigit12(in x, in y, in digit)"
   541 jump *label514 notEqual :displayItem:amount 1
 
   651 draw line 157 *tmp104 164 *tmp104
   652 label *label553
   653 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label555 notEqual :displayItem:amount 0
-    * jump *label673 always
+  654 jump *label673 equal :displayItem:amount 0
   655 label *label555
   656 op mod *tmp19 :displayItem:amount 10
   657 # "Function: def drawDigit(in x, in y, in digit)"
 
   747 draw line 146 *tmp104 153 *tmp104
   748 label *label590
   749 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label592 notEqual :displayItem:amount 0
-    * jump *label673 always
+  750 jump *label673 equal :displayItem:amount 0
   751 label *label592
   752 op mod *tmp19 :displayItem:amount 10
   753 # "Function: def drawDigit(in x, in y, in digit)"
 
   843 draw line 135 *tmp104 142 *tmp104
   844 label *label627
   845 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label629 notEqual :displayItem:amount 0
-    * jump *label673 always
+  846 jump *label673 equal :displayItem:amount 0
   847 label *label629
   848 op mod *tmp19 :displayItem:amount 10
   849 # "Function: def drawDigit(in x, in y, in digit)"
 
   939 draw line 124 *tmp104 131 *tmp104
   940 label *label664
   941 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label666 notEqual :displayItem:amount 0
-    * jump *label673 always
+  942 jump *label673 equal :displayItem:amount 0
   943 label *label666
   944 # "Function: def drawDigit12(in x, in y, in digit)"
   945 jump *label670 notEqual :displayItem:amount 1

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   248 label *label397
   249 op idiv :displayItem:amount :displayItem:amount 10
   250 jump *label517 equal :displayItem:amount 0
-    * label *label399
   251 op mod *tmp19 :displayItem:amount 10
   252 # "Function: def drawDigit(in x, in y, in digit)"
   253 multijump *label403 *tmp19 0 (m:*label86)
 
   343 label *label434
   344 op idiv :displayItem:amount :displayItem:amount 10
   345 jump *label517 equal :displayItem:amount 0
-    * label *label436
   346 op mod *tmp19 :displayItem:amount 10
   347 # "Function: def drawDigit(in x, in y, in digit)"
   348 multijump *label440 *tmp19 0 (m:*label86)
 
   438 label *label471
   439 op idiv :displayItem:amount :displayItem:amount 10
   440 jump *label517 equal :displayItem:amount 0
-    * label *label473
   441 op mod *tmp19 :displayItem:amount 10
   442 # "Function: def drawDigit(in x, in y, in digit)"
   443 multijump *label477 *tmp19 0 (m:*label86)
 
   533 label *label508
   534 op idiv :displayItem:amount :displayItem:amount 10
   535 jump *label517 equal :displayItem:amount 0
-    * label *label510
   536 # "Function: def drawDigit12(in x, in y, in digit)"
   537 jump *label514 notEqual :displayItem:amount 1
   538 op add *tmp122 :y 12
 
   648 label *label553
   649 op idiv :displayItem:amount :displayItem:amount 10
   650 jump *label673 equal :displayItem:amount 0
-    * label *label555
   651 op mod *tmp19 :displayItem:amount 10
   652 # "Function: def drawDigit(in x, in y, in digit)"
   653 multijump *label559 *tmp19 0 (m:*label86)
 
   743 label *label590
   744 op idiv :displayItem:amount :displayItem:amount 10
   745 jump *label673 equal :displayItem:amount 0
-    * label *label592
   746 op mod *tmp19 :displayItem:amount 10
   747 # "Function: def drawDigit(in x, in y, in digit)"
   748 multijump *label596 *tmp19 0 (m:*label86)
 
   838 label *label627
   839 op idiv :displayItem:amount :displayItem:amount 10
   840 jump *label673 equal :displayItem:amount 0
-    * label *label629
   841 op mod *tmp19 :displayItem:amount 10
   842 # "Function: def drawDigit(in x, in y, in digit)"
   843 multijump *label633 *tmp19 0 (m:*label86)
 
   933 label *label664
   934 op idiv :displayItem:amount :displayItem:amount 10
   935 jump *label673 equal :displayItem:amount 0
-    * label *label666
   936 # "Function: def drawDigit12(in x, in y, in digit)"
   937 jump *label670 notEqual :displayItem:amount 1
   938 op add *tmp122 :y 12

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   247 draw line 71 *tmp104 78 *tmp104
   248 label *label397
   249 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label517 equal :displayItem:amount 0
+  250 jump *label44 equal :displayItem:amount 0
   251 op mod *tmp19 :displayItem:amount 10
   252 # "Function: def drawDigit(in x, in y, in digit)"
   253 multijump *label403 *tmp19 0 (m:*label86)
 
   342 draw line 60 *tmp104 67 *tmp104
   343 label *label434
   344 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label517 equal :displayItem:amount 0
+  345 jump *label44 equal :displayItem:amount 0
   346 op mod *tmp19 :displayItem:amount 10
   347 # "Function: def drawDigit(in x, in y, in digit)"
   348 multijump *label440 *tmp19 0 (m:*label86)
 
   437 draw line 49 *tmp104 56 *tmp104
   438 label *label471
   439 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label517 equal :displayItem:amount 0
+  440 jump *label44 equal :displayItem:amount 0
   441 op mod *tmp19 :displayItem:amount 10
   442 # "Function: def drawDigit(in x, in y, in digit)"
   443 multijump *label477 *tmp19 0 (m:*label86)
 
   532 draw line 38 *tmp104 45 *tmp104
   533 label *label508
   534 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label517 equal :displayItem:amount 0
+  535 jump *label44 equal :displayItem:amount 0
   536 # "Function: def drawDigit12(in x, in y, in digit)"
   537 jump *label514 notEqual :displayItem:amount 1
   538 op add *tmp122 :y 12
   539 draw line 33 :y 33 *tmp122
-    * jump *label515 always
+  540 jump *label44 always
   541 label *label514
   542 draw line 27 :y 34 :y
   543 op add *tmp124 :y 6

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-21 instructions):
 
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
     5 jump *label260 always
-    * draw rect 93 0 16 176
     6 label *label260
     7 # "Function: def eraseImages(in first_column)"
     8 draw color 0 0 80 255
     9 jump *label263 always
-    * draw rect 0 0 23 176
-    * jump *label264 always
    10 label *label263
    11 draw rect 93 0 16 176
    12 label *label264
    13 draw color 255 255 255 255
    14 draw image 15 159 @sand 16 0
    15 jump *label267 always
-    * draw color 255 255 255 255
    16 label *label267
    17 draw image 15 139 @copper 16 0
    18 jump *label273 always
-    * draw color 255 255 255 255
    19 label *label273
    20 draw image 15 119 @lead 16 0
    21 jump *label279 always
-    * draw color 255 255 255 255
    22 label *label279
    23 draw image 15 99 @coal 16 0
    24 jump *label285 always
-    * draw color 255 255 255 255
    25 label *label285
    26 draw image 15 79 @titanium 16 0
    27 jump *label291 always
-    * draw color 255 255 255 255
    28 label *label291
    29 draw image 15 59 @thorium 16 0
    30 jump *label297 always
-    * draw color 255 255 255 255
    31 label *label297
    32 draw image 15 39 @scrap 16 0
    33 jump *label303 always
-    * draw color 255 255 255 255
    34 label *label303
    35 draw image 15 19 @graphite 16 0
    36 draw color 255 255 255 255
    37 draw image 101 159 @metaglass 16 0
    38 jump *label315 always
-    * draw color 255 255 255 255
    39 label *label315
    40 draw image 101 139 @silicon 16 0
    41 jump *label321 always
-    * draw color 255 255 255 255
    42 label *label321
    43 draw image 101 119 @pyratite 16 0
    44 jump *label327 always
-    * draw color 255 255 255 255
    45 label *label327
    46 draw image 101 99 @blast-compound 16 0
    47 jump *label333 always
-    * draw color 255 255 255 255
    48 label *label333
    49 draw image 101 79 @plastanium 16 0
    50 jump *label339 always
-    * draw color 255 255 255 255
    51 label *label339
    52 draw image 101 59 @phase-fabric 16 0
    53 jump *label345 always
-    * draw color 255 255 255 255
    54 label *label345
    55 draw image 101 39 @surge-alloy 16 0
    56 jump *label351 always
-    * draw color 255 255 255 255
    57 label *label351
    58 draw image 101 19 @spore-pod 16 0
    59 jump *label357 always
-    * draw color 255 255 255 255
    60 label *label357
    61 drawflush display1
    62 set :y 152
 
    64 draw color 0 0 80 255
    65 draw rect 23 0 70 176
    66 jump *label252 always
-    * draw rect 109 0 176 176
    67 label *label252
    68 set :index 0
    69 set :item @sand
 
   527 op add *tmp131 :y 12
   528 draw line 34 *tmp124 34 *tmp131
   529 draw line 27 *tmp131 34 *tmp131
-    * label *label515
-    * label *label517
   530 jump *label44 always
   531 label *label43
   532 # "Function: void displayItem(in x, in y)"
 
   936 # "Function: def eraseNumbers(in first_column)"
   937 draw color 0 0 80 255
   938 jump *label255 always
-    * draw rect 23 0 70 176
-    * jump *label256 always
   939 label *label255
   940 draw rect 109 0 176 176
   941 label *label256

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
     9 jump *label263 always
    10 label *label263
    11 draw rect 93 0 16 176
-    * label *label264
    12 draw color 255 255 255 255
    13 draw image 15 159 @sand 16 0
    14 jump *label267 always
 
   937 jump *label255 always
   938 label *label255
   939 draw rect 109 0 176 176
-    * label *label256
   940 label *label45
   941 multijump *tmp10 0 0 (m:marker1)
   942 multilabel *label42 (m:marker1)

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-20 instructions):
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * jump *label260 always
     5 label *label260
     6 # "Function: def eraseImages(in first_column)"
     7 draw color 0 0 80 255
-    * jump *label263 always
     8 label *label263
     9 draw rect 93 0 16 176
    10 draw color 255 255 255 255
    11 draw image 15 159 @sand 16 0
-    * jump *label267 always
    12 label *label267
    13 draw image 15 139 @copper 16 0
-    * jump *label273 always
    14 label *label273
    15 draw image 15 119 @lead 16 0
-    * jump *label279 always
    16 label *label279
    17 draw image 15 99 @coal 16 0
-    * jump *label285 always
    18 label *label285
    19 draw image 15 79 @titanium 16 0
-    * jump *label291 always
    20 label *label291
    21 draw image 15 59 @thorium 16 0
-    * jump *label297 always
    22 label *label297
    23 draw image 15 39 @scrap 16 0
-    * jump *label303 always
    24 label *label303
    25 draw image 15 19 @graphite 16 0
    26 draw color 255 255 255 255
    27 draw image 101 159 @metaglass 16 0
-    * jump *label315 always
    28 label *label315
    29 draw image 101 139 @silicon 16 0
-    * jump *label321 always
    30 label *label321
    31 draw image 101 119 @pyratite 16 0
-    * jump *label327 always
    32 label *label327
    33 draw image 101 99 @blast-compound 16 0
-    * jump *label333 always
    34 label *label333
    35 draw image 101 79 @plastanium 16 0
-    * jump *label339 always
    36 label *label339
    37 draw image 101 59 @phase-fabric 16 0
-    * jump *label345 always
    38 label *label345
    39 draw image 101 39 @surge-alloy 16 0
-    * jump *label351 always
    40 label *label351
    41 draw image 101 19 @spore-pod 16 0
-    * jump *label357 always
    42 label *label357
    43 drawflush display1
    44 set :y 152
    45 # "Function: def eraseNumbers(in first_column)"
    46 draw color 0 0 80 255
    47 draw rect 23 0 70 176
-    * jump *label252 always
    48 label *label252
    49 set :index 0
    50 set :item @sand
 
   916 set :y 152
   917 # "Function: def eraseNumbers(in first_column)"
   918 draw color 0 0 80 255
-    * jump *label255 always
   919 label *label255
   920 draw rect 109 0 176 176
   921 label *label45
   922 multijump *tmp10 0 0 (m:marker1)
   923 multilabel *label42 (m:marker1)
   924 drawflush display1
-    * end

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     2 # "Function: def eraseImages(in first_column)"
     3 draw color 0 0 80 255
     4 draw rect 0 0 23 176
-    * label *label260
     5 # "Function: def eraseImages(in first_column)"
     6 draw color 0 0 80 255
-    * label *label263
     7 draw rect 93 0 16 176
     8 draw color 255 255 255 255
     9 draw image 15 159 @sand 16 0
-    * label *label267
    10 draw image 15 139 @copper 16 0
-    * label *label273
    11 draw image 15 119 @lead 16 0
-    * label *label279
    12 draw image 15 99 @coal 16 0
-    * label *label285
    13 draw image 15 79 @titanium 16 0
-    * label *label291
    14 draw image 15 59 @thorium 16 0
-    * label *label297
    15 draw image 15 39 @scrap 16 0
-    * label *label303
    16 draw image 15 19 @graphite 16 0
    17 draw color 255 255 255 255
    18 draw image 101 159 @metaglass 16 0
-    * label *label315
    19 draw image 101 139 @silicon 16 0
-    * label *label321
    20 draw image 101 119 @pyratite 16 0
-    * label *label327
    21 draw image 101 99 @blast-compound 16 0
-    * label *label333
    22 draw image 101 79 @plastanium 16 0
-    * label *label339
    23 draw image 101 59 @phase-fabric 16 0
-    * label *label345
    24 draw image 101 39 @surge-alloy 16 0
-    * label *label351
    25 draw image 101 19 @spore-pod 16 0
-    * label *label357
    26 drawflush display1
    27 set :y 152
    28 # "Function: def eraseNumbers(in first_column)"
    29 draw color 0 0 80 255
    30 draw rect 23 0 70 176
-    * label *label252
    31 set :index 0
    32 set :item @sand
    33 op add *tmp10 @counter 1
 
   898 set :y 152
   899 # "Function: def eraseNumbers(in first_column)"
   900 draw color 0 0 80 255
-    * label *label255
   901 draw rect 109 0 176 176
   902 label *label45
   903 multijump *tmp10 0 0 (m:marker1)

Final code before resolving virtual instructions:

set AMOUNT 12345
draw stroke 2
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
draw image 15 159 @sand 16 0
draw image 15 139 @copper 16 0
draw image 15 119 @lead 16 0
draw image 15 99 @coal 16 0
draw image 15 79 @titanium 16 0
draw image 15 59 @thorium 16 0
draw image 15 39 @scrap 16 0
draw image 15 19 @graphite 16 0
draw color 255 255 255 255
draw image 101 159 @metaglass 16 0
draw image 101 139 @silicon 16 0
draw image 101 119 @pyratite 16 0
draw image 101 99 @blast-compound 16 0
draw image 101 79 @plastanium 16 0
draw image 101 59 @phase-fabric 16 0
draw image 101 39 @surge-alloy 16 0
draw image 101 19 @spore-pod 16 0
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp10 @counter 1
jump *label24 always
multilabel *label27
set :item @copper
op add *tmp10 @counter 1
jump *label24 always
multilabel *label28
set :item @lead
op add *tmp10 @counter 1
jump *label24 always
multilabel *label29
set :item @coal
op add *tmp10 @counter 1
jump *label24 always
multilabel *label30
set :item @titanium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label31
set :item @thorium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label32
set :item @scrap
op add *tmp10 @counter 1
jump *label24 always
multilabel *label33
set :item @graphite
op add *tmp10 @counter 1
jump *label24 always
multilabel *label34
set :item @metaglass
op add *tmp10 @counter 1
jump *label24 always
multilabel *label35
set :item @silicon
op add *tmp10 @counter 1
jump *label24 always
multilabel *label36
set :item @pyratite
op add *tmp10 @counter 1
jump *label24 always
multilabel *label37
set :item @blast-compound
op add *tmp10 @counter 1
jump *label24 always
multilabel *label38
set :item @plastanium
op add *tmp10 @counter 1
jump *label24 always
multilabel *label39
set :item @phase-fabric
op add *tmp10 @counter 1
jump *label24 always
multilabel *label40
set :item @surge-alloy
op add *tmp10 @counter 1
jump *label24 always
multilabel *label41
set :item @spore-pod
set *tmp10 null
label *label24
draw image 0 0 :item 16 0
jump *label43 greaterThanEq :index 8
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label366 *tmp19 0
multilabel *label366
jump *label376 always
multilabel *label367
jump *label378 always
multilabel *label368
jump *label380 always
multilabel *label369
jump *label382 always
multilabel *label370
jump *label384 always
multilabel *label371
jump *label386 always
multilabel *label372
jump *label388 always
multilabel *label373
jump *label390 always
multilabel *label374
jump *label392 always
multilabel *label375
jump *label394 always
label *label376
op sub *tmp26 :y 1
draw lineRect 70 *tmp26 9 14
jump *label397 always
label *label378
op add *tmp31 :y 12
draw line 77 :y 77 *tmp31
jump *label397 always
label *label380
draw line 71 :y 78 :y
op add *tmp33 :y 6
draw line 71 :y 71 *tmp33
draw line 71 *tmp33 78 *tmp33
op add *tmp40 :y 12
draw line 78 *tmp33 78 *tmp40
draw line 71 *tmp40 78 *tmp40
jump *label397 always
label *label382
op add *tmp46 :y 12
draw line 78 :y 78 *tmp46
draw line 71 :y 78 :y
op add *tmp48 :y 6
draw line 71 *tmp48 78 *tmp48
draw line 71 *tmp46 78 *tmp46
jump *label397 always
label *label384
op add *tmp56 :y 12
draw line 78 :y 78 *tmp56
op add *tmp57 :y 6
draw line 71 *tmp57 78 *tmp57
draw line 71 *tmp57 71 *tmp56
jump *label397 always
label *label386
draw line 71 :y 78 :y
op add *tmp65 :y 6
draw line 78 :y 78 *tmp65
draw line 71 *tmp65 78 *tmp65
op add *tmp70 :y 12
draw line 71 *tmp65 71 *tmp70
draw line 71 *tmp70 78 *tmp70
jump *label397 always
label *label388
op add *tmp74 :y 12
draw line 71 :y 71 *tmp74
draw line 71 :y 78 :y
op add *tmp78 :y 6
draw line 78 :y 78 *tmp78
draw line 71 *tmp78 78 *tmp78
draw line 71 *tmp74 78 *tmp74
jump *label397 always
label *label390
op add *tmp89 :y 12
draw line 77 :y 77 *tmp89
draw line 71 *tmp89 77 *tmp89
jump *label397 always
label *label392
op sub *tmp97 :y 1
draw lineRect 70 *tmp97 9 14
op add *tmp98 :y 6
draw line 71 *tmp98 78 *tmp98
jump *label397 always
label *label394
draw line 71 :y 78 :y
op add *tmp104 :y 12
draw line 78 :y 78 *tmp104
op add *tmp105 :y 6
draw line 71 *tmp105 78 *tmp105
draw line 71 *tmp105 71 *tmp104
draw line 71 *tmp104 78 *tmp104
label *label397
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label403 *tmp19 0
multilabel *label403
jump *label413 always
multilabel *label404
jump *label415 always
multilabel *label405
jump *label417 always
multilabel *label406
jump *label419 always
multilabel *label407
jump *label421 always
multilabel *label408
jump *label423 always
multilabel *label409
jump *label425 always
multilabel *label410
jump *label427 always
multilabel *label411
jump *label429 always
multilabel *label412
jump *label431 always
label *label413
op sub *tmp26 :y 1
draw lineRect 59 *tmp26 9 14
jump *label434 always
label *label415
op add *tmp31 :y 12
draw line 66 :y 66 *tmp31
jump *label434 always
label *label417
draw line 60 :y 67 :y
op add *tmp33 :y 6
draw line 60 :y 60 *tmp33
draw line 60 *tmp33 67 *tmp33
op add *tmp40 :y 12
draw line 67 *tmp33 67 *tmp40
draw line 60 *tmp40 67 *tmp40
jump *label434 always
label *label419
op add *tmp46 :y 12
draw line 67 :y 67 *tmp46
draw line 60 :y 67 :y
op add *tmp48 :y 6
draw line 60 *tmp48 67 *tmp48
draw line 60 *tmp46 67 *tmp46
jump *label434 always
label *label421
op add *tmp56 :y 12
draw line 67 :y 67 *tmp56
op add *tmp57 :y 6
draw line 60 *tmp57 67 *tmp57
draw line 60 *tmp57 60 *tmp56
jump *label434 always
label *label423
draw line 60 :y 67 :y
op add *tmp65 :y 6
draw line 67 :y 67 *tmp65
draw line 60 *tmp65 67 *tmp65
op add *tmp70 :y 12
draw line 60 *tmp65 60 *tmp70
draw line 60 *tmp70 67 *tmp70
jump *label434 always
label *label425
op add *tmp74 :y 12
draw line 60 :y 60 *tmp74
draw line 60 :y 67 :y
op add *tmp78 :y 6
draw line 67 :y 67 *tmp78
draw line 60 *tmp78 67 *tmp78
draw line 60 *tmp74 67 *tmp74
jump *label434 always
label *label427
op add *tmp89 :y 12
draw line 66 :y 66 *tmp89
draw line 60 *tmp89 66 *tmp89
jump *label434 always
label *label429
op sub *tmp97 :y 1
draw lineRect 59 *tmp97 9 14
op add *tmp98 :y 6
draw line 60 *tmp98 67 *tmp98
jump *label434 always
label *label431
draw line 60 :y 67 :y
op add *tmp104 :y 12
draw line 67 :y 67 *tmp104
op add *tmp105 :y 6
draw line 60 *tmp105 67 *tmp105
draw line 60 *tmp105 60 *tmp104
draw line 60 *tmp104 67 *tmp104
label *label434
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label440 *tmp19 0
multilabel *label440
jump *label450 always
multilabel *label441
jump *label452 always
multilabel *label442
jump *label454 always
multilabel *label443
jump *label456 always
multilabel *label444
jump *label458 always
multilabel *label445
jump *label460 always
multilabel *label446
jump *label462 always
multilabel *label447
jump *label464 always
multilabel *label448
jump *label466 always
multilabel *label449
jump *label468 always
label *label450
op sub *tmp26 :y 1
draw lineRect 48 *tmp26 9 14
jump *label471 always
label *label452
op add *tmp31 :y 12
draw line 55 :y 55 *tmp31
jump *label471 always
label *label454
draw line 49 :y 56 :y
op add *tmp33 :y 6
draw line 49 :y 49 *tmp33
draw line 49 *tmp33 56 *tmp33
op add *tmp40 :y 12
draw line 56 *tmp33 56 *tmp40
draw line 49 *tmp40 56 *tmp40
jump *label471 always
label *label456
op add *tmp46 :y 12
draw line 56 :y 56 *tmp46
draw line 49 :y 56 :y
op add *tmp48 :y 6
draw line 49 *tmp48 56 *tmp48
draw line 49 *tmp46 56 *tmp46
jump *label471 always
label *label458
op add *tmp56 :y 12
draw line 56 :y 56 *tmp56
op add *tmp57 :y 6
draw line 49 *tmp57 56 *tmp57
draw line 49 *tmp57 49 *tmp56
jump *label471 always
label *label460
draw line 49 :y 56 :y
op add *tmp65 :y 6
draw line 56 :y 56 *tmp65
draw line 49 *tmp65 56 *tmp65
op add *tmp70 :y 12
draw line 49 *tmp65 49 *tmp70
draw line 49 *tmp70 56 *tmp70
jump *label471 always
label *label462
op add *tmp74 :y 12
draw line 49 :y 49 *tmp74
draw line 49 :y 56 :y
op add *tmp78 :y 6
draw line 56 :y 56 *tmp78
draw line 49 *tmp78 56 *tmp78
draw line 49 *tmp74 56 *tmp74
jump *label471 always
label *label464
op add *tmp89 :y 12
draw line 55 :y 55 *tmp89
draw line 49 *tmp89 55 *tmp89
jump *label471 always
label *label466
op sub *tmp97 :y 1
draw lineRect 48 *tmp97 9 14
op add *tmp98 :y 6
draw line 49 *tmp98 56 *tmp98
jump *label471 always
label *label468
draw line 49 :y 56 :y
op add *tmp104 :y 12
draw line 56 :y 56 *tmp104
op add *tmp105 :y 6
draw line 49 *tmp105 56 *tmp105
draw line 49 *tmp105 49 *tmp104
draw line 49 *tmp104 56 *tmp104
label *label471
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label477 *tmp19 0
multilabel *label477
jump *label487 always
multilabel *label478
jump *label489 always
multilabel *label479
jump *label491 always
multilabel *label480
jump *label493 always
multilabel *label481
jump *label495 always
multilabel *label482
jump *label497 always
multilabel *label483
jump *label499 always
multilabel *label484
jump *label501 always
multilabel *label485
jump *label503 always
multilabel *label486
jump *label505 always
label *label487
op sub *tmp26 :y 1
draw lineRect 37 *tmp26 9 14
jump *label508 always
label *label489
op add *tmp31 :y 12
draw line 44 :y 44 *tmp31
jump *label508 always
label *label491
draw line 38 :y 45 :y
op add *tmp33 :y 6
draw line 38 :y 38 *tmp33
draw line 38 *tmp33 45 *tmp33
op add *tmp40 :y 12
draw line 45 *tmp33 45 *tmp40
draw line 38 *tmp40 45 *tmp40
jump *label508 always
label *label493
op add *tmp46 :y 12
draw line 45 :y 45 *tmp46
draw line 38 :y 45 :y
op add *tmp48 :y 6
draw line 38 *tmp48 45 *tmp48
draw line 38 *tmp46 45 *tmp46
jump *label508 always
label *label495
op add *tmp56 :y 12
draw line 45 :y 45 *tmp56
op add *tmp57 :y 6
draw line 38 *tmp57 45 *tmp57
draw line 38 *tmp57 38 *tmp56
jump *label508 always
label *label497
draw line 38 :y 45 :y
op add *tmp65 :y 6
draw line 45 :y 45 *tmp65
draw line 38 *tmp65 45 *tmp65
op add *tmp70 :y 12
draw line 38 *tmp65 38 *tmp70
draw line 38 *tmp70 45 *tmp70
jump *label508 always
label *label499
op add *tmp74 :y 12
draw line 38 :y 38 *tmp74
draw line 38 :y 45 :y
op add *tmp78 :y 6
draw line 45 :y 45 *tmp78
draw line 38 *tmp78 45 *tmp78
draw line 38 *tmp74 45 *tmp74
jump *label508 always
label *label501
op add *tmp89 :y 12
draw line 44 :y 44 *tmp89
draw line 38 *tmp89 44 *tmp89
jump *label508 always
label *label503
op sub *tmp97 :y 1
draw lineRect 37 *tmp97 9 14
op add *tmp98 :y 6
draw line 38 *tmp98 45 *tmp98
jump *label508 always
label *label505
draw line 38 :y 45 :y
op add *tmp104 :y 12
draw line 45 :y 45 *tmp104
op add *tmp105 :y 6
draw line 38 *tmp105 45 *tmp105
draw line 38 *tmp105 38 *tmp104
draw line 38 *tmp104 45 *tmp104
label *label508
op idiv :displayItem:amount :displayItem:amount 10
jump *label44 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label514 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 33 :y 33 *tmp122
jump *label44 always
label *label514
draw line 27 :y 34 :y
op add *tmp124 :y 6
draw line 27 :y 27 *tmp124
draw line 27 *tmp124 34 *tmp124
op add *tmp131 :y 12
draw line 34 *tmp124 34 *tmp131
draw line 27 *tmp131 34 *tmp131
jump *label44 always
label *label43
# "Function: void displayItem(in x, in y)"
op max :displayItem:amount AMOUNT 0
draw color 0 255 0 255
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label522 *tmp19 0
multilabel *label522
jump *label532 always
multilabel *label523
jump *label534 always
multilabel *label524
jump *label536 always
multilabel *label525
jump *label538 always
multilabel *label526
jump *label540 always
multilabel *label527
jump *label542 always
multilabel *label528
jump *label544 always
multilabel *label529
jump *label546 always
multilabel *label530
jump *label548 always
multilabel *label531
jump *label550 always
label *label532
op sub *tmp26 :y 1
draw lineRect 156 *tmp26 9 14
jump *label553 always
label *label534
op add *tmp31 :y 12
draw line 163 :y 163 *tmp31
jump *label553 always
label *label536
draw line 157 :y 164 :y
op add *tmp33 :y 6
draw line 157 :y 157 *tmp33
draw line 157 *tmp33 164 *tmp33
op add *tmp40 :y 12
draw line 164 *tmp33 164 *tmp40
draw line 157 *tmp40 164 *tmp40
jump *label553 always
label *label538
op add *tmp46 :y 12
draw line 164 :y 164 *tmp46
draw line 157 :y 164 :y
op add *tmp48 :y 6
draw line 157 *tmp48 164 *tmp48
draw line 157 *tmp46 164 *tmp46
jump *label553 always
label *label540
op add *tmp56 :y 12
draw line 164 :y 164 *tmp56
op add *tmp57 :y 6
draw line 157 *tmp57 164 *tmp57
draw line 157 *tmp57 157 *tmp56
jump *label553 always
label *label542
draw line 157 :y 164 :y
op add *tmp65 :y 6
draw line 164 :y 164 *tmp65
draw line 157 *tmp65 164 *tmp65
op add *tmp70 :y 12
draw line 157 *tmp65 157 *tmp70
draw line 157 *tmp70 164 *tmp70
jump *label553 always
label *label544
op add *tmp74 :y 12
draw line 157 :y 157 *tmp74
draw line 157 :y 164 :y
op add *tmp78 :y 6
draw line 164 :y 164 *tmp78
draw line 157 *tmp78 164 *tmp78
draw line 157 *tmp74 164 *tmp74
jump *label553 always
label *label546
op add *tmp89 :y 12
draw line 163 :y 163 *tmp89
draw line 157 *tmp89 163 *tmp89
jump *label553 always
label *label548
op sub *tmp97 :y 1
draw lineRect 156 *tmp97 9 14
op add *tmp98 :y 6
draw line 157 *tmp98 164 *tmp98
jump *label553 always
label *label550
draw line 157 :y 164 :y
op add *tmp104 :y 12
draw line 164 :y 164 *tmp104
op add *tmp105 :y 6
draw line 157 *tmp105 164 *tmp105
draw line 157 *tmp105 157 *tmp104
draw line 157 *tmp104 164 *tmp104
label *label553
op idiv :displayItem:amount :displayItem:amount 10
jump *label673 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label559 *tmp19 0
multilabel *label559
jump *label569 always
multilabel *label560
jump *label571 always
multilabel *label561
jump *label573 always
multilabel *label562
jump *label575 always
multilabel *label563
jump *label577 always
multilabel *label564
jump *label579 always
multilabel *label565
jump *label581 always
multilabel *label566
jump *label583 always
multilabel *label567
jump *label585 always
multilabel *label568
jump *label587 always
label *label569
op sub *tmp26 :y 1
draw lineRect 145 *tmp26 9 14
jump *label590 always
label *label571
op add *tmp31 :y 12
draw line 152 :y 152 *tmp31
jump *label590 always
label *label573
draw line 146 :y 153 :y
op add *tmp33 :y 6
draw line 146 :y 146 *tmp33
draw line 146 *tmp33 153 *tmp33
op add *tmp40 :y 12
draw line 153 *tmp33 153 *tmp40
draw line 146 *tmp40 153 *tmp40
jump *label590 always
label *label575
op add *tmp46 :y 12
draw line 153 :y 153 *tmp46
draw line 146 :y 153 :y
op add *tmp48 :y 6
draw line 146 *tmp48 153 *tmp48
draw line 146 *tmp46 153 *tmp46
jump *label590 always
label *label577
op add *tmp56 :y 12
draw line 153 :y 153 *tmp56
op add *tmp57 :y 6
draw line 146 *tmp57 153 *tmp57
draw line 146 *tmp57 146 *tmp56
jump *label590 always
label *label579
draw line 146 :y 153 :y
op add *tmp65 :y 6
draw line 153 :y 153 *tmp65
draw line 146 *tmp65 153 *tmp65
op add *tmp70 :y 12
draw line 146 *tmp65 146 *tmp70
draw line 146 *tmp70 153 *tmp70
jump *label590 always
label *label581
op add *tmp74 :y 12
draw line 146 :y 146 *tmp74
draw line 146 :y 153 :y
op add *tmp78 :y 6
draw line 153 :y 153 *tmp78
draw line 146 *tmp78 153 *tmp78
draw line 146 *tmp74 153 *tmp74
jump *label590 always
label *label583
op add *tmp89 :y 12
draw line 152 :y 152 *tmp89
draw line 146 *tmp89 152 *tmp89
jump *label590 always
label *label585
op sub *tmp97 :y 1
draw lineRect 145 *tmp97 9 14
op add *tmp98 :y 6
draw line 146 *tmp98 153 *tmp98
jump *label590 always
label *label587
draw line 146 :y 153 :y
op add *tmp104 :y 12
draw line 153 :y 153 *tmp104
op add *tmp105 :y 6
draw line 146 *tmp105 153 *tmp105
draw line 146 *tmp105 146 *tmp104
draw line 146 *tmp104 153 *tmp104
label *label590
op idiv :displayItem:amount :displayItem:amount 10
jump *label673 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label596 *tmp19 0
multilabel *label596
jump *label606 always
multilabel *label597
jump *label608 always
multilabel *label598
jump *label610 always
multilabel *label599
jump *label612 always
multilabel *label600
jump *label614 always
multilabel *label601
jump *label616 always
multilabel *label602
jump *label618 always
multilabel *label603
jump *label620 always
multilabel *label604
jump *label622 always
multilabel *label605
jump *label624 always
label *label606
op sub *tmp26 :y 1
draw lineRect 134 *tmp26 9 14
jump *label627 always
label *label608
op add *tmp31 :y 12
draw line 141 :y 141 *tmp31
jump *label627 always
label *label610
draw line 135 :y 142 :y
op add *tmp33 :y 6
draw line 135 :y 135 *tmp33
draw line 135 *tmp33 142 *tmp33
op add *tmp40 :y 12
draw line 142 *tmp33 142 *tmp40
draw line 135 *tmp40 142 *tmp40
jump *label627 always
label *label612
op add *tmp46 :y 12
draw line 142 :y 142 *tmp46
draw line 135 :y 142 :y
op add *tmp48 :y 6
draw line 135 *tmp48 142 *tmp48
draw line 135 *tmp46 142 *tmp46
jump *label627 always
label *label614
op add *tmp56 :y 12
draw line 142 :y 142 *tmp56
op add *tmp57 :y 6
draw line 135 *tmp57 142 *tmp57
draw line 135 *tmp57 135 *tmp56
jump *label627 always
label *label616
draw line 135 :y 142 :y
op add *tmp65 :y 6
draw line 142 :y 142 *tmp65
draw line 135 *tmp65 142 *tmp65
op add *tmp70 :y 12
draw line 135 *tmp65 135 *tmp70
draw line 135 *tmp70 142 *tmp70
jump *label627 always
label *label618
op add *tmp74 :y 12
draw line 135 :y 135 *tmp74
draw line 135 :y 142 :y
op add *tmp78 :y 6
draw line 142 :y 142 *tmp78
draw line 135 *tmp78 142 *tmp78
draw line 135 *tmp74 142 *tmp74
jump *label627 always
label *label620
op add *tmp89 :y 12
draw line 141 :y 141 *tmp89
draw line 135 *tmp89 141 *tmp89
jump *label627 always
label *label622
op sub *tmp97 :y 1
draw lineRect 134 *tmp97 9 14
op add *tmp98 :y 6
draw line 135 *tmp98 142 *tmp98
jump *label627 always
label *label624
draw line 135 :y 142 :y
op add *tmp104 :y 12
draw line 142 :y 142 *tmp104
op add *tmp105 :y 6
draw line 135 *tmp105 142 *tmp105
draw line 135 *tmp105 135 *tmp104
draw line 135 *tmp104 142 *tmp104
label *label627
op idiv :displayItem:amount :displayItem:amount 10
jump *label673 equal :displayItem:amount 0
op mod *tmp19 :displayItem:amount 10
# "Function: def drawDigit(in x, in y, in digit)"
multijump *label633 *tmp19 0
multilabel *label633
jump *label643 always
multilabel *label634
jump *label645 always
multilabel *label635
jump *label647 always
multilabel *label636
jump *label649 always
multilabel *label637
jump *label651 always
multilabel *label638
jump *label653 always
multilabel *label639
jump *label655 always
multilabel *label640
jump *label657 always
multilabel *label641
jump *label659 always
multilabel *label642
jump *label661 always
label *label643
op sub *tmp26 :y 1
draw lineRect 123 *tmp26 9 14
jump *label664 always
label *label645
op add *tmp31 :y 12
draw line 130 :y 130 *tmp31
jump *label664 always
label *label647
draw line 124 :y 131 :y
op add *tmp33 :y 6
draw line 124 :y 124 *tmp33
draw line 124 *tmp33 131 *tmp33
op add *tmp40 :y 12
draw line 131 *tmp33 131 *tmp40
draw line 124 *tmp40 131 *tmp40
jump *label664 always
label *label649
op add *tmp46 :y 12
draw line 131 :y 131 *tmp46
draw line 124 :y 131 :y
op add *tmp48 :y 6
draw line 124 *tmp48 131 *tmp48
draw line 124 *tmp46 131 *tmp46
jump *label664 always
label *label651
op add *tmp56 :y 12
draw line 131 :y 131 *tmp56
op add *tmp57 :y 6
draw line 124 *tmp57 131 *tmp57
draw line 124 *tmp57 124 *tmp56
jump *label664 always
label *label653
draw line 124 :y 131 :y
op add *tmp65 :y 6
draw line 131 :y 131 *tmp65
draw line 124 *tmp65 131 *tmp65
op add *tmp70 :y 12
draw line 124 *tmp65 124 *tmp70
draw line 124 *tmp70 131 *tmp70
jump *label664 always
label *label655
op add *tmp74 :y 12
draw line 124 :y 124 *tmp74
draw line 124 :y 131 :y
op add *tmp78 :y 6
draw line 131 :y 131 *tmp78
draw line 124 *tmp78 131 *tmp78
draw line 124 *tmp74 131 *tmp74
jump *label664 always
label *label657
op add *tmp89 :y 12
draw line 130 :y 130 *tmp89
draw line 124 *tmp89 130 *tmp89
jump *label664 always
label *label659
op sub *tmp97 :y 1
draw lineRect 123 *tmp97 9 14
op add *tmp98 :y 6
draw line 124 *tmp98 131 *tmp98
jump *label664 always
label *label661
draw line 124 :y 131 :y
op add *tmp104 :y 12
draw line 131 :y 131 *tmp104
op add *tmp105 :y 6
draw line 124 *tmp105 131 *tmp105
draw line 124 *tmp105 124 *tmp104
draw line 124 *tmp104 131 *tmp104
label *label664
op idiv :displayItem:amount :displayItem:amount 10
jump *label673 equal :displayItem:amount 0
# "Function: def drawDigit12(in x, in y, in digit)"
jump *label670 notEqual :displayItem:amount 1
op add *tmp122 :y 12
draw line 119 :y 119 *tmp122
jump *label671 always
label *label670
draw line 113 :y 120 :y
op add *tmp124 :y 6
draw line 113 :y 113 *tmp124
draw line 113 *tmp124 120 *tmp124
op add *tmp131 :y 12
draw line 120 *tmp124 120 *tmp131
draw line 113 *tmp131 120 *tmp131
label *label671
label *label673
label *label44
op add :index :index 1
op sub :y :y 20
jump *label45 notEqual :index 8
drawflush display1
set :y 152
# "Function: def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label45
multijump *tmp10 0 0
multilabel *label42
drawflush display1
