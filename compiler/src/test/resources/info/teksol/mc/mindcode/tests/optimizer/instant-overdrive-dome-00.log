  1428 instructions before optimizations.
    52 instructions eliminated by Temp Variables Elimination.
   262 instructions eliminated by Dead Code Elimination (2 passes, 8 iterations).
     3 instructions eliminated by Jump Normalization (3 passes, 5 iterations).
    71 instructions eliminated by Jump Optimization (2 passes, 5 iterations).
   104 instructions eliminated by Single Step Elimination (4 passes, 9 iterations).
     2 instructions modified by Expression Optimization (4 iterations).
     2 instructions eliminated by If Expression Optimization (4 iterations).
    93 instructions eliminated by Data Flow Optimization (4 passes, 16 iterations).
     2 instructions added by Loop Optimization (4 iterations).
     3 loops improved by Loop Optimization.
   133 instructions added by Loop Unrolling (7 iterations).
     1 loops unrolled by Loop Unrolling.
    17 instructions eliminated by Jump Straightening (5 iterations).
    15 instructions updated by JumpThreading.
    18 instructions eliminated by Unreachable Code Elimination.
    75 instructions eliminated by Print Merging.
   866 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 207):
  * Replicate loop condition at line 44:1                        cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Replicate loop condition at line 127:1                       cost     1, benefit       25.0, efficiency       25.0
  ! Unroll iteration loop at line 177:9                          cost   209, benefit      275.0, efficiency        1.3

Pass 1: speed optimization selection (cost limit 206):
  * Replicate loop condition at line 127:1                       cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)
  ! Unroll iteration loop at line 177:9                          cost   209, benefit      275.0, efficiency        1.3

Pass 1: speed optimization selection (cost limit 205):
  ! Unroll iteration loop at line 177:9                          cost   209, benefit      275.0, efficiency        1.3

Pass 2: speed optimization selection (cost limit 235):
  * Unroll iteration loop at line 177:9                          cost   177, benefit      275.0, efficiency        1.6 (+129 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-166 instructions):
 
    78 label *label21
    79 set *tmp24 null
    80 label *label22
-    * set *tmp22 *tmp24
    81 jump *label20 always
    82 label *label19
    83 op add :fn1:occupied :fn1:occupied 1
-    * set *tmp22 :fn1:occupied
    84 label *label20
    85 ubind :fn1:type
    86 label *label17
 
    90 op land *tmp28 *tmp25 *tmp27
    91 jump *label16 notEqual *tmp28 false
    92 label *label18
-    * set *tmp7 null
    93 jump *label12 always
    94 label *label11
-    * set *tmp7 null
    95 label *label12
    96 jump *label23 equal :fn1:output false
    97 print :fn1:type
 
   105 jump *label25 equal *tmp30 false
   106 print ", needed: "
   107 print :fn1:needed
-    * set *tmp31 null
   108 jump *label26 always
   109 label *label25
-    * set *tmp31 null
   110 label *label26
   111 print "\n"
-    * set *tmp29 null
   112 jump *label24 always
   113 label *label23
-    * set *tmp29 null
   114 label *label24
   115 set *tmp4 false
   116 jump *label10 always
 
   119 jump *label27 equal *tmp4 false
   120 set *tmp3 UNIT_TYPE
   121 jump *label6 always
-    * set *tmp32 null
   122 jump *label28 always
   123 label *label27
-    * set *tmp32 null
   124 label *label28
   125 setaddr *tmp33 *label32
   126 set :fn0:type @flare
 
   187 label *label49
   188 set *tmp56 null
   189 label *label50
-    * set *tmp54 *tmp56
   190 jump *label48 always
   191 label *label47
   192 op add :fn3:occupied :fn3:occupied 1
-    * set *tmp54 :fn3:occupied
   193 label *label48
   194 ubind :fn3:type
   195 label *label45
 
   199 op land *tmp60 *tmp57 *tmp59
   200 jump *label44 notEqual *tmp60 false
   201 label *label46
-    * set *tmp39 null
   202 jump *label40 always
   203 label *label39
-    * set *tmp39 null
   204 label *label40
   205 jump *label51 equal :fn3:output false
   206 print :fn3:type
 
   214 jump *label53 equal *tmp62 false
   215 print ", needed: "
   216 print :fn3:needed
-    * set *tmp63 null
   217 jump *label54 always
   218 label *label53
-    * set *tmp63 null
   219 label *label54
   220 print "\n"
-    * set *tmp61 null
   221 jump *label52 always
   222 label *label51
-    * set *tmp61 null
   223 label *label52
   224 set *tmp36 false
   225 jump *label38 always
 
   234 label *label55
   235 set *tmp64 null
   236 label *label56
-    * set *tmp35 *tmp64
   237 jump *label37 always
   238 label *label36
-    * set *tmp35 null
   239 label *label37
   240 label *label30
   241 goto *tmp33 marker0
 
   261 op equal *tmp67 :fn5:firstUnit null
   262 jump *label58 equal *tmp67 false
   263 end
-    * set *tmp68 null
   264 jump *label59 always
   265 label *label58
-    * set *tmp68 null
   266 label *label59
   267 label *label60
   268 sensor *tmp69 @unit @controller
 
   283 label *label65
   284 set *tmp74 null
   285 label *label66
-    * set *tmp71 *tmp74
   286 jump *label64 always
   287 label *label63
-    * set *tmp71 null
   288 label *label64
   289 ubind .TYPE
   290 label *label61
 
   294 op land *tmp78 *tmp75 *tmp77
   295 jump *label60 notEqual *tmp78 false
   296 label *label62
-    * set *tmp65 :fn5:count
   297 jump *label57 always
-    * set *tmp65 null
   298 label *label57
   299 set :fn6:currentUnit .UNIT_S1
   300 set :fn7:currentUnit :fn6:currentUnit
 
   307 op equal *tmp86 *tmp85 @this
   308 op land *tmp87 *tmp84 *tmp86
   309 jump *label71 equal *tmp87 false
-    * set *tmp80 :fn7:currentUnit
   310 jump *label68 always
   311 set *tmp88 null
   312 jump *label72 always
   313 label *label71
   314 set *tmp88 null
   315 label *label72
-    * set *tmp82 *tmp88
   316 jump *label70 always
   317 label *label69
-    * set *tmp82 null
   318 label *label70
   319 ubind .TYPE
   320 set *tmp89 @unit
 
   325 sensor *tmp92 @unit @controlled
   326 op equal *tmp93 *tmp92 0
   327 jump *label78 equal *tmp93 false
-    * set *tmp80 @unit
   328 jump *label68 always
-    * set *tmp94 null
   329 jump *label79 always
   330 label *label78
-    * set *tmp94 null
   331 label *label79
   332 ubind .TYPE
   333 label *label76
 
   337 op land *tmp98 *tmp95 *tmp97
   338 jump *label75 notEqual *tmp98 false
   339 label *label77
-    * set *tmp91 null
   340 jump *label74 always
   341 label *label73
-    * set *tmp91 null
   342 label *label74
   343 end
-    * set *tmp80 null
   344 label *label68
   345 ucontrol flag 1
   346 set *tmp79 @unit
 
   359 op equal *tmp106 *tmp105 @this
   360 op land *tmp107 *tmp104 *tmp106
   361 jump *label84 equal *tmp107 false
-    * set *tmp100 :fn9:currentUnit
   362 jump *label81 always
   363 set *tmp108 null
   364 jump *label85 always
   365 label *label84
   366 set *tmp108 null
   367 label *label85
-    * set *tmp102 *tmp108
   368 jump *label83 always
   369 label *label82
-    * set *tmp102 null
   370 label *label83
   371 ubind .TYPE
   372 set *tmp109 @unit
 
   377 sensor *tmp112 @unit @controlled
   378 op equal *tmp113 *tmp112 0
   379 jump *label91 equal *tmp113 false
-    * set *tmp100 @unit
   380 jump *label81 always
-    * set *tmp114 null
   381 jump *label92 always
   382 label *label91
-    * set *tmp114 null
   383 label *label92
   384 ubind .TYPE
   385 label *label89
 
   389 op land *tmp118 *tmp115 *tmp117
   390 jump *label88 notEqual *tmp118 false
   391 label *label90
-    * set *tmp111 null
   392 jump *label87 always
   393 label *label86
-    * set *tmp111 null
   394 label *label87
   395 end
-    * set *tmp100 null
   396 label *label81
   397 ucontrol flag 1
   398 set *tmp99 @unit
 
   409 set :u .UNIT_S1
   410 set .UNIT_S1 .UNIT_P1
   411 set .UNIT_P1 :u
-    * set *tmp124 .UNIT_P1
   412 jump *label94 always
   413 label *label93
-    * set *tmp124 null
   414 label *label94
   415 sensor *tmp125 .UNIT_S1 @itemCapacity
   416 set .UNIT_CAPACITY *tmp125
 
   421 op strictEqual *tmp128 .SPEED null
   422 jump *label95 equal *tmp128 false
   423 stop
-    * set *tmp129 null
   424 jump *label96 always
   425 label *label95
-    * set *tmp129 null
   426 label *label96
   427 print "[gold]Locating core..."
   428 printflush message1
 
   467 op equal *tmp155 *tmp154 @this
   468 op land *tmp156 *tmp153 *tmp155
   469 jump *label107 equal *tmp156 false
-    * set *tmp149 :fn12:currentUnit
   470 jump *label104 always
   471 set *tmp157 null
   472 jump *label108 always
   473 label *label107
   474 set *tmp157 null
   475 label *label108
-    * set *tmp151 *tmp157
   476 jump *label106 always
   477 label *label105
-    * set *tmp151 null
   478 label *label106
   479 ubind .TYPE
   480 set *tmp158 @unit
 
   485 sensor *tmp161 @unit @controlled
   486 op equal *tmp162 *tmp161 0
   487 jump *label114 equal *tmp162 false
-    * set *tmp149 @unit
   488 jump *label104 always
-    * set *tmp163 null
   489 jump *label115 always
   490 label *label114
-    * set *tmp163 null
   491 label *label115
   492 ubind .TYPE
   493 label *label112
 
   497 op land *tmp167 *tmp164 *tmp166
   498 jump *label111 notEqual *tmp167 false
   499 label *label113
-    * set *tmp160 null
   500 jump *label110 always
   501 label *label109
-    * set *tmp160 null
   502 label *label110
   503 end
-    * set *tmp149 null
   504 label *label104
   505 ucontrol flag 1
   506 set *tmp148 @unit
 
   519 op equal *tmp175 *tmp174 @this
   520 op land *tmp176 *tmp173 *tmp175
   521 jump *label120 equal *tmp176 false
-    * set *tmp169 :fn14:currentUnit
   522 jump *label117 always
   523 set *tmp177 null
   524 jump *label121 always
   525 label *label120
   526 set *tmp177 null
   527 label *label121
-    * set *tmp171 *tmp177
   528 jump *label119 always
   529 label *label118
-    * set *tmp171 null
   530 label *label119
   531 ubind .TYPE
   532 set *tmp178 @unit
 
   537 sensor *tmp181 @unit @controlled
   538 op equal *tmp182 *tmp181 0
   539 jump *label127 equal *tmp182 false
-    * set *tmp169 @unit
   540 jump *label117 always
-    * set *tmp183 null
   541 jump *label128 always
   542 label *label127
-    * set *tmp183 null
   543 label *label128
   544 ubind .TYPE
   545 label *label125
 
   549 op land *tmp187 *tmp184 *tmp186
   550 jump *label124 notEqual *tmp187 false
   551 label *label126
-    * set *tmp180 null
   552 jump *label123 always
   553 label *label122
-    * set *tmp180 null
   554 label *label123
   555 end
-    * set *tmp169 null
   556 label *label117
   557 ucontrol flag 1
   558 set *tmp168 @unit
 
   569 set :u .UNIT_S1
   570 set .UNIT_S1 .UNIT_P2
   571 set .UNIT_P2 :u
-    * set *tmp193 .UNIT_P2
   572 jump *label130 always
   573 label *label129
-    * set *tmp193 null
   574 label *label130
   575 sensor *tmp194 .UNIT_S2 @firstItem
   576 op equal *tmp195 *tmp194 @phase-fabric
 
   581 set :u .UNIT_S2
   582 set .UNIT_S2 .UNIT_P2
   583 set .UNIT_P2 :u
-    * set *tmp199 .UNIT_P2
   584 jump *label132 always
   585 label *label131
-    * set *tmp199 null
   586 label *label132
   587 set .GROUP1 "unit  1"
   588 set .GROUP2 "unit 2"
-    * set *tmp147 .GROUP2
   589 jump *label102 always
   590 label *label101
   591 ubind .UNIT_S2
 
   596 set .UNIT_P2 null
   597 set .GROUP1 "unit"
   598 set .GROUP2 ""
-    * set *tmp147 .GROUP2
   599 label *label102
   600 op equal *tmp200 .FOUR_UNITS false
   601 sensor *tmp201 .UNIT_S1 @totalItems
 
   646 print "\n"
   647 set *tmp216 null
   648 label *label138
-    * set *tmp213 *tmp216
   649 label *label136
   650 set :fn16:unit .UNIT_S1
   651 set :fn16:item @silicon
 
   661 op equal *tmp224 *tmp223 @this
   662 op land *tmp225 *tmp222 *tmp224
   663 jump *label143 equal *tmp225 false
-    * set *tmp218 :fn17:currentUnit
   664 jump *label140 always
   665 set *tmp226 null
   666 jump *label144 always
   667 label *label143
   668 set *tmp226 null
   669 label *label144
-    * set *tmp220 *tmp226
   670 jump *label142 always
   671 label *label141
-    * set *tmp220 null
   672 label *label142
   673 ubind .TYPE
   674 set *tmp227 @unit
 
   679 sensor *tmp230 @unit @controlled
   680 op equal *tmp231 *tmp230 0
   681 jump *label150 equal *tmp231 false
-    * set *tmp218 @unit
   682 jump *label140 always
-    * set *tmp232 null
   683 jump *label151 always
   684 label *label150
-    * set *tmp232 null
   685 label *label151
   686 ubind .TYPE
   687 label *label148
 
   691 op land *tmp236 *tmp233 *tmp235
   692 jump *label147 notEqual *tmp236 false
   693 label *label149
-    * set *tmp229 null
   694 jump *label146 always
   695 label *label145
-    * set *tmp229 null
   696 label *label146
   697 end
-    * set *tmp218 null
   698 label *label140
   699 set :fn16:msg ""
   700 sensor *tmp237 @unit @flag
 
   733 label *label157
   734 set *tmp244 *tmp247
   735 label *label155
-    * set *tmp241 *tmp244
   736 jump *label153 always
   737 label *label152
-    * set *tmp241 null
   738 label *label153
   739 op equal *tmp250 :fn16:state 2
   740 jump *label160 equal *tmp250 false
 
   767 set :fn16:distance *tmp263
   768 set *tmp253 :fn16:distance
   769 label *label163
-    * set *tmp251 *tmp253
   770 jump *label161 always
   771 label *label160
-    * set *tmp251 null
   772 label *label161
   773 op equal *tmp264 :fn16:state 3
   774 jump *label166 equal *tmp264 false
 
   777 jump *label170 equal :fn16:supply false
   778 ucontrol itemDrop .DOME .UNIT_CAPACITY
   779 set :fn16:msg ", supplying\n"
-    * set *tmp268 :fn16:msg
   780 jump *label171 always
   781 label *label170
   782 ucontrol approach .DOME_X .DOME_Y 6
   783 set :fn16:msg ", waiting\n"
-    * set *tmp268 :fn16:msg
   784 label *label171
   785 sensor *tmp269 @unit @totalItems
   786 op lessThanEq *tmp270 *tmp269 0
 
   807 set :fn16:distance *tmp278
   808 set *tmp267 :fn16:distance
   809 label *label169
-    * set *tmp265 *tmp267
   810 jump *label167 always
   811 label *label166
-    * set *tmp265 null
   812 label *label167
   813 ucontrol flag :fn16:state
   814 sensor *tmp279 @unit @totalItems
 
   828 print "["
   829 print "] sec"
   830 print "\n"
-    * set *tmp281 null
   831 jump *label175 always
   832 label *label174
   833 print :fn16:msg
-    * set *tmp281 :fn16:msg
   834 label *label175
   835 set *tmp217 @unit
   836 jump *label139 always
 
   853 op equal *tmp291 *tmp290 @this
   854 op land *tmp292 *tmp289 *tmp291
   855 jump *label182 equal *tmp292 false
-    * set *tmp285 :fn19:currentUnit
   856 jump *label179 always
   857 set *tmp293 null
   858 jump *label183 always
   859 label *label182
   860 set *tmp293 null
   861 label *label183
-    * set *tmp287 *tmp293
   862 jump *label181 always
   863 label *label180
-    * set *tmp287 null
   864 label *label181
   865 ubind .TYPE
   866 set *tmp294 @unit
 
   871 sensor *tmp297 @unit @controlled
   872 op equal *tmp298 *tmp297 0
   873 jump *label189 equal *tmp298 false
-    * set *tmp285 @unit
   874 jump *label179 always
-    * set *tmp299 null
   875 jump *label190 always
   876 label *label189
-    * set *tmp299 null
   877 label *label190
   878 ubind .TYPE
   879 label *label187
 
   883 op land *tmp303 *tmp300 *tmp302
   884 jump *label186 notEqual *tmp303 false
   885 label *label188
-    * set *tmp296 null
   886 jump *label185 always
   887 label *label184
-    * set *tmp296 null
   888 label *label185
   889 end
-    * set *tmp285 null
   890 label *label179
   891 set :fn18:msg ""
   892 sensor *tmp304 @unit @flag
 
   925 label *label196
   926 set *tmp311 *tmp314
   927 label *label194
-    * set *tmp308 *tmp311
   928 jump *label192 always
   929 label *label191
-    * set *tmp308 null
   930 label *label192
   931 op equal *tmp317 :fn18:state 2
   932 jump *label199 equal *tmp317 false
 
   959 set :fn18:distance *tmp330
   960 set *tmp320 :fn18:distance
   961 label *label202
-    * set *tmp318 *tmp320
   962 jump *label200 always
   963 label *label199
-    * set *tmp318 null
   964 label *label200
   965 op equal *tmp331 :fn18:state 3
   966 jump *label205 equal *tmp331 false
 
   969 jump *label209 equal :fn18:supply false
   970 ucontrol itemDrop .DOME .UNIT_CAPACITY
   971 set :fn18:msg ", supplying\n"
-    * set *tmp335 :fn18:msg
   972 jump *label210 always
   973 label *label209
   974 ucontrol approach .DOME_X .DOME_Y 6
   975 set :fn18:msg ", waiting\n"
-    * set *tmp335 :fn18:msg
   976 label *label210
   977 sensor *tmp336 @unit @totalItems
   978 op lessThanEq *tmp337 *tmp336 0
 
   999 set :fn18:distance *tmp345
  1000 set *tmp334 :fn18:distance
  1001 label *label208
-    * set *tmp332 *tmp334
  1002 jump *label206 always
  1003 label *label205
-    * set *tmp332 null
  1004 label *label206
  1005 ucontrol flag :fn18:state
  1006 sensor *tmp346 @unit @totalItems
 
  1020 print "["
  1021 print "] sec"
  1022 print "\n"
-    * set *tmp348 null
  1023 jump *label214 always
  1024 label *label213
  1025 print :fn18:msg
-    * set *tmp348 :fn18:msg
  1026 label *label214
  1027 set *tmp284 @unit
  1028 jump *label178 always
 
  1040 set *tmp349 *tmp353
  1041 label *label216
  1042 set .SUPPLY_S_FIRST *tmp349
-    * set *tmp282 .SUPPLY_S_FIRST
  1043 jump *label177 always
  1044 label *label176
-    * set *tmp282 null
  1045 label *label177
  1046 set :fn20:item @phase-fabric
  1047 set :fn20:text "\n[green]Phase fabric[] status:\n"
 
  1065 print "\n"
  1066 set *tmp357 null
  1067 label *label219
-    * set *tmp354 *tmp357
  1068 label *label217
  1069 set :fn21:unit .UNIT_P1
  1070 set :fn21:item @phase-fabric
 
  1080 op equal *tmp365 *tmp364 @this
  1081 op land *tmp366 *tmp363 *tmp365
  1082 jump *label224 equal *tmp366 false
-    * set *tmp359 :fn22:currentUnit
  1083 jump *label221 always
  1084 set *tmp367 null
  1085 jump *label225 always
  1086 label *label224
  1087 set *tmp367 null
  1088 label *label225
-    * set *tmp361 *tmp367
  1089 jump *label223 always
  1090 label *label222
-    * set *tmp361 null
  1091 label *label223
  1092 ubind .TYPE
  1093 set *tmp368 @unit
 
  1098 sensor *tmp371 @unit @controlled
  1099 op equal *tmp372 *tmp371 0
  1100 jump *label231 equal *tmp372 false
-    * set *tmp359 @unit
  1101 jump *label221 always
-    * set *tmp373 null
  1102 jump *label232 always
  1103 label *label231
-    * set *tmp373 null
  1104 label *label232
  1105 ubind .TYPE
  1106 label *label229
 
  1110 op land *tmp377 *tmp374 *tmp376
  1111 jump *label228 notEqual *tmp377 false
  1112 label *label230
-    * set *tmp370 null
  1113 jump *label227 always
  1114 label *label226
-    * set *tmp370 null
  1115 label *label227
  1116 end
-    * set *tmp359 null
  1117 label *label221
  1118 set :fn21:msg ""
  1119 sensor *tmp378 @unit @flag
 
  1152 label *label238
  1153 set *tmp385 *tmp388
  1154 label *label236
-    * set *tmp382 *tmp385
  1155 jump *label234 always
  1156 label *label233
-    * set *tmp382 null
  1157 label *label234
  1158 op equal *tmp391 :fn21:state 2
  1159 jump *label241 equal *tmp391 false
 
  1186 set :fn21:distance *tmp404
  1187 set *tmp394 :fn21:distance
  1188 label *label244
-    * set *tmp392 *tmp394
  1189 jump *label242 always
  1190 label *label241
-    * set *tmp392 null
  1191 label *label242
  1192 op equal *tmp405 :fn21:state 3
  1193 jump *label247 equal *tmp405 false
 
  1196 jump *label251 equal :fn21:supply false
  1197 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1198 set :fn21:msg ", supplying\n"
-    * set *tmp409 :fn21:msg
  1199 jump *label252 always
  1200 label *label251
  1201 ucontrol approach .DOME_X .DOME_Y 6
  1202 set :fn21:msg ", waiting\n"
-    * set *tmp409 :fn21:msg
  1203 label *label252
  1204 sensor *tmp410 @unit @totalItems
  1205 op lessThanEq *tmp411 *tmp410 0
 
  1226 set :fn21:distance *tmp419
  1227 set *tmp408 :fn21:distance
  1228 label *label250
-    * set *tmp406 *tmp408
  1229 jump *label248 always
  1230 label *label247
-    * set *tmp406 null
  1231 label *label248
  1232 ucontrol flag :fn21:state
  1233 sensor *tmp420 @unit @totalItems
 
  1247 print "["
  1248 print "] sec"
  1249 print "\n"
-    * set *tmp422 null
  1250 jump *label256 always
  1251 label *label255
  1252 print :fn21:msg
-    * set *tmp422 :fn21:msg
  1253 label *label256
  1254 set *tmp358 @unit
  1255 jump *label220 always
 
  1272 op equal *tmp432 *tmp431 @this
  1273 op land *tmp433 *tmp430 *tmp432
  1274 jump *label263 equal *tmp433 false
-    * set *tmp426 :fn24:currentUnit
  1275 jump *label260 always
  1276 set *tmp434 null
  1277 jump *label264 always
  1278 label *label263
  1279 set *tmp434 null
  1280 label *label264
-    * set *tmp428 *tmp434
  1281 jump *label262 always
  1282 label *label261
-    * set *tmp428 null
  1283 label *label262
  1284 ubind .TYPE
  1285 set *tmp435 @unit
 
  1290 sensor *tmp438 @unit @controlled
  1291 op equal *tmp439 *tmp438 0
  1292 jump *label270 equal *tmp439 false
-    * set *tmp426 @unit
  1293 jump *label260 always
-    * set *tmp440 null
  1294 jump *label271 always
  1295 label *label270
-    * set *tmp440 null
  1296 label *label271
  1297 ubind .TYPE
  1298 label *label268
 
  1302 op land *tmp444 *tmp441 *tmp443
  1303 jump *label267 notEqual *tmp444 false
  1304 label *label269
-    * set *tmp437 null
  1305 jump *label266 always
  1306 label *label265
-    * set *tmp437 null
  1307 label *label266
  1308 end
-    * set *tmp426 null
  1309 label *label260
  1310 set :fn23:msg ""
  1311 sensor *tmp445 @unit @flag
 
  1344 label *label277
  1345 set *tmp452 *tmp455
  1346 label *label275
-    * set *tmp449 *tmp452
  1347 jump *label273 always
  1348 label *label272
-    * set *tmp449 null
  1349 label *label273
  1350 op equal *tmp458 :fn23:state 2
  1351 jump *label280 equal *tmp458 false
 
  1378 set :fn23:distance *tmp471
  1379 set *tmp461 :fn23:distance
  1380 label *label283
-    * set *tmp459 *tmp461
  1381 jump *label281 always
  1382 label *label280
-    * set *tmp459 null
  1383 label *label281
  1384 op equal *tmp472 :fn23:state 3
  1385 jump *label286 equal *tmp472 false
 
  1388 jump *label290 equal :fn23:supply false
  1389 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1390 set :fn23:msg ", supplying\n"
-    * set *tmp476 :fn23:msg
  1391 jump *label291 always
  1392 label *label290
  1393 ucontrol approach .DOME_X .DOME_Y 6
  1394 set :fn23:msg ", waiting\n"
-    * set *tmp476 :fn23:msg
  1395 label *label291
  1396 sensor *tmp477 @unit @totalItems
  1397 op lessThanEq *tmp478 *tmp477 0
 
  1418 set :fn23:distance *tmp486
  1419 set *tmp475 :fn23:distance
  1420 label *label289
-    * set *tmp473 *tmp475
  1421 jump *label287 always
  1422 label *label286
-    * set *tmp473 null
  1423 label *label287
  1424 ucontrol flag :fn23:state
  1425 sensor *tmp487 @unit @totalItems
 
  1439 print "["
  1440 print "] sec"
  1441 print "\n"
-    * set *tmp489 null
  1442 jump *label295 always
  1443 label *label294
  1444 print :fn23:msg
-    * set *tmp489 :fn23:msg
  1445 label *label295
  1446 set *tmp425 @unit
  1447 jump *label259 always
 
  1459 set *tmp490 *tmp494
  1460 label *label297
  1461 set .SUPPLY_P_FIRST *tmp490
-    * set *tmp423 .SUPPLY_P_FIRST
  1462 jump *label258 always
  1463 label *label257
-    * set *tmp423 null
  1464 label *label258
  1465 op sub *tmp495 @time :start
  1466 op floor *tmp496 *tmp495
 
  1521 label *label311
  1522 set *tmp521 null
  1523 label *label312
-    * set *tmp519 *tmp521
  1524 jump *label310 always
  1525 label *label309
  1526 op add :fn25:occupied :fn25:occupied 1
-    * set *tmp519 :fn25:occupied
  1527 label *label310
  1528 ubind :fn25:type
  1529 label *label307
 
  1533 op land *tmp525 *tmp522 *tmp524
  1534 jump *label306 notEqual *tmp525 false
  1535 label *label308
-    * set *tmp504 null
  1536 jump *label302 always
  1537 label *label301
-    * set *tmp504 null
  1538 label *label302
  1539 jump *label313 equal :fn25:output false
  1540 print :fn25:type
 
  1548 jump *label315 equal *tmp527 false
  1549 print ", needed: "
  1550 print :fn25:needed
-    * set *tmp528 null
  1551 jump *label316 always
  1552 label *label315
-    * set *tmp528 null
  1553 label *label316
  1554 print "\n"
-    * set *tmp526 null
  1555 jump *label314 always
  1556 label *label313
-    * set *tmp526 null
  1557 label *label314
  1558 set *tmp501 false
  1559 jump *label300 always
 
  1561 label *label300
  1562 jump *label317 equal *tmp501 false
  1563 end
-    * set *tmp529 null
  1564 jump *label318 always
  1565 label *label317
-    * set *tmp529 null
  1566 label *label318
  1567 op add *tmp530 @time 5000
  1568 set :unitCheck *tmp530
-    * set *tmp500 :unitCheck
  1569 jump *label299 always
  1570 label *label298
-    * set *tmp500 null
  1571 label *label299
  1572 label *label134
  1573 jump *label133 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-54 instructions):
 
    73 jump *label21 equal *tmp23 false
    74 set *tmp4 true
    75 jump *label10 always
-    * set *tmp24 null
    76 jump *label22 always
    77 label *label21
-    * set *tmp24 null
    78 label *label22
    79 jump *label20 always
    80 label *label19
 
   180 jump *label49 equal *tmp55 false
   181 set *tmp36 true
   182 jump *label38 always
-    * set *tmp56 null
   183 jump *label50 always
   184 label *label49
-    * set *tmp56 null
   185 label *label50
   186 jump *label48 always
   187 label *label47
 
   225 printflush null
   226 set *tmp3 :fn0:type
   227 jump *label6 always
-    * set *tmp64 null
   228 jump *label56 always
   229 label *label55
-    * set *tmp64 null
   230 label *label56
   231 jump *label37 always
   232 label *label36
 
   272 op notEqual *tmp73 .UNIT_S2 null
   273 jump *label65 equal *tmp73 false
   274 jump *label62 always
-    * set *tmp74 null
   275 jump *label66 always
   276 label *label65
-    * set *tmp74 null
   277 label *label66
   278 jump *label64 always
   279 label *label63
 
   300 op land *tmp87 *tmp84 *tmp86
   301 jump *label71 equal *tmp87 false
   302 jump *label68 always
-    * set *tmp88 null
   303 jump *label72 always
   304 label *label71
-    * set *tmp88 null
   305 label *label72
   306 jump *label70 always
   307 label *label69
 
   350 op land *tmp107 *tmp104 *tmp106
   351 jump *label84 equal *tmp107 false
   352 jump *label81 always
-    * set *tmp108 null
   353 jump *label85 always
   354 label *label84
-    * set *tmp108 null
   355 label *label85
   356 jump *label83 always
   357 label *label82
 
   456 op land *tmp156 *tmp153 *tmp155
   457 jump *label107 equal *tmp156 false
   458 jump *label104 always
-    * set *tmp157 null
   459 jump *label108 always
   460 label *label107
-    * set *tmp157 null
   461 label *label108
   462 jump *label106 always
   463 label *label105
 
   506 op land *tmp176 *tmp173 *tmp175
   507 jump *label120 equal *tmp176 false
   508 jump *label117 always
-    * set *tmp177 null
   509 jump *label121 always
   510 label *label120
-    * set *tmp177 null
   511 label *label121
   512 jump *label119 always
   513 label *label118
 
   620 print "["
   621 print "]"
   622 print "\n"
-    * set *tmp216 null
   623 jump *label138 always
   624 label *label137
   625 print "  dome:  [coral]"
 
   627 print "["
   628 print "]"
   629 print "\n"
-    * set *tmp216 null
   630 label *label138
   631 label *label136
   632 set :fn16:unit .UNIT_S1
 
   644 op land *tmp225 *tmp222 *tmp224
   645 jump *label143 equal *tmp225 false
   646 jump *label140 always
-    * set *tmp226 null
   647 jump *label144 always
   648 label *label143
-    * set *tmp226 null
   649 label *label144
   650 jump *label142 always
   651 label *label141
 
   689 op equal *tmp243 *tmp242 :fn16:item
   690 jump *label154 equal *tmp243 false
   691 set :fn16:state 3
-    * set *tmp244 :fn16:state
   692 jump *label155 always
   693 label *label154
   694 sensor *tmp245 @unit @totalItems
 
   710 label *label159
   711 set *tmp247 *tmp249
   712 label *label157
-    * set *tmp244 *tmp247
   713 label *label155
   714 jump *label153 always
   715 label *label152
 
   730 set :fn16:msg ", loading\n"
   731 set *tmp256 :fn16:msg
   732 label *label165
-    * set *tmp253 *tmp256
   733 jump *label163 always
   734 label *label162
   735 ucontrol approach .CORE_X .CORE_Y 6
 
   742 op idiv *tmp262 *tmp261 .SPEED_TENTHS
   743 op div *tmp263 *tmp262 10
   744 set :fn16:distance *tmp263
-    * set *tmp253 :fn16:distance
   745 label *label163
   746 jump *label161 always
   747 label *label160
 
   768 label *label172
   769 set *tmp271 null
   770 label *label173
-    * set *tmp267 *tmp271
   771 jump *label169 always
   772 label *label168
   773 ucontrol approach .DOME_X .DOME_Y 6
 
   780 op idiv *tmp277 *tmp276 .SPEED_TENTHS
   781 op div *tmp278 *tmp277 10
   782 set :fn16:distance *tmp278
-    * set *tmp267 :fn16:distance
   783 label *label169
   784 jump *label167 always
   785 label *label166
 
   828 op land *tmp292 *tmp289 *tmp291
   829 jump *label182 equal *tmp292 false
   830 jump *label179 always
-    * set *tmp293 null
   831 jump *label183 always
   832 label *label182
-    * set *tmp293 null
   833 label *label183
   834 jump *label181 always
   835 label *label180
 
   873 op equal *tmp310 *tmp309 :fn18:item
   874 jump *label193 equal *tmp310 false
   875 set :fn18:state 3
-    * set *tmp311 :fn18:state
   876 jump *label194 always
   877 label *label193
   878 sensor *tmp312 @unit @totalItems
 
   894 label *label198
   895 set *tmp314 *tmp316
   896 label *label196
-    * set *tmp311 *tmp314
   897 label *label194
   898 jump *label192 always
   899 label *label191
 
   914 set :fn18:msg ", loading\n"
   915 set *tmp323 :fn18:msg
   916 label *label204
-    * set *tmp320 *tmp323
   917 jump *label202 always
   918 label *label201
   919 ucontrol approach .CORE_X .CORE_Y 6
 
   926 op idiv *tmp329 *tmp328 .SPEED_TENTHS
   927 op div *tmp330 *tmp329 10
   928 set :fn18:distance *tmp330
-    * set *tmp320 :fn18:distance
   929 label *label202
   930 jump *label200 always
   931 label *label199
 
   952 label *label211
   953 set *tmp338 null
   954 label *label212
-    * set *tmp334 *tmp338
   955 jump *label208 always
   956 label *label207
   957 ucontrol approach .DOME_X .DOME_Y 6
 
   964 op idiv *tmp344 *tmp343 .SPEED_TENTHS
   965 op div *tmp345 *tmp344 10
   966 set :fn18:distance *tmp345
-    * set *tmp334 :fn18:distance
   967 label *label208
   968 jump *label206 always
   969 label *label205
 
  1021 print "["
  1022 print "]"
  1023 print "\n"
-    * set *tmp357 null
  1024 jump *label219 always
  1025 label *label218
  1026 print "  dome:  [coral]"
 
  1028 print "["
  1029 print "]"
  1030 print "\n"
-    * set *tmp357 null
  1031 label *label219
  1032 label *label217
  1033 set :fn21:unit .UNIT_P1
 
  1045 op land *tmp366 *tmp363 *tmp365
  1046 jump *label224 equal *tmp366 false
  1047 jump *label221 always
-    * set *tmp367 null
  1048 jump *label225 always
  1049 label *label224
-    * set *tmp367 null
  1050 label *label225
  1051 jump *label223 always
  1052 label *label222
 
  1090 op equal *tmp384 *tmp383 :fn21:item
  1091 jump *label235 equal *tmp384 false
  1092 set :fn21:state 3
-    * set *tmp385 :fn21:state
  1093 jump *label236 always
  1094 label *label235
  1095 sensor *tmp386 @unit @totalItems
 
  1111 label *label240
  1112 set *tmp388 *tmp390
  1113 label *label238
-    * set *tmp385 *tmp388
  1114 label *label236
  1115 jump *label234 always
  1116 label *label233
 
  1131 set :fn21:msg ", loading\n"
  1132 set *tmp397 :fn21:msg
  1133 label *label246
-    * set *tmp394 *tmp397
  1134 jump *label244 always
  1135 label *label243
  1136 ucontrol approach .CORE_X .CORE_Y 6
 
  1143 op idiv *tmp403 *tmp402 .SPEED_TENTHS
  1144 op div *tmp404 *tmp403 10
  1145 set :fn21:distance *tmp404
-    * set *tmp394 :fn21:distance
  1146 label *label244
  1147 jump *label242 always
  1148 label *label241
 
  1169 label *label253
  1170 set *tmp412 null
  1171 label *label254
-    * set *tmp408 *tmp412
  1172 jump *label250 always
  1173 label *label249
  1174 ucontrol approach .DOME_X .DOME_Y 6
 
  1181 op idiv *tmp418 *tmp417 .SPEED_TENTHS
  1182 op div *tmp419 *tmp418 10
  1183 set :fn21:distance *tmp419
-    * set *tmp408 :fn21:distance
  1184 label *label250
  1185 jump *label248 always
  1186 label *label247
 
  1229 op land *tmp433 *tmp430 *tmp432
  1230 jump *label263 equal *tmp433 false
  1231 jump *label260 always
-    * set *tmp434 null
  1232 jump *label264 always
  1233 label *label263
-    * set *tmp434 null
  1234 label *label264
  1235 jump *label262 always
  1236 label *label261
 
  1274 op equal *tmp451 *tmp450 :fn23:item
  1275 jump *label274 equal *tmp451 false
  1276 set :fn23:state 3
-    * set *tmp452 :fn23:state
  1277 jump *label275 always
  1278 label *label274
  1279 sensor *tmp453 @unit @totalItems
 
  1295 label *label279
  1296 set *tmp455 *tmp457
  1297 label *label277
-    * set *tmp452 *tmp455
  1298 label *label275
  1299 jump *label273 always
  1300 label *label272
 
  1315 set :fn23:msg ", loading\n"
  1316 set *tmp464 :fn23:msg
  1317 label *label285
-    * set *tmp461 *tmp464
  1318 jump *label283 always
  1319 label *label282
  1320 ucontrol approach .CORE_X .CORE_Y 6
 
  1327 op idiv *tmp470 *tmp469 .SPEED_TENTHS
  1328 op div *tmp471 *tmp470 10
  1329 set :fn23:distance *tmp471
-    * set *tmp461 :fn23:distance
  1330 label *label283
  1331 jump *label281 always
  1332 label *label280
 
  1353 label *label292
  1354 set *tmp479 null
  1355 label *label293
-    * set *tmp475 *tmp479
  1356 jump *label289 always
  1357 label *label288
  1358 ucontrol approach .DOME_X .DOME_Y 6
 
  1365 op idiv *tmp485 *tmp484 .SPEED_TENTHS
  1366 op div *tmp486 *tmp485 10
  1367 set :fn23:distance *tmp486
-    * set *tmp475 :fn23:distance
  1368 label *label289
  1369 jump *label287 always
  1370 label *label286
 
  1464 jump *label311 equal *tmp520 false
  1465 set *tmp501 true
  1466 jump *label300 always
-    * set *tmp521 null
  1467 jump *label312 always
  1468 label *label311
-    * set *tmp521 null
  1469 label *label312
  1470 jump *label310 always
  1471 label *label309

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-24 instructions):
 
   695 op equal *tmp246 *tmp245 0
   696 jump *label156 equal *tmp246 false
   697 set :fn16:state 2
-    * set *tmp247 :fn16:state
   698 jump *label157 always
   699 label *label156
   700 set :fn16:msg ", initializing\n"
 
   707 label *label158
   708 set *tmp249 null
   709 label *label159
-    * set *tmp247 *tmp249
   710 label *label157
   711 label *label155
   712 jump *label153 always
 
   722 jump *label164 equal *tmp255 false
   723 ucontrol approach .DOME_X .DOME_Y 6
   724 set :fn16:state 3
-    * set *tmp256 :fn16:state
   725 jump *label165 always
   726 label *label164
   727 set :fn16:msg ", loading\n"
-    * set *tmp256 :fn16:msg
   728 label *label165
   729 jump *label163 always
   730 label *label162
 
   759 jump *label172 equal *tmp270 false
   760 ucontrol approach .CORE_X .CORE_Y 6
   761 set :fn16:state 2
-    * set *tmp271 :fn16:state
   762 jump *label173 always
   763 label *label172
-    * set *tmp271 null
   764 label *label173
   765 jump *label169 always
   766 label *label168
 
   873 op equal *tmp313 *tmp312 0
   874 jump *label195 equal *tmp313 false
   875 set :fn18:state 2
-    * set *tmp314 :fn18:state
   876 jump *label196 always
   877 label *label195
   878 set :fn18:msg ", initializing\n"
 
   885 label *label197
   886 set *tmp316 null
   887 label *label198
-    * set *tmp314 *tmp316
   888 label *label196
   889 label *label194
   890 jump *label192 always
 
   900 jump *label203 equal *tmp322 false
   901 ucontrol approach .DOME_X .DOME_Y 6
   902 set :fn18:state 3
-    * set *tmp323 :fn18:state
   903 jump *label204 always
   904 label *label203
   905 set :fn18:msg ", loading\n"
-    * set *tmp323 :fn18:msg
   906 label *label204
   907 jump *label202 always
   908 label *label201
 
   937 jump *label211 equal *tmp337 false
   938 ucontrol approach .CORE_X .CORE_Y 6
   939 set :fn18:state 2
-    * set *tmp338 :fn18:state
   940 jump *label212 always
   941 label *label211
-    * set *tmp338 null
   942 label *label212
   943 jump *label208 always
   944 label *label207
 
  1084 op equal *tmp387 *tmp386 0
  1085 jump *label237 equal *tmp387 false
  1086 set :fn21:state 2
-    * set *tmp388 :fn21:state
  1087 jump *label238 always
  1088 label *label237
  1089 set :fn21:msg ", initializing\n"
 
  1096 label *label239
  1097 set *tmp390 null
  1098 label *label240
-    * set *tmp388 *tmp390
  1099 label *label238
  1100 label *label236
  1101 jump *label234 always
 
  1111 jump *label245 equal *tmp396 false
  1112 ucontrol approach .DOME_X .DOME_Y 6
  1113 set :fn21:state 3
-    * set *tmp397 :fn21:state
  1114 jump *label246 always
  1115 label *label245
  1116 set :fn21:msg ", loading\n"
-    * set *tmp397 :fn21:msg
  1117 label *label246
  1118 jump *label244 always
  1119 label *label243
 
  1148 jump *label253 equal *tmp411 false
  1149 ucontrol approach .CORE_X .CORE_Y 6
  1150 set :fn21:state 2
-    * set *tmp412 :fn21:state
  1151 jump *label254 always
  1152 label *label253
-    * set *tmp412 null
  1153 label *label254
  1154 jump *label250 always
  1155 label *label249
 
  1262 op equal *tmp454 *tmp453 0
  1263 jump *label276 equal *tmp454 false
  1264 set :fn23:state 2
-    * set *tmp455 :fn23:state
  1265 jump *label277 always
  1266 label *label276
  1267 set :fn23:msg ", initializing\n"
 
  1274 label *label278
  1275 set *tmp457 null
  1276 label *label279
-    * set *tmp455 *tmp457
  1277 label *label277
  1278 label *label275
  1279 jump *label273 always
 
  1289 jump *label284 equal *tmp463 false
  1290 ucontrol approach .DOME_X .DOME_Y 6
  1291 set :fn23:state 3
-    * set *tmp464 :fn23:state
  1292 jump *label285 always
  1293 label *label284
  1294 set :fn23:msg ", loading\n"
-    * set *tmp464 :fn23:msg
  1295 label *label285
  1296 jump *label283 always
  1297 label *label282
 
  1326 jump *label292 equal *tmp478 false
  1327 ucontrol approach .CORE_X .CORE_Y 6
  1328 set :fn23:state 2
-    * set *tmp479 :fn23:state
  1329 jump *label293 always
  1330 label *label292
-    * set *tmp479 null
  1331 label *label293
  1332 jump *label289 always
  1333 label *label288

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   702 ucontrol within .CORE_X .CORE_Y 8 *tmp248
   703 jump *label158 equal *tmp248 false
   704 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp249 null
   705 jump *label159 always
   706 label *label158
-    * set *tmp249 null
   707 label *label159
   708 label *label157
   709 label *label155
 
   878 ucontrol within .CORE_X .CORE_Y 8 *tmp315
   879 jump *label197 equal *tmp315 false
   880 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp316 null
   881 jump *label198 always
   882 label *label197
-    * set *tmp316 null
   883 label *label198
   884 label *label196
   885 label *label194
 
  1087 ucontrol within .CORE_X .CORE_Y 8 *tmp389
  1088 jump *label239 equal *tmp389 false
  1089 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp390 null
  1090 jump *label240 always
  1091 label *label239
-    * set *tmp390 null
  1092 label *label240
  1093 label *label238
  1094 label *label236
 
  1263 ucontrol within .CORE_X .CORE_Y 8 *tmp456
  1264 jump *label278 equal *tmp456 false
  1265 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * set *tmp457 null
  1266 jump *label279 always
  1267 label *label278
-    * set *tmp457 null
  1268 label *label279
  1269 label *label277
  1270 label *label275

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-52 instructions):
 
    37 set :fn1:occupied :fn1:needed
    38 set :fn1:free :fn1:occupied
    39 ubind :fn1:type
-    * set *tmp5 @unit
-    * set :fn1:firstUnit *tmp5
+   40 set :fn1:firstUnit @unit
    41 op notEqual *tmp6 :fn1:firstUnit null
    42 jump *label11 equal *tmp6 false
    43 set :fn2:unit @unit
 
    46 op len *tmp11 *tmp9 *tmp10
    47 op mul *tmp12 2 *tmp11
    48 sensor *tmp13 :fn2:unit @speed
-    * op div *tmp14 *tmp12 *tmp13
-    * set :fn2:travel_time *tmp14
-    * op greaterThanEq *tmp15 :fn2:travel_time 47
-    * set *tmp8 *tmp15
+   49 op div :fn2:travel_time *tmp12 *tmp13
+   50 op greaterThanEq *tmp8 :fn2:travel_time 47
    51 jump *label13 always
    52 set *tmp8 null
    53 label *label13
 
   141 set :fn3:occupied :fn3:needed
   142 set :fn3:free :fn3:occupied
   143 ubind :fn3:type
-    * set *tmp37 @unit
-    * set :fn3:firstUnit *tmp37
+  144 set :fn3:firstUnit @unit
   145 op notEqual *tmp38 :fn3:firstUnit null
   146 jump *label39 equal *tmp38 false
   147 set :fn4:unit @unit
 
   150 op len *tmp43 *tmp41 *tmp42
   151 op mul *tmp44 2 *tmp43
   152 sensor *tmp45 :fn4:unit @speed
-    * op div *tmp46 *tmp44 *tmp45
-    * set :fn4:travel_time *tmp46
-    * op greaterThanEq *tmp47 :fn4:travel_time 47
-    * set *tmp40 *tmp47
+  153 op div :fn4:travel_time *tmp44 *tmp45
+  154 op greaterThanEq *tmp40 :fn4:travel_time 47
   155 jump *label41 always
   156 set *tmp40 null
   157 label *label41
 
   244 set .UNIT_S1 .UNIT_P1
   245 set :fn5:count 0
   246 ubind .TYPE
-    * set *tmp66 @unit
-    * set :fn5:firstUnit *tmp66
+  247 set :fn5:firstUnit @unit
   248 op equal *tmp67 :fn5:firstUnit null
   249 jump *label58 equal *tmp67 false
   250 end
 
   260 set .UNIT_S2 .UNIT_P2
   261 set .UNIT_P2 .UNIT_S1
   262 set .UNIT_S1 .UNIT_P1
-    * set *tmp72 @unit
-    * set .UNIT_P1 *tmp72
+  263 set .UNIT_P1 @unit
   264 op notEqual *tmp73 .UNIT_S2 null
   265 jump *label65 equal *tmp73 false
   266 jump *label62 always
 
   299 label *label69
   300 label *label70
   301 ubind .TYPE
-    * set *tmp89 @unit
-    * set :fn7:firstUnit *tmp89
+  302 set :fn7:firstUnit @unit
   303 op notEqual *tmp90 :fn7:firstUnit null
   304 jump *label73 equal *tmp90 false
   305 label *label75
 
   348 label *label82
   349 label *label83
   350 ubind .TYPE
-    * set *tmp109 @unit
-    * set :fn9:firstUnit *tmp109
+  351 set :fn9:firstUnit @unit
   352 op notEqual *tmp110 :fn9:firstUnit null
   353 jump *label86 equal *tmp110 false
   354 label *label88
 
   390 jump *label94 always
   391 label *label93
   392 label *label94
-    * sensor *tmp125 .UNIT_S1 @itemCapacity
-    * set .UNIT_CAPACITY *tmp125
-    * sensor *tmp126 .UNIT_S1 @speed
-    * set .SPEED *tmp126
-    * op div *tmp127 .SPEED 10
-    * set .SPEED_TENTHS *tmp127
+  393 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
+  394 sensor .SPEED .UNIT_S1 @speed
+  395 op div .SPEED_TENTHS .SPEED 10
   396 op strictEqual *tmp128 .SPEED null
   397 jump *label95 equal *tmp128 false
   398 stop
 
   402 print "[gold]Locating core..."
   403 printflush message1
   404 label *label97
-    * ulocate building core false @copper *tmp131 *tmp132 *tmp133 *tmp130
-    * set .CORE *tmp130
+  405 ulocate building core false @copper 0 0 0 .CORE
   406 label *label98
   407 op equal *tmp134 .CORE null
   408 jump *label97 notEqual *tmp134 false
   409 label *label99
-    * sensor *tmp135 .CORE @x
-    * set .CORE_X *tmp135
-    * sensor *tmp136 .CORE @y
-    * set .CORE_Y *tmp136
-    * sensor *tmp137 .DOME @x
-    * set .DOME_X *tmp137
-    * sensor *tmp138 .DOME @y
-    * set .DOME_Y *tmp138
+  410 sensor .CORE_X .CORE @x
+  411 sensor .CORE_Y .CORE @y
+  412 sensor .DOME_X .DOME @x
+  413 sensor .DOME_Y .DOME @y
   414 set :fn10:unit .UNIT_S1
   415 op sub *tmp140 .DOME_X .CORE_X
   416 op sub *tmp141 .DOME_Y .CORE_Y
   417 op len *tmp142 *tmp140 *tmp141
   418 op mul *tmp143 2 *tmp142
   419 sensor *tmp144 :fn10:unit @speed
-    * op div *tmp145 *tmp143 *tmp144
-    * set :fn10:travel_time *tmp145
-    * op greaterThanEq *tmp146 :fn10:travel_time 47
-    * set *tmp139 *tmp146
+  420 op div :fn10:travel_time *tmp143 *tmp144
+  421 op greaterThanEq *tmp139 :fn10:travel_time 47
   422 jump *label100 always
   423 set *tmp139 null
   424 label *label100
 
   443 label *label105
   444 label *label106
   445 ubind .TYPE
-    * set *tmp158 @unit
-    * set :fn12:firstUnit *tmp158
+  446 set :fn12:firstUnit @unit
   447 op notEqual *tmp159 :fn12:firstUnit null
   448 jump *label109 equal *tmp159 false
   449 label *label111
 
   492 label *label118
   493 label *label119
   494 ubind .TYPE
-    * set *tmp178 @unit
-    * set :fn14:firstUnit *tmp178
+  495 set :fn14:firstUnit @unit
   496 op notEqual *tmp179 :fn14:firstUnit null
   497 jump *label122 equal *tmp179 false
   498 label *label124
 
   563 sensor *tmp201 .UNIT_S1 @totalItems
   564 sensor *tmp202 .UNIT_S2 @totalItems
   565 op lessThan *tmp203 *tmp201 *tmp202
-    * op or *tmp204 *tmp200 *tmp203
-    * set .SUPPLY_S_FIRST *tmp204
+  566 op or .SUPPLY_S_FIRST *tmp200 *tmp203
   567 op equal *tmp205 .FOUR_UNITS false
   568 sensor *tmp206 .UNIT_P1 @totalItems
   569 sensor *tmp207 .UNIT_P2 @totalItems
   570 op lessThan *tmp208 *tmp206 *tmp207
-    * op or *tmp209 *tmp205 *tmp208
-    * set .SUPPLY_P_FIRST *tmp209
-    * op add *tmp210 @time 5000
-    * set :unitCheck *tmp210
+  571 op or .SUPPLY_P_FIRST *tmp205 *tmp208
+  572 op add :unitCheck @time 5000
   573 label *label133
   574 sensor *tmp211 switch1 @enabled
   575 jump *label135 equal *tmp211 false
-    * set *tmp212 @time
-    * set :start *tmp212
+  576 set :start @time
   577 print " === [gold]Supplying Overdrive Dome[] === "
   578 print "\n"
   579 print "\n"
 
   585 set :fn15:item @silicon
   586 set :fn15:text "\n[green]Silicon[] status:\n"
   587 print :fn15:text
-    * sensor *tmp214 .DOME :fn15:item
-    * set :fn15:level *tmp214
+  588 sensor :fn15:level .DOME :fn15:item
   589 op greaterThan *tmp215 :fn15:level 3
   590 jump *label137 equal *tmp215 false
   591 print "  dome:  [green]"
 
   624 label *label141
   625 label *label142
   626 ubind .TYPE
-    * set *tmp227 @unit
-    * set :fn17:firstUnit *tmp227
+  627 set :fn17:firstUnit @unit
   628 op notEqual *tmp228 :fn17:firstUnit null
   629 jump *label145 equal *tmp228 false
   630 label *label147
 
   649 end
   650 label *label140
   651 set :fn16:msg ""
-    * sensor *tmp237 @unit @flag
-    * set :fn16:state *tmp237
+  652 sensor :fn16:state @unit @flag
   653 set :fn16:distance -1
   654 set :fn16:color "gold"
   655 op lessThan *tmp238 :fn16:state 2
 
   705 op sub *tmp260 .CORE_Y *tmp259
   706 op len *tmp261 *tmp258 *tmp260
   707 op idiv *tmp262 *tmp261 .SPEED_TENTHS
-    * op div *tmp263 *tmp262 10
-    * set :fn16:distance *tmp263
+  708 op div :fn16:distance *tmp262 10
   709 label *label163
   710 jump *label161 always
   711 label *label160
 
   740 op sub *tmp275 .DOME_Y *tmp274
   741 op len *tmp276 *tmp273 *tmp275
   742 op idiv *tmp277 *tmp276 .SPEED_TENTHS
-    * op div *tmp278 *tmp277 10
-    * set :fn16:distance *tmp278
+  743 op div :fn16:distance *tmp277 10
   744 label *label169
   745 jump *label167 always
   746 label *label166
 
   796 label *label180
   797 label *label181
   798 ubind .TYPE
-    * set *tmp294 @unit
-    * set :fn19:firstUnit *tmp294
+  799 set :fn19:firstUnit @unit
   800 op notEqual *tmp295 :fn19:firstUnit null
   801 jump *label184 equal *tmp295 false
   802 label *label186
 
   821 end
   822 label *label179
   823 set :fn18:msg ""
-    * sensor *tmp304 @unit @flag
-    * set :fn18:state *tmp304
+  824 sensor :fn18:state @unit @flag
   825 set :fn18:distance -1
   826 set :fn18:color "gold"
   827 op lessThan *tmp305 :fn18:state 2
 
   877 op sub *tmp327 .CORE_Y *tmp326
   878 op len *tmp328 *tmp325 *tmp327
   879 op idiv *tmp329 *tmp328 .SPEED_TENTHS
-    * op div *tmp330 *tmp329 10
-    * set :fn18:distance *tmp330
+  880 op div :fn18:distance *tmp329 10
   881 label *label202
   882 jump *label200 always
   883 label *label199
 
   912 op sub *tmp342 .DOME_Y *tmp341
   913 op len *tmp343 *tmp340 *tmp342
   914 op idiv *tmp344 *tmp343 .SPEED_TENTHS
-    * op div *tmp345 *tmp344 10
-    * set :fn18:distance *tmp345
+  915 op div :fn18:distance *tmp344 10
   916 label *label208
   917 jump *label206 always
   918 label *label205
 
   946 set .UNIT_S2 *tmp284
   947 jump *label215 equal .SUPPLY_S_FIRST false
   948 sensor *tmp350 .UNIT_S1 @totalItems
-    * op greaterThan *tmp351 *tmp350 0
-    * set *tmp349 *tmp351
+  949 op greaterThan *tmp349 *tmp350 0
   950 jump *label216 always
   951 label *label215
   952 sensor *tmp352 .UNIT_S2 @totalItems
-    * op equal *tmp353 *tmp352 0
-    * set *tmp349 *tmp353
+  953 op equal *tmp349 *tmp352 0
   954 label *label216
   955 set .SUPPLY_S_FIRST *tmp349
   956 jump *label177 always
 
   959 set :fn20:item @phase-fabric
   960 set :fn20:text "\n[green]Phase fabric[] status:\n"
   961 print :fn20:text
-    * sensor *tmp355 .DOME :fn20:item
-    * set :fn20:level *tmp355
+  962 sensor :fn20:level .DOME :fn20:item
   963 op greaterThan *tmp356 :fn20:level 3
   964 jump *label218 equal *tmp356 false
   965 print "  dome:  [green]"
 
   998 label *label222
   999 label *label223
  1000 ubind .TYPE
-    * set *tmp368 @unit
-    * set :fn22:firstUnit *tmp368
+ 1001 set :fn22:firstUnit @unit
  1002 op notEqual *tmp369 :fn22:firstUnit null
  1003 jump *label226 equal *tmp369 false
  1004 label *label228
 
  1023 end
  1024 label *label221
  1025 set :fn21:msg ""
-    * sensor *tmp378 @unit @flag
-    * set :fn21:state *tmp378
+ 1026 sensor :fn21:state @unit @flag
  1027 set :fn21:distance -1
  1028 set :fn21:color "gold"
  1029 op lessThan *tmp379 :fn21:state 2
 
  1079 op sub *tmp401 .CORE_Y *tmp400
  1080 op len *tmp402 *tmp399 *tmp401
  1081 op idiv *tmp403 *tmp402 .SPEED_TENTHS
-    * op div *tmp404 *tmp403 10
-    * set :fn21:distance *tmp404
+ 1082 op div :fn21:distance *tmp403 10
  1083 label *label244
  1084 jump *label242 always
  1085 label *label241
 
  1114 op sub *tmp416 .DOME_Y *tmp415
  1115 op len *tmp417 *tmp414 *tmp416
  1116 op idiv *tmp418 *tmp417 .SPEED_TENTHS
-    * op div *tmp419 *tmp418 10
-    * set :fn21:distance *tmp419
+ 1117 op div :fn21:distance *tmp418 10
  1118 label *label250
  1119 jump *label248 always
  1120 label *label247
 
  1170 label *label261
  1171 label *label262
  1172 ubind .TYPE
-    * set *tmp435 @unit
-    * set :fn24:firstUnit *tmp435
+ 1173 set :fn24:firstUnit @unit
  1174 op notEqual *tmp436 :fn24:firstUnit null
  1175 jump *label265 equal *tmp436 false
  1176 label *label267
 
  1195 end
  1196 label *label260
  1197 set :fn23:msg ""
-    * sensor *tmp445 @unit @flag
-    * set :fn23:state *tmp445
+ 1198 sensor :fn23:state @unit @flag
  1199 set :fn23:distance -1
  1200 set :fn23:color "gold"
  1201 op lessThan *tmp446 :fn23:state 2
 
  1251 op sub *tmp468 .CORE_Y *tmp467
  1252 op len *tmp469 *tmp466 *tmp468
  1253 op idiv *tmp470 *tmp469 .SPEED_TENTHS
-    * op div *tmp471 *tmp470 10
-    * set :fn23:distance *tmp471
+ 1254 op div :fn23:distance *tmp470 10
  1255 label *label283
  1256 jump *label281 always
  1257 label *label280
 
  1286 op sub *tmp483 .DOME_Y *tmp482
  1287 op len *tmp484 *tmp481 *tmp483
  1288 op idiv *tmp485 *tmp484 .SPEED_TENTHS
-    * op div *tmp486 *tmp485 10
-    * set :fn23:distance *tmp486
+ 1289 op div :fn23:distance *tmp485 10
  1290 label *label289
  1291 jump *label287 always
  1292 label *label286
 
  1320 set .UNIT_P2 *tmp425
  1321 jump *label296 equal .SUPPLY_P_FIRST false
  1322 sensor *tmp491 .UNIT_P1 @totalItems
-    * op greaterThan *tmp492 *tmp491 0
-    * set *tmp490 *tmp492
+ 1323 op greaterThan *tmp490 *tmp491 0
  1324 jump *label297 always
  1325 label *label296
  1326 sensor *tmp493 .UNIT_P2 @totalItems
-    * op equal *tmp494 *tmp493 0
-    * set *tmp490 *tmp494
+ 1327 op equal *tmp490 *tmp493 0
  1328 label *label297
  1329 set .SUPPLY_P_FIRST *tmp490
  1330 jump *label258 always
 
  1348 set :fn25:occupied :fn25:needed
  1349 set :fn25:free :fn25:occupied
  1350 ubind :fn25:type
-    * set *tmp502 @unit
-    * set :fn25:firstUnit *tmp502
+ 1351 set :fn25:firstUnit @unit
  1352 op notEqual *tmp503 :fn25:firstUnit null
  1353 jump *label301 equal *tmp503 false
  1354 set :fn26:unit @unit
 
  1357 op len *tmp508 *tmp506 *tmp507
  1358 op mul *tmp509 2 *tmp508
  1359 sensor *tmp510 :fn26:unit @speed
-    * op div *tmp511 *tmp509 *tmp510
-    * set :fn26:travel_time *tmp511
-    * op greaterThanEq *tmp512 :fn26:travel_time 47
-    * set *tmp505 *tmp512
+ 1360 op div :fn26:travel_time *tmp509 *tmp510
+ 1361 op greaterThanEq *tmp505 :fn26:travel_time 47
  1362 jump *label303 always
  1363 set *tmp505 null
  1364 label *label303
 
  1427 jump *label318 always
  1428 label *label317
  1429 label *label318
-    * op add *tmp530 @time 5000
-    * set :unitCheck *tmp530
+ 1430 op add :unitCheck @time 5000
  1431 jump *label299 always
  1432 label *label298
  1433 label *label299

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    26 jump *label3 always
    27 label *label5
    28 label *label7
-    * jump *label9 equal true false
    29 printflush null
    30 print "[gold]Looking for suitable unit type:[]"
    31 print "\n"

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-70 instructions):
 
     7 set .CORE_X .CORE_Y
     8 set .DOME dome1
     9 label *label0
-    * op equal *tmp0 .DOME null
-    * jump *label2 equal *tmp0 false
+   10 jump *label2 notEqual .DOME null
    11 print "[gold]Waiting for an overdrive dome to be connected..."
    12 printflush message1
    13 set .DOME dome1
 
    16 label *label2
    17 label *label3
    18 sensor *tmp1 switch1 @enabled
-    * op equal *tmp2 *tmp1 false
-    * jump *label5 equal *tmp2 false
+   19 jump *label5 notEqual *tmp1 false
    20 print "[coral]Activate switch to begin supplying overdrive dome..."
    21 print "\n"
    22 printflush message1
 
    35 set :fn1:free :fn1:occupied
    36 ubind :fn1:type
    37 set :fn1:firstUnit @unit
-    * op notEqual *tmp6 :fn1:firstUnit null
-    * jump *label11 equal *tmp6 false
+   38 jump *label11 equal :fn1:firstUnit null
    39 set :fn2:unit @unit
    40 op sub *tmp9 .DOME_X .CORE_X
    41 op sub *tmp10 .DOME_Y .CORE_Y
 
    62 op or *tmp21 *tmp18 *tmp20
    63 jump *label19 equal *tmp21 false
    64 op add :fn1:free :fn1:free 1
-    * op greaterThanEq *tmp23 :fn1:free :fn1:needed
-    * jump *label21 equal *tmp23 false
+   65 jump *label21 lessThan :fn1:free :fn1:needed
    66 set *tmp4 true
    67 jump *label10 always
    68 jump *label22 always
 
    91 print ","
    92 print " free: "
    93 print :fn1:free
-    * op greaterThan *tmp30 :fn1:needed 0
-    * jump *label25 equal *tmp30 false
+   94 jump *label25 lessThanEq :fn1:needed 0
    95 print ", needed: "
    96 print :fn1:needed
    97 jump *label26 always
 
   126 setaddr *tmp33 *label35
   127 set :fn0:type @mono
   128 label *label29
-    * op notEqual *tmp34 :fn0:type UNIT_TYPE
-    * jump *label36 equal *tmp34 false
+  129 jump *label36 equal :fn0:type UNIT_TYPE
   130 remark "chooseUnitType: $type"
   131 set :fn3:type :fn0:type
   132 set :fn3:output true
 
   135 set :fn3:free :fn3:occupied
   136 ubind :fn3:type
   137 set :fn3:firstUnit @unit
-    * op notEqual *tmp38 :fn3:firstUnit null
-    * jump *label39 equal *tmp38 false
+  138 jump *label39 equal :fn3:firstUnit null
   139 set :fn4:unit @unit
   140 op sub *tmp41 .DOME_X .CORE_X
   141 op sub *tmp42 .DOME_Y .CORE_Y
 
   162 op or *tmp53 *tmp50 *tmp52
   163 jump *label47 equal *tmp53 false
   164 op add :fn3:free :fn3:free 1
-    * op greaterThanEq *tmp55 :fn3:free :fn3:needed
-    * jump *label49 equal *tmp55 false
+  165 jump *label49 lessThan :fn3:free :fn3:needed
   166 set *tmp36 true
   167 jump *label38 always
   168 jump *label50 always
 
   191 print ","
   192 print " free: "
   193 print :fn3:free
-    * op greaterThan *tmp62 :fn3:needed 0
-    * jump *label53 equal *tmp62 false
+  194 jump *label53 lessThanEq :fn3:needed 0
   195 print ", needed: "
   196 print :fn3:needed
   197 jump *label54 always
 
   235 set :fn5:count 0
   236 ubind .TYPE
   237 set :fn5:firstUnit @unit
-    * op equal *tmp67 :fn5:firstUnit null
-    * jump *label58 equal *tmp67 false
+  238 jump *label58 notEqual :fn5:firstUnit null
   239 end
   240 jump *label59 always
   241 label *label58
   242 label *label59
   243 label *label60
   244 sensor *tmp69 @unit @controller
-    * op equal *tmp70 *tmp69 @this
-    * jump *label63 equal *tmp70 false
+  245 jump *label63 notEqual *tmp69 @this
   246 op add :fn5:count :fn5:count 1
   247 ucontrol flag 1
   248 set .UNIT_S2 .UNIT_P2
   249 set .UNIT_P2 .UNIT_S1
   250 set .UNIT_S1 .UNIT_P1
   251 set .UNIT_P1 @unit
-    * op notEqual *tmp73 .UNIT_S2 null
-    * jump *label65 equal *tmp73 false
+  252 jump *label65 equal .UNIT_S2 null
   253 jump *label62 always
   254 jump *label66 always
   255 label *label65
 
   269 label *label57
   270 set :fn6:currentUnit .UNIT_S1
   271 set :fn7:currentUnit :fn6:currentUnit
-    * op notEqual *tmp81 :fn7:currentUnit null
-    * jump *label69 equal *tmp81 false
+  272 jump *label69 equal :fn7:currentUnit null
   273 ubind :fn7:currentUnit
   274 sensor *tmp83 @unit @dead
   275 op strictEqual *tmp84 *tmp83 0
 
   286 label *label70
   287 ubind .TYPE
   288 set :fn7:firstUnit @unit
-    * op notEqual *tmp90 :fn7:firstUnit null
-    * jump *label73 equal *tmp90 false
+  289 jump *label73 equal :fn7:firstUnit null
   290 label *label75
   291 sensor *tmp92 @unit @controlled
-    * op equal *tmp93 *tmp92 0
-    * jump *label78 equal *tmp93 false
+  292 jump *label78 notEqual *tmp92 0
   293 jump *label68 always
   294 jump *label79 always
   295 label *label78
 
   315 set .UNIT_S1 *tmp79
   316 set :fn8:currentUnit .UNIT_P1
   317 set :fn9:currentUnit :fn8:currentUnit
-    * op notEqual *tmp101 :fn9:currentUnit null
-    * jump *label82 equal *tmp101 false
+  318 jump *label82 equal :fn9:currentUnit null
   319 ubind :fn9:currentUnit
   320 sensor *tmp103 @unit @dead
   321 op strictEqual *tmp104 *tmp103 0
 
   332 label *label83
   333 ubind .TYPE
   334 set :fn9:firstUnit @unit
-    * op notEqual *tmp110 :fn9:firstUnit null
-    * jump *label86 equal *tmp110 false
+  335 jump *label86 equal :fn9:firstUnit null
   336 label *label88
   337 sensor *tmp112 @unit @controlled
-    * op equal *tmp113 *tmp112 0
-    * jump *label91 equal *tmp113 false
+  338 jump *label91 notEqual *tmp112 0
   339 jump *label81 always
   340 jump *label92 always
   341 label *label91
 
   385 label *label97
   386 ulocate building core false @copper 0 0 0 .CORE
   387 label *label98
-    * op equal *tmp134 .CORE null
-    * jump *label97 notEqual *tmp134 false
+  388 jump *label97 equal .CORE null
   389 label *label99
   390 sensor .CORE_X .CORE @x
   391 sensor .CORE_Y .CORE @y
 
   406 jump *label101 equal .FOUR_UNITS false
   407 set :fn11:currentUnit .UNIT_S2
   408 set :fn12:currentUnit :fn11:currentUnit
-    * op notEqual *tmp150 :fn12:currentUnit null
-    * jump *label105 equal *tmp150 false
+  409 jump *label105 equal :fn12:currentUnit null
   410 ubind :fn12:currentUnit
   411 sensor *tmp152 @unit @dead
   412 op strictEqual *tmp153 *tmp152 0
 
   423 label *label106
   424 ubind .TYPE
   425 set :fn12:firstUnit @unit
-    * op notEqual *tmp159 :fn12:firstUnit null
-    * jump *label109 equal *tmp159 false
+  426 jump *label109 equal :fn12:firstUnit null
   427 label *label111
   428 sensor *tmp161 @unit @controlled
-    * op equal *tmp162 *tmp161 0
-    * jump *label114 equal *tmp162 false
+  429 jump *label114 notEqual *tmp161 0
   430 jump *label104 always
   431 jump *label115 always
   432 label *label114
 
   452 set .UNIT_S2 *tmp148
   453 set :fn13:currentUnit .UNIT_P2
   454 set :fn14:currentUnit :fn13:currentUnit
-    * op notEqual *tmp170 :fn14:currentUnit null
-    * jump *label118 equal *tmp170 false
+  455 jump *label118 equal :fn14:currentUnit null
   456 ubind :fn14:currentUnit
   457 sensor *tmp172 @unit @dead
   458 op strictEqual *tmp173 *tmp172 0
 
   469 label *label119
   470 ubind .TYPE
   471 set :fn14:firstUnit @unit
-    * op notEqual *tmp179 :fn14:firstUnit null
-    * jump *label122 equal *tmp179 false
+  472 jump *label122 equal :fn14:firstUnit null
   473 label *label124
   474 sensor *tmp181 @unit @controlled
-    * op equal *tmp182 *tmp181 0
-    * jump *label127 equal *tmp182 false
+  475 jump *label127 notEqual *tmp181 0
   476 jump *label117 always
   477 jump *label128 always
   478 label *label127
 
   560 set :fn15:text "\n[green]Silicon[] status:\n"
   561 print :fn15:text
   562 sensor :fn15:level .DOME :fn15:item
-    * op greaterThan *tmp215 :fn15:level 3
-    * jump *label137 equal *tmp215 false
+  563 jump *label137 lessThanEq :fn15:level 3
   564 print "  dome:  [green]"
   565 print :fn15:level
   566 print "["
 
   580 set :fn16:group .GROUP1
   581 set :fn16:supply .SUPPLY_S_FIRST
   582 set :fn17:currentUnit :fn16:unit
-    * op notEqual *tmp219 :fn17:currentUnit null
-    * jump *label141 equal *tmp219 false
+  583 jump *label141 equal :fn17:currentUnit null
   584 ubind :fn17:currentUnit
   585 sensor *tmp221 @unit @dead
   586 op strictEqual *tmp222 *tmp221 0
 
   597 label *label142
   598 ubind .TYPE
   599 set :fn17:firstUnit @unit
-    * op notEqual *tmp228 :fn17:firstUnit null
-    * jump *label145 equal *tmp228 false
+  600 jump *label145 equal :fn17:firstUnit null
   601 label *label147
   602 sensor *tmp230 @unit @controlled
-    * op equal *tmp231 *tmp230 0
-    * jump *label150 equal *tmp231 false
+  603 jump *label150 notEqual *tmp230 0
   604 jump *label140 always
   605 jump *label151 always
   606 label *label150
 
   627 op or *tmp240 *tmp238 *tmp239
   628 jump *label152 equal *tmp240 false
   629 sensor *tmp242 @unit @firstItem
-    * op equal *tmp243 *tmp242 :fn16:item
-    * jump *label154 equal *tmp243 false
+  630 jump *label154 notEqual *tmp242 :fn16:item
   631 set :fn16:state 3
   632 jump *label155 always
   633 label *label154
   634 sensor *tmp245 @unit @totalItems
-    * op equal *tmp246 *tmp245 0
-    * jump *label156 equal *tmp246 false
+  635 jump *label156 notEqual *tmp245 0
   636 set :fn16:state 2
   637 jump *label157 always
   638 label *label156
 
   649 jump *label153 always
   650 label *label152
   651 label *label153
-    * op equal *tmp250 :fn16:state 2
-    * jump *label160 equal *tmp250 false
+  652 jump *label160 notEqual :fn16:state 2
   653 ucontrol within .CORE_X .CORE_Y 8 *tmp252
   654 jump *label162 equal *tmp252 false
   655 ucontrol itemTake .CORE :fn16:item .UNIT_CAPACITY
   656 sensor *tmp254 @unit @totalItems
-    * op greaterThanEq *tmp255 *tmp254 .UNIT_CAPACITY
-    * jump *label164 equal *tmp255 false
+  657 jump *label164 lessThan *tmp254 .UNIT_CAPACITY
   658 ucontrol approach .DOME_X .DOME_Y 6
   659 set :fn16:state 3
   660 jump *label165 always
 
   676 jump *label161 always
   677 label *label160
   678 label *label161
-    * op equal *tmp264 :fn16:state 3
-    * jump *label166 equal *tmp264 false
+  679 jump *label166 notEqual :fn16:state 3
   680 ucontrol within .DOME_X .DOME_Y 8 *tmp266
   681 jump *label168 equal *tmp266 false
   682 jump *label170 equal :fn16:supply false
 
   688 set :fn16:msg ", waiting\n"
   689 label *label171
   690 sensor *tmp269 @unit @totalItems
-    * op lessThanEq *tmp270 *tmp269 0
-    * jump *label172 equal *tmp270 false
+  691 jump *label172 greaterThan *tmp269 0
   692 ucontrol approach .CORE_X .CORE_Y 6
   693 set :fn16:state 2
   694 jump *label173 always
 
   720 print *tmp279
   721 print "["
   722 print "]"
-    * op greaterThanEq *tmp280 :fn16:distance 0
-    * jump *label174 equal *tmp280 false
+  723 jump *label174 lessThan :fn16:distance 0
   724 print :fn16:msg
   725 print :fn16:distance
   726 print "["
 
   742 set :fn18:group .GROUP2
   743 set :fn18:supply *tmp283
   744 set :fn19:currentUnit :fn18:unit
-    * op notEqual *tmp286 :fn19:currentUnit null
-    * jump *label180 equal *tmp286 false
+  745 jump *label180 equal :fn19:currentUnit null
   746 ubind :fn19:currentUnit
   747 sensor *tmp288 @unit @dead
   748 op strictEqual *tmp289 *tmp288 0
 
   759 label *label181
   760 ubind .TYPE
   761 set :fn19:firstUnit @unit
-    * op notEqual *tmp295 :fn19:firstUnit null
-    * jump *label184 equal *tmp295 false
+  762 jump *label184 equal :fn19:firstUnit null
   763 label *label186
   764 sensor *tmp297 @unit @controlled
-    * op equal *tmp298 *tmp297 0
-    * jump *label189 equal *tmp298 false
+  765 jump *label189 notEqual *tmp297 0
   766 jump *label179 always
   767 jump *label190 always
   768 label *label189
 
   789 op or *tmp307 *tmp305 *tmp306
   790 jump *label191 equal *tmp307 false
   791 sensor *tmp309 @unit @firstItem
-    * op equal *tmp310 *tmp309 :fn18:item
-    * jump *label193 equal *tmp310 false
+  792 jump *label193 notEqual *tmp309 :fn18:item
   793 set :fn18:state 3
   794 jump *label194 always
   795 label *label193
   796 sensor *tmp312 @unit @totalItems
-    * op equal *tmp313 *tmp312 0
-    * jump *label195 equal *tmp313 false
+  797 jump *label195 notEqual *tmp312 0
   798 set :fn18:state 2
   799 jump *label196 always
   800 label *label195
 
   811 jump *label192 always
   812 label *label191
   813 label *label192
-    * op equal *tmp317 :fn18:state 2
-    * jump *label199 equal *tmp317 false
+  814 jump *label199 notEqual :fn18:state 2
   815 ucontrol within .CORE_X .CORE_Y 8 *tmp319
   816 jump *label201 equal *tmp319 false
   817 ucontrol itemTake .CORE :fn18:item .UNIT_CAPACITY
   818 sensor *tmp321 @unit @totalItems
-    * op greaterThanEq *tmp322 *tmp321 .UNIT_CAPACITY
-    * jump *label203 equal *tmp322 false
+  819 jump *label203 lessThan *tmp321 .UNIT_CAPACITY
   820 ucontrol approach .DOME_X .DOME_Y 6
   821 set :fn18:state 3
   822 jump *label204 always
 
   838 jump *label200 always
   839 label *label199
   840 label *label200
-    * op equal *tmp331 :fn18:state 3
-    * jump *label205 equal *tmp331 false
+  841 jump *label205 notEqual :fn18:state 3
   842 ucontrol within .DOME_X .DOME_Y 8 *tmp333
   843 jump *label207 equal *tmp333 false
   844 jump *label209 equal :fn18:supply false
 
   850 set :fn18:msg ", waiting\n"
   851 label *label210
   852 sensor *tmp336 @unit @totalItems
-    * op lessThanEq *tmp337 *tmp336 0
-    * jump *label211 equal *tmp337 false
+  853 jump *label211 greaterThan *tmp336 0
   854 ucontrol approach .CORE_X .CORE_Y 6
   855 set :fn18:state 2
   856 jump *label212 always
 
   882 print *tmp346
   883 print "["
   884 print "]"
-    * op greaterThanEq *tmp347 :fn18:distance 0
-    * jump *label213 equal *tmp347 false
+  885 jump *label213 lessThan :fn18:distance 0
   886 print :fn18:msg
   887 print :fn18:distance
   888 print "["
 
   913 set :fn20:text "\n[green]Phase fabric[] status:\n"
   914 print :fn20:text
   915 sensor :fn20:level .DOME :fn20:item
-    * op greaterThan *tmp356 :fn20:level 3
-    * jump *label218 equal *tmp356 false
+  916 jump *label218 lessThanEq :fn20:level 3
   917 print "  dome:  [green]"
   918 print :fn20:level
   919 print "["
 
   933 set :fn21:group .GROUP1
   934 set :fn21:supply .SUPPLY_P_FIRST
   935 set :fn22:currentUnit :fn21:unit
-    * op notEqual *tmp360 :fn22:currentUnit null
-    * jump *label222 equal *tmp360 false
+  936 jump *label222 equal :fn22:currentUnit null
   937 ubind :fn22:currentUnit
   938 sensor *tmp362 @unit @dead
   939 op strictEqual *tmp363 *tmp362 0
 
   950 label *label223
   951 ubind .TYPE
   952 set :fn22:firstUnit @unit
-    * op notEqual *tmp369 :fn22:firstUnit null
-    * jump *label226 equal *tmp369 false
+  953 jump *label226 equal :fn22:firstUnit null
   954 label *label228
   955 sensor *tmp371 @unit @controlled
-    * op equal *tmp372 *tmp371 0
-    * jump *label231 equal *tmp372 false
+  956 jump *label231 notEqual *tmp371 0
   957 jump *label221 always
   958 jump *label232 always
   959 label *label231
 
   980 op or *tmp381 *tmp379 *tmp380
   981 jump *label233 equal *tmp381 false
   982 sensor *tmp383 @unit @firstItem
-    * op equal *tmp384 *tmp383 :fn21:item
-    * jump *label235 equal *tmp384 false
+  983 jump *label235 notEqual *tmp383 :fn21:item
   984 set :fn21:state 3
   985 jump *label236 always
   986 label *label235
   987 sensor *tmp386 @unit @totalItems
-    * op equal *tmp387 *tmp386 0
-    * jump *label237 equal *tmp387 false
+  988 jump *label237 notEqual *tmp386 0
   989 set :fn21:state 2
   990 jump *label238 always
   991 label *label237
 
  1002 jump *label234 always
  1003 label *label233
  1004 label *label234
-    * op equal *tmp391 :fn21:state 2
-    * jump *label241 equal *tmp391 false
+ 1005 jump *label241 notEqual :fn21:state 2
  1006 ucontrol within .CORE_X .CORE_Y 8 *tmp393
  1007 jump *label243 equal *tmp393 false
  1008 ucontrol itemTake .CORE :fn21:item .UNIT_CAPACITY
  1009 sensor *tmp395 @unit @totalItems
-    * op greaterThanEq *tmp396 *tmp395 .UNIT_CAPACITY
-    * jump *label245 equal *tmp396 false
+ 1010 jump *label245 lessThan *tmp395 .UNIT_CAPACITY
  1011 ucontrol approach .DOME_X .DOME_Y 6
  1012 set :fn21:state 3
  1013 jump *label246 always
 
  1029 jump *label242 always
  1030 label *label241
  1031 label *label242
-    * op equal *tmp405 :fn21:state 3
-    * jump *label247 equal *tmp405 false
+ 1032 jump *label247 notEqual :fn21:state 3
  1033 ucontrol within .DOME_X .DOME_Y 8 *tmp407
  1034 jump *label249 equal *tmp407 false
  1035 jump *label251 equal :fn21:supply false
 
  1041 set :fn21:msg ", waiting\n"
  1042 label *label252
  1043 sensor *tmp410 @unit @totalItems
-    * op lessThanEq *tmp411 *tmp410 0
-    * jump *label253 equal *tmp411 false
+ 1044 jump *label253 greaterThan *tmp410 0
  1045 ucontrol approach .CORE_X .CORE_Y 6
  1046 set :fn21:state 2
  1047 jump *label254 always
 
  1073 print *tmp420
  1074 print "["
  1075 print "]"
-    * op greaterThanEq *tmp421 :fn21:distance 0
-    * jump *label255 equal *tmp421 false
+ 1076 jump *label255 lessThan :fn21:distance 0
  1077 print :fn21:msg
  1078 print :fn21:distance
  1079 print "["
 
  1095 set :fn23:group .GROUP2
  1096 set :fn23:supply *tmp424
  1097 set :fn24:currentUnit :fn23:unit
-    * op notEqual *tmp427 :fn24:currentUnit null
-    * jump *label261 equal *tmp427 false
+ 1098 jump *label261 equal :fn24:currentUnit null
  1099 ubind :fn24:currentUnit
  1100 sensor *tmp429 @unit @dead
  1101 op strictEqual *tmp430 *tmp429 0
 
  1112 label *label262
  1113 ubind .TYPE
  1114 set :fn24:firstUnit @unit
-    * op notEqual *tmp436 :fn24:firstUnit null
-    * jump *label265 equal *tmp436 false
+ 1115 jump *label265 equal :fn24:firstUnit null
  1116 label *label267
  1117 sensor *tmp438 @unit @controlled
-    * op equal *tmp439 *tmp438 0
-    * jump *label270 equal *tmp439 false
+ 1118 jump *label270 notEqual *tmp438 0
  1119 jump *label260 always
  1120 jump *label271 always
  1121 label *label270
 
  1142 op or *tmp448 *tmp446 *tmp447
  1143 jump *label272 equal *tmp448 false
  1144 sensor *tmp450 @unit @firstItem
-    * op equal *tmp451 *tmp450 :fn23:item
-    * jump *label274 equal *tmp451 false
+ 1145 jump *label274 notEqual *tmp450 :fn23:item
  1146 set :fn23:state 3
  1147 jump *label275 always
  1148 label *label274
  1149 sensor *tmp453 @unit @totalItems
-    * op equal *tmp454 *tmp453 0
-    * jump *label276 equal *tmp454 false
+ 1150 jump *label276 notEqual *tmp453 0
  1151 set :fn23:state 2
  1152 jump *label277 always
  1153 label *label276
 
  1164 jump *label273 always
  1165 label *label272
  1166 label *label273
-    * op equal *tmp458 :fn23:state 2
-    * jump *label280 equal *tmp458 false
+ 1167 jump *label280 notEqual :fn23:state 2
  1168 ucontrol within .CORE_X .CORE_Y 8 *tmp460
  1169 jump *label282 equal *tmp460 false
  1170 ucontrol itemTake .CORE :fn23:item .UNIT_CAPACITY
  1171 sensor *tmp462 @unit @totalItems
-    * op greaterThanEq *tmp463 *tmp462 .UNIT_CAPACITY
-    * jump *label284 equal *tmp463 false
+ 1172 jump *label284 lessThan *tmp462 .UNIT_CAPACITY
  1173 ucontrol approach .DOME_X .DOME_Y 6
  1174 set :fn23:state 3
  1175 jump *label285 always
 
  1191 jump *label281 always
  1192 label *label280
  1193 label *label281
-    * op equal *tmp472 :fn23:state 3
-    * jump *label286 equal *tmp472 false
+ 1194 jump *label286 notEqual :fn23:state 3
  1195 ucontrol within .DOME_X .DOME_Y 8 *tmp474
  1196 jump *label288 equal *tmp474 false
  1197 jump *label290 equal :fn23:supply false
 
  1203 set :fn23:msg ", waiting\n"
  1204 label *label291
  1205 sensor *tmp477 @unit @totalItems
-    * op lessThanEq *tmp478 *tmp477 0
-    * jump *label292 equal *tmp478 false
+ 1206 jump *label292 greaterThan *tmp477 0
  1207 ucontrol approach .CORE_X .CORE_Y 6
  1208 set :fn23:state 2
  1209 jump *label293 always
 
  1235 print *tmp487
  1236 print "["
  1237 print "]"
-    * op greaterThanEq *tmp488 :fn23:distance 0
-    * jump *label294 equal *tmp488 false
+ 1238 jump *label294 lessThan :fn23:distance 0
  1239 print :fn23:msg
  1240 print :fn23:distance
  1241 print "["
 
  1281 set :fn25:free :fn25:occupied
  1282 ubind :fn25:type
  1283 set :fn25:firstUnit @unit
-    * op notEqual *tmp503 :fn25:firstUnit null
-    * jump *label301 equal *tmp503 false
+ 1284 jump *label301 equal :fn25:firstUnit null
  1285 set :fn26:unit @unit
  1286 op sub *tmp506 .DOME_X .CORE_X
  1287 op sub *tmp507 .DOME_Y .CORE_Y
 
  1308 op or *tmp518 *tmp515 *tmp517
  1309 jump *label309 equal *tmp518 false
  1310 op add :fn25:free :fn25:free 1
-    * op greaterThanEq *tmp520 :fn25:free :fn25:needed
-    * jump *label311 equal *tmp520 false
+ 1311 jump *label311 lessThan :fn25:free :fn25:needed
  1312 set *tmp501 true
  1313 jump *label300 always
  1314 jump *label312 always
 
  1337 print ","
  1338 print " free: "
  1339 print :fn25:free
-    * op greaterThan *tmp527 :fn25:needed 0
-    * jump *label315 equal *tmp527 false
+ 1340 jump *label315 lessThanEq :fn25:needed 0
  1341 print ", needed: "
  1342 print :fn25:needed
  1343 jump *label316 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-79 instructions):
 
    65 jump *label21 lessThan :fn1:free :fn1:needed
    66 set *tmp4 true
    67 jump *label10 always
-    * jump *label22 always
    68 label *label21
    69 label *label22
    70 jump *label20 always
 
    79 op land *tmp28 *tmp25 *tmp27
    80 jump *label16 notEqual *tmp28 false
    81 label *label18
-    * jump *label12 always
    82 label *label11
    83 label *label12
    84 jump *label23 equal :fn1:output false
 
    92 jump *label25 lessThanEq :fn1:needed 0
    93 print ", needed: "
    94 print :fn1:needed
-    * jump *label26 always
    95 label *label25
    96 label *label26
    97 print "\n"
-    * jump *label24 always
    98 label *label23
    99 label *label24
   100 set *tmp4 false
 
   104 jump *label27 equal *tmp4 false
   105 set *tmp3 UNIT_TYPE
   106 jump *label6 always
-    * jump *label28 always
   107 label *label27
   108 label *label28
   109 setaddr *tmp33 *label32
 
   160 jump *label49 lessThan :fn3:free :fn3:needed
   161 set *tmp36 true
   162 jump *label38 always
-    * jump *label50 always
   163 label *label49
   164 label *label50
   165 jump *label48 always
 
   174 op land *tmp60 *tmp57 *tmp59
   175 jump *label44 notEqual *tmp60 false
   176 label *label46
-    * jump *label40 always
   177 label *label39
   178 label *label40
   179 jump *label51 equal :fn3:output false
 
   187 jump *label53 lessThanEq :fn3:needed 0
   188 print ", needed: "
   189 print :fn3:needed
-    * jump *label54 always
   190 label *label53
   191 label *label54
   192 print "\n"
-    * jump *label52 always
   193 label *label51
   194 label *label52
   195 set *tmp36 false
 
   200 printflush null
   201 set *tmp3 :fn0:type
   202 jump *label6 always
-    * jump *label56 always
   203 label *label55
   204 label *label56
-    * jump *label37 always
   205 label *label36
   206 label *label37
   207 label *label30
 
   226 set :fn5:firstUnit @unit
   227 jump *label58 notEqual :fn5:firstUnit null
   228 end
-    * jump *label59 always
   229 label *label58
   230 label *label59
   231 label *label60
 
   239 set .UNIT_P1 @unit
   240 jump *label65 equal .UNIT_S2 null
   241 jump *label62 always
-    * jump *label66 always
   242 label *label65
   243 label *label66
-    * jump *label64 always
   244 label *label63
   245 label *label64
   246 ubind .TYPE
 
   251 op land *tmp78 *tmp75 *tmp77
   252 jump *label60 notEqual *tmp78 false
   253 label *label62
-    * jump *label57 always
   254 label *label57
   255 set :fn6:currentUnit .UNIT_S1
   256 set :fn7:currentUnit :fn6:currentUnit
 
   263 op land *tmp87 *tmp84 *tmp86
   264 jump *label71 equal *tmp87 false
   265 jump *label68 always
-    * jump *label72 always
   266 label *label71
   267 label *label72
-    * jump *label70 always
   268 label *label69
   269 label *label70
   270 ubind .TYPE
 
   274 sensor *tmp92 @unit @controlled
   275 jump *label78 notEqual *tmp92 0
   276 jump *label68 always
-    * jump *label79 always
   277 label *label78
   278 label *label79
   279 ubind .TYPE
 
   284 op land *tmp98 *tmp95 *tmp97
   285 jump *label75 notEqual *tmp98 false
   286 label *label77
-    * jump *label74 always
   287 label *label73
   288 label *label74
   289 end
 
   305 op land *tmp107 *tmp104 *tmp106
   306 jump *label84 equal *tmp107 false
   307 jump *label81 always
-    * jump *label85 always
   308 label *label84
   309 label *label85
-    * jump *label83 always
   310 label *label82
   311 label *label83
   312 ubind .TYPE
 
   316 sensor *tmp112 @unit @controlled
   317 jump *label91 notEqual *tmp112 0
   318 jump *label81 always
-    * jump *label92 always
   319 label *label91
   320 label *label92
   321 ubind .TYPE
 
   326 op land *tmp118 *tmp115 *tmp117
   327 jump *label88 notEqual *tmp118 false
   328 label *label90
-    * jump *label87 always
   329 label *label86
   330 label *label87
   331 end
 
   345 set :u .UNIT_S1
   346 set .UNIT_S1 .UNIT_P1
   347 set .UNIT_P1 :u
-    * jump *label94 always
   348 label *label93
   349 label *label94
   350 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
 
   353 op strictEqual *tmp128 .SPEED null
   354 jump *label95 equal *tmp128 false
   355 stop
-    * jump *label96 always
   356 label *label95
   357 label *label96
   358 print "[gold]Locating core..."
 
   390 op land *tmp156 *tmp153 *tmp155
   391 jump *label107 equal *tmp156 false
   392 jump *label104 always
-    * jump *label108 always
   393 label *label107
   394 label *label108
-    * jump *label106 always
   395 label *label105
   396 label *label106
   397 ubind .TYPE
 
   401 sensor *tmp161 @unit @controlled
   402 jump *label114 notEqual *tmp161 0
   403 jump *label104 always
-    * jump *label115 always
   404 label *label114
   405 label *label115
   406 ubind .TYPE
 
   411 op land *tmp167 *tmp164 *tmp166
   412 jump *label111 notEqual *tmp167 false
   413 label *label113
-    * jump *label110 always
   414 label *label109
   415 label *label110
   416 end
 
   432 op land *tmp176 *tmp173 *tmp175
   433 jump *label120 equal *tmp176 false
   434 jump *label117 always
-    * jump *label121 always
   435 label *label120
   436 label *label121
-    * jump *label119 always
   437 label *label118
   438 label *label119
   439 ubind .TYPE
 
   443 sensor *tmp181 @unit @controlled
   444 jump *label127 notEqual *tmp181 0
   445 jump *label117 always
-    * jump *label128 always
   446 label *label127
   447 label *label128
   448 ubind .TYPE
 
   453 op land *tmp187 *tmp184 *tmp186
   454 jump *label124 notEqual *tmp187 false
   455 label *label126
-    * jump *label123 always
   456 label *label122
   457 label *label123
   458 end
 
   472 set :u .UNIT_S1
   473 set .UNIT_S1 .UNIT_P2
   474 set .UNIT_P2 :u
-    * jump *label130 always
   475 label *label129
   476 label *label130
   477 sensor *tmp194 .UNIT_S2 @firstItem
 
   483 set :u .UNIT_S2
   484 set .UNIT_S2 .UNIT_P2
   485 set .UNIT_P2 :u
-    * jump *label132 always
   486 label *label131
   487 label *label132
   488 set .GROUP1 "unit  1"
 
   554 op land *tmp225 *tmp222 *tmp224
   555 jump *label143 equal *tmp225 false
   556 jump *label140 always
-    * jump *label144 always
   557 label *label143
   558 label *label144
-    * jump *label142 always
   559 label *label141
   560 label *label142
   561 ubind .TYPE
 
   565 sensor *tmp230 @unit @controlled
   566 jump *label150 notEqual *tmp230 0
   567 jump *label140 always
-    * jump *label151 always
   568 label *label150
   569 label *label151
   570 ubind .TYPE
 
   575 op land *tmp236 *tmp233 *tmp235
   576 jump *label147 notEqual *tmp236 false
   577 label *label149
-    * jump *label146 always
   578 label *label145
   579 label *label146
   580 end
 
   602 ucontrol within .CORE_X .CORE_Y 8 *tmp248
   603 jump *label158 equal *tmp248 false
   604 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label159 always
   605 label *label158
   606 label *label159
   607 label *label157
   608 label *label155
-    * jump *label153 always
   609 label *label152
   610 label *label153
   611 jump *label160 notEqual :fn16:state 2
 
   632 op idiv *tmp262 *tmp261 .SPEED_TENTHS
   633 op div :fn16:distance *tmp262 10
   634 label *label163
-    * jump *label161 always
   635 label *label160
   636 label *label161
   637 jump *label166 notEqual :fn16:state 3
 
   649 jump *label172 greaterThan *tmp269 0
   650 ucontrol approach .CORE_X .CORE_Y 6
   651 set :fn16:state 2
-    * jump *label173 always
   652 label *label172
   653 label *label173
   654 jump *label169 always
 
   663 op idiv *tmp277 *tmp276 .SPEED_TENTHS
   664 op div :fn16:distance *tmp277 10
   665 label *label169
-    * jump *label167 always
   666 label *label166
   667 label *label167
   668 ucontrol flag :fn16:state
 
   707 op land *tmp292 *tmp289 *tmp291
   708 jump *label182 equal *tmp292 false
   709 jump *label179 always
-    * jump *label183 always
   710 label *label182
   711 label *label183
-    * jump *label181 always
   712 label *label180
   713 label *label181
   714 ubind .TYPE
 
   718 sensor *tmp297 @unit @controlled
   719 jump *label189 notEqual *tmp297 0
   720 jump *label179 always
-    * jump *label190 always
   721 label *label189
   722 label *label190
   723 ubind .TYPE
 
   728 op land *tmp303 *tmp300 *tmp302
   729 jump *label186 notEqual *tmp303 false
   730 label *label188
-    * jump *label185 always
   731 label *label184
   732 label *label185
   733 end
 
   755 ucontrol within .CORE_X .CORE_Y 8 *tmp315
   756 jump *label197 equal *tmp315 false
   757 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label198 always
   758 label *label197
   759 label *label198
   760 label *label196
   761 label *label194
-    * jump *label192 always
   762 label *label191
   763 label *label192
   764 jump *label199 notEqual :fn18:state 2
 
   785 op idiv *tmp329 *tmp328 .SPEED_TENTHS
   786 op div :fn18:distance *tmp329 10
   787 label *label202
-    * jump *label200 always
   788 label *label199
   789 label *label200
   790 jump *label205 notEqual :fn18:state 3
 
   802 jump *label211 greaterThan *tmp336 0
   803 ucontrol approach .CORE_X .CORE_Y 6
   804 set :fn18:state 2
-    * jump *label212 always
   805 label *label211
   806 label *label212
   807 jump *label208 always
 
   816 op idiv *tmp344 *tmp343 .SPEED_TENTHS
   817 op div :fn18:distance *tmp344 10
   818 label *label208
-    * jump *label206 always
   819 label *label205
   820 label *label206
   821 ucontrol flag :fn18:state
 
   853 op equal *tmp349 *tmp352 0
   854 label *label216
   855 set .SUPPLY_S_FIRST *tmp349
-    * jump *label177 always
   856 label *label176
   857 label *label177
   858 set :fn20:item @phase-fabric
 
   888 op land *tmp366 *tmp363 *tmp365
   889 jump *label224 equal *tmp366 false
   890 jump *label221 always
-    * jump *label225 always
   891 label *label224
   892 label *label225
-    * jump *label223 always
   893 label *label222
   894 label *label223
   895 ubind .TYPE
 
   899 sensor *tmp371 @unit @controlled
   900 jump *label231 notEqual *tmp371 0
   901 jump *label221 always
-    * jump *label232 always
   902 label *label231
   903 label *label232
   904 ubind .TYPE
 
   909 op land *tmp377 *tmp374 *tmp376
   910 jump *label228 notEqual *tmp377 false
   911 label *label230
-    * jump *label227 always
   912 label *label226
   913 label *label227
   914 end
 
   936 ucontrol within .CORE_X .CORE_Y 8 *tmp389
   937 jump *label239 equal *tmp389 false
   938 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label240 always
   939 label *label239
   940 label *label240
   941 label *label238
   942 label *label236
-    * jump *label234 always
   943 label *label233
   944 label *label234
   945 jump *label241 notEqual :fn21:state 2
 
   966 op idiv *tmp403 *tmp402 .SPEED_TENTHS
   967 op div :fn21:distance *tmp403 10
   968 label *label244
-    * jump *label242 always
   969 label *label241
   970 label *label242
   971 jump *label247 notEqual :fn21:state 3
 
   983 jump *label253 greaterThan *tmp410 0
   984 ucontrol approach .CORE_X .CORE_Y 6
   985 set :fn21:state 2
-    * jump *label254 always
   986 label *label253
   987 label *label254
   988 jump *label250 always
 
   997 op idiv *tmp418 *tmp417 .SPEED_TENTHS
   998 op div :fn21:distance *tmp418 10
   999 label *label250
-    * jump *label248 always
  1000 label *label247
  1001 label *label248
  1002 ucontrol flag :fn21:state
 
  1041 op land *tmp433 *tmp430 *tmp432
  1042 jump *label263 equal *tmp433 false
  1043 jump *label260 always
-    * jump *label264 always
  1044 label *label263
  1045 label *label264
-    * jump *label262 always
  1046 label *label261
  1047 label *label262
  1048 ubind .TYPE
 
  1052 sensor *tmp438 @unit @controlled
  1053 jump *label270 notEqual *tmp438 0
  1054 jump *label260 always
-    * jump *label271 always
  1055 label *label270
  1056 label *label271
  1057 ubind .TYPE
 
  1062 op land *tmp444 *tmp441 *tmp443
  1063 jump *label267 notEqual *tmp444 false
  1064 label *label269
-    * jump *label266 always
  1065 label *label265
  1066 label *label266
  1067 end
 
  1089 ucontrol within .CORE_X .CORE_Y 8 *tmp456
  1090 jump *label278 equal *tmp456 false
  1091 ucontrol itemDrop .CORE .UNIT_CAPACITY
-    * jump *label279 always
  1092 label *label278
  1093 label *label279
  1094 label *label277
  1095 label *label275
-    * jump *label273 always
  1096 label *label272
  1097 label *label273
  1098 jump *label280 notEqual :fn23:state 2
 
  1119 op idiv *tmp470 *tmp469 .SPEED_TENTHS
  1120 op div :fn23:distance *tmp470 10
  1121 label *label283
-    * jump *label281 always
  1122 label *label280
  1123 label *label281
  1124 jump *label286 notEqual :fn23:state 3
 
  1136 jump *label292 greaterThan *tmp477 0
  1137 ucontrol approach .CORE_X .CORE_Y 6
  1138 set :fn23:state 2
-    * jump *label293 always
  1139 label *label292
  1140 label *label293
  1141 jump *label289 always
 
  1150 op idiv *tmp485 *tmp484 .SPEED_TENTHS
  1151 op div :fn23:distance *tmp485 10
  1152 label *label289
-    * jump *label287 always
  1153 label *label286
  1154 label *label287
  1155 ucontrol flag :fn23:state
 
  1187 op equal *tmp490 *tmp493 0
  1188 label *label297
  1189 set .SUPPLY_P_FIRST *tmp490
-    * jump *label258 always
  1190 label *label257
  1191 label *label258
  1192 op sub *tmp495 @time :start
 
  1238 jump *label311 lessThan :fn25:free :fn25:needed
  1239 set *tmp501 true
  1240 jump *label300 always
-    * jump *label312 always
  1241 label *label311
  1242 label *label312
  1243 jump *label310 always
 
  1252 op land *tmp525 *tmp522 *tmp524
  1253 jump *label306 notEqual *tmp525 false
  1254 label *label308
-    * jump *label302 always
  1255 label *label301
  1256 label *label302
  1257 jump *label313 equal :fn25:output false
 
  1265 jump *label315 lessThanEq :fn25:needed 0
  1266 print ", needed: "
  1267 print :fn25:needed
-    * jump *label316 always
  1268 label *label315
  1269 label *label316
  1270 print "\n"
-    * jump *label314 always
  1271 label *label313
  1272 label *label314
  1273 set *tmp501 false
 
  1276 label *label300
  1277 jump *label317 equal *tmp501 false
  1278 end
-    * jump *label318 always
  1279 label *label317
  1280 label *label318
  1281 op add :unitCheck @time 5000
-    * jump *label299 always
  1282 label *label298
  1283 label *label299
  1284 label *label134

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-15 instructions):
 
     2 set UNIT_TYPE @flare
     3 remark "Do not modify anything below this line."
     4 set .DOME_Y null
-    * set .DOME_X .DOME_Y
-    * set .CORE_Y .DOME_X
-    * set .CORE_X .CORE_Y
+    5 set .DOME_X null
+    6 set .CORE_Y .DOME_Y
+    7 set .CORE_X .DOME_X
     8 set .DOME dome1
     9 label *label0
    10 jump *label2 notEqual .DOME null
 
    31 set :fn1:type UNIT_TYPE
    32 set :fn1:output true
    33 set :fn1:needed 0
-    * set :fn1:occupied :fn1:needed
-    * set :fn1:free :fn1:occupied
-    * ubind :fn1:type
+   34 set :fn1:occupied 0
+   35 set :fn1:free :fn1:needed
+   36 ubind UNIT_TYPE
    37 set :fn1:firstUnit @unit
    38 jump *label11 equal :fn1:firstUnit null
    39 set :fn2:unit @unit
-    * op sub *tmp9 .DOME_X .CORE_X
-    * op sub *tmp10 .DOME_Y .CORE_Y
+   40 op sub *tmp9 .DOME_Y .CORE_Y
+   41 op sub *tmp10 null .DOME_X
    42 op len *tmp11 *tmp9 *tmp10
    43 op mul *tmp12 2 *tmp11
    44 sensor *tmp13 :fn2:unit @speed
    45 op div :fn2:travel_time *tmp12 *tmp13
    46 op greaterThanEq *tmp8 :fn2:travel_time 47
    47 jump *label13 always
-    * set *tmp8 null
    48 label *label13
    49 jump *label14 equal *tmp8 false
    50 set *tmp16 4
 
    61 op or *tmp21 *tmp18 *tmp20
    62 jump *label19 equal *tmp21 false
    63 op add :fn1:free :fn1:free 1
-    * jump *label21 lessThan :fn1:free :fn1:needed
+   64 jump *label21 lessThan :fn1:free *tmp16
    65 set *tmp4 true
    66 jump *label10 always
    67 label *label21
 
    70 label *label19
    71 op add :fn1:occupied :fn1:occupied 1
    72 label *label20
-    * ubind :fn1:type
+   73 ubind UNIT_TYPE
    74 label *label17
    75 op notEqual *tmp25 @unit :fn1:firstUnit
    76 sensor *tmp26 :fn1:firstUnit @dead
 
    80 label *label18
    81 label *label11
    82 label *label12
-    * jump *label23 equal :fn1:output false
-    * print :fn1:type
+   83 jump *label23 equal true false
+   84 print UNIT_TYPE
    85 print ":"
    86 print " occupied: "
    87 print :fn1:occupied
 
    98 label *label24
    99 set *tmp4 false
   100 jump *label10 always
-    * set *tmp4 null
   101 label *label10
   102 jump *label27 equal *tmp4 false
   103 set *tmp3 UNIT_TYPE
 
   124 set :fn3:type :fn0:type
   125 set :fn3:output true
   126 set :fn3:needed 0
-    * set :fn3:occupied :fn3:needed
-    * set :fn3:free :fn3:occupied
-    * ubind :fn3:type
+  127 set :fn3:occupied 0
+  128 set :fn3:free :fn3:needed
+  129 ubind :fn0:type
   130 set :fn3:firstUnit @unit
   131 jump *label39 equal :fn3:firstUnit null
   132 set :fn4:unit @unit
-    * op sub *tmp41 .DOME_X .CORE_X
-    * op sub *tmp42 .DOME_Y .CORE_Y
+  133 op sub *tmp41 .DOME_Y .CORE_Y
+  134 op sub *tmp42 null .DOME_X
   135 op len *tmp43 *tmp41 *tmp42
   136 op mul *tmp44 2 *tmp43
   137 sensor *tmp45 :fn4:unit @speed
   138 op div :fn4:travel_time *tmp44 *tmp45
   139 op greaterThanEq *tmp40 :fn4:travel_time 47
   140 jump *label41 always
-    * set *tmp40 null
   141 label *label41
   142 jump *label42 equal *tmp40 false
   143 set *tmp48 4
 
   154 op or *tmp53 *tmp50 *tmp52
   155 jump *label47 equal *tmp53 false
   156 op add :fn3:free :fn3:free 1
-    * jump *label49 lessThan :fn3:free :fn3:needed
+  157 jump *label49 lessThan :fn3:free *tmp48
   158 set *tmp36 true
   159 jump *label38 always
   160 label *label49
 
   163 label *label47
   164 op add :fn3:occupied :fn3:occupied 1
   165 label *label48
-    * ubind :fn3:type
+  166 ubind :fn0:type
   167 label *label45
   168 op notEqual *tmp57 @unit :fn3:firstUnit
   169 sensor *tmp58 :fn3:firstUnit @dead
 
   173 label *label46
   174 label *label39
   175 label *label40
-    * jump *label51 equal :fn3:output false
-    * print :fn3:type
+  176 jump *label51 equal true false
+  177 print :fn0:type
   178 print ":"
   179 print " occupied: "
   180 print :fn3:occupied
 
   191 label *label52
   192 set *tmp36 false
   193 jump *label38 always
-    * set *tmp36 null
   194 label *label38
   195 jump *label55 equal *tmp36 false
   196 printflush null
 
   214 print "[gold]Binding units..."
   215 printflush message1
   216 set .UNIT_P2 null
-    * set .UNIT_S2 .UNIT_P2
-    * set .UNIT_P1 .UNIT_S2
-    * set .UNIT_S1 .UNIT_P1
+  217 set .UNIT_S2 null
+  218 set .UNIT_P1 .UNIT_P2
+  219 set .UNIT_S1 .UNIT_S2
   220 set :fn5:count 0
-    * ubind .TYPE
+  221 ubind *tmp3
   222 set :fn5:firstUnit @unit
   223 jump *label58 notEqual :fn5:firstUnit null
   224 end
 
   239 label *label66
   240 label *label63
   241 label *label64
-    * ubind .TYPE
+  242 ubind *tmp3
   243 label *label61
   244 op notEqual *tmp75 @unit :fn5:firstUnit
   245 sensor *tmp76 :fn5:firstUnit @dead
 
   249 label *label62
   250 label *label57
   251 set :fn6:currentUnit .UNIT_S1
-    * set :fn7:currentUnit :fn6:currentUnit
-    * jump *label69 equal :fn7:currentUnit null
-    * ubind :fn7:currentUnit
+  252 set :fn7:currentUnit .UNIT_S1
+  253 jump *label69 equal :fn6:currentUnit null
+  254 ubind :fn6:currentUnit
   255 sensor *tmp83 @unit @dead
   256 op strictEqual *tmp84 *tmp83 0
   257 sensor *tmp85 @unit @controller
 
   263 label *label72
   264 label *label69
   265 label *label70
-    * ubind .TYPE
+  266 ubind *tmp3
   267 set :fn7:firstUnit @unit
   268 jump *label73 equal :fn7:firstUnit null
   269 label *label75
 
   272 jump *label68 always
   273 label *label78
   274 label *label79
-    * ubind .TYPE
+  275 ubind *tmp3
   276 label *label76
   277 op notEqual *tmp95 @unit :fn7:firstUnit
   278 sensor *tmp96 :fn7:firstUnit @dead
 
   287 ucontrol flag 1
   288 set *tmp79 @unit
   289 jump *label67 always
-    * set *tmp79 null
   290 label *label67
   291 set .UNIT_S1 *tmp79
   292 set :fn8:currentUnit .UNIT_P1
-    * set :fn9:currentUnit :fn8:currentUnit
-    * jump *label82 equal :fn9:currentUnit null
-    * ubind :fn9:currentUnit
+  293 set :fn9:currentUnit .UNIT_P1
+  294 jump *label82 equal :fn8:currentUnit null
+  295 ubind :fn8:currentUnit
   296 sensor *tmp103 @unit @dead
   297 op strictEqual *tmp104 *tmp103 0
   298 sensor *tmp105 @unit @controller
 
   304 label *label85
   305 label *label82
   306 label *label83
-    * ubind .TYPE
+  307 ubind *tmp3
   308 set :fn9:firstUnit @unit
   309 jump *label86 equal :fn9:firstUnit null
   310 label *label88
 
   313 jump *label81 always
   314 label *label91
   315 label *label92
-    * ubind .TYPE
+  316 ubind *tmp3
   317 label *label89
   318 op notEqual *tmp115 @unit :fn9:firstUnit
   319 sensor *tmp116 :fn9:firstUnit @dead
 
   328 ucontrol flag 1
   329 set *tmp99 @unit
   330 jump *label80 always
-    * set *tmp99 null
   331 label *label80
   332 set .UNIT_P1 *tmp99
-    * sensor *tmp119 .UNIT_S1 @firstItem
+  333 sensor *tmp119 *tmp79 @firstItem
   334 op equal *tmp120 *tmp119 @phase-fabric
-    * sensor *tmp121 .UNIT_P1 @firstItem
+  335 sensor *tmp121 *tmp99 @firstItem
   336 op equal *tmp122 *tmp121 @silicon
   337 op or *tmp123 *tmp120 *tmp122
   338 jump *label93 equal *tmp123 false
-    * set :u .UNIT_S1
-    * set .UNIT_S1 .UNIT_P1
+  339 set :u *tmp79
+  340 set .UNIT_S1 *tmp99
   341 set .UNIT_P1 :u
   342 label *label93
   343 label *label94
 
   365 op sub *tmp141 .DOME_Y .CORE_Y
   366 op len *tmp142 *tmp140 *tmp141
   367 op mul *tmp143 2 *tmp142
-    * sensor *tmp144 :fn10:unit @speed
+  368 sensor *tmp144 .UNIT_S1 @speed
   369 op div :fn10:travel_time *tmp143 *tmp144
   370 op greaterThanEq *tmp139 :fn10:travel_time 47
   371 jump *label100 always
-    * set *tmp139 null
   372 label *label100
   373 set .FOUR_UNITS *tmp139
-    * jump *label101 equal .FOUR_UNITS false
+  374 jump *label101 equal *tmp139 false
   375 set :fn11:currentUnit .UNIT_S2
-    * set :fn12:currentUnit :fn11:currentUnit
-    * jump *label105 equal :fn12:currentUnit null
-    * ubind :fn12:currentUnit
+  376 set :fn12:currentUnit .UNIT_S2
+  377 jump *label105 equal :fn11:currentUnit null
+  378 ubind :fn11:currentUnit
   379 sensor *tmp152 @unit @dead
   380 op strictEqual *tmp153 *tmp152 0
   381 sensor *tmp154 @unit @controller
 
   387 label *label108
   388 label *label105
   389 label *label106
-    * ubind .TYPE
+  390 ubind *tmp3
   391 set :fn12:firstUnit @unit
   392 jump *label109 equal :fn12:firstUnit null
   393 label *label111
 
   396 jump *label104 always
   397 label *label114
   398 label *label115
-    * ubind .TYPE
+  399 ubind *tmp3
   400 label *label112
   401 op notEqual *tmp164 @unit :fn12:firstUnit
   402 sensor *tmp165 :fn12:firstUnit @dead
 
   411 ucontrol flag 1
   412 set *tmp148 @unit
   413 jump *label103 always
-    * set *tmp148 null
   414 label *label103
   415 set .UNIT_S2 *tmp148
   416 set :fn13:currentUnit .UNIT_P2
-    * set :fn14:currentUnit :fn13:currentUnit
-    * jump *label118 equal :fn14:currentUnit null
-    * ubind :fn14:currentUnit
+  417 set :fn14:currentUnit .UNIT_P2
+  418 jump *label118 equal :fn13:currentUnit null
+  419 ubind :fn13:currentUnit
   420 sensor *tmp172 @unit @dead
   421 op strictEqual *tmp173 *tmp172 0
   422 sensor *tmp174 @unit @controller
 
   428 label *label121
   429 label *label118
   430 label *label119
-    * ubind .TYPE
+  431 ubind *tmp3
   432 set :fn14:firstUnit @unit
   433 jump *label122 equal :fn14:firstUnit null
   434 label *label124
 
   437 jump *label117 always
   438 label *label127
   439 label *label128
-    * ubind .TYPE
+  440 ubind *tmp3
   441 label *label125
   442 op notEqual *tmp184 @unit :fn14:firstUnit
   443 sensor *tmp185 :fn14:firstUnit @dead
 
   452 ucontrol flag 1
   453 set *tmp168 @unit
   454 jump *label116 always
-    * set *tmp168 null
   455 label *label116
   456 set .UNIT_P2 *tmp168
   457 sensor *tmp188 .UNIT_S1 @firstItem
   458 op equal *tmp189 *tmp188 @phase-fabric
-    * sensor *tmp190 .UNIT_P2 @firstItem
+  459 sensor *tmp190 *tmp168 @firstItem
   460 op notEqual *tmp191 *tmp190 @phase-fabric
   461 op land *tmp192 *tmp189 *tmp191
   462 jump *label129 equal *tmp192 false
   463 set :u .UNIT_S1
-    * set .UNIT_S1 .UNIT_P2
+  464 set .UNIT_S1 *tmp168
   465 set .UNIT_P2 :u
   466 label *label129
   467 label *label130
-    * sensor *tmp194 .UNIT_S2 @firstItem
+  468 sensor *tmp194 *tmp148 @firstItem
   469 op equal *tmp195 *tmp194 @phase-fabric
   470 sensor *tmp196 .UNIT_P2 @firstItem
   471 op equal *tmp197 *tmp196 @silicon
   472 op or *tmp198 *tmp195 *tmp197
   473 jump *label131 equal *tmp198 false
-    * set :u .UNIT_S2
+  474 set :u *tmp148
   475 set .UNIT_S2 .UNIT_P2
   476 set .UNIT_P2 :u
   477 label *label131
 
   489 set .GROUP1 "unit"
   490 set .GROUP2 ""
   491 label *label102
-    * op equal *tmp200 .FOUR_UNITS false
+  492 op equal *tmp200 *tmp139 false
   493 sensor *tmp201 .UNIT_S1 @totalItems
   494 sensor *tmp202 .UNIT_S2 @totalItems
   495 op lessThan *tmp203 *tmp201 *tmp202
   496 op or .SUPPLY_S_FIRST *tmp200 *tmp203
-    * op equal *tmp205 .FOUR_UNITS false
+  497 op equal *tmp205 *tmp139 false
   498 sensor *tmp206 .UNIT_P1 @totalItems
   499 sensor *tmp207 .UNIT_P2 @totalItems
   500 op lessThan *tmp208 *tmp206 *tmp207
-    * op or .SUPPLY_P_FIRST *tmp205 *tmp208
+  501 op or .SUPPLY_P_FIRST *tmp200 *tmp208
   502 op add :unitCheck @time 5000
   503 label *label133
   504 sensor *tmp211 switch1 @enabled
 
   508 print "\n"
   509 print "\n"
   510 print "Unit type: [green]"
-    * print .TYPE
+  511 print *tmp3
   512 print "["
   513 print "]"
   514 print "\n"
   515 set :fn15:item @silicon
   516 set :fn15:text "\n[green]Silicon[] status:\n"
-    * print :fn15:text
-    * sensor :fn15:level .DOME :fn15:item
+  517 print "\n[green]Silicon[] status:\n"
+  518 sensor :fn15:level .DOME @silicon
   519 jump *label137 lessThanEq :fn15:level 3
   520 print "  dome:  [green]"
   521 print :fn15:level
 
   535 set :fn16:item @silicon
   536 set :fn16:group .GROUP1
   537 set :fn16:supply .SUPPLY_S_FIRST
-    * set :fn17:currentUnit :fn16:unit
-    * jump *label141 equal :fn17:currentUnit null
-    * ubind :fn17:currentUnit
+  538 set :fn17:currentUnit .UNIT_S1
+  539 jump *label141 equal :fn16:unit null
+  540 ubind :fn16:unit
   541 sensor *tmp221 @unit @dead
   542 op strictEqual *tmp222 *tmp221 0
   543 sensor *tmp223 @unit @controller
 
   549 label *label144
   550 label *label141
   551 label *label142
-    * ubind .TYPE
+  552 ubind *tmp3
   553 set :fn17:firstUnit @unit
   554 jump *label145 equal :fn17:firstUnit null
   555 label *label147
 
   558 jump *label140 always
   559 label *label150
   560 label *label151
-    * ubind .TYPE
+  561 ubind *tmp3
   562 label *label148
   563 op notEqual *tmp233 @unit :fn17:firstUnit
   564 sensor *tmp234 :fn17:firstUnit @dead
 
   579 op or *tmp240 *tmp238 *tmp239
   580 jump *label152 equal *tmp240 false
   581 sensor *tmp242 @unit @firstItem
-    * jump *label154 notEqual *tmp242 :fn16:item
+  582 jump *label154 notEqual *tmp242 @silicon
   583 set :fn16:state 3
   584 jump *label155 always
   585 label *label154
 
   602 jump *label160 notEqual :fn16:state 2
   603 ucontrol within .CORE_X .CORE_Y 8 *tmp252
   604 jump *label162 equal *tmp252 false
-    * ucontrol itemTake .CORE :fn16:item .UNIT_CAPACITY
+  605 ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
   606 sensor *tmp254 @unit @totalItems
   607 jump *label164 lessThan *tmp254 .UNIT_CAPACITY
   608 ucontrol approach .DOME_X .DOME_Y 6
 
   628 jump *label166 notEqual :fn16:state 3
   629 ucontrol within .DOME_X .DOME_Y 8 *tmp266
   630 jump *label168 equal *tmp266 false
-    * jump *label170 equal :fn16:supply false
+  631 jump *label170 equal .SUPPLY_S_FIRST false
   632 ucontrol itemDrop .DOME .UNIT_CAPACITY
   633 set :fn16:msg ", supplying\n"
   634 jump *label171 always
 
   659 ucontrol flag :fn16:state
   660 sensor *tmp279 @unit @totalItems
   661 print "  "
-    * print :fn16:group
+  662 print .GROUP1
   663 print ":"
   664 print " ["
-    * print :fn16:color
+  665 print "gold"
   666 print "]"
   667 print *tmp279
   668 print "["
 
   679 label *label175
   680 set *tmp217 @unit
   681 jump *label139 always
-    * set *tmp217 null
   682 label *label139
   683 set .UNIT_S1 *tmp217
-    * jump *label176 equal .FOUR_UNITS false
+  684 jump *label176 equal *tmp139 false
   685 op equal *tmp283 .SUPPLY_S_FIRST false
   686 set :fn18:unit .UNIT_S2
   687 set :fn18:item @silicon
   688 set :fn18:group .GROUP2
   689 set :fn18:supply *tmp283
-    * set :fn19:currentUnit :fn18:unit
-    * jump *label180 equal :fn19:currentUnit null
-    * ubind :fn19:currentUnit
+  690 set :fn19:currentUnit .UNIT_S2
+  691 jump *label180 equal :fn18:unit null
+  692 ubind :fn18:unit
   693 sensor *tmp288 @unit @dead
   694 op strictEqual *tmp289 *tmp288 0
   695 sensor *tmp290 @unit @controller
 
   701 label *label183
   702 label *label180
   703 label *label181
-    * ubind .TYPE
+  704 ubind *tmp3
   705 set :fn19:firstUnit @unit
   706 jump *label184 equal :fn19:firstUnit null
   707 label *label186
 
   710 jump *label179 always
   711 label *label189
   712 label *label190
-    * ubind .TYPE
+  713 ubind *tmp3
   714 label *label187
   715 op notEqual *tmp300 @unit :fn19:firstUnit
   716 sensor *tmp301 :fn19:firstUnit @dead
 
   731 op or *tmp307 *tmp305 *tmp306
   732 jump *label191 equal *tmp307 false
   733 sensor *tmp309 @unit @firstItem
-    * jump *label193 notEqual *tmp309 :fn18:item
+  734 jump *label193 notEqual *tmp309 @silicon
   735 set :fn18:state 3
   736 jump *label194 always
   737 label *label193
 
   754 jump *label199 notEqual :fn18:state 2
   755 ucontrol within .CORE_X .CORE_Y 8 *tmp319
   756 jump *label201 equal *tmp319 false
-    * ucontrol itemTake .CORE :fn18:item .UNIT_CAPACITY
+  757 ucontrol itemTake .CORE @silicon .UNIT_CAPACITY
   758 sensor *tmp321 @unit @totalItems
   759 jump *label203 lessThan *tmp321 .UNIT_CAPACITY
   760 ucontrol approach .DOME_X .DOME_Y 6
 
   780 jump *label205 notEqual :fn18:state 3
   781 ucontrol within .DOME_X .DOME_Y 8 *tmp333
   782 jump *label207 equal *tmp333 false
-    * jump *label209 equal :fn18:supply false
+  783 jump *label209 equal *tmp283 false
   784 ucontrol itemDrop .DOME .UNIT_CAPACITY
   785 set :fn18:msg ", supplying\n"
   786 jump *label210 always
 
   811 ucontrol flag :fn18:state
   812 sensor *tmp346 @unit @totalItems
   813 print "  "
-    * print :fn18:group
+  814 print .GROUP2
   815 print ":"
   816 print " ["
-    * print :fn18:color
+  817 print "gold"
   818 print "]"
   819 print *tmp346
   820 print "["
 
   831 label *label214
   832 set *tmp284 @unit
   833 jump *label178 always
-    * set *tmp284 null
   834 label *label178
   835 set .UNIT_S2 *tmp284
   836 jump *label215 equal .SUPPLY_S_FIRST false
-    * sensor *tmp350 .UNIT_S1 @totalItems
+  837 sensor *tmp350 *tmp217 @totalItems
   838 op greaterThan *tmp349 *tmp350 0
   839 jump *label216 always
   840 label *label215
-    * sensor *tmp352 .UNIT_S2 @totalItems
+  841 sensor *tmp352 *tmp284 @totalItems
   842 op equal *tmp349 *tmp352 0
   843 label *label216
   844 set .SUPPLY_S_FIRST *tmp349
 
   846 label *label177
   847 set :fn20:item @phase-fabric
   848 set :fn20:text "\n[green]Phase fabric[] status:\n"
-    * print :fn20:text
-    * sensor :fn20:level .DOME :fn20:item
+  849 print "\n[green]Phase fabric[] status:\n"
+  850 sensor :fn20:level .DOME @phase-fabric
   851 jump *label218 lessThanEq :fn20:level 3
   852 print "  dome:  [green]"
   853 print :fn20:level
 
   867 set :fn21:item @phase-fabric
   868 set :fn21:group .GROUP1
   869 set :fn21:supply .SUPPLY_P_FIRST
-    * set :fn22:currentUnit :fn21:unit
-    * jump *label222 equal :fn22:currentUnit null
-    * ubind :fn22:currentUnit
+  870 set :fn22:currentUnit .UNIT_P1
+  871 jump *label222 equal :fn21:unit null
+  872 ubind :fn21:unit
   873 sensor *tmp362 @unit @dead
   874 op strictEqual *tmp363 *tmp362 0
   875 sensor *tmp364 @unit @controller
 
   881 label *label225
   882 label *label222
   883 label *label223
-    * ubind .TYPE
+  884 ubind *tmp3
   885 set :fn22:firstUnit @unit
   886 jump *label226 equal :fn22:firstUnit null
   887 label *label228
 
   890 jump *label221 always
   891 label *label231
   892 label *label232
-    * ubind .TYPE
+  893 ubind *tmp3
   894 label *label229
   895 op notEqual *tmp374 @unit :fn22:firstUnit
   896 sensor *tmp375 :fn22:firstUnit @dead
 
   911 op or *tmp381 *tmp379 *tmp380
   912 jump *label233 equal *tmp381 false
   913 sensor *tmp383 @unit @firstItem
-    * jump *label235 notEqual *tmp383 :fn21:item
+  914 jump *label235 notEqual *tmp383 @phase-fabric
   915 set :fn21:state 3
   916 jump *label236 always
   917 label *label235
 
   934 jump *label241 notEqual :fn21:state 2
   935 ucontrol within .CORE_X .CORE_Y 8 *tmp393
   936 jump *label243 equal *tmp393 false
-    * ucontrol itemTake .CORE :fn21:item .UNIT_CAPACITY
+  937 ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
   938 sensor *tmp395 @unit @totalItems
   939 jump *label245 lessThan *tmp395 .UNIT_CAPACITY
   940 ucontrol approach .DOME_X .DOME_Y 6
 
   960 jump *label247 notEqual :fn21:state 3
   961 ucontrol within .DOME_X .DOME_Y 8 *tmp407
   962 jump *label249 equal *tmp407 false
-    * jump *label251 equal :fn21:supply false
+  963 jump *label251 equal .SUPPLY_P_FIRST false
   964 ucontrol itemDrop .DOME .UNIT_CAPACITY
   965 set :fn21:msg ", supplying\n"
   966 jump *label252 always
 
   991 ucontrol flag :fn21:state
   992 sensor *tmp420 @unit @totalItems
   993 print "  "
-    * print :fn21:group
+  994 print .GROUP1
   995 print ":"
   996 print " ["
-    * print :fn21:color
+  997 print "gold"
   998 print "]"
   999 print *tmp420
  1000 print "["
 
  1011 label *label256
  1012 set *tmp358 @unit
  1013 jump *label220 always
-    * set *tmp358 null
  1014 label *label220
  1015 set .UNIT_P1 *tmp358
-    * jump *label257 equal .FOUR_UNITS false
+ 1016 jump *label257 equal *tmp139 false
  1017 op equal *tmp424 .SUPPLY_P_FIRST false
  1018 set :fn23:unit .UNIT_P2
  1019 set :fn23:item @phase-fabric
  1020 set :fn23:group .GROUP2
  1021 set :fn23:supply *tmp424
-    * set :fn24:currentUnit :fn23:unit
-    * jump *label261 equal :fn24:currentUnit null
-    * ubind :fn24:currentUnit
+ 1022 set :fn24:currentUnit .UNIT_P2
+ 1023 jump *label261 equal :fn23:unit null
+ 1024 ubind :fn23:unit
  1025 sensor *tmp429 @unit @dead
  1026 op strictEqual *tmp430 *tmp429 0
  1027 sensor *tmp431 @unit @controller
 
  1033 label *label264
  1034 label *label261
  1035 label *label262
-    * ubind .TYPE
+ 1036 ubind *tmp3
  1037 set :fn24:firstUnit @unit
  1038 jump *label265 equal :fn24:firstUnit null
  1039 label *label267
 
  1042 jump *label260 always
  1043 label *label270
  1044 label *label271
-    * ubind .TYPE
+ 1045 ubind *tmp3
  1046 label *label268
  1047 op notEqual *tmp441 @unit :fn24:firstUnit
  1048 sensor *tmp442 :fn24:firstUnit @dead
 
  1063 op or *tmp448 *tmp446 *tmp447
  1064 jump *label272 equal *tmp448 false
  1065 sensor *tmp450 @unit @firstItem
-    * jump *label274 notEqual *tmp450 :fn23:item
+ 1066 jump *label274 notEqual *tmp450 @phase-fabric
  1067 set :fn23:state 3
  1068 jump *label275 always
  1069 label *label274
 
  1086 jump *label280 notEqual :fn23:state 2
  1087 ucontrol within .CORE_X .CORE_Y 8 *tmp460
  1088 jump *label282 equal *tmp460 false
-    * ucontrol itemTake .CORE :fn23:item .UNIT_CAPACITY
+ 1089 ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY
  1090 sensor *tmp462 @unit @totalItems
  1091 jump *label284 lessThan *tmp462 .UNIT_CAPACITY
  1092 ucontrol approach .DOME_X .DOME_Y 6
 
  1112 jump *label286 notEqual :fn23:state 3
  1113 ucontrol within .DOME_X .DOME_Y 8 *tmp474
  1114 jump *label288 equal *tmp474 false
-    * jump *label290 equal :fn23:supply false
+ 1115 jump *label290 equal *tmp424 false
  1116 ucontrol itemDrop .DOME .UNIT_CAPACITY
  1117 set :fn23:msg ", supplying\n"
  1118 jump *label291 always
 
  1143 ucontrol flag :fn23:state
  1144 sensor *tmp487 @unit @totalItems
  1145 print "  "
-    * print :fn23:group
+ 1146 print .GROUP2
  1147 print ":"
  1148 print " ["
-    * print :fn23:color
+ 1149 print "gold"
  1150 print "]"
  1151 print *tmp487
  1152 print "["
 
  1163 label *label295
  1164 set *tmp425 @unit
  1165 jump *label259 always
-    * set *tmp425 null
  1166 label *label259
  1167 set .UNIT_P2 *tmp425
  1168 jump *label296 equal .SUPPLY_P_FIRST false
-    * sensor *tmp491 .UNIT_P1 @totalItems
+ 1169 sensor *tmp491 *tmp358 @totalItems
  1170 op greaterThan *tmp490 *tmp491 0
  1171 jump *label297 always
  1172 label *label296
-    * sensor *tmp493 .UNIT_P2 @totalItems
+ 1173 sensor *tmp493 *tmp425 @totalItems
  1174 op equal *tmp490 *tmp493 0
  1175 label *label297
  1176 set .SUPPLY_P_FIRST *tmp490
 
  1184 print " "
  1185 print "ms"
  1186 printflush message1
-    * op notEqual *tmp497 .TYPE UNIT_TYPE
+ 1187 op notEqual *tmp497 *tmp3 UNIT_TYPE
  1188 op greaterThan *tmp498 :unitCheck @time
  1189 op land *tmp499 *tmp497 *tmp498
  1190 jump *label298 equal *tmp499 false
  1191 set :fn25:type UNIT_TYPE
  1192 set :fn25:output false
  1193 set :fn25:needed 0
-    * set :fn25:occupied :fn25:needed
-    * set :fn25:free :fn25:occupied
-    * ubind :fn25:type
+ 1194 set :fn25:occupied 0
+ 1195 set :fn25:free :fn25:needed
+ 1196 ubind UNIT_TYPE
  1197 set :fn25:firstUnit @unit
  1198 jump *label301 equal :fn25:firstUnit null
  1199 set :fn26:unit @unit
  1200 op sub *tmp506 .DOME_X .CORE_X
  1201 op sub *tmp507 .DOME_Y .CORE_Y
-    * op len *tmp508 *tmp506 *tmp507
-    * op mul *tmp509 2 *tmp508
+ 1202 op len *tmp508 *tmp140 *tmp141
+ 1203 op mul *tmp509 2 *tmp142
  1204 sensor *tmp510 :fn26:unit @speed
-    * op div :fn26:travel_time *tmp509 *tmp510
+ 1205 op div :fn26:travel_time *tmp143 *tmp510
  1206 op greaterThanEq *tmp505 :fn26:travel_time 47
  1207 jump *label303 always
-    * set *tmp505 null
  1208 label *label303
  1209 jump *label304 equal *tmp505 false
  1210 set *tmp513 4
 
  1221 op or *tmp518 *tmp515 *tmp517
  1222 jump *label309 equal *tmp518 false
  1223 op add :fn25:free :fn25:free 1
-    * jump *label311 lessThan :fn25:free :fn25:needed
+ 1224 jump *label311 lessThan :fn25:free *tmp513
  1225 set *tmp501 true
  1226 jump *label300 always
  1227 label *label311
 
  1230 label *label309
  1231 op add :fn25:occupied :fn25:occupied 1
  1232 label *label310
-    * ubind :fn25:type
+ 1233 ubind UNIT_TYPE
  1234 label *label307
  1235 op notEqual *tmp522 @unit :fn25:firstUnit
  1236 sensor *tmp523 :fn25:firstUnit @dead
 
  1240 label *label308
  1241 label *label301
  1242 label *label302
-    * jump *label313 equal :fn25:output false
-    * print :fn25:type
+ 1243 jump *label313 equal false false
+ 1244 print UNIT_TYPE
  1245 print ":"
  1246 print " occupied: "
  1247 print :fn25:occupied
 
  1258 label *label314
  1259 set *tmp501 false
  1260 jump *label300 always
-    * set *tmp501 null
  1261 label *label300
  1262 jump *label317 equal *tmp501 false
  1263 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-42 instructions):
 
     3 remark "Do not modify anything below this line."
     4 set .DOME_Y null
     5 set .DOME_X null
-    * set .CORE_Y .DOME_Y
-    * set .CORE_X .DOME_X
+    6 set .CORE_Y null
+    7 set .CORE_X null
     8 set .DOME dome1
     9 label *label0
    10 jump *label2 notEqual .DOME null
 
    28 print "[gold]Looking for suitable unit type:[]"
    29 print "\n"
    30 remark "chooseUnitType: $UNIT_TYPE"
-    * set :fn1:type UNIT_TYPE
-    * set :fn1:output true
    31 set :fn1:needed 0
    32 set :fn1:occupied 0
-    * set :fn1:free :fn1:needed
+   33 set :fn1:free 0
    34 ubind UNIT_TYPE
    35 set :fn1:firstUnit @unit
    36 jump *label11 equal :fn1:firstUnit null
    37 set :fn2:unit @unit
-    * op sub *tmp9 .DOME_Y .CORE_Y
-    * op sub *tmp10 null .DOME_X
-    * op len *tmp11 *tmp9 *tmp10
+   38 op sub *tmp9 null .DOME_Y
+   39 op sub *tmp10 null null
+   40 op len *tmp11 *tmp9 0
    41 op mul *tmp12 2 *tmp11
    42 sensor *tmp13 :fn2:unit @speed
    43 op div :fn2:travel_time *tmp12 *tmp13
 
   119 label *label29
   120 jump *label36 equal :fn0:type UNIT_TYPE
   121 remark "chooseUnitType: $type"
-    * set :fn3:type :fn0:type
-    * set :fn3:output true
   122 set :fn3:needed 0
   123 set :fn3:occupied 0
-    * set :fn3:free :fn3:needed
+  124 set :fn3:free 0
   125 ubind :fn0:type
   126 set :fn3:firstUnit @unit
   127 jump *label39 equal :fn3:firstUnit null
   128 set :fn4:unit @unit
-    * op sub *tmp41 .DOME_Y .CORE_Y
-    * op sub *tmp42 null .DOME_X
-    * op len *tmp43 *tmp41 *tmp42
+  129 op sub *tmp41 null .DOME_Y
+  130 op sub *tmp42 null null
+  131 op len *tmp43 *tmp41 0
   132 op mul *tmp44 2 *tmp43
   133 sensor *tmp45 :fn4:unit @speed
   134 op div :fn4:travel_time *tmp44 *tmp45
 
   206 label *label9
   207 set *tmp3 null
   208 label *label6
-    * set .TYPE *tmp3
   209 print "[gold]Binding units..."
   210 printflush message1
   211 set .UNIT_P2 null
   212 set .UNIT_S2 null
-    * set .UNIT_P1 .UNIT_P2
-    * set .UNIT_S1 .UNIT_S2
+  213 set .UNIT_P1 null
+  214 set .UNIT_S1 null
   215 set :fn5:count 0
   216 ubind *tmp3
   217 set :fn5:firstUnit @unit
 
   244 label *label62
   245 label *label57
   246 set :fn6:currentUnit .UNIT_S1
-    * set :fn7:currentUnit .UNIT_S1
-    * jump *label69 equal :fn6:currentUnit null
-    * ubind :fn6:currentUnit
+  247 jump *label69 equal .UNIT_S1 null
+  248 ubind .UNIT_S1
   249 sensor *tmp83 @unit @dead
   250 op strictEqual *tmp84 *tmp83 0
   251 sensor *tmp85 @unit @controller
 
   284 label *label67
   285 set .UNIT_S1 *tmp79
   286 set :fn8:currentUnit .UNIT_P1
-    * set :fn9:currentUnit .UNIT_P1
-    * jump *label82 equal :fn8:currentUnit null
-    * ubind :fn8:currentUnit
+  287 jump *label82 equal .UNIT_P1 null
+  288 ubind .UNIT_P1
   289 sensor *tmp103 @unit @dead
   290 op strictEqual *tmp104 *tmp103 0
   291 sensor *tmp105 @unit @controller
 
   331 jump *label93 equal *tmp123 false
   332 set :u *tmp79
   333 set .UNIT_S1 *tmp99
-    * set .UNIT_P1 :u
+  334 set .UNIT_P1 *tmp79
   335 label *label93
   336 label *label94
   337 sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
 
   353 sensor .CORE_Y .CORE @y
   354 sensor .DOME_X .DOME @x
   355 sensor .DOME_Y .DOME @y
-    * set :fn10:unit .UNIT_S1
   356 op sub *tmp140 .DOME_X .CORE_X
   357 op sub *tmp141 .DOME_Y .CORE_Y
   358 op len *tmp142 *tmp140 *tmp141
 
   362 op greaterThanEq *tmp139 :fn10:travel_time 47
   363 jump *label100 always
   364 label *label100
-    * set .FOUR_UNITS *tmp139
   365 jump *label101 equal *tmp139 false
   366 set :fn11:currentUnit .UNIT_S2
-    * set :fn12:currentUnit .UNIT_S2
-    * jump *label105 equal :fn11:currentUnit null
-    * ubind :fn11:currentUnit
+  367 jump *label105 equal .UNIT_S2 null
+  368 ubind .UNIT_S2
   369 sensor *tmp152 @unit @dead
   370 op strictEqual *tmp153 *tmp152 0
   371 sensor *tmp154 @unit @controller
 
   404 label *label103
   405 set .UNIT_S2 *tmp148
   406 set :fn13:currentUnit .UNIT_P2
-    * set :fn14:currentUnit .UNIT_P2
-    * jump *label118 equal :fn13:currentUnit null
-    * ubind :fn13:currentUnit
+  407 jump *label118 equal .UNIT_P2 null
+  408 ubind .UNIT_P2
   409 sensor *tmp172 @unit @dead
   410 op strictEqual *tmp173 *tmp172 0
   411 sensor *tmp174 @unit @controller
 
   462 jump *label131 equal *tmp198 false
   463 set :u *tmp148
   464 set .UNIT_S2 .UNIT_P2
-    * set .UNIT_P2 :u
+  465 set .UNIT_P2 *tmp148
   466 label *label131
   467 label *label132
   468 set .GROUP1 "unit  1"
 
   483 sensor *tmp202 .UNIT_S2 @totalItems
   484 op lessThan *tmp203 *tmp201 *tmp202
   485 op or .SUPPLY_S_FIRST *tmp200 *tmp203
-    * op equal *tmp205 *tmp139 false
   486 sensor *tmp206 .UNIT_P1 @totalItems
   487 sensor *tmp207 .UNIT_P2 @totalItems
   488 op lessThan *tmp208 *tmp206 *tmp207
 
   500 print "["
   501 print "]"
   502 print "\n"
-    * set :fn15:item @silicon
-    * set :fn15:text "\n[green]Silicon[] status:\n"
   503 print "\n[green]Silicon[] status:\n"
   504 sensor :fn15:level .DOME @silicon
   505 jump *label137 lessThanEq :fn15:level 3
 
   518 label *label138
   519 label *label136
   520 set :fn16:unit .UNIT_S1
-    * set :fn16:item @silicon
-    * set :fn16:group .GROUP1
-    * set :fn16:supply .SUPPLY_S_FIRST
-    * set :fn17:currentUnit .UNIT_S1
-    * jump *label141 equal :fn16:unit null
-    * ubind :fn16:unit
+  521 jump *label141 equal .UNIT_S1 null
+  522 ubind .UNIT_S1
   523 sensor *tmp221 @unit @dead
   524 op strictEqual *tmp222 *tmp221 0
   525 sensor *tmp223 @unit @controller
 
   555 set :fn16:msg ""
   556 sensor :fn16:state @unit @flag
   557 set :fn16:distance -1
-    * set :fn16:color "gold"
   558 op lessThan *tmp238 :fn16:state 2
   559 op greaterThan *tmp239 :fn16:state 3
   560 op or *tmp240 *tmp238 *tmp239
 
   665 jump *label176 equal *tmp139 false
   666 op equal *tmp283 .SUPPLY_S_FIRST false
   667 set :fn18:unit .UNIT_S2
-    * set :fn18:item @silicon
-    * set :fn18:group .GROUP2
-    * set :fn18:supply *tmp283
-    * set :fn19:currentUnit .UNIT_S2
-    * jump *label180 equal :fn18:unit null
-    * ubind :fn18:unit
+  668 jump *label180 equal .UNIT_S2 null
+  669 ubind .UNIT_S2
   670 sensor *tmp288 @unit @dead
   671 op strictEqual *tmp289 *tmp288 0
   672 sensor *tmp290 @unit @controller
 
   702 set :fn18:msg ""
   703 sensor :fn18:state @unit @flag
   704 set :fn18:distance -1
-    * set :fn18:color "gold"
   705 op lessThan *tmp305 :fn18:state 2
   706 op greaterThan *tmp306 :fn18:state 3
   707 op or *tmp307 *tmp305 *tmp306
 
   820 set .SUPPLY_S_FIRST *tmp349
   821 label *label176
   822 label *label177
-    * set :fn20:item @phase-fabric
-    * set :fn20:text "\n[green]Phase fabric[] status:\n"
   823 print "\n[green]Phase fabric[] status:\n"
   824 sensor :fn20:level .DOME @phase-fabric
   825 jump *label218 lessThanEq :fn20:level 3
 
   838 label *label219
   839 label *label217
   840 set :fn21:unit .UNIT_P1
-    * set :fn21:item @phase-fabric
-    * set :fn21:group .GROUP1
-    * set :fn21:supply .SUPPLY_P_FIRST
-    * set :fn22:currentUnit .UNIT_P1
-    * jump *label222 equal :fn21:unit null
-    * ubind :fn21:unit
+  841 jump *label222 equal .UNIT_P1 null
+  842 ubind .UNIT_P1
   843 sensor *tmp362 @unit @dead
   844 op strictEqual *tmp363 *tmp362 0
   845 sensor *tmp364 @unit @controller
 
   875 set :fn21:msg ""
   876 sensor :fn21:state @unit @flag
   877 set :fn21:distance -1
-    * set :fn21:color "gold"
   878 op lessThan *tmp379 :fn21:state 2
   879 op greaterThan *tmp380 :fn21:state 3
   880 op or *tmp381 *tmp379 *tmp380
 
   985 jump *label257 equal *tmp139 false
   986 op equal *tmp424 .SUPPLY_P_FIRST false
   987 set :fn23:unit .UNIT_P2
-    * set :fn23:item @phase-fabric
-    * set :fn23:group .GROUP2
-    * set :fn23:supply *tmp424
-    * set :fn24:currentUnit .UNIT_P2
-    * jump *label261 equal :fn23:unit null
-    * ubind :fn23:unit
+  988 jump *label261 equal .UNIT_P2 null
+  989 ubind .UNIT_P2
   990 sensor *tmp429 @unit @dead
   991 op strictEqual *tmp430 *tmp429 0
   992 sensor *tmp431 @unit @controller
 
  1022 set :fn23:msg ""
  1023 sensor :fn23:state @unit @flag
  1024 set :fn23:distance -1
-    * set :fn23:color "gold"
  1025 op lessThan *tmp446 :fn23:state 2
  1026 op greaterThan *tmp447 :fn23:state 3
  1027 op or *tmp448 *tmp446 *tmp447
 
  1152 op greaterThan *tmp498 :unitCheck @time
  1153 op land *tmp499 *tmp497 *tmp498
  1154 jump *label298 equal *tmp499 false
-    * set :fn25:type UNIT_TYPE
-    * set :fn25:output false
  1155 set :fn25:needed 0
  1156 set :fn25:occupied 0
-    * set :fn25:free :fn25:needed
+ 1157 set :fn25:free 0
  1158 ubind UNIT_TYPE
  1159 set :fn25:firstUnit @unit
  1160 jump *label301 equal :fn25:firstUnit null
  1161 set :fn26:unit @unit
-    * op sub *tmp506 .DOME_X .CORE_X
-    * op sub *tmp507 .DOME_Y .CORE_Y
-    * op len *tmp508 *tmp140 *tmp141
-    * op mul *tmp509 2 *tmp142
  1162 sensor *tmp510 :fn26:unit @speed
  1163 op div :fn26:travel_time *tmp143 *tmp510
  1164 op greaterThanEq *tmp505 :fn26:travel_time 47

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-15 instructions):
 
     2 set UNIT_TYPE @flare
     3 remark "Do not modify anything below this line."
     4 set .DOME_Y null
-    * set .DOME_X null
-    * set .CORE_Y null
-    * set .CORE_X null
     5 set .DOME dome1
     6 label *label0
     7 jump *label2 notEqual .DOME null
 
    32 set :fn1:firstUnit @unit
    33 jump *label11 equal :fn1:firstUnit null
    34 set :fn2:unit @unit
-    * op sub *tmp9 null .DOME_Y
-    * op sub *tmp10 null null
-    * op len *tmp11 *tmp9 0
-    * op mul *tmp12 2 *tmp11
+   35 op sub *tmp9 null null
+   36 op len *tmp11 0 0
+   37 op mul *tmp12 2 0
    38 sensor *tmp13 :fn2:unit @speed
-    * op div :fn2:travel_time *tmp12 *tmp13
+   39 op div :fn2:travel_time 0 *tmp13
    40 op greaterThanEq *tmp8 :fn2:travel_time 47
    41 jump *label13 always
    42 label *label13
 
   122 set :fn3:firstUnit @unit
   123 jump *label39 equal :fn3:firstUnit null
   124 set :fn4:unit @unit
-    * op sub *tmp41 null .DOME_Y
-    * op sub *tmp42 null null
-    * op len *tmp43 *tmp41 0
-    * op mul *tmp44 2 *tmp43
+  125 op sub *tmp41 null null
+  126 op len *tmp43 0 0
+  127 op mul *tmp44 2 0
   128 sensor *tmp45 :fn4:unit @speed
-    * op div :fn4:travel_time *tmp44 *tmp45
+  129 op div :fn4:travel_time 0 *tmp45
   130 op greaterThanEq *tmp40 :fn4:travel_time 47
   131 jump *label41 always
   132 label *label41
 
   238 jump *label60 notEqual *tmp78 false
   239 label *label62
   240 label *label57
-    * set :fn6:currentUnit .UNIT_S1
   241 jump *label69 equal .UNIT_S1 null
   242 ubind .UNIT_S1
   243 sensor *tmp83 @unit @dead
 
   277 jump *label67 always
   278 label *label67
   279 set .UNIT_S1 *tmp79
-    * set :fn8:currentUnit .UNIT_P1
   280 jump *label82 equal .UNIT_P1 null
   281 ubind .UNIT_P1
   282 sensor *tmp103 @unit @dead
 
   322 op equal *tmp122 *tmp121 @silicon
   323 op or *tmp123 *tmp120 *tmp122
   324 jump *label93 equal *tmp123 false
-    * set :u *tmp79
   325 set .UNIT_S1 *tmp99
   326 set .UNIT_P1 *tmp79
   327 label *label93
 
   355 jump *label100 always
   356 label *label100
   357 jump *label101 equal *tmp139 false
-    * set :fn11:currentUnit .UNIT_S2
   358 jump *label105 equal .UNIT_S2 null
   359 ubind .UNIT_S2
   360 sensor *tmp152 @unit @dead
 
   394 jump *label103 always
   395 label *label103
   396 set .UNIT_S2 *tmp148
-    * set :fn13:currentUnit .UNIT_P2
   397 jump *label118 equal .UNIT_P2 null
   398 ubind .UNIT_P2
   399 sensor *tmp172 @unit @dead
 
   450 op equal *tmp197 *tmp196 @silicon
   451 op or *tmp198 *tmp195 *tmp197
   452 jump *label131 equal *tmp198 false
-    * set :u *tmp148
   453 set .UNIT_S2 .UNIT_P2
   454 set .UNIT_P2 *tmp148
   455 label *label131
 
   506 print "\n"
   507 label *label138
   508 label *label136
-    * set :fn16:unit .UNIT_S1
   509 jump *label141 equal .UNIT_S1 null
   510 ubind .UNIT_S1
   511 sensor *tmp221 @unit @dead
 
   652 set .UNIT_S1 *tmp217
   653 jump *label176 equal *tmp139 false
   654 op equal *tmp283 .SUPPLY_S_FIRST false
-    * set :fn18:unit .UNIT_S2
   655 jump *label180 equal .UNIT_S2 null
   656 ubind .UNIT_S2
   657 sensor *tmp288 @unit @dead
 
   824 print "\n"
   825 label *label219
   826 label *label217
-    * set :fn21:unit .UNIT_P1
   827 jump *label222 equal .UNIT_P1 null
   828 ubind .UNIT_P1
   829 sensor *tmp362 @unit @dead
 
   970 set .UNIT_P1 *tmp358
   971 jump *label257 equal *tmp139 false
   972 op equal *tmp424 .SUPPLY_P_FIRST false
-    * set :fn23:unit .UNIT_P2
   973 jump *label261 equal .UNIT_P2 null
   974 ubind .UNIT_P2
   975 sensor *tmp429 @unit @dead

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
     1 remark "If no units of this type exist, we'll try using other types."
     2 set UNIT_TYPE @flare
     3 remark "Do not modify anything below this line."
-    * set .DOME_Y null
     4 set .DOME dome1
     5 label *label0
     6 jump *label2 notEqual .DOME null
 
    31 set :fn1:firstUnit @unit
    32 jump *label11 equal :fn1:firstUnit null
    33 set :fn2:unit @unit
-    * op sub *tmp9 null null
-    * op len *tmp11 0 0
-    * op mul *tmp12 2 0
    34 sensor *tmp13 :fn2:unit @speed
    35 op div :fn2:travel_time 0 *tmp13
    36 op greaterThanEq *tmp8 :fn2:travel_time 47
 
   118 set :fn3:firstUnit @unit
   119 jump *label39 equal :fn3:firstUnit null
   120 set :fn4:unit @unit
-    * op sub *tmp41 null null
-    * op len *tmp43 0 0
-    * op mul *tmp44 2 0
   121 sensor *tmp45 :fn4:unit @speed
   122 op div :fn4:travel_time 0 *tmp45
   123 op greaterThanEq *tmp40 :fn4:travel_time 47

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     4 set .DOME dome1
     5 label *label0
     6 jump *label2 notEqual .DOME null
+    7 label *label319
     8 print "[gold]Waiting for an overdrive dome to be connected..."
     9 printflush message1
    10 set .DOME dome1
    11 label *label1
-    * jump *label0 always
+   12 jump *label319 equal .DOME null
    13 label *label2
    14 label *label3
    15 sensor *tmp1 switch1 @enabled

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
    31 ubind UNIT_TYPE
    32 set :fn1:firstUnit @unit
    33 jump *label11 equal :fn1:firstUnit null
+   34 set *tmp16 2
    35 set :fn2:unit @unit
    36 sensor *tmp13 :fn2:unit @speed
    37 op div :fn2:travel_time 0 *tmp13
    38 op greaterThanEq *tmp8 :fn2:travel_time 47
    39 jump *label13 always
    40 label *label13
-    * jump *label14 equal *tmp8 false
+   41 jump *label15 equal *tmp8 false
    42 set *tmp16 4
    43 jump *label15 always
-    * label *label14
-    * set *tmp16 2
    44 label *label15
    45 set :fn1:needed *tmp16
    46 label *label16
 
   117 ubind :fn0:type
   118 set :fn3:firstUnit @unit
   119 jump *label39 equal :fn3:firstUnit null
+  120 set *tmp48 2
   121 set :fn4:unit @unit
   122 sensor *tmp45 :fn4:unit @speed
   123 op div :fn4:travel_time 0 *tmp45
   124 op greaterThanEq *tmp40 :fn4:travel_time 47
   125 jump *label41 always
   126 label *label41
-    * jump *label42 equal *tmp40 false
+  127 jump *label43 equal *tmp40 false
   128 set *tmp48 4
   129 jump *label43 always
-    * label *label42
-    * set *tmp48 2
   130 label *label43
   131 set :fn3:needed *tmp48
   132 label *label44
 
   790 set .UNIT_S2 *tmp284
   791 jump *label215 equal .SUPPLY_S_FIRST false
   792 sensor *tmp350 *tmp217 @totalItems
-    * op greaterThan *tmp349 *tmp350 0
+  793 op greaterThan .SUPPLY_S_FIRST *tmp350 0
   794 jump *label216 always
   795 label *label215
   796 sensor *tmp352 *tmp284 @totalItems
-    * op equal *tmp349 *tmp352 0
+  797 op equal .SUPPLY_S_FIRST *tmp352 0
   798 label *label216
-    * set .SUPPLY_S_FIRST *tmp349
   799 label *label176
   800 label *label177
   801 print "\n[green]Phase fabric[] status:\n"
 
  1107 set .UNIT_P2 *tmp425
  1108 jump *label296 equal .SUPPLY_P_FIRST false
  1109 sensor *tmp491 *tmp358 @totalItems
-    * op greaterThan *tmp490 *tmp491 0
+ 1110 op greaterThan .SUPPLY_P_FIRST *tmp491 0
  1111 jump *label297 always
  1112 label *label296
  1113 sensor *tmp493 *tmp425 @totalItems
-    * op equal *tmp490 *tmp493 0
+ 1114 op equal .SUPPLY_P_FIRST *tmp493 0
  1115 label *label297
-    * set .SUPPLY_P_FIRST *tmp490
  1116 label *label257
  1117 label *label258
  1118 op sub *tmp495 @time :start
 
  1133 ubind UNIT_TYPE
  1134 set :fn25:firstUnit @unit
  1135 jump *label301 equal :fn25:firstUnit null
+ 1136 set *tmp513 2
  1137 set :fn26:unit @unit
  1138 sensor *tmp510 :fn26:unit @speed
  1139 op div :fn26:travel_time *tmp143 *tmp510
  1140 op greaterThanEq *tmp505 :fn26:travel_time 47
  1141 jump *label303 always
  1142 label *label303
-    * jump *label304 equal *tmp505 false
+ 1143 jump *label305 equal *tmp505 false
  1144 set *tmp513 4
  1145 jump *label305 always
-    * label *label304
-    * set *tmp513 2
  1146 label *label305
  1147 set :fn25:needed *tmp513
  1148 label *label306

Modifications by Replicate loop condition at line 44:1 (+1 instructions):
 
    14 label *label3
    15 sensor *tmp1 switch1 @enabled
    16 jump *label5 notEqual *tmp1 false
+   17 label *label320
    18 print "[coral]Activate switch to begin supplying overdrive dome..."
    19 print "\n"
    20 printflush message1
    21 label *label4
-    * jump *label3 always
+   22 sensor *tmp1 switch1 @enabled
+   23 jump *label320 equal *tmp1 false
    24 label *label5
    25 label *label7
    26 printflush null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 remark "Do not modify anything below this line."
     4 set .DOME dome1
     5 label *label0
-    * jump *label2 notEqual .DOME null
+    6 jump *label2 notEqual dome1 null
     7 label *label319
     8 print "[gold]Waiting for an overdrive dome to be connected..."
     9 printflush message1
    10 set .DOME dome1
    11 label *label1
-    * jump *label319 equal .DOME null
+   12 jump *label319 equal dome1 null
    13 label *label2
    14 label *label3
    15 sensor *tmp1 switch1 @enabled

Modifications by Replicate loop condition at line 127:1 (+1 instructions):
 
   474 label *label133
   475 sensor *tmp211 switch1 @enabled
   476 jump *label135 equal *tmp211 false
+  477 label *label321
   478 set :start @time
   479 print " === [gold]Supplying Overdrive Dome[] === "
   480 print "\n"
 
  1202 label *label298
  1203 label *label299
  1204 label *label134
-    * jump *label133 always
+ 1205 sensor *tmp211 switch1 @enabled
+ 1206 jump *label321 notEqual *tmp211 false
  1207 label *label135
  1208 end

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
    72 label *label18
    73 label *label11
    74 label *label12
-    * jump *label23 equal true false
    75 print UNIT_TYPE
    76 print ":"
    77 print " occupied: "
 
   157 label *label46
   158 label *label39
   159 label *label40
-    * jump *label51 equal true false
   160 print :fn0:type
   161 print ":"
   162 print " occupied: "
 
  1173 label *label308
  1174 label *label301
  1175 label *label302
-    * jump *label313 equal false false
+ 1176 jump *label313 always
  1177 print UNIT_TYPE
  1178 print ":"
  1179 print " occupied: "

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-18 instructions):
 
    38 sensor *tmp13 :fn2:unit @speed
    39 op div :fn2:travel_time 0 *tmp13
    40 op greaterThanEq *tmp8 :fn2:travel_time 47
-    * jump *label13 always
    41 label *label13
    42 jump *label15 equal *tmp8 false
    43 set *tmp16 4
-    * jump *label15 always
    44 label *label15
    45 set :fn1:needed *tmp16
    46 label *label16
 
    86 label *label23
    87 label *label24
    88 set *tmp4 false
-    * jump *label10 always
    89 label *label10
    90 jump *label27 equal *tmp4 false
    91 set *tmp3 UNIT_TYPE
 
   120 sensor *tmp45 :fn4:unit @speed
   121 op div :fn4:travel_time 0 *tmp45
   122 op greaterThanEq *tmp40 :fn4:travel_time 47
-    * jump *label41 always
   123 label *label41
   124 jump *label43 equal *tmp40 false
   125 set *tmp48 4
-    * jump *label43 always
   126 label *label43
   127 set :fn3:needed *tmp48
   128 label *label44
 
   168 label *label51
   169 label *label52
   170 set *tmp36 false
-    * jump *label38 always
   171 label *label38
   172 jump *label55 equal *tmp36 false
   173 printflush null
 
   260 label *label68
   261 ucontrol flag 1
   262 set *tmp79 @unit
-    * jump *label67 always
   263 label *label67
   264 set .UNIT_S1 *tmp79
   265 jump *label82 equal .UNIT_P1 null
 
   298 label *label81
   299 ucontrol flag 1
   300 set *tmp99 @unit
-    * jump *label80 always
   301 label *label80
   302 set .UNIT_P1 *tmp99
   303 sensor *tmp119 *tmp79 @firstItem
 
   336 sensor *tmp144 .UNIT_S1 @speed
   337 op div :fn10:travel_time *tmp143 *tmp144
   338 op greaterThanEq *tmp139 :fn10:travel_time 47
-    * jump *label100 always
   339 label *label100
   340 jump *label101 equal *tmp139 false
   341 jump *label105 equal .UNIT_S2 null
 
   374 label *label104
   375 ucontrol flag 1
   376 set *tmp148 @unit
-    * jump *label103 always
   377 label *label103
   378 set .UNIT_S2 *tmp148
   379 jump *label118 equal .UNIT_P2 null
 
   412 label *label117
   413 ucontrol flag 1
   414 set *tmp168 @unit
-    * jump *label116 always
   415 label *label116
   416 set .UNIT_P2 *tmp168
   417 sensor *tmp188 .UNIT_S1 @firstItem
 
   629 print :fn16:msg
   630 label *label175
   631 set *tmp217 @unit
-    * jump *label139 always
   632 label *label139
   633 set .UNIT_S1 *tmp217
   634 jump *label176 equal *tmp139 false
 
   774 print :fn18:msg
   775 label *label214
   776 set *tmp284 @unit
-    * jump *label178 always
   777 label *label178
   778 set .UNIT_S2 *tmp284
   779 jump *label215 equal .SUPPLY_S_FIRST false
 
   944 print :fn21:msg
   945 label *label256
   946 set *tmp358 @unit
-    * jump *label220 always
   947 label *label220
   948 set .UNIT_P1 *tmp358
   949 jump *label257 equal *tmp139 false
 
  1089 print :fn23:msg
  1090 label *label295
  1091 set *tmp425 @unit
-    * jump *label259 always
  1092 label *label259
  1093 set .UNIT_P2 *tmp425
  1094 jump *label296 equal .SUPPLY_P_FIRST false
 
  1124 sensor *tmp510 :fn26:unit @speed
  1125 op div :fn26:travel_time *tmp143 *tmp510
  1126 op greaterThanEq *tmp505 :fn26:travel_time 47
-    * jump *label303 always
  1127 label *label303
  1128 jump *label305 equal *tmp505 false
  1129 set *tmp513 4
-    * jump *label305 always
  1130 label *label305
  1131 set :fn25:needed *tmp513
  1132 label *label306
 
  1173 label *label313
  1174 label *label314
  1175 set *tmp501 false
-    * jump *label300 always
  1176 label *label300
  1177 jump *label317 equal *tmp501 false
  1178 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    36 set *tmp16 2
    37 set :fn2:unit @unit
    38 sensor *tmp13 :fn2:unit @speed
-    * op div :fn2:travel_time 0 *tmp13
+   39 set :fn2:travel_time 0
    40 op greaterThanEq *tmp8 :fn2:travel_time 47
    41 label *label13
    42 jump *label15 equal *tmp8 false
 
   118 set *tmp48 2
   119 set :fn4:unit @unit
   120 sensor *tmp45 :fn4:unit @speed
-    * op div :fn4:travel_time 0 *tmp45
+  121 set :fn4:travel_time 0
   122 op greaterThanEq *tmp40 :fn4:travel_time 47
   123 label *label41
   124 jump *label43 equal *tmp40 false

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
    37 set :fn2:unit @unit
    38 sensor *tmp13 :fn2:unit @speed
    39 set :fn2:travel_time 0
-    * op greaterThanEq *tmp8 :fn2:travel_time 47
+   40 op greaterThanEq *tmp8 0 47
    41 label *label13
-    * jump *label15 equal *tmp8 false
+   42 jump *label15 equal false false
    43 set *tmp16 4
    44 label *label15
-    * set :fn1:needed *tmp16
+   45 set :fn1:needed 2
    46 label *label16
    47 sensor *tmp17 @unit @controlled
    48 op equal *tmp18 *tmp17 0
 
    51 op or *tmp21 *tmp18 *tmp20
    52 jump *label19 equal *tmp21 false
    53 op add :fn1:free :fn1:free 1
-    * jump *label21 lessThan :fn1:free *tmp16
+   54 jump *label21 lessThan :fn1:free 2
    55 set *tmp4 true
    56 jump *label10 always
    57 label *label21
 
   119 set :fn4:unit @unit
   120 sensor *tmp45 :fn4:unit @speed
   121 set :fn4:travel_time 0
-    * op greaterThanEq *tmp40 :fn4:travel_time 47
+  122 op greaterThanEq *tmp40 0 47
   123 label *label41
-    * jump *label43 equal *tmp40 false
+  124 jump *label43 equal false false
   125 set *tmp48 4
   126 label *label43
-    * set :fn3:needed *tmp48
+  127 set :fn3:needed 2
   128 label *label44
   129 sensor *tmp49 @unit @controlled
   130 op equal *tmp50 *tmp49 0
 
   133 op or *tmp53 *tmp50 *tmp52
   134 jump *label47 equal *tmp53 false
   135 op add :fn3:free :fn3:free 1
-    * jump *label49 lessThan :fn3:free *tmp48
+  136 jump *label49 lessThan :fn3:free 2
   137 set *tmp36 true
   138 jump *label38 always
   139 label *label49
 
  1113 op greaterThan *tmp498 :unitCheck @time
  1114 op land *tmp499 *tmp497 *tmp498
  1115 jump *label298 equal *tmp499 false
-    * set :fn25:needed 0
  1116 set :fn25:occupied 0
  1117 set :fn25:free 0
  1118 ubind UNIT_TYPE
 
  1127 jump *label305 equal *tmp505 false
  1128 set *tmp513 4
  1129 label *label305
-    * set :fn25:needed *tmp513
  1130 label *label306
  1131 sensor *tmp514 @unit @controlled
  1132 op equal *tmp515 *tmp514 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
    33 ubind UNIT_TYPE
    34 set :fn1:firstUnit @unit
    35 jump *label11 equal :fn1:firstUnit null
-    * set *tmp16 2
    36 set :fn2:unit @unit
    37 sensor *tmp13 :fn2:unit @speed
-    * set :fn2:travel_time 0
-    * op greaterThanEq *tmp8 0 47
    38 label *label13
    39 jump *label15 equal false false
-    * set *tmp16 4
    40 label *label15
    41 set :fn1:needed 2
    42 label *label16
 
   111 ubind :fn0:type
   112 set :fn3:firstUnit @unit
   113 jump *label39 equal :fn3:firstUnit null
-    * set *tmp48 2
   114 set :fn4:unit @unit
   115 sensor *tmp45 :fn4:unit @speed
-    * set :fn4:travel_time 0
-    * op greaterThanEq *tmp40 0 47
   116 label *label41
   117 jump *label43 equal false false
-    * set *tmp48 4
   118 label *label43
   119 set :fn3:needed 2
   120 label *label44

Modifications by Unroll iteration loop at line 177:9 (+133 instructions):
 
    88 jump *label6 always
    89 label *label27
    90 label *label28
-    * setaddr *tmp33 *label32
-    * set :fn0:type @flare
-    * jump *label29 always
-    * gotolabel *label32 marker0
-    * setaddr *tmp33 *label33
-    * set :fn0:type @poly
-    * jump *label29 always
-    * gotolabel *label33 marker0
-    * setaddr *tmp33 *label34
-    * set :fn0:type @mega
-    * jump *label29 always
-    * gotolabel *label34 marker0
-    * setaddr *tmp33 *label35
-    * set :fn0:type @mono
-    * label *label29
-    * jump *label36 equal :fn0:type UNIT_TYPE
-    * remark "chooseUnitType: $type"
-    * set :fn3:needed 0
-    * set :fn3:occupied 0
-    * set :fn3:free 0
-    * ubind :fn0:type
-    * set :fn3:firstUnit @unit
-    * jump *label39 equal :fn3:firstUnit null
-    * set :fn4:unit @unit
-    * sensor *tmp45 :fn4:unit @speed
-    * label *label41
-    * jump *label43 equal false false
-    * label *label43
-    * set :fn3:needed 2
-    * label *label44
-    * sensor *tmp49 @unit @controlled
-    * op equal *tmp50 *tmp49 0
-    * sensor *tmp51 @unit @controller
-    * op equal *tmp52 *tmp51 @this
-    * op or *tmp53 *tmp50 *tmp52
-    * jump *label47 equal *tmp53 false
-    * op add :fn3:free :fn3:free 1
-    * jump *label49 lessThan :fn3:free 2
-    * set *tmp36 true
-    * jump *label38 always
-    * label *label49
-    * label *label50
-    * jump *label48 always
-    * label *label47
-    * op add :fn3:occupied :fn3:occupied 1
-    * label *label48
-    * ubind :fn0:type
-    * label *label45
-    * op notEqual *tmp57 @unit :fn3:firstUnit
-    * sensor *tmp58 :fn3:firstUnit @dead
-    * op equal *tmp59 *tmp58 0
-    * op land *tmp60 *tmp57 *tmp59
-    * jump *label44 notEqual *tmp60 false
-    * label *label46
-    * label *label39
-    * label *label40
-    * print :fn0:type
-    * print ":"
-    * print " occupied: "
-    * print :fn3:occupied
-    * print ","
-    * print " free: "
-    * print :fn3:free
-    * jump *label53 lessThanEq :fn3:needed 0
-    * print ", needed: "
-    * print :fn3:needed
-    * label *label53
-    * label *label54
-    * print "\n"
-    * label *label51
-    * label *label52
-    * set *tmp36 false
-    * label *label38
-    * jump *label55 equal *tmp36 false
-    * printflush null
-    * set *tmp3 :fn0:type
-    * jump *label6 always
-    * label *label55
-    * label *label56
-    * label *label36
-    * label *label37
-    * label *label30
-    * goto *tmp33 marker0
-    * gotolabel *label35 marker0
-    * label *label31
+   91 set :fn0:type @flare
+   92 label *label322
+   93 jump *label341 equal :fn0:type UNIT_TYPE
+   94 remark "chooseUnitType: $type"
+   95 set :fn3:needed 0
+   96 set :fn3:occupied 0
+   97 set :fn3:free 0
+   98 ubind :fn0:type
+   99 set :fn3:firstUnit @unit
+  100 jump *label332 equal :fn3:firstUnit null
+  101 set :fn4:unit @unit
+  102 sensor *tmp45 :fn4:unit @speed
+  103 label *label323
+  104 jump *label324 equal false false
+  105 label *label324
+  106 set :fn3:needed 2
+  107 label *label325
+  108 sensor *tmp49 @unit @controlled
+  109 op equal *tmp50 *tmp49 0
+  110 sensor *tmp51 @unit @controller
+  111 op equal *tmp52 *tmp51 @this
+  112 op or *tmp53 *tmp50 *tmp52
+  113 jump *label328 equal *tmp53 false
+  114 op add :fn3:free :fn3:free 1
+  115 jump *label326 lessThan :fn3:free 2
+  116 set *tmp36 true
+  117 jump *label338 always
+  118 label *label326
+  119 label *label327
+  120 jump *label329 always
+  121 label *label328
+  122 op add :fn3:occupied :fn3:occupied 1
+  123 label *label329
+  124 ubind :fn0:type
+  125 label *label330
+  126 op notEqual *tmp57 @unit :fn3:firstUnit
+  127 sensor *tmp58 :fn3:firstUnit @dead
+  128 op equal *tmp59 *tmp58 0
+  129 op land *tmp60 *tmp57 *tmp59
+  130 jump *label325 notEqual *tmp60 false
+  131 label *label331
+  132 label *label332
+  133 label *label333
+  134 print :fn0:type
+  135 print ":"
+  136 print " occupied: "
+  137 print :fn3:occupied
+  138 print ","
+  139 print " free: "
+  140 print :fn3:free
+  141 jump *label334 lessThanEq :fn3:needed 0
+  142 print ", needed: "
+  143 print :fn3:needed
+  144 label *label334
+  145 label *label335
+  146 print "\n"
+  147 label *label336
+  148 label *label337
+  149 set *tmp36 false
+  150 label *label338
+  151 jump *label339 equal *tmp36 false
+  152 printflush null
+  153 set *tmp3 :fn0:type
+  154 jump *label6 always
+  155 label *label339
+  156 label *label340
+  157 label *label341
+  158 label *label342
+  159 label *label343
+  160 set :fn0:type @poly
+  161 label *label346
+  162 jump *label365 equal :fn0:type UNIT_TYPE
+  163 remark "chooseUnitType: $type"
+  164 set :fn3:needed 0
+  165 set :fn3:occupied 0
+  166 set :fn3:free 0
+  167 ubind :fn0:type
+  168 set :fn3:firstUnit @unit
+  169 jump *label356 equal :fn3:firstUnit null
+  170 set :fn4:unit @unit
+  171 sensor *tmp45 :fn4:unit @speed
+  172 label *label347
+  173 jump *label348 equal false false
+  174 label *label348
+  175 set :fn3:needed 2
+  176 label *label349
+  177 sensor *tmp49 @unit @controlled
+  178 op equal *tmp50 *tmp49 0
+  179 sensor *tmp51 @unit @controller
+  180 op equal *tmp52 *tmp51 @this
+  181 op or *tmp53 *tmp50 *tmp52
+  182 jump *label352 equal *tmp53 false
+  183 op add :fn3:free :fn3:free 1
+  184 jump *label350 lessThan :fn3:free 2
+  185 set *tmp36 true
+  186 jump *label362 always
+  187 label *label350
+  188 label *label351
+  189 jump *label353 always
+  190 label *label352
+  191 op add :fn3:occupied :fn3:occupied 1
+  192 label *label353
+  193 ubind :fn0:type
+  194 label *label354
+  195 op notEqual *tmp57 @unit :fn3:firstUnit
+  196 sensor *tmp58 :fn3:firstUnit @dead
+  197 op equal *tmp59 *tmp58 0
+  198 op land *tmp60 *tmp57 *tmp59
+  199 jump *label349 notEqual *tmp60 false
+  200 label *label355
+  201 label *label356
+  202 label *label357
+  203 print :fn0:type
+  204 print ":"
+  205 print " occupied: "
+  206 print :fn3:occupied
+  207 print ","
+  208 print " free: "
+  209 print :fn3:free
+  210 jump *label358 lessThanEq :fn3:needed 0
+  211 print ", needed: "
+  212 print :fn3:needed
+  213 label *label358
+  214 label *label359
+  215 print "\n"
+  216 label *label360
+  217 label *label361
+  218 set *tmp36 false
+  219 label *label362
+  220 jump *label363 equal *tmp36 false
+  221 printflush null
+  222 set *tmp3 :fn0:type
+  223 jump *label6 always
+  224 label *label363
+  225 label *label364
+  226 label *label365
+  227 label *label366
+  228 label *label367
+  229 set :fn0:type @mega
+  230 label *label370
+  231 jump *label389 equal :fn0:type UNIT_TYPE
+  232 remark "chooseUnitType: $type"
+  233 set :fn3:needed 0
+  234 set :fn3:occupied 0
+  235 set :fn3:free 0
+  236 ubind :fn0:type
+  237 set :fn3:firstUnit @unit
+  238 jump *label380 equal :fn3:firstUnit null
+  239 set :fn4:unit @unit
+  240 sensor *tmp45 :fn4:unit @speed
+  241 label *label371
+  242 jump *label372 equal false false
+  243 label *label372
+  244 set :fn3:needed 2
+  245 label *label373
+  246 sensor *tmp49 @unit @controlled
+  247 op equal *tmp50 *tmp49 0
+  248 sensor *tmp51 @unit @controller
+  249 op equal *tmp52 *tmp51 @this
+  250 op or *tmp53 *tmp50 *tmp52
+  251 jump *label376 equal *tmp53 false
+  252 op add :fn3:free :fn3:free 1
+  253 jump *label374 lessThan :fn3:free 2
+  254 set *tmp36 true
+  255 jump *label386 always
+  256 label *label374
+  257 label *label375
+  258 jump *label377 always
+  259 label *label376
+  260 op add :fn3:occupied :fn3:occupied 1
+  261 label *label377
+  262 ubind :fn0:type
+  263 label *label378
+  264 op notEqual *tmp57 @unit :fn3:firstUnit
+  265 sensor *tmp58 :fn3:firstUnit @dead
+  266 op equal *tmp59 *tmp58 0
+  267 op land *tmp60 *tmp57 *tmp59
+  268 jump *label373 notEqual *tmp60 false
+  269 label *label379
+  270 label *label380
+  271 label *label381
+  272 print :fn0:type
+  273 print ":"
+  274 print " occupied: "
+  275 print :fn3:occupied
+  276 print ","
+  277 print " free: "
+  278 print :fn3:free
+  279 jump *label382 lessThanEq :fn3:needed 0
+  280 print ", needed: "
+  281 print :fn3:needed
+  282 label *label382
+  283 label *label383
+  284 print "\n"
+  285 label *label384
+  286 label *label385
+  287 set *tmp36 false
+  288 label *label386
+  289 jump *label387 equal *tmp36 false
+  290 printflush null
+  291 set *tmp3 :fn0:type
+  292 jump *label6 always
+  293 label *label387
+  294 label *label388
+  295 label *label389
+  296 label *label390
+  297 label *label391
+  298 set :fn0:type @mono
+  299 label *label394
+  300 jump *label413 equal :fn0:type UNIT_TYPE
+  301 remark "chooseUnitType: $type"
+  302 set :fn3:needed 0
+  303 set :fn3:occupied 0
+  304 set :fn3:free 0
+  305 ubind :fn0:type
+  306 set :fn3:firstUnit @unit
+  307 jump *label404 equal :fn3:firstUnit null
+  308 set :fn4:unit @unit
+  309 sensor *tmp45 :fn4:unit @speed
+  310 label *label395
+  311 jump *label396 equal false false
+  312 label *label396
+  313 set :fn3:needed 2
+  314 label *label397
+  315 sensor *tmp49 @unit @controlled
+  316 op equal *tmp50 *tmp49 0
+  317 sensor *tmp51 @unit @controller
+  318 op equal *tmp52 *tmp51 @this
+  319 op or *tmp53 *tmp50 *tmp52
+  320 jump *label400 equal *tmp53 false
+  321 op add :fn3:free :fn3:free 1
+  322 jump *label398 lessThan :fn3:free 2
+  323 set *tmp36 true
+  324 jump *label410 always
+  325 label *label398
+  326 label *label399
+  327 jump *label401 always
+  328 label *label400
+  329 op add :fn3:occupied :fn3:occupied 1
+  330 label *label401
+  331 ubind :fn0:type
+  332 label *label402
+  333 op notEqual *tmp57 @unit :fn3:firstUnit
+  334 sensor *tmp58 :fn3:firstUnit @dead
+  335 op equal *tmp59 *tmp58 0
+  336 op land *tmp60 *tmp57 *tmp59
+  337 jump *label397 notEqual *tmp60 false
+  338 label *label403
+  339 label *label404
+  340 label *label405
+  341 print :fn0:type
+  342 print ":"
+  343 print " occupied: "
+  344 print :fn3:occupied
+  345 print ","
+  346 print " free: "
+  347 print :fn3:free
+  348 jump *label406 lessThanEq :fn3:needed 0
+  349 print ", needed: "
+  350 print :fn3:needed
+  351 label *label406
+  352 label *label407
+  353 print "\n"
+  354 label *label408
+  355 label *label409
+  356 set *tmp36 false
+  357 label *label410
+  358 jump *label411 equal *tmp36 false
+  359 printflush null
+  360 set *tmp3 :fn0:type
+  361 jump *label6 always
+  362 label *label411
+  363 label *label412
+  364 label *label413
+  365 label *label414
+  366 label *label415
+  367 label *label31
   368 printflush message1
   369 label *label8
   370 jump *label7 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    90 label *label28
    91 set :fn0:type @flare
    92 label *label322
-    * jump *label341 equal :fn0:type UNIT_TYPE
+   93 jump *label341 equal @flare UNIT_TYPE
    94 remark "chooseUnitType: $type"
    95 set :fn3:needed 0
    96 set :fn3:occupied 0
    97 set :fn3:free 0
-    * ubind :fn0:type
+   98 ubind @flare
    99 set :fn3:firstUnit @unit
   100 jump *label332 equal :fn3:firstUnit null
   101 set :fn4:unit @unit
 
   121 label *label328
   122 op add :fn3:occupied :fn3:occupied 1
   123 label *label329
-    * ubind :fn0:type
+  124 ubind @flare
   125 label *label330
   126 op notEqual *tmp57 @unit :fn3:firstUnit
   127 sensor *tmp58 :fn3:firstUnit @dead
 
   131 label *label331
   132 label *label332
   133 label *label333
-    * print :fn0:type
+  134 print @flare
   135 print ":"
   136 print " occupied: "
   137 print :fn3:occupied
 
   150 label *label338
   151 jump *label339 equal *tmp36 false
   152 printflush null
-    * set *tmp3 :fn0:type
+  153 set *tmp3 @flare
   154 jump *label6 always
   155 label *label339
   156 label *label340
 
   159 label *label343
   160 set :fn0:type @poly
   161 label *label346
-    * jump *label365 equal :fn0:type UNIT_TYPE
+  162 jump *label365 equal @poly UNIT_TYPE
   163 remark "chooseUnitType: $type"
   164 set :fn3:needed 0
   165 set :fn3:occupied 0
   166 set :fn3:free 0
-    * ubind :fn0:type
+  167 ubind @poly
   168 set :fn3:firstUnit @unit
   169 jump *label356 equal :fn3:firstUnit null
   170 set :fn4:unit @unit
 
   190 label *label352
   191 op add :fn3:occupied :fn3:occupied 1
   192 label *label353
-    * ubind :fn0:type
+  193 ubind @poly
   194 label *label354
   195 op notEqual *tmp57 @unit :fn3:firstUnit
   196 sensor *tmp58 :fn3:firstUnit @dead
 
   200 label *label355
   201 label *label356
   202 label *label357
-    * print :fn0:type
+  203 print @poly
   204 print ":"
   205 print " occupied: "
   206 print :fn3:occupied
 
   219 label *label362
   220 jump *label363 equal *tmp36 false
   221 printflush null
-    * set *tmp3 :fn0:type
+  222 set *tmp3 @poly
   223 jump *label6 always
   224 label *label363
   225 label *label364
 
   228 label *label367
   229 set :fn0:type @mega
   230 label *label370
-    * jump *label389 equal :fn0:type UNIT_TYPE
+  231 jump *label389 equal @mega UNIT_TYPE
   232 remark "chooseUnitType: $type"
   233 set :fn3:needed 0
   234 set :fn3:occupied 0
   235 set :fn3:free 0
-    * ubind :fn0:type
+  236 ubind @mega
   237 set :fn3:firstUnit @unit
   238 jump *label380 equal :fn3:firstUnit null
   239 set :fn4:unit @unit
 
   259 label *label376
   260 op add :fn3:occupied :fn3:occupied 1
   261 label *label377
-    * ubind :fn0:type
+  262 ubind @mega
   263 label *label378
   264 op notEqual *tmp57 @unit :fn3:firstUnit
   265 sensor *tmp58 :fn3:firstUnit @dead
 
   269 label *label379
   270 label *label380
   271 label *label381
-    * print :fn0:type
+  272 print @mega
   273 print ":"
   274 print " occupied: "
   275 print :fn3:occupied
 
   288 label *label386
   289 jump *label387 equal *tmp36 false
   290 printflush null
-    * set *tmp3 :fn0:type
+  291 set *tmp3 @mega
   292 jump *label6 always
   293 label *label387
   294 label *label388
 
   297 label *label391
   298 set :fn0:type @mono
   299 label *label394
-    * jump *label413 equal :fn0:type UNIT_TYPE
+  300 jump *label413 equal @mono UNIT_TYPE
   301 remark "chooseUnitType: $type"
   302 set :fn3:needed 0
   303 set :fn3:occupied 0
   304 set :fn3:free 0
-    * ubind :fn0:type
+  305 ubind @mono
   306 set :fn3:firstUnit @unit
   307 jump *label404 equal :fn3:firstUnit null
   308 set :fn4:unit @unit
 
   328 label *label400
   329 op add :fn3:occupied :fn3:occupied 1
   330 label *label401
-    * ubind :fn0:type
+  331 ubind @mono
   332 label *label402
   333 op notEqual *tmp57 @unit :fn3:firstUnit
   334 sensor *tmp58 :fn3:firstUnit @dead
 
   338 label *label403
   339 label *label404
   340 label *label405
-    * print :fn0:type
+  341 print @mono
   342 print ":"
   343 print " occupied: "
   344 print :fn3:occupied
 
   357 label *label410
   358 jump *label411 equal *tmp36 false
   359 printflush null
-    * set *tmp3 :fn0:type
+  360 set *tmp3 @mono
   361 jump *label6 always
   362 label *label411
   363 label *label412

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
    88 jump *label6 always
    89 label *label27
    90 label *label28
-    * set :fn0:type @flare
    91 label *label322
    92 jump *label341 equal @flare UNIT_TYPE
    93 remark "chooseUnitType: $type"
 
   156 label *label341
   157 label *label342
   158 label *label343
-    * set :fn0:type @poly
   159 label *label346
   160 jump *label365 equal @poly UNIT_TYPE
   161 remark "chooseUnitType: $type"
 
   224 label *label365
   225 label *label366
   226 label *label367
-    * set :fn0:type @mega
   227 label *label370
   228 jump *label389 equal @mega UNIT_TYPE
   229 remark "chooseUnitType: $type"
 
   292 label *label389
   293 label *label390
   294 label *label391
-    * set :fn0:type @mono
   295 label *label394
   296 jump *label413 equal @mono UNIT_TYPE
   297 remark "chooseUnitType: $type"

Modifications by Iterated phase, Jump Normalization, pass 3, iteration 1:
 
    36 set :fn2:unit @unit
    37 sensor *tmp13 :fn2:unit @speed
    38 label *label13
-    * jump *label15 equal false false
+   39 jump *label15 always
    40 label *label15
    41 set :fn1:needed 2
    42 label *label16
 
   100 set :fn4:unit @unit
   101 sensor *tmp45 :fn4:unit @speed
   102 label *label323
-    * jump *label324 equal false false
+  103 jump *label324 always
   104 label *label324
   105 set :fn3:needed 2
   106 label *label325
 
   168 set :fn4:unit @unit
   169 sensor *tmp45 :fn4:unit @speed
   170 label *label347
-    * jump *label348 equal false false
+  171 jump *label348 always
   172 label *label348
   173 set :fn3:needed 2
   174 label *label349
 
   236 set :fn4:unit @unit
   237 sensor *tmp45 :fn4:unit @speed
   238 label *label371
-    * jump *label372 equal false false
+  239 jump *label372 always
   240 label *label372
   241 set :fn3:needed 2
   242 label *label373
 
   304 set :fn4:unit @unit
   305 sensor *tmp45 :fn4:unit @speed
   306 label *label395
-    * jump *label396 equal false false
+  307 jump *label396 always
   308 label *label396
   309 set :fn3:needed 2
   310 label *label397

Modifications by Iterated phase, Jump Optimization, pass 3, iteration 1 (-1 instructions):
 
  1302 set :fn26:unit @unit
  1303 sensor *tmp510 :fn26:unit @speed
  1304 op div :fn26:travel_time *tmp143 *tmp510
-    * op greaterThanEq *tmp505 :fn26:travel_time 47
  1305 label *label303
-    * jump *label305 equal *tmp505 false
+ 1306 jump *label305 lessThan :fn26:travel_time 47
  1307 set *tmp513 4
  1308 label *label305
  1309 label *label306

Modifications by Iterated phase, Single Step Elimination, pass 3, iteration 1 (-5 instructions):
 
    36 set :fn2:unit @unit
    37 sensor *tmp13 :fn2:unit @speed
    38 label *label13
-    * jump *label15 always
    39 label *label15
    40 set :fn1:needed 2
    41 label *label16
 
    99 set :fn4:unit @unit
   100 sensor *tmp45 :fn4:unit @speed
   101 label *label323
-    * jump *label324 always
   102 label *label324
   103 set :fn3:needed 2
   104 label *label325
 
   166 set :fn4:unit @unit
   167 sensor *tmp45 :fn4:unit @speed
   168 label *label347
-    * jump *label348 always
   169 label *label348
   170 set :fn3:needed 2
   171 label *label349
 
   233 set :fn4:unit @unit
   234 sensor *tmp45 :fn4:unit @speed
   235 label *label371
-    * jump *label372 always
   236 label *label372
   237 set :fn3:needed 2
   238 label *label373
 
   300 set :fn4:unit @unit
   301 sensor *tmp45 :fn4:unit @speed
   302 label *label395
-    * jump *label396 always
   303 label *label396
   304 set :fn3:needed 2
   305 label *label397

Modifications by Final phase, Jump Straightening, iteration 1 (-17 instructions):
 
   384 set .UNIT_P2 .UNIT_S1
   385 set .UNIT_S1 .UNIT_P1
   386 set .UNIT_P1 @unit
-    * jump *label65 equal .UNIT_S2 null
-    * jump *label62 always
+  387 jump *label62 notEqual .UNIT_S2 null
   388 label *label65
   389 label *label66
   390 label *label63
 
   405 sensor *tmp85 @unit @controller
   406 op equal *tmp86 *tmp85 @this
   407 op land *tmp87 *tmp84 *tmp86
-    * jump *label71 equal *tmp87 false
-    * jump *label68 always
+  408 jump *label68 notEqual *tmp87 false
   409 label *label71
   410 label *label72
   411 label *label69
 
   415 jump *label73 equal :fn7:firstUnit null
   416 label *label75
   417 sensor *tmp92 @unit @controlled
-    * jump *label78 notEqual *tmp92 0
-    * jump *label68 always
+  418 jump *label68 equal *tmp92 0
   419 label *label78
   420 label *label79
   421 ubind *tmp3
 
   441 sensor *tmp105 @unit @controller
   442 op equal *tmp106 *tmp105 @this
   443 op land *tmp107 *tmp104 *tmp106
-    * jump *label84 equal *tmp107 false
-    * jump *label81 always
+  444 jump *label81 notEqual *tmp107 false
   445 label *label84
   446 label *label85
   447 label *label82
 
   451 jump *label86 equal :fn9:firstUnit null
   452 label *label88
   453 sensor *tmp112 @unit @controlled
-    * jump *label91 notEqual *tmp112 0
-    * jump *label81 always
+  454 jump *label81 equal *tmp112 0
   455 label *label91
   456 label *label92
   457 ubind *tmp3
 
   515 sensor *tmp154 @unit @controller
   516 op equal *tmp155 *tmp154 @this
   517 op land *tmp156 *tmp153 *tmp155
-    * jump *label107 equal *tmp156 false
-    * jump *label104 always
+  518 jump *label104 notEqual *tmp156 false
   519 label *label107
   520 label *label108
   521 label *label105
 
   525 jump *label109 equal :fn12:firstUnit null
   526 label *label111
   527 sensor *tmp161 @unit @controlled
-    * jump *label114 notEqual *tmp161 0
-    * jump *label104 always
+  528 jump *label104 equal *tmp161 0
   529 label *label114
   530 label *label115
   531 ubind *tmp3
 
   551 sensor *tmp174 @unit @controller
   552 op equal *tmp175 *tmp174 @this
   553 op land *tmp176 *tmp173 *tmp175
-    * jump *label120 equal *tmp176 false
-    * jump *label117 always
+  554 jump *label117 notEqual *tmp176 false
   555 label *label120
   556 label *label121
   557 label *label118
 
   561 jump *label122 equal :fn14:firstUnit null
   562 label *label124
   563 sensor *tmp181 @unit @controlled
-    * jump *label127 notEqual *tmp181 0
-    * jump *label117 always
+  564 jump *label117 equal *tmp181 0
   565 label *label127
   566 label *label128
   567 ubind *tmp3
 
   661 sensor *tmp223 @unit @controller
   662 op equal *tmp224 *tmp223 @this
   663 op land *tmp225 *tmp222 *tmp224
-    * jump *label143 equal *tmp225 false
-    * jump *label140 always
+  664 jump *label140 notEqual *tmp225 false
   665 label *label143
   666 label *label144
   667 label *label141
 
   671 jump *label145 equal :fn17:firstUnit null
   672 label *label147
   673 sensor *tmp230 @unit @controlled
-    * jump *label150 notEqual *tmp230 0
-    * jump *label140 always
+  674 jump *label140 equal *tmp230 0
   675 label *label150
   676 label *label151
   677 ubind *tmp3
 
   804 sensor *tmp290 @unit @controller
   805 op equal *tmp291 *tmp290 @this
   806 op land *tmp292 *tmp289 *tmp291
-    * jump *label182 equal *tmp292 false
-    * jump *label179 always
+  807 jump *label179 notEqual *tmp292 false
   808 label *label182
   809 label *label183
   810 label *label180
 
   814 jump *label184 equal :fn19:firstUnit null
   815 label *label186
   816 sensor *tmp297 @unit @controlled
-    * jump *label189 notEqual *tmp297 0
-    * jump *label179 always
+  817 jump *label179 equal *tmp297 0
   818 label *label189
   819 label *label190
   820 ubind *tmp3
 
   972 sensor *tmp364 @unit @controller
   973 op equal *tmp365 *tmp364 @this
   974 op land *tmp366 *tmp363 *tmp365
-    * jump *label224 equal *tmp366 false
-    * jump *label221 always
+  975 jump *label221 notEqual *tmp366 false
   976 label *label224
   977 label *label225
   978 label *label222
 
   982 jump *label226 equal :fn22:firstUnit null
   983 label *label228
   984 sensor *tmp371 @unit @controlled
-    * jump *label231 notEqual *tmp371 0
-    * jump *label221 always
+  985 jump *label221 equal *tmp371 0
   986 label *label231
   987 label *label232
   988 ubind *tmp3
 
  1115 sensor *tmp431 @unit @controller
  1116 op equal *tmp432 *tmp431 @this
  1117 op land *tmp433 *tmp430 *tmp432
-    * jump *label263 equal *tmp433 false
-    * jump *label260 always
+ 1118 jump *label260 notEqual *tmp433 false
  1119 label *label263
  1120 label *label264
  1121 label *label261
 
  1125 jump *label265 equal :fn24:firstUnit null
  1126 label *label267
  1127 sensor *tmp438 @unit @controlled
-    * jump *label270 notEqual *tmp438 0
-    * jump *label260 always
+ 1128 jump *label260 equal *tmp438 0
  1129 label *label270
  1130 label *label271
  1131 ubind *tmp3

Modifications by Final phase, Jump Threading, iteration 1:
 
    46 op or *tmp21 *tmp18 *tmp20
    47 jump *label19 equal *tmp21 false
    48 op add :fn1:free :fn1:free 1
-    * jump *label21 lessThan :fn1:free 2
+   49 jump *label20 lessThan :fn1:free 2
    50 set *tmp4 true
    51 jump *label10 always
    52 label *label21
 
   109 op or *tmp53 *tmp50 *tmp52
   110 jump *label328 equal *tmp53 false
   111 op add :fn3:free :fn3:free 1
-    * jump *label326 lessThan :fn3:free 2
+  112 jump *label329 lessThan :fn3:free 2
   113 set *tmp36 true
   114 jump *label338 always
   115 label *label326
 
   176 op or *tmp53 *tmp50 *tmp52
   177 jump *label352 equal *tmp53 false
   178 op add :fn3:free :fn3:free 1
-    * jump *label350 lessThan :fn3:free 2
+  179 jump *label353 lessThan :fn3:free 2
   180 set *tmp36 true
   181 jump *label362 always
   182 label *label350
 
   243 op or *tmp53 *tmp50 *tmp52
   244 jump *label376 equal *tmp53 false
   245 op add :fn3:free :fn3:free 1
-    * jump *label374 lessThan :fn3:free 2
+  246 jump *label377 lessThan :fn3:free 2
   247 set *tmp36 true
   248 jump *label386 always
   249 label *label374
 
   310 op or *tmp53 *tmp50 *tmp52
   311 jump *label400 equal *tmp53 false
   312 op add :fn3:free :fn3:free 1
-    * jump *label398 lessThan :fn3:free 2
+  313 jump *label401 lessThan :fn3:free 2
   314 set *tmp36 true
   315 jump *label410 always
   316 label *label398
 
   722 jump *label164 lessThan *tmp254 .UNIT_CAPACITY
   723 ucontrol approach .DOME_X .DOME_Y 6
   724 set :fn16:state 3
-    * jump *label165 always
+  725 jump *label163 always
   726 label *label164
   727 set :fn16:msg ", loading\n"
   728 label *label165
 
   752 set :fn16:msg ", waiting\n"
   753 label *label171
   754 sensor *tmp269 @unit @totalItems
-    * jump *label172 greaterThan *tmp269 0
+  755 jump *label169 greaterThan *tmp269 0
   756 ucontrol approach .CORE_X .CORE_Y 6
   757 set :fn16:state 2
   758 label *label172
 
   865 jump *label203 lessThan *tmp321 .UNIT_CAPACITY
   866 ucontrol approach .DOME_X .DOME_Y 6
   867 set :fn18:state 3
-    * jump *label204 always
+  868 jump *label202 always
   869 label *label203
   870 set :fn18:msg ", loading\n"
   871 label *label204
 
   895 set :fn18:msg ", waiting\n"
   896 label *label210
   897 sensor *tmp336 @unit @totalItems
-    * jump *label211 greaterThan *tmp336 0
+  898 jump *label208 greaterThan *tmp336 0
   899 ucontrol approach .CORE_X .CORE_Y 6
   900 set :fn18:state 2
   901 label *label211
 
  1033 jump *label245 lessThan *tmp395 .UNIT_CAPACITY
  1034 ucontrol approach .DOME_X .DOME_Y 6
  1035 set :fn21:state 3
-    * jump *label246 always
+ 1036 jump *label244 always
  1037 label *label245
  1038 set :fn21:msg ", loading\n"
  1039 label *label246
 
  1063 set :fn21:msg ", waiting\n"
  1064 label *label252
  1065 sensor *tmp410 @unit @totalItems
-    * jump *label253 greaterThan *tmp410 0
+ 1066 jump *label250 greaterThan *tmp410 0
  1067 ucontrol approach .CORE_X .CORE_Y 6
  1068 set :fn21:state 2
  1069 label *label253
 
  1176 jump *label284 lessThan *tmp462 .UNIT_CAPACITY
  1177 ucontrol approach .DOME_X .DOME_Y 6
  1178 set :fn23:state 3
-    * jump *label285 always
+ 1179 jump *label283 always
  1180 label *label284
  1181 set :fn23:msg ", loading\n"
  1182 label *label285
 
  1206 set :fn23:msg ", waiting\n"
  1207 label *label291
  1208 sensor *tmp477 @unit @totalItems
-    * jump *label292 greaterThan *tmp477 0
+ 1209 jump *label289 greaterThan *tmp477 0
  1210 ucontrol approach .CORE_X .CORE_Y 6
  1211 set :fn23:state 2
  1212 label *label292
 
  1275 set :fn25:free 0
  1276 ubind UNIT_TYPE
  1277 set :fn25:firstUnit @unit
-    * jump *label301 equal :fn25:firstUnit null
+ 1278 jump *label313 equal :fn25:firstUnit null
  1279 set *tmp513 2
  1280 set :fn26:unit @unit
  1281 sensor *tmp510 :fn26:unit @speed
 
  1292 op or *tmp518 *tmp515 *tmp517
  1293 jump *label309 equal *tmp518 false
  1294 op add :fn25:free :fn25:free 1
-    * jump *label311 lessThan :fn25:free *tmp513
+ 1295 jump *label310 lessThan :fn25:free *tmp513
  1296 set *tmp501 true
  1297 jump *label300 always
  1298 label *label311

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-18 instructions):
 
    49 jump *label20 lessThan :fn1:free 2
    50 set *tmp4 true
    51 jump *label10 always
-    * label *label21
-    * label *label22
-    * jump *label20 always
    52 label *label19
    53 op add :fn1:occupied :fn1:occupied 1
    54 label *label20
 
   109 jump *label329 lessThan :fn3:free 2
   110 set *tmp36 true
   111 jump *label338 always
-    * label *label326
-    * label *label327
-    * jump *label329 always
   112 label *label328
   113 op add :fn3:occupied :fn3:occupied 1
   114 label *label329
 
   173 jump *label353 lessThan :fn3:free 2
   174 set *tmp36 true
   175 jump *label362 always
-    * label *label350
-    * label *label351
-    * jump *label353 always
   176 label *label352
   177 op add :fn3:occupied :fn3:occupied 1
   178 label *label353
 
   237 jump *label377 lessThan :fn3:free 2
   238 set *tmp36 true
   239 jump *label386 always
-    * label *label374
-    * label *label375
-    * jump *label377 always
   240 label *label376
   241 op add :fn3:occupied :fn3:occupied 1
   242 label *label377
 
   301 jump *label401 lessThan :fn3:free 2
   302 set *tmp36 true
   303 jump *label410 always
-    * label *label398
-    * label *label399
-    * jump *label401 always
   304 label *label400
   305 op add :fn3:occupied :fn3:occupied 1
   306 label *label401
 
   344 printflush message1
   345 label *label8
   346 jump *label7 always
-    * label *label9
-    * set *tmp3 null
   347 label *label6
   348 print "[gold]Binding units..."
   349 printflush message1
 
  1278 jump *label310 lessThan :fn25:free *tmp513
  1279 set *tmp501 true
  1280 jump *label300 always
-    * label *label311
-    * label *label312
-    * jump *label310 always
  1281 label *label309
  1282 op add :fn25:occupied :fn25:occupied 1
  1283 label *label310
 
  1292 label *label301
  1293 label *label302
  1294 jump *label313 always
-    * print UNIT_TYPE
-    * print ":"
-    * print " occupied: "
-    * print :fn25:occupied
-    * print ","
-    * print " free: "
-    * print :fn25:free
-    * jump *label315 lessThanEq :fn25:needed 0
-    * print ", needed: "
-    * print :fn25:needed
-    * label *label315
-    * label *label316
-    * print "\n"
  1295 label *label313
  1296 label *label314
  1297 set *tmp501 false

Modifications by Final phase, Dead Code Elimination, iteration 1 (-5 instructions):
 
    34 set :fn1:firstUnit @unit
    35 jump *label11 equal :fn1:firstUnit null
    36 set :fn2:unit @unit
-    * sensor *tmp13 :fn2:unit @speed
    37 label *label13
    38 label *label15
    39 set :fn1:needed 2
 
    93 set :fn3:firstUnit @unit
    94 jump *label332 equal :fn3:firstUnit null
    95 set :fn4:unit @unit
-    * sensor *tmp45 :fn4:unit @speed
    96 label *label323
    97 label *label324
    98 set :fn3:needed 2
 
   156 set :fn3:firstUnit @unit
   157 jump *label356 equal :fn3:firstUnit null
   158 set :fn4:unit @unit
-    * sensor *tmp45 :fn4:unit @speed
   159 label *label347
   160 label *label348
   161 set :fn3:needed 2
 
   219 set :fn3:firstUnit @unit
   220 jump *label380 equal :fn3:firstUnit null
   221 set :fn4:unit @unit
-    * sensor *tmp45 :fn4:unit @speed
   222 label *label371
   223 label *label372
   224 set :fn3:needed 2
 
   282 set :fn3:firstUnit @unit
   283 jump *label404 equal :fn3:firstUnit null
   284 set :fn4:unit @unit
-    * sensor *tmp45 :fn4:unit @speed
   285 label *label395
   286 label *label396
   287 set :fn3:needed 2

Modifications by Final phase, Dead Code Elimination, iteration 2 (-5 instructions):
 
    33 ubind UNIT_TYPE
    34 set :fn1:firstUnit @unit
    35 jump *label11 equal :fn1:firstUnit null
-    * set :fn2:unit @unit
    36 label *label13
    37 label *label15
    38 set :fn1:needed 2
 
    91 ubind @flare
    92 set :fn3:firstUnit @unit
    93 jump *label332 equal :fn3:firstUnit null
-    * set :fn4:unit @unit
    94 label *label323
    95 label *label324
    96 set :fn3:needed 2
 
   153 ubind @poly
   154 set :fn3:firstUnit @unit
   155 jump *label356 equal :fn3:firstUnit null
-    * set :fn4:unit @unit
   156 label *label347
   157 label *label348
   158 set :fn3:needed 2
 
   215 ubind @mega
   216 set :fn3:firstUnit @unit
   217 jump *label380 equal :fn3:firstUnit null
-    * set :fn4:unit @unit
   218 label *label371
   219 label *label372
   220 set :fn3:needed 2
 
   277 ubind @mono
   278 set :fn3:firstUnit @unit
   279 jump *label404 equal :fn3:firstUnit null
-    * set :fn4:unit @unit
   280 label *label395
   281 label *label396
   282 set :fn3:needed 2

Modifications by Final phase, Single Step Elimination, iteration 1 (-2 instructions):
 
  1281 label *label308
  1282 label *label301
  1283 label *label302
-    * jump *label313 always
  1284 label *label313
  1285 label *label314
  1286 set *tmp501 false
 
  1296 sensor *tmp211 switch1 @enabled
  1297 jump *label321 notEqual *tmp211 false
  1298 label *label135
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-75 instructions):
 
    15 sensor *tmp1 switch1 @enabled
    16 jump *label5 notEqual *tmp1 false
    17 label *label320
-    * print "[coral]Activate switch to begin supplying overdrive dome..."
-    * print "\n"
+   18 print "[coral]Activate switch to begin supplying overdrive dome...\n"
    19 printflush message1
    20 label *label4
    21 sensor *tmp1 switch1 @enabled
 
    23 label *label5
    24 label *label7
    25 printflush null
-    * print "[gold]Looking for suitable unit type:[]"
-    * print "\n"
+   26 print "[gold]Looking for suitable unit type:[]\n"
    27 remark "chooseUnitType: $UNIT_TYPE"
    28 set :fn1:needed 0
    29 set :fn1:occupied 0
 
    59 label *label11
    60 label *label12
    61 print UNIT_TYPE
-    * print ":"
-    * print " occupied: "
-    * print :fn1:occupied
-    * print ","
-    * print " free: "
+   62 print ": occupied: {0}, free: "
+   63 format :fn1:occupied
    64 print :fn1:free
    65 jump *label25 lessThanEq :fn1:needed 0
    66 print ", needed: "
 
   113 label *label331
   114 label *label332
   115 label *label333
-    * print @flare
-    * print ":"
-    * print " occupied: "
-    * print :fn3:occupied
-    * print ","
-    * print " free: "
+  116 print "flare: occupied: {0}, free: "
+  117 format :fn3:occupied
   118 print :fn3:free
   119 jump *label334 lessThanEq :fn3:needed 0
   120 print ", needed: "
 
   171 label *label355
   172 label *label356
   173 label *label357
-    * print @poly
-    * print ":"
-    * print " occupied: "
-    * print :fn3:occupied
-    * print ","
-    * print " free: "
+  174 print "poly: occupied: {0}, free: "
+  175 format :fn3:occupied
   176 print :fn3:free
   177 jump *label358 lessThanEq :fn3:needed 0
   178 print ", needed: "
 
   229 label *label379
   230 label *label380
   231 label *label381
-    * print @mega
-    * print ":"
-    * print " occupied: "
-    * print :fn3:occupied
-    * print ","
-    * print " free: "
+  232 print "mega: occupied: {0}, free: "
+  233 format :fn3:occupied
   234 print :fn3:free
   235 jump *label382 lessThanEq :fn3:needed 0
   236 print ", needed: "
 
   287 label *label403
   288 label *label404
   289 label *label405
-    * print @mono
-    * print ":"
-    * print " occupied: "
-    * print :fn3:occupied
-    * print ","
-    * print " free: "
+  290 print "mono: occupied: {0}, free: "
+  291 format :fn3:occupied
   292 print :fn3:free
   293 jump *label406 lessThanEq :fn3:needed 0
   294 print ", needed: "
 
   581 jump *label135 equal *tmp211 false
   582 label *label321
   583 set :start @time
-    * print " === [gold]Supplying Overdrive Dome[] === "
-    * print "\n"
-    * print "\n"
-    * print "Unit type: [green]"
-    * print *tmp3
-    * print "["
-    * print "]"
-    * print "\n"
-    * print "\n[green]Silicon[] status:\n"
+  584 print " === [gold]Supplying Overdrive Dome[] === \n\nUnit type: [green]{0}[]\n\n[green]Silicon[] status:\n"
+  585 format *tmp3
   586 sensor :fn15:level .DOME @silicon
   587 jump *label137 lessThanEq :fn15:level 3
-    * print "  dome:  [green]"
-    * print :fn15:level
-    * print "["
-    * print "]"
-    * print "\n"
+  588 print "  dome:  [green]{0}[]\n"
+  589 format :fn15:level
   590 jump *label138 always
   591 label *label137
-    * print "  dome:  [coral]"
-    * print :fn15:level
-    * print "["
-    * print "]"
-    * print "\n"
+  592 print "  dome:  [coral]{0}[]\n"
+  593 format :fn15:level
   594 label *label138
   595 label *label136
   596 jump *label141 equal .UNIT_S1 null
 
   712 label *label167
   713 ucontrol flag :fn16:state
   714 sensor *tmp279 @unit @totalItems
-    * print "  "
-    * print .GROUP1
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp279
-    * print "["
-    * print "]"
+  715 print "  {0}: [gold]{0}[]"
+  716 format .GROUP1
+  717 format *tmp279
   718 jump *label174 lessThan :fn16:distance 0
   719 print :fn16:msg
   720 print :fn16:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+  721 print "[] sec\n"
   722 jump *label175 always
   723 label *label174
   724 print :fn16:msg
 
   847 label *label206
   848 ucontrol flag :fn18:state
   849 sensor *tmp346 @unit @totalItems
-    * print "  "
-    * print .GROUP2
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp346
-    * print "["
-    * print "]"
+  850 print "  {0}: [gold]{0}[]"
+  851 format .GROUP2
+  852 format *tmp346
   853 jump *label213 lessThan :fn18:distance 0
   854 print :fn18:msg
   855 print :fn18:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+  856 print "[] sec\n"
   857 jump *label214 always
   858 label *label213
   859 print :fn18:msg
 
   874 print "\n[green]Phase fabric[] status:\n"
   875 sensor :fn20:level .DOME @phase-fabric
   876 jump *label218 lessThanEq :fn20:level 3
-    * print "  dome:  [green]"
-    * print :fn20:level
-    * print "["
-    * print "]"
-    * print "\n"
+  877 print "  dome:  [green]{0}[]\n"
+  878 format :fn20:level
   879 jump *label219 always
   880 label *label218
-    * print "  dome:  [coral]"
-    * print :fn20:level
-    * print "["
-    * print "]"
-    * print "\n"
+  881 print "  dome:  [coral]{0}[]\n"
+  882 format :fn20:level
   883 label *label219
   884 label *label217
   885 jump *label222 equal .UNIT_P1 null
 
  1001 label *label248
  1002 ucontrol flag :fn21:state
  1003 sensor *tmp420 @unit @totalItems
-    * print "  "
-    * print .GROUP1
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp420
-    * print "["
-    * print "]"
+ 1004 print "  {0}: [gold]{0}[]"
+ 1005 format .GROUP1
+ 1006 format *tmp420
  1007 jump *label255 lessThan :fn21:distance 0
  1008 print :fn21:msg
  1009 print :fn21:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+ 1010 print "[] sec\n"
  1011 jump *label256 always
  1012 label *label255
  1013 print :fn21:msg
 
  1136 label *label287
  1137 ucontrol flag :fn23:state
  1138 sensor *tmp487 @unit @totalItems
-    * print "  "
-    * print .GROUP2
-    * print ":"
-    * print " ["
-    * print "gold"
-    * print "]"
-    * print *tmp487
-    * print "["
-    * print "]"
+ 1139 print "  {0}: [gold]{0}[]"
+ 1140 format .GROUP2
+ 1141 format *tmp487
  1142 jump *label294 lessThan :fn23:distance 0
  1143 print :fn23:msg
  1144 print :fn23:distance
-    * print "["
-    * print "] sec"
-    * print "\n"
+ 1145 print "[] sec\n"
  1146 jump *label295 always
  1147 label *label294
  1148 print :fn23:msg
 
  1162 label *label258
  1163 op sub *tmp495 @time :start
  1164 op floor *tmp496 *tmp495
-    * print "\n"
-    * print "[lightgray]Loop time: "
-    * print *tmp496
-    * print " "
-    * print "ms"
+ 1165 print "\n[lightgray]Loop time: {0} ms"
+ 1166 format *tmp496
  1167 printflush message1
  1168 op notEqual *tmp497 *tmp3 UNIT_TYPE
  1169 op greaterThan *tmp498 :unitCheck @time

Final code before resolving virtual instructions:

remark "This is the preferred unit type to use for bringing in supplies."
remark "If no units of this type exist, we'll try using other types."
set UNIT_TYPE @flare
remark "Do not modify anything below this line."
set .DOME dome1
jump *label2 notEqual dome1 null
label *label319
print "[gold]Waiting for an overdrive dome to be connected..."
printflush message1
set .DOME dome1
jump *label319 equal dome1 null
label *label2
sensor *tmp1 switch1 @enabled
jump *label5 notEqual *tmp1 false
label *label320
print "[coral]Activate switch to begin supplying overdrive dome...\n"
printflush message1
sensor *tmp1 switch1 @enabled
jump *label320 equal *tmp1 false
label *label5
label *label7
printflush null
print "[gold]Looking for suitable unit type:[]\n"
remark "chooseUnitType: $UNIT_TYPE"
set :fn1:needed 0
set :fn1:occupied 0
set :fn1:free 0
ubind UNIT_TYPE
set :fn1:firstUnit @unit
jump *label11 equal :fn1:firstUnit null
set :fn1:needed 2
label *label16
sensor *tmp17 @unit @controlled
op equal *tmp18 *tmp17 0
sensor *tmp19 @unit @controller
op equal *tmp20 *tmp19 @this
op or *tmp21 *tmp18 *tmp20
jump *label19 equal *tmp21 false
op add :fn1:free :fn1:free 1
jump *label20 lessThan :fn1:free 2
set *tmp4 true
jump *label10 always 0 0
label *label19
op add :fn1:occupied :fn1:occupied 1
label *label20
ubind UNIT_TYPE
op notEqual *tmp25 @unit :fn1:firstUnit
sensor *tmp26 :fn1:firstUnit @dead
op equal *tmp27 *tmp26 0
op land *tmp28 *tmp25 *tmp27
jump *label16 notEqual *tmp28 false
label *label11
print UNIT_TYPE
print ": occupied: {0}, free: "
format :fn1:occupied
print :fn1:free
jump *label25 lessThanEq :fn1:needed 0
print ", needed: "
print :fn1:needed
label *label25
print "\n"
set *tmp4 false
label *label10
jump *label27 equal *tmp4 false
set *tmp3 UNIT_TYPE
jump *label6 always 0 0
label *label27
jump *label341 equal @flare UNIT_TYPE
remark "chooseUnitType: $type"
set :fn3:needed 0
set :fn3:occupied 0
set :fn3:free 0
ubind @flare
set :fn3:firstUnit @unit
jump *label332 equal :fn3:firstUnit null
set :fn3:needed 2
label *label325
sensor *tmp49 @unit @controlled
op equal *tmp50 *tmp49 0
sensor *tmp51 @unit @controller
op equal *tmp52 *tmp51 @this
op or *tmp53 *tmp50 *tmp52
jump *label328 equal *tmp53 false
op add :fn3:free :fn3:free 1
jump *label329 lessThan :fn3:free 2
set *tmp36 true
jump *label338 always 0 0
label *label328
op add :fn3:occupied :fn3:occupied 1
label *label329
ubind @flare
op notEqual *tmp57 @unit :fn3:firstUnit
sensor *tmp58 :fn3:firstUnit @dead
op equal *tmp59 *tmp58 0
op land *tmp60 *tmp57 *tmp59
jump *label325 notEqual *tmp60 false
label *label332
print "flare: occupied: {0}, free: "
format :fn3:occupied
print :fn3:free
jump *label334 lessThanEq :fn3:needed 0
print ", needed: "
print :fn3:needed
label *label334
print "\n"
set *tmp36 false
label *label338
jump *label339 equal *tmp36 false
printflush null
set *tmp3 @flare
jump *label6 always 0 0
label *label339
label *label341
jump *label365 equal @poly UNIT_TYPE
remark "chooseUnitType: $type"
set :fn3:needed 0
set :fn3:occupied 0
set :fn3:free 0
ubind @poly
set :fn3:firstUnit @unit
jump *label356 equal :fn3:firstUnit null
set :fn3:needed 2
label *label349
sensor *tmp49 @unit @controlled
op equal *tmp50 *tmp49 0
sensor *tmp51 @unit @controller
op equal *tmp52 *tmp51 @this
op or *tmp53 *tmp50 *tmp52
jump *label352 equal *tmp53 false
op add :fn3:free :fn3:free 1
jump *label353 lessThan :fn3:free 2
set *tmp36 true
jump *label362 always 0 0
label *label352
op add :fn3:occupied :fn3:occupied 1
label *label353
ubind @poly
op notEqual *tmp57 @unit :fn3:firstUnit
sensor *tmp58 :fn3:firstUnit @dead
op equal *tmp59 *tmp58 0
op land *tmp60 *tmp57 *tmp59
jump *label349 notEqual *tmp60 false
label *label356
print "poly: occupied: {0}, free: "
format :fn3:occupied
print :fn3:free
jump *label358 lessThanEq :fn3:needed 0
print ", needed: "
print :fn3:needed
label *label358
print "\n"
set *tmp36 false
label *label362
jump *label363 equal *tmp36 false
printflush null
set *tmp3 @poly
jump *label6 always 0 0
label *label363
label *label365
jump *label389 equal @mega UNIT_TYPE
remark "chooseUnitType: $type"
set :fn3:needed 0
set :fn3:occupied 0
set :fn3:free 0
ubind @mega
set :fn3:firstUnit @unit
jump *label380 equal :fn3:firstUnit null
set :fn3:needed 2
label *label373
sensor *tmp49 @unit @controlled
op equal *tmp50 *tmp49 0
sensor *tmp51 @unit @controller
op equal *tmp52 *tmp51 @this
op or *tmp53 *tmp50 *tmp52
jump *label376 equal *tmp53 false
op add :fn3:free :fn3:free 1
jump *label377 lessThan :fn3:free 2
set *tmp36 true
jump *label386 always 0 0
label *label376
op add :fn3:occupied :fn3:occupied 1
label *label377
ubind @mega
op notEqual *tmp57 @unit :fn3:firstUnit
sensor *tmp58 :fn3:firstUnit @dead
op equal *tmp59 *tmp58 0
op land *tmp60 *tmp57 *tmp59
jump *label373 notEqual *tmp60 false
label *label380
print "mega: occupied: {0}, free: "
format :fn3:occupied
print :fn3:free
jump *label382 lessThanEq :fn3:needed 0
print ", needed: "
print :fn3:needed
label *label382
print "\n"
set *tmp36 false
label *label386
jump *label387 equal *tmp36 false
printflush null
set *tmp3 @mega
jump *label6 always 0 0
label *label387
label *label389
jump *label413 equal @mono UNIT_TYPE
remark "chooseUnitType: $type"
set :fn3:needed 0
set :fn3:occupied 0
set :fn3:free 0
ubind @mono
set :fn3:firstUnit @unit
jump *label404 equal :fn3:firstUnit null
set :fn3:needed 2
label *label397
sensor *tmp49 @unit @controlled
op equal *tmp50 *tmp49 0
sensor *tmp51 @unit @controller
op equal *tmp52 *tmp51 @this
op or *tmp53 *tmp50 *tmp52
jump *label400 equal *tmp53 false
op add :fn3:free :fn3:free 1
jump *label401 lessThan :fn3:free 2
set *tmp36 true
jump *label410 always 0 0
label *label400
op add :fn3:occupied :fn3:occupied 1
label *label401
ubind @mono
op notEqual *tmp57 @unit :fn3:firstUnit
sensor *tmp58 :fn3:firstUnit @dead
op equal *tmp59 *tmp58 0
op land *tmp60 *tmp57 *tmp59
jump *label397 notEqual *tmp60 false
label *label404
print "mono: occupied: {0}, free: "
format :fn3:occupied
print :fn3:free
jump *label406 lessThanEq :fn3:needed 0
print ", needed: "
print :fn3:needed
label *label406
print "\n"
set *tmp36 false
label *label410
jump *label411 equal *tmp36 false
printflush null
set *tmp3 @mono
jump *label6 always 0 0
label *label411
label *label413
printflush message1
jump *label7 always 0 0
label *label6
print "[gold]Binding units..."
printflush message1
set .UNIT_P2 null
set .UNIT_S2 null
set .UNIT_P1 null
set .UNIT_S1 null
set :fn5:count 0
ubind *tmp3
set :fn5:firstUnit @unit
jump *label58 notEqual :fn5:firstUnit null
end
label *label58
label *label60
sensor *tmp69 @unit @controller
jump *label63 notEqual *tmp69 @this
op add :fn5:count :fn5:count 1
ucontrol flag 1 0 0 0 0
set .UNIT_S2 .UNIT_P2
set .UNIT_P2 .UNIT_S1
set .UNIT_S1 .UNIT_P1
set .UNIT_P1 @unit
jump *label62 notEqual .UNIT_S2 null
label *label63
ubind *tmp3
op notEqual *tmp75 @unit :fn5:firstUnit
sensor *tmp76 :fn5:firstUnit @dead
op equal *tmp77 *tmp76 0
op land *tmp78 *tmp75 *tmp77
jump *label60 notEqual *tmp78 false
label *label62
jump *label69 equal .UNIT_S1 null
ubind .UNIT_S1
sensor *tmp83 @unit @dead
op strictEqual *tmp84 *tmp83 0
sensor *tmp85 @unit @controller
op equal *tmp86 *tmp85 @this
op land *tmp87 *tmp84 *tmp86
jump *label68 notEqual *tmp87 false
label *label69
ubind *tmp3
set :fn7:firstUnit @unit
jump *label73 equal :fn7:firstUnit null
label *label75
sensor *tmp92 @unit @controlled
jump *label68 equal *tmp92 0
ubind *tmp3
op notEqual *tmp95 @unit :fn7:firstUnit
sensor *tmp96 :fn7:firstUnit @dead
op equal *tmp97 *tmp96 0
op land *tmp98 *tmp95 *tmp97
jump *label75 notEqual *tmp98 false
label *label73
end
label *label68
ucontrol flag 1 0 0 0 0
set *tmp79 @unit
set .UNIT_S1 *tmp79
jump *label82 equal .UNIT_P1 null
ubind .UNIT_P1
sensor *tmp103 @unit @dead
op strictEqual *tmp104 *tmp103 0
sensor *tmp105 @unit @controller
op equal *tmp106 *tmp105 @this
op land *tmp107 *tmp104 *tmp106
jump *label81 notEqual *tmp107 false
label *label82
ubind *tmp3
set :fn9:firstUnit @unit
jump *label86 equal :fn9:firstUnit null
label *label88
sensor *tmp112 @unit @controlled
jump *label81 equal *tmp112 0
ubind *tmp3
op notEqual *tmp115 @unit :fn9:firstUnit
sensor *tmp116 :fn9:firstUnit @dead
op equal *tmp117 *tmp116 0
op land *tmp118 *tmp115 *tmp117
jump *label88 notEqual *tmp118 false
label *label86
end
label *label81
ucontrol flag 1 0 0 0 0
set *tmp99 @unit
set .UNIT_P1 *tmp99
sensor *tmp119 *tmp79 @firstItem
op equal *tmp120 *tmp119 @phase-fabric
sensor *tmp121 *tmp99 @firstItem
op equal *tmp122 *tmp121 @silicon
op or *tmp123 *tmp120 *tmp122
jump *label93 equal *tmp123 false
set .UNIT_S1 *tmp99
set .UNIT_P1 *tmp79
label *label93
sensor .UNIT_CAPACITY .UNIT_S1 @itemCapacity
sensor .SPEED .UNIT_S1 @speed
op div .SPEED_TENTHS .SPEED 10
op strictEqual *tmp128 .SPEED null
jump *label95 equal *tmp128 false
stop
label *label95
print "[gold]Locating core..."
printflush message1
label *label97
ulocate building core false @copper 0 0 0 .CORE
jump *label97 equal .CORE null
sensor .CORE_X .CORE @x
sensor .CORE_Y .CORE @y
sensor .DOME_X .DOME @x
sensor .DOME_Y .DOME @y
op sub *tmp140 .DOME_X .CORE_X
op sub *tmp141 .DOME_Y .CORE_Y
op len *tmp142 *tmp140 *tmp141
op mul *tmp143 2 *tmp142
sensor *tmp144 .UNIT_S1 @speed
op div :fn10:travel_time *tmp143 *tmp144
op greaterThanEq *tmp139 :fn10:travel_time 47
jump *label101 equal *tmp139 false
jump *label105 equal .UNIT_S2 null
ubind .UNIT_S2
sensor *tmp152 @unit @dead
op strictEqual *tmp153 *tmp152 0
sensor *tmp154 @unit @controller
op equal *tmp155 *tmp154 @this
op land *tmp156 *tmp153 *tmp155
jump *label104 notEqual *tmp156 false
label *label105
ubind *tmp3
set :fn12:firstUnit @unit
jump *label109 equal :fn12:firstUnit null
label *label111
sensor *tmp161 @unit @controlled
jump *label104 equal *tmp161 0
ubind *tmp3
op notEqual *tmp164 @unit :fn12:firstUnit
sensor *tmp165 :fn12:firstUnit @dead
op equal *tmp166 *tmp165 0
op land *tmp167 *tmp164 *tmp166
jump *label111 notEqual *tmp167 false
label *label109
end
label *label104
ucontrol flag 1 0 0 0 0
set *tmp148 @unit
set .UNIT_S2 *tmp148
jump *label118 equal .UNIT_P2 null
ubind .UNIT_P2
sensor *tmp172 @unit @dead
op strictEqual *tmp173 *tmp172 0
sensor *tmp174 @unit @controller
op equal *tmp175 *tmp174 @this
op land *tmp176 *tmp173 *tmp175
jump *label117 notEqual *tmp176 false
label *label118
ubind *tmp3
set :fn14:firstUnit @unit
jump *label122 equal :fn14:firstUnit null
label *label124
sensor *tmp181 @unit @controlled
jump *label117 equal *tmp181 0
ubind *tmp3
op notEqual *tmp184 @unit :fn14:firstUnit
sensor *tmp185 :fn14:firstUnit @dead
op equal *tmp186 *tmp185 0
op land *tmp187 *tmp184 *tmp186
jump *label124 notEqual *tmp187 false
label *label122
end
label *label117
ucontrol flag 1 0 0 0 0
set *tmp168 @unit
set .UNIT_P2 *tmp168
sensor *tmp188 .UNIT_S1 @firstItem
op equal *tmp189 *tmp188 @phase-fabric
sensor *tmp190 *tmp168 @firstItem
op notEqual *tmp191 *tmp190 @phase-fabric
op land *tmp192 *tmp189 *tmp191
jump *label129 equal *tmp192 false
set :u .UNIT_S1
set .UNIT_S1 *tmp168
set .UNIT_P2 :u
label *label129
sensor *tmp194 *tmp148 @firstItem
op equal *tmp195 *tmp194 @phase-fabric
sensor *tmp196 .UNIT_P2 @firstItem
op equal *tmp197 *tmp196 @silicon
op or *tmp198 *tmp195 *tmp197
jump *label131 equal *tmp198 false
set .UNIT_S2 .UNIT_P2
set .UNIT_P2 *tmp148
label *label131
set .GROUP1 "unit  1"
set .GROUP2 "unit 2"
jump *label102 always 0 0
label *label101
ubind .UNIT_S2
ucontrol unbind 0 0 0 0 0
set .UNIT_S2 null
ubind .UNIT_P2
ucontrol unbind 0 0 0 0 0
set .UNIT_P2 null
set .GROUP1 "unit"
set .GROUP2 ""
label *label102
op equal *tmp200 *tmp139 false
sensor *tmp201 .UNIT_S1 @totalItems
sensor *tmp202 .UNIT_S2 @totalItems
op lessThan *tmp203 *tmp201 *tmp202
op or .SUPPLY_S_FIRST *tmp200 *tmp203
sensor *tmp206 .UNIT_P1 @totalItems
sensor *tmp207 .UNIT_P2 @totalItems
op lessThan *tmp208 *tmp206 *tmp207
op or .SUPPLY_P_FIRST *tmp200 *tmp208
op add :unitCheck @time 5000
sensor *tmp211 switch1 @enabled
jump *label135 equal *tmp211 false
label *label321
set :start @time
print " === [gold]Supplying Overdrive Dome[] === \n\nUnit type: [green]{0}[]\n\n[green]Silicon[] status:\n"
format *tmp3
sensor :fn15:level .DOME @silicon
jump *label137 lessThanEq :fn15:level 3
print "  dome:  [green]{0}[]\n"
format :fn15:level
jump *label138 always 0 0
label *label137
print "  dome:  [coral]{0}[]\n"
format :fn15:level
label *label138
jump *label141 equal .UNIT_S1 null
ubind .UNIT_S1
sensor *tmp221 @unit @dead
op strictEqual *tmp222 *tmp221 0
sensor *tmp223 @unit @controller
op equal *tmp224 *tmp223 @this
op land *tmp225 *tmp222 *tmp224
jump *label140 notEqual *tmp225 false
label *label141
ubind *tmp3
set :fn17:firstUnit @unit
jump *label145 equal :fn17:firstUnit null
label *label147
sensor *tmp230 @unit @controlled
jump *label140 equal *tmp230 0
ubind *tmp3
op notEqual *tmp233 @unit :fn17:firstUnit
sensor *tmp234 :fn17:firstUnit @dead
op equal *tmp235 *tmp234 0
op land *tmp236 *tmp233 *tmp235
jump *label147 notEqual *tmp236 false
label *label145
end
label *label140
set :fn16:msg ""
sensor :fn16:state @unit @flag
set :fn16:distance -1
op lessThan *tmp238 :fn16:state 2
op greaterThan *tmp239 :fn16:state 3
op or *tmp240 *tmp238 *tmp239
jump *label152 equal *tmp240 false
sensor *tmp242 @unit @firstItem
jump *label154 notEqual *tmp242 @silicon
set :fn16:state 3
jump *label155 always 0 0
label *label154
sensor *tmp245 @unit @totalItems
jump *label156 notEqual *tmp245 0
set :fn16:state 2
jump *label157 always 0 0
label *label156
set :fn16:msg ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6 0 0
ucontrol within .CORE_X .CORE_Y 8 *tmp248 0
jump *label158 equal *tmp248 false
ucontrol itemDrop .CORE .UNIT_CAPACITY 0 0 0
label *label158
label *label157
label *label155
label *label152
jump *label160 notEqual :fn16:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp252 0
jump *label162 equal *tmp252 false
ucontrol itemTake .CORE @silicon .UNIT_CAPACITY 0 0
sensor *tmp254 @unit @totalItems
jump *label164 lessThan *tmp254 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn16:state 3
jump *label163 always 0 0
label *label164
set :fn16:msg ", loading\n"
jump *label163 always 0 0
label *label162
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn16:msg ", fetching in [gold]"
sensor *tmp257 @unit @x
op sub *tmp258 .CORE_X *tmp257
sensor *tmp259 @unit @y
op sub *tmp260 .CORE_Y *tmp259
op len *tmp261 *tmp258 *tmp260
op idiv *tmp262 *tmp261 .SPEED_TENTHS
op div :fn16:distance *tmp262 10
label *label163
label *label160
jump *label166 notEqual :fn16:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp266 0
jump *label168 equal *tmp266 false
jump *label170 equal .SUPPLY_S_FIRST false
ucontrol itemDrop .DOME .UNIT_CAPACITY 0 0 0
set :fn16:msg ", supplying\n"
jump *label171 always 0 0
label *label170
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn16:msg ", waiting\n"
label *label171
sensor *tmp269 @unit @totalItems
jump *label169 greaterThan *tmp269 0
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn16:state 2
jump *label169 always 0 0
label *label168
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn16:msg ", returning in [gold]"
sensor *tmp272 @unit @x
op sub *tmp273 .DOME_X *tmp272
sensor *tmp274 @unit @y
op sub *tmp275 .DOME_Y *tmp274
op len *tmp276 *tmp273 *tmp275
op idiv *tmp277 *tmp276 .SPEED_TENTHS
op div :fn16:distance *tmp277 10
label *label169
label *label166
ucontrol flag :fn16:state 0 0 0 0
sensor *tmp279 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP1
format *tmp279
jump *label174 lessThan :fn16:distance 0
print :fn16:msg
print :fn16:distance
print "[] sec\n"
jump *label175 always 0 0
label *label174
print :fn16:msg
label *label175
set *tmp217 @unit
set .UNIT_S1 *tmp217
jump *label176 equal *tmp139 false
op equal *tmp283 .SUPPLY_S_FIRST false
jump *label180 equal .UNIT_S2 null
ubind .UNIT_S2
sensor *tmp288 @unit @dead
op strictEqual *tmp289 *tmp288 0
sensor *tmp290 @unit @controller
op equal *tmp291 *tmp290 @this
op land *tmp292 *tmp289 *tmp291
jump *label179 notEqual *tmp292 false
label *label180
ubind *tmp3
set :fn19:firstUnit @unit
jump *label184 equal :fn19:firstUnit null
label *label186
sensor *tmp297 @unit @controlled
jump *label179 equal *tmp297 0
ubind *tmp3
op notEqual *tmp300 @unit :fn19:firstUnit
sensor *tmp301 :fn19:firstUnit @dead
op equal *tmp302 *tmp301 0
op land *tmp303 *tmp300 *tmp302
jump *label186 notEqual *tmp303 false
label *label184
end
label *label179
set :fn18:msg ""
sensor :fn18:state @unit @flag
set :fn18:distance -1
op lessThan *tmp305 :fn18:state 2
op greaterThan *tmp306 :fn18:state 3
op or *tmp307 *tmp305 *tmp306
jump *label191 equal *tmp307 false
sensor *tmp309 @unit @firstItem
jump *label193 notEqual *tmp309 @silicon
set :fn18:state 3
jump *label194 always 0 0
label *label193
sensor *tmp312 @unit @totalItems
jump *label195 notEqual *tmp312 0
set :fn18:state 2
jump *label196 always 0 0
label *label195
set :fn18:msg ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6 0 0
ucontrol within .CORE_X .CORE_Y 8 *tmp315 0
jump *label197 equal *tmp315 false
ucontrol itemDrop .CORE .UNIT_CAPACITY 0 0 0
label *label197
label *label196
label *label194
label *label191
jump *label199 notEqual :fn18:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp319 0
jump *label201 equal *tmp319 false
ucontrol itemTake .CORE @silicon .UNIT_CAPACITY 0 0
sensor *tmp321 @unit @totalItems
jump *label203 lessThan *tmp321 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn18:state 3
jump *label202 always 0 0
label *label203
set :fn18:msg ", loading\n"
jump *label202 always 0 0
label *label201
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn18:msg ", fetching in [gold]"
sensor *tmp324 @unit @x
op sub *tmp325 .CORE_X *tmp324
sensor *tmp326 @unit @y
op sub *tmp327 .CORE_Y *tmp326
op len *tmp328 *tmp325 *tmp327
op idiv *tmp329 *tmp328 .SPEED_TENTHS
op div :fn18:distance *tmp329 10
label *label202
label *label199
jump *label205 notEqual :fn18:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp333 0
jump *label207 equal *tmp333 false
jump *label209 equal *tmp283 false
ucontrol itemDrop .DOME .UNIT_CAPACITY 0 0 0
set :fn18:msg ", supplying\n"
jump *label210 always 0 0
label *label209
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn18:msg ", waiting\n"
label *label210
sensor *tmp336 @unit @totalItems
jump *label208 greaterThan *tmp336 0
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn18:state 2
jump *label208 always 0 0
label *label207
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn18:msg ", returning in [gold]"
sensor *tmp339 @unit @x
op sub *tmp340 .DOME_X *tmp339
sensor *tmp341 @unit @y
op sub *tmp342 .DOME_Y *tmp341
op len *tmp343 *tmp340 *tmp342
op idiv *tmp344 *tmp343 .SPEED_TENTHS
op div :fn18:distance *tmp344 10
label *label208
label *label205
ucontrol flag :fn18:state 0 0 0 0
sensor *tmp346 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP2
format *tmp346
jump *label213 lessThan :fn18:distance 0
print :fn18:msg
print :fn18:distance
print "[] sec\n"
jump *label214 always 0 0
label *label213
print :fn18:msg
label *label214
set *tmp284 @unit
set .UNIT_S2 *tmp284
jump *label215 equal .SUPPLY_S_FIRST false
sensor *tmp350 *tmp217 @totalItems
op greaterThan .SUPPLY_S_FIRST *tmp350 0
jump *label216 always 0 0
label *label215
sensor *tmp352 *tmp284 @totalItems
op equal .SUPPLY_S_FIRST *tmp352 0
label *label216
label *label176
print "\n[green]Phase fabric[] status:\n"
sensor :fn20:level .DOME @phase-fabric
jump *label218 lessThanEq :fn20:level 3
print "  dome:  [green]{0}[]\n"
format :fn20:level
jump *label219 always 0 0
label *label218
print "  dome:  [coral]{0}[]\n"
format :fn20:level
label *label219
jump *label222 equal .UNIT_P1 null
ubind .UNIT_P1
sensor *tmp362 @unit @dead
op strictEqual *tmp363 *tmp362 0
sensor *tmp364 @unit @controller
op equal *tmp365 *tmp364 @this
op land *tmp366 *tmp363 *tmp365
jump *label221 notEqual *tmp366 false
label *label222
ubind *tmp3
set :fn22:firstUnit @unit
jump *label226 equal :fn22:firstUnit null
label *label228
sensor *tmp371 @unit @controlled
jump *label221 equal *tmp371 0
ubind *tmp3
op notEqual *tmp374 @unit :fn22:firstUnit
sensor *tmp375 :fn22:firstUnit @dead
op equal *tmp376 *tmp375 0
op land *tmp377 *tmp374 *tmp376
jump *label228 notEqual *tmp377 false
label *label226
end
label *label221
set :fn21:msg ""
sensor :fn21:state @unit @flag
set :fn21:distance -1
op lessThan *tmp379 :fn21:state 2
op greaterThan *tmp380 :fn21:state 3
op or *tmp381 *tmp379 *tmp380
jump *label233 equal *tmp381 false
sensor *tmp383 @unit @firstItem
jump *label235 notEqual *tmp383 @phase-fabric
set :fn21:state 3
jump *label236 always 0 0
label *label235
sensor *tmp386 @unit @totalItems
jump *label237 notEqual *tmp386 0
set :fn21:state 2
jump *label238 always 0 0
label *label237
set :fn21:msg ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6 0 0
ucontrol within .CORE_X .CORE_Y 8 *tmp389 0
jump *label239 equal *tmp389 false
ucontrol itemDrop .CORE .UNIT_CAPACITY 0 0 0
label *label239
label *label238
label *label236
label *label233
jump *label241 notEqual :fn21:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp393 0
jump *label243 equal *tmp393 false
ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY 0 0
sensor *tmp395 @unit @totalItems
jump *label245 lessThan *tmp395 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn21:state 3
jump *label244 always 0 0
label *label245
set :fn21:msg ", loading\n"
jump *label244 always 0 0
label *label243
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn21:msg ", fetching in [gold]"
sensor *tmp398 @unit @x
op sub *tmp399 .CORE_X *tmp398
sensor *tmp400 @unit @y
op sub *tmp401 .CORE_Y *tmp400
op len *tmp402 *tmp399 *tmp401
op idiv *tmp403 *tmp402 .SPEED_TENTHS
op div :fn21:distance *tmp403 10
label *label244
label *label241
jump *label247 notEqual :fn21:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp407 0
jump *label249 equal *tmp407 false
jump *label251 equal .SUPPLY_P_FIRST false
ucontrol itemDrop .DOME .UNIT_CAPACITY 0 0 0
set :fn21:msg ", supplying\n"
jump *label252 always 0 0
label *label251
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn21:msg ", waiting\n"
label *label252
sensor *tmp410 @unit @totalItems
jump *label250 greaterThan *tmp410 0
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn21:state 2
jump *label250 always 0 0
label *label249
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn21:msg ", returning in [gold]"
sensor *tmp413 @unit @x
op sub *tmp414 .DOME_X *tmp413
sensor *tmp415 @unit @y
op sub *tmp416 .DOME_Y *tmp415
op len *tmp417 *tmp414 *tmp416
op idiv *tmp418 *tmp417 .SPEED_TENTHS
op div :fn21:distance *tmp418 10
label *label250
label *label247
ucontrol flag :fn21:state 0 0 0 0
sensor *tmp420 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP1
format *tmp420
jump *label255 lessThan :fn21:distance 0
print :fn21:msg
print :fn21:distance
print "[] sec\n"
jump *label256 always 0 0
label *label255
print :fn21:msg
label *label256
set *tmp358 @unit
set .UNIT_P1 *tmp358
jump *label257 equal *tmp139 false
op equal *tmp424 .SUPPLY_P_FIRST false
jump *label261 equal .UNIT_P2 null
ubind .UNIT_P2
sensor *tmp429 @unit @dead
op strictEqual *tmp430 *tmp429 0
sensor *tmp431 @unit @controller
op equal *tmp432 *tmp431 @this
op land *tmp433 *tmp430 *tmp432
jump *label260 notEqual *tmp433 false
label *label261
ubind *tmp3
set :fn24:firstUnit @unit
jump *label265 equal :fn24:firstUnit null
label *label267
sensor *tmp438 @unit @controlled
jump *label260 equal *tmp438 0
ubind *tmp3
op notEqual *tmp441 @unit :fn24:firstUnit
sensor *tmp442 :fn24:firstUnit @dead
op equal *tmp443 *tmp442 0
op land *tmp444 *tmp441 *tmp443
jump *label267 notEqual *tmp444 false
label *label265
end
label *label260
set :fn23:msg ""
sensor :fn23:state @unit @flag
set :fn23:distance -1
op lessThan *tmp446 :fn23:state 2
op greaterThan *tmp447 :fn23:state 3
op or *tmp448 *tmp446 *tmp447
jump *label272 equal *tmp448 false
sensor *tmp450 @unit @firstItem
jump *label274 notEqual *tmp450 @phase-fabric
set :fn23:state 3
jump *label275 always 0 0
label *label274
sensor *tmp453 @unit @totalItems
jump *label276 notEqual *tmp453 0
set :fn23:state 2
jump *label277 always 0 0
label *label276
set :fn23:msg ", initializing\n"
ucontrol approach .CORE_X .CORE_Y 6 0 0
ucontrol within .CORE_X .CORE_Y 8 *tmp456 0
jump *label278 equal *tmp456 false
ucontrol itemDrop .CORE .UNIT_CAPACITY 0 0 0
label *label278
label *label277
label *label275
label *label272
jump *label280 notEqual :fn23:state 2
ucontrol within .CORE_X .CORE_Y 8 *tmp460 0
jump *label282 equal *tmp460 false
ucontrol itemTake .CORE @phase-fabric .UNIT_CAPACITY 0 0
sensor *tmp462 @unit @totalItems
jump *label284 lessThan *tmp462 .UNIT_CAPACITY
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn23:state 3
jump *label283 always 0 0
label *label284
set :fn23:msg ", loading\n"
jump *label283 always 0 0
label *label282
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn23:msg ", fetching in [gold]"
sensor *tmp465 @unit @x
op sub *tmp466 .CORE_X *tmp465
sensor *tmp467 @unit @y
op sub *tmp468 .CORE_Y *tmp467
op len *tmp469 *tmp466 *tmp468
op idiv *tmp470 *tmp469 .SPEED_TENTHS
op div :fn23:distance *tmp470 10
label *label283
label *label280
jump *label286 notEqual :fn23:state 3
ucontrol within .DOME_X .DOME_Y 8 *tmp474 0
jump *label288 equal *tmp474 false
jump *label290 equal *tmp424 false
ucontrol itemDrop .DOME .UNIT_CAPACITY 0 0 0
set :fn23:msg ", supplying\n"
jump *label291 always 0 0
label *label290
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn23:msg ", waiting\n"
label *label291
sensor *tmp477 @unit @totalItems
jump *label289 greaterThan *tmp477 0
ucontrol approach .CORE_X .CORE_Y 6 0 0
set :fn23:state 2
jump *label289 always 0 0
label *label288
ucontrol approach .DOME_X .DOME_Y 6 0 0
set :fn23:msg ", returning in [gold]"
sensor *tmp480 @unit @x
op sub *tmp481 .DOME_X *tmp480
sensor *tmp482 @unit @y
op sub *tmp483 .DOME_Y *tmp482
op len *tmp484 *tmp481 *tmp483
op idiv *tmp485 *tmp484 .SPEED_TENTHS
op div :fn23:distance *tmp485 10
label *label289
label *label286
ucontrol flag :fn23:state 0 0 0 0
sensor *tmp487 @unit @totalItems
print "  {0}: [gold]{0}[]"
format .GROUP2
format *tmp487
jump *label294 lessThan :fn23:distance 0
print :fn23:msg
print :fn23:distance
print "[] sec\n"
jump *label295 always 0 0
label *label294
print :fn23:msg
label *label295
set *tmp425 @unit
set .UNIT_P2 *tmp425
jump *label296 equal .SUPPLY_P_FIRST false
sensor *tmp491 *tmp358 @totalItems
op greaterThan .SUPPLY_P_FIRST *tmp491 0
jump *label297 always 0 0
label *label296
sensor *tmp493 *tmp425 @totalItems
op equal .SUPPLY_P_FIRST *tmp493 0
label *label297
label *label257
op sub *tmp495 @time :start
op floor *tmp496 *tmp495 0
print "\n[lightgray]Loop time: {0} ms"
format *tmp496
printflush message1
op notEqual *tmp497 *tmp3 UNIT_TYPE
op greaterThan *tmp498 :unitCheck @time
op land *tmp499 *tmp497 *tmp498
jump *label298 equal *tmp499 false
set :fn25:occupied 0
set :fn25:free 0
ubind UNIT_TYPE
set :fn25:firstUnit @unit
jump *label313 equal :fn25:firstUnit null
set *tmp513 2
set :fn26:unit @unit
sensor *tmp510 :fn26:unit @speed
op div :fn26:travel_time *tmp143 *tmp510
jump *label305 lessThan :fn26:travel_time 47
set *tmp513 4
label *label305
label *label306
sensor *tmp514 @unit @controlled
op equal *tmp515 *tmp514 0
sensor *tmp516 @unit @controller
op equal *tmp517 *tmp516 @this
op or *tmp518 *tmp515 *tmp517
jump *label309 equal *tmp518 false
op add :fn25:free :fn25:free 1
jump *label310 lessThan :fn25:free *tmp513
set *tmp501 true
jump *label300 always 0 0
label *label309
op add :fn25:occupied :fn25:occupied 1
label *label310
ubind UNIT_TYPE
op notEqual *tmp522 @unit :fn25:firstUnit
sensor *tmp523 :fn25:firstUnit @dead
op equal *tmp524 *tmp523 0
op land *tmp525 *tmp522 *tmp524
jump *label306 notEqual *tmp525 false
label *label313
set *tmp501 false
label *label300
jump *label317 equal *tmp501 false
end
label *label317
op add :unitCheck @time 5000
label *label298
sensor *tmp211 switch1 @enabled
jump *label321 notEqual *tmp211 false
label *label135
