   125 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    49 instructions eliminated by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    68 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  * Convert case at line 11:5 (segments: 1, padded high)         size   -49, benefit     1189.8, efficiency   Infinity (-49 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     4 lookup block *tmp0 :i
     5 set :block *tmp0
     6 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 strictEqual *tmp3 null
+    7 jump *label6 strictEqual :identifyBlock:block null
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000001
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal *tmp3 @graphite-press
+   13 jump *label8 equal :identifyBlock:block @graphite-press
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000002
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal *tmp3 @copper-wall
+   19 jump *label10 equal :identifyBlock:block @copper-wall
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000004
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal *tmp3 @copper-wall-large
+   25 jump *label12 equal :identifyBlock:block @copper-wall-large
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000008
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall
+   31 jump *label14 equal :identifyBlock:block @titanium-wall
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000010
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal *tmp3 @titanium-wall-large
+   37 jump *label16 equal :identifyBlock:block @titanium-wall-large
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000020
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall
+   43 jump *label18 equal :identifyBlock:block @plastanium-wall
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000040
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal *tmp3 @plastanium-wall-large
+   49 jump *label20 equal :identifyBlock:block @plastanium-wall-large
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000080
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall
+   55 jump *label22 equal :identifyBlock:block @thorium-wall
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000100
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal *tmp3 @thorium-wall-large
+   61 jump *label24 equal :identifyBlock:block @thorium-wall-large
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000200
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal *tmp3 @phase-wall
+   67 jump *label26 equal :identifyBlock:block @phase-wall
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000400
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal *tmp3 @phase-wall-large
+   73 jump *label28 equal :identifyBlock:block @phase-wall-large
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00000800
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal *tmp3 @surge-wall
+   79 jump *label30 equal :identifyBlock:block @surge-wall
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00001000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal *tmp3 @surge-wall-large
+   85 jump *label32 equal :identifyBlock:block @surge-wall-large
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00002000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall
+   91 jump *label34 equal :identifyBlock:block @scrap-wall
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00004000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-large
+   97 jump *label36 equal :identifyBlock:block @scrap-wall-large
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00008000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-huge
+  103 jump *label38 equal :identifyBlock:block @scrap-wall-huge
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00010000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal *tmp3 @scrap-wall-gigantic
+  109 jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00020000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall
+  115 jump *label42 equal :identifyBlock:block @tungsten-wall
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00040000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal *tmp3 @tungsten-wall-large
+  121 jump *label44 equal :identifyBlock:block @tungsten-wall-large
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00080000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall
+  127 jump *label46 equal :identifyBlock:block @beryllium-wall
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00100000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal *tmp3 @beryllium-wall-large
+  133 jump *label48 equal :identifyBlock:block @beryllium-wall-large
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00200000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall
+  139 jump *label50 equal :identifyBlock:block @carbide-wall
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00400000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal *tmp3 @carbide-wall-large
+  145 jump *label52 equal :identifyBlock:block @carbide-wall-large
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x00800000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall
+  151 jump *label54 equal :identifyBlock:block @reinforced-surge-wall
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x01000000
   155 jump *label4 always
   156 label *label53
-    * jump *label56 equal *tmp3 @reinforced-surge-wall-large
+  157 jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
   158 jump *label55 always
   159 label *label56
   160 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   168 op and *tmp4 :total :bit
   169 jump *label57 equal *tmp4 false
   170 op or :total :total 0x800000000
-    * set *tmp5 :total
   171 jump *label58 always
   172 label *label57
   173 op or :total :total :bit
-    * set *tmp5 :total
   174 label *label58
   175 label *label1
   176 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 set :identifyBlock:block :block
     6 jump *label6 strictEqual :identifyBlock:block null
     7 jump *label5 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 set :identifyBlock:block :block
-    * jump *label6 strictEqual :identifyBlock:block null
+    6 jump *label6 strictEqual :block null
     7 jump *label5 always
     8 label *label6
     9 set *tmp2 0x00000001
    10 jump *label4 always
    11 label *label5
-    * jump *label8 equal :identifyBlock:block @graphite-press
+   12 jump *label8 equal :block @graphite-press
    13 jump *label7 always
    14 label *label8
    15 set *tmp2 0x00000002
    16 jump *label4 always
    17 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall
+   18 jump *label10 equal :block @copper-wall
    19 jump *label9 always
    20 label *label10
    21 set *tmp2 0x00000004
    22 jump *label4 always
    23 label *label9
-    * jump *label12 equal :identifyBlock:block @copper-wall-large
+   24 jump *label12 equal :block @copper-wall-large
    25 jump *label11 always
    26 label *label12
    27 set *tmp2 0x00000008
    28 jump *label4 always
    29 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall
+   30 jump *label14 equal :block @titanium-wall
    31 jump *label13 always
    32 label *label14
    33 set *tmp2 0x00000010
    34 jump *label4 always
    35 label *label13
-    * jump *label16 equal :identifyBlock:block @titanium-wall-large
+   36 jump *label16 equal :block @titanium-wall-large
    37 jump *label15 always
    38 label *label16
    39 set *tmp2 0x00000020
    40 jump *label4 always
    41 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall
+   42 jump *label18 equal :block @plastanium-wall
    43 jump *label17 always
    44 label *label18
    45 set *tmp2 0x00000040
    46 jump *label4 always
    47 label *label17
-    * jump *label20 equal :identifyBlock:block @plastanium-wall-large
+   48 jump *label20 equal :block @plastanium-wall-large
    49 jump *label19 always
    50 label *label20
    51 set *tmp2 0x00000080
    52 jump *label4 always
    53 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall
+   54 jump *label22 equal :block @thorium-wall
    55 jump *label21 always
    56 label *label22
    57 set *tmp2 0x00000100
    58 jump *label4 always
    59 label *label21
-    * jump *label24 equal :identifyBlock:block @thorium-wall-large
+   60 jump *label24 equal :block @thorium-wall-large
    61 jump *label23 always
    62 label *label24
    63 set *tmp2 0x00000200
    64 jump *label4 always
    65 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall
+   66 jump *label26 equal :block @phase-wall
    67 jump *label25 always
    68 label *label26
    69 set *tmp2 0x00000400
    70 jump *label4 always
    71 label *label25
-    * jump *label28 equal :identifyBlock:block @phase-wall-large
+   72 jump *label28 equal :block @phase-wall-large
    73 jump *label27 always
    74 label *label28
    75 set *tmp2 0x00000800
    76 jump *label4 always
    77 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall
+   78 jump *label30 equal :block @surge-wall
    79 jump *label29 always
    80 label *label30
    81 set *tmp2 0x00001000
    82 jump *label4 always
    83 label *label29
-    * jump *label32 equal :identifyBlock:block @surge-wall-large
+   84 jump *label32 equal :block @surge-wall-large
    85 jump *label31 always
    86 label *label32
    87 set *tmp2 0x00002000
    88 jump *label4 always
    89 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall
+   90 jump *label34 equal :block @scrap-wall
    91 jump *label33 always
    92 label *label34
    93 set *tmp2 0x00004000
    94 jump *label4 always
    95 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-large
+   96 jump *label36 equal :block @scrap-wall-large
    97 jump *label35 always
    98 label *label36
    99 set *tmp2 0x00008000
   100 jump *label4 always
   101 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-huge
+  102 jump *label38 equal :block @scrap-wall-huge
   103 jump *label37 always
   104 label *label38
   105 set *tmp2 0x00010000
   106 jump *label4 always
   107 label *label37
-    * jump *label40 equal :identifyBlock:block @scrap-wall-gigantic
+  108 jump *label40 equal :block @scrap-wall-gigantic
   109 jump *label39 always
   110 label *label40
   111 set *tmp2 0x00020000
   112 jump *label4 always
   113 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall
+  114 jump *label42 equal :block @tungsten-wall
   115 jump *label41 always
   116 label *label42
   117 set *tmp2 0x00040000
   118 jump *label4 always
   119 label *label41
-    * jump *label44 equal :identifyBlock:block @tungsten-wall-large
+  120 jump *label44 equal :block @tungsten-wall-large
   121 jump *label43 always
   122 label *label44
   123 set *tmp2 0x00080000
   124 jump *label4 always
   125 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall
+  126 jump *label46 equal :block @beryllium-wall
   127 jump *label45 always
   128 label *label46
   129 set *tmp2 0x00100000
   130 jump *label4 always
   131 label *label45
-    * jump *label48 equal :identifyBlock:block @beryllium-wall-large
+  132 jump *label48 equal :block @beryllium-wall-large
   133 jump *label47 always
   134 label *label48
   135 set *tmp2 0x00200000
   136 jump *label4 always
   137 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall
+  138 jump *label50 equal :block @carbide-wall
   139 jump *label49 always
   140 label *label50
   141 set *tmp2 0x00400000
   142 jump *label4 always
   143 label *label49
-    * jump *label52 equal :identifyBlock:block @carbide-wall-large
+  144 jump *label52 equal :block @carbide-wall-large
   145 jump *label51 always
   146 label *label52
   147 set *tmp2 0x00800000
   148 jump *label4 always
   149 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall
+  150 jump *label54 equal :block @reinforced-surge-wall
   151 jump *label53 always
   152 label *label54
   153 set *tmp2 0x01000000
   154 jump *label4 always
   155 label *label53
-    * jump *label56 equal :identifyBlock:block @reinforced-surge-wall-large
+  156 jump *label56 equal :block @reinforced-surge-wall-large
   157 jump *label55 always
   158 label *label56
   159 set *tmp2 0x02000000
 
   163 label *label4
   164 set *tmp1 *tmp2
   165 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  166 set :bit *tmp2
+  167 op and *tmp4 :total *tmp1
   168 jump *label57 equal *tmp4 false
   169 op or :total :total 0x800000000
   170 jump *label58 always
   171 label *label57
-    * op or :total :total :bit
+  172 op or :total :total *tmp1
   173 label *label58
   174 label *label1
   175 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
-    * set :identifyBlock:block :block
     5 jump *label6 strictEqual :block null
     6 jump *label5 always
     7 label *label6
 
   162 label *label4
   163 set *tmp1 *tmp2
   164 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  165 op and *tmp4 :total *tmp2
   166 jump *label57 equal *tmp4 false
   167 op or :total :total 0x800000000
   168 jump *label58 always
   169 label *label57
-    * op or :total :total *tmp1
+  170 op or :total :total *tmp2
   171 label *label58
   172 label *label1
   173 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   160 label *label55
   161 set *tmp2 0
   162 label *label4
-    * set *tmp1 *tmp2
   163 label *label3
   164 op and *tmp4 :total *tmp2
   165 jump *label57 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label59
     4 lookup block :block :i
     5 jump *label6 strictEqual :block null
     6 jump *label5 always
 
   170 label *label58
   171 label *label1
   172 op add :i :i 1
-    * jump *label0 always
+  173 jump *label59 lessThan :i @blockCount
   174 label *label2
   175 assertequals 0x03FFFFFF :total "Test selected blocks"
   176 end

Modifications by Convert case at line 11:5 (segments: 1, padded high) (-49 instructions):
 
     2 label *label0
     3 label *label59
     4 lookup block :block :i
-    * jump *label6 strictEqual :block null
-    * jump *label5 always
+    5 sensor *tmp6 :block @id
+    6 multijump *tmp6 0 0 (m:*label62)
     7 label *label6
     8 set *tmp2 0x00000001
     9 jump *label4 always
    10 label *label5
-    * jump *label8 equal :block @graphite-press
-    * jump *label7 always
+   11 multilabel *label63 (m:*label62)
+   12 label *label61
+   13 jump *label6 strictEqual *tmp6 null
    14 label *label8
    15 set *tmp2 0x00000002
    16 jump *label4 always
    17 label *label7
-    * jump *label10 equal :block @copper-wall
-    * jump *label9 always
+   18 multilabel *label65 (m:*label62)
    19 label *label10
    20 set *tmp2 0x00000004
    21 jump *label4 always
    22 label *label9
-    * jump *label12 equal :block @copper-wall-large
-    * jump *label11 always
+   23 multilabel *label66 (m:*label62)
    24 label *label12
    25 set *tmp2 0x00000008
    26 jump *label4 always
    27 label *label11
-    * jump *label14 equal :block @titanium-wall
-    * jump *label13 always
+   28 multilabel *label67 (m:*label62)
    29 label *label14
    30 set *tmp2 0x00000010
    31 jump *label4 always
    32 label *label13
-    * jump *label16 equal :block @titanium-wall-large
-    * jump *label15 always
+   33 multilabel *label68 (m:*label62)
    34 label *label16
    35 set *tmp2 0x00000020
    36 jump *label4 always
    37 label *label15
-    * jump *label18 equal :block @plastanium-wall
-    * jump *label17 always
+   38 multilabel *label69 (m:*label62)
    39 label *label18
    40 set *tmp2 0x00000040
    41 jump *label4 always
    42 label *label17
-    * jump *label20 equal :block @plastanium-wall-large
-    * jump *label19 always
+   43 multilabel *label70 (m:*label62)
    44 label *label20
    45 set *tmp2 0x00000080
    46 jump *label4 always
    47 label *label19
-    * jump *label22 equal :block @thorium-wall
-    * jump *label21 always
+   48 multilabel *label71 (m:*label62)
    49 label *label22
    50 set *tmp2 0x00000100
    51 jump *label4 always
    52 label *label21
-    * jump *label24 equal :block @thorium-wall-large
-    * jump *label23 always
+   53 multilabel *label72 (m:*label62)
    54 label *label24
    55 set *tmp2 0x00000200
    56 jump *label4 always
    57 label *label23
-    * jump *label26 equal :block @phase-wall
-    * jump *label25 always
+   58 multilabel *label73 (m:*label62)
    59 label *label26
    60 set *tmp2 0x00000400
    61 jump *label4 always
    62 label *label25
-    * jump *label28 equal :block @phase-wall-large
-    * jump *label27 always
+   63 multilabel *label74 (m:*label62)
    64 label *label28
    65 set *tmp2 0x00000800
    66 jump *label4 always
    67 label *label27
-    * jump *label30 equal :block @surge-wall
-    * jump *label29 always
+   68 multilabel *label75 (m:*label62)
    69 label *label30
    70 set *tmp2 0x00001000
    71 jump *label4 always
    72 label *label29
-    * jump *label32 equal :block @surge-wall-large
-    * jump *label31 always
+   73 multilabel *label76 (m:*label62)
    74 label *label32
    75 set *tmp2 0x00002000
    76 jump *label4 always
    77 label *label31
-    * jump *label34 equal :block @scrap-wall
-    * jump *label33 always
+   78 multilabel *label77 (m:*label62)
    79 label *label34
    80 set *tmp2 0x00004000
    81 jump *label4 always
    82 label *label33
-    * jump *label36 equal :block @scrap-wall-large
-    * jump *label35 always
+   83 multilabel *label78 (m:*label62)
    84 label *label36
    85 set *tmp2 0x00008000
    86 jump *label4 always
    87 label *label35
-    * jump *label38 equal :block @scrap-wall-huge
-    * jump *label37 always
+   88 multilabel *label79 (m:*label62)
    89 label *label38
    90 set *tmp2 0x00010000
    91 jump *label4 always
    92 label *label37
-    * jump *label40 equal :block @scrap-wall-gigantic
-    * jump *label39 always
+   93 multilabel *label80 (m:*label62)
    94 label *label40
    95 set *tmp2 0x00020000
    96 jump *label4 always
    97 label *label39
-    * jump *label42 equal :block @tungsten-wall
-    * jump *label41 always
+   98 multilabel *label81 (m:*label62)
    99 label *label42
   100 set *tmp2 0x00040000
   101 jump *label4 always
   102 label *label41
-    * jump *label44 equal :block @tungsten-wall-large
-    * jump *label43 always
+  103 multilabel *label82 (m:*label62)
   104 label *label44
   105 set *tmp2 0x00080000
   106 jump *label4 always
   107 label *label43
-    * jump *label46 equal :block @beryllium-wall
-    * jump *label45 always
+  108 multilabel *label83 (m:*label62)
   109 label *label46
   110 set *tmp2 0x00100000
   111 jump *label4 always
   112 label *label45
-    * jump *label48 equal :block @beryllium-wall-large
-    * jump *label47 always
+  113 multilabel *label84 (m:*label62)
   114 label *label48
   115 set *tmp2 0x00200000
   116 jump *label4 always
   117 label *label47
-    * jump *label50 equal :block @carbide-wall
-    * jump *label49 always
+  118 multilabel *label85 (m:*label62)
   119 label *label50
   120 set *tmp2 0x00400000
   121 jump *label4 always
   122 label *label49
-    * jump *label52 equal :block @carbide-wall-large
-    * jump *label51 always
+  123 multilabel *label86 (m:*label62)
   124 label *label52
   125 set *tmp2 0x00800000
   126 jump *label4 always
   127 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall
-    * jump *label53 always
+  128 multilabel *label87 (m:*label62)
   129 label *label54
   130 set *tmp2 0x01000000
   131 jump *label4 always
   132 label *label53
-    * jump *label56 equal :block @reinforced-surge-wall-large
-    * jump *label55 always
+  133 multilabel *label88 (m:*label62)
   134 label *label56
   135 set *tmp2 0x02000000
   136 jump *label4 always
   137 label *label55
+  138 multilabel *label64 (m:*label62)
+  139 label *label60
   140 set *tmp2 0
   141 label *label4
   142 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label59
     3 lookup block :block :i
     4 sensor *tmp6 :block @id
 
     6 label *label6
     7 set *tmp2 0x00000001
     8 jump *label4 always
-    * label *label5
     9 multilabel *label63 (m:*label62)
-    * label *label61
    10 jump *label6 strictEqual *tmp6 null
-    * label *label8
    11 set *tmp2 0x00000002
    12 jump *label4 always
-    * label *label7
    13 multilabel *label65 (m:*label62)
-    * label *label10
    14 set *tmp2 0x00000004
    15 jump *label4 always
-    * label *label9
    16 multilabel *label66 (m:*label62)
-    * label *label12
    17 set *tmp2 0x00000008
    18 jump *label4 always
-    * label *label11
    19 multilabel *label67 (m:*label62)
-    * label *label14
    20 set *tmp2 0x00000010
    21 jump *label4 always
-    * label *label13
    22 multilabel *label68 (m:*label62)
-    * label *label16
    23 set *tmp2 0x00000020
    24 jump *label4 always
-    * label *label15
    25 multilabel *label69 (m:*label62)
-    * label *label18
    26 set *tmp2 0x00000040
    27 jump *label4 always
-    * label *label17
    28 multilabel *label70 (m:*label62)
-    * label *label20
    29 set *tmp2 0x00000080
    30 jump *label4 always
-    * label *label19
    31 multilabel *label71 (m:*label62)
-    * label *label22
    32 set *tmp2 0x00000100
    33 jump *label4 always
-    * label *label21
    34 multilabel *label72 (m:*label62)
-    * label *label24
    35 set *tmp2 0x00000200
    36 jump *label4 always
-    * label *label23
    37 multilabel *label73 (m:*label62)
-    * label *label26
    38 set *tmp2 0x00000400
    39 jump *label4 always
-    * label *label25
    40 multilabel *label74 (m:*label62)
-    * label *label28
    41 set *tmp2 0x00000800
    42 jump *label4 always
-    * label *label27
    43 multilabel *label75 (m:*label62)
-    * label *label30
    44 set *tmp2 0x00001000
    45 jump *label4 always
-    * label *label29
    46 multilabel *label76 (m:*label62)
-    * label *label32
    47 set *tmp2 0x00002000
    48 jump *label4 always
-    * label *label31
    49 multilabel *label77 (m:*label62)
-    * label *label34
    50 set *tmp2 0x00004000
    51 jump *label4 always
-    * label *label33
    52 multilabel *label78 (m:*label62)
-    * label *label36
    53 set *tmp2 0x00008000
    54 jump *label4 always
-    * label *label35
    55 multilabel *label79 (m:*label62)
-    * label *label38
    56 set *tmp2 0x00010000
    57 jump *label4 always
-    * label *label37
    58 multilabel *label80 (m:*label62)
-    * label *label40
    59 set *tmp2 0x00020000
    60 jump *label4 always
-    * label *label39
    61 multilabel *label81 (m:*label62)
-    * label *label42
    62 set *tmp2 0x00040000
    63 jump *label4 always
-    * label *label41
    64 multilabel *label82 (m:*label62)
-    * label *label44
    65 set *tmp2 0x00080000
    66 jump *label4 always
-    * label *label43
    67 multilabel *label83 (m:*label62)
-    * label *label46
    68 set *tmp2 0x00100000
    69 jump *label4 always
-    * label *label45
    70 multilabel *label84 (m:*label62)
-    * label *label48
    71 set *tmp2 0x00200000
    72 jump *label4 always
-    * label *label47
    73 multilabel *label85 (m:*label62)
-    * label *label50
    74 set *tmp2 0x00400000
    75 jump *label4 always
-    * label *label49
    76 multilabel *label86 (m:*label62)
-    * label *label52
    77 set *tmp2 0x00800000
    78 jump *label4 always
-    * label *label51
    79 multilabel *label87 (m:*label62)
-    * label *label54
    80 set *tmp2 0x01000000
    81 jump *label4 always
-    * label *label53
    82 multilabel *label88 (m:*label62)
-    * label *label56
    83 set *tmp2 0x02000000
    84 jump *label4 always
-    * label *label55
    85 multilabel *label64 (m:*label62)
-    * label *label60
    86 set *tmp2 0
    87 label *label4
-    * label *label3
    88 op and *tmp4 :total *tmp2
    89 jump *label57 equal *tmp4 false
    90 op or :total :total 0x800000000
 
    92 label *label57
    93 op or :total :total *tmp2
    94 label *label58
-    * label *label1
    95 op add :i :i 1
    96 jump *label59 lessThan :i @blockCount
-    * label *label2
    97 assertequals 0x03FFFFFF :total "Test selected blocks"
    98 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label59
lookup block :block :i
sensor *tmp6 :block @id
multijump *tmp6 0 0
label *label6
set *tmp2 0x00000001
jump *label4 always
multilabel *label63
jump *label6 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
multilabel *label65
set *tmp2 0x00000004
jump *label4 always
multilabel *label66
set *tmp2 0x00000008
jump *label4 always
multilabel *label67
set *tmp2 0x00000010
jump *label4 always
multilabel *label68
set *tmp2 0x00000020
jump *label4 always
multilabel *label69
set *tmp2 0x00000040
jump *label4 always
multilabel *label70
set *tmp2 0x00000080
jump *label4 always
multilabel *label71
set *tmp2 0x00000100
jump *label4 always
multilabel *label72
set *tmp2 0x00000200
jump *label4 always
multilabel *label73
set *tmp2 0x00000400
jump *label4 always
multilabel *label74
set *tmp2 0x00000800
jump *label4 always
multilabel *label75
set *tmp2 0x00001000
jump *label4 always
multilabel *label76
set *tmp2 0x00002000
jump *label4 always
multilabel *label77
set *tmp2 0x00004000
jump *label4 always
multilabel *label78
set *tmp2 0x00008000
jump *label4 always
multilabel *label79
set *tmp2 0x00010000
jump *label4 always
multilabel *label80
set *tmp2 0x00020000
jump *label4 always
multilabel *label81
set *tmp2 0x00040000
jump *label4 always
multilabel *label82
set *tmp2 0x00080000
jump *label4 always
multilabel *label83
set *tmp2 0x00100000
jump *label4 always
multilabel *label84
set *tmp2 0x00200000
jump *label4 always
multilabel *label85
set *tmp2 0x00400000
jump *label4 always
multilabel *label86
set *tmp2 0x00800000
jump *label4 always
multilabel *label87
set *tmp2 0x01000000
jump *label4 always
multilabel *label88
set *tmp2 0x02000000
jump *label4 always
multilabel *label64
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label57 equal *tmp4 false
op or :total :total 0x800000000
jump *label58 always
label *label57
op or :total :total *tmp2
label *label58
op add :i :i 1
jump *label59 lessThan :i @blockCount
assertequals 0x03FFFFFF :total "Test selected blocks"
end
