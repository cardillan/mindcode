   121 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Data Flow Optimization (6 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
    25 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
   138 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 87):
  o Convert case at line 11:5 (segments: 7)                      size   -10, benefit     1040.5, efficiency   Infinity
  o Convert case at line 11:5 (segments: 32)                     size    -3, benefit     1090.6, efficiency   Infinity
  o Convert case at line 11:5 (segments: 6)                      size    +3, benefit     1091.6, efficiency    363.878
  * Convert case at line 11:5 (segments: 4)                      size   +25, benefit     1096.1, efficiency     43.842 (+25 instructions)
  ! Convert case at line 11:5 (segments: 1, padded high)         size  +213, benefit     1114.8, efficiency      5.234

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
     5 set :block *tmp0
     6 # "Function: def identifyBlock(in block)"
     7 set :identifyBlock:block :block
-    * set *tmp3 :identifyBlock:block
-    * jump *label6 equal *tmp3 @graphite-press
+    8 jump *label6 equal :identifyBlock:block @graphite-press
     9 jump *label5 always
    10 label *label6
    11 set *tmp2 0x00000002
    12 jump *label4 always
    13 label *label5
-    * jump *label8 equal *tmp3 @copper-wall
+   14 jump *label8 equal :identifyBlock:block @copper-wall
    15 jump *label7 always
    16 label *label8
    17 set *tmp2 0x00000004
    18 jump *label4 always
    19 label *label7
-    * jump *label10 equal *tmp3 @copper-wall-large
+   20 jump *label10 equal :identifyBlock:block @copper-wall-large
    21 jump *label9 always
    22 label *label10
    23 set *tmp2 0x00000008
    24 jump *label4 always
    25 label *label9
-    * jump *label12 equal *tmp3 @titanium-wall
+   26 jump *label12 equal :identifyBlock:block @titanium-wall
    27 jump *label11 always
    28 label *label12
    29 set *tmp2 0x00000010
    30 jump *label4 always
    31 label *label11
-    * jump *label14 equal *tmp3 @titanium-wall-large
+   32 jump *label14 equal :identifyBlock:block @titanium-wall-large
    33 jump *label13 always
    34 label *label14
    35 set *tmp2 0x00000020
    36 jump *label4 always
    37 label *label13
-    * jump *label16 equal *tmp3 @plastanium-wall
+   38 jump *label16 equal :identifyBlock:block @plastanium-wall
    39 jump *label15 always
    40 label *label16
    41 set *tmp2 0x00000040
    42 jump *label4 always
    43 label *label15
-    * jump *label18 equal *tmp3 @plastanium-wall-large
+   44 jump *label18 equal :identifyBlock:block @plastanium-wall-large
    45 jump *label17 always
    46 label *label18
    47 set *tmp2 0x00000080
    48 jump *label4 always
    49 label *label17
-    * jump *label20 equal *tmp3 @thorium-wall
+   50 jump *label20 equal :identifyBlock:block @thorium-wall
    51 jump *label19 always
    52 label *label20
    53 set *tmp2 0x00000100
    54 jump *label4 always
    55 label *label19
-    * jump *label22 equal *tmp3 @thorium-wall-large
+   56 jump *label22 equal :identifyBlock:block @thorium-wall-large
    57 jump *label21 always
    58 label *label22
    59 set *tmp2 0x00000200
    60 jump *label4 always
    61 label *label21
-    * jump *label24 equal *tmp3 @phase-wall
+   62 jump *label24 equal :identifyBlock:block @phase-wall
    63 jump *label23 always
    64 label *label24
    65 set *tmp2 0x00000400
    66 jump *label4 always
    67 label *label23
-    * jump *label26 equal *tmp3 @phase-wall-large
+   68 jump *label26 equal :identifyBlock:block @phase-wall-large
    69 jump *label25 always
    70 label *label26
    71 set *tmp2 0x00000800
    72 jump *label4 always
    73 label *label25
-    * jump *label28 equal *tmp3 @surge-wall
+   74 jump *label28 equal :identifyBlock:block @surge-wall
    75 jump *label27 always
    76 label *label28
    77 set *tmp2 0x00001000
    78 jump *label4 always
    79 label *label27
-    * jump *label30 equal *tmp3 @surge-wall-large
+   80 jump *label30 equal :identifyBlock:block @surge-wall-large
    81 jump *label29 always
    82 label *label30
    83 set *tmp2 0x00002000
    84 jump *label4 always
    85 label *label29
-    * jump *label32 equal *tmp3 @scrap-wall
+   86 jump *label32 equal :identifyBlock:block @scrap-wall
    87 jump *label31 always
    88 label *label32
    89 set *tmp2 0x00004000
    90 jump *label4 always
    91 label *label31
-    * jump *label34 equal *tmp3 @scrap-wall-large
+   92 jump *label34 equal :identifyBlock:block @scrap-wall-large
    93 jump *label33 always
    94 label *label34
    95 set *tmp2 0x00008000
    96 jump *label4 always
    97 label *label33
-    * jump *label36 equal *tmp3 @scrap-wall-huge
+   98 jump *label36 equal :identifyBlock:block @scrap-wall-huge
    99 jump *label35 always
   100 label *label36
   101 set *tmp2 0x00010000
   102 jump *label4 always
   103 label *label35
-    * jump *label38 equal *tmp3 @scrap-wall-gigantic
+  104 jump *label38 equal :identifyBlock:block @scrap-wall-gigantic
   105 jump *label37 always
   106 label *label38
   107 set *tmp2 0x00020000
   108 jump *label4 always
   109 label *label37
-    * jump *label40 equal *tmp3 @tungsten-wall
+  110 jump *label40 equal :identifyBlock:block @tungsten-wall
   111 jump *label39 always
   112 label *label40
   113 set *tmp2 0x00040000
   114 jump *label4 always
   115 label *label39
-    * jump *label42 equal *tmp3 @tungsten-wall-large
+  116 jump *label42 equal :identifyBlock:block @tungsten-wall-large
   117 jump *label41 always
   118 label *label42
   119 set *tmp2 0x00080000
   120 jump *label4 always
   121 label *label41
-    * jump *label44 equal *tmp3 @beryllium-wall
+  122 jump *label44 equal :identifyBlock:block @beryllium-wall
   123 jump *label43 always
   124 label *label44
   125 set *tmp2 0x00100000
   126 jump *label4 always
   127 label *label43
-    * jump *label46 equal *tmp3 @beryllium-wall-large
+  128 jump *label46 equal :identifyBlock:block @beryllium-wall-large
   129 jump *label45 always
   130 label *label46
   131 set *tmp2 0x00200000
   132 jump *label4 always
   133 label *label45
-    * jump *label48 equal *tmp3 @carbide-wall
+  134 jump *label48 equal :identifyBlock:block @carbide-wall
   135 jump *label47 always
   136 label *label48
   137 set *tmp2 0x00400000
   138 jump *label4 always
   139 label *label47
-    * jump *label50 equal *tmp3 @carbide-wall-large
+  140 jump *label50 equal :identifyBlock:block @carbide-wall-large
   141 jump *label49 always
   142 label *label50
   143 set *tmp2 0x00800000
   144 jump *label4 always
   145 label *label49
-    * jump *label52 equal *tmp3 @reinforced-surge-wall
+  146 jump *label52 equal :identifyBlock:block @reinforced-surge-wall
   147 jump *label51 always
   148 label *label52
   149 set *tmp2 0x01000000
   150 jump *label4 always
   151 label *label51
-    * jump *label54 equal *tmp3 @reinforced-surge-wall-large
+  152 jump *label54 equal :identifyBlock:block @reinforced-surge-wall-large
   153 jump *label53 always
   154 label *label54
   155 set *tmp2 0x02000000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   163 op and *tmp4 :total :bit
   164 jump *label55 equal *tmp4 false
   165 op or :total :total 0x800000000
-    * set *tmp5 :total
   166 jump *label56 always
   167 label *label55
   168 op or :total :total :bit
-    * set *tmp5 :total
   169 label *label56
   170 label *label1
   171 op add :i :i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
     1 set :i -1
     2 label *label0
     3 jump *label2 greaterThanEq :i @blockCount
-    * lookup block *tmp0 :i
-    * set :block *tmp0
+    4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
     7 jump *label6 equal :identifyBlock:block @graphite-press

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 set :identifyBlock:block :block
-    * jump *label6 equal :identifyBlock:block @graphite-press
+    7 jump *label6 equal :block @graphite-press
     8 jump *label5 always
     9 label *label6
    10 set *tmp2 0x00000002
    11 jump *label4 always
    12 label *label5
-    * jump *label8 equal :identifyBlock:block @copper-wall
+   13 jump *label8 equal :block @copper-wall
    14 jump *label7 always
    15 label *label8
    16 set *tmp2 0x00000004
    17 jump *label4 always
    18 label *label7
-    * jump *label10 equal :identifyBlock:block @copper-wall-large
+   19 jump *label10 equal :block @copper-wall-large
    20 jump *label9 always
    21 label *label10
    22 set *tmp2 0x00000008
    23 jump *label4 always
    24 label *label9
-    * jump *label12 equal :identifyBlock:block @titanium-wall
+   25 jump *label12 equal :block @titanium-wall
    26 jump *label11 always
    27 label *label12
    28 set *tmp2 0x00000010
    29 jump *label4 always
    30 label *label11
-    * jump *label14 equal :identifyBlock:block @titanium-wall-large
+   31 jump *label14 equal :block @titanium-wall-large
    32 jump *label13 always
    33 label *label14
    34 set *tmp2 0x00000020
    35 jump *label4 always
    36 label *label13
-    * jump *label16 equal :identifyBlock:block @plastanium-wall
+   37 jump *label16 equal :block @plastanium-wall
    38 jump *label15 always
    39 label *label16
    40 set *tmp2 0x00000040
    41 jump *label4 always
    42 label *label15
-    * jump *label18 equal :identifyBlock:block @plastanium-wall-large
+   43 jump *label18 equal :block @plastanium-wall-large
    44 jump *label17 always
    45 label *label18
    46 set *tmp2 0x00000080
    47 jump *label4 always
    48 label *label17
-    * jump *label20 equal :identifyBlock:block @thorium-wall
+   49 jump *label20 equal :block @thorium-wall
    50 jump *label19 always
    51 label *label20
    52 set *tmp2 0x00000100
    53 jump *label4 always
    54 label *label19
-    * jump *label22 equal :identifyBlock:block @thorium-wall-large
+   55 jump *label22 equal :block @thorium-wall-large
    56 jump *label21 always
    57 label *label22
    58 set *tmp2 0x00000200
    59 jump *label4 always
    60 label *label21
-    * jump *label24 equal :identifyBlock:block @phase-wall
+   61 jump *label24 equal :block @phase-wall
    62 jump *label23 always
    63 label *label24
    64 set *tmp2 0x00000400
    65 jump *label4 always
    66 label *label23
-    * jump *label26 equal :identifyBlock:block @phase-wall-large
+   67 jump *label26 equal :block @phase-wall-large
    68 jump *label25 always
    69 label *label26
    70 set *tmp2 0x00000800
    71 jump *label4 always
    72 label *label25
-    * jump *label28 equal :identifyBlock:block @surge-wall
+   73 jump *label28 equal :block @surge-wall
    74 jump *label27 always
    75 label *label28
    76 set *tmp2 0x00001000
    77 jump *label4 always
    78 label *label27
-    * jump *label30 equal :identifyBlock:block @surge-wall-large
+   79 jump *label30 equal :block @surge-wall-large
    80 jump *label29 always
    81 label *label30
    82 set *tmp2 0x00002000
    83 jump *label4 always
    84 label *label29
-    * jump *label32 equal :identifyBlock:block @scrap-wall
+   85 jump *label32 equal :block @scrap-wall
    86 jump *label31 always
    87 label *label32
    88 set *tmp2 0x00004000
    89 jump *label4 always
    90 label *label31
-    * jump *label34 equal :identifyBlock:block @scrap-wall-large
+   91 jump *label34 equal :block @scrap-wall-large
    92 jump *label33 always
    93 label *label34
    94 set *tmp2 0x00008000
    95 jump *label4 always
    96 label *label33
-    * jump *label36 equal :identifyBlock:block @scrap-wall-huge
+   97 jump *label36 equal :block @scrap-wall-huge
    98 jump *label35 always
    99 label *label36
   100 set *tmp2 0x00010000
   101 jump *label4 always
   102 label *label35
-    * jump *label38 equal :identifyBlock:block @scrap-wall-gigantic
+  103 jump *label38 equal :block @scrap-wall-gigantic
   104 jump *label37 always
   105 label *label38
   106 set *tmp2 0x00020000
   107 jump *label4 always
   108 label *label37
-    * jump *label40 equal :identifyBlock:block @tungsten-wall
+  109 jump *label40 equal :block @tungsten-wall
   110 jump *label39 always
   111 label *label40
   112 set *tmp2 0x00040000
   113 jump *label4 always
   114 label *label39
-    * jump *label42 equal :identifyBlock:block @tungsten-wall-large
+  115 jump *label42 equal :block @tungsten-wall-large
   116 jump *label41 always
   117 label *label42
   118 set *tmp2 0x00080000
   119 jump *label4 always
   120 label *label41
-    * jump *label44 equal :identifyBlock:block @beryllium-wall
+  121 jump *label44 equal :block @beryllium-wall
   122 jump *label43 always
   123 label *label44
   124 set *tmp2 0x00100000
   125 jump *label4 always
   126 label *label43
-    * jump *label46 equal :identifyBlock:block @beryllium-wall-large
+  127 jump *label46 equal :block @beryllium-wall-large
   128 jump *label45 always
   129 label *label46
   130 set *tmp2 0x00200000
   131 jump *label4 always
   132 label *label45
-    * jump *label48 equal :identifyBlock:block @carbide-wall
+  133 jump *label48 equal :block @carbide-wall
   134 jump *label47 always
   135 label *label48
   136 set *tmp2 0x00400000
   137 jump *label4 always
   138 label *label47
-    * jump *label50 equal :identifyBlock:block @carbide-wall-large
+  139 jump *label50 equal :block @carbide-wall-large
   140 jump *label49 always
   141 label *label50
   142 set *tmp2 0x00800000
   143 jump *label4 always
   144 label *label49
-    * jump *label52 equal :identifyBlock:block @reinforced-surge-wall
+  145 jump *label52 equal :block @reinforced-surge-wall
   146 jump *label51 always
   147 label *label52
   148 set *tmp2 0x01000000
   149 jump *label4 always
   150 label *label51
-    * jump *label54 equal :identifyBlock:block @reinforced-surge-wall-large
+  151 jump *label54 equal :block @reinforced-surge-wall-large
   152 jump *label53 always
   153 label *label54
   154 set *tmp2 0x02000000
 
   158 label *label4
   159 set *tmp1 *tmp2
   160 label *label3
-    * set :bit *tmp1
-    * op and *tmp4 :total :bit
+  161 set :bit *tmp2
+  162 op and *tmp4 :total *tmp1
   163 jump *label55 equal *tmp4 false
   164 op or :total :total 0x800000000
   165 jump *label56 always
   166 label *label55
-    * op or :total :total :bit
+  167 op or :total :total *tmp1
   168 label *label56
   169 label *label1
   170 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 jump *label2 greaterThanEq :i @blockCount
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * set :identifyBlock:block :block
     6 jump *label6 equal :block @graphite-press
     7 jump *label5 always
     8 label *label6
 
   157 label *label4
   158 set *tmp1 *tmp2
   159 label *label3
-    * set :bit *tmp2
-    * op and *tmp4 :total *tmp1
+  160 op and *tmp4 :total *tmp2
   161 jump *label55 equal *tmp4 false
   162 op or :total :total 0x800000000
   163 jump *label56 always
   164 label *label55
-    * op or :total :total *tmp1
+  165 op or :total :total *tmp2
   166 label *label56
   167 label *label1
   168 op add :i :i 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   155 label *label53
   156 set *tmp2 0
   157 label *label4
-    * set *tmp1 *tmp2
   158 label *label3
   159 op and *tmp4 :total *tmp2
   160 jump *label55 equal *tmp4 false

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set :total 0
     1 set :i -1
     2 label *label0
-    * jump *label2 greaterThanEq :i @blockCount
+    3 label *label57
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
     6 jump *label6 equal :block @graphite-press
 
   165 label *label56
   166 label *label1
   167 op add :i :i 1
-    * jump *label0 always
+  168 jump *label57 lessThan :i @blockCount
   169 label *label2
   170 assertequals 0x03FFFFFE :total "Test selected blocks"
   171 end

Modifications by Convert case at line 11:5 (segments: 4) (+25 instructions):
 
     3 label *label57
     4 lookup block :block :i
     5 # "Function: def identifyBlock(in block)"
-    * jump *label6 equal :block @graphite-press
-    * jump *label5 always
+    6 sensor *tmp6 :block @id
+    7 jump *label60 greaterThanEq *tmp6 203
+    8 jump *label58 greaterThanEq *tmp6 35
+    9 multijump *label61 *tmp6 0 (m:*label96)
+   10 multilabel *label61 (m:*label96)
+   11 jump *label59 always
+   12 multilabel *label62 (m:*label96)
+   13 jump *label58 always
+   14 multilabel *label63 (m:*label96)
+   15 jump *label58 always
+   16 multilabel *label64 (m:*label96)
+   17 jump *label58 always
+   18 multilabel *label65 (m:*label96)
+   19 jump *label58 always
+   20 multilabel *label66 (m:*label96)
+   21 jump *label58 always
+   22 multilabel *label67 (m:*label96)
+   23 jump *label58 always
+   24 multilabel *label68 (m:*label96)
+   25 jump *label58 always
+   26 multilabel *label69 (m:*label96)
+   27 jump *label58 always
+   28 multilabel *label70 (m:*label96)
+   29 jump *label58 always
+   30 multilabel *label71 (m:*label96)
+   31 jump *label58 always
+   32 multilabel *label72 (m:*label96)
+   33 jump *label58 always
+   34 multilabel *label73 (m:*label96)
+   35 jump *label58 always
+   36 multilabel *label74 (m:*label96)
+   37 jump *label58 always
+   38 multilabel *label75 (m:*label96)
+   39 jump *label58 always
+   40 multilabel *label76 (m:*label96)
+   41 jump *label58 always
+   42 multilabel *label77 (m:*label96)
+   43 jump *label58 always
+   44 multilabel *label78 (m:*label96)
+   45 jump *label8 always
+   46 multilabel *label79 (m:*label96)
+   47 jump *label10 always
+   48 multilabel *label80 (m:*label96)
+   49 jump *label12 always
+   50 multilabel *label81 (m:*label96)
+   51 jump *label14 always
+   52 multilabel *label82 (m:*label96)
+   53 jump *label16 always
+   54 multilabel *label83 (m:*label96)
+   55 jump *label18 always
+   56 multilabel *label84 (m:*label96)
+   57 jump *label20 always
+   58 multilabel *label85 (m:*label96)
+   59 jump *label22 always
+   60 multilabel *label86 (m:*label96)
+   61 jump *label24 always
+   62 multilabel *label87 (m:*label96)
+   63 jump *label26 always
+   64 multilabel *label88 (m:*label96)
+   65 jump *label28 always
+   66 multilabel *label89 (m:*label96)
+   67 jump *label30 always
+   68 multilabel *label90 (m:*label96)
+   69 jump *label58 always
+   70 multilabel *label91 (m:*label96)
+   71 jump *label58 always
+   72 multilabel *label92 (m:*label96)
+   73 jump *label32 always
+   74 multilabel *label93 (m:*label96)
+   75 jump *label34 always
+   76 multilabel *label94 (m:*label96)
+   77 jump *label36 always
+   78 multilabel *label95 (m:*label96)
+   79 jump *label38 always
+   80 label *label60
+   81 jump *label58 greaterThanEq *tmp6 235
+   82 jump *label40 lessThan *tmp6 204
+   83 multijump *label97 *tmp6 204 (m:*label128)
+   84 multilabel *label97 (m:*label128)
+   85 jump *label42 always
+   86 multilabel *label98 (m:*label128)
+   87 jump *label58 always
+   88 multilabel *label99 (m:*label128)
+   89 jump *label44 always
+   90 multilabel *label100 (m:*label128)
+   91 jump *label46 always
+   92 multilabel *label101 (m:*label128)
+   93 jump *label58 always
+   94 multilabel *label102 (m:*label128)
+   95 jump *label58 always
+   96 multilabel *label103 (m:*label128)
+   97 jump *label58 always
+   98 multilabel *label104 (m:*label128)
+   99 jump *label58 always
+  100 multilabel *label105 (m:*label128)
+  101 jump *label58 always
+  102 multilabel *label106 (m:*label128)
+  103 jump *label58 always
+  104 multilabel *label107 (m:*label128)
+  105 jump *label58 always
+  106 multilabel *label108 (m:*label128)
+  107 jump *label58 always
+  108 multilabel *label109 (m:*label128)
+  109 jump *label58 always
+  110 multilabel *label110 (m:*label128)
+  111 jump *label58 always
+  112 multilabel *label111 (m:*label128)
+  113 jump *label58 always
+  114 multilabel *label112 (m:*label128)
+  115 jump *label58 always
+  116 multilabel *label113 (m:*label128)
+  117 jump *label48 always
+  118 multilabel *label114 (m:*label128)
+  119 jump *label50 always
+  120 multilabel *label115 (m:*label128)
+  121 jump *label58 always
+  122 multilabel *label116 (m:*label128)
+  123 jump *label58 always
+  124 multilabel *label117 (m:*label128)
+  125 jump *label58 always
+  126 multilabel *label118 (m:*label128)
+  127 jump *label52 always
+  128 multilabel *label119 (m:*label128)
+  129 jump *label58 always
+  130 multilabel *label120 (m:*label128)
+  131 jump *label58 always
+  132 multilabel *label121 (m:*label128)
+  133 jump *label58 always
+  134 multilabel *label122 (m:*label128)
+  135 jump *label58 always
+  136 multilabel *label123 (m:*label128)
+  137 jump *label58 always
+  138 multilabel *label124 (m:*label128)
+  139 jump *label58 always
+  140 multilabel *label125 (m:*label128)
+  141 jump *label58 always
+  142 multilabel *label126 (m:*label128)
+  143 jump *label58 always
+  144 multilabel *label127 (m:*label128)
+  145 jump *label54 always
+  146 label *label59
+  147 jump *label58 strictEqual *tmp6 null
   148 label *label6
   149 set *tmp2 0x00000002
   150 jump *label4 always
   151 label *label5
-    * jump *label8 equal :block @copper-wall
-    * jump *label7 always
   152 label *label8
   153 set *tmp2 0x00000004
   154 jump *label4 always
   155 label *label7
-    * jump *label10 equal :block @copper-wall-large
-    * jump *label9 always
   156 label *label10
   157 set *tmp2 0x00000008
   158 jump *label4 always
   159 label *label9
-    * jump *label12 equal :block @titanium-wall
-    * jump *label11 always
   160 label *label12
   161 set *tmp2 0x00000010
   162 jump *label4 always
   163 label *label11
-    * jump *label14 equal :block @titanium-wall-large
-    * jump *label13 always
   164 label *label14
   165 set *tmp2 0x00000020
   166 jump *label4 always
   167 label *label13
-    * jump *label16 equal :block @plastanium-wall
-    * jump *label15 always
   168 label *label16
   169 set *tmp2 0x00000040
   170 jump *label4 always
   171 label *label15
-    * jump *label18 equal :block @plastanium-wall-large
-    * jump *label17 always
   172 label *label18
   173 set *tmp2 0x00000080
   174 jump *label4 always
   175 label *label17
-    * jump *label20 equal :block @thorium-wall
-    * jump *label19 always
   176 label *label20
   177 set *tmp2 0x00000100
   178 jump *label4 always
   179 label *label19
-    * jump *label22 equal :block @thorium-wall-large
-    * jump *label21 always
   180 label *label22
   181 set *tmp2 0x00000200
   182 jump *label4 always
   183 label *label21
-    * jump *label24 equal :block @phase-wall
-    * jump *label23 always
   184 label *label24
   185 set *tmp2 0x00000400
   186 jump *label4 always
   187 label *label23
-    * jump *label26 equal :block @phase-wall-large
-    * jump *label25 always
   188 label *label26
   189 set *tmp2 0x00000800
   190 jump *label4 always
   191 label *label25
-    * jump *label28 equal :block @surge-wall
-    * jump *label27 always
   192 label *label28
   193 set *tmp2 0x00001000
   194 jump *label4 always
   195 label *label27
-    * jump *label30 equal :block @surge-wall-large
-    * jump *label29 always
   196 label *label30
   197 set *tmp2 0x00002000
   198 jump *label4 always
   199 label *label29
-    * jump *label32 equal :block @scrap-wall
-    * jump *label31 always
   200 label *label32
   201 set *tmp2 0x00004000
   202 jump *label4 always
   203 label *label31
-    * jump *label34 equal :block @scrap-wall-large
-    * jump *label33 always
   204 label *label34
   205 set *tmp2 0x00008000
   206 jump *label4 always
   207 label *label33
-    * jump *label36 equal :block @scrap-wall-huge
-    * jump *label35 always
   208 label *label36
   209 set *tmp2 0x00010000
   210 jump *label4 always
   211 label *label35
-    * jump *label38 equal :block @scrap-wall-gigantic
-    * jump *label37 always
   212 label *label38
   213 set *tmp2 0x00020000
   214 jump *label4 always
   215 label *label37
-    * jump *label40 equal :block @tungsten-wall
-    * jump *label39 always
   216 label *label40
   217 set *tmp2 0x00040000
   218 jump *label4 always
   219 label *label39
-    * jump *label42 equal :block @tungsten-wall-large
-    * jump *label41 always
   220 label *label42
   221 set *tmp2 0x00080000
   222 jump *label4 always
   223 label *label41
-    * jump *label44 equal :block @beryllium-wall
-    * jump *label43 always
   224 label *label44
   225 set *tmp2 0x00100000
   226 jump *label4 always
   227 label *label43
-    * jump *label46 equal :block @beryllium-wall-large
-    * jump *label45 always
   228 label *label46
   229 set *tmp2 0x00200000
   230 jump *label4 always
   231 label *label45
-    * jump *label48 equal :block @carbide-wall
-    * jump *label47 always
   232 label *label48
   233 set *tmp2 0x00400000
   234 jump *label4 always
   235 label *label47
-    * jump *label50 equal :block @carbide-wall-large
-    * jump *label49 always
   236 label *label50
   237 set *tmp2 0x00800000
   238 jump *label4 always
   239 label *label49
-    * jump *label52 equal :block @reinforced-surge-wall
-    * jump *label51 always
   240 label *label52
   241 set *tmp2 0x01000000
   242 jump *label4 always
   243 label *label51
-    * jump *label54 equal :block @reinforced-surge-wall-large
-    * jump *label53 always
   244 label *label54
   245 set *tmp2 0x02000000
   246 jump *label4 always
   247 label *label53
+  248 label *label58
   249 set *tmp2 0
   250 label *label4
   251 label *label3

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set :total 0
     1 set :i -1
-    * label *label0
     2 label *label57
     3 lookup block :block :i
     4 # "Function: def identifyBlock(in block)"
 
   144 jump *label54 always
   145 label *label59
   146 jump *label58 strictEqual *tmp6 null
-    * label *label6
   147 set *tmp2 0x00000002
   148 jump *label4 always
-    * label *label5
   149 label *label8
   150 set *tmp2 0x00000004
   151 jump *label4 always
-    * label *label7
   152 label *label10
   153 set *tmp2 0x00000008
   154 jump *label4 always
-    * label *label9
   155 label *label12
   156 set *tmp2 0x00000010
   157 jump *label4 always
-    * label *label11
   158 label *label14
   159 set *tmp2 0x00000020
   160 jump *label4 always
-    * label *label13
   161 label *label16
   162 set *tmp2 0x00000040
   163 jump *label4 always
-    * label *label15
   164 label *label18
   165 set *tmp2 0x00000080
   166 jump *label4 always
-    * label *label17
   167 label *label20
   168 set *tmp2 0x00000100
   169 jump *label4 always
-    * label *label19
   170 label *label22
   171 set *tmp2 0x00000200
   172 jump *label4 always
-    * label *label21
   173 label *label24
   174 set *tmp2 0x00000400
   175 jump *label4 always
-    * label *label23
   176 label *label26
   177 set *tmp2 0x00000800
   178 jump *label4 always
-    * label *label25
   179 label *label28
   180 set *tmp2 0x00001000
   181 jump *label4 always
-    * label *label27
   182 label *label30
   183 set *tmp2 0x00002000
   184 jump *label4 always
-    * label *label29
   185 label *label32
   186 set *tmp2 0x00004000
   187 jump *label4 always
-    * label *label31
   188 label *label34
   189 set *tmp2 0x00008000
   190 jump *label4 always
-    * label *label33
   191 label *label36
   192 set *tmp2 0x00010000
   193 jump *label4 always
-    * label *label35
   194 label *label38
   195 set *tmp2 0x00020000
   196 jump *label4 always
-    * label *label37
   197 label *label40
   198 set *tmp2 0x00040000
   199 jump *label4 always
-    * label *label39
   200 label *label42
   201 set *tmp2 0x00080000
   202 jump *label4 always
-    * label *label41
   203 label *label44
   204 set *tmp2 0x00100000
   205 jump *label4 always
-    * label *label43
   206 label *label46
   207 set *tmp2 0x00200000
   208 jump *label4 always
-    * label *label45
   209 label *label48
   210 set *tmp2 0x00400000
   211 jump *label4 always
-    * label *label47
   212 label *label50
   213 set *tmp2 0x00800000
   214 jump *label4 always
-    * label *label49
   215 label *label52
   216 set *tmp2 0x01000000
   217 jump *label4 always
-    * label *label51
   218 label *label54
   219 set *tmp2 0x02000000
   220 jump *label4 always
-    * label *label53
   221 label *label58
   222 set *tmp2 0
   223 label *label4
-    * label *label3
   224 op and *tmp4 :total *tmp2
   225 jump *label55 equal *tmp4 false
   226 op or :total :total 0x800000000
 
   228 label *label55
   229 op or :total :total *tmp2
   230 label *label56
-    * label *label1
   231 op add :i :i 1
   232 jump *label57 lessThan :i @blockCount
-    * label *label2
   233 assertequals 0x03FFFFFE :total "Test selected blocks"
   234 end

Final code before resolving virtual instructions:

set :total 0
set :i -1
label *label57
lookup block :block :i
# "Function: def identifyBlock(in block)"
sensor *tmp6 :block @id
jump *label60 greaterThanEq *tmp6 203
jump *label58 greaterThanEq *tmp6 35
multijump *label61 *tmp6 0
multilabel *label61
jump *label59 always
multilabel *label62
jump *label58 always
multilabel *label63
jump *label58 always
multilabel *label64
jump *label58 always
multilabel *label65
jump *label58 always
multilabel *label66
jump *label58 always
multilabel *label67
jump *label58 always
multilabel *label68
jump *label58 always
multilabel *label69
jump *label58 always
multilabel *label70
jump *label58 always
multilabel *label71
jump *label58 always
multilabel *label72
jump *label58 always
multilabel *label73
jump *label58 always
multilabel *label74
jump *label58 always
multilabel *label75
jump *label58 always
multilabel *label76
jump *label58 always
multilabel *label77
jump *label58 always
multilabel *label78
jump *label8 always
multilabel *label79
jump *label10 always
multilabel *label80
jump *label12 always
multilabel *label81
jump *label14 always
multilabel *label82
jump *label16 always
multilabel *label83
jump *label18 always
multilabel *label84
jump *label20 always
multilabel *label85
jump *label22 always
multilabel *label86
jump *label24 always
multilabel *label87
jump *label26 always
multilabel *label88
jump *label28 always
multilabel *label89
jump *label30 always
multilabel *label90
jump *label58 always
multilabel *label91
jump *label58 always
multilabel *label92
jump *label32 always
multilabel *label93
jump *label34 always
multilabel *label94
jump *label36 always
multilabel *label95
jump *label38 always
label *label60
jump *label58 greaterThanEq *tmp6 235
jump *label40 lessThan *tmp6 204
multijump *label97 *tmp6 204
multilabel *label97
jump *label42 always
multilabel *label98
jump *label58 always
multilabel *label99
jump *label44 always
multilabel *label100
jump *label46 always
multilabel *label101
jump *label58 always
multilabel *label102
jump *label58 always
multilabel *label103
jump *label58 always
multilabel *label104
jump *label58 always
multilabel *label105
jump *label58 always
multilabel *label106
jump *label58 always
multilabel *label107
jump *label58 always
multilabel *label108
jump *label58 always
multilabel *label109
jump *label58 always
multilabel *label110
jump *label58 always
multilabel *label111
jump *label58 always
multilabel *label112
jump *label58 always
multilabel *label113
jump *label48 always
multilabel *label114
jump *label50 always
multilabel *label115
jump *label58 always
multilabel *label116
jump *label58 always
multilabel *label117
jump *label58 always
multilabel *label118
jump *label52 always
multilabel *label119
jump *label58 always
multilabel *label120
jump *label58 always
multilabel *label121
jump *label58 always
multilabel *label122
jump *label58 always
multilabel *label123
jump *label58 always
multilabel *label124
jump *label58 always
multilabel *label125
jump *label58 always
multilabel *label126
jump *label58 always
multilabel *label127
jump *label54 always
label *label59
jump *label58 strictEqual *tmp6 null
set *tmp2 0x00000002
jump *label4 always
label *label8
set *tmp2 0x00000004
jump *label4 always
label *label10
set *tmp2 0x00000008
jump *label4 always
label *label12
set *tmp2 0x00000010
jump *label4 always
label *label14
set *tmp2 0x00000020
jump *label4 always
label *label16
set *tmp2 0x00000040
jump *label4 always
label *label18
set *tmp2 0x00000080
jump *label4 always
label *label20
set *tmp2 0x00000100
jump *label4 always
label *label22
set *tmp2 0x00000200
jump *label4 always
label *label24
set *tmp2 0x00000400
jump *label4 always
label *label26
set *tmp2 0x00000800
jump *label4 always
label *label28
set *tmp2 0x00001000
jump *label4 always
label *label30
set *tmp2 0x00002000
jump *label4 always
label *label32
set *tmp2 0x00004000
jump *label4 always
label *label34
set *tmp2 0x00008000
jump *label4 always
label *label36
set *tmp2 0x00010000
jump *label4 always
label *label38
set *tmp2 0x00020000
jump *label4 always
label *label40
set *tmp2 0x00040000
jump *label4 always
label *label42
set *tmp2 0x00080000
jump *label4 always
label *label44
set *tmp2 0x00100000
jump *label4 always
label *label46
set *tmp2 0x00200000
jump *label4 always
label *label48
set *tmp2 0x00400000
jump *label4 always
label *label50
set *tmp2 0x00800000
jump *label4 always
label *label52
set *tmp2 0x01000000
jump *label4 always
label *label54
set *tmp2 0x02000000
jump *label4 always
label *label58
set *tmp2 0
label *label4
op and *tmp4 :total *tmp2
jump *label55 equal *tmp4 false
op or :total :total 0x800000000
jump *label56 always
label *label55
op or :total :total *tmp2
label *label56
op add :i :i 1
jump *label57 lessThan :i @blockCount
assertequals 0x03FFFFFE :total "Test selected blocks"
end
