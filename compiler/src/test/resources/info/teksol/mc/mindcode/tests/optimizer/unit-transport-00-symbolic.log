  1127 instructions before optimizations.
    99 instructions eliminated by Temp Variables Elimination (2 iterations).
     2 instructions eliminated by Case Expression Optimization.
   132 instructions eliminated by Dead Code Elimination (2 passes, 7 iterations).
     3 instructions eliminated by Jump Normalization (6 iterations).
    60 instructions eliminated by Jump Optimization (6 iterations).
    45 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions eliminated by Expression Optimization (3 passes, 4 iterations).
    20 instructions eliminated by If Expression Optimization (4 iterations).
    11 instructions eliminated by Data Flow Optimization (6 passes, 21 iterations).
    15 instructions added by Loop Optimization (4 iterations).
    13 loops improved by Loop Optimization.
     3 instructions added by Case Switching (11 iterations).
     1 case expressions converted to switched jumps Case Switching.
    21 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
     7 instructions updated by Jump Threading.
     6 instructions eliminated by Unreachable Code Elimination (2 iterations).
    71 instructions eliminated by Print Merging.
   673 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 255):
  * Replicate loop condition at line 172:9                       size    +1, benefit      312.5, efficiency    312.500 (+0 instructions)
    Replicate loop condition at line 176:9                       size    +4, benefit      312.5, efficiency     78.125
    Replicate loop condition at line 184:13                      size    +5, benefit      156.3, efficiency     31.250
    Replicate loop condition at line 203:1                       size    +3, benefit       25.0, efficiency      8.333
    Replicate loop condition at line 692:1                       size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167
    Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
    Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 255):
  * Replicate loop condition at line 176:9                       size    +4, benefit      312.5, efficiency     78.125 (+4 instructions)
    Replicate loop condition at line 184:13                      size    +5, benefit      156.3, efficiency     31.250
    Replicate loop condition at line 203:1                       size    +3, benefit       25.0, efficiency      8.333
    Replicate loop condition at line 692:1                       size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167
    Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
    Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 251):
  * Replicate loop condition at line 184:13                      size    +5, benefit      156.3, efficiency     31.250 (+5 instructions)
    Replicate loop condition at line 203:1                       size    +3, benefit       25.0, efficiency      8.333
    Replicate loop condition at line 692:1                       size    +2, benefit       25.0, efficiency     12.500
    Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167
    Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
    Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 246):
    Replicate loop condition at line 203:1                       size    +3, benefit       25.0, efficiency      8.333
  * Replicate loop condition at line 692:1                       size    +2, benefit       25.0, efficiency     12.500 (+2 instructions)
    Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167
    Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
    Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 244):
  * Replicate loop condition at line 203:1                       size    +3, benefit       25.0, efficiency      8.333 (+3 instructions)
    Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167
  o Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
  o Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 241):
  * Replicate loop condition at line 700:5                       size    +3, benefit       12.5, efficiency      4.167 (+3 instructions)
  o Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
  o Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375

Pass 1: speed optimization selection (cost limit 238):
  o Convert case at line 712:5 (segments: 16)                    size    +2, benefit       19.5, efficiency      9.766
  * Convert case at line 712:5 (segments: 1)                     size    +3, benefit       28.1, efficiency      9.375 (+3 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-2 instructions):
 
   101 getlink *tmp27 :n
   102 set :block *tmp27
   103 sensor *tmp29 :block @type
-    * set *tmp30 *tmp29
-    * jump *label16 equal *tmp30 @vault
-    * jump *label16 equal *tmp30 @container
+  104 jump *label16 equal *tmp29 @vault
+  105 jump *label16 equal *tmp29 @container
   106 jump *label15 always
   107 label *label16
   108 set .DROP_TARGET .CONTAINER
 
   555 set .LAST_ITEM .ITEM
   556 # "Function: def itemTypeToIcon(in itemType)"
   557 set :itemTypeToIcon:itemType .ITEM
-    * set *tmp167 :itemTypeToIcon:itemType
-    * jump *label89 equal *tmp167 @blast-compound
+  558 jump *label89 equal :itemTypeToIcon:itemType @blast-compound
   559 jump *label88 always
   560 label *label89
   561 set *tmp166 "[]"
   562 jump *label87 always
   563 label *label88
-    * jump *label91 equal *tmp167 @coal
+  564 jump *label91 equal :itemTypeToIcon:itemType @coal
   565 jump *label90 always
   566 label *label91
   567 set *tmp166 "[]"
   568 jump *label87 always
   569 label *label90
-    * jump *label93 equal *tmp167 @copper
+  570 jump *label93 equal :itemTypeToIcon:itemType @copper
   571 jump *label92 always
   572 label *label93
   573 set *tmp166 "[]"
   574 jump *label87 always
   575 label *label92
-    * jump *label95 equal *tmp167 @graphite
+  576 jump *label95 equal :itemTypeToIcon:itemType @graphite
   577 jump *label94 always
   578 label *label95
   579 set *tmp166 "[]"
   580 jump *label87 always
   581 label *label94
-    * jump *label97 equal *tmp167 @lead
+  582 jump *label97 equal :itemTypeToIcon:itemType @lead
   583 jump *label96 always
   584 label *label97
   585 set *tmp166 "[]"
   586 jump *label87 always
   587 label *label96
-    * jump *label99 equal *tmp167 @metaglass
+  588 jump *label99 equal :itemTypeToIcon:itemType @metaglass
   589 jump *label98 always
   590 label *label99
   591 set *tmp166 "[]"
   592 jump *label87 always
   593 label *label98
-    * jump *label101 equal *tmp167 @phase-fabric
+  594 jump *label101 equal :itemTypeToIcon:itemType @phase-fabric
   595 jump *label100 always
   596 label *label101
   597 set *tmp166 "[]"
   598 jump *label87 always
   599 label *label100
-    * jump *label103 equal *tmp167 @plastanium
+  600 jump *label103 equal :itemTypeToIcon:itemType @plastanium
   601 jump *label102 always
   602 label *label103
   603 set *tmp166 "[]"
   604 jump *label87 always
   605 label *label102
-    * jump *label105 equal *tmp167 @pyratite
+  606 jump *label105 equal :itemTypeToIcon:itemType @pyratite
   607 jump *label104 always
   608 label *label105
   609 set *tmp166 "[]"
   610 jump *label87 always
   611 label *label104
-    * jump *label107 equal *tmp167 @sand
+  612 jump *label107 equal :itemTypeToIcon:itemType @sand
   613 jump *label106 always
   614 label *label107
   615 set *tmp166 "[]"
   616 jump *label87 always
   617 label *label106
-    * jump *label109 equal *tmp167 @scrap
+  618 jump *label109 equal :itemTypeToIcon:itemType @scrap
   619 jump *label108 always
   620 label *label109
   621 set *tmp166 "[]"
   622 jump *label87 always
   623 label *label108
-    * jump *label111 equal *tmp167 @silicon
+  624 jump *label111 equal :itemTypeToIcon:itemType @silicon
   625 jump *label110 always
   626 label *label111
   627 set *tmp166 "[]"
   628 jump *label87 always
   629 label *label110
-    * jump *label113 equal *tmp167 @spore-pod
+  630 jump *label113 equal :itemTypeToIcon:itemType @spore-pod
   631 jump *label112 always
   632 label *label113
   633 set *tmp166 "[]"
   634 jump *label87 always
   635 label *label112
-    * jump *label115 equal *tmp167 @surge-alloy
+  636 jump *label115 equal :itemTypeToIcon:itemType @surge-alloy
   637 jump *label114 always
   638 label *label115
   639 set *tmp166 "[]"
   640 jump *label87 always
   641 label *label114
-    * jump *label117 equal *tmp167 @thorium
+  642 jump *label117 equal :itemTypeToIcon:itemType @thorium
   643 jump *label116 always
   644 label *label117
   645 set *tmp166 "[]"
   646 jump *label87 always
   647 label *label116
-    * jump *label119 equal *tmp167 @titanium
+  648 jump *label119 equal :itemTypeToIcon:itemType @titanium
   649 jump *label118 always
   650 label *label119
   651 set *tmp166 "[]"

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-88 instructions):
 
    66 op lessThan *tmp17 :state 6
    67 op land *tmp18 *tmp16 *tmp17
    68 op add .TARGET .TARGET *tmp18
-    * set *tmp14 .TARGET
    69 jump *label7 always
    70 label *label6
-    * set *tmp14 null
    71 label *label7
    72 ubind UNIT
    73 op notEqual *tmp19 @unit :first_unit
 
   106 set .DROP_TARGET .CONTAINER
   107 set .CONTAINER :block
   108 set .CONTAINER_INDEX :n
-    * set *tmp28 .CONTAINER_INDEX
   109 jump *label14 always
   110 label *label15
-    * set *tmp28 null
   111 label *label14
   112 label *label12
   113 jump *label11 always
 
   116 jump *label17 equal *tmp31 false
   117 print "[salmon]No vault or container."
   118 printflush message1
-    * set *tmp32 null
   119 jump *label18 always
   120 label *label17
   121 jump *label10 always
-    * set *tmp32 null
   122 label *label18
   123 label *label9
   124 jump *label8 always
 
   138 ulocate building core false @copper .CORE_X .CORE_Y *tmp40 *tmp39
   139 set .CORE *tmp39
   140 ucontrol flag .S_UNUSED
-    * set *tmp38 null
   141 jump *label25 always
   142 label *label24
-    * set *tmp38 null
   143 label *label25
   144 label *label22
   145 jump *label21 always
   146 label *label23
   147 set .DISCARD_UNIT_MAX_ITEMS .UNIT_CAPACITY
-    * set *tmp34 .DISCARD_UNIT_MAX_ITEMS
   148 jump *label20 always
   149 label *label19
   150 printflush message2
 
   218 label *label40
   219 set *tmp63 null
   220 label *label41
-    * set *tmp51 *tmp63
   221 jump *label36 always
   222 label *label35
-    * set *tmp51 null
   223 label *label36
   224 ucontrol flag .S_UNUSED
   225 label *label27
   226 jump *label26 always
   227 label *label28
   228 set .DISCARD_UNIT_MAX_ITEMS 0
-    * set *tmp34 .DISCARD_UNIT_MAX_ITEMS
   229 label *label20
   230 set .SORTER sorter1
   231 sensor *tmp64 .SORTER @type
 
   241 jump *label45 equal *tmp68 false
   242 print "Block found: "
   243 print .SORTER
-    * set *tmp69 .SORTER
   244 jump *label46 always
   245 label *label45
-    * set *tmp69 null
   246 label *label46
   247 printflush message1
   248 set .SORTER sorter1
 
   284 set *tmp83 " from vault #"
   285 label *label50
   286 set .DIRECTION *tmp83
-    * set *tmp72 .DIRECTION
   287 jump *label48 always
   288 label *label47
   289 op greaterThan *tmp84 LINK_ID 0
 
   320 set *tmp97 " to vault #"
   321 label *label52
   322 set .DIRECTION *tmp97
-    * set *tmp72 .DIRECTION
   323 label *label48
   324 op equal *tmp98 LINK_ID 0
   325 jump *label53 equal *tmp98 false
 
   386 op equal *tmp130 LINK_ID 0
   387 op mul *tmp131 *tmp130 .UNIT_CAPACITY
   388 set .PARK_ITEM_LIMIT *tmp131
-    * set *tmp121 .PARK_ITEM_LIMIT
   389 jump *label56 always
   390 label *label55
   391 sensor *tmp132 .DROP_TARGET @x
 
   395 set .PARK_X .DROP_X
   396 set .PARK_Y .DROP_Y
   397 set .PARK_ITEM_LIMIT 0
-    * set *tmp121 .PARK_ITEM_LIMIT
   398 label *label56
   399 set *tmp134 @tick
   400 set .TRANSFER_START *tmp134
 
   425 set :corr_per_min 0
   426 set .SPEED_UNIT_TXT "[])/min"
   427 set .AUTO_ALLOCATION_TXT "\n=== [gold]Gathering statistics[] ==="
-    * set *tmp137 .AUTO_ALLOCATION_TXT
   428 jump *label62 always
   429 label *label61
   430 set .CORR_SIGN "[]"
   431 set :corr_per_min ""
   432 set .SPEED_UNIT_TXT "/min"
   433 set .AUTO_ALLOCATION_TXT ""
-    * set *tmp137 .AUTO_ALLOCATION_TXT
   434 label *label62
   435 label *label63
   436 jump *label65 equal true false
 
   459 set :corr_per_min ""
   460 set .SPEED_UNIT_TXT "/min"
   461 set .WAIT_LIMIT 30000
-    * set *tmp140 .WAIT_LIMIT
   462 jump *label70 always
   463 label *label69
-    * set *tmp140 null
   464 label *label70
   465 sensor *tmp144 switch2 @enabled
   466 jump *label71 equal *tmp144 false
 
   474 set .CORR_SIGN "[]([green]+"
   475 set :corr_per_min 0
   476 set .SPEED_UNIT_TXT "[])/min"
-    * set *tmp148 .SPEED_UNIT_TXT
   477 jump *label74 always
   478 label *label73
   479 set .EFF_AUTO_ALLOCATION false
 
   491 set *tmp152 ""
   492 label *label76
   493 set .AUTO_ALLOCATION_TXT *tmp152
-    * set *tmp148 .AUTO_ALLOCATION_TXT
   494 label *label74
   495 set .WAIT_LIMIT 30000
-    * set *tmp145 .WAIT_LIMIT
   496 jump *label72 always
   497 label *label71
-    * set *tmp145 null
   498 label *label72
   499 sensor *tmp153 :first_unit @dead
   500 op strictEqual *tmp154 *tmp153 0
 
   505 op equal *tmp158 :active 0
   506 jump *label79 equal *tmp158 false
   507 print "\n[salmon]No active units.[]"
-    * set *tmp159 "\n[salmon]No active units.[]"
   508 jump *label80 always
   509 label *label79
-    * set *tmp159 null
   510 label *label80
   511 printflush message2
   512 set .STATE_LIMIT 6
 
   633 set :last_level *tmp168
   634 set :min_level 999999
   635 set :max_level 0
-    * set *tmp162 :max_level
   636 jump *label82 always
   637 label *label81
-    * set *tmp162 null
   638 label *label82
   639 sensor *tmp169 .CONTAINER .ITEM
   640 set :container_items *tmp169
 
   705 op greaterThanEq *tmp207 :corr_per_min 0
   706 jump *label124 equal *tmp207 false
   707 set .CORR_SIGN "[]([green]+"
-    * set *tmp208 .CORR_SIGN
   708 jump *label125 always
   709 label *label124
-    * set *tmp208 null
   710 label *label125
   711 set .SPEED_UNIT_TXT "[])/min"
   712 jump *label126 equal :alive false
 
   726 op add *tmp219 *tmp218 :total_flow_1
   727 op div *tmp220 *tmp219 3
   728 set :total_flow_per_ms *tmp220
-    * set *tmp217 :total_flow_per_ms
   729 jump *label131 always
   730 label *label130
-    * set *tmp217 null
   731 label *label131
   732 op div *tmp221 :total_flow_per_ms :items_per_ms_unit
   733 op add *tmp222 *tmp221 .INC_OVERALLOCATION
 
   746 op lessThanEq *tmp230 :new_change 0
   747 op mul *tmp231 *tmp230 .DEC_MAX
   748 set .DEC_LIMIT *tmp231
-    * set *tmp216 .DEC_LIMIT
   749 jump *label129 always
   750 label *label128
   751 op idiv *tmp232 :wait_time .WAIT_LIMIT
 
   756 op mul *tmp236 *tmp235 .INC_MAX
   757 set .INC_LIMIT *tmp236
   758 set .DEC_LIMIT .DEC_MAX
-    * set *tmp216 .DEC_LIMIT
   759 label *label129
   760 op add *tmp237 :active :new_change
   761 op max *tmp238 *tmp237 1
   762 set .TARGET *tmp238
-    * set *tmp209 .TARGET
   763 jump *label127 always
   764 label *label126
   765 set .INC_LIMIT 0
   766 set .DEC_LIMIT 0
-    * set *tmp209 .DEC_LIMIT
   767 label *label127
   768 set :min_level 999999
   769 set :max_level 0
-    * set *tmp190 :max_level
   770 jump *label123 always
   771 label *label122
-    * set *tmp190 null
   772 label *label123
   773 set :wait_time 0
   774 set :remote_wait_time 0
 
   780 label *label132
   781 set *tmp240 null
   782 label *label133
-    * set *tmp179 *tmp240
   783 jump *label121 always
   784 label *label120
-    * set *tmp179 null
   785 label *label121
   786 print .MESSAGE
   787 print "Moving [green]"
 
   806 print ")"
   807 print " [gold]+"
   808 print :items_in_transit
-    * set *tmp244 null
   809 jump *label137 always
   810 label *label136
   811 print "\n"
 
   819 print ")"
   820 print " [gold]+"
   821 print :items_in_transit
-    * set *tmp244 null
   822 label *label137
   823 op greaterThan *tmp245 .CHANGE 0
   824 jump *label138 equal *tmp245 false
 
   828 label *label138
   829 set *tmp246 null
   830 label *label139
-    * set *tmp242 *tmp246
   831 jump *label135 always
   832 label *label134
-    * set *tmp242 null
   833 label *label135
   834 print "\n"
   835 print "[]Local items: [gold]"
 
   840 print .LOCAL_MARGIN
   841 print "["
   842 print "])"
-    * set *tmp248 null
   843 jump *label141 always
   844 label *label140
-    * set *tmp248 null
   845 label *label141
   846 jump *label142 equal .SHOW_REMOTE_LEVEL false
   847 sensor *tmp250 .CORE .ITEM
 
   860 label *label144
   861 set *tmp252 null
   862 label *label145
-    * set *tmp249 *tmp252
   863 jump *label143 always
   864 label *label142
-    * set *tmp249 null
   865 label *label143
   866 op greaterThan *tmp253 .TARGET 0
   867 jump *label146 equal *tmp253 false
 
   885 print :elapsed_str
   886 print "["
   887 print "] s"
-    * set *tmp255 null
   888 jump *label149 always
   889 label *label148
   890 print "\n"
 
   892 print :elapsed_str
   893 print "["
   894 print "] s"
-    * set *tmp255 null
   895 label *label149
   896 print "\n"
   897 print "Total wait time: [green]"
   898 print :wait_time_str
   899 print "["
   900 print "] s"
-    * set *tmp254 null
   901 jump *label147 always
   902 label *label146
-    * set *tmp254 null
   903 label *label147
   904 print "\n"
   905 print "[lightgray]Loop: "
 
   918 op notEqual *tmp259 *tmp258 0
   919 jump *label150 equal *tmp259 false
   920 jump *label65 always
-    * set *tmp260 null
   921 jump *label151 always
   922 label *label150
-    * set *tmp260 null
   923 label *label151
   924 sensor *tmp261 .DST @dead
   925 op notEqual *tmp262 *tmp261 0
   926 jump *label152 equal *tmp262 false
   927 jump *label65 always
-    * set *tmp263 null
   928 jump *label153 always
   929 label *label152
-    * set *tmp263 null
   930 label *label153
   931 sensor *tmp264 .SORTER @dead
   932 op notEqual *tmp265 *tmp264 0
   933 jump *label154 equal *tmp265 false
   934 jump *label65 always
-    * set *tmp266 null
   935 jump *label155 always
   936 label *label154
-    * set *tmp266 null
   937 label *label155
   938 getlink *tmp267 .CONTAINER_INDEX
   939 op notEqual *tmp268 .CONTAINER *tmp267
 
   944 label *label156
   945 set *tmp269 null
   946 label *label157
-    * set *tmp157 *tmp269
   947 jump *label78 always
   948 label *label77
-    * set *tmp157 null
   949 label *label78
   950 op greaterThan *tmp270 .CHANGE 0
   951 jump *label158 equal *tmp270 false
 
   959 label *label160
   960 set *tmp274 null
   961 label *label161
-    * set *tmp271 *tmp274
   962 jump *label159 always
   963 label *label158
-    * set *tmp271 null
   964 label *label159
   965 sensor *tmp275 @unit @controller
   966 op equal *tmp276 *tmp275 @this
 
   991 label *label168
   992 set *tmp286 null
   993 label *label169
-    * set *tmp284 *tmp286
   994 jump *label167 always
   995 label *label166
-    * set *tmp284 null
   996 label *label167
   997 op equal *tmp290 :state 1
   998 jump *label172 equal *tmp290 false
 
  1014 ucontrol within .DROP_X .DROP_Y 8 *tmp298
  1015 jump *label178 equal *tmp298 false
  1016 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
-    * set *tmp299 null
  1017 jump *label179 always
  1018 label *label178
-    * set *tmp299 null
  1019 label *label179
  1020 print "[]"
  1021 print "\n"
 
  1024 label *label177
  1025 set *tmp294 *tmp297
  1026 label *label175
-    * set *tmp291 *tmp294
  1027 jump *label173 always
  1028 label *label172
-    * set *tmp291 null
  1029 label *label173
  1030 op equal *tmp300 :state 2
  1031 jump *label180 equal *tmp300 false
 
  1051 print "sec[] to source: [green]"
  1052 set *tmp303 null
  1053 label *label183
-    * set *tmp301 *tmp303
  1054 jump *label181 always
  1055 label *label180
-    * set *tmp301 null
  1056 label *label181
  1057 op equal *tmp311 :state 3
  1058 jump *label184 equal *tmp311 false
 
  1062 op greaterThanEq *tmp315 :max_load .LOAD_PACK
  1063 jump *label186 equal *tmp315 false
  1064 ucontrol itemTake .SRC .ITEM :max_load
-    * set *tmp316 null
  1065 jump *label187 always
  1066 label *label186
-    * set *tmp316 null
  1067 label *label187
  1068 sensor *tmp317 @unit @totalItems
  1069 op greaterThanEq *tmp318 *tmp317 .UNIT_CAPACITY
 
  1081 op add :remote_wait_time :remote_wait_time *tmp320
  1082 set *tmp319 :remote_wait_time
  1083 label *label189
-    * set *tmp312 *tmp319
  1084 jump *label185 always
  1085 label *label184
-    * set *tmp312 null
  1086 label *label185
  1087 op equal *tmp321 :state 4
  1088 jump *label190 equal *tmp321 false
 
  1111 print "sec[] to destination: [green]"
  1112 set *tmp324 null
  1113 label *label193
-    * set *tmp322 *tmp324
  1114 jump *label191 always
  1115 label *label190
-    * set *tmp322 null
  1116 label *label191
  1117 op equal *tmp333 :state 5
  1118 jump *label194 equal *tmp333 false
 
  1122 op greaterThanEq *tmp337 :max_drop .DROP_PACK
  1123 jump *label196 equal *tmp337 false
  1124 ucontrol itemDrop .DST :max_drop
-    * set *tmp338 null
  1125 jump *label197 always
  1126 label *label196
-    * set *tmp338 null
  1127 label *label197
  1128 sensor *tmp339 @unit @totalItems
  1129 op lessThanEq *tmp340 *tmp339 0
 
  1164 op add :remote_wait_time :remote_wait_time *tmp350
  1165 set *tmp341 :remote_wait_time
  1166 label *label199
-    * set *tmp334 *tmp341
  1167 jump *label195 always
  1168 label *label194
-    * set *tmp334 null
  1169 label *label195
  1170 sensor *tmp351 @unit @totalItems
  1171 set :items *tmp351
 
  1195 label *label204
  1196 set *tmp355 null
  1197 label *label205
-    * set *tmp353 *tmp355
  1198 jump *label203 always
  1199 label *label202
  1200 op add :active :active 1
-    * set *tmp353 :active
  1201 label *label203
  1202 print :items
  1203 print .ITEM_ICON
 
  1207 label *label164
  1208 set *tmp280 null
  1209 label *label165
-    * set *tmp277 *tmp280
  1210 jump *label163 always
  1211 label *label162
-    * set *tmp277 null
  1212 label *label163
  1213 label *label64
  1214 jump *label63 always
 
  1245 label *label214
  1246 jump *label213 always
  1247 label *label215
-    * set *tmp369 null
  1248 jump *label212 always
  1249 label *label211
-    * set *tmp369 null
  1250 label *label212
  1251 control enabled switch1 false
  1252 control enabled switch2 false

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-28 instructions):
 
   213 print "is not a vault!"
   214 printflush message2
   215 set .CORE null
-    * set *tmp63 .CORE
   216 jump *label41 always
   217 label *label40
-    * set *tmp63 null
   218 label *label41
   219 jump *label36 always
   220 label *label35
 
   773 op greaterThanEq *tmp239 @tick .MESSAGE_TIMEOUT
   774 jump *label132 equal *tmp239 false
   775 set .MESSAGE ""
-    * set *tmp240 .MESSAGE
   776 jump *label133 always
   777 label *label132
-    * set *tmp240 null
   778 label *label133
   779 jump *label121 always
   780 label *label120
 
   819 op greaterThan *tmp245 .CHANGE 0
   820 jump *label138 equal *tmp245 false
   821 print "\n[][salmon]Cannot acquire additional units![]"
-    * set *tmp246 "\n[][salmon]Cannot acquire additional units![]"
   822 jump *label139 always
   823 label *label138
-    * set *tmp246 null
   824 label *label139
   825 jump *label135 always
   826 label *label134
 
   849 print .REMOTE_MARGIN
   850 print "["
   851 print "])"
-    * set *tmp252 null
   852 jump *label145 always
   853 label *label144
-    * set *tmp252 null
   854 label *label145
   855 jump *label143 always
   856 label *label142
 
   931 op notEqual *tmp268 .CONTAINER *tmp267
   932 jump *label156 equal *tmp268 false
   933 jump *label65 always
-    * set *tmp269 null
   934 jump *label157 always
   935 label *label156
-    * set *tmp269 null
   936 label *label157
   937 jump *label78 always
   938 label *label77
 
   944 jump *label160 equal *tmp273 false
   945 op sub .CHANGE .CHANGE 1
   946 ucontrol flag 1
-    * set *tmp274 null
   947 jump *label161 always
   948 label *label160
-    * set *tmp274 null
   949 label *label161
   950 jump *label159 always
   951 label *label158
 
   974 label *label170
   975 set *tmp289 null
   976 label *label171
-    * set *tmp286 *tmp289
   977 jump *label169 always
   978 label *label168
-    * set *tmp286 null
   979 label *label169
   980 jump *label167 always
   981 label *label166
 
   986 op equal *tmp293 *tmp292 0
   987 jump *label174 equal *tmp293 false
   988 set :state 2
-    * set *tmp294 :state
   989 jump *label175 always
   990 label *label174
   991 sensor *tmp295 @unit @firstItem
 
  1007 print "Unloading previous items: [green]"
  1008 set *tmp297 null
  1009 label *label177
-    * set *tmp294 *tmp297
  1010 label *label175
  1011 jump *label173 always
  1012 label *label172
 
  1017 ucontrol within .SRC_X .SRC_Y 8 *tmp302
  1018 jump *label182 equal *tmp302 false
  1019 set :state 3
-    * set *tmp303 :state
  1020 jump *label183 always
  1021 label *label182
  1022 sensor *tmp304 @unit @x
 
  1032 print *tmp310
  1033 print " "
  1034 print "sec[] to source: [green]"
-    * set *tmp303 null
  1035 label *label183
  1036 jump *label181 always
  1037 label *label180
 
  1051 op greaterThanEq *tmp318 *tmp317 .UNIT_CAPACITY
  1052 jump *label188 equal *tmp318 false
  1053 set :state 4
-    * set *tmp319 :state
  1054 jump *label189 always
  1055 label *label188
  1056 print "[]"
 
  1060 op add :wait_time :wait_time :loop_time_ms
  1061 op mul *tmp320 :loop_time_ms .SRC_REMOTE_WAIT
  1062 op add :remote_wait_time :remote_wait_time *tmp320
-    * set *tmp319 :remote_wait_time
  1063 label *label189
  1064 jump *label185 always
  1065 label *label184
 
  1073 op add :transferred :transferred *tmp325
  1074 op add :transfers :transfers 1
  1075 set :state 5
-    * set *tmp324 :state
  1076 jump *label193 always
  1077 label *label192
  1078 sensor *tmp326 @unit @x
 
  1088 print *tmp332
  1089 print " "
  1090 print "sec[] to destination: [green]"
-    * set *tmp324 null
  1091 label *label193
  1092 jump *label191 always
  1093 label *label190
 
  1130 print "Going to source: [green]"
  1131 set *tmp342 null
  1132 label *label201
-    * set *tmp341 *tmp342
  1133 jump *label199 always
  1134 label *label198
  1135 print "[]"
 
  1139 op add :wait_time :wait_time :loop_time_ms
  1140 op mul *tmp350 :loop_time_ms .DST_REMOTE_WAIT
  1141 op add :remote_wait_time :remote_wait_time *tmp350
-    * set *tmp341 :remote_wait_time
  1142 label *label199
  1143 jump *label195 always
  1144 label *label194
 
  1166 label *label206
  1167 set *tmp358 null
  1168 label *label207
-    * set *tmp355 *tmp358
  1169 jump *label205 always
  1170 label *label204
-    * set *tmp355 null
  1171 label *label205
  1172 jump *label203 always
  1173 label *label202
 
  1176 print :items
  1177 print .ITEM_ICON
  1178 ucontrol flag :state
-    * set *tmp280 null
  1179 jump *label165 always
  1180 label *label164
-    * set *tmp280 null
  1181 label *label165
  1182 jump *label163 always
  1183 label *label162

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
   969 jump *label170 equal *tmp288 false
   970 op add .CHANGE .CHANGE 1
   971 set :state 6
-    * set *tmp289 :state
   972 jump *label171 always
   973 label *label170
-    * set *tmp289 null
   974 label *label171
   975 jump *label169 always
   976 label *label168
 
   990 op equal *tmp296 *tmp295 .ITEM
   991 jump *label176 equal *tmp296 false
   992 set :state 4
-    * set *tmp297 :state
   993 jump *label177 always
   994 label *label176
   995 ucontrol approach .DROP_X .DROP_Y 6
 
  1002 print "[]"
  1003 print "\n"
  1004 print "Unloading previous items: [green]"
-    * set *tmp297 null
  1005 label *label177
  1006 label *label175
  1007 jump *label173 always
 
  1118 print *tmp349
  1119 print " "
  1120 print "sec[] to source: [green]"
-    * set *tmp342 null
  1121 jump *label201 always
  1122 label *label200
  1123 print "[]"
  1124 print "\n"
  1125 print "Going to source: [green]"
-    * set *tmp342 null
  1126 label *label201
  1127 jump *label199 always
  1128 label *label198
 
  1155 jump *label206 equal *tmp357 false
  1156 ucontrol move .PARK_X .PARK_Y
  1157 set :state .S_UNUSED
-    * set *tmp358 :state
  1158 jump *label207 always
  1159 label *label206
-    * set *tmp358 null
  1160 label *label207
  1161 jump *label205 always
  1162 label *label204

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-99 instructions):
 
    14 set .CORE_X .CORE_Y
    15 set .CONTAINER_INDEX .CORE_X
    16 set .MESSAGE ""
-    * op max *tmp0 LOCAL_LIMIT 20
-    * set .EFF_LOCAL_LIMIT *tmp0
-    * op max *tmp1 REMOTE_LIMIT 20
-    * set .EFF_REMOTE_LIMIT *tmp1
+   17 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
+   18 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
    19 set .EFF_AUTO_ALLOCATION AUTO_ALLOCATION
    20 set .TRIGGER_LEVEL 0.9
-    * op mul *tmp2 -1 HOUSEKEEPING
-    * set .S_UNUSED *tmp2
+   21 op mul .S_UNUSED -1 HOUSEKEEPING
    22 set .LOOPS 1
    23 op mul *tmp3 .LOOPS 1000
-    * op div *tmp4 *tmp3 60
-    * set .LOOPS_TICKS_TO_MS *tmp4
+   24 op div .LOOPS_TICKS_TO_MS *tmp3 60
    25 set .INC_OVERALLOCATION OVERALLOCATION_LOW
-    * op add *tmp5 1 OVERALLOCATION_HIGH
-    * set .DEC_OVERALLOCATION *tmp5
+   26 op add .DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
    27 set .TRIGGER_BOOST 2
    28 set .INC_MAX 6
    29 set .DEC_MAX -1
 
    40 label *label1
    41 jump *label0 always
    42 label *label2
-    * set *tmp7 @unit
-    * set :first_unit *tmp7
+   43 set :first_unit @unit
    44 sensor *tmp8 @unit @speed
-    * op div *tmp9 *tmp8 10
-    * set .SPEED_SEC *tmp9
+   45 op div .SPEED_SEC *tmp8 10
    46 sensor *tmp10 @unit @speed
-    * op div *tmp11 *tmp10 1000
-    * set .SPEED *tmp11
+   47 op div .SPEED *tmp10 1000
    48 set .TARGET 0
    49 set :repeat true
    50 label *label3
 
    52 sensor *tmp12 @unit @controller
    53 op equal *tmp13 *tmp12 @this
    54 jump *label6 equal *tmp13 false
-    * sensor *tmp15 @unit @flag
-    * set :state *tmp15
+   55 sensor :state @unit @flag
    56 op greaterThanEq *tmp16 :state 1
    57 op lessThan *tmp17 :state 6
    58 op land *tmp18 *tmp16 *tmp17
 
    64 op notEqual *tmp19 @unit :first_unit
    65 sensor *tmp20 :first_unit @dead
    66 op strictEqual *tmp21 *tmp20 0
-    * op land *tmp22 *tmp19 *tmp21
-    * set :repeat *tmp22
+   67 op land :repeat *tmp19 *tmp21
    68 label *label4
    69 jump *label3 always
    70 label *label5
 
    72 set :active .TARGET
    73 set .DEC_LIMIT 0
    74 set .INC_LIMIT 0
-    * sensor *tmp23 @unit @itemCapacity
-    * set .UNIT_CAPACITY *tmp23
+   75 sensor .UNIT_CAPACITY @unit @itemCapacity
    76 set :first_unit null
    77 label *label8
    78 jump *label10 equal true false
    79 set .CONTAINER null
    80 set .DROP_TARGET null
-    * set *tmp24 @links
-    * set :n *tmp24
+   81 set :n @links
    82 label *label11
    83 op greaterThan *tmp25 :n 0
    84 jump *label13 equal *tmp25 false
-    * op sub *tmp26 :n 1
-    * set :n *tmp26
-    * getlink *tmp27 :n
-    * set :block *tmp27
+   85 op sub :n :n 1
+   86 getlink :block :n
    87 sensor *tmp29 :block @type
    88 jump *label16 equal *tmp29 @vault
    89 jump *label16 equal *tmp29 @container
 
   121 sensor *tmp36 @unit @controlled
   122 op equal *tmp37 *tmp36 0
   123 jump *label24 equal *tmp37 false
-    * ulocate building core false @copper .CORE_X .CORE_Y *tmp40 *tmp39
-    * set .CORE *tmp39
+  124 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   125 ucontrol flag .S_UNUSED
   126 jump *label25 always
   127 label *label24
 
   141 label *label26
   142 op equal *tmp41 .CORE null
   143 jump *label28 equal *tmp41 false
-    * op add *tmp42 99999900 LINK_ID
-    * set .QUERY_FLAG *tmp42
+  144 op add .QUERY_FLAG 99999900 LINK_ID
   145 set :flag .QUERY_FLAG
   146 ubind UNIT
   147 label *label29
 
   160 op land *tmp48 *tmp45 *tmp47
   161 jump *label34 equal *tmp48 false
   162 ucontrol stop
-    * sensor *tmp49 @unit @flag
-    * set :flag *tmp49
+  163 sensor :flag @unit @flag
   164 label *label33
   165 jump *label32 always
   166 label *label34
   167 op notEqual *tmp50 :flag .QUERY_FLAG
   168 jump *label35 equal *tmp50 false
-    * op idiv *tmp52 :flag 100
-    * set :position *tmp52
-    * op mod *tmp53 :position @mapw
-    * set .CORE_X *tmp53
-    * op idiv *tmp54 :position @mapw
-    * set .CORE_Y *tmp54
+  169 op idiv :position :flag 100
+  170 op mod .CORE_X :position @mapw
+  171 op idiv .CORE_Y :position @mapw
   172 label *label37
   173 sensor *tmp55 @unit @dead
   174 op equal *tmp56 *tmp55 0
 
   180 label *label38
   181 jump *label37 always
   182 label *label39
-    * ucontrol getBlock .CORE_X .CORE_Y :b_type *tmp60 *tmp61
-    * set .CORE *tmp60
+  183 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
   184 op notEqual *tmp62 :b_type @vault
   185 jump *label40 equal *tmp62 false
   186 print "[salmon]Building at "
 
   205 set .DISCARD_UNIT_MAX_ITEMS 0
   206 label *label20
   207 set .SORTER sorter1
-    * sensor *tmp64 .SORTER @type
-    * set :sorter_type *tmp64
+  208 sensor :sorter_type .SORTER @type
   209 label *label42
   210 op notEqual *tmp65 :sorter_type @sorter
   211 op notEqual *tmp66 :sorter_type @inverted-sorter
 
   222 label *label46
   223 printflush message1
   224 set .SORTER sorter1
-    * sensor *tmp70 .SORTER @type
-    * set :sorter_type *tmp70
+  225 sensor :sorter_type .SORTER @type
   226 label *label43
   227 jump *label42 always
   228 label *label44
 
   231 set .SHOW_REMOTE_LEVEL true
   232 set .SRC .CORE
   233 set .DST .CONTAINER
-    * sensor *tmp73 .SRC @itemCapacity
-    * set :src_capacity *tmp73
-    * sensor *tmp74 .DST @itemCapacity
-    * set :dst_capacity *tmp74
+  234 sensor :src_capacity .SRC @itemCapacity
+  235 sensor :dst_capacity .DST @itemCapacity
   236 op sub *tmp75 100 .EFF_REMOTE_LIMIT
   237 op mul *tmp76 :src_capacity *tmp75
-    * op idiv *tmp77 *tmp76 100
-    * set .LOAD_LEVEL *tmp77
+  238 op idiv .LOAD_LEVEL *tmp76 100
   239 op mul *tmp78 :dst_capacity .EFF_LOCAL_LIMIT
-    * op idiv *tmp79 *tmp78 100
-    * set .DROP_LEVEL *tmp79
+  240 op idiv .DROP_LEVEL *tmp78 100
   241 set .LOCAL_MARGIN .DROP_LEVEL
   242 set .REMOTE_MARGIN .LOAD_LEVEL
   243 op sub *tmp80 1 .TRIGGER_LEVEL
-    * op mul *tmp81 :dst_capacity *tmp80
-    * set .LOW_LEVEL_TRIGGER *tmp81
+  244 op mul .LOW_LEVEL_TRIGGER :dst_capacity *tmp80
   245 set .HIGH_LEVEL_TRIGGER :dst_capacity
   246 set .FLOW_CORR_SIGN 1
   247 set .SRC_REMOTE_WAIT 1
 
   256 set .DIRECTION *tmp83
   257 jump *label48 always
   258 label *label47
-    * op greaterThan *tmp84 LINK_ID 0
-    * set .SHOW_REMOTE_LEVEL *tmp84
+  259 op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
   260 set .SRC .CONTAINER
   261 set .DST .CORE
-    * sensor *tmp85 .SRC @itemCapacity
-    * set :src_capacity *tmp85
-    * sensor *tmp86 .DST @itemCapacity
-    * set :dst_capacity *tmp86
+  262 sensor :src_capacity .SRC @itemCapacity
+  263 sensor :dst_capacity .DST @itemCapacity
   264 op sub *tmp87 100 .EFF_LOCAL_LIMIT
   265 op mul *tmp88 :src_capacity *tmp87
-    * op idiv *tmp89 *tmp88 100
-    * set .LOAD_LEVEL *tmp89
+  266 op idiv .LOAD_LEVEL *tmp88 100
   267 op mul *tmp90 :dst_capacity .EFF_REMOTE_LIMIT
   268 op idiv *tmp91 *tmp90 100
   269 op equal *tmp92 LINK_ID 0
   270 op mul *tmp93 *tmp92 .UNIT_CAPACITY
-    * op add *tmp94 *tmp91 *tmp93
-    * set .DROP_LEVEL *tmp94
+  271 op add .DROP_LEVEL *tmp91 *tmp93
   272 set .LOCAL_MARGIN .LOAD_LEVEL
   273 set .REMOTE_MARGIN .DROP_LEVEL
-    * op mul *tmp95 :src_capacity .TRIGGER_LEVEL
-    * set .HIGH_LEVEL_TRIGGER *tmp95
+  274 op mul .HIGH_LEVEL_TRIGGER :src_capacity .TRIGGER_LEVEL
   275 set .LOW_LEVEL_TRIGGER 0
   276 set .FLOW_CORR_SIGN -1
   277 set .SRC_REMOTE_WAIT 0
 
   294 label *label54
   295 set .LINK_TXT *tmp99
   296 op sub *tmp100 :src_capacity .LOAD_LEVEL
-    * op min *tmp101 .UNIT_CAPACITY *tmp100
-    * set .LOAD_PACK *tmp101
-    * op min *tmp102 .UNIT_CAPACITY .DROP_LEVEL
-    * set .DROP_PACK *tmp102
-    * sensor *tmp103 .SRC @x
-    * set .SRC_X *tmp103
-    * sensor *tmp104 .SRC @y
-    * set .SRC_Y *tmp104
-    * sensor *tmp105 .DST @x
-    * set .DST_X *tmp105
-    * sensor *tmp106 .DST @y
-    * set .DST_Y *tmp106
+  297 op min .LOAD_PACK .UNIT_CAPACITY *tmp100
+  298 op min .DROP_PACK .UNIT_CAPACITY .DROP_LEVEL
+  299 sensor .SRC_X .SRC @x
+  300 sensor .SRC_Y .SRC @y
+  301 sensor .DST_X .DST @x
+  302 sensor .DST_Y .DST @y
   303 op sub *tmp107 .DST_X .SRC_X
   304 op sub *tmp108 .DST_Y .SRC_Y
   305 op len *tmp109 *tmp107 *tmp108
   306 op sub *tmp110 *tmp109 6
-    * op sub *tmp111 *tmp110 8
-    * set .DISTANCE *tmp111
+  307 op sub .DISTANCE *tmp110 8
   308 op max *tmp112 .DISTANCE 10
   309 op mul *tmp113 2 *tmp112
-    * op div *tmp114 *tmp113 .SPEED
-    * set .TRAVEL_TIME *tmp114
+  310 op div .TRAVEL_TIME *tmp113 .SPEED
   311 op sub *tmp115 .DST_X .SRC_X
   312 op sub *tmp116 .DST_Y .SRC_Y
   313 op len *tmp117 *tmp115 *tmp116
   314 op sub *tmp118 *tmp117 6
-    * op div *tmp119 *tmp118 100
-    * set .DISTANCE *tmp119
+  315 op div .DISTANCE *tmp118 100
   316 op equal *tmp120 .DROP_TARGET null
   317 jump *label55 equal *tmp120 false
   318 set .DROP_TARGET .CORE
 
   326 label *label57
   327 set *tmp124 -15
   328 label *label58
-    * op add *tmp125 .CORE_X *tmp124
-    * set .PARK_X *tmp125
+  329 op add .PARK_X .CORE_X *tmp124
   330 sensor *tmp126 .CONTAINER @y
   331 op lessThan *tmp127 *tmp126 .CORE_Y
   332 jump *label59 equal *tmp127 false
 
   335 label *label59
   336 set *tmp128 -15
   337 label *label60
-    * op add *tmp129 .CORE_Y *tmp128
-    * set .PARK_Y *tmp129
+  338 op add .PARK_Y .CORE_Y *tmp128
   339 op equal *tmp130 LINK_ID 0
-    * op mul *tmp131 *tmp130 .UNIT_CAPACITY
-    * set .PARK_ITEM_LIMIT *tmp131
+  340 op mul .PARK_ITEM_LIMIT *tmp130 .UNIT_CAPACITY
   341 jump *label56 always
   342 label *label55
-    * sensor *tmp132 .DROP_TARGET @x
-    * set .DROP_X *tmp132
-    * sensor *tmp133 .DROP_TARGET @y
-    * set .DROP_Y *tmp133
+  343 sensor .DROP_X .DROP_TARGET @x
+  344 sensor .DROP_Y .DROP_TARGET @y
   345 set .PARK_X .DROP_X
   346 set .PARK_Y .DROP_Y
   347 set .PARK_ITEM_LIMIT 0
   348 label *label56
-    * set *tmp134 @tick
-    * set .TRANSFER_START *tmp134
-    * op sub *tmp135 @tick 60
-    * set .LOOP_START *tmp135
+  349 set .TRANSFER_START @tick
+  350 op sub .LOOP_START @tick 60
   351 set .LAST_ITEM @mono
-    * op add *tmp136 @tick 600
-    * set .MESSAGE_TIMEOUT *tmp136
+  352 op add .MESSAGE_TIMEOUT @tick 600
   353 set .WAIT_LIMIT 30000
   354 set :items_in_transit 0
   355 set :items_per_min_unit "--"
 
   400 set .EFF_AUTO_ALLOCATION false
   401 set .AUTO_ALLOCATION_TXT ""
   402 op add *tmp142 .TARGET 1
-    * op min *tmp143 *tmp142 MAX_UNITS
-    * set .TARGET *tmp143
+  403 op min .TARGET *tmp142 MAX_UNITS
   404 set .CORR_SIGN "[]"
   405 set :corr_per_min ""
   406 set .SPEED_UNIT_TXT "/min"
 
   424 label *label73
   425 set .EFF_AUTO_ALLOCATION false
   426 op sub *tmp149 .TARGET 1
-    * op max *tmp150 *tmp149 0
-    * set .TARGET *tmp150
+  427 op max .TARGET *tmp149 0
   428 set .CORR_SIGN "[]"
   429 set :corr_per_min ""
   430 set .SPEED_UNIT_TXT "/min"
 
   442 label *label71
   443 label *label72
   444 sensor *tmp153 :first_unit @dead
-    * op strictEqual *tmp154 *tmp153 0
-    * set :alive *tmp154
+  445 op strictEqual :alive *tmp153 0
   446 op strictEqual *tmp155 @unit :first_unit
   447 op lessThanEq *tmp156 :alive *tmp155
   448 jump *label77 equal *tmp156 false
 
   454 label *label80
   455 printflush message2
   456 set .STATE_LIMIT 6
-    * sensor *tmp160 .SORTER @config
-    * set .ITEM *tmp160
+  457 sensor .ITEM .SORTER @config
   458 op notEqual *tmp161 .ITEM .LAST_ITEM
   459 jump *label81 equal *tmp161 false
   460 label *label83
 
   462 jump *label85 equal *tmp163 false
   463 print "[salmon]No item type selected for transport.[]"
   464 printflush message1
-    * sensor *tmp164 .SORTER @config
-    * set .ITEM *tmp164
+  465 sensor .ITEM .SORTER @config
   466 label *label84
   467 jump *label83 always
   468 label *label85
 
   571 label *label86
   572 set .ITEM_ICON *tmp165
   573 set .STATE_LIMIT 1
-    * sensor *tmp168 .CONTAINER .ITEM
-    * set :last_level *tmp168
+  574 sensor :last_level .CONTAINER .ITEM
   575 set :min_level 999999
   576 set :max_level 0
   577 jump *label82 always
   578 label *label81
   579 label *label82
-    * sensor *tmp169 .CONTAINER .ITEM
-    * set :container_items *tmp169
-    * op min *tmp170 :min_level :container_items
-    * set :min_level *tmp170
-    * op max *tmp171 :max_level :container_items
-    * set :max_level *tmp171
-    * op sub *tmp172 @tick .LOOP_START
-    * set :loop_time *tmp172
-    * set *tmp173 @tick
-    * set .LOOP_START *tmp173
+  580 sensor :container_items .CONTAINER .ITEM
+  581 op min :min_level :min_level :container_items
+  582 op max :max_level :max_level :container_items
+  583 op sub :loop_time @tick .LOOP_START
+  584 set .LOOP_START @tick
   585 op mul *tmp174 :loop_time 100
-    * op idiv *tmp175 *tmp174 6
-    * set :loop_time_ms *tmp175
+  586 op idiv :loop_time_ms *tmp174 6
   587 op greaterThanEq *tmp176 :transfers :active
   588 op greaterThan *tmp177 :wait_time .WAIT_LIMIT
   589 op or *tmp178 *tmp176 *tmp177
   590 jump *label120 equal *tmp178 false
   591 op div *tmp180 :wait_time 100
   592 op ceil *tmp181 *tmp180
-    * op div *tmp182 *tmp181 10
-    * set :wait_time_str *tmp182
-    * op sub *tmp183 @tick .TRANSFER_START
-    * set :elapsed_ticks *tmp183
-    * set *tmp184 @tick
-    * set .TRANSFER_START *tmp184
-    * op div *tmp185 :elapsed_ticks 0.06
-    * set :elapsed_ms *tmp185
+  593 op div :wait_time_str *tmp181 10
+  594 op sub :elapsed_ticks @tick .TRANSFER_START
+  595 set .TRANSFER_START @tick
+  596 op div :elapsed_ms :elapsed_ticks 0.06
   597 op idiv *tmp186 :elapsed_ms 100
-    * op div *tmp187 *tmp186 10
-    * set :elapsed_str *tmp187
-    * op div *tmp188 :transferred :elapsed_ms
-    * set :items_per_ms *tmp188
-    * op idiv *tmp189 :items_per_ms 0.000016666666666666667
-    * set :items_per_min *tmp189
+  598 op div :elapsed_str *tmp186 10
+  599 op div :items_per_ms :transferred :elapsed_ms
+  600 op idiv :items_per_min :items_per_ms 0.000016666666666666667
   601 set :transferred 0
   602 set :transfers 0
   603 jump *label122 equal .EFF_AUTO_ALLOCATION false
   604 set .AUTO_ALLOCATION_TXT "\n=== [gold]Unit auto allocation[] ==="
   605 op mul *tmp191 .LOOPS_TICKS_TO_MS :loop_time
-    * op add *tmp192 .TRAVEL_TIME *tmp191
-    * set :turnaround_ms *tmp192
-    * op mul *tmp193 :turnaround_ms .DEC_OVERALLOCATION
-    * set .WAIT_LIMIT *tmp193
+  606 op add :turnaround_ms .TRAVEL_TIME *tmp191
+  607 op mul .WAIT_LIMIT :turnaround_ms .DEC_OVERALLOCATION
   608 op idiv *tmp194 :turnaround_ms 100
-    * op div *tmp195 *tmp194 10
-    * set :turnaround_str *tmp195
-    * op div *tmp196 .UNIT_CAPACITY :turnaround_ms
-    * set :items_per_ms_unit *tmp196
+  609 op div :turnaround_str *tmp194 10
+  610 op div :items_per_ms_unit .UNIT_CAPACITY :turnaround_ms
   611 op mul *tmp197 :items_per_ms_unit 60000
-    * op floor *tmp198 *tmp197
-    * set :items_per_min_unit *tmp198
+  612 op floor :items_per_min_unit *tmp197
   613 op add *tmp199 :min_level :max_level
-    * op div *tmp200 *tmp199 2
-    * set :this_level *tmp200
+  614 op div :this_level *tmp199 2
   615 op sub *tmp201 :last_level :this_level
-    * op mul *tmp202 *tmp201 .FLOW_CORR_SIGN
-    * set :corr *tmp202
-    * op div *tmp203 :corr :elapsed_ms
-    * set :corr_per_ms *tmp203
+  616 op mul :corr *tmp201 .FLOW_CORR_SIGN
+  617 op div :corr_per_ms :corr :elapsed_ms
   618 set :last_level :this_level
-    * op add *tmp204 :items_per_ms :corr_per_ms
-    * set :total_flow_per_ms *tmp204
+  619 op add :total_flow_per_ms :items_per_ms :corr_per_ms
   620 op mul *tmp205 60000 :corr_per_ms
-    * op floor *tmp206 *tmp205
-    * set :corr_per_min *tmp206
+  621 op floor :corr_per_min *tmp205
   622 set .CORR_SIGN "[]([green]"
   623 op greaterThanEq *tmp207 :corr_per_min 0
   624 jump *label124 equal *tmp207 false
 
   630 jump *label126 equal :alive false
   631 op lessThan *tmp210 :min_level .LOW_LEVEL_TRIGGER
   632 op greaterThan *tmp211 :max_level .HIGH_LEVEL_TRIGGER
-    * op or *tmp212 *tmp210 *tmp211
-    * set :trigger *tmp212
+  633 op or :trigger *tmp210 *tmp211
   634 op equal *tmp213 :wait_time 0
   635 op greaterThan *tmp214 :trigger :remote_wait_time
   636 op or *tmp215 *tmp213 *tmp214
 
   641 set :total_flow_1 :total_flow_per_ms
   642 op add *tmp218 :total_flow_3 :total_flow_2
   643 op add *tmp219 *tmp218 :total_flow_1
-    * op div *tmp220 *tmp219 3
-    * set :total_flow_per_ms *tmp220
+  644 op div :total_flow_per_ms *tmp219 3
   645 jump *label131 always
   646 label *label130
   647 label *label131
   648 op div *tmp221 :total_flow_per_ms :items_per_ms_unit
   649 op add *tmp222 *tmp221 .INC_OVERALLOCATION
-    * op ceil *tmp223 *tmp222
-    * set :new_target *tmp223
-    * op mul *tmp224 .TRIGGER_BOOST :trigger
-    * set :level_boost *tmp224
+  650 op ceil :new_target *tmp222
+  651 op mul :level_boost .TRIGGER_BOOST :trigger
   652 op add *tmp225 :new_target :level_boost
-    * op min *tmp226 *tmp225 MAX_UNITS
-    * set :new_target *tmp226
+  653 op min :new_target *tmp225 MAX_UNITS
   654 op sub *tmp227 :new_target :active
   655 op max *tmp228 *tmp227 0
-    * op min *tmp229 *tmp228 .INC_LIMIT
-    * set :new_change *tmp229
+  656 op min :new_change *tmp228 .INC_LIMIT
   657 set .INC_LIMIT .INC_MAX
   658 op lessThanEq *tmp230 :new_change 0
-    * op mul *tmp231 *tmp230 .DEC_MAX
-    * set .DEC_LIMIT *tmp231
+  659 op mul .DEC_LIMIT *tmp230 .DEC_MAX
   660 jump *label129 always
   661 label *label128
   662 op idiv *tmp232 :wait_time .WAIT_LIMIT
   663 op mul *tmp233 -1 *tmp232
-    * op max *tmp234 *tmp233 .DEC_LIMIT
-    * set :new_change *tmp234
+  664 op max :new_change *tmp233 .DEC_LIMIT
   665 op greaterThanEq *tmp235 :new_change 0
-    * op mul *tmp236 *tmp235 .INC_MAX
-    * set .INC_LIMIT *tmp236
+  666 op mul .INC_LIMIT *tmp235 .INC_MAX
   667 set .DEC_LIMIT .DEC_MAX
   668 label *label129
   669 op add *tmp237 :active :new_change
-    * op max *tmp238 *tmp237 1
-    * set .TARGET *tmp238
+  670 op max .TARGET *tmp237 1
   671 jump *label127 always
   672 label *label126
   673 set .INC_LIMIT 0
 
   748 label *label140
   749 label *label141
   750 jump *label142 equal .SHOW_REMOTE_LEVEL false
-    * sensor *tmp250 .CORE .ITEM
-    * set :remote_level *tmp250
+  751 sensor :remote_level .CORE .ITEM
   752 print "\n"
   753 print "[]Remote items: [gold]"
   754 print :remote_level
 
   808 print " "
   809 print "ms"
   810 printflush message1
-    * op sub *tmp256 .TARGET :active
-    * set .CHANGE *tmp256
+  811 op sub .CHANGE .TARGET :active
   812 set :active 0
-    * set *tmp257 @unit
-    * set :first_unit *tmp257
+  813 set :first_unit @unit
   814 set :items_in_transit 0
   815 print "Unit status:"
   816 sensor *tmp258 .SRC @dead
 
   860 sensor *tmp275 @unit @controller
   861 op equal *tmp276 *tmp275 @this
   862 jump *label162 equal *tmp276 false
-    * sensor *tmp278 @unit @flag
-    * set :state *tmp278
+  863 sensor :state @unit @flag
   864 op notEqual *tmp279 :state .S_UNUSED
   865 jump *label164 equal *tmp279 false
   866 op max *tmp281 :state 1
-    * op min *tmp282 *tmp281 .STATE_LIMIT
-    * set :state *tmp282
+  867 op min :state *tmp281 .STATE_LIMIT
   868 op lessThan *tmp283 .CHANGE 0
   869 jump *label166 equal *tmp283 false
   870 op notEqual *tmp285 :state 6
 
   940 op equal *tmp311 :state 3
   941 jump *label184 equal *tmp311 false
   942 sensor *tmp313 .SRC .ITEM
-    * op sub *tmp314 *tmp313 .LOAD_LEVEL
-    * set :max_load *tmp314
+  943 op sub :max_load *tmp313 .LOAD_LEVEL
   944 op greaterThanEq *tmp315 :max_load .LOAD_PACK
   945 jump *label186 equal *tmp315 false
   946 ucontrol itemTake .SRC .ITEM :max_load
 
   995 op equal *tmp333 :state 5
   996 jump *label194 equal *tmp333 false
   997 sensor *tmp335 .DST .ITEM
-    * op sub *tmp336 .DROP_LEVEL *tmp335
-    * set :max_drop *tmp336
+  998 op sub :max_drop .DROP_LEVEL *tmp335
   999 op greaterThanEq *tmp337 :max_drop .DROP_PACK
  1000 jump *label196 equal *tmp337 false
  1001 ucontrol itemDrop .DST :max_drop
 
  1040 jump *label195 always
  1041 label *label194
  1042 label *label195
-    * sensor *tmp351 @unit @totalItems
-    * set :items *tmp351
+ 1043 sensor :items @unit @totalItems
  1044 op add :items_in_transit :items_in_transit :items
  1045 op equal *tmp352 :state 6
  1046 jump *label202 equal *tmp352 false
 
  1051 ucontrol within .DROP_X .DROP_Y 8 *tmp354
  1052 jump *label204 equal *tmp354 false
  1053 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
-    * sensor *tmp356 @unit @totalItems
-    * set :items *tmp356
+ 1054 sensor :items @unit @totalItems
  1055 op lessThanEq *tmp357 :items .PARK_ITEM_LIMIT
  1056 jump *label206 equal *tmp357 false
  1057 ucontrol move .PARK_X .PARK_Y

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
    75 sensor .UNIT_CAPACITY @unit @itemCapacity
    76 set :first_unit null
    77 label *label8
-    * jump *label10 equal true false
    78 set .CONTAINER null
    79 set .DROP_TARGET null
    80 set :n @links
 
   379 set .AUTO_ALLOCATION_TXT ""
   380 label *label62
   381 label *label63
-    * jump *label65 equal true false
   382 ubind UNIT
   383 label *label66
   384 op equal *tmp138 @unit null
 
  1005 jump *label198 equal *tmp340 false
  1006 set :state 2
  1007 ucontrol approach .SRC_X .SRC_Y 6
-    * jump *label200 equal true false
  1008 sensor *tmp343 @unit @x
  1009 op sub *tmp344 .SRC_X *tmp343
  1010 sensor *tmp345 @unit @y

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-17 instructions):
 
    85 getlink :block :n
    86 sensor *tmp29 :block @type
    87 jump *label16 equal *tmp29 @vault
-    * jump *label16 equal *tmp29 @container
-    * jump *label15 always
+   88 jump *label15 notEqual *tmp29 @container
    89 label *label16
    90 set .DROP_TARGET .CONTAINER
    91 set .CONTAINER :block
 
   466 set .LAST_ITEM .ITEM
   467 # "Function: def itemTypeToIcon(in itemType)"
   468 set :itemTypeToIcon:itemType .ITEM
-    * jump *label89 equal :itemTypeToIcon:itemType @blast-compound
-    * jump *label88 always
+  469 jump *label88 notEqual :itemTypeToIcon:itemType @blast-compound
   470 label *label89
   471 set *tmp166 "[]"
   472 jump *label87 always
   473 label *label88
-    * jump *label91 equal :itemTypeToIcon:itemType @coal
-    * jump *label90 always
+  474 jump *label90 notEqual :itemTypeToIcon:itemType @coal
   475 label *label91
   476 set *tmp166 "[]"
   477 jump *label87 always
   478 label *label90
-    * jump *label93 equal :itemTypeToIcon:itemType @copper
-    * jump *label92 always
+  479 jump *label92 notEqual :itemTypeToIcon:itemType @copper
   480 label *label93
   481 set *tmp166 "[]"
   482 jump *label87 always
   483 label *label92
-    * jump *label95 equal :itemTypeToIcon:itemType @graphite
-    * jump *label94 always
+  484 jump *label94 notEqual :itemTypeToIcon:itemType @graphite
   485 label *label95
   486 set *tmp166 "[]"
   487 jump *label87 always
   488 label *label94
-    * jump *label97 equal :itemTypeToIcon:itemType @lead
-    * jump *label96 always
+  489 jump *label96 notEqual :itemTypeToIcon:itemType @lead
   490 label *label97
   491 set *tmp166 "[]"
   492 jump *label87 always
   493 label *label96
-    * jump *label99 equal :itemTypeToIcon:itemType @metaglass
-    * jump *label98 always
+  494 jump *label98 notEqual :itemTypeToIcon:itemType @metaglass
   495 label *label99
   496 set *tmp166 "[]"
   497 jump *label87 always
   498 label *label98
-    * jump *label101 equal :itemTypeToIcon:itemType @phase-fabric
-    * jump *label100 always
+  499 jump *label100 notEqual :itemTypeToIcon:itemType @phase-fabric
   500 label *label101
   501 set *tmp166 "[]"
   502 jump *label87 always
   503 label *label100
-    * jump *label103 equal :itemTypeToIcon:itemType @plastanium
-    * jump *label102 always
+  504 jump *label102 notEqual :itemTypeToIcon:itemType @plastanium
   505 label *label103
   506 set *tmp166 "[]"
   507 jump *label87 always
   508 label *label102
-    * jump *label105 equal :itemTypeToIcon:itemType @pyratite
-    * jump *label104 always
+  509 jump *label104 notEqual :itemTypeToIcon:itemType @pyratite
   510 label *label105
   511 set *tmp166 "[]"
   512 jump *label87 always
   513 label *label104
-    * jump *label107 equal :itemTypeToIcon:itemType @sand
-    * jump *label106 always
+  514 jump *label106 notEqual :itemTypeToIcon:itemType @sand
   515 label *label107
   516 set *tmp166 "[]"
   517 jump *label87 always
   518 label *label106
-    * jump *label109 equal :itemTypeToIcon:itemType @scrap
-    * jump *label108 always
+  519 jump *label108 notEqual :itemTypeToIcon:itemType @scrap
   520 label *label109
   521 set *tmp166 "[]"
   522 jump *label87 always
   523 label *label108
-    * jump *label111 equal :itemTypeToIcon:itemType @silicon
-    * jump *label110 always
+  524 jump *label110 notEqual :itemTypeToIcon:itemType @silicon
   525 label *label111
   526 set *tmp166 "[]"
   527 jump *label87 always
   528 label *label110
-    * jump *label113 equal :itemTypeToIcon:itemType @spore-pod
-    * jump *label112 always
+  529 jump *label112 notEqual :itemTypeToIcon:itemType @spore-pod
   530 label *label113
   531 set *tmp166 "[]"
   532 jump *label87 always
   533 label *label112
-    * jump *label115 equal :itemTypeToIcon:itemType @surge-alloy
-    * jump *label114 always
+  534 jump *label114 notEqual :itemTypeToIcon:itemType @surge-alloy
   535 label *label115
   536 set *tmp166 "[]"
   537 jump *label87 always
   538 label *label114
-    * jump *label117 equal :itemTypeToIcon:itemType @thorium
-    * jump *label116 always
+  539 jump *label116 notEqual :itemTypeToIcon:itemType @thorium
   540 label *label117
   541 set *tmp166 "[]"
   542 jump *label87 always
   543 label *label116
-    * jump *label119 equal :itemTypeToIcon:itemType @titanium
-    * jump *label118 always
+  544 jump *label118 notEqual :itemTypeToIcon:itemType @titanium
   545 label *label119
   546 set *tmp166 "[]"
   547 jump *label87 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-60 instructions):
 
    29 set .DEC_MAX -1
    30 ubind UNIT
    31 label *label0
-    * op equal *tmp6 @unit null
-    * jump *label2 equal *tmp6 false
+   32 jump *label2 notEqual @unit null
    33 print "[salmon]No unit of type "
    34 print UNIT
    35 print " "
 
    49 label *label3
    50 jump *label5 equal :repeat false
    51 sensor *tmp12 @unit @controller
-    * op equal *tmp13 *tmp12 @this
-    * jump *label6 equal *tmp13 false
+   52 jump *label6 notEqual *tmp12 @this
    53 sensor :state @unit @flag
    54 op greaterThanEq *tmp16 :state 1
    55 op lessThan *tmp17 :state 6
 
    77 set .DROP_TARGET null
    78 set :n @links
    79 label *label11
-    * op greaterThan *tmp25 :n 0
-    * jump *label13 equal *tmp25 false
+   80 jump *label13 lessThanEq :n 0
    81 op sub :n :n 1
    82 getlink :block :n
    83 sensor *tmp29 :block @type
 
    93 label *label12
    94 jump *label11 always
    95 label *label13
-    * op equal *tmp31 .CONTAINER null
-    * jump *label17 equal *tmp31 false
+   96 jump *label17 notEqual .CONTAINER null
    97 print "[salmon]No vault or container."
    98 printflush message1
    99 jump *label18 always
 
   104 jump *label8 always
   105 label *label10
   106 set .CORE null
-    * op equal *tmp33 LINK_ID 0
-    * jump *label19 equal *tmp33 false
+  107 jump *label19 notEqual LINK_ID 0
   108 label *label21
-    * op equal *tmp35 .CORE null
-    * jump *label23 equal *tmp35 false
+  109 jump *label23 notEqual .CORE null
   110 print "[green]Locating core..."
   111 printflush message1
   112 ubind UNIT
   113 sensor *tmp36 @unit @controlled
-    * op equal *tmp37 *tmp36 0
-    * jump *label24 equal *tmp37 false
+  114 jump *label24 notEqual *tmp36 0
   115 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   116 ucontrol flag .S_UNUSED
   117 jump *label25 always
 
   130 print ".."
   131 printflush message1
   132 label *label26
-    * op equal *tmp41 .CORE null
-    * jump *label28 equal *tmp41 false
+  133 jump *label28 notEqual .CORE null
   134 op add .QUERY_FLAG 99999900 LINK_ID
   135 set :flag .QUERY_FLAG
   136 ubind UNIT
   137 label *label29
   138 sensor *tmp43 @unit @controlled
-    * op notEqual *tmp44 *tmp43 0
-    * jump *label31 equal *tmp44 false
+  139 jump *label31 equal *tmp43 0
   140 ubind UNIT
   141 label *label30
   142 jump *label29 always
 
   153 label *label33
   154 jump *label32 always
   155 label *label34
-    * op notEqual *tmp50 :flag .QUERY_FLAG
-    * jump *label35 equal *tmp50 false
+  156 jump *label35 equal :flag .QUERY_FLAG
   157 op idiv :position :flag 100
   158 op mod .CORE_X :position @mapw
   159 op idiv .CORE_Y :position @mapw
 
   169 jump *label37 always
   170 label *label39
   171 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
-    * op notEqual *tmp62 :b_type @vault
-    * jump *label40 equal *tmp62 false
+  172 jump *label40 equal :b_type @vault
   173 print "[salmon]Building at "
   174 print .CORE_X
   175 print ","
 
   200 jump *label44 equal *tmp67 false
   201 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   202 print "\n"
-    * op notEqual *tmp68 .SORTER null
-    * jump *label45 equal *tmp68 false
+  203 jump *label45 equal .SORTER null
   204 print "Block found: "
   205 print .SORTER
   206 jump *label46 always
 
   212 label *label43
   213 jump *label42 always
   214 label *label44
-    * op equal *tmp71 :sorter_type @sorter
-    * jump *label47 equal *tmp71 false
+  215 jump *label47 notEqual :sorter_type @sorter
   216 set .SHOW_REMOTE_LEVEL true
   217 set .SRC .CORE
   218 set .DST .CONTAINER
 
   231 set .FLOW_CORR_SIGN 1
   232 set .SRC_REMOTE_WAIT 1
   233 set .DST_REMOTE_WAIT 0
-    * op equal *tmp82 LINK_ID 0
-    * jump *label49 equal *tmp82 false
+  234 jump *label49 notEqual LINK_ID 0
   235 set *tmp83 " from core"
   236 jump *label50 always
   237 label *label49
 
   260 set .FLOW_CORR_SIGN -1
   261 set .SRC_REMOTE_WAIT 0
   262 set .DST_REMOTE_WAIT 1
-    * op equal *tmp96 LINK_ID 0
-    * jump *label51 equal *tmp96 false
+  263 jump *label51 notEqual LINK_ID 0
   264 set *tmp97 " to core"
   265 jump *label52 always
   266 label *label51
 
   268 label *label52
   269 set .DIRECTION *tmp97
   270 label *label48
-    * op equal *tmp98 LINK_ID 0
-    * jump *label53 equal *tmp98 false
+  271 jump *label53 notEqual LINK_ID 0
   272 set *tmp99 ""
   273 jump *label54 always
   274 label *label53
 
   295 op len *tmp117 *tmp115 *tmp116
   296 op sub *tmp118 *tmp117 6
   297 op div .DISTANCE *tmp118 100
-    * op equal *tmp120 .DROP_TARGET null
-    * jump *label55 equal *tmp120 false
+  298 jump *label55 notEqual .DROP_TARGET null
   299 set .DROP_TARGET .CORE
   300 set .DROP_X .CORE_X
   301 set .DROP_Y .CORE_Y
   302 sensor *tmp122 .CONTAINER @x
-    * op lessThan *tmp123 *tmp122 .CORE_X
-    * jump *label57 equal *tmp123 false
+  303 jump *label57 greaterThanEq *tmp122 .CORE_X
   304 set *tmp124 15
   305 jump *label58 always
   306 label *label57
 
   308 label *label58
   309 op add .PARK_X .CORE_X *tmp124
   310 sensor *tmp126 .CONTAINER @y
-    * op lessThan *tmp127 *tmp126 .CORE_Y
-    * jump *label59 equal *tmp127 false
+  311 jump *label59 greaterThanEq *tmp126 .CORE_Y
   312 set *tmp128 15
   313 jump *label60 always
   314 label *label59
 
   361 label *label63
   362 ubind UNIT
   363 label *label66
-    * op equal *tmp138 @unit null
-    * jump *label68 equal *tmp138 false
+  364 jump *label68 notEqual @unit null
   365 print "No unit of type "
   366 print UNIT
   367 print " "
 
   388 sensor *tmp144 switch2 @enabled
   389 jump *label71 equal *tmp144 false
   390 control enabled switch2 false
-    * op lessThan *tmp147 .TARGET 1
-    * jump *label73 equal *tmp147 false
+  391 jump *label73 greaterThanEq .TARGET 1
   392 set .EFF_AUTO_ALLOCATION true
   393 set .TARGET 1
   394 set .DEC_LIMIT 0
 
   404 set .CORR_SIGN "[]"
   405 set :corr_per_min ""
   406 set .SPEED_UNIT_TXT "/min"
-    * op equal *tmp151 .TARGET 0
-    * jump *label75 equal *tmp151 false
+  407 jump *label75 notEqual .TARGET 0
   408 set *tmp152 "\n=== [salmon]Transport deactivated[] ==="
   409 jump *label76 always
   410 label *label75
 
   419 sensor *tmp153 :first_unit @dead
   420 op strictEqual :alive *tmp153 0
   421 op strictEqual *tmp155 @unit :first_unit
-    * op lessThanEq *tmp156 :alive *tmp155
-    * jump *label77 equal *tmp156 false
-    * op equal *tmp158 :active 0
-    * jump *label79 equal *tmp158 false
+  422 jump *label77 greaterThan :alive *tmp155
+  423 jump *label79 notEqual :active 0
   424 print "\n[salmon]No active units.[]"
   425 jump *label80 always
   426 label *label79
 
   428 printflush message2
   429 set .STATE_LIMIT 6
   430 sensor .ITEM .SORTER @config
-    * op notEqual *tmp161 .ITEM .LAST_ITEM
-    * jump *label81 equal *tmp161 false
+  431 jump *label81 equal .ITEM .LAST_ITEM
   432 label *label83
-    * op equal *tmp163 .ITEM null
-    * jump *label85 equal *tmp163 false
+  433 jump *label85 notEqual .ITEM null
   434 print "[salmon]No item type selected for transport.[]"
   435 printflush message1
   436 sensor .ITEM .SORTER @config
 
   575 op mul *tmp205 60000 :corr_per_ms
   576 op floor :corr_per_min *tmp205
   577 set .CORR_SIGN "[]([green]"
-    * op greaterThanEq *tmp207 :corr_per_min 0
-    * jump *label124 equal *tmp207 false
+  578 jump *label124 lessThan :corr_per_min 0
   579 set .CORR_SIGN "[]([green]+"
   580 jump *label125 always
   581 label *label124
 
   634 label *label123
   635 set :wait_time 0
   636 set :remote_wait_time 0
-    * op greaterThanEq *tmp239 @tick .MESSAGE_TIMEOUT
-    * jump *label132 equal *tmp239 false
+  637 jump *label132 lessThan @tick .MESSAGE_TIMEOUT
   638 set .MESSAGE ""
   639 jump *label133 always
   640 label *label132
 
   650 print .DIRECTION
   651 print .LINK_TXT
   652 print .AUTO_ALLOCATION_TXT
-    * op greaterThan *tmp241 .TARGET 0
-    * jump *label134 equal *tmp241 false
-    * op greaterThanEq *tmp243 :active .TARGET
-    * jump *label136 equal *tmp243 false
+  653 jump *label134 lessThanEq .TARGET 0
+  654 jump *label136 lessThan :active .TARGET
   655 print "\n"
   656 print "Using [green]"
   657 print :active
 
   677 print " [gold]+"
   678 print :items_in_transit
   679 label *label137
-    * op greaterThan *tmp245 .CHANGE 0
-    * jump *label138 equal *tmp245 false
+  680 jump *label138 lessThanEq .CHANGE 0
   681 print "\n[][salmon]Cannot acquire additional units![]"
   682 jump *label139 always
   683 label *label138
 
   688 print "\n"
   689 print "[]Local items: [gold]"
   690 print :container_items
-    * op lessThan *tmp247 .EFF_LOCAL_LIMIT 100
-    * jump *label140 equal *tmp247 false
+  691 jump *label140 greaterThanEq .EFF_LOCAL_LIMIT 100
   692 print "[] (limit [orange]"
   693 print .LOCAL_MARGIN
   694 print "["
 
   701 print "\n"
   702 print "[]Remote items: [gold]"
   703 print :remote_level
-    * op lessThan *tmp251 .EFF_REMOTE_LIMIT 100
-    * jump *label144 equal *tmp251 false
+  704 jump *label144 greaterThanEq .EFF_REMOTE_LIMIT 100
   705 print "[] (limit [orange]"
   706 print .REMOTE_MARGIN
   707 print "["
 
   712 jump *label143 always
   713 label *label142
   714 label *label143
-    * op greaterThan *tmp253 .TARGET 0
-    * jump *label146 equal *tmp253 false
+  715 jump *label146 lessThanEq .TARGET 0
   716 print "\n"
   717 print "[]Speed: [green]"
   718 print :items_per_min
 
   761 set :items_in_transit 0
   762 print "Unit status:"
   763 sensor *tmp258 .SRC @dead
-    * op notEqual *tmp259 *tmp258 0
-    * jump *label150 equal *tmp259 false
+  764 jump *label150 equal *tmp258 0
   765 jump *label65 always
   766 jump *label151 always
   767 label *label150
   768 label *label151
   769 sensor *tmp261 .DST @dead
-    * op notEqual *tmp262 *tmp261 0
-    * jump *label152 equal *tmp262 false
+  770 jump *label152 equal *tmp261 0
   771 jump *label65 always
   772 jump *label153 always
   773 label *label152
   774 label *label153
   775 sensor *tmp264 .SORTER @dead
-    * op notEqual *tmp265 *tmp264 0
-    * jump *label154 equal *tmp265 false
+  776 jump *label154 equal *tmp264 0
   777 jump *label65 always
   778 jump *label155 always
   779 label *label154
   780 label *label155
   781 getlink *tmp267 .CONTAINER_INDEX
-    * op notEqual *tmp268 .CONTAINER *tmp267
-    * jump *label156 equal *tmp268 false
+  782 jump *label156 equal .CONTAINER *tmp267
   783 jump *label65 always
   784 jump *label157 always
   785 label *label156
 
   787 jump *label78 always
   788 label *label77
   789 label *label78
-    * op greaterThan *tmp270 .CHANGE 0
-    * jump *label158 equal *tmp270 false
+  790 jump *label158 lessThanEq .CHANGE 0
   791 sensor *tmp272 @unit @controlled
-    * op equal *tmp273 *tmp272 0
-    * jump *label160 equal *tmp273 false
+  792 jump *label160 notEqual *tmp272 0
   793 op sub .CHANGE .CHANGE 1
   794 ucontrol flag 1
   795 jump *label161 always
 
   799 label *label158
   800 label *label159
   801 sensor *tmp275 @unit @controller
-    * op equal *tmp276 *tmp275 @this
-    * jump *label162 equal *tmp276 false
+  802 jump *label162 notEqual *tmp275 @this
   803 sensor :state @unit @flag
-    * op notEqual *tmp279 :state .S_UNUSED
-    * jump *label164 equal *tmp279 false
+  804 jump *label164 equal :state .S_UNUSED
   805 op max *tmp281 :state 1
   806 op min :state *tmp281 .STATE_LIMIT
-    * op lessThan *tmp283 .CHANGE 0
-    * jump *label166 equal *tmp283 false
-    * op notEqual *tmp285 :state 6
-    * jump *label168 equal *tmp285 false
+  807 jump *label166 greaterThanEq .CHANGE 0
+  808 jump *label168 equal :state 6
   809 sensor *tmp287 @unit @totalItems
-    * op lessThanEq *tmp288 *tmp287 .DISCARD_UNIT_MAX_ITEMS
-    * jump *label170 equal *tmp288 false
+  810 jump *label170 greaterThan *tmp287 .DISCARD_UNIT_MAX_ITEMS
   811 op add .CHANGE .CHANGE 1
   812 set :state 6
   813 jump *label171 always
 
   819 jump *label167 always
   820 label *label166
   821 label *label167
-    * op equal *tmp290 :state 1
-    * jump *label172 equal *tmp290 false
+  822 jump *label172 notEqual :state 1
   823 sensor *tmp292 @unit @totalItems
-    * op equal *tmp293 *tmp292 0
-    * jump *label174 equal *tmp293 false
+  824 jump *label174 notEqual *tmp292 0
   825 set :state 2
   826 jump *label175 always
   827 label *label174
   828 sensor *tmp295 @unit @firstItem
-    * op equal *tmp296 *tmp295 .ITEM
-    * jump *label176 equal *tmp296 false
+  829 jump *label176 notEqual *tmp295 .ITEM
   830 set :state 4
   831 jump *label177 always
   832 label *label176
 
   845 jump *label173 always
   846 label *label172
   847 label *label173
-    * op equal *tmp300 :state 2
-    * jump *label180 equal *tmp300 false
+  848 jump *label180 notEqual :state 2
   849 ucontrol approach .SRC_X .SRC_Y 6
   850 ucontrol within .SRC_X .SRC_Y 8 *tmp302
   851 jump *label182 equal *tmp302 false
 
   869 jump *label181 always
   870 label *label180
   871 label *label181
-    * op equal *tmp311 :state 3
-    * jump *label184 equal *tmp311 false
+  872 jump *label184 notEqual :state 3
   873 sensor *tmp313 .SRC .ITEM
   874 op sub :max_load *tmp313 .LOAD_LEVEL
-    * op greaterThanEq *tmp315 :max_load .LOAD_PACK
-    * jump *label186 equal *tmp315 false
+  875 jump *label186 lessThan :max_load .LOAD_PACK
   876 ucontrol itemTake .SRC .ITEM :max_load
   877 jump *label187 always
   878 label *label186
   879 label *label187
   880 sensor *tmp317 @unit @totalItems
-    * op greaterThanEq *tmp318 *tmp317 .UNIT_CAPACITY
-    * jump *label188 equal *tmp318 false
+  881 jump *label188 lessThan *tmp317 .UNIT_CAPACITY
   882 set :state 4
   883 jump *label189 always
   884 label *label188
 
   893 jump *label185 always
   894 label *label184
   895 label *label185
-    * op equal *tmp321 :state 4
-    * jump *label190 equal *tmp321 false
+  896 jump *label190 notEqual :state 4
   897 ucontrol approach .DST_X .DST_Y 6
   898 ucontrol within .DST_X .DST_Y 8 *tmp323
   899 jump *label192 equal *tmp323 false
 
   920 jump *label191 always
   921 label *label190
   922 label *label191
-    * op equal *tmp333 :state 5
-    * jump *label194 equal *tmp333 false
+  923 jump *label194 notEqual :state 5
   924 sensor *tmp335 .DST .ITEM
   925 op sub :max_drop .DROP_LEVEL *tmp335
-    * op greaterThanEq *tmp337 :max_drop .DROP_PACK
-    * jump *label196 equal *tmp337 false
+  926 jump *label196 lessThan :max_drop .DROP_PACK
   927 ucontrol itemDrop .DST :max_drop
   928 jump *label197 always
   929 label *label196
   930 label *label197
   931 sensor *tmp339 @unit @totalItems
-    * op lessThanEq *tmp340 *tmp339 0
-    * jump *label198 equal *tmp340 false
+  932 jump *label198 greaterThan *tmp339 0
   933 set :state 2
   934 ucontrol approach .SRC_X .SRC_Y 6
   935 sensor *tmp343 @unit @x
 
   966 label *label195
   967 sensor :items @unit @totalItems
   968 op add :items_in_transit :items_in_transit :items
-    * op equal *tmp352 :state 6
-    * jump *label202 equal *tmp352 false
+  969 jump *label202 notEqual :state 6
   970 print "[]"
   971 print "\n"
   972 print "Parking: [green]"
 
   975 jump *label204 equal *tmp354 false
   976 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
   977 sensor :items @unit @totalItems
-    * op lessThanEq *tmp357 :items .PARK_ITEM_LIMIT
-    * jump *label206 equal *tmp357 false
+  978 jump *label206 greaterThan :items .PARK_ITEM_LIMIT
   979 ucontrol move .PARK_X .PARK_Y
   980 set :state .S_UNUSED
   981 jump *label207 always
 
  1003 label *label208
  1004 sensor *tmp359 .SORTER @dead
  1005 op strictEqual *tmp361 *tmp359 0
-    * op equal *tmp360 *tmp361 false
-    * jump *label210 equal *tmp360 false
+ 1006 jump *label210 notEqual *tmp361 false
  1007 print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
  1008 printflush message1
  1009 printflush message2
 
  1023 sensor *tmp370 switch1 @enabled
  1024 sensor *tmp371 switch2 @enabled
  1025 op or *tmp372 *tmp370 *tmp371
-    * op equal *tmp373 *tmp372 false
-    * jump *label215 equal *tmp373 false
+ 1026 jump *label215 notEqual *tmp372 false
  1027 print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
  1028 printflush message1
  1029 printflush message2

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-44 instructions):
 
    55 op lessThan *tmp17 :state 6
    56 op land *tmp18 *tmp16 *tmp17
    57 op add .TARGET .TARGET *tmp18
-    * jump *label7 always
    58 label *label6
    59 label *label7
    60 ubind UNIT
 
    86 set .DROP_TARGET .CONTAINER
    87 set .CONTAINER :block
    88 set .CONTAINER_INDEX :n
-    * jump *label14 always
    89 label *label15
    90 label *label14
    91 label *label12
 
   112 jump *label24 notEqual *tmp36 0
   113 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   114 ucontrol flag .S_UNUSED
-    * jump *label25 always
   115 label *label24
   116 label *label25
   117 label *label22
 
   176 print "is not a vault!"
   177 printflush message2
   178 set .CORE null
-    * jump *label41 always
   179 label *label40
   180 label *label41
-    * jump *label36 always
   181 label *label35
   182 label *label36
   183 ucontrol flag .S_UNUSED
 
   198 jump *label45 equal .SORTER null
   199 print "Block found: "
   200 print .SORTER
-    * jump *label46 always
   201 label *label45
   202 label *label46
   203 printflush message1
 
   376 set :corr_per_min ""
   377 set .SPEED_UNIT_TXT "/min"
   378 set .WAIT_LIMIT 30000
-    * jump *label70 always
   379 label *label69
   380 label *label70
   381 sensor *tmp144 switch2 @enabled
 
   406 set .AUTO_ALLOCATION_TXT *tmp152
   407 label *label74
   408 set .WAIT_LIMIT 30000
-    * jump *label72 always
   409 label *label71
   410 label *label72
   411 sensor *tmp153 :first_unit @dead
 
   414 jump *label77 greaterThan :alive *tmp155
   415 jump *label79 notEqual :active 0
   416 print "\n[salmon]No active units.[]"
-    * jump *label80 always
   417 label *label79
   418 label *label80
   419 printflush message2
 
   520 sensor :last_level .CONTAINER .ITEM
   521 set :min_level 999999
   522 set :max_level 0
-    * jump *label82 always
   523 label *label81
   524 label *label82
   525 sensor :container_items .CONTAINER .ITEM
 
   567 set .CORR_SIGN "[]([green]"
   568 jump *label124 lessThan :corr_per_min 0
   569 set .CORR_SIGN "[]([green]+"
-    * jump *label125 always
   570 label *label124
   571 label *label125
   572 set .SPEED_UNIT_TXT "[])/min"
 
   585 op add *tmp218 :total_flow_3 :total_flow_2
   586 op add *tmp219 *tmp218 :total_flow_1
   587 op div :total_flow_per_ms *tmp219 3
-    * jump *label131 always
   588 label *label130
   589 label *label131
   590 op div *tmp221 :total_flow_per_ms :items_per_ms_unit
 
   617 label *label127
   618 set :min_level 999999
   619 set :max_level 0
-    * jump *label123 always
   620 label *label122
   621 label *label123
   622 set :wait_time 0
   623 set :remote_wait_time 0
   624 jump *label132 lessThan @tick .MESSAGE_TIMEOUT
   625 set .MESSAGE ""
-    * jump *label133 always
   626 label *label132
   627 label *label133
-    * jump *label121 always
   628 label *label120
   629 label *label121
   630 print .MESSAGE
 
   664 label *label137
   665 jump *label138 lessThanEq .CHANGE 0
   666 print "\n[][salmon]Cannot acquire additional units![]"
-    * jump *label139 always
   667 label *label138
   668 label *label139
-    * jump *label135 always
   669 label *label134
   670 label *label135
   671 print "\n"
 
   676 print .LOCAL_MARGIN
   677 print "["
   678 print "])"
-    * jump *label141 always
   679 label *label140
   680 label *label141
   681 jump *label142 equal .SHOW_REMOTE_LEVEL false
 
   688 print .REMOTE_MARGIN
   689 print "["
   690 print "])"
-    * jump *label145 always
   691 label *label144
   692 label *label145
-    * jump *label143 always
   693 label *label142
   694 label *label143
   695 jump *label146 lessThanEq .TARGET 0
 
   726 print :wait_time_str
   727 print "["
   728 print "] s"
-    * jump *label147 always
   729 label *label146
   730 label *label147
   731 print "\n"
 
   742 sensor *tmp258 .SRC @dead
   743 jump *label150 equal *tmp258 0
   744 jump *label65 always
-    * jump *label151 always
   745 label *label150
   746 label *label151
   747 sensor *tmp261 .DST @dead
   748 jump *label152 equal *tmp261 0
   749 jump *label65 always
-    * jump *label153 always
   750 label *label152
   751 label *label153
   752 sensor *tmp264 .SORTER @dead
   753 jump *label154 equal *tmp264 0
   754 jump *label65 always
-    * jump *label155 always
   755 label *label154
   756 label *label155
   757 getlink *tmp267 .CONTAINER_INDEX
   758 jump *label156 equal .CONTAINER *tmp267
   759 jump *label65 always
-    * jump *label157 always
   760 label *label156
   761 label *label157
-    * jump *label78 always
   762 label *label77
   763 label *label78
   764 jump *label158 lessThanEq .CHANGE 0
 
   766 jump *label160 notEqual *tmp272 0
   767 op sub .CHANGE .CHANGE 1
   768 ucontrol flag 1
-    * jump *label161 always
   769 label *label160
   770 label *label161
-    * jump *label159 always
   771 label *label158
   772 label *label159
   773 sensor *tmp275 @unit @controller
 
   782 jump *label170 greaterThan *tmp287 .DISCARD_UNIT_MAX_ITEMS
   783 op add .CHANGE .CHANGE 1
   784 set :state 6
-    * jump *label171 always
   785 label *label170
   786 label *label171
-    * jump *label169 always
   787 label *label168
   788 label *label169
-    * jump *label167 always
   789 label *label166
   790 label *label167
   791 jump *label172 notEqual :state 1
 
   803 ucontrol within .DROP_X .DROP_Y 8 *tmp298
   804 jump *label178 equal *tmp298 false
   805 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
-    * jump *label179 always
   806 label *label178
   807 label *label179
   808 print "[]"
 
   810 print "Unloading previous items: [green]"
   811 label *label177
   812 label *label175
-    * jump *label173 always
   813 label *label172
   814 label *label173
   815 jump *label180 notEqual :state 2
 
   833 print " "
   834 print "sec[] to source: [green]"
   835 label *label183
-    * jump *label181 always
   836 label *label180
   837 label *label181
   838 jump *label184 notEqual :state 3
 
   840 op sub :max_load *tmp313 .LOAD_LEVEL
   841 jump *label186 lessThan :max_load .LOAD_PACK
   842 ucontrol itemTake .SRC .ITEM :max_load
-    * jump *label187 always
   843 label *label186
   844 label *label187
   845 sensor *tmp317 @unit @totalItems
 
   855 op mul *tmp320 :loop_time_ms .SRC_REMOTE_WAIT
   856 op add :remote_wait_time :remote_wait_time *tmp320
   857 label *label189
-    * jump *label185 always
   858 label *label184
   859 label *label185
   860 jump *label190 notEqual :state 4
 
   881 print " "
   882 print "sec[] to destination: [green]"
   883 label *label193
-    * jump *label191 always
   884 label *label190
   885 label *label191
   886 jump *label194 notEqual :state 5
 
   888 op sub :max_drop .DROP_LEVEL *tmp335
   889 jump *label196 lessThan :max_drop .DROP_PACK
   890 ucontrol itemDrop .DST :max_drop
-    * jump *label197 always
   891 label *label196
   892 label *label197
   893 sensor *tmp339 @unit @totalItems
 
   923 op mul *tmp350 :loop_time_ms .DST_REMOTE_WAIT
   924 op add :remote_wait_time :remote_wait_time *tmp350
   925 label *label199
-    * jump *label195 always
   926 label *label194
   927 label *label195
   928 sensor :items @unit @totalItems
 
   939 jump *label206 greaterThan :items .PARK_ITEM_LIMIT
   940 ucontrol move .PARK_X .PARK_Y
   941 set :state .S_UNUSED
-    * jump *label207 always
   942 label *label206
   943 label *label207
-    * jump *label205 always
   944 label *label204
   945 label *label205
   946 jump *label203 always
 
   950 print :items
   951 print .ITEM_ICON
   952 ucontrol flag :state
-    * jump *label165 always
   953 label *label164
   954 label *label165
-    * jump *label163 always
   955 label *label162
   956 label *label163
   957 label *label64
 
   987 label *label214
   988 jump *label213 always
   989 label *label215
-    * jump *label212 always
   990 label *label211
   991 label *label212
   992 control enabled switch1 false

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   553 op idiv *tmp194 :turnaround_ms 100
   554 op div :turnaround_str *tmp194 10
   555 op div :items_per_ms_unit .UNIT_CAPACITY :turnaround_ms
-    * op mul *tmp197 :items_per_ms_unit 60000
-    * op floor :items_per_min_unit *tmp197
+  556 op idiv :items_per_min_unit :items_per_ms_unit 0.000016666666666666667
   557 op add *tmp199 :min_level :max_level
   558 op div :this_level *tmp199 2
   559 op sub *tmp201 :last_level :this_level
 
   561 op div :corr_per_ms :corr :elapsed_ms
   562 set :last_level :this_level
   563 op add :total_flow_per_ms :items_per_ms :corr_per_ms
-    * op mul *tmp205 60000 :corr_per_ms
-    * op floor :corr_per_min *tmp205
+  564 op idiv :corr_per_min :corr_per_ms 0.000016666666666666667
   565 set .CORR_SIGN "[]([green]"
   566 jump *label124 lessThan :corr_per_min 0
   567 set .CORR_SIGN "[]([green]+"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     8 set OVERALLOCATION_HIGH 0.75
     9 set STABILIZATION false
    10 set .STATE_LIMIT null
-    * set .ITEM_ICON .STATE_LIMIT
-    * set .ITEM .ITEM_ICON
-    * set .CORE_Y .ITEM
-    * set .CORE_X .CORE_Y
-    * set .CONTAINER_INDEX .CORE_X
+   11 set .ITEM_ICON null
+   12 set .ITEM .STATE_LIMIT
+   13 set .CORE_Y .ITEM_ICON
+   14 set .CORE_X .ITEM
+   15 set .CONTAINER_INDEX .CORE_Y
    16 set .MESSAGE ""
    17 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
    18 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
 
    20 set .TRIGGER_LEVEL 0.9
    21 op mul .S_UNUSED -1 HOUSEKEEPING
    22 set .LOOPS 1
-    * op mul *tmp3 .LOOPS 1000
-    * op div .LOOPS_TICKS_TO_MS *tmp3 60
+   23 op mul *tmp3 1 1000
+   24 op div .LOOPS_TICKS_TO_MS 1000 60
    25 set .INC_OVERALLOCATION OVERALLOCATION_LOW
    26 op add .DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
    27 set .TRIGGER_BOOST 2
 
   138 label *label30
   139 jump *label29 always
   140 label *label31
-    * ucontrol flag :flag
+  141 ucontrol flag .QUERY_FLAG
   142 label *label32
   143 op equal *tmp45 :flag .QUERY_FLAG
   144 sensor *tmp46 @unit @dead
 
   187 set .DISCARD_UNIT_MAX_ITEMS 0
   188 label *label20
   189 set .SORTER sorter1
-    * sensor :sorter_type .SORTER @type
+  190 sensor :sorter_type sorter1 @type
   191 label *label42
   192 op notEqual *tmp65 :sorter_type @sorter
   193 op notEqual *tmp66 :sorter_type @inverted-sorter
 
   202 label *label46
   203 printflush message1
   204 set .SORTER sorter1
-    * sensor :sorter_type .SORTER @type
+  205 sensor :sorter_type sorter1 @type
   206 label *label43
   207 jump *label42 always
   208 label *label44
 
   210 set .SHOW_REMOTE_LEVEL true
   211 set .SRC .CORE
   212 set .DST .CONTAINER
-    * sensor :src_capacity .SRC @itemCapacity
-    * sensor :dst_capacity .DST @itemCapacity
+  213 sensor :src_capacity .CORE @itemCapacity
+  214 sensor :dst_capacity .CONTAINER @itemCapacity
   215 op sub *tmp75 100 .EFF_REMOTE_LIMIT
   216 op mul *tmp76 :src_capacity *tmp75
   217 op idiv .LOAD_LEVEL *tmp76 100
 
   219 op idiv .DROP_LEVEL *tmp78 100
   220 set .LOCAL_MARGIN .DROP_LEVEL
   221 set .REMOTE_MARGIN .LOAD_LEVEL
-    * op sub *tmp80 1 .TRIGGER_LEVEL
-    * op mul .LOW_LEVEL_TRIGGER :dst_capacity *tmp80
+  222 op sub *tmp80 1 0.9
+  223 op mul .LOW_LEVEL_TRIGGER :dst_capacity 0.09999999999999998
   224 set .HIGH_LEVEL_TRIGGER :dst_capacity
   225 set .FLOW_CORR_SIGN 1
   226 set .SRC_REMOTE_WAIT 1
 
   237 op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
   238 set .SRC .CONTAINER
   239 set .DST .CORE
-    * sensor :src_capacity .SRC @itemCapacity
-    * sensor :dst_capacity .DST @itemCapacity
+  240 sensor :src_capacity .CONTAINER @itemCapacity
+  241 sensor :dst_capacity .CORE @itemCapacity
   242 op sub *tmp87 100 .EFF_LOCAL_LIMIT
   243 op mul *tmp88 :src_capacity *tmp87
   244 op idiv .LOAD_LEVEL *tmp88 100
 
   249 op add .DROP_LEVEL *tmp91 *tmp93
   250 set .LOCAL_MARGIN .LOAD_LEVEL
   251 set .REMOTE_MARGIN .DROP_LEVEL
-    * op mul .HIGH_LEVEL_TRIGGER :src_capacity .TRIGGER_LEVEL
+  252 op mul .HIGH_LEVEL_TRIGGER :src_capacity 0.9
   253 set .LOW_LEVEL_TRIGGER 0
   254 set .FLOW_CORR_SIGN -1
   255 set .SRC_REMOTE_WAIT 0
 
   280 op sub *tmp108 .DST_Y .SRC_Y
   281 op len *tmp109 *tmp107 *tmp108
   282 op sub *tmp110 *tmp109 6
-    * op sub .DISTANCE *tmp110 8
+  283 op sub .DISTANCE *tmp109 14
   284 op max *tmp112 .DISTANCE 10
   285 op mul *tmp113 2 *tmp112
   286 op div .TRAVEL_TIME *tmp113 .SPEED
   287 op sub *tmp115 .DST_X .SRC_X
   288 op sub *tmp116 .DST_Y .SRC_Y
-    * op len *tmp117 *tmp115 *tmp116
-    * op sub *tmp118 *tmp117 6
-    * op div .DISTANCE *tmp118 100
+  289 op len *tmp117 *tmp107 *tmp108
+  290 op sub *tmp118 *tmp109 6
+  291 op div .DISTANCE *tmp110 100
   292 jump *label55 notEqual .DROP_TARGET null
   293 set .DROP_TARGET .CORE
   294 set .DROP_X .CORE_X
 
   331 set :elapsed_str "--"
   332 set :wait_time_str 0
   333 set :wait_time 0
-    * set :transfers :wait_time
-    * set :transferred :transfers
-    * set :total_flow_2 :transferred
-    * set :total_flow_1 :total_flow_2
-    * set :remote_wait_time :total_flow_1
-    * set :min_level :remote_wait_time
-    * set :max_level :min_level
-    * set :loop_time_ms :max_level
-    * set :last_level :loop_time_ms
-    * jump *label61 equal .EFF_AUTO_ALLOCATION false
+  334 set :transfers 0
+  335 set :transferred :wait_time
+  336 set :total_flow_2 :transfers
+  337 set :total_flow_1 :transferred
+  338 set :remote_wait_time :total_flow_2
+  339 set :min_level :total_flow_1
+  340 set :max_level :remote_wait_time
+  341 set :loop_time_ms :min_level
+  342 set :last_level :max_level
+  343 jump *label61 equal AUTO_ALLOCATION false
   344 set .CORR_SIGN "[]([green]+"
   345 set :corr_per_min 0
   346 set .SPEED_UNIT_TXT "[])/min"
 
   431 set .LAST_ITEM .ITEM
   432 # "Function: def itemTypeToIcon(in itemType)"
   433 set :itemTypeToIcon:itemType .ITEM
-    * jump *label88 notEqual :itemTypeToIcon:itemType @blast-compound
+  434 jump *label88 notEqual .ITEM @blast-compound
   435 label *label89
   436 set *tmp166 "[]"
   437 jump *label87 always
   438 label *label88
-    * jump *label90 notEqual :itemTypeToIcon:itemType @coal
+  439 jump *label90 notEqual .ITEM @coal
   440 label *label91
   441 set *tmp166 "[]"
   442 jump *label87 always
   443 label *label90
-    * jump *label92 notEqual :itemTypeToIcon:itemType @copper
+  444 jump *label92 notEqual .ITEM @copper
   445 label *label93
   446 set *tmp166 "[]"
   447 jump *label87 always
   448 label *label92
-    * jump *label94 notEqual :itemTypeToIcon:itemType @graphite
+  449 jump *label94 notEqual .ITEM @graphite
   450 label *label95
   451 set *tmp166 "[]"
   452 jump *label87 always
   453 label *label94
-    * jump *label96 notEqual :itemTypeToIcon:itemType @lead
+  454 jump *label96 notEqual .ITEM @lead
   455 label *label97
   456 set *tmp166 "[]"
   457 jump *label87 always
   458 label *label96
-    * jump *label98 notEqual :itemTypeToIcon:itemType @metaglass
+  459 jump *label98 notEqual .ITEM @metaglass
   460 label *label99
   461 set *tmp166 "[]"
   462 jump *label87 always
   463 label *label98
-    * jump *label100 notEqual :itemTypeToIcon:itemType @phase-fabric
+  464 jump *label100 notEqual .ITEM @phase-fabric
   465 label *label101
   466 set *tmp166 "[]"
   467 jump *label87 always
   468 label *label100
-    * jump *label102 notEqual :itemTypeToIcon:itemType @plastanium
+  469 jump *label102 notEqual .ITEM @plastanium
   470 label *label103
   471 set *tmp166 "[]"
   472 jump *label87 always
   473 label *label102
-    * jump *label104 notEqual :itemTypeToIcon:itemType @pyratite
+  474 jump *label104 notEqual .ITEM @pyratite
   475 label *label105
   476 set *tmp166 "[]"
   477 jump *label87 always
   478 label *label104
-    * jump *label106 notEqual :itemTypeToIcon:itemType @sand
+  479 jump *label106 notEqual .ITEM @sand
   480 label *label107
   481 set *tmp166 "[]"
   482 jump *label87 always
   483 label *label106
-    * jump *label108 notEqual :itemTypeToIcon:itemType @scrap
+  484 jump *label108 notEqual .ITEM @scrap
   485 label *label109
   486 set *tmp166 "[]"
   487 jump *label87 always
   488 label *label108
-    * jump *label110 notEqual :itemTypeToIcon:itemType @silicon
+  489 jump *label110 notEqual .ITEM @silicon
   490 label *label111
   491 set *tmp166 "[]"
   492 jump *label87 always
   493 label *label110
-    * jump *label112 notEqual :itemTypeToIcon:itemType @spore-pod
+  494 jump *label112 notEqual .ITEM @spore-pod
   495 label *label113
   496 set *tmp166 "[]"
   497 jump *label87 always
   498 label *label112
-    * jump *label114 notEqual :itemTypeToIcon:itemType @surge-alloy
+  499 jump *label114 notEqual .ITEM @surge-alloy
   500 label *label115
   501 set *tmp166 "[]"
   502 jump *label87 always
   503 label *label114
-    * jump *label116 notEqual :itemTypeToIcon:itemType @thorium
+  504 jump *label116 notEqual .ITEM @thorium
   505 label *label117
   506 set *tmp166 "[]"
   507 jump *label87 always
   508 label *label116
-    * jump *label118 notEqual :itemTypeToIcon:itemType @titanium
+  509 jump *label118 notEqual .ITEM @titanium
   510 label *label119
   511 set *tmp166 "[]"
   512 jump *label87 always
 
   515 label *label87
   516 set *tmp165 *tmp166
   517 label *label86
-    * set .ITEM_ICON *tmp165
+  518 set .ITEM_ICON *tmp166
   519 set .STATE_LIMIT 1
   520 sensor :last_level .CONTAINER .ITEM
   521 set :min_level 999999
 
   547 set :transfers 0
   548 jump *label122 equal .EFF_AUTO_ALLOCATION false
   549 set .AUTO_ALLOCATION_TXT "\n=== [gold]Unit auto allocation[] ==="
-    * op mul *tmp191 .LOOPS_TICKS_TO_MS :loop_time
+  550 op mul *tmp191 16.666666666666668 :loop_time
   551 op add :turnaround_ms .TRAVEL_TIME *tmp191
   552 op mul .WAIT_LIMIT :turnaround_ms .DEC_OVERALLOCATION
   553 op idiv *tmp194 :turnaround_ms 100
 
   581 set :total_flow_2 :total_flow_1
   582 set :total_flow_1 :total_flow_per_ms
   583 op add *tmp218 :total_flow_3 :total_flow_2
-    * op add *tmp219 *tmp218 :total_flow_1
+  584 op add *tmp219 *tmp218 :total_flow_per_ms
   585 op div :total_flow_per_ms *tmp219 3
   586 label *label130
   587 label *label131
   588 op div *tmp221 :total_flow_per_ms :items_per_ms_unit
-    * op add *tmp222 *tmp221 .INC_OVERALLOCATION
+  589 op add *tmp222 *tmp221 OVERALLOCATION_LOW
   590 op ceil :new_target *tmp222
-    * op mul :level_boost .TRIGGER_BOOST :trigger
+  591 op mul :level_boost 2 :trigger
   592 op add *tmp225 :new_target :level_boost
   593 op min :new_target *tmp225 MAX_UNITS
   594 op sub *tmp227 :new_target :active
   595 op max *tmp228 *tmp227 0
   596 op min :new_change *tmp228 .INC_LIMIT
-    * set .INC_LIMIT .INC_MAX
+  597 set .INC_LIMIT 6
   598 op lessThanEq *tmp230 :new_change 0
-    * op mul .DEC_LIMIT *tmp230 .DEC_MAX
+  599 op mul .DEC_LIMIT *tmp230 -1
   600 jump *label129 always
   601 label *label128
   602 op idiv *tmp232 :wait_time .WAIT_LIMIT
   603 op mul *tmp233 -1 *tmp232
   604 op max :new_change *tmp233 .DEC_LIMIT
   605 op greaterThanEq *tmp235 :new_change 0
-    * op mul .INC_LIMIT *tmp235 .INC_MAX
-    * set .DEC_LIMIT .DEC_MAX
+  606 op mul .INC_LIMIT *tmp235 6
+  607 set .DEC_LIMIT -1
   608 label *label129
   609 op add *tmp237 :active :new_change
   610 op max .TARGET *tmp237 1
 
   625 label *label133
   626 label *label120
   627 label *label121
-    * print .MESSAGE
+  628 print ""
   629 print "Moving [green]"
   630 print .ITEM
   631 print "["
   632 print "]"
   633 print .DIRECTION
-    * print .LINK_TXT
+  634 print *tmp99
   635 print .AUTO_ALLOCATION_TXT
   636 jump *label134 lessThanEq .TARGET 0
   637 jump *label136 lessThan :active .TARGET

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
     9 set STABILIZATION false
    10 set .STATE_LIMIT null
    11 set .ITEM_ICON null
-    * set .ITEM .STATE_LIMIT
-    * set .CORE_Y .ITEM_ICON
-    * set .CORE_X .ITEM
-    * set .CONTAINER_INDEX .CORE_Y
+   12 set .ITEM null
+   13 set .CORE_Y null
+   14 set .CORE_X .STATE_LIMIT
+   15 set .CONTAINER_INDEX .ITEM_ICON
    16 set .MESSAGE ""
    17 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
    18 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
 
    20 set .TRIGGER_LEVEL 0.9
    21 op mul .S_UNUSED -1 HOUSEKEEPING
    22 set .LOOPS 1
-    * op mul *tmp3 1 1000
    23 op div .LOOPS_TICKS_TO_MS 1000 60
    24 set .INC_OVERALLOCATION OVERALLOCATION_LOW
    25 op add .DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
 
   218 op idiv .DROP_LEVEL *tmp78 100
   219 set .LOCAL_MARGIN .DROP_LEVEL
   220 set .REMOTE_MARGIN .LOAD_LEVEL
-    * op sub *tmp80 1 0.9
   221 op mul .LOW_LEVEL_TRIGGER :dst_capacity 0.09999999999999998
   222 set .HIGH_LEVEL_TRIGGER :dst_capacity
   223 set .FLOW_CORR_SIGN 1
 
   282 op max *tmp112 .DISTANCE 10
   283 op mul *tmp113 2 *tmp112
   284 op div .TRAVEL_TIME *tmp113 .SPEED
-    * op sub *tmp115 .DST_X .SRC_X
-    * op sub *tmp116 .DST_Y .SRC_Y
-    * op len *tmp117 *tmp107 *tmp108
-    * op sub *tmp118 *tmp109 6
   285 op div .DISTANCE *tmp110 100
   286 jump *label55 notEqual .DROP_TARGET null
   287 set .DROP_TARGET .CORE
 
   326 set :wait_time_str 0
   327 set :wait_time 0
   328 set :transfers 0
-    * set :transferred :wait_time
-    * set :total_flow_2 :transfers
-    * set :total_flow_1 :transferred
-    * set :remote_wait_time :total_flow_2
-    * set :min_level :total_flow_1
-    * set :max_level :remote_wait_time
-    * set :loop_time_ms :min_level
-    * set :last_level :max_level
+  329 set :transferred 0
+  330 set :total_flow_2 0
+  331 set :total_flow_1 :wait_time
+  332 set :remote_wait_time :transfers
+  333 set :min_level :transferred
+  334 set :max_level :total_flow_2
+  335 set :loop_time_ms :total_flow_1
+  336 set :last_level :remote_wait_time
   337 jump *label61 equal AUTO_ALLOCATION false
   338 set .CORR_SIGN "[]([green]+"
   339 set :corr_per_min 0
 
   424 label *label85
   425 set .LAST_ITEM .ITEM
   426 # "Function: def itemTypeToIcon(in itemType)"
-    * set :itemTypeToIcon:itemType .ITEM
   427 jump *label88 notEqual .ITEM @blast-compound
   428 label *label89
   429 set *tmp166 "[]"
 
   506 label *label118
   507 set *tmp166 null
   508 label *label87
-    * set *tmp165 *tmp166
   509 label *label86
   510 set .ITEM_ICON *tmp166
   511 set .STATE_LIMIT 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    11 set .ITEM_ICON null
    12 set .ITEM null
    13 set .CORE_Y null
-    * set .CORE_X .STATE_LIMIT
-    * set .CONTAINER_INDEX .ITEM_ICON
+   14 set .CORE_X null
+   15 set .CONTAINER_INDEX null
    16 set .MESSAGE ""
    17 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
    18 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
 
   328 set :transfers 0
   329 set :transferred 0
   330 set :total_flow_2 0
-    * set :total_flow_1 :wait_time
-    * set :remote_wait_time :transfers
-    * set :min_level :transferred
-    * set :max_level :total_flow_2
-    * set :loop_time_ms :total_flow_1
-    * set :last_level :remote_wait_time
+  331 set :total_flow_1 0
+  332 set :remote_wait_time 0
+  333 set :min_level 0
+  334 set :max_level 0
+  335 set :loop_time_ms :wait_time
+  336 set :last_level :transfers
   337 jump *label61 equal AUTO_ALLOCATION false
   338 set .CORR_SIGN "[]([green]+"
   339 set :corr_per_min 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
   332 set :remote_wait_time 0
   333 set :min_level 0
   334 set :max_level 0
-    * set :loop_time_ms :wait_time
-    * set :last_level :transfers
+  335 set :loop_time_ms 0
+  336 set :last_level 0
   337 jump *label61 equal AUTO_ALLOCATION false
   338 set .CORR_SIGN "[]([green]+"
   339 set :corr_per_min 0

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-3 instructions):
 
    29 ubind UNIT
    30 label *label0
    31 jump *label2 notEqual @unit null
+   32 label *label216
    33 print "[salmon]No unit of type "
    34 print UNIT
    35 print " "
 
    37 printflush message1
    38 ubind UNIT
    39 label *label1
-    * jump *label0 always
+   40 jump *label216 equal @unit null
    41 label *label2
    42 set :first_unit @unit
    43 sensor *tmp8 @unit @speed
 
    47 set .TARGET 0
    48 set :repeat true
    49 label *label3
-    * jump *label5 equal :repeat false
+   50 label *label217
    51 sensor *tmp12 @unit @controller
    52 jump *label6 notEqual *tmp12 @this
    53 sensor :state @unit @flag
 
    63 op strictEqual *tmp21 *tmp20 0
    64 op land :repeat *tmp19 *tmp21
    65 label *label4
-    * jump *label3 always
+   66 jump *label217 notEqual :repeat false
    67 label *label5
    68 set .CHANGE 0
    69 set :active .TARGET
 
    77 set :n @links
    78 label *label11
    79 jump *label13 lessThanEq :n 0
+   80 label *label218
    81 op sub :n :n 1
    82 getlink :block :n
    83 sensor *tmp29 :block @type
 
    90 label *label15
    91 label *label14
    92 label *label12
-    * jump *label11 always
+   93 jump *label218 greaterThan :n 0
    94 label *label13
    95 jump *label17 notEqual .CONTAINER null
    96 print "[salmon]No vault or container."
 
   105 set .CORE null
   106 jump *label19 notEqual LINK_ID 0
   107 label *label21
-    * jump *label23 notEqual .CORE null
+  108 label *label219
   109 print "[green]Locating core..."
   110 printflush message1
   111 ubind UNIT
 
   116 label *label24
   117 label *label25
   118 label *label22
-    * jump *label21 always
+  119 jump *label219 equal .CORE null
   120 label *label23
   121 set .DISCARD_UNIT_MAX_ITEMS .UNIT_CAPACITY
   122 jump *label20 always
 
   128 print ".."
   129 printflush message1
   130 label *label26
-    * jump *label28 notEqual .CORE null
+  131 label *label220
   132 op add .QUERY_FLAG 99999900 LINK_ID
   133 set :flag .QUERY_FLAG
   134 ubind UNIT
 
   183 label *label36
   184 ucontrol flag .S_UNUSED
   185 label *label27
-    * jump *label26 always
+  186 jump *label220 equal .CORE null
   187 label *label28
   188 set .DISCARD_UNIT_MAX_ITEMS 0
   189 label *label20
 
   352 ubind UNIT
   353 label *label66
   354 jump *label68 notEqual @unit null
+  355 label *label221
   356 print "No unit of type "
   357 print UNIT
   358 print " "
 
   360 printflush message1
   361 ubind UNIT
   362 label *label67
-    * jump *label66 always
+  363 jump *label221 equal @unit null
   364 label *label68
   365 sensor *tmp139 switch1 @enabled
   366 jump *label69 equal *tmp139 false
 
   419 jump *label81 equal .ITEM .LAST_ITEM
   420 label *label83
   421 jump *label85 notEqual .ITEM null
+  422 label *label222
   423 print "[salmon]No item type selected for transport.[]"
   424 printflush message1
   425 sensor .ITEM .SORTER @config
   426 label *label84
-    * jump *label83 always
+  427 jump *label222 equal .ITEM null
   428 label *label85
   429 set .LAST_ITEM .ITEM
   430 # "Function: def itemTypeToIcon(in itemType)"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-20 instructions):
 
   225 set .FLOW_CORR_SIGN 1
   226 set .SRC_REMOTE_WAIT 1
   227 set .DST_REMOTE_WAIT 0
-    * jump *label49 notEqual LINK_ID 0
-    * set *tmp83 " from core"
-    * jump *label50 always
+  228 select *tmp83 equal LINK_ID 0 " from core" " from vault #"
   229 label *label49
-    * set *tmp83 " from vault #"
   230 label *label50
   231 set .DIRECTION *tmp83
   232 jump *label48 always
 
   251 set .FLOW_CORR_SIGN -1
   252 set .SRC_REMOTE_WAIT 0
   253 set .DST_REMOTE_WAIT 1
-    * jump *label51 notEqual LINK_ID 0
-    * set *tmp97 " to core"
-    * jump *label52 always
+  254 select *tmp97 equal LINK_ID 0 " to core" " to vault #"
   255 label *label51
-    * set *tmp97 " to vault #"
   256 label *label52
   257 set .DIRECTION *tmp97
   258 label *label48
-    * jump *label53 notEqual LINK_ID 0
-    * set *tmp99 ""
-    * jump *label54 always
+  259 select *tmp99 equal LINK_ID 0 "" LINK_ID
   260 label *label53
-    * set *tmp99 LINK_ID
   261 label *label54
   262 set .LINK_TXT *tmp99
   263 op sub *tmp100 :src_capacity .LOAD_LEVEL
 
   281 set .DROP_X .CORE_X
   282 set .DROP_Y .CORE_Y
   283 sensor *tmp122 .CONTAINER @x
-    * jump *label57 greaterThanEq *tmp122 .CORE_X
-    * set *tmp124 15
-    * jump *label58 always
+  284 select *tmp124 lessThan *tmp122 .CORE_X 15 -15
   285 label *label57
-    * set *tmp124 -15
   286 label *label58
   287 op add .PARK_X .CORE_X *tmp124
   288 sensor *tmp126 .CONTAINER @y
-    * jump *label59 greaterThanEq *tmp126 .CORE_Y
-    * set *tmp128 15
-    * jump *label60 always
+  289 select *tmp128 lessThan *tmp126 .CORE_Y 15 -15
   290 label *label59
-    * set *tmp128 -15
   291 label *label60
   292 op add .PARK_Y .CORE_Y *tmp128
   293 op equal *tmp130 LINK_ID 0
 
   379 set .CORR_SIGN "[]"
   380 set :corr_per_min ""
   381 set .SPEED_UNIT_TXT "/min"
-    * jump *label75 notEqual .TARGET 0
-    * set *tmp152 "\n=== [salmon]Transport deactivated[] ==="
-    * jump *label76 always
+  382 select *tmp152 equal .TARGET 0 "\n=== [salmon]Transport deactivated[] ===" ""
   383 label *label75
-    * set *tmp152 ""
   384 label *label76
   385 set .AUTO_ALLOCATION_TXT *tmp152
   386 label *label74
 
   541 op add :total_flow_per_ms :items_per_ms :corr_per_ms
   542 op idiv :corr_per_min :corr_per_ms 0.000016666666666666667
   543 set .CORR_SIGN "[]([green]"
-    * jump *label124 lessThan :corr_per_min 0
-    * set .CORR_SIGN "[]([green]+"
+  544 select .CORR_SIGN greaterThanEq :corr_per_min 0 "[]([green]+" .CORR_SIGN
   545 label *label124
   546 label *label125
   547 set .SPEED_UNIT_TXT "[])/min"
 
   596 label *label123
   597 set :wait_time 0
   598 set :remote_wait_time 0
-    * jump *label132 lessThan @tick .MESSAGE_TIMEOUT
-    * set .MESSAGE ""
+  599 select .MESSAGE greaterThanEq @tick .MESSAGE_TIMEOUT "" .MESSAGE
   600 label *label132
   601 label *label133
   602 label *label120

Modifications by Replicate loop condition at line 172:9 (+1 instructions):
 
   135 label *label29
   136 sensor *tmp43 @unit @controlled
   137 jump *label31 equal *tmp43 0
+  138 label *label223
   139 ubind UNIT
   140 label *label30
-    * jump *label29 always
+  141 sensor *tmp43 @unit @controlled
+  142 jump *label223 notEqual *tmp43 0
   143 label *label31
   144 ucontrol flag .QUERY_FLAG
   145 label *label32

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    45 sensor *tmp10 @unit @speed
    46 op div .SPEED *tmp10 1000
    47 set .TARGET 0
-    * set :repeat true
    48 label *label3
    49 label *label217
    50 sensor *tmp12 @unit @controller
 
   542 op add :total_flow_per_ms :items_per_ms :corr_per_ms
   543 op idiv :corr_per_min :corr_per_ms 0.000016666666666666667
   544 set .CORR_SIGN "[]([green]"
-    * select .CORR_SIGN greaterThanEq :corr_per_min 0 "[]([green]+" .CORR_SIGN
+  545 select .CORR_SIGN greaterThanEq :corr_per_min 0 "[]([green]+" "[]([green]"
   546 label *label124
   547 label *label125
   548 set .SPEED_UNIT_TXT "[])/min"

Modifications by Replicate loop condition at line 176:9 (+4 instructions):
 
   147 op equal *tmp47 *tmp46 0
   148 op land *tmp48 *tmp45 *tmp47
   149 jump *label34 equal *tmp48 false
+  150 label *label224
   151 ucontrol stop
   152 sensor :flag @unit @flag
   153 label *label33
-    * jump *label32 always
+  154 op equal *tmp45 :flag .QUERY_FLAG
+  155 sensor *tmp46 @unit @dead
+  156 op equal *tmp47 *tmp46 0
+  157 op land *tmp48 *tmp45 *tmp47
+  158 jump *label224 notEqual *tmp48 false
   159 label *label34
   160 jump *label35 equal :flag .QUERY_FLAG
   161 op idiv :position :flag 100

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   142 label *label31
   143 ucontrol flag .QUERY_FLAG
   144 label *label32
-    * op equal *tmp45 :flag .QUERY_FLAG
+  145 op equal *tmp45 .QUERY_FLAG .QUERY_FLAG
   146 sensor *tmp46 @unit @dead
   147 op equal *tmp47 *tmp46 0
   148 op land *tmp48 *tmp45 *tmp47

Modifications by Replicate loop condition at line 184:13 (+5 instructions):
 
   168 op equal *tmp58 *tmp57 false
   169 op land *tmp59 *tmp56 *tmp58
   170 jump *label39 equal *tmp59 false
+  171 label *label225
   172 ucontrol approach .CORE_X .CORE_Y 6
   173 label *label38
-    * jump *label37 always
+  174 sensor *tmp55 @unit @dead
+  175 op equal *tmp56 *tmp55 0
+  176 ucontrol within .CORE_X .CORE_Y 8 *tmp57
+  177 op equal *tmp58 *tmp57 false
+  178 op land *tmp59 *tmp56 *tmp58
+  179 jump *label225 notEqual *tmp59 false
   180 label *label39
   181 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
   182 jump *label40 equal :b_type @vault

Modifications by Replicate loop condition at line 692:1 (+2 instructions):
 
   947 sensor *tmp359 .SORTER @dead
   948 op strictEqual *tmp361 *tmp359 0
   949 jump *label210 notEqual *tmp361 false
+  950 label *label226
   951 print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
   952 printflush message1
   953 printflush message2
   954 set .SORTER sorter1
   955 label *label209
-    * jump *label208 always
+  956 sensor *tmp359 .SORTER @dead
+  957 op strictEqual *tmp361 *tmp359 0
+  958 jump *label226 equal *tmp361 false
   959 label *label210
   960 sensor *tmp362 .SRC @dead
   961 op strictEqual *tmp364 *tmp362 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   953 printflush message2
   954 set .SORTER sorter1
   955 label *label209
-    * sensor *tmp359 .SORTER @dead
+  956 sensor *tmp359 sorter1 @dead
   957 op strictEqual *tmp361 *tmp359 0
   958 jump *label226 equal *tmp361 false
   959 label *label210

Modifications by Replicate loop condition at line 203:1 (+3 instructions):
 
   206 op notEqual *tmp66 :sorter_type @inverted-sorter
   207 op land *tmp67 *tmp65 *tmp66
   208 jump *label44 equal *tmp67 false
+  209 label *label227
   210 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   211 print "\n"
   212 jump *label45 equal .SORTER null
 
   218 set .SORTER sorter1
   219 sensor :sorter_type sorter1 @type
   220 label *label43
-    * jump *label42 always
+  221 op notEqual *tmp65 :sorter_type @sorter
+  222 op notEqual *tmp66 :sorter_type @inverted-sorter
+  223 op land *tmp67 *tmp65 *tmp66
+  224 jump *label227 notEqual *tmp67 false
   225 label *label44
   226 jump *label47 notEqual :sorter_type @sorter
   227 set .SHOW_REMOTE_LEVEL true

Modifications by Replicate loop condition at line 700:5 (+3 instructions):
 
   974 sensor *tmp371 switch2 @enabled
   975 op or *tmp372 *tmp370 *tmp371
   976 jump *label215 notEqual *tmp372 false
+  977 label *label228
   978 print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
   979 printflush message1
   980 printflush message2
   981 label *label214
-    * jump *label213 always
+  982 sensor *tmp370 switch1 @enabled
+  983 sensor *tmp371 switch2 @enabled
+  984 op or *tmp372 *tmp370 *tmp371
+  985 jump *label228 equal *tmp372 false
   986 label *label215
   987 label *label211
   988 label *label212

Modifications by Convert case at line 712:5 (segments: 1) (+3 instructions):
 
   426 label *label85
   427 set .LAST_ITEM .ITEM
   428 # "Function: def itemTypeToIcon(in itemType)"
-    * jump *label88 notEqual .ITEM @blast-compound
+  429 sensor *tmp376 .ITEM @id
+  430 jump *label229 greaterThanEq *tmp376 16
+  431 multijump *label232 *tmp376 0 (m:*label231)
+  432 multilabel *label232 (m:*label231)
+  433 jump *label230 always
+  434 multilabel *label233 (m:*label231)
+  435 jump *label97 always
+  436 multilabel *label234 (m:*label231)
+  437 jump *label99 always
+  438 multilabel *label235 (m:*label231)
+  439 jump *label95 always
+  440 multilabel *label236 (m:*label231)
+  441 jump *label107 always
+  442 multilabel *label237 (m:*label231)
+  443 jump *label91 always
+  444 multilabel *label238 (m:*label231)
+  445 jump *label119 always
+  446 multilabel *label239 (m:*label231)
+  447 jump *label117 always
+  448 multilabel *label240 (m:*label231)
+  449 jump *label109 always
+  450 multilabel *label241 (m:*label231)
+  451 jump *label111 always
+  452 multilabel *label242 (m:*label231)
+  453 jump *label103 always
+  454 multilabel *label243 (m:*label231)
+  455 jump *label101 always
+  456 multilabel *label244 (m:*label231)
+  457 jump *label115 always
+  458 multilabel *label245 (m:*label231)
+  459 jump *label113 always
+  460 multilabel *label246 (m:*label231)
+  461 jump *label89 always
+  462 multilabel *label247 (m:*label231)
+  463 label *label105
+  464 set *tmp166 "[]"
+  465 jump *label87 always
   466 label *label89
   467 set *tmp166 "[]"
   468 jump *label87 always
   469 label *label88
-    * jump *label90 notEqual .ITEM @coal
   470 label *label91
   471 set *tmp166 "[]"
   472 jump *label87 always
   473 label *label90
-    * jump *label92 notEqual .ITEM @copper
+  474 label *label230
+  475 jump *label229 strictEqual *tmp376 null
   476 label *label93
   477 set *tmp166 "[]"
   478 jump *label87 always
   479 label *label92
-    * jump *label94 notEqual .ITEM @graphite
   480 label *label95
   481 set *tmp166 "[]"
   482 jump *label87 always
   483 label *label94
-    * jump *label96 notEqual .ITEM @lead
   484 label *label97
   485 set *tmp166 "[]"
   486 jump *label87 always
   487 label *label96
-    * jump *label98 notEqual .ITEM @metaglass
   488 label *label99
   489 set *tmp166 "[]"
   490 jump *label87 always
   491 label *label98
-    * jump *label100 notEqual .ITEM @phase-fabric
   492 label *label101
   493 set *tmp166 "[]"
   494 jump *label87 always
   495 label *label100
-    * jump *label102 notEqual .ITEM @plastanium
   496 label *label103
   497 set *tmp166 "[]"
   498 jump *label87 always
   499 label *label102
-    * jump *label104 notEqual .ITEM @pyratite
-    * label *label105
-    * set *tmp166 "[]"
-    * jump *label87 always
   500 label *label104
-    * jump *label106 notEqual .ITEM @sand
   501 label *label107
   502 set *tmp166 "[]"
   503 jump *label87 always
   504 label *label106
-    * jump *label108 notEqual .ITEM @scrap
   505 label *label109
   506 set *tmp166 "[]"
   507 jump *label87 always
   508 label *label108
-    * jump *label110 notEqual .ITEM @silicon
   509 label *label111
   510 set *tmp166 "[]"
   511 jump *label87 always
   512 label *label110
-    * jump *label112 notEqual .ITEM @spore-pod
   513 label *label113
   514 set *tmp166 "[]"
   515 jump *label87 always
   516 label *label112
-    * jump *label114 notEqual .ITEM @surge-alloy
   517 label *label115
   518 set *tmp166 "[]"
   519 jump *label87 always
   520 label *label114
-    * jump *label116 notEqual .ITEM @thorium
   521 label *label117
   522 set *tmp166 "[]"
   523 jump *label87 always
   524 label *label116
-    * jump *label118 notEqual .ITEM @titanium
   525 label *label119
   526 set *tmp166 "[]"
   527 jump *label87 always
   528 label *label118
+  529 label *label229
   530 set *tmp166 null
   531 label *label87
   532 label *label86

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   142 label *label31
   143 ucontrol flag .QUERY_FLAG
   144 label *label32
-    * op equal *tmp45 .QUERY_FLAG .QUERY_FLAG
+  145 set *tmp45 true
   146 sensor *tmp46 @unit @dead
   147 op equal *tmp47 *tmp46 0
   148 op land *tmp48 *tmp45 *tmp47

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   145 set *tmp45 true
   146 sensor *tmp46 @unit @dead
   147 op equal *tmp47 *tmp46 0
-    * op land *tmp48 *tmp45 *tmp47
+  148 op land *tmp48 true *tmp47
   149 jump *label34 equal *tmp48 false
   150 label *label224
   151 ucontrol stop

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   142 label *label31
   143 ucontrol flag .QUERY_FLAG
   144 label *label32
-    * set *tmp45 true
   145 sensor *tmp46 @unit @dead
   146 op equal *tmp47 *tmp46 0
   147 op land *tmp48 true *tmp47

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1:
 
   144 label *label32
   145 sensor *tmp46 @unit @dead
   146 op equal *tmp47 *tmp46 0
-    * op land *tmp48 true *tmp47
+  147 set *tmp48 *tmp47
   148 jump *label34 equal *tmp48 false
   149 label *label224
   150 ucontrol stop

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1 (-1 instructions):
 
   143 ucontrol flag .QUERY_FLAG
   144 label *label32
   145 sensor *tmp46 @unit @dead
-    * op equal *tmp47 *tmp46 0
-    * set *tmp48 *tmp47
+  146 op equal *tmp48 *tmp46 0
   147 jump *label34 equal *tmp48 false
   148 label *label224
   149 ucontrol stop

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    27 set .INC_MAX 6
    28 set .DEC_MAX -1
    29 ubind UNIT
-    * label *label0
    30 jump *label2 notEqual @unit null
    31 label *label216
    32 print "[salmon]No unit of type "
 
    35 print "found."
    36 printflush message1
    37 ubind UNIT
-    * label *label1
    38 jump *label216 equal @unit null
    39 label *label2
    40 set :first_unit @unit
 
    43 sensor *tmp10 @unit @speed
    44 op div .SPEED *tmp10 1000
    45 set .TARGET 0
-    * label *label3
    46 label *label217
    47 sensor *tmp12 @unit @controller
    48 jump *label6 notEqual *tmp12 @this
 
    52 op land *tmp18 *tmp16 *tmp17
    53 op add .TARGET .TARGET *tmp18
    54 label *label6
-    * label *label7
    55 ubind UNIT
    56 op notEqual *tmp19 @unit :first_unit
    57 sensor *tmp20 :first_unit @dead
    58 op strictEqual *tmp21 *tmp20 0
    59 op land :repeat *tmp19 *tmp21
-    * label *label4
    60 jump *label217 notEqual :repeat false
-    * label *label5
    61 set .CHANGE 0
    62 set :active .TARGET
    63 set .DEC_LIMIT 0
 
    68 set .CONTAINER null
    69 set .DROP_TARGET null
    70 set :n @links
-    * label *label11
    71 jump *label13 lessThanEq :n 0
    72 label *label218
    73 op sub :n :n 1
 
    80 set .CONTAINER :block
    81 set .CONTAINER_INDEX :n
    82 label *label15
-    * label *label14
-    * label *label12
    83 jump *label218 greaterThan :n 0
    84 label *label13
    85 jump *label17 notEqual .CONTAINER null
 
    89 label *label17
    90 jump *label10 always
    91 label *label18
-    * label *label9
    92 jump *label8 always
    93 label *label10
    94 set .CORE null
    95 jump *label19 notEqual LINK_ID 0
-    * label *label21
    96 label *label219
    97 print "[green]Locating core..."
    98 printflush message1
 
   102 ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
   103 ucontrol flag .S_UNUSED
   104 label *label24
-    * label *label25
-    * label *label22
   105 jump *label219 equal .CORE null
-    * label *label23
   106 set .DISCARD_UNIT_MAX_ITEMS .UNIT_CAPACITY
   107 jump *label20 always
   108 label *label19
 
   112 print "."
   113 print ".."
   114 printflush message1
-    * label *label26
   115 label *label220
   116 op add .QUERY_FLAG 99999900 LINK_ID
   117 set :flag .QUERY_FLAG
   118 ubind UNIT
-    * label *label29
   119 sensor *tmp43 @unit @controlled
   120 jump *label31 equal *tmp43 0
   121 label *label223
   122 ubind UNIT
-    * label *label30
   123 sensor *tmp43 @unit @controlled
   124 jump *label223 notEqual *tmp43 0
   125 label *label31
   126 ucontrol flag .QUERY_FLAG
-    * label *label32
   127 sensor *tmp46 @unit @dead
   128 op equal *tmp48 *tmp46 0
   129 jump *label34 equal *tmp48 false
   130 label *label224
   131 ucontrol stop
   132 sensor :flag @unit @flag
-    * label *label33
   133 op equal *tmp45 :flag .QUERY_FLAG
   134 sensor *tmp46 @unit @dead
   135 op equal *tmp47 *tmp46 0
 
   140 op idiv :position :flag 100
   141 op mod .CORE_X :position @mapw
   142 op idiv .CORE_Y :position @mapw
-    * label *label37
   143 sensor *tmp55 @unit @dead
   144 op equal *tmp56 *tmp55 0
   145 ucontrol within .CORE_X .CORE_Y 8 *tmp57
 
   148 jump *label39 equal *tmp59 false
   149 label *label225
   150 ucontrol approach .CORE_X .CORE_Y 6
-    * label *label38
   151 sensor *tmp55 @unit @dead
   152 op equal *tmp56 *tmp55 0
   153 ucontrol within .CORE_X .CORE_Y 8 *tmp57
 
   167 printflush message2
   168 set .CORE null
   169 label *label40
-    * label *label41
   170 label *label35
-    * label *label36
   171 ucontrol flag .S_UNUSED
-    * label *label27
   172 jump *label220 equal .CORE null
-    * label *label28
   173 set .DISCARD_UNIT_MAX_ITEMS 0
   174 label *label20
   175 set .SORTER sorter1
   176 sensor :sorter_type sorter1 @type
-    * label *label42
   177 op notEqual *tmp65 :sorter_type @sorter
   178 op notEqual *tmp66 :sorter_type @inverted-sorter
   179 op land *tmp67 *tmp65 *tmp66
 
   185 print "Block found: "
   186 print .SORTER
   187 label *label45
-    * label *label46
   188 printflush message1
   189 set .SORTER sorter1
   190 sensor :sorter_type sorter1 @type
-    * label *label43
   191 op notEqual *tmp65 :sorter_type @sorter
   192 op notEqual *tmp66 :sorter_type @inverted-sorter
   193 op land *tmp67 *tmp65 *tmp66
 
   212 set .SRC_REMOTE_WAIT 1
   213 set .DST_REMOTE_WAIT 0
   214 select *tmp83 equal LINK_ID 0 " from core" " from vault #"
-    * label *label49
-    * label *label50
   215 set .DIRECTION *tmp83
   216 jump *label48 always
   217 label *label47
 
   236 set .SRC_REMOTE_WAIT 0
   237 set .DST_REMOTE_WAIT 1
   238 select *tmp97 equal LINK_ID 0 " to core" " to vault #"
-    * label *label51
-    * label *label52
   239 set .DIRECTION *tmp97
   240 label *label48
   241 select *tmp99 equal LINK_ID 0 "" LINK_ID
-    * label *label53
-    * label *label54
   242 set .LINK_TXT *tmp99
   243 op sub *tmp100 :src_capacity .LOAD_LEVEL
   244 op min .LOAD_PACK .UNIT_CAPACITY *tmp100
 
   262 set .DROP_Y .CORE_Y
   263 sensor *tmp122 .CONTAINER @x
   264 select *tmp124 lessThan *tmp122 .CORE_X 15 -15
-    * label *label57
-    * label *label58
   265 op add .PARK_X .CORE_X *tmp124
   266 sensor *tmp126 .CONTAINER @y
   267 select *tmp128 lessThan *tmp126 .CORE_Y 15 -15
-    * label *label59
-    * label *label60
   268 op add .PARK_Y .CORE_Y *tmp128
   269 op equal *tmp130 LINK_ID 0
   270 op mul .PARK_ITEM_LIMIT *tmp130 .UNIT_CAPACITY
 
   311 label *label62
   312 label *label63
   313 ubind UNIT
-    * label *label66
   314 jump *label68 notEqual @unit null
   315 label *label221
   316 print "No unit of type "
 
   319 print "found."
   320 printflush message1
   321 ubind UNIT
-    * label *label67
   322 jump *label221 equal @unit null
   323 label *label68
   324 sensor *tmp139 switch1 @enabled
 
   333 set .SPEED_UNIT_TXT "/min"
   334 set .WAIT_LIMIT 30000
   335 label *label69
-    * label *label70
   336 sensor *tmp144 switch2 @enabled
   337 jump *label71 equal *tmp144 false
   338 control enabled switch2 false
 
   353 set :corr_per_min ""
   354 set .SPEED_UNIT_TXT "/min"
   355 select *tmp152 equal .TARGET 0 "\n=== [salmon]Transport deactivated[] ===" ""
-    * label *label75
-    * label *label76
   356 set .AUTO_ALLOCATION_TXT *tmp152
   357 label *label74
   358 set .WAIT_LIMIT 30000
   359 label *label71
-    * label *label72
   360 sensor *tmp153 :first_unit @dead
   361 op strictEqual :alive *tmp153 0
   362 op strictEqual *tmp155 @unit :first_unit
 
   364 jump *label79 notEqual :active 0
   365 print "\n[salmon]No active units.[]"
   366 label *label79
-    * label *label80
   367 printflush message2
   368 set .STATE_LIMIT 6
   369 sensor .ITEM .SORTER @config
   370 jump *label81 equal .ITEM .LAST_ITEM
-    * label *label83
   371 jump *label85 notEqual .ITEM null
   372 label *label222
   373 print "[salmon]No item type selected for transport.[]"
   374 printflush message1
   375 sensor .ITEM .SORTER @config
-    * label *label84
   376 jump *label222 equal .ITEM null
   377 label *label85
   378 set .LAST_ITEM .ITEM
 
   411 multilabel *label246 (m:*label231)
   412 jump *label89 always
   413 multilabel *label247 (m:*label231)
-    * label *label105
   414 set *tmp166 "[]"
   415 jump *label87 always
   416 label *label89
   417 set *tmp166 "[]"
   418 jump *label87 always
-    * label *label88
   419 label *label91
   420 set *tmp166 "[]"
   421 jump *label87 always
-    * label *label90
   422 label *label230
   423 jump *label229 strictEqual *tmp376 null
-    * label *label93
   424 set *tmp166 "[]"
   425 jump *label87 always
-    * label *label92
   426 label *label95
   427 set *tmp166 "[]"
   428 jump *label87 always
-    * label *label94
   429 label *label97
   430 set *tmp166 "[]"
   431 jump *label87 always
-    * label *label96
   432 label *label99
   433 set *tmp166 "[]"
   434 jump *label87 always
-    * label *label98
   435 label *label101
   436 set *tmp166 "[]"
   437 jump *label87 always
-    * label *label100
   438 label *label103
   439 set *tmp166 "[]"
   440 jump *label87 always
-    * label *label102
-    * label *label104
   441 label *label107
   442 set *tmp166 "[]"
   443 jump *label87 always
-    * label *label106
   444 label *label109
   445 set *tmp166 "[]"
   446 jump *label87 always
-    * label *label108
   447 label *label111
   448 set *tmp166 "[]"
   449 jump *label87 always
-    * label *label110
   450 label *label113
   451 set *tmp166 "[]"
   452 jump *label87 always
-    * label *label112
   453 label *label115
   454 set *tmp166 "[]"
   455 jump *label87 always
-    * label *label114
   456 label *label117
   457 set *tmp166 "[]"
   458 jump *label87 always
-    * label *label116
   459 label *label119
   460 set *tmp166 "[]"
   461 jump *label87 always
-    * label *label118
   462 label *label229
   463 set *tmp166 null
   464 label *label87
-    * label *label86
   465 set .ITEM_ICON *tmp166
   466 set .STATE_LIMIT 1
   467 sensor :last_level .CONTAINER .ITEM
   468 set :min_level 999999
   469 set :max_level 0
   470 label *label81
-    * label *label82
   471 sensor :container_items .CONTAINER .ITEM
   472 op min :min_level :min_level :container_items
   473 op max :max_level :max_level :container_items
 
   510 op idiv :corr_per_min :corr_per_ms 0.000016666666666666667
   511 set .CORR_SIGN "[]([green]"
   512 select .CORR_SIGN greaterThanEq :corr_per_min 0 "[]([green]+" "[]([green]"
-    * label *label124
-    * label *label125
   513 set .SPEED_UNIT_TXT "[])/min"
   514 jump *label126 equal :alive false
   515 op lessThan *tmp210 :min_level .LOW_LEVEL_TRIGGER
 
   527 op add *tmp219 *tmp218 :total_flow_per_ms
   528 op div :total_flow_per_ms *tmp219 3
   529 label *label130
-    * label *label131
   530 op div *tmp221 :total_flow_per_ms :items_per_ms_unit
   531 op add *tmp222 *tmp221 OVERALLOCATION_LOW
   532 op ceil :new_target *tmp222
 
   558 set :min_level 999999
   559 set :max_level 0
   560 label *label122
-    * label *label123
   561 set :wait_time 0
   562 set :remote_wait_time 0
   563 select .MESSAGE greaterThanEq @tick .MESSAGE_TIMEOUT "" .MESSAGE
-    * label *label132
-    * label *label133
   564 label *label120
-    * label *label121
   565 print ""
   566 print "Moving [green]"
   567 print .ITEM
 
   600 jump *label138 lessThanEq .CHANGE 0
   601 print "\n[][salmon]Cannot acquire additional units![]"
   602 label *label138
-    * label *label139
   603 label *label134
-    * label *label135
   604 print "\n"
   605 print "[]Local items: [gold]"
   606 print :container_items
 
   610 print "["
   611 print "])"
   612 label *label140
-    * label *label141
   613 jump *label142 equal .SHOW_REMOTE_LEVEL false
   614 sensor :remote_level .CORE .ITEM
   615 print "\n"
 
   621 print "["
   622 print "])"
   623 label *label144
-    * label *label145
   624 label *label142
-    * label *label143
   625 jump *label146 lessThanEq .TARGET 0
   626 print "\n"
   627 print "[]Speed: [green]"
 
   657 print "["
   658 print "] s"
   659 label *label146
-    * label *label147
   660 print "\n"
   661 print "[lightgray]Loop: "
   662 print :loop_time_ms
 
   672 jump *label150 equal *tmp258 0
   673 jump *label65 always
   674 label *label150
-    * label *label151
   675 sensor *tmp261 .DST @dead
   676 jump *label152 equal *tmp261 0
   677 jump *label65 always
   678 label *label152
-    * label *label153
   679 sensor *tmp264 .SORTER @dead
   680 jump *label154 equal *tmp264 0
   681 jump *label65 always
   682 label *label154
-    * label *label155
   683 getlink *tmp267 .CONTAINER_INDEX
   684 jump *label156 equal .CONTAINER *tmp267
   685 jump *label65 always
   686 label *label156
-    * label *label157
   687 label *label77
-    * label *label78
   688 jump *label158 lessThanEq .CHANGE 0
   689 sensor *tmp272 @unit @controlled
   690 jump *label160 notEqual *tmp272 0
   691 op sub .CHANGE .CHANGE 1
   692 ucontrol flag 1
   693 label *label160
-    * label *label161
   694 label *label158
-    * label *label159
   695 sensor *tmp275 @unit @controller
   696 jump *label162 notEqual *tmp275 @this
   697 sensor :state @unit @flag
 
   705 op add .CHANGE .CHANGE 1
   706 set :state 6
   707 label *label170
-    * label *label171
   708 label *label168
-    * label *label169
   709 label *label166
-    * label *label167
   710 jump *label172 notEqual :state 1
   711 sensor *tmp292 @unit @totalItems
   712 jump *label174 notEqual *tmp292 0
 
   723 jump *label178 equal *tmp298 false
   724 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
   725 label *label178
-    * label *label179
   726 print "[]"
   727 print "\n"
   728 print "Unloading previous items: [green]"
   729 label *label177
   730 label *label175
   731 label *label172
-    * label *label173
   732 jump *label180 notEqual :state 2
   733 ucontrol approach .SRC_X .SRC_Y 6
   734 ucontrol within .SRC_X .SRC_Y 8 *tmp302
 
   751 print "sec[] to source: [green]"
   752 label *label183
   753 label *label180
-    * label *label181
   754 jump *label184 notEqual :state 3
   755 sensor *tmp313 .SRC .ITEM
   756 op sub :max_load *tmp313 .LOAD_LEVEL
   757 jump *label186 lessThan :max_load .LOAD_PACK
   758 ucontrol itemTake .SRC .ITEM :max_load
   759 label *label186
-    * label *label187
   760 sensor *tmp317 @unit @totalItems
   761 jump *label188 lessThan *tmp317 .UNIT_CAPACITY
   762 set :state 4
 
   771 op add :remote_wait_time :remote_wait_time *tmp320
   772 label *label189
   773 label *label184
-    * label *label185
   774 jump *label190 notEqual :state 4
   775 ucontrol approach .DST_X .DST_Y 6
   776 ucontrol within .DST_X .DST_Y 8 *tmp323
 
   796 print "sec[] to destination: [green]"
   797 label *label193
   798 label *label190
-    * label *label191
   799 jump *label194 notEqual :state 5
   800 sensor *tmp335 .DST .ITEM
   801 op sub :max_drop .DROP_LEVEL *tmp335
   802 jump *label196 lessThan :max_drop .DROP_PACK
   803 ucontrol itemDrop .DST :max_drop
   804 label *label196
-    * label *label197
   805 sensor *tmp339 @unit @totalItems
   806 jump *label198 greaterThan *tmp339 0
   807 set :state 2
 
   820 print " "
   821 print "sec[] to source: [green]"
   822 jump *label201 always
-    * label *label200
   823 print "[]"
   824 print "\n"
   825 print "Going to source: [green]"
 
   835 op add :remote_wait_time :remote_wait_time *tmp350
   836 label *label199
   837 label *label194
-    * label *label195
   838 sensor :items @unit @totalItems
   839 op add :items_in_transit :items_in_transit :items
   840 jump *label202 notEqual :state 6
 
   850 ucontrol move .PARK_X .PARK_Y
   851 set :state .S_UNUSED
   852 label *label206
-    * label *label207
   853 label *label204
-    * label *label205
   854 jump *label203 always
   855 label *label202
   856 op add :active :active 1
 
   859 print .ITEM_ICON
   860 ucontrol flag :state
   861 label *label164
-    * label *label165
   862 label *label162
-    * label *label163
-    * label *label64
   863 jump *label63 always
   864 label *label65
-    * label *label208
   865 sensor *tmp359 .SORTER @dead
   866 op strictEqual *tmp361 *tmp359 0
   867 jump *label210 notEqual *tmp361 false
 
   870 printflush message1
   871 printflush message2
   872 set .SORTER sorter1
-    * label *label209
   873 sensor *tmp359 sorter1 @dead
   874 op strictEqual *tmp361 *tmp359 0
   875 jump *label226 equal *tmp361 false
 
   882 op equal *tmp366 *tmp367 false
   883 op or *tmp368 *tmp363 *tmp366
   884 jump *label211 equal *tmp368 false
-    * label *label213
   885 sensor *tmp370 switch1 @enabled
   886 sensor *tmp371 switch2 @enabled
   887 op or *tmp372 *tmp370 *tmp371
 
   890 print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
   891 printflush message1
   892 printflush message2
-    * label *label214
   893 sensor *tmp370 switch1 @enabled
   894 sensor *tmp371 switch2 @enabled
   895 op or *tmp372 *tmp370 *tmp371
   896 jump *label228 equal *tmp372 false
   897 label *label215
   898 label *label211
-    * label *label212
   899 control enabled switch1 false
   900 control enabled switch2 false
   901 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-4 instructions):
 
   669 set :items_in_transit 0
   670 print "Unit status:"
   671 sensor *tmp258 .SRC @dead
-    * jump *label150 equal *tmp258 0
-    * jump *label65 always
+  672 jump *label65 notEqual *tmp258 0
   673 label *label150
   674 sensor *tmp261 .DST @dead
-    * jump *label152 equal *tmp261 0
-    * jump *label65 always
+  675 jump *label65 notEqual *tmp261 0
   676 label *label152
   677 sensor *tmp264 .SORTER @dead
-    * jump *label154 equal *tmp264 0
-    * jump *label65 always
+  678 jump *label65 notEqual *tmp264 0
   679 label *label154
   680 getlink *tmp267 .CONTAINER_INDEX
-    * jump *label156 equal .CONTAINER *tmp267
-    * jump *label65 always
+  681 jump *label65 notEqual .CONTAINER *tmp267
   682 label *label156
   683 label *label77
   684 jump *label158 lessThanEq .CHANGE 0

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
   670 print "Unit status:"
   671 sensor *tmp258 .SRC @dead
   672 jump *label65 notEqual *tmp258 0
-    * label *label150
   673 sensor *tmp261 .DST @dead
   674 jump *label65 notEqual *tmp261 0
-    * label *label152
   675 sensor *tmp264 .SORTER @dead
   676 jump *label65 notEqual *tmp264 0
-    * label *label154
   677 getlink *tmp267 .CONTAINER_INDEX
   678 jump *label65 notEqual .CONTAINER *tmp267
-    * label *label156
   679 label *label77
   680 jump *label158 lessThanEq .CHANGE 0
   681 sensor *tmp272 @unit @controlled

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
    82 label *label15
    83 jump *label218 greaterThan :n 0
    84 label *label13
-    * jump *label17 notEqual .CONTAINER null
+   85 jump *label10 notEqual .CONTAINER null
    86 print "[salmon]No vault or container."
    87 printflush message1
-    * jump *label18 always
+   88 jump *label8 always
    89 label *label17
    90 jump *label10 always
    91 label *label18
 
   685 label *label160
   686 label *label158
   687 sensor *tmp275 @unit @controller
-    * jump *label162 notEqual *tmp275 @this
+  688 jump *label63 notEqual *tmp275 @this
   689 sensor :state @unit @flag
-    * jump *label164 equal :state .S_UNUSED
+  690 jump *label63 equal :state .S_UNUSED
   691 op max *tmp281 :state 1
   692 op min :state *tmp281 .STATE_LIMIT
   693 jump *label166 greaterThanEq .CHANGE 0
 
   811 print *tmp349
   812 print " "
   813 print "sec[] to source: [green]"
-    * jump *label201 always
+  814 jump *label199 always
   815 print "[]"
   816 print "\n"
   817 print "Going to source: [green]"
 
   835 print "Parking: [green]"
   836 ucontrol approach .DROP_X .DROP_Y 6
   837 ucontrol within .DROP_X .DROP_Y 8 *tmp354
-    * jump *label204 equal *tmp354 false
+  838 jump *label203 equal *tmp354 false
   839 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
   840 sensor :items @unit @totalItems
-    * jump *label206 greaterThan :items .PARK_ITEM_LIMIT
+  841 jump *label203 greaterThan :items .PARK_ITEM_LIMIT
   842 ucontrol move .PARK_X .PARK_Y
   843 set :state .S_UNUSED
   844 label *label206

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-6 instructions):
 
    86 print "[salmon]No vault or container."
    87 printflush message1
    88 jump *label8 always
-    * label *label17
-    * jump *label10 always
-    * label *label18
-    * jump *label8 always
    89 label *label10
    90 set .CORE null
    91 jump *label19 notEqual LINK_ID 0
 
   808 print " "
   809 print "sec[] to source: [green]"
   810 jump *label199 always
-    * print "[]"
-    * print "\n"
-    * print "Going to source: [green]"
-    * label *label201
-    * jump *label199 always
   811 label *label198
   812 print "[]"
   813 print "\n"
 
   832 jump *label203 greaterThan :items .PARK_ITEM_LIMIT
   833 ucontrol move .PARK_X .PARK_Y
   834 set :state .S_UNUSED
-    * label *label206
-    * label *label204
   835 jump *label203 always
   836 label *label202
   837 op add :active :active 1
 
   839 print :items
   840 print .ITEM_ICON
   841 ucontrol flag :state
-    * label *label164
-    * label *label162
   842 jump *label63 always
   843 label *label65
   844 sensor *tmp359 .SORTER @dead

Modifications by Jumps phase, Dead Code Elimination, pass 5, iteration 1 (-8 instructions):
 
    17 op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
    18 op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
    19 set .EFF_AUTO_ALLOCATION AUTO_ALLOCATION
-    * set .TRIGGER_LEVEL 0.9
    20 op mul .S_UNUSED -1 HOUSEKEEPING
-    * set .LOOPS 1
-    * op div .LOOPS_TICKS_TO_MS 1000 60
-    * set .INC_OVERALLOCATION OVERALLOCATION_LOW
    21 op add .DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
-    * set .TRIGGER_BOOST 2
-    * set .INC_MAX 6
-    * set .DEC_MAX -1
    22 ubind UNIT
    23 jump *label2 notEqual @unit null
    24 label *label216
 
   228 set .DIRECTION *tmp97
   229 label *label48
   230 select *tmp99 equal LINK_ID 0 "" LINK_ID
-    * set .LINK_TXT *tmp99
   231 op sub *tmp100 :src_capacity .LOAD_LEVEL
   232 op min .LOAD_PACK .UNIT_CAPACITY *tmp100
   233 op min .DROP_PACK .UNIT_CAPACITY .DROP_LEVEL

Modifications by Jumps phase, Single Step Elimination, pass 5, iteration 1 (-1 instructions):
 
   869 label *label211
   870 control enabled switch1 false
   871 control enabled switch2 false
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-71 instructions):
 
    22 ubind UNIT
    23 jump *label2 notEqual @unit null
    24 label *label216
-    * print "[salmon]No unit of type "
-    * print UNIT
-    * print " "
-    * print "found."
+   25 print "[salmon]No unit of type {0} found."
+   26 format UNIT
    27 printflush message1
    28 ubind UNIT
    29 jump *label216 equal @unit null
 
    94 jump *label20 always
    95 label *label19
    96 printflush message2
-    * print "[green]Locating vault #"
-    * print LINK_ID
-    * print "."
-    * print ".."
+   97 print "[green]Locating vault #{0}..."
+   98 format LINK_ID
    99 printflush message1
   100 label *label220
   101 op add .QUERY_FLAG 99999900 LINK_ID
 
   142 label *label39
   143 ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
   144 jump *label40 equal :b_type @vault
-    * print "[salmon]Building at "
-    * print .CORE_X
-    * print ","
-    * print " "
-    * print .CORE_Y
-    * print " "
-    * print "is not a vault!"
+  145 print "[salmon]Building at {0}, {0} is not a vault!"
+  146 format .CORE_X
+  147 format .CORE_Y
   148 printflush message2
   149 set .CORE null
   150 label *label40
 
   160 op land *tmp67 *tmp65 *tmp66
   161 jump *label44 equal *tmp67 false
   162 label *label227
-    * print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
-    * print "\n"
+  163 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter.\n"
   164 jump *label45 equal .SORTER null
   165 print "Block found: "
   166 print .SORTER
 
   292 ubind UNIT
   293 jump *label68 notEqual @unit null
   294 label *label221
-    * print "No unit of type "
-    * print UNIT
-    * print " "
-    * print "found."
+  295 print "No unit of type {0} found."
+  296 format UNIT
   297 printflush message1
   298 ubind UNIT
   299 jump *label221 equal @unit null
 
   539 set :remote_wait_time 0
   540 select .MESSAGE greaterThanEq @tick .MESSAGE_TIMEOUT "" .MESSAGE
   541 label *label120
-    * print ""
-    * print "Moving [green]"
-    * print .ITEM
-    * print "["
-    * print "]"
+  542 print "Moving [green]{0}[]"
+  543 format .ITEM
   544 print .DIRECTION
   545 print *tmp99
   546 print .AUTO_ALLOCATION_TXT
   547 jump *label134 lessThanEq .TARGET 0
   548 jump *label136 lessThan :active .TARGET
-    * print "\n"
-    * print "Using [green]"
-    * print :active
-    * print "/"
-    * print .TARGET
-    * print "["
-    * print "] units ("
-    * print UNIT
-    * print ")"
-    * print " [gold]+"
+  549 print "\nUsing [green]{0}/{0}[] units ({0}) [gold]+"
+  550 format :active
+  551 format .TARGET
+  552 format UNIT
   553 print :items_in_transit
   554 jump *label137 always
   555 label *label136
-    * print "\n"
-    * print "Using [salmon]"
-    * print :active
-    * print "/"
-    * print .TARGET
-    * print "["
-    * print "] units ("
-    * print UNIT
-    * print ")"
-    * print " [gold]+"
+  556 print "\nUsing [salmon]{0}/{0}[] units ({0}) [gold]+"
+  557 format :active
+  558 format .TARGET
+  559 format UNIT
   560 print :items_in_transit
   561 label *label137
   562 jump *label138 lessThanEq .CHANGE 0
   563 print "\n[][salmon]Cannot acquire additional units![]"
   564 label *label138
   565 label *label134
-    * print "\n"
-    * print "[]Local items: [gold]"
+  566 print "\n[]Local items: [gold]"
   567 print :container_items
   568 jump *label140 greaterThanEq .EFF_LOCAL_LIMIT 100
-    * print "[] (limit [orange]"
-    * print .LOCAL_MARGIN
-    * print "["
-    * print "])"
+  569 print "[] (limit [orange]{0}[])"
+  570 format .LOCAL_MARGIN
   571 label *label140
   572 jump *label142 equal .SHOW_REMOTE_LEVEL false
   573 sensor :remote_level .CORE .ITEM
-    * print "\n"
-    * print "[]Remote items: [gold]"
+  574 print "\n[]Remote items: [gold]"
   575 print :remote_level
   576 jump *label144 greaterThanEq .EFF_REMOTE_LIMIT 100
-    * print "[] (limit [orange]"
-    * print .REMOTE_MARGIN
-    * print "["
-    * print "])"
+  577 print "[] (limit [orange]{0}[])"
+  578 format .REMOTE_MARGIN
   579 label *label144
   580 label *label142
   581 jump *label146 lessThanEq .TARGET 0
-    * print "\n"
-    * print "[]Speed: [green]"
+  582 print "\n[]Speed: [green]"
   583 print :items_per_min
   584 print .CORR_SIGN
   585 print :corr_per_min
   586 print .SPEED_UNIT_TXT
   587 jump *label148 equal .EFF_AUTO_ALLOCATION false
-    * print "\n"
-    * print "Unit throughput: [green]"
-    * print :items_per_min_unit
-    * print "["
-    * print "]/min"
-    * print "\n"
-    * print "Min/last round: [green]"
-    * print :turnaround_str
-    * print "["
-    * print "]/[green]"
-    * print :elapsed_str
-    * print "["
-    * print "] s"
+  588 print "\nUnit throughput: [green]{0}[]/min\nMin/last round: [green]{0}[]/[green]{0}[] s"
+  589 format :items_per_min_unit
+  590 format :turnaround_str
+  591 format :elapsed_str
   592 jump *label149 always
   593 label *label148
-    * print "\n"
-    * print "Last round: [green]"
-    * print :elapsed_str
-    * print "["
-    * print "] s"
+  594 print "\nLast round: [green]{0}[] s"
+  595 format :elapsed_str
   596 label *label149
-    * print "\n"
-    * print "Total wait time: [green]"
-    * print :wait_time_str
-    * print "["
-    * print "] s"
+  597 print "\nTotal wait time: [green]{0}[] s"
+  598 format :wait_time_str
   599 label *label146
-    * print "\n"
-    * print "[lightgray]Loop: "
-    * print :loop_time_ms
-    * print " "
-    * print "ms"
+  600 print "\n[lightgray]Loop: {0} ms"
+  601 format :loop_time_ms
   602 printflush message1
   603 op sub .CHANGE .TARGET :active
   604 set :active 0
 
   652 jump *label178 equal *tmp298 false
   653 ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
   654 label *label178
-    * print "[]"
-    * print "\n"
-    * print "Unloading previous items: [green]"
+  655 print "[]\nUnloading previous items: [green]"
   656 label *label177
   657 label *label175
   658 label *label172
 
   670 op len *tmp308 *tmp305 *tmp307
   671 op idiv *tmp309 *tmp308 .SPEED_SEC
   672 op div *tmp310 *tmp309 10
-    * print "[]"
-    * print "\n"
-    * print "[gold]"
-    * print *tmp310
-    * print " "
-    * print "sec[] to source: [green]"
+  673 print "[]\n[gold]{0} sec[] to source: [green]"
+  674 format *tmp310
   675 label *label183
   676 label *label180
   677 jump *label184 notEqual :state 3
 
   685 set :state 4
   686 jump *label189 always
   687 label *label188
-    * print "[]"
-    * print "\n"
-    * print "Waiting at source: [green]"
+  688 print "[]\nWaiting at source: [green]"
   689 ucontrol approach .SRC_X .SRC_Y 6
   690 op add :wait_time :wait_time :loop_time_ms
   691 op mul *tmp320 :loop_time_ms .SRC_REMOTE_WAIT
 
   709 op len *tmp330 *tmp327 *tmp329
   710 op idiv *tmp331 *tmp330 .SPEED_SEC
   711 op div *tmp332 *tmp331 10
-    * print "[]"
-    * print "\n"
-    * print "[gold]"
-    * print *tmp332
-    * print " "
-    * print "sec[] to destination: [green]"
+  712 print "[]\n[gold]{0} sec[] to destination: [green]"
+  713 format *tmp332
   714 label *label193
   715 label *label190
   716 jump *label194 notEqual :state 5
 
   730 op len *tmp347 *tmp344 *tmp346
   731 op idiv *tmp348 *tmp347 .SPEED_SEC
   732 op div *tmp349 *tmp348 10
-    * print "[]"
-    * print "\n"
-    * print "[gold]"
-    * print *tmp349
-    * print " "
-    * print "sec[] to source: [green]"
+  733 print "[]\n[gold]{0} sec[] to source: [green]"
+  734 format *tmp349
   735 jump *label199 always
   736 label *label198
-    * print "[]"
-    * print "\n"
-    * print "Waiting at destination: [green]"
+  737 print "[]\nWaiting at destination: [green]"
   738 ucontrol approach .DST_X .DST_Y 6
   739 op add :wait_time :wait_time :loop_time_ms
   740 op mul *tmp350 :loop_time_ms .DST_REMOTE_WAIT
 
   744 sensor :items @unit @totalItems
   745 op add :items_in_transit :items_in_transit :items
   746 jump *label202 notEqual :state 6
-    * print "[]"
-    * print "\n"
-    * print "Parking: [green]"
+  747 print "[]\nParking: [green]"
   748 ucontrol approach .DROP_X .DROP_Y 6
   749 ucontrol within .DROP_X .DROP_Y 8 *tmp354
   750 jump *label203 equal *tmp354 false

Final code before resolving virtual instructions:

set UNIT @mega
set LINK_ID 0
set AUTO_ALLOCATION true
set MAX_UNITS 24
set HOUSEKEEPING true
set LOCAL_LIMIT 100
set REMOTE_LIMIT 100
set OVERALLOCATION_LOW 0.25
set OVERALLOCATION_HIGH 0.75
set STABILIZATION false
set .STATE_LIMIT null
set .ITEM_ICON null
set .ITEM null
set .CORE_Y null
set .CORE_X null
set .CONTAINER_INDEX null
set .MESSAGE ""
op max .EFF_LOCAL_LIMIT LOCAL_LIMIT 20
op max .EFF_REMOTE_LIMIT REMOTE_LIMIT 20
set .EFF_AUTO_ALLOCATION AUTO_ALLOCATION
op mul .S_UNUSED -1 HOUSEKEEPING
op add .DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
ubind UNIT
jump *label2 notEqual @unit null
label *label216
print "[salmon]No unit of type {0} found."
format UNIT
printflush message1
ubind UNIT
jump *label216 equal @unit null
label *label2
set :first_unit @unit
sensor *tmp8 @unit @speed
op div .SPEED_SEC *tmp8 10
sensor *tmp10 @unit @speed
op div .SPEED *tmp10 1000
set .TARGET 0
label *label217
sensor *tmp12 @unit @controller
jump *label6 notEqual *tmp12 @this
sensor :state @unit @flag
op greaterThanEq *tmp16 :state 1
op lessThan *tmp17 :state 6
op land *tmp18 *tmp16 *tmp17
op add .TARGET .TARGET *tmp18
label *label6
ubind UNIT
op notEqual *tmp19 @unit :first_unit
sensor *tmp20 :first_unit @dead
op strictEqual *tmp21 *tmp20 0
op land :repeat *tmp19 *tmp21
jump *label217 notEqual :repeat false
set .CHANGE 0
set :active .TARGET
set .DEC_LIMIT 0
set .INC_LIMIT 0
sensor .UNIT_CAPACITY @unit @itemCapacity
set :first_unit null
label *label8
set .CONTAINER null
set .DROP_TARGET null
set :n @links
jump *label13 lessThanEq :n 0
label *label218
op sub :n :n 1
getlink :block :n
sensor *tmp29 :block @type
jump *label16 equal *tmp29 @vault
jump *label15 notEqual *tmp29 @container
label *label16
set .DROP_TARGET .CONTAINER
set .CONTAINER :block
set .CONTAINER_INDEX :n
label *label15
jump *label218 greaterThan :n 0
label *label13
jump *label10 notEqual .CONTAINER null
print "[salmon]No vault or container."
printflush message1
jump *label8 always
label *label10
set .CORE null
jump *label19 notEqual LINK_ID 0
label *label219
print "[green]Locating core..."
printflush message1
ubind UNIT
sensor *tmp36 @unit @controlled
jump *label24 notEqual *tmp36 0
ulocate building core false @copper .CORE_X .CORE_Y 0 .CORE
ucontrol flag .S_UNUSED
label *label24
jump *label219 equal .CORE null
set .DISCARD_UNIT_MAX_ITEMS .UNIT_CAPACITY
jump *label20 always
label *label19
printflush message2
print "[green]Locating vault #{0}..."
format LINK_ID
printflush message1
label *label220
op add .QUERY_FLAG 99999900 LINK_ID
set :flag .QUERY_FLAG
ubind UNIT
sensor *tmp43 @unit @controlled
jump *label31 equal *tmp43 0
label *label223
ubind UNIT
sensor *tmp43 @unit @controlled
jump *label223 notEqual *tmp43 0
label *label31
ucontrol flag .QUERY_FLAG
sensor *tmp46 @unit @dead
op equal *tmp48 *tmp46 0
jump *label34 equal *tmp48 false
label *label224
ucontrol stop
sensor :flag @unit @flag
op equal *tmp45 :flag .QUERY_FLAG
sensor *tmp46 @unit @dead
op equal *tmp47 *tmp46 0
op land *tmp48 *tmp45 *tmp47
jump *label224 notEqual *tmp48 false
label *label34
jump *label35 equal :flag .QUERY_FLAG
op idiv :position :flag 100
op mod .CORE_X :position @mapw
op idiv .CORE_Y :position @mapw
sensor *tmp55 @unit @dead
op equal *tmp56 *tmp55 0
ucontrol within .CORE_X .CORE_Y 8 *tmp57
op equal *tmp58 *tmp57 false
op land *tmp59 *tmp56 *tmp58
jump *label39 equal *tmp59 false
label *label225
ucontrol approach .CORE_X .CORE_Y 6
sensor *tmp55 @unit @dead
op equal *tmp56 *tmp55 0
ucontrol within .CORE_X .CORE_Y 8 *tmp57
op equal *tmp58 *tmp57 false
op land *tmp59 *tmp56 *tmp58
jump *label225 notEqual *tmp59 false
label *label39
ucontrol getBlock .CORE_X .CORE_Y :b_type .CORE 0
jump *label40 equal :b_type @vault
print "[salmon]Building at {0}, {0} is not a vault!"
format .CORE_X
format .CORE_Y
printflush message2
set .CORE null
label *label40
label *label35
ucontrol flag .S_UNUSED
jump *label220 equal .CORE null
set .DISCARD_UNIT_MAX_ITEMS 0
label *label20
set .SORTER sorter1
sensor :sorter_type sorter1 @type
op notEqual *tmp65 :sorter_type @sorter
op notEqual *tmp66 :sorter_type @inverted-sorter
op land *tmp67 *tmp65 *tmp66
jump *label44 equal *tmp67 false
label *label227
print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter.\n"
jump *label45 equal .SORTER null
print "Block found: "
print .SORTER
label *label45
printflush message1
set .SORTER sorter1
sensor :sorter_type sorter1 @type
op notEqual *tmp65 :sorter_type @sorter
op notEqual *tmp66 :sorter_type @inverted-sorter
op land *tmp67 *tmp65 *tmp66
jump *label227 notEqual *tmp67 false
label *label44
jump *label47 notEqual :sorter_type @sorter
set .SHOW_REMOTE_LEVEL true
set .SRC .CORE
set .DST .CONTAINER
sensor :src_capacity .CORE @itemCapacity
sensor :dst_capacity .CONTAINER @itemCapacity
op sub *tmp75 100 .EFF_REMOTE_LIMIT
op mul *tmp76 :src_capacity *tmp75
op idiv .LOAD_LEVEL *tmp76 100
op mul *tmp78 :dst_capacity .EFF_LOCAL_LIMIT
op idiv .DROP_LEVEL *tmp78 100
set .LOCAL_MARGIN .DROP_LEVEL
set .REMOTE_MARGIN .LOAD_LEVEL
op mul .LOW_LEVEL_TRIGGER :dst_capacity 0.09999999999999998
set .HIGH_LEVEL_TRIGGER :dst_capacity
set .FLOW_CORR_SIGN 1
set .SRC_REMOTE_WAIT 1
set .DST_REMOTE_WAIT 0
select *tmp83 equal LINK_ID 0 " from core" " from vault #"
set .DIRECTION *tmp83
jump *label48 always
label *label47
op greaterThan .SHOW_REMOTE_LEVEL LINK_ID 0
set .SRC .CONTAINER
set .DST .CORE
sensor :src_capacity .CONTAINER @itemCapacity
sensor :dst_capacity .CORE @itemCapacity
op sub *tmp87 100 .EFF_LOCAL_LIMIT
op mul *tmp88 :src_capacity *tmp87
op idiv .LOAD_LEVEL *tmp88 100
op mul *tmp90 :dst_capacity .EFF_REMOTE_LIMIT
op idiv *tmp91 *tmp90 100
op equal *tmp92 LINK_ID 0
op mul *tmp93 *tmp92 .UNIT_CAPACITY
op add .DROP_LEVEL *tmp91 *tmp93
set .LOCAL_MARGIN .LOAD_LEVEL
set .REMOTE_MARGIN .DROP_LEVEL
op mul .HIGH_LEVEL_TRIGGER :src_capacity 0.9
set .LOW_LEVEL_TRIGGER 0
set .FLOW_CORR_SIGN -1
set .SRC_REMOTE_WAIT 0
set .DST_REMOTE_WAIT 1
select *tmp97 equal LINK_ID 0 " to core" " to vault #"
set .DIRECTION *tmp97
label *label48
select *tmp99 equal LINK_ID 0 "" LINK_ID
op sub *tmp100 :src_capacity .LOAD_LEVEL
op min .LOAD_PACK .UNIT_CAPACITY *tmp100
op min .DROP_PACK .UNIT_CAPACITY .DROP_LEVEL
sensor .SRC_X .SRC @x
sensor .SRC_Y .SRC @y
sensor .DST_X .DST @x
sensor .DST_Y .DST @y
op sub *tmp107 .DST_X .SRC_X
op sub *tmp108 .DST_Y .SRC_Y
op len *tmp109 *tmp107 *tmp108
op sub *tmp110 *tmp109 6
op sub .DISTANCE *tmp109 14
op max *tmp112 .DISTANCE 10
op mul *tmp113 2 *tmp112
op div .TRAVEL_TIME *tmp113 .SPEED
op div .DISTANCE *tmp110 100
jump *label55 notEqual .DROP_TARGET null
set .DROP_TARGET .CORE
set .DROP_X .CORE_X
set .DROP_Y .CORE_Y
sensor *tmp122 .CONTAINER @x
select *tmp124 lessThan *tmp122 .CORE_X 15 -15
op add .PARK_X .CORE_X *tmp124
sensor *tmp126 .CONTAINER @y
select *tmp128 lessThan *tmp126 .CORE_Y 15 -15
op add .PARK_Y .CORE_Y *tmp128
op equal *tmp130 LINK_ID 0
op mul .PARK_ITEM_LIMIT *tmp130 .UNIT_CAPACITY
jump *label56 always
label *label55
sensor .DROP_X .DROP_TARGET @x
sensor .DROP_Y .DROP_TARGET @y
set .PARK_X .DROP_X
set .PARK_Y .DROP_Y
set .PARK_ITEM_LIMIT 0
label *label56
set .TRANSFER_START @tick
op sub .LOOP_START @tick 60
set .LAST_ITEM @mono
op add .MESSAGE_TIMEOUT @tick 600
set .WAIT_LIMIT 30000
set :items_in_transit 0
set :items_per_min_unit "--"
set :items_per_min "-- "
set :turnaround_str "--"
set :elapsed_str "--"
set :wait_time_str 0
set :wait_time 0
set :transfers 0
set :transferred 0
set :total_flow_2 0
set :total_flow_1 0
set :remote_wait_time 0
set :min_level 0
set :max_level 0
set :loop_time_ms 0
set :last_level 0
jump *label61 equal AUTO_ALLOCATION false
set .CORR_SIGN "[]([green]+"
set :corr_per_min 0
set .SPEED_UNIT_TXT "[])/min"
set .AUTO_ALLOCATION_TXT "\n=== [gold]Gathering statistics[] ==="
jump *label62 always
label *label61
set .CORR_SIGN "[]"
set :corr_per_min ""
set .SPEED_UNIT_TXT "/min"
set .AUTO_ALLOCATION_TXT ""
label *label62
label *label63
ubind UNIT
jump *label68 notEqual @unit null
label *label221
print "No unit of type {0} found."
format UNIT
printflush message1
ubind UNIT
jump *label221 equal @unit null
label *label68
sensor *tmp139 switch1 @enabled
jump *label69 equal *tmp139 false
control enabled switch1 false
set .EFF_AUTO_ALLOCATION false
set .AUTO_ALLOCATION_TXT ""
op add *tmp142 .TARGET 1
op min .TARGET *tmp142 MAX_UNITS
set .CORR_SIGN "[]"
set :corr_per_min ""
set .SPEED_UNIT_TXT "/min"
set .WAIT_LIMIT 30000
label *label69
sensor *tmp144 switch2 @enabled
jump *label71 equal *tmp144 false
control enabled switch2 false
jump *label73 greaterThanEq .TARGET 1
set .EFF_AUTO_ALLOCATION true
set .TARGET 1
set .DEC_LIMIT 0
set .INC_LIMIT 0
set .CORR_SIGN "[]([green]+"
set :corr_per_min 0
set .SPEED_UNIT_TXT "[])/min"
jump *label74 always
label *label73
set .EFF_AUTO_ALLOCATION false
op sub *tmp149 .TARGET 1
op max .TARGET *tmp149 0
set .CORR_SIGN "[]"
set :corr_per_min ""
set .SPEED_UNIT_TXT "/min"
select *tmp152 equal .TARGET 0 "\n=== [salmon]Transport deactivated[] ===" ""
set .AUTO_ALLOCATION_TXT *tmp152
label *label74
set .WAIT_LIMIT 30000
label *label71
sensor *tmp153 :first_unit @dead
op strictEqual :alive *tmp153 0
op strictEqual *tmp155 @unit :first_unit
jump *label77 greaterThan :alive *tmp155
jump *label79 notEqual :active 0
print "\n[salmon]No active units.[]"
label *label79
printflush message2
set .STATE_LIMIT 6
sensor .ITEM .SORTER @config
jump *label81 equal .ITEM .LAST_ITEM
jump *label85 notEqual .ITEM null
label *label222
print "[salmon]No item type selected for transport.[]"
printflush message1
sensor .ITEM .SORTER @config
jump *label222 equal .ITEM null
label *label85
set .LAST_ITEM .ITEM
# "Function: def itemTypeToIcon(in itemType)"
sensor *tmp376 .ITEM @id
jump *label229 greaterThanEq *tmp376 16
multijump *label232 *tmp376 0
multilabel *label232
jump *label230 always
multilabel *label233
jump *label97 always
multilabel *label234
jump *label99 always
multilabel *label235
jump *label95 always
multilabel *label236
jump *label107 always
multilabel *label237
jump *label91 always
multilabel *label238
jump *label119 always
multilabel *label239
jump *label117 always
multilabel *label240
jump *label109 always
multilabel *label241
jump *label111 always
multilabel *label242
jump *label103 always
multilabel *label243
jump *label101 always
multilabel *label244
jump *label115 always
multilabel *label245
jump *label113 always
multilabel *label246
jump *label89 always
multilabel *label247
set *tmp166 "[]"
jump *label87 always
label *label89
set *tmp166 "[]"
jump *label87 always
label *label91
set *tmp166 "[]"
jump *label87 always
label *label230
jump *label229 strictEqual *tmp376 null
set *tmp166 "[]"
jump *label87 always
label *label95
set *tmp166 "[]"
jump *label87 always
label *label97
set *tmp166 "[]"
jump *label87 always
label *label99
set *tmp166 "[]"
jump *label87 always
label *label101
set *tmp166 "[]"
jump *label87 always
label *label103
set *tmp166 "[]"
jump *label87 always
label *label107
set *tmp166 "[]"
jump *label87 always
label *label109
set *tmp166 "[]"
jump *label87 always
label *label111
set *tmp166 "[]"
jump *label87 always
label *label113
set *tmp166 "[]"
jump *label87 always
label *label115
set *tmp166 "[]"
jump *label87 always
label *label117
set *tmp166 "[]"
jump *label87 always
label *label119
set *tmp166 "[]"
jump *label87 always
label *label229
set *tmp166 null
label *label87
set .ITEM_ICON *tmp166
set .STATE_LIMIT 1
sensor :last_level .CONTAINER .ITEM
set :min_level 999999
set :max_level 0
label *label81
sensor :container_items .CONTAINER .ITEM
op min :min_level :min_level :container_items
op max :max_level :max_level :container_items
op sub :loop_time @tick .LOOP_START
set .LOOP_START @tick
op mul *tmp174 :loop_time 100
op idiv :loop_time_ms *tmp174 6
op greaterThanEq *tmp176 :transfers :active
op greaterThan *tmp177 :wait_time .WAIT_LIMIT
op or *tmp178 *tmp176 *tmp177
jump *label120 equal *tmp178 false
op div *tmp180 :wait_time 100
op ceil *tmp181 *tmp180
op div :wait_time_str *tmp181 10
op sub :elapsed_ticks @tick .TRANSFER_START
set .TRANSFER_START @tick
op div :elapsed_ms :elapsed_ticks 0.06
op idiv *tmp186 :elapsed_ms 100
op div :elapsed_str *tmp186 10
op div :items_per_ms :transferred :elapsed_ms
op idiv :items_per_min :items_per_ms 0.000016666666666666667
set :transferred 0
set :transfers 0
jump *label122 equal .EFF_AUTO_ALLOCATION false
set .AUTO_ALLOCATION_TXT "\n=== [gold]Unit auto allocation[] ==="
op mul *tmp191 16.666666666666668 :loop_time
op add :turnaround_ms .TRAVEL_TIME *tmp191
op mul .WAIT_LIMIT :turnaround_ms .DEC_OVERALLOCATION
op idiv *tmp194 :turnaround_ms 100
op div :turnaround_str *tmp194 10
op div :items_per_ms_unit .UNIT_CAPACITY :turnaround_ms
op idiv :items_per_min_unit :items_per_ms_unit 0.000016666666666666667
op add *tmp199 :min_level :max_level
op div :this_level *tmp199 2
op sub *tmp201 :last_level :this_level
op mul :corr *tmp201 .FLOW_CORR_SIGN
op div :corr_per_ms :corr :elapsed_ms
set :last_level :this_level
op add :total_flow_per_ms :items_per_ms :corr_per_ms
op idiv :corr_per_min :corr_per_ms 0.000016666666666666667
set .CORR_SIGN "[]([green]"
select .CORR_SIGN greaterThanEq :corr_per_min 0 "[]([green]+" "[]([green]"
set .SPEED_UNIT_TXT "[])/min"
jump *label126 equal :alive false
op lessThan *tmp210 :min_level .LOW_LEVEL_TRIGGER
op greaterThan *tmp211 :max_level .HIGH_LEVEL_TRIGGER
op or :trigger *tmp210 *tmp211
op equal *tmp213 :wait_time 0
op greaterThan *tmp214 :trigger :remote_wait_time
op or *tmp215 *tmp213 *tmp214
jump *label128 equal *tmp215 false
jump *label130 equal STABILIZATION false
set :total_flow_3 :total_flow_2
set :total_flow_2 :total_flow_1
set :total_flow_1 :total_flow_per_ms
op add *tmp218 :total_flow_3 :total_flow_2
op add *tmp219 *tmp218 :total_flow_per_ms
op div :total_flow_per_ms *tmp219 3
label *label130
op div *tmp221 :total_flow_per_ms :items_per_ms_unit
op add *tmp222 *tmp221 OVERALLOCATION_LOW
op ceil :new_target *tmp222
op mul :level_boost 2 :trigger
op add *tmp225 :new_target :level_boost
op min :new_target *tmp225 MAX_UNITS
op sub *tmp227 :new_target :active
op max *tmp228 *tmp227 0
op min :new_change *tmp228 .INC_LIMIT
set .INC_LIMIT 6
op lessThanEq *tmp230 :new_change 0
op mul .DEC_LIMIT *tmp230 -1
jump *label129 always
label *label128
op idiv *tmp232 :wait_time .WAIT_LIMIT
op mul *tmp233 -1 *tmp232
op max :new_change *tmp233 .DEC_LIMIT
op greaterThanEq *tmp235 :new_change 0
op mul .INC_LIMIT *tmp235 6
set .DEC_LIMIT -1
label *label129
op add *tmp237 :active :new_change
op max .TARGET *tmp237 1
jump *label127 always
label *label126
set .INC_LIMIT 0
set .DEC_LIMIT 0
label *label127
set :min_level 999999
set :max_level 0
label *label122
set :wait_time 0
set :remote_wait_time 0
select .MESSAGE greaterThanEq @tick .MESSAGE_TIMEOUT "" .MESSAGE
label *label120
print "Moving [green]{0}[]"
format .ITEM
print .DIRECTION
print *tmp99
print .AUTO_ALLOCATION_TXT
jump *label134 lessThanEq .TARGET 0
jump *label136 lessThan :active .TARGET
print "\nUsing [green]{0}/{0}[] units ({0}) [gold]+"
format :active
format .TARGET
format UNIT
print :items_in_transit
jump *label137 always
label *label136
print "\nUsing [salmon]{0}/{0}[] units ({0}) [gold]+"
format :active
format .TARGET
format UNIT
print :items_in_transit
label *label137
jump *label138 lessThanEq .CHANGE 0
print "\n[][salmon]Cannot acquire additional units![]"
label *label138
label *label134
print "\n[]Local items: [gold]"
print :container_items
jump *label140 greaterThanEq .EFF_LOCAL_LIMIT 100
print "[] (limit [orange]{0}[])"
format .LOCAL_MARGIN
label *label140
jump *label142 equal .SHOW_REMOTE_LEVEL false
sensor :remote_level .CORE .ITEM
print "\n[]Remote items: [gold]"
print :remote_level
jump *label144 greaterThanEq .EFF_REMOTE_LIMIT 100
print "[] (limit [orange]{0}[])"
format .REMOTE_MARGIN
label *label144
label *label142
jump *label146 lessThanEq .TARGET 0
print "\n[]Speed: [green]"
print :items_per_min
print .CORR_SIGN
print :corr_per_min
print .SPEED_UNIT_TXT
jump *label148 equal .EFF_AUTO_ALLOCATION false
print "\nUnit throughput: [green]{0}[]/min\nMin/last round: [green]{0}[]/[green]{0}[] s"
format :items_per_min_unit
format :turnaround_str
format :elapsed_str
jump *label149 always
label *label148
print "\nLast round: [green]{0}[] s"
format :elapsed_str
label *label149
print "\nTotal wait time: [green]{0}[] s"
format :wait_time_str
label *label146
print "\n[lightgray]Loop: {0} ms"
format :loop_time_ms
printflush message1
op sub .CHANGE .TARGET :active
set :active 0
set :first_unit @unit
set :items_in_transit 0
print "Unit status:"
sensor *tmp258 .SRC @dead
jump *label65 notEqual *tmp258 0
sensor *tmp261 .DST @dead
jump *label65 notEqual *tmp261 0
sensor *tmp264 .SORTER @dead
jump *label65 notEqual *tmp264 0
getlink *tmp267 .CONTAINER_INDEX
jump *label65 notEqual .CONTAINER *tmp267
label *label77
jump *label158 lessThanEq .CHANGE 0
sensor *tmp272 @unit @controlled
jump *label160 notEqual *tmp272 0
op sub .CHANGE .CHANGE 1
ucontrol flag 1
label *label160
label *label158
sensor *tmp275 @unit @controller
jump *label63 notEqual *tmp275 @this
sensor :state @unit @flag
jump *label63 equal :state .S_UNUSED
op max *tmp281 :state 1
op min :state *tmp281 .STATE_LIMIT
jump *label166 greaterThanEq .CHANGE 0
jump *label168 equal :state 6
sensor *tmp287 @unit @totalItems
jump *label170 greaterThan *tmp287 .DISCARD_UNIT_MAX_ITEMS
op add .CHANGE .CHANGE 1
set :state 6
label *label170
label *label168
label *label166
jump *label172 notEqual :state 1
sensor *tmp292 @unit @totalItems
jump *label174 notEqual *tmp292 0
set :state 2
jump *label175 always
label *label174
sensor *tmp295 @unit @firstItem
jump *label176 notEqual *tmp295 .ITEM
set :state 4
jump *label177 always
label *label176
ucontrol approach .DROP_X .DROP_Y 6
ucontrol within .DROP_X .DROP_Y 8 *tmp298
jump *label178 equal *tmp298 false
ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
label *label178
print "[]\nUnloading previous items: [green]"
label *label177
label *label175
label *label172
jump *label180 notEqual :state 2
ucontrol approach .SRC_X .SRC_Y 6
ucontrol within .SRC_X .SRC_Y 8 *tmp302
jump *label182 equal *tmp302 false
set :state 3
jump *label183 always
label *label182
sensor *tmp304 @unit @x
op sub *tmp305 .SRC_X *tmp304
sensor *tmp306 @unit @y
op sub *tmp307 .SRC_Y *tmp306
op len *tmp308 *tmp305 *tmp307
op idiv *tmp309 *tmp308 .SPEED_SEC
op div *tmp310 *tmp309 10
print "[]\n[gold]{0} sec[] to source: [green]"
format *tmp310
label *label183
label *label180
jump *label184 notEqual :state 3
sensor *tmp313 .SRC .ITEM
op sub :max_load *tmp313 .LOAD_LEVEL
jump *label186 lessThan :max_load .LOAD_PACK
ucontrol itemTake .SRC .ITEM :max_load
label *label186
sensor *tmp317 @unit @totalItems
jump *label188 lessThan *tmp317 .UNIT_CAPACITY
set :state 4
jump *label189 always
label *label188
print "[]\nWaiting at source: [green]"
ucontrol approach .SRC_X .SRC_Y 6
op add :wait_time :wait_time :loop_time_ms
op mul *tmp320 :loop_time_ms .SRC_REMOTE_WAIT
op add :remote_wait_time :remote_wait_time *tmp320
label *label189
label *label184
jump *label190 notEqual :state 4
ucontrol approach .DST_X .DST_Y 6
ucontrol within .DST_X .DST_Y 8 *tmp323
jump *label192 equal *tmp323 false
sensor *tmp325 @unit @totalItems
op add :transferred :transferred *tmp325
op add :transfers :transfers 1
set :state 5
jump *label193 always
label *label192
sensor *tmp326 @unit @x
op sub *tmp327 .DST_X *tmp326
sensor *tmp328 @unit @y
op sub *tmp329 .DST_Y *tmp328
op len *tmp330 *tmp327 *tmp329
op idiv *tmp331 *tmp330 .SPEED_SEC
op div *tmp332 *tmp331 10
print "[]\n[gold]{0} sec[] to destination: [green]"
format *tmp332
label *label193
label *label190
jump *label194 notEqual :state 5
sensor *tmp335 .DST .ITEM
op sub :max_drop .DROP_LEVEL *tmp335
jump *label196 lessThan :max_drop .DROP_PACK
ucontrol itemDrop .DST :max_drop
label *label196
sensor *tmp339 @unit @totalItems
jump *label198 greaterThan *tmp339 0
set :state 2
ucontrol approach .SRC_X .SRC_Y 6
sensor *tmp343 @unit @x
op sub *tmp344 .SRC_X *tmp343
sensor *tmp345 @unit @y
op sub *tmp346 .SRC_Y *tmp345
op len *tmp347 *tmp344 *tmp346
op idiv *tmp348 *tmp347 .SPEED_SEC
op div *tmp349 *tmp348 10
print "[]\n[gold]{0} sec[] to source: [green]"
format *tmp349
jump *label199 always
label *label198
print "[]\nWaiting at destination: [green]"
ucontrol approach .DST_X .DST_Y 6
op add :wait_time :wait_time :loop_time_ms
op mul *tmp350 :loop_time_ms .DST_REMOTE_WAIT
op add :remote_wait_time :remote_wait_time *tmp350
label *label199
label *label194
sensor :items @unit @totalItems
op add :items_in_transit :items_in_transit :items
jump *label202 notEqual :state 6
print "[]\nParking: [green]"
ucontrol approach .DROP_X .DROP_Y 6
ucontrol within .DROP_X .DROP_Y 8 *tmp354
jump *label203 equal *tmp354 false
ucontrol itemDrop .DROP_TARGET .UNIT_CAPACITY
sensor :items @unit @totalItems
jump *label203 greaterThan :items .PARK_ITEM_LIMIT
ucontrol move .PARK_X .PARK_Y
set :state .S_UNUSED
jump *label203 always
label *label202
op add :active :active 1
label *label203
print :items
print .ITEM_ICON
ucontrol flag :state
jump *label63 always
label *label65
sensor *tmp359 .SORTER @dead
op strictEqual *tmp361 *tmp359 0
jump *label210 notEqual *tmp361 false
label *label226
print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
printflush message1
printflush message2
set .SORTER sorter1
sensor *tmp359 sorter1 @dead
op strictEqual *tmp361 *tmp359 0
jump *label226 equal *tmp361 false
label *label210
sensor *tmp362 .SRC @dead
op strictEqual *tmp364 *tmp362 0
op equal *tmp363 *tmp364 false
sensor *tmp365 .DST @dead
op strictEqual *tmp367 *tmp365 0
op equal *tmp366 *tmp367 false
op or *tmp368 *tmp363 *tmp366
jump *label211 equal *tmp368 false
sensor *tmp370 switch1 @enabled
sensor *tmp371 switch2 @enabled
op or *tmp372 *tmp370 *tmp371
jump *label215 notEqual *tmp372 false
label *label228
print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
printflush message1
printflush message2
sensor *tmp370 switch1 @enabled
sensor *tmp371 switch2 @enabled
op or *tmp372 *tmp370 *tmp371
jump *label228 equal *tmp372 false
label *label215
label *label211
control enabled switch1 false
control enabled switch2 false
