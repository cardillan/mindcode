   645 instructions before optimizations.
    11 instructions eliminated by Temp Variables Elimination.
     3 instructions eliminated by Case Expression Optimization.
    64 instructions eliminated by Dead Code Elimination (6 iterations).
     4 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
     9 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
   278 instructions eliminated by Data Flow Optimization (5 passes, 20 iterations).
     6 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   638 instructions added by Loop Unrolling (8 iterations).
     2 loops unrolled by Loop Unrolling.
     2 instructions added by Case Switching (8 iterations).
     2 case expressions converted to switched jumps Case Switching.
    28 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    51 instructions updated by JumpThreading.
   251 instructions eliminated by Unreachable Code Elimination (2 iterations).
    14 instructions eliminated by Print Merging.
   595 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 630):
    Replicate loop condition at line 58:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 71:5                           cost    81, benefit     1575.0, efficiency       19.4
    Unroll loop at line 152:5                                    cost   521, benefit   156250.0, efficiency      299.9
  * Convert case at line 213:5                                   cost     1, benefit    23633.8, efficiency    23633.8 (+1 instructions)
    Convert case at line 165:5                                   cost     1, benefit    23633.8, efficiency    23633.8

Pass 1: speed optimization selection (cost limit 629):
    Replicate loop condition at line 58:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 71:5                           cost    81, benefit     1575.0, efficiency       19.4
    Unroll loop at line 152:5                                    cost   525, benefit   156250.0, efficiency      297.6
  * Convert case at line 165:5                                   cost     1, benefit    23633.8, efficiency    23633.8 (+1 instructions)

Pass 1: speed optimization selection (cost limit 628):
    Replicate loop condition at line 58:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 71:5                           cost    81, benefit     1575.0, efficiency       19.4
  * Unroll loop at line 152:5                                    cost   529, benefit   156250.0, efficiency      295.4 (+527 instructions)

Pass 1: speed optimization selection (cost limit 101):
    Replicate loop condition at line 58:1                        cost     7, benefit       25.0, efficiency        3.6
  * Unroll iteration loop at line 71:5                           cost    81, benefit     1575.0, efficiency       19.4 (-12 instructions)

Pass 1: speed optimization selection (cost limit 113):
  * Replicate loop condition at line 58:1                        cost     7, benefit       25.0, efficiency        3.6 (+7 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-3 instructions):
 
    18 print :block
    19 print "\n"
    20 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   21 jump *label8 equal *tmp5 @message
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
    25 set *tmp4 .MESSAGE
    26 jump *label6 always
    27 label *label7
-    * jump *label10 equal *tmp6 @memory-bank
-    * jump *label10 equal *tmp6 @memory-cell
+   28 jump *label10 equal *tmp5 @memory-bank
+   29 jump *label10 equal *tmp5 @memory-cell
    30 jump *label9 always
    31 label *label10
    32 set .MEMORY :block
    33 set *tmp4 .MEMORY
    34 jump *label6 always
    35 label *label9
-    * jump *label12 equal *tmp6 @vault
-    * jump *label12 equal *tmp6 @container
-    * jump *label12 equal *tmp6 @core-shard
-    * jump *label12 equal *tmp6 @core-foundation
-    * jump *label12 equal *tmp6 @core-nucleus
+   36 jump *label12 equal *tmp5 @vault
+   37 jump *label12 equal *tmp5 @container
+   38 jump *label12 equal *tmp5 @core-shard
+   39 jump *label12 equal *tmp5 @core-foundation
+   40 jump *label12 equal *tmp5 @core-nucleus
    41 jump *label11 always
    42 label *label12
    43 set .CONTAINER :block
    44 set *tmp4 .CONTAINER
    45 jump *label6 always
    46 label *label11
-    * jump *label14 equal *tmp6 @large-logic-display
+   47 jump *label14 equal *tmp5 @large-logic-display
    48 jump *label13 always
    49 label *label14
    50 set .DISPLAY :block
 
   356 set :drawDigitSlanted:x :displayItem:x
   357 set :drawDigitSlanted:y :displayItem:y
   358 set :drawDigitSlanted:digit *tmp53
-    * set *tmp56 :drawDigitSlanted:digit
-    * jump *label88 equal *tmp56 0
+  359 jump *label88 equal :drawDigitSlanted:digit 0
   360 jump *label87 always
   361 label *label88
   362 op sub *tmp57 :drawDigitSlanted:x 2
 
   367 set *tmp55 null
   368 jump *label86 always
   369 label *label87
-    * jump *label90 equal *tmp56 1
+  370 jump *label90 equal :drawDigitSlanted:digit 1
   371 jump *label89 always
   372 label *label90
   373 op add *tmp61 :drawDigitSlanted:x 7
 
   379 set *tmp55 null
   380 jump *label86 always
   381 label *label89
-    * jump *label92 equal *tmp56 2
+  382 jump *label92 equal :drawDigitSlanted:digit 2
   383 jump *label91 always
   384 label *label92
   385 op add *tmp66 :drawDigitSlanted:x 7
 
   400 set *tmp55 null
   401 jump *label86 always
   402 label *label91
-    * jump *label94 equal *tmp56 3
+  403 jump *label94 equal :drawDigitSlanted:digit 3
   404 jump *label93 always
   405 label *label94
   406 op add *tmp77 :drawDigitSlanted:x 7
 
   421 set *tmp55 null
   422 jump *label86 always
   423 label *label93
-    * jump *label96 equal *tmp56 4
+  424 jump *label96 equal :drawDigitSlanted:digit 4
   425 jump *label95 always
   426 label *label96
   427 op add *tmp88 :drawDigitSlanted:x 7
 
   439 set *tmp55 null
   440 jump *label86 always
   441 label *label95
-    * jump *label98 equal *tmp56 5
+  442 jump *label98 equal :drawDigitSlanted:digit 5
   443 jump *label97 always
   444 label *label98
   445 op add *tmp97 :drawDigitSlanted:x 7
 
   459 set *tmp55 null
   460 jump *label86 always
   461 label *label97
-    * jump *label100 equal *tmp56 6
+  462 jump *label100 equal :drawDigitSlanted:digit 6
   463 jump *label99 always
   464 label *label100
   465 op sub *tmp107 :drawDigitSlanted:x 2
 
   474 set *tmp55 null
   475 jump *label86 always
   476 label *label99
-    * jump *label102 equal *tmp56 7
+  477 jump *label102 equal :drawDigitSlanted:digit 7
   478 jump *label101 always
   479 label *label102
   480 op add *tmp114 :drawDigitSlanted:x 7
 
   487 set *tmp55 null
   488 jump *label86 always
   489 label *label101
-    * jump *label104 equal *tmp56 8
+  490 jump *label104 equal :drawDigitSlanted:digit 8
   491 jump *label103 always
   492 label *label104
   493 op sub *tmp119 :drawDigitSlanted:x 2
 
   502 set *tmp55 null
   503 jump *label86 always
   504 label *label103
-    * jump *label106 equal *tmp56 9
+  505 jump *label106 equal :drawDigitSlanted:digit 9
   506 jump *label105 always
   507 label *label106
   508 op sub *tmp126 :drawDigitSlanted:x 2
 
   529 set :drawDigit:x :displayItem:x
   530 set :drawDigit:y :displayItem:y
   531 set :drawDigit:digit *tmp133
-    * set *tmp136 :drawDigit:digit
-    * jump *label110 equal *tmp136 0
+  532 jump *label110 equal :drawDigit:digit 0
   533 jump *label109 always
   534 label *label110
   535 op sub *tmp137 :drawDigit:x 2
 
   540 set *tmp135 null
   541 jump *label108 always
   542 label *label109
-    * jump *label112 equal *tmp136 1
+  543 jump *label112 equal :drawDigit:digit 1
   544 jump *label111 always
   545 label *label112
   546 op add *tmp141 :drawDigit:x 7
 
   552 set *tmp135 null
   553 jump *label108 always
   554 label *label111
-    * jump *label114 equal *tmp136 2
+  555 jump *label114 equal :drawDigit:digit 2
   556 jump *label113 always
   557 label *label114
   558 op add *tmp146 :drawDigit:x 7
 
   575 set *tmp135 null
   576 jump *label108 always
   577 label *label113
-    * jump *label116 equal *tmp136 3
+  578 jump *label116 equal :drawDigit:digit 3
   579 jump *label115 always
   580 label *label116
   581 op add *tmp158 :drawDigit:x 7
 
   595 set *tmp135 null
   596 jump *label108 always
   597 label *label115
-    * jump *label118 equal *tmp136 4
+  598 jump *label118 equal :drawDigit:digit 4
   599 jump *label117 always
   600 label *label118
   601 op add *tmp168 :drawDigit:x 7
 
   612 set *tmp135 null
   613 jump *label108 always
   614 label *label117
-    * jump *label120 equal *tmp136 5
+  615 jump *label120 equal :drawDigit:digit 5
   616 jump *label119 always
   617 label *label120
   618 op add *tmp176 :drawDigit:x 7
 
   635 set *tmp135 null
   636 jump *label108 always
   637 label *label119
-    * jump *label122 equal *tmp136 6
+  638 jump *label122 equal :drawDigit:digit 6
   639 jump *label121 always
   640 label *label122
   641 op add *tmp188 :drawDigit:y 12
 
   657 set *tmp135 null
   658 jump *label108 always
   659 label *label121
-    * jump *label124 equal *tmp136 7
+  660 jump *label124 equal :drawDigit:digit 7
   661 jump *label123 always
   662 label *label124
   663 op add *tmp199 :drawDigit:x 7
 
   674 set *tmp135 null
   675 jump *label108 always
   676 label *label123
-    * jump *label126 equal *tmp136 8
+  677 jump *label126 equal :drawDigit:digit 8
   678 jump *label125 always
   679 label *label126
   680 op sub *tmp208 :drawDigit:x 2
 
   689 set *tmp135 null
   690 jump *label108 always
   691 label *label125
-    * jump *label128 equal *tmp136 9
+  692 jump *label128 equal :drawDigit:digit 9
   693 jump *label127 always
   694 label *label128
   695 op add *tmp215 :drawDigit:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-23 instructions):
 
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    25 jump *label6 always
    26 label *label7
    27 jump *label10 equal *tmp5 @memory-bank
 
    29 jump *label9 always
    30 label *label10
    31 set .MEMORY :block
-    * set *tmp4 .MEMORY
    32 jump *label6 always
    33 label *label9
    34 jump *label12 equal *tmp5 @vault
 
    39 jump *label11 always
    40 label *label12
    41 set .CONTAINER :block
-    * set *tmp4 .CONTAINER
    42 jump *label6 always
    43 label *label11
    44 jump *label14 equal *tmp5 @large-logic-display
    45 jump *label13 always
    46 label *label14
    47 set .DISPLAY :block
-    * set *tmp4 .DISPLAY
    48 jump *label6 always
    49 label *label13
-    * set *tmp4 null
    50 label *label6
    51 label *label4
    52 jump *label3 always
 
    69 jump *label15 equal *tmp9 false
    70 print "No container or display."
    71 print "\n"
-    * set *tmp10 "No container or display."
    72 jump *label16 always
    73 label *label15
-    * set *tmp10 null
    74 label *label16
    75 printflush .MESSAGE
    76 label *label1
 
   106 draw rect 93 0 16 176
   107 set *tmp23 null
   108 label *label22
-    * set *tmp22 *tmp23
   109 label *label20
   110 # "Function: inline def eraseImages(in first_column)"
   111 set :eraseImages.1:first_column false
 
   118 draw rect 93 0 16 176
   119 set *tmp25 null
   120 label *label25
-    * set *tmp24 *tmp25
   121 label *label23
   122 draw color 255 255 255 255
   123 set :index 0
 
   196 set :y 152
   197 set :x 93
   198 draw color 255 255 255 255
-    * set *tmp32 null
   199 jump *label46 always
   200 label *label45
-    * set *tmp32 null
   201 label *label46
   202 label *label27
   203 multijump *tmp26 0 0 (m:marker0)
 
   217 draw rect 109 0 176 176
   218 set *tmp34 null
   219 label *label49
-    * set *tmp33 *tmp34
   220 label *label47
   221 set :index 0
   222 set :item @sand
 
   308 label *label75
   309 set *tmp41 *tmp43
   310 label *label73
-    * set *tmp39 *tmp41
   311 jump *label71 always
   312 label *label70
   313 set *tmp44 :displayItem:index
 
   332 label *label79
   333 set *tmp49 *tmp51
   334 label *label77
-    * set *tmp39 *tmp49
   335 label *label71
   336 set :displayItem:i 0
   337 label *label80
 
   507 label *label86
   508 set *tmp54 *tmp55
   509 label *label85
-    * set *tmp52 *tmp54
   510 jump *label84 always
   511 label *label83
   512 op mod *tmp133 :displayItem:amount 10
 
   701 label *label108
   702 set *tmp134 *tmp135
   703 label *label107
-    * set *tmp52 *tmp134
   704 label *label84
   705 op sub :displayItem:x :displayItem:x 11
   706 op idiv :displayItem:amount :displayItem:amount 10
   707 op equal *tmp227 :displayItem:amount 0
   708 jump *label129 equal *tmp227 false
   709 jump *label82 always
-    * set *tmp228 null
   710 jump *label130 always
   711 label *label129
-    * set *tmp228 null
   712 label *label130
   713 label *label81
   714 op add :displayItem:i :displayItem:i 1
   715 jump *label80 always
   716 label *label82
-    * set *tmp36 null
   717 label *label69
   718 op add :index :index 1
   719 op sub :y :y 20
 
   721 jump *label131 equal *tmp229 false
   722 jump *label133 equal true false
   723 drawflush display1
-    * set *tmp231 null
   724 jump *label134 always
   725 label *label133
-    * set *tmp231 null
   726 label *label134
   727 set :y 152
   728 set :x 157
 
   739 label *label137
   740 set *tmp232 *tmp233
   741 label *label135
-    * set *tmp230 *tmp232
   742 jump *label132 always
   743 label *label131
-    * set *tmp230 null
   744 label *label132
   745 label *label51
   746 multijump *tmp35 0 0 (m:marker1)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-13 instructions):
 
   100 draw color 0 0 80 255
   101 jump *label21 equal :eraseImages:first_column false
   102 draw rect 0 0 23 176
-    * set *tmp23 null
   103 jump *label22 always
   104 label *label21
   105 draw rect 93 0 16 176
-    * set *tmp23 null
   106 label *label22
   107 label *label20
   108 # "Function: inline def eraseImages(in first_column)"
 
   110 draw color 0 0 80 255
   111 jump *label24 equal :eraseImages.1:first_column false
   112 draw rect 0 0 23 176
-    * set *tmp25 null
   113 jump *label25 always
   114 label *label24
   115 draw rect 93 0 16 176
-    * set *tmp25 null
   116 label *label25
   117 label *label23
   118 draw color 255 255 255 255
 
   207 draw color 0 0 80 255
   208 jump *label48 equal :eraseNumbers:first_column false
   209 draw rect 23 0 70 176
-    * set *tmp34 null
   210 jump *label49 always
   211 label *label48
   212 draw rect 109 0 176 176
-    * set *tmp34 null
   213 label *label49
   214 label *label47
   215 set :index 0
 
   288 op equal *tmp40 :displayItem:amount .CAPACITY
   289 jump *label72 equal *tmp40 false
   290 draw color 0 255 0 255
-    * set *tmp41 null
   291 jump *label73 always
   292 label *label72
   293 op greaterThan *tmp42 :displayItem:amount .LIMIT
 
   299 draw color 255 80 80 255
   300 set *tmp43 null
   301 label *label75
-    * set *tmp41 *tmp43
   302 label *label73
   303 jump *label71 always
   304 label *label70
 
   310 op equal *tmp48 :displayItem:amount :displayItem:last
   311 jump *label76 equal *tmp48 false
   312 draw color 255 255 0 255
-    * set *tmp49 null
   313 jump *label77 always
   314 label *label76
   315 op lessThan *tmp50 :displayItem:amount :displayItem:last
 
   321 draw color 0 255 0 255
   322 set *tmp51 null
   323 label *label79
-    * set *tmp49 *tmp51
   324 label *label77
   325 label *label71
   326 set :displayItem:i 0
 
   495 label *label105
   496 set *tmp55 null
   497 label *label86
-    * set *tmp54 *tmp55
   498 label *label85
   499 jump *label84 always
   500 label *label83
 
   688 label *label127
   689 set *tmp135 null
   690 label *label108
-    * set *tmp134 *tmp135
   691 label *label107
   692 label *label84
   693 op sub :displayItem:x :displayItem:x 11
 
   725 draw rect 109 0 176 176
   726 set *tmp233 null
   727 label *label137
-    * set *tmp232 *tmp233
   728 label *label135
   729 jump *label132 always
   730 label *label131

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-28 instructions):
 
   293 op greaterThan *tmp42 :displayItem:amount .LIMIT
   294 jump *label74 equal *tmp42 false
   295 draw color 255 255 0 255
-    * set *tmp43 null
   296 jump *label75 always
   297 label *label74
   298 draw color 255 80 80 255
-    * set *tmp43 null
   299 label *label75
   300 label *label73
   301 jump *label71 always
 
   313 op lessThan *tmp50 :displayItem:amount :displayItem:last
   314 jump *label78 equal *tmp50 false
   315 draw color 255 80 80 255
-    * set *tmp51 null
   316 jump *label79 always
   317 label *label78
   318 draw color 0 255 0 255
-    * set *tmp51 null
   319 label *label79
   320 label *label77
   321 label *label71
 
   336 op sub *tmp59 :drawDigitSlanted:y 2
   337 op add *tmp60 *tmp59 1
   338 draw lineRect *tmp58 *tmp60 9 14
-    * set *tmp55 null
   339 jump *label86 always
   340 label *label87
   341 jump *label90 equal :drawDigitSlanted:digit 1
 
   347 op sub *tmp64 *tmp63 1
   348 op add *tmp65 :drawDigitSlanted:y 12
   349 draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
-    * set *tmp55 null
   350 jump *label86 always
   351 label *label89
   352 jump *label92 equal :drawDigitSlanted:digit 2
 
   367 op add *tmp75 :drawDigitSlanted:x 7
   368 op add *tmp76 :drawDigitSlanted:y 12
   369 draw line *tmp73 *tmp74 *tmp75 *tmp76
-    * set *tmp55 null
   370 jump *label86 always
   371 label *label91
   372 jump *label94 equal :drawDigitSlanted:digit 3
 
   387 op add *tmp86 :drawDigitSlanted:x 7
   388 op add *tmp87 :drawDigitSlanted:y 12
   389 draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
-    * set *tmp55 null
   390 jump *label86 always
   391 label *label93
   392 jump *label96 equal :drawDigitSlanted:digit 4
 
   404 op add *tmp95 :drawDigitSlanted:x 7
   405 op add *tmp96 :drawDigitSlanted:y 12
   406 draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
-    * set *tmp55 null
   407 jump *label86 always
   408 label *label95
   409 jump *label98 equal :drawDigitSlanted:digit 5
 
   423 op add *tmp105 :drawDigitSlanted:x 7
   424 op add *tmp106 :drawDigitSlanted:y 12
   425 draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
-    * set *tmp55 null
   426 jump *label86 always
   427 label *label97
   428 jump *label100 equal :drawDigitSlanted:digit 6
 
   437 op add *tmp112 :drawDigitSlanted:x 7
   438 op add *tmp113 :drawDigitSlanted:y 12
   439 draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
-    * set *tmp55 null
   440 jump *label86 always
   441 label *label99
   442 jump *label102 equal :drawDigitSlanted:digit 7
 
   449 op add *tmp117 :drawDigitSlanted:x 7
   450 op add *tmp118 :drawDigitSlanted:y 12
   451 draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
-    * set *tmp55 null
   452 jump *label86 always
   453 label *label101
   454 jump *label104 equal :drawDigitSlanted:digit 8
 
   463 op add *tmp124 :drawDigitSlanted:x 7
   464 op add *tmp125 :drawDigitSlanted:y 6
   465 draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
-    * set *tmp55 null
   466 jump *label86 always
   467 label *label103
   468 jump *label106 equal :drawDigitSlanted:digit 9
 
   477 op add *tmp131 :drawDigitSlanted:x 7
   478 op add *tmp132 :drawDigitSlanted:y 6
   479 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
-    * set *tmp55 null
   480 jump *label86 always
   481 label *label105
-    * set *tmp55 null
   482 label *label86
   483 label *label85
   484 jump *label84 always
 
   496 op sub *tmp139 :drawDigit:y 2
   497 op add *tmp140 *tmp139 1
   498 draw lineRect *tmp138 *tmp140 9 14
-    * set *tmp135 null
   499 jump *label108 always
   500 label *label109
   501 jump *label112 equal :drawDigit:digit 1
 
   507 op sub *tmp144 *tmp143 1
   508 op add *tmp145 :drawDigit:y 12
   509 draw line *tmp142 :drawDigit:y *tmp144 *tmp145
-    * set *tmp135 null
   510 jump *label108 always
   511 label *label111
   512 jump *label114 equal :drawDigit:digit 2
 
   529 op add *tmp156 :drawDigit:x 7
   530 op add *tmp157 :drawDigit:y 12
   531 draw line :drawDigit:x *tmp155 *tmp156 *tmp157
-    * set *tmp135 null
   532 jump *label108 always
   533 label *label113
   534 jump *label116 equal :drawDigit:digit 3
 
   548 op add *tmp166 :drawDigit:x 7
   549 op add *tmp167 :drawDigit:y 12
   550 draw line :drawDigit:x *tmp165 *tmp166 *tmp167
-    * set *tmp135 null
   551 jump *label108 always
   552 label *label115
   553 jump *label118 equal :drawDigit:digit 4
 
   564 op add *tmp174 :drawDigit:y 6
   565 op add *tmp175 :drawDigit:y 12
   566 draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
-    * set *tmp135 null
   567 jump *label108 always
   568 label *label117
   569 jump *label120 equal :drawDigit:digit 5
 
   586 op add *tmp186 :drawDigit:x 7
   587 op add *tmp187 :drawDigit:y 12
   588 draw line :drawDigit:x *tmp185 *tmp186 *tmp187
-    * set *tmp135 null
   589 jump *label108 always
   590 label *label119
   591 jump *label122 equal :drawDigit:digit 6
 
   607 op add *tmp197 :drawDigit:x 7
   608 op add *tmp198 :drawDigit:y 12
   609 draw line :drawDigit:x *tmp196 *tmp197 *tmp198
-    * set *tmp135 null
   610 jump *label108 always
   611 label *label121
   612 jump *label124 equal :drawDigit:digit 7
 
   623 op sub *tmp206 *tmp205 1
   624 op add *tmp207 :drawDigit:y 12
   625 draw line :drawDigit:x *tmp204 *tmp206 *tmp207
-    * set *tmp135 null
   626 jump *label108 always
   627 label *label123
   628 jump *label126 equal :drawDigit:digit 8
 
   637 op add *tmp213 :drawDigit:x 7
   638 op add *tmp214 :drawDigit:y 6
   639 draw line :drawDigit:x *tmp212 *tmp213 *tmp214
-    * set *tmp135 null
   640 jump *label108 always
   641 label *label125
   642 jump *label128 equal :drawDigit:digit 9
 
   659 op add *tmp225 :drawDigit:x 7
   660 op add *tmp226 :drawDigit:y 12
   661 draw line :drawDigit:x *tmp224 *tmp225 *tmp226
-    * set *tmp135 null
   662 jump *label108 always
   663 label *label127
-    * set *tmp135 null
   664 label *label108
   665 label *label107
   666 label *label84
 
   693 draw color 0 0 80 255
   694 jump *label136 equal :eraseNumbers.1:first_column false
   695 draw rect 23 0 70 176
-    * set *tmp233 null
   696 jump *label137 always
   697 label *label136
   698 draw rect 109 0 176 176
-    * set *tmp233 null
   699 label *label137
   700 label *label135
   701 jump *label132 always

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-11 instructions):
 
     4 label *label0
     5 print "Configuring storage display..."
     6 print "\n"
-    * set *tmp0 @links
-    * set .LINKS *tmp0
+    7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
    10 op greaterThan *tmp1 :n 0
    11 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   12 op sub :n :n 1
+   13 getlink :block :n
    14 print "Found: "
    15 print :block
    16 print "\n"
 
    83 op equal *tmp17 .LINKS @links
    84 op land *tmp18 *tmp16 *tmp17
    85 jump *label19 equal *tmp18 false
-    * set *tmp19 @time
-    * set :start *tmp19
-    * sensor *tmp20 .CONTAINER @itemCapacity
-    * set .CAPACITY *tmp20
-    * op div *tmp21 .CAPACITY 5
-    * set .LIMIT *tmp21
+   86 set :start @time
+   87 sensor .CAPACITY .CONTAINER @itemCapacity
+   88 op div .LIMIT .CAPACITY 5
    89 draw stroke 2
    90 set :x 7
    91 set :y 152
 
   275 set :displayItem:item :item
   276 set :displayItem:x :x
   277 set :displayItem:y :y
-    * sensor *tmp37 .CONTAINER :displayItem:item
-    * set :displayItem:amount *tmp37
+  278 sensor :displayItem:amount .CONTAINER :displayItem:item
   279 op strictEqual *tmp38 .MEMORY null
   280 jump *label70 equal *tmp38 false
   281 op equal *tmp40 :displayItem:amount .CAPACITY
 
   293 label *label73
   294 jump *label71 always
   295 label *label70
-    * set *tmp44 :displayItem:index
-    * read *tmp45 .MEMORY *tmp44
-    * set :displayItem:last *tmp45
-    * set *tmp46 :displayItem:index
-    * write :displayItem:amount .MEMORY *tmp46
+  296 read :displayItem:last .MEMORY :displayItem:index
+  297 write :displayItem:amount .MEMORY :displayItem:index
   298 op equal *tmp48 :displayItem:amount :displayItem:last
   299 jump *label76 equal *tmp48 false
   300 draw color 255 255 0 255
 
   697 label *label52
   698 drawflush display1
   699 op sub *tmp234 @time :start
-    * op floor *tmp235 *tmp234
-    * set :elapsed *tmp235
+  700 op floor :elapsed *tmp234
   701 print "Storage Display"
   702 print "\n"
   703 print "Elapsed: "

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   312 set :displayItem:i 0
   313 label *label80
   314 jump *label82 greaterThanEq :displayItem:i 5
-    * jump *label83 equal false false
+  315 jump *label83 always
   316 op mod *tmp53 :displayItem:amount 10
   317 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   318 set :drawDigitSlanted:x :displayItem:x
 
   671 op sub :y :y 20
   672 op equal *tmp229 :index 8
   673 jump *label131 equal *tmp229 false
-    * jump *label133 equal true false
   674 drawflush display1
   675 jump *label134 always
   676 label *label133

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-24 instructions):
 
    15 print :block
    16 print "\n"
    17 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   18 jump *label7 notEqual *tmp5 @message
    19 label *label8
    20 set .MESSAGE :block
    21 jump *label6 always
    22 label *label7
    23 jump *label10 equal *tmp5 @memory-bank
-    * jump *label10 equal *tmp5 @memory-cell
-    * jump *label9 always
+   24 jump *label9 notEqual *tmp5 @memory-cell
    25 label *label10
    26 set .MEMORY :block
    27 jump *label6 always
 
    30 jump *label12 equal *tmp5 @container
    31 jump *label12 equal *tmp5 @core-shard
    32 jump *label12 equal *tmp5 @core-foundation
-    * jump *label12 equal *tmp5 @core-nucleus
-    * jump *label11 always
+   33 jump *label11 notEqual *tmp5 @core-nucleus
    34 label *label12
    35 set .CONTAINER :block
    36 jump *label6 always
    37 label *label11
-    * jump *label14 equal *tmp5 @large-logic-display
-    * jump *label13 always
+   38 jump *label13 notEqual *tmp5 @large-logic-display
    39 label *label14
    40 set .DISPLAY :block
    41 jump *label6 always
 
   314 set :drawDigitSlanted:x :displayItem:x
   315 set :drawDigitSlanted:y :displayItem:y
   316 set :drawDigitSlanted:digit *tmp53
-    * jump *label88 equal :drawDigitSlanted:digit 0
-    * jump *label87 always
+  317 jump *label87 notEqual :drawDigitSlanted:digit 0
   318 label *label88
   319 op sub *tmp57 :drawDigitSlanted:x 2
   320 op add *tmp58 *tmp57 1
 
   323 draw lineRect *tmp58 *tmp60 9 14
   324 jump *label86 always
   325 label *label87
-    * jump *label90 equal :drawDigitSlanted:digit 1
-    * jump *label89 always
+  326 jump *label89 notEqual :drawDigitSlanted:digit 1
   327 label *label90
   328 op add *tmp61 :drawDigitSlanted:x 7
   329 op sub *tmp62 *tmp61 1
 
   333 draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
   334 jump *label86 always
   335 label *label89
-    * jump *label92 equal :drawDigitSlanted:digit 2
-    * jump *label91 always
+  336 jump *label91 notEqual :drawDigitSlanted:digit 2
   337 label *label92
   338 op add *tmp66 :drawDigitSlanted:x 7
   339 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp66 :drawDigitSlanted:y
 
   352 draw line *tmp73 *tmp74 *tmp75 *tmp76
   353 jump *label86 always
   354 label *label91
-    * jump *label94 equal :drawDigitSlanted:digit 3
-    * jump *label93 always
+  355 jump *label93 notEqual :drawDigitSlanted:digit 3
   356 label *label94
   357 op add *tmp77 :drawDigitSlanted:x 7
   358 op add *tmp78 :drawDigitSlanted:y 6
 
   371 draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
   372 jump *label86 always
   373 label *label93
-    * jump *label96 equal :drawDigitSlanted:digit 4
-    * jump *label95 always
+  374 jump *label95 notEqual :drawDigitSlanted:digit 4
   375 label *label96
   376 op add *tmp88 :drawDigitSlanted:x 7
   377 op add *tmp89 :drawDigitSlanted:x 7
 
   387 draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
   388 jump *label86 always
   389 label *label95
-    * jump *label98 equal :drawDigitSlanted:digit 5
-    * jump *label97 always
+  390 jump *label97 notEqual :drawDigitSlanted:digit 5
   391 label *label98
   392 op add *tmp97 :drawDigitSlanted:x 7
   393 op add *tmp98 :drawDigitSlanted:y 6
 
   405 draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
   406 jump *label86 always
   407 label *label97
-    * jump *label100 equal :drawDigitSlanted:digit 6
-    * jump *label99 always
+  408 jump *label99 notEqual :drawDigitSlanted:digit 6
   409 label *label100
   410 op sub *tmp107 :drawDigitSlanted:x 2
   411 op add *tmp108 *tmp107 1
 
   418 draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
   419 jump *label86 always
   420 label *label99
-    * jump *label102 equal :drawDigitSlanted:digit 7
-    * jump *label101 always
+  421 jump *label101 notEqual :drawDigitSlanted:digit 7
   422 label *label102
   423 op add *tmp114 :drawDigitSlanted:x 7
   424 op add *tmp115 :drawDigitSlanted:y 12
 
   429 draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
   430 jump *label86 always
   431 label *label101
-    * jump *label104 equal :drawDigitSlanted:digit 8
-    * jump *label103 always
+  432 jump *label103 notEqual :drawDigitSlanted:digit 8
   433 label *label104
   434 op sub *tmp119 :drawDigitSlanted:x 2
   435 op add *tmp120 *tmp119 1
 
   442 draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
   443 jump *label86 always
   444 label *label103
-    * jump *label106 equal :drawDigitSlanted:digit 9
-    * jump *label105 always
+  445 jump *label105 notEqual :drawDigitSlanted:digit 9
   446 label *label106
   447 op sub *tmp126 :drawDigitSlanted:x 2
   448 op add *tmp127 *tmp126 1
 
   464 set :drawDigit:x :displayItem:x
   465 set :drawDigit:y :displayItem:y
   466 set :drawDigit:digit *tmp133
-    * jump *label110 equal :drawDigit:digit 0
-    * jump *label109 always
+  467 jump *label109 notEqual :drawDigit:digit 0
   468 label *label110
   469 op sub *tmp137 :drawDigit:x 2
   470 op add *tmp138 *tmp137 1
 
   473 draw lineRect *tmp138 *tmp140 9 14
   474 jump *label108 always
   475 label *label109
-    * jump *label112 equal :drawDigit:digit 1
-    * jump *label111 always
+  476 jump *label111 notEqual :drawDigit:digit 1
   477 label *label112
   478 op add *tmp141 :drawDigit:x 7
   479 op sub *tmp142 *tmp141 1
 
   483 draw line *tmp142 :drawDigit:y *tmp144 *tmp145
   484 jump *label108 always
   485 label *label111
-    * jump *label114 equal :drawDigit:digit 2
-    * jump *label113 always
+  486 jump *label113 notEqual :drawDigit:digit 2
   487 label *label114
   488 op add *tmp146 :drawDigit:x 7
   489 draw line :drawDigit:x :drawDigit:y *tmp146 :drawDigit:y
 
   504 draw line :drawDigit:x *tmp155 *tmp156 *tmp157
   505 jump *label108 always
   506 label *label113
-    * jump *label116 equal :drawDigit:digit 3
-    * jump *label115 always
+  507 jump *label115 notEqual :drawDigit:digit 3
   508 label *label116
   509 op add *tmp158 :drawDigit:x 7
   510 op add *tmp159 :drawDigit:x 7
 
   522 draw line :drawDigit:x *tmp165 *tmp166 *tmp167
   523 jump *label108 always
   524 label *label115
-    * jump *label118 equal :drawDigit:digit 4
-    * jump *label117 always
+  525 jump *label117 notEqual :drawDigit:digit 4
   526 label *label118
   527 op add *tmp168 :drawDigit:x 7
   528 op add *tmp169 :drawDigit:x 7
 
   537 draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
   538 jump *label108 always
   539 label *label117
-    * jump *label120 equal :drawDigit:digit 5
-    * jump *label119 always
+  540 jump *label119 notEqual :drawDigit:digit 5
   541 label *label120
   542 op add *tmp176 :drawDigit:x 7
   543 draw line :drawDigit:x :drawDigit:y *tmp176 :drawDigit:y
 
   558 draw line :drawDigit:x *tmp185 *tmp186 *tmp187
   559 jump *label108 always
   560 label *label119
-    * jump *label122 equal :drawDigit:digit 6
-    * jump *label121 always
+  561 jump *label121 notEqual :drawDigit:digit 6
   562 label *label122
   563 op add *tmp188 :drawDigit:y 12
   564 draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp188
 
   578 draw line :drawDigit:x *tmp196 *tmp197 *tmp198
   579 jump *label108 always
   580 label *label121
-    * jump *label124 equal :drawDigit:digit 7
-    * jump *label123 always
+  581 jump *label123 notEqual :drawDigit:digit 7
   582 label *label124
   583 op add *tmp199 :drawDigit:x 7
   584 op sub *tmp200 *tmp199 1
 
   593 draw line :drawDigit:x *tmp204 *tmp206 *tmp207
   594 jump *label108 always
   595 label *label123
-    * jump *label126 equal :drawDigit:digit 8
-    * jump *label125 always
+  596 jump *label125 notEqual :drawDigit:digit 8
   597 label *label126
   598 op sub *tmp208 :drawDigit:x 2
   599 op add *tmp209 *tmp208 1
 
   606 draw line :drawDigit:x *tmp212 *tmp213 *tmp214
   607 jump *label108 always
   608 label *label125
-    * jump *label128 equal :drawDigit:digit 9
-    * jump *label127 always
+  609 jump *label127 notEqual :drawDigit:digit 9
   610 label *label128
   611 op add *tmp215 :drawDigit:x 7
   612 draw line :drawDigit:x :drawDigit:y *tmp215 :drawDigit:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-9 instructions):
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   10 jump *label5 lessThanEq :n 0
    11 op sub :n :n 1
    12 getlink :block :n
    13 print "Found: "
 
    66 label *label16
    67 printflush .MESSAGE
    68 label *label1
-    * op equal *tmp11 .CONTAINER null
-    * jump *label0 notEqual *tmp11 false
+   69 jump *label0 equal .CONTAINER null
    70 label *label2
    71 label *label17
    72 sensor *tmp12 .CONTAINER @dead
 
   175 draw image *tmp27 *tmp30 :item 16 0
   176 op add :index :index 1
   177 op sub :y :y 20
-    * op equal *tmp31 :index 8
-    * jump *label45 equal *tmp31 false
+  178 jump *label45 notEqual :index 8
   179 set :y 152
   180 set :x 93
   181 draw color 255 255 255 255
 
   271 sensor :displayItem:amount .CONTAINER :displayItem:item
   272 op strictEqual *tmp38 .MEMORY null
   273 jump *label70 equal *tmp38 false
-    * op equal *tmp40 :displayItem:amount .CAPACITY
-    * jump *label72 equal *tmp40 false
+  274 jump *label72 notEqual :displayItem:amount .CAPACITY
   275 draw color 0 255 0 255
   276 jump *label73 always
   277 label *label72
-    * op greaterThan *tmp42 :displayItem:amount .LIMIT
-    * jump *label74 equal *tmp42 false
+  278 jump *label74 lessThanEq :displayItem:amount .LIMIT
   279 draw color 255 255 0 255
   280 jump *label75 always
   281 label *label74
 
   286 label *label70
   287 read :displayItem:last .MEMORY :displayItem:index
   288 write :displayItem:amount .MEMORY :displayItem:index
-    * op equal *tmp48 :displayItem:amount :displayItem:last
-    * jump *label76 equal *tmp48 false
+  289 jump *label76 notEqual :displayItem:amount :displayItem:last
   290 draw color 255 255 0 255
   291 jump *label77 always
   292 label *label76
-    * op lessThan *tmp50 :displayItem:amount :displayItem:last
-    * jump *label78 equal *tmp50 false
+  293 jump *label78 greaterThanEq :displayItem:amount :displayItem:last
   294 draw color 255 80 80 255
   295 jump *label79 always
   296 label *label78
 
   625 label *label84
   626 op sub :displayItem:x :displayItem:x 11
   627 op idiv :displayItem:amount :displayItem:amount 10
-    * op equal *tmp227 :displayItem:amount 0
-    * jump *label129 equal *tmp227 false
+  628 jump *label129 notEqual :displayItem:amount 0
   629 jump *label82 always
   630 jump *label130 always
   631 label *label129
 
   637 label *label69
   638 op add :index :index 1
   639 op sub :y :y 20
-    * op equal *tmp229 :index 8
-    * jump *label131 equal *tmp229 false
+  640 jump *label131 notEqual :index 8
   641 drawflush display1
   642 jump *label134 always
   643 label *label133

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    37 jump *label13 notEqual *tmp5 @large-logic-display
    38 label *label14
    39 set .DISPLAY :block
-    * jump *label6 always
    40 label *label13
    41 label *label6
    42 label *label4
 
    60 jump *label15 equal *tmp9 false
    61 print "No container or display."
    62 print "\n"
-    * jump *label16 always
    63 label *label15
    64 label *label16
    65 printflush .MESSAGE
 
   177 set :y 152
   178 set :x 93
   179 draw color 255 255 255 255
-    * jump *label46 always
   180 label *label45
   181 label *label46
   182 label *label27
 
   443 op add *tmp131 :drawDigitSlanted:x 7
   444 op add *tmp132 :drawDigitSlanted:y 6
   445 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
-    * jump *label86 always
   446 label *label105
   447 label *label86
   448 label *label85
 
   614 op add *tmp225 :drawDigit:x 7
   615 op add *tmp226 :drawDigit:y 12
   616 draw line :drawDigit:x *tmp224 *tmp225 *tmp226
-    * jump *label108 always
   617 label *label127
   618 label *label108
   619 label *label107
 
   622 op idiv :displayItem:amount :displayItem:amount 10
   623 jump *label129 notEqual :displayItem:amount 0
   624 jump *label82 always
-    * jump *label130 always
   625 label *label129
   626 label *label130
   627 label *label81
 
   633 op sub :y :y 20
   634 jump *label131 notEqual :index 8
   635 drawflush display1
-    * jump *label134 always
   636 label *label133
   637 label *label134
   638 set :y 152
 
   647 draw rect 109 0 176 176
   648 label *label137
   649 label *label135
-    * jump *label132 always
   650 label *label131
   651 label *label132
   652 label *label51

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    84 # "Function: inline def eraseImages(in first_column)"
    85 set :eraseImages:first_column true
    86 draw color 0 0 80 255
-    * jump *label21 equal :eraseImages:first_column false
+   87 jump *label21 equal true false
    88 draw rect 0 0 23 176
    89 jump *label22 always
    90 label *label21
 
    94 # "Function: inline def eraseImages(in first_column)"
    95 set :eraseImages.1:first_column false
    96 draw color 0 0 80 255
-    * jump *label24 equal :eraseImages.1:first_column false
+   97 jump *label24 equal false false
    98 draw rect 0 0 23 176
    99 jump *label25 always
   100 label *label24
 
   168 label *label26
   169 op add *tmp27 :x 8
   170 op add *tmp28 :y 8
-    * op sub *tmp29 *tmp28 2
-    * op add *tmp30 *tmp29 1
+  171 op add *tmp29 :y 6
+  172 op sub *tmp30 *tmp28 1
   173 draw image *tmp27 *tmp30 :item 16 0
   174 op add :index :index 1
   175 op sub :y :y 20
 
   189 # "Function: inline def eraseNumbers(in first_column)"
   190 set :eraseNumbers:first_column true
   191 draw color 0 0 80 255
-    * jump *label48 equal :eraseNumbers:first_column false
+  192 jump *label48 equal true false
   193 draw rect 23 0 70 176
   194 jump *label49 always
   195 label *label48
 
   265 set :displayItem:item :item
   266 set :displayItem:x :x
   267 set :displayItem:y :y
-    * sensor :displayItem:amount .CONTAINER :displayItem:item
+  268 sensor :displayItem:amount .CONTAINER :item
   269 op strictEqual *tmp38 .MEMORY null
   270 jump *label70 equal *tmp38 false
   271 jump *label72 notEqual :displayItem:amount .CAPACITY
 
   281 label *label73
   282 jump *label71 always
   283 label *label70
-    * read :displayItem:last .MEMORY :displayItem:index
-    * write :displayItem:amount .MEMORY :displayItem:index
+  284 read :displayItem:last .MEMORY :index
+  285 write :displayItem:amount .MEMORY :index
   286 jump *label76 notEqual :displayItem:amount :displayItem:last
   287 draw color 255 255 0 255
   288 jump *label77 always
 
   302 op mod *tmp53 :displayItem:amount 10
   303 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   304 set :drawDigitSlanted:x :displayItem:x
-    * set :drawDigitSlanted:y :displayItem:y
-    * set :drawDigitSlanted:digit *tmp53
-    * jump *label87 notEqual :drawDigitSlanted:digit 0
+  305 set :drawDigitSlanted:y :y
+  306 jump *label87 notEqual *tmp53 0
   307 label *label88
-    * op sub *tmp57 :drawDigitSlanted:x 2
-    * op add *tmp58 *tmp57 1
-    * op sub *tmp59 :drawDigitSlanted:y 2
-    * op add *tmp60 *tmp59 1
+  308 op sub *tmp57 :displayItem:x 2
+  309 op sub *tmp58 :drawDigitSlanted:x 1
+  310 op sub *tmp59 :displayItem:y 2
+  311 op sub *tmp60 :drawDigitSlanted:y 1
   312 draw lineRect *tmp58 *tmp60 9 14
   313 jump *label86 always
   314 label *label87
-    * jump *label89 notEqual :drawDigitSlanted:digit 1
+  315 jump *label89 notEqual *tmp53 1
   316 label *label90
-    * op add *tmp61 :drawDigitSlanted:x 7
-    * op sub *tmp62 *tmp61 1
-    * op add *tmp63 :drawDigitSlanted:x 7
-    * op sub *tmp64 *tmp63 1
-    * op add *tmp65 :drawDigitSlanted:y 12
-    * draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
+  317 op add *tmp61 :displayItem:x 7
+  318 op add *tmp62 :drawDigitSlanted:x 6
+  319 op add *tmp63 :displayItem:x 7
+  320 op sub *tmp64 *tmp61 1
+  321 op add *tmp65 :displayItem:y 12
+  322 draw line *tmp62 :displayItem:y *tmp62 *tmp65
   323 jump *label86 always
   324 label *label89
-    * jump *label91 notEqual :drawDigitSlanted:digit 2
+  325 jump *label91 notEqual *tmp53 2
   326 label *label92
-    * op add *tmp66 :drawDigitSlanted:x 7
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp66 :drawDigitSlanted:y
-    * op add *tmp67 :drawDigitSlanted:x 7
-    * op add *tmp68 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp67 *tmp68
-    * op add *tmp69 :drawDigitSlanted:x 7
-    * op add *tmp70 :drawDigitSlanted:y 6
-    * op add *tmp71 :drawDigitSlanted:x 7
-    * op add *tmp72 :drawDigitSlanted:y 12
-    * draw line *tmp69 *tmp70 *tmp71 *tmp72
-    * op add *tmp73 :drawDigitSlanted:x 2
-    * op add *tmp74 :drawDigitSlanted:y 12
-    * op add *tmp75 :drawDigitSlanted:x 7
-    * op add *tmp76 :drawDigitSlanted:y 12
-    * draw line *tmp73 *tmp74 *tmp75 *tmp76
+  327 op add *tmp66 :displayItem:x 7
+  328 draw line :displayItem:x :displayItem:y *tmp66 :displayItem:y
+  329 op add *tmp67 :displayItem:x 7
+  330 op add *tmp68 :displayItem:y 6
+  331 draw line :displayItem:x :displayItem:y *tmp66 *tmp68
+  332 op add *tmp69 :displayItem:x 7
+  333 op add *tmp70 :displayItem:y 6
+  334 op add *tmp71 :displayItem:x 7
+  335 op add *tmp72 :displayItem:y 12
+  336 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  337 op add *tmp73 :displayItem:x 2
+  338 op add *tmp74 :displayItem:y 12
+  339 op add *tmp75 :displayItem:x 7
+  340 op add *tmp76 :displayItem:y 12
+  341 draw line *tmp73 *tmp72 *tmp66 *tmp72
   342 jump *label86 always
   343 label *label91
-    * jump *label93 notEqual :drawDigitSlanted:digit 3
+  344 jump *label93 notEqual *tmp53 3
   345 label *label94
-    * op add *tmp77 :drawDigitSlanted:x 7
-    * op add *tmp78 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigitSlanted:y 6
-    * op add *tmp80 :drawDigitSlanted:x 7
-    * op add *tmp81 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigitSlanted:y 6
-    * op add *tmp83 :drawDigitSlanted:x 7
-    * op add *tmp84 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp82 *tmp83 *tmp84
-    * op add *tmp85 :drawDigitSlanted:y 12
-    * op add *tmp86 :drawDigitSlanted:x 7
-    * op add *tmp87 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
+  346 op add *tmp77 :displayItem:x 7
+  347 op add *tmp78 :displayItem:y 6
+  348 draw line :displayItem:x :displayItem:y *tmp77 *tmp78
+  349 op add *tmp79 :displayItem:y 6
+  350 op add *tmp80 :displayItem:x 7
+  351 op add *tmp81 :displayItem:y 6
+  352 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  353 op add *tmp82 :displayItem:y 6
+  354 op add *tmp83 :displayItem:x 7
+  355 op add *tmp84 :displayItem:y 12
+  356 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  357 op add *tmp85 :displayItem:y 12
+  358 op add *tmp86 :displayItem:x 7
+  359 op add *tmp87 :displayItem:y 12
+  360 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   361 jump *label86 always
   362 label *label93
-    * jump *label95 notEqual :drawDigitSlanted:digit 4
+  363 jump *label95 notEqual *tmp53 4
   364 label *label96
-    * op add *tmp88 :drawDigitSlanted:x 7
-    * op add *tmp89 :drawDigitSlanted:x 7
-    * op add *tmp90 :drawDigitSlanted:y 6
-    * draw line *tmp88 :drawDigitSlanted:y *tmp89 *tmp90
-    * op add *tmp91 :drawDigitSlanted:y 6
-    * op add *tmp92 :drawDigitSlanted:x 7
-    * op add *tmp93 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp91 *tmp92 *tmp93
-    * op add *tmp94 :drawDigitSlanted:y 6
-    * op add *tmp95 :drawDigitSlanted:x 7
-    * op add *tmp96 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
+  365 op add *tmp88 :displayItem:x 7
+  366 op add *tmp89 :displayItem:x 7
+  367 op add *tmp90 :displayItem:y 6
+  368 draw line *tmp88 :displayItem:y *tmp88 *tmp90
+  369 op add *tmp91 :displayItem:y 6
+  370 op add *tmp92 :displayItem:x 7
+  371 op add *tmp93 :displayItem:y 6
+  372 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  373 op add *tmp94 :displayItem:y 6
+  374 op add *tmp95 :displayItem:x 7
+  375 op add *tmp96 :displayItem:y 12
+  376 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   377 jump *label86 always
   378 label *label95
-    * jump *label97 notEqual :drawDigitSlanted:digit 5
+  379 jump *label97 notEqual *tmp53 5
   380 label *label98
-    * op add *tmp97 :drawDigitSlanted:x 7
-    * op add *tmp98 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp97 *tmp98
-    * op add *tmp99 :drawDigitSlanted:y 6
-    * op add *tmp100 :drawDigitSlanted:x 7
-    * op add *tmp101 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp99 *tmp100 *tmp101
-    * op add *tmp102 :drawDigitSlanted:y 6
-    * op add *tmp103 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp102 :drawDigitSlanted:x *tmp103
-    * op add *tmp104 :drawDigitSlanted:y 12
-    * op add *tmp105 :drawDigitSlanted:x 7
-    * op add *tmp106 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
+  381 op add *tmp97 :displayItem:x 7
+  382 op add *tmp98 :displayItem:y 6
+  383 draw line :displayItem:x :displayItem:y *tmp97 *tmp98
+  384 op add *tmp99 :displayItem:y 6
+  385 op add *tmp100 :displayItem:x 7
+  386 op add *tmp101 :displayItem:y 6
+  387 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  388 op add *tmp102 :displayItem:y 6
+  389 op add *tmp103 :displayItem:y 12
+  390 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  391 op add *tmp104 :displayItem:y 12
+  392 op add *tmp105 :displayItem:x 7
+  393 op add *tmp106 :displayItem:y 12
+  394 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   395 jump *label86 always
   396 label *label97
-    * jump *label99 notEqual :drawDigitSlanted:digit 6
+  397 jump *label99 notEqual *tmp53 6
   398 label *label100
-    * op sub *tmp107 :drawDigitSlanted:x 2
-    * op add *tmp108 *tmp107 1
-    * op sub *tmp109 :drawDigitSlanted:y 2
-    * op add *tmp110 *tmp109 1
+  399 op sub *tmp107 :displayItem:x 2
+  400 op sub *tmp108 :drawDigitSlanted:x 1
+  401 op sub *tmp109 :displayItem:y 2
+  402 op sub *tmp110 :drawDigitSlanted:y 1
   403 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :drawDigitSlanted:y 6
-    * op add *tmp112 :drawDigitSlanted:x 7
-    * op add *tmp113 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
+  404 op add *tmp111 :displayItem:y 6
+  405 op add *tmp112 :displayItem:x 7
+  406 op add *tmp113 :displayItem:y 12
+  407 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   408 jump *label86 always
   409 label *label99
-    * jump *label101 notEqual :drawDigitSlanted:digit 7
+  410 jump *label101 notEqual *tmp53 7
   411 label *label102
-    * op add *tmp114 :drawDigitSlanted:x 7
-    * op add *tmp115 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp114 *tmp115
-    * op add *tmp116 :drawDigitSlanted:y 12
-    * op add *tmp117 :drawDigitSlanted:x 7
-    * op add *tmp118 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
+  412 op add *tmp114 :displayItem:x 7
+  413 op add *tmp115 :displayItem:y 12
+  414 draw line :displayItem:x :displayItem:y *tmp114 *tmp115
+  415 op add *tmp116 :displayItem:y 12
+  416 op add *tmp117 :displayItem:x 7
+  417 op add *tmp118 :displayItem:y 12
+  418 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   419 jump *label86 always
   420 label *label101
-    * jump *label103 notEqual :drawDigitSlanted:digit 8
+  421 jump *label103 notEqual *tmp53 8
   422 label *label104
-    * op sub *tmp119 :drawDigitSlanted:x 2
-    * op add *tmp120 *tmp119 1
-    * op sub *tmp121 :drawDigitSlanted:y 2
-    * op add *tmp122 *tmp121 1
+  423 op sub *tmp119 :displayItem:x 2
+  424 op sub *tmp120 :drawDigitSlanted:x 1
+  425 op sub *tmp121 :displayItem:y 2
+  426 op sub *tmp122 :drawDigitSlanted:y 1
   427 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :drawDigitSlanted:y 6
-    * op add *tmp124 :drawDigitSlanted:x 7
-    * op add *tmp125 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
+  428 op add *tmp123 :displayItem:y 6
+  429 op add *tmp124 :displayItem:x 7
+  430 op add *tmp125 :displayItem:y 6
+  431 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   432 jump *label86 always
   433 label *label103
-    * jump *label105 notEqual :drawDigitSlanted:digit 9
+  434 jump *label105 notEqual *tmp53 9
   435 label *label106
-    * op sub *tmp126 :drawDigitSlanted:x 2
-    * op add *tmp127 *tmp126 1
-    * op add *tmp128 :drawDigitSlanted:y 6
-    * op sub *tmp129 *tmp128 2
-    * op add *tmp130 *tmp129 1
+  436 op sub *tmp126 :displayItem:x 2
+  437 op sub *tmp127 :drawDigitSlanted:x 1
+  438 op add *tmp128 :displayItem:y 6
+  439 op add *tmp129 :drawDigitSlanted:y 4
+  440 op sub *tmp130 *tmp128 1
   441 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :drawDigitSlanted:x 7
-    * op add *tmp132 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
+  442 op add *tmp131 :displayItem:x 7
+  443 op add *tmp132 :displayItem:y 6
+  444 draw line :displayItem:x :displayItem:y *tmp131 *tmp128
   445 label *label105
   446 label *label86
   447 label *label85
 
   450 op mod *tmp133 :displayItem:amount 10
   451 # "Function: inline def drawDigit(in x, in y, in digit)"
   452 set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :displayItem:y
+  453 set :drawDigit:y :y
   454 set :drawDigit:digit *tmp133
-    * jump *label109 notEqual :drawDigit:digit 0
+  455 jump *label109 notEqual *tmp133 0
   456 label *label110
-    * op sub *tmp137 :drawDigit:x 2
-    * op add *tmp138 *tmp137 1
-    * op sub *tmp139 :drawDigit:y 2
-    * op add *tmp140 *tmp139 1
+  457 op sub *tmp137 :displayItem:x 2
+  458 op sub *tmp138 :drawDigit:x 1
+  459 op sub *tmp139 :displayItem:y 2
+  460 op sub *tmp140 :drawDigit:y 1
   461 draw lineRect *tmp138 *tmp140 9 14
   462 jump *label108 always
   463 label *label109
-    * jump *label111 notEqual :drawDigit:digit 1
+  464 jump *label111 notEqual *tmp133 1
   465 label *label112
-    * op add *tmp141 :drawDigit:x 7
-    * op sub *tmp142 *tmp141 1
-    * op add *tmp143 :drawDigit:x 7
-    * op sub *tmp144 *tmp143 1
-    * op add *tmp145 :drawDigit:y 12
-    * draw line *tmp142 :drawDigit:y *tmp144 *tmp145
+  466 op add *tmp141 :displayItem:x 7
+  467 op add *tmp142 :drawDigit:x 6
+  468 op add *tmp143 :displayItem:x 7
+  469 op sub *tmp144 *tmp141 1
+  470 op add *tmp145 :displayItem:y 12
+  471 draw line *tmp142 :displayItem:y *tmp142 *tmp145
   472 jump *label108 always
   473 label *label111
-    * jump *label113 notEqual :drawDigit:digit 2
+  474 jump *label113 notEqual *tmp133 2
   475 label *label114
-    * op add *tmp146 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp146 :drawDigit:y
-    * op add *tmp147 :drawDigit:y 6
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp147
-    * op add *tmp148 :drawDigit:y 6
-    * op add *tmp149 :drawDigit:x 7
-    * op add *tmp150 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp148 *tmp149 *tmp150
-    * op add *tmp151 :drawDigit:x 7
-    * op add *tmp152 :drawDigit:y 6
-    * op add *tmp153 :drawDigit:x 7
-    * op add *tmp154 :drawDigit:y 12
-    * draw line *tmp151 *tmp152 *tmp153 *tmp154
-    * op add *tmp155 :drawDigit:y 12
-    * op add *tmp156 :drawDigit:x 7
-    * op add *tmp157 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp155 *tmp156 *tmp157
+  476 op add *tmp146 :displayItem:x 7
+  477 draw line :displayItem:x :displayItem:y *tmp146 :displayItem:y
+  478 op add *tmp147 :displayItem:y 6
+  479 draw line :displayItem:x :displayItem:y :displayItem:x *tmp147
+  480 op add *tmp148 :displayItem:y 6
+  481 op add *tmp149 :displayItem:x 7
+  482 op add *tmp150 :displayItem:y 6
+  483 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  484 op add *tmp151 :displayItem:x 7
+  485 op add *tmp152 :displayItem:y 6
+  486 op add *tmp153 :displayItem:x 7
+  487 op add *tmp154 :displayItem:y 12
+  488 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  489 op add *tmp155 :displayItem:y 12
+  490 op add *tmp156 :displayItem:x 7
+  491 op add *tmp157 :displayItem:y 12
+  492 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   493 jump *label108 always
   494 label *label113
-    * jump *label115 notEqual :drawDigit:digit 3
+  495 jump *label115 notEqual *tmp133 3
   496 label *label116
-    * op add *tmp158 :drawDigit:x 7
-    * op add *tmp159 :drawDigit:x 7
-    * op add *tmp160 :drawDigit:y 12
-    * draw line *tmp158 :drawDigit:y *tmp159 *tmp160
-    * op add *tmp161 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp161 :drawDigit:y
-    * op add *tmp162 :drawDigit:y 6
-    * op add *tmp163 :drawDigit:x 7
-    * op add *tmp164 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp162 *tmp163 *tmp164
-    * op add *tmp165 :drawDigit:y 12
-    * op add *tmp166 :drawDigit:x 7
-    * op add *tmp167 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp165 *tmp166 *tmp167
+  497 op add *tmp158 :displayItem:x 7
+  498 op add *tmp159 :displayItem:x 7
+  499 op add *tmp160 :displayItem:y 12
+  500 draw line *tmp158 :displayItem:y *tmp158 *tmp160
+  501 op add *tmp161 :displayItem:x 7
+  502 draw line :displayItem:x :displayItem:y *tmp158 :displayItem:y
+  503 op add *tmp162 :displayItem:y 6
+  504 op add *tmp163 :displayItem:x 7
+  505 op add *tmp164 :displayItem:y 6
+  506 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  507 op add *tmp165 :displayItem:y 12
+  508 op add *tmp166 :displayItem:x 7
+  509 op add *tmp167 :displayItem:y 12
+  510 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   511 jump *label108 always
   512 label *label115
-    * jump *label117 notEqual :drawDigit:digit 4
+  513 jump *label117 notEqual *tmp133 4
   514 label *label118
-    * op add *tmp168 :drawDigit:x 7
-    * op add *tmp169 :drawDigit:x 7
-    * op add *tmp170 :drawDigit:y 12
-    * draw line *tmp168 :drawDigit:y *tmp169 *tmp170
-    * op add *tmp171 :drawDigit:y 6
-    * op add *tmp172 :drawDigit:x 7
-    * op add *tmp173 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp171 *tmp172 *tmp173
-    * op add *tmp174 :drawDigit:y 6
-    * op add *tmp175 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
+  515 op add *tmp168 :displayItem:x 7
+  516 op add *tmp169 :displayItem:x 7
+  517 op add *tmp170 :displayItem:y 12
+  518 draw line *tmp168 :displayItem:y *tmp168 *tmp170
+  519 op add *tmp171 :displayItem:y 6
+  520 op add *tmp172 :displayItem:x 7
+  521 op add *tmp173 :displayItem:y 6
+  522 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  523 op add *tmp174 :displayItem:y 6
+  524 op add *tmp175 :displayItem:y 12
+  525 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   526 jump *label108 always
   527 label *label117
-    * jump *label119 notEqual :drawDigit:digit 5
+  528 jump *label119 notEqual *tmp133 5
   529 label *label120
-    * op add *tmp176 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp176 :drawDigit:y
-    * op add *tmp177 :drawDigit:x 7
-    * op add *tmp178 :drawDigit:x 7
-    * op add *tmp179 :drawDigit:y 6
-    * draw line *tmp177 :drawDigit:y *tmp178 *tmp179
-    * op add *tmp180 :drawDigit:y 6
-    * op add *tmp181 :drawDigit:x 7
-    * op add *tmp182 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp180 *tmp181 *tmp182
-    * op add *tmp183 :drawDigit:y 6
-    * op add *tmp184 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp183 :drawDigit:x *tmp184
-    * op add *tmp185 :drawDigit:y 12
-    * op add *tmp186 :drawDigit:x 7
-    * op add *tmp187 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp185 *tmp186 *tmp187
+  530 op add *tmp176 :displayItem:x 7
+  531 draw line :displayItem:x :displayItem:y *tmp176 :displayItem:y
+  532 op add *tmp177 :displayItem:x 7
+  533 op add *tmp178 :displayItem:x 7
+  534 op add *tmp179 :displayItem:y 6
+  535 draw line *tmp176 :displayItem:y *tmp176 *tmp179
+  536 op add *tmp180 :displayItem:y 6
+  537 op add *tmp181 :displayItem:x 7
+  538 op add *tmp182 :displayItem:y 6
+  539 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  540 op add *tmp183 :displayItem:y 6
+  541 op add *tmp184 :displayItem:y 12
+  542 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  543 op add *tmp185 :displayItem:y 12
+  544 op add *tmp186 :displayItem:x 7
+  545 op add *tmp187 :displayItem:y 12
+  546 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   547 jump *label108 always
   548 label *label119
-    * jump *label121 notEqual :drawDigit:digit 6
+  549 jump *label121 notEqual *tmp133 6
   550 label *label122
-    * op add *tmp188 :drawDigit:y 12
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp188
-    * op add *tmp189 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp189 :drawDigit:y
-    * op add *tmp190 :drawDigit:x 7
-    * op add *tmp191 :drawDigit:x 7
-    * op add *tmp192 :drawDigit:y 6
-    * draw line *tmp190 :drawDigit:y *tmp191 *tmp192
-    * op add *tmp193 :drawDigit:y 6
-    * op add *tmp194 :drawDigit:x 7
-    * op add *tmp195 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp193 *tmp194 *tmp195
-    * op add *tmp196 :drawDigit:y 12
-    * op add *tmp197 :drawDigit:x 7
-    * op add *tmp198 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp196 *tmp197 *tmp198
+  551 op add *tmp188 :displayItem:y 12
+  552 draw line :displayItem:x :displayItem:y :displayItem:x *tmp188
+  553 op add *tmp189 :displayItem:x 7
+  554 draw line :displayItem:x :displayItem:y *tmp189 :displayItem:y
+  555 op add *tmp190 :displayItem:x 7
+  556 op add *tmp191 :displayItem:x 7
+  557 op add *tmp192 :displayItem:y 6
+  558 draw line *tmp189 :displayItem:y *tmp189 *tmp192
+  559 op add *tmp193 :displayItem:y 6
+  560 op add *tmp194 :displayItem:x 7
+  561 op add *tmp195 :displayItem:y 6
+  562 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  563 op add *tmp196 :displayItem:y 12
+  564 op add *tmp197 :displayItem:x 7
+  565 op add *tmp198 :displayItem:y 12
+  566 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   567 jump *label108 always
   568 label *label121
-    * jump *label123 notEqual :drawDigit:digit 7
+  569 jump *label123 notEqual *tmp133 7
   570 label *label124
-    * op add *tmp199 :drawDigit:x 7
-    * op sub *tmp200 *tmp199 1
-    * op add *tmp201 :drawDigit:x 7
-    * op sub *tmp202 *tmp201 1
-    * op add *tmp203 :drawDigit:y 12
-    * draw line *tmp200 :drawDigit:y *tmp202 *tmp203
-    * op add *tmp204 :drawDigit:y 12
-    * op add *tmp205 :drawDigit:x 7
-    * op sub *tmp206 *tmp205 1
-    * op add *tmp207 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp204 *tmp206 *tmp207
+  571 op add *tmp199 :displayItem:x 7
+  572 op add *tmp200 :drawDigit:x 6
+  573 op add *tmp201 :displayItem:x 7
+  574 op sub *tmp202 *tmp199 1
+  575 op add *tmp203 :displayItem:y 12
+  576 draw line *tmp200 :displayItem:y *tmp200 *tmp203
+  577 op add *tmp204 :displayItem:y 12
+  578 op add *tmp205 :displayItem:x 7
+  579 op sub *tmp206 *tmp199 1
+  580 op add *tmp207 :displayItem:y 12
+  581 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   582 jump *label108 always
   583 label *label123
-    * jump *label125 notEqual :drawDigit:digit 8
+  584 jump *label125 notEqual *tmp133 8
   585 label *label126
-    * op sub *tmp208 :drawDigit:x 2
-    * op add *tmp209 *tmp208 1
-    * op sub *tmp210 :drawDigit:y 2
-    * op add *tmp211 *tmp210 1
+  586 op sub *tmp208 :displayItem:x 2
+  587 op sub *tmp209 :drawDigit:x 1
+  588 op sub *tmp210 :displayItem:y 2
+  589 op sub *tmp211 :drawDigit:y 1
   590 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :drawDigit:y 6
-    * op add *tmp213 :drawDigit:x 7
-    * op add *tmp214 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp212 *tmp213 *tmp214
+  591 op add *tmp212 :displayItem:y 6
+  592 op add *tmp213 :displayItem:x 7
+  593 op add *tmp214 :displayItem:y 6
+  594 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   595 jump *label108 always
   596 label *label125
-    * jump *label127 notEqual :drawDigit:digit 9
+  597 jump *label127 notEqual *tmp133 9
   598 label *label128
-    * op add *tmp215 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp215 :drawDigit:y
-    * op add *tmp216 :drawDigit:x 7
-    * op add *tmp217 :drawDigit:x 7
-    * op add *tmp218 :drawDigit:y 12
-    * draw line *tmp216 :drawDigit:y *tmp217 *tmp218
-    * op add *tmp219 :drawDigit:y 6
-    * op add *tmp220 :drawDigit:x 7
-    * op add *tmp221 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp219 *tmp220 *tmp221
-    * op add *tmp222 :drawDigit:y 6
-    * op add *tmp223 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp222 :drawDigit:x *tmp223
-    * op add *tmp224 :drawDigit:y 12
-    * op add *tmp225 :drawDigit:x 7
-    * op add *tmp226 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp224 *tmp225 *tmp226
+  599 op add *tmp215 :displayItem:x 7
+  600 draw line :displayItem:x :displayItem:y *tmp215 :displayItem:y
+  601 op add *tmp216 :displayItem:x 7
+  602 op add *tmp217 :displayItem:x 7
+  603 op add *tmp218 :displayItem:y 12
+  604 draw line *tmp215 :displayItem:y *tmp215 *tmp218
+  605 op add *tmp219 :displayItem:y 6
+  606 op add *tmp220 :displayItem:x 7
+  607 op add *tmp221 :displayItem:y 6
+  608 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  609 op add *tmp222 :displayItem:y 6
+  610 op add *tmp223 :displayItem:y 12
+  611 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  612 op add *tmp224 :displayItem:y 12
+  613 op add *tmp225 :displayItem:x 7
+  614 op add *tmp226 :displayItem:y 12
+  615 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   616 label *label127
   617 label *label108
   618 label *label107
 
   639 # "Function: inline def eraseNumbers(in first_column)"
   640 set :eraseNumbers.1:first_column false
   641 draw color 0 0 80 255
-    * jump *label136 equal :eraseNumbers.1:first_column false
+  642 jump *label136 equal false false
   643 draw rect 23 0 70 176
   644 jump *label137 always
   645 label *label136

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-60 instructions):
 
    82 set :x 7
    83 set :y 152
    84 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages:first_column true
    85 draw color 0 0 80 255
    86 jump *label21 equal true false
    87 draw rect 0 0 23 176
 
    91 label *label22
    92 label *label20
    93 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages.1:first_column false
    94 draw color 0 0 80 255
    95 jump *label24 equal false false
    96 draw rect 0 0 23 176
 
   166 label *label26
   167 op add *tmp27 :x 8
   168 op add *tmp28 :y 8
-    * op add *tmp29 :y 6
-    * op sub *tmp30 *tmp28 1
+  169 op add *tmp30 :y 7
   170 draw image *tmp27 *tmp30 :item 16 0
   171 op add :index :index 1
   172 op sub :y :y 20
 
   184 set :x 71
   185 set :y 152
   186 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers:first_column true
   187 draw color 0 0 80 255
   188 jump *label48 equal true false
   189 draw rect 23 0 70 176
 
   257 set *tmp35 null
   258 label *label50
   259 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem:index :index
-    * set :displayItem:item :item
   260 set :displayItem:x :x
   261 set :displayItem:y :y
   262 sensor :displayItem:amount .CONTAINER :item
 
   293 label *label80
   294 jump *label82 greaterThanEq :displayItem:i 5
   295 jump *label83 always
-    * op mod *tmp53 :displayItem:amount 10
   296 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * set :drawDigitSlanted:x :displayItem:x
-    * set :drawDigitSlanted:y :y
   297 jump *label87 notEqual *tmp53 0
   298 label *label88
-    * op sub *tmp57 :displayItem:x 2
-    * op sub *tmp58 :drawDigitSlanted:x 1
-    * op sub *tmp59 :displayItem:y 2
-    * op sub *tmp60 :drawDigitSlanted:y 1
+  299 op sub *tmp58 :displayItem:x 1
+  300 op sub *tmp59 :y 2
+  301 op sub *tmp60 :y 1
   302 draw lineRect *tmp58 *tmp60 9 14
   303 jump *label86 always
   304 label *label87
   305 jump *label89 notEqual *tmp53 1
   306 label *label90
-    * op add *tmp61 :displayItem:x 7
-    * op add *tmp62 :drawDigitSlanted:x 6
-    * op add *tmp63 :displayItem:x 7
-    * op sub *tmp64 *tmp61 1
-    * op add *tmp65 :displayItem:y 12
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  307 op add *tmp62 :displayItem:x 6
+  308 op add *tmp64 :displayItem:x 6
+  309 op add *tmp65 :y 12
+  310 draw line *tmp62 :y *tmp62 *tmp65
   311 jump *label86 always
   312 label *label89
   313 jump *label91 notEqual *tmp53 2
   314 label *label92
   315 op add *tmp66 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp66 :displayItem:y
-    * op add *tmp67 :displayItem:x 7
-    * op add *tmp68 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp66 *tmp68
-    * op add *tmp69 :displayItem:x 7
-    * op add *tmp70 :displayItem:y 6
-    * op add *tmp71 :displayItem:x 7
-    * op add *tmp72 :displayItem:y 12
+  316 draw line :displayItem:x :y *tmp66 :y
+  317 op add *tmp68 :y 6
+  318 draw line :displayItem:x :y *tmp66 *tmp68
+  319 op add *tmp70 :y 6
+  320 op add *tmp72 :y 12
   321 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp73 :displayItem:x 2
-    * op add *tmp74 :displayItem:y 12
-    * op add *tmp75 :displayItem:x 7
-    * op add *tmp76 :displayItem:y 12
+  322 op add *tmp74 :y 12
+  323 op add *tmp76 :y 12
   324 draw line *tmp73 *tmp72 *tmp66 *tmp72
   325 jump *label86 always
   326 label *label91
   327 jump *label93 notEqual *tmp53 3
   328 label *label94
   329 op add *tmp77 :displayItem:x 7
-    * op add *tmp78 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp77 *tmp78
-    * op add *tmp79 :displayItem:y 6
-    * op add *tmp80 :displayItem:x 7
-    * op add *tmp81 :displayItem:y 6
+  330 op add *tmp78 :y 6
+  331 draw line :displayItem:x :y *tmp77 *tmp78
+  332 op add *tmp79 :y 6
+  333 op add *tmp81 :y 6
   334 draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :displayItem:y 6
-    * op add *tmp83 :displayItem:x 7
-    * op add *tmp84 :displayItem:y 12
+  335 op add *tmp82 :y 6
+  336 op add *tmp84 :y 12
   337 draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :displayItem:y 12
-    * op add *tmp86 :displayItem:x 7
-    * op add *tmp87 :displayItem:y 12
+  338 op add *tmp85 :y 12
+  339 op add *tmp87 :y 12
   340 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   341 jump *label86 always
   342 label *label93
   343 jump *label95 notEqual *tmp53 4
   344 label *label96
   345 op add *tmp88 :displayItem:x 7
-    * op add *tmp89 :displayItem:x 7
-    * op add *tmp90 :displayItem:y 6
-    * draw line *tmp88 :displayItem:y *tmp88 *tmp90
-    * op add *tmp91 :displayItem:y 6
-    * op add *tmp92 :displayItem:x 7
-    * op add *tmp93 :displayItem:y 6
+  346 op add *tmp90 :y 6
+  347 draw line *tmp88 :y *tmp88 *tmp90
+  348 op add *tmp91 :y 6
+  349 op add *tmp93 :y 6
   350 draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :displayItem:y 6
-    * op add *tmp95 :displayItem:x 7
-    * op add *tmp96 :displayItem:y 12
+  351 op add *tmp94 :y 6
+  352 op add *tmp96 :y 12
   353 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   354 jump *label86 always
   355 label *label95
   356 jump *label97 notEqual *tmp53 5
   357 label *label98
   358 op add *tmp97 :displayItem:x 7
-    * op add *tmp98 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp97 *tmp98
-    * op add *tmp99 :displayItem:y 6
-    * op add *tmp100 :displayItem:x 7
-    * op add *tmp101 :displayItem:y 6
+  359 op add *tmp98 :y 6
+  360 draw line :displayItem:x :y *tmp97 *tmp98
+  361 op add *tmp99 :y 6
+  362 op add *tmp101 :y 6
   363 draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :displayItem:y 6
-    * op add *tmp103 :displayItem:y 12
+  364 op add *tmp102 :y 6
+  365 op add *tmp103 :y 12
   366 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * op add *tmp104 :displayItem:y 12
-    * op add *tmp105 :displayItem:x 7
-    * op add *tmp106 :displayItem:y 12
+  367 op add *tmp104 :y 12
+  368 op add *tmp106 :y 12
   369 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   370 jump *label86 always
   371 label *label97
   372 jump *label99 notEqual *tmp53 6
   373 label *label100
-    * op sub *tmp107 :displayItem:x 2
-    * op sub *tmp108 :drawDigitSlanted:x 1
-    * op sub *tmp109 :displayItem:y 2
-    * op sub *tmp110 :drawDigitSlanted:y 1
+  374 op sub *tmp108 :displayItem:x 1
+  375 op sub *tmp109 :y 2
+  376 op sub *tmp110 :y 1
   377 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :displayItem:y 6
-    * op add *tmp112 :displayItem:x 7
-    * op add *tmp113 :displayItem:y 12
+  378 op add *tmp111 :y 6
+  379 op add *tmp113 :y 12
   380 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   381 jump *label86 always
   382 label *label99
   383 jump *label101 notEqual *tmp53 7
   384 label *label102
   385 op add *tmp114 :displayItem:x 7
-    * op add *tmp115 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y *tmp114 *tmp115
-    * op add *tmp116 :displayItem:y 12
-    * op add *tmp117 :displayItem:x 7
-    * op add *tmp118 :displayItem:y 12
+  386 op add *tmp115 :y 12
+  387 draw line :displayItem:x :y *tmp114 *tmp115
+  388 op add *tmp116 :y 12
+  389 op add *tmp118 :y 12
   390 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   391 jump *label86 always
   392 label *label101
   393 jump *label103 notEqual *tmp53 8
   394 label *label104
-    * op sub *tmp119 :displayItem:x 2
-    * op sub *tmp120 :drawDigitSlanted:x 1
-    * op sub *tmp121 :displayItem:y 2
-    * op sub *tmp122 :drawDigitSlanted:y 1
+  395 op sub *tmp120 :displayItem:x 1
+  396 op sub *tmp121 :y 2
+  397 op sub *tmp122 :y 1
   398 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :displayItem:y 6
-    * op add *tmp124 :displayItem:x 7
-    * op add *tmp125 :displayItem:y 6
+  399 op add *tmp123 :y 6
+  400 op add *tmp125 :y 6
   401 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   402 jump *label86 always
   403 label *label103
   404 jump *label105 notEqual *tmp53 9
   405 label *label106
-    * op sub *tmp126 :displayItem:x 2
-    * op sub *tmp127 :drawDigitSlanted:x 1
-    * op add *tmp128 :displayItem:y 6
-    * op add *tmp129 :drawDigitSlanted:y 4
-    * op sub *tmp130 *tmp128 1
+  406 op sub *tmp127 :displayItem:x 1
+  407 op add *tmp128 :y 6
+  408 op add *tmp129 :y 4
+  409 op add *tmp130 :displayItem:y 5
   410 draw lineRect *tmp127 *tmp130 9 8
   411 op add *tmp131 :displayItem:x 7
-    * op add *tmp132 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp131 *tmp128
+  412 op add *tmp132 :y 6
+  413 draw line :displayItem:x :y *tmp131 *tmp128
   414 label *label105
   415 label *label86
   416 label *label85
 
   420 # "Function: inline def drawDigit(in x, in y, in digit)"
   421 set :drawDigit:x :displayItem:x
   422 set :drawDigit:y :y
-    * set :drawDigit:digit *tmp133
   423 jump *label109 notEqual *tmp133 0
   424 label *label110
-    * op sub *tmp137 :displayItem:x 2
-    * op sub *tmp138 :drawDigit:x 1
-    * op sub *tmp139 :displayItem:y 2
-    * op sub *tmp140 :drawDigit:y 1
+  425 op sub *tmp138 :displayItem:x 1
+  426 op sub *tmp139 :y 2
+  427 op sub *tmp140 :y 1
   428 draw lineRect *tmp138 *tmp140 9 14
   429 jump *label108 always
   430 label *label109
   431 jump *label111 notEqual *tmp133 1
   432 label *label112
   433 op add *tmp141 :displayItem:x 7
-    * op add *tmp142 :drawDigit:x 6
-    * op add *tmp143 :displayItem:x 7
-    * op sub *tmp144 *tmp141 1
-    * op add *tmp145 :displayItem:y 12
-    * draw line *tmp142 :displayItem:y *tmp142 *tmp145
+  434 op add *tmp142 :displayItem:x 6
+  435 op add *tmp144 :displayItem:x 6
+  436 op add *tmp145 :y 12
+  437 draw line *tmp142 :y *tmp142 *tmp145
   438 jump *label108 always
   439 label *label111
   440 jump *label113 notEqual *tmp133 2
   441 label *label114
   442 op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp146 :displayItem:y
-    * op add *tmp147 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp147
-    * op add *tmp148 :displayItem:y 6
-    * op add *tmp149 :displayItem:x 7
-    * op add *tmp150 :displayItem:y 6
+  443 draw line :displayItem:x :y *tmp146 :y
+  444 op add *tmp147 :y 6
+  445 draw line :displayItem:x :y :displayItem:x *tmp147
+  446 op add *tmp148 :y 6
+  447 op add *tmp150 :y 6
   448 draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp151 :displayItem:x 7
-    * op add *tmp152 :displayItem:y 6
-    * op add *tmp153 :displayItem:x 7
-    * op add *tmp154 :displayItem:y 12
+  449 op add *tmp152 :y 6
+  450 op add *tmp154 :y 12
   451 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :displayItem:y 12
-    * op add *tmp156 :displayItem:x 7
-    * op add *tmp157 :displayItem:y 12
+  452 op add *tmp155 :y 12
+  453 op add *tmp157 :y 12
   454 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   455 jump *label108 always
   456 label *label113
   457 jump *label115 notEqual *tmp133 3
   458 label *label116
   459 op add *tmp158 :displayItem:x 7
-    * op add *tmp159 :displayItem:x 7
-    * op add *tmp160 :displayItem:y 12
-    * draw line *tmp158 :displayItem:y *tmp158 *tmp160
-    * op add *tmp161 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp158 :displayItem:y
-    * op add *tmp162 :displayItem:y 6
-    * op add *tmp163 :displayItem:x 7
-    * op add *tmp164 :displayItem:y 6
+  460 op add *tmp160 :y 12
+  461 draw line *tmp158 :y *tmp158 *tmp160
+  462 draw line :displayItem:x :y *tmp158 :y
+  463 op add *tmp162 :y 6
+  464 op add *tmp164 :y 6
   465 draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :displayItem:y 12
-    * op add *tmp166 :displayItem:x 7
-    * op add *tmp167 :displayItem:y 12
+  466 op add *tmp165 :y 12
+  467 op add *tmp167 :y 12
   468 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   469 jump *label108 always
   470 label *label115
   471 jump *label117 notEqual *tmp133 4
   472 label *label118
   473 op add *tmp168 :displayItem:x 7
-    * op add *tmp169 :displayItem:x 7
-    * op add *tmp170 :displayItem:y 12
-    * draw line *tmp168 :displayItem:y *tmp168 *tmp170
-    * op add *tmp171 :displayItem:y 6
-    * op add *tmp172 :displayItem:x 7
-    * op add *tmp173 :displayItem:y 6
+  474 op add *tmp170 :y 12
+  475 draw line *tmp168 :y *tmp168 *tmp170
+  476 op add *tmp171 :y 6
+  477 op add *tmp173 :y 6
   478 draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :displayItem:y 6
-    * op add *tmp175 :displayItem:y 12
+  479 op add *tmp174 :y 6
+  480 op add *tmp175 :y 12
   481 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   482 jump *label108 always
   483 label *label117
   484 jump *label119 notEqual *tmp133 5
   485 label *label120
   486 op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp176 :displayItem:y
-    * op add *tmp177 :displayItem:x 7
-    * op add *tmp178 :displayItem:x 7
-    * op add *tmp179 :displayItem:y 6
-    * draw line *tmp176 :displayItem:y *tmp176 *tmp179
-    * op add *tmp180 :displayItem:y 6
-    * op add *tmp181 :displayItem:x 7
-    * op add *tmp182 :displayItem:y 6
+  487 draw line :displayItem:x :y *tmp176 :y
+  488 op add *tmp179 :y 6
+  489 draw line *tmp176 :y *tmp176 *tmp179
+  490 op add *tmp180 :y 6
+  491 op add *tmp182 :y 6
   492 draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :displayItem:y 6
-    * op add *tmp184 :displayItem:y 12
+  493 op add *tmp183 :y 6
+  494 op add *tmp184 :y 12
   495 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * op add *tmp185 :displayItem:y 12
-    * op add *tmp186 :displayItem:x 7
-    * op add *tmp187 :displayItem:y 12
+  496 op add *tmp185 :y 12
+  497 op add *tmp187 :y 12
   498 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   499 jump *label108 always
   500 label *label119
   501 jump *label121 notEqual *tmp133 6
   502 label *label122
-    * op add *tmp188 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp188
+  503 op add *tmp188 :y 12
+  504 draw line :displayItem:x :y :displayItem:x *tmp188
   505 op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp189 :displayItem:y
-    * op add *tmp190 :displayItem:x 7
-    * op add *tmp191 :displayItem:x 7
-    * op add *tmp192 :displayItem:y 6
-    * draw line *tmp189 :displayItem:y *tmp189 *tmp192
-    * op add *tmp193 :displayItem:y 6
-    * op add *tmp194 :displayItem:x 7
-    * op add *tmp195 :displayItem:y 6
+  506 draw line :displayItem:x :y *tmp189 :y
+  507 op add *tmp192 :y 6
+  508 draw line *tmp189 :y *tmp189 *tmp192
+  509 op add *tmp193 :y 6
+  510 op add *tmp195 :y 6
   511 draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :displayItem:y 12
-    * op add *tmp197 :displayItem:x 7
-    * op add *tmp198 :displayItem:y 12
+  512 op add *tmp196 :y 12
+  513 op add *tmp198 :y 12
   514 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   515 jump *label108 always
   516 label *label121
   517 jump *label123 notEqual *tmp133 7
   518 label *label124
   519 op add *tmp199 :displayItem:x 7
-    * op add *tmp200 :drawDigit:x 6
-    * op add *tmp201 :displayItem:x 7
-    * op sub *tmp202 *tmp199 1
-    * op add *tmp203 :displayItem:y 12
-    * draw line *tmp200 :displayItem:y *tmp200 *tmp203
-    * op add *tmp204 :displayItem:y 12
-    * op add *tmp205 :displayItem:x 7
-    * op sub *tmp206 *tmp199 1
-    * op add *tmp207 :displayItem:y 12
+  520 op add *tmp200 :displayItem:x 6
+  521 op add *tmp202 :displayItem:x 6
+  522 op add *tmp203 :y 12
+  523 draw line *tmp200 :y *tmp200 *tmp203
+  524 op add *tmp204 :y 12
+  525 op add *tmp206 :displayItem:x 6
+  526 op add *tmp207 :y 12
   527 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   528 jump *label108 always
   529 label *label123
   530 jump *label125 notEqual *tmp133 8
   531 label *label126
-    * op sub *tmp208 :displayItem:x 2
-    * op sub *tmp209 :drawDigit:x 1
-    * op sub *tmp210 :displayItem:y 2
-    * op sub *tmp211 :drawDigit:y 1
+  532 op sub *tmp209 :displayItem:x 1
+  533 op sub *tmp210 :y 2
+  534 op sub *tmp211 :y 1
   535 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :displayItem:y 6
+  536 op add *tmp212 :y 6
   537 op add *tmp213 :displayItem:x 7
-    * op add *tmp214 :displayItem:y 6
+  538 op add *tmp214 :y 6
   539 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   540 jump *label108 always
   541 label *label125
   542 jump *label127 notEqual *tmp133 9
   543 label *label128
   544 op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp215 :displayItem:y
-    * op add *tmp216 :displayItem:x 7
-    * op add *tmp217 :displayItem:x 7
-    * op add *tmp218 :displayItem:y 12
-    * draw line *tmp215 :displayItem:y *tmp215 *tmp218
-    * op add *tmp219 :displayItem:y 6
-    * op add *tmp220 :displayItem:x 7
-    * op add *tmp221 :displayItem:y 6
+  545 draw line :displayItem:x :y *tmp215 :y
+  546 op add *tmp218 :y 12
+  547 draw line *tmp215 :y *tmp215 *tmp218
+  548 op add *tmp219 :y 6
+  549 op add *tmp221 :y 6
   550 draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :displayItem:y 6
-    * op add *tmp223 :displayItem:y 12
+  551 op add *tmp222 :y 6
+  552 op add *tmp223 :y 12
   553 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * op add *tmp224 :displayItem:y 12
-    * op add *tmp225 :displayItem:x 7
-    * op add *tmp226 :displayItem:y 12
+  554 op add *tmp224 :y 12
+  555 op add *tmp226 :y 12
   556 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   557 label *label127
   558 label *label108
 
   578 set :y 152
   579 set :x 157
   580 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers.1:first_column false
   581 draw color 0 0 80 255
   582 jump *label136 equal false false
   583 draw rect 23 0 70 176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-92 instructions):
 
   165 set *tmp26 null
   166 label *label26
   167 op add *tmp27 :x 8
-    * op add *tmp28 :y 8
   168 op add *tmp30 :y 7
   169 draw image *tmp27 *tmp30 :item 16 0
   170 op add :index :index 1
 
   257 label *label50
   258 # "Function: inline def displayItem(in index, in item, in x, in y)"
   259 set :displayItem:x :x
-    * set :displayItem:y :y
   260 sensor :displayItem:amount .CONTAINER :item
   261 op strictEqual *tmp38 .MEMORY null
   262 jump *label70 equal *tmp38 false
 
   294 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   295 jump *label87 notEqual *tmp53 0
   296 label *label88
-    * op sub *tmp58 :displayItem:x 1
-    * op sub *tmp59 :y 2
-    * op sub *tmp60 :y 1
   297 draw lineRect *tmp58 *tmp60 9 14
   298 jump *label86 always
   299 label *label87
   300 jump *label89 notEqual *tmp53 1
   301 label *label90
-    * op add *tmp62 :displayItem:x 6
-    * op add *tmp64 :displayItem:x 6
-    * op add *tmp65 :y 12
   302 draw line *tmp62 :y *tmp62 *tmp65
   303 jump *label86 always
   304 label *label89
   305 jump *label91 notEqual *tmp53 2
   306 label *label92
-    * op add *tmp66 :displayItem:x 7
   307 draw line :displayItem:x :y *tmp66 :y
-    * op add *tmp68 :y 6
   308 draw line :displayItem:x :y *tmp66 *tmp68
-    * op add *tmp70 :y 6
-    * op add *tmp72 :y 12
   309 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp74 :y 12
-    * op add *tmp76 :y 12
   310 draw line *tmp73 *tmp72 *tmp66 *tmp72
   311 jump *label86 always
   312 label *label91
   313 jump *label93 notEqual *tmp53 3
   314 label *label94
-    * op add *tmp77 :displayItem:x 7
-    * op add *tmp78 :y 6
   315 draw line :displayItem:x :y *tmp77 *tmp78
-    * op add *tmp79 :y 6
-    * op add *tmp81 :y 6
   316 draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :y 6
-    * op add *tmp84 :y 12
   317 draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :y 12
-    * op add *tmp87 :y 12
   318 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   319 jump *label86 always
   320 label *label93
   321 jump *label95 notEqual *tmp53 4
   322 label *label96
-    * op add *tmp88 :displayItem:x 7
-    * op add *tmp90 :y 6
   323 draw line *tmp88 :y *tmp88 *tmp90
-    * op add *tmp91 :y 6
-    * op add *tmp93 :y 6
   324 draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :y 6
-    * op add *tmp96 :y 12
   325 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   326 jump *label86 always
   327 label *label95
   328 jump *label97 notEqual *tmp53 5
   329 label *label98
-    * op add *tmp97 :displayItem:x 7
-    * op add *tmp98 :y 6
   330 draw line :displayItem:x :y *tmp97 *tmp98
-    * op add *tmp99 :y 6
-    * op add *tmp101 :y 6
   331 draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :y 6
-    * op add *tmp103 :y 12
   332 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * op add *tmp104 :y 12
-    * op add *tmp106 :y 12
   333 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   334 jump *label86 always
   335 label *label97
   336 jump *label99 notEqual *tmp53 6
   337 label *label100
-    * op sub *tmp108 :displayItem:x 1
-    * op sub *tmp109 :y 2
-    * op sub *tmp110 :y 1
   338 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :y 6
-    * op add *tmp113 :y 12
   339 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   340 jump *label86 always
   341 label *label99
   342 jump *label101 notEqual *tmp53 7
   343 label *label102
-    * op add *tmp114 :displayItem:x 7
-    * op add *tmp115 :y 12
   344 draw line :displayItem:x :y *tmp114 *tmp115
-    * op add *tmp116 :y 12
-    * op add *tmp118 :y 12
   345 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   346 jump *label86 always
   347 label *label101
   348 jump *label103 notEqual *tmp53 8
   349 label *label104
-    * op sub *tmp120 :displayItem:x 1
-    * op sub *tmp121 :y 2
-    * op sub *tmp122 :y 1
   350 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :y 6
-    * op add *tmp125 :y 6
   351 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   352 jump *label86 always
   353 label *label103
   354 jump *label105 notEqual *tmp53 9
   355 label *label106
-    * op sub *tmp127 :displayItem:x 1
-    * op add *tmp128 :y 6
-    * op add *tmp129 :y 4
-    * op add *tmp130 :displayItem:y 5
+  356 op add *tmp130 :y 5
   357 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :displayItem:x 7
-    * op add *tmp132 :y 6
   358 draw line :displayItem:x :y *tmp131 *tmp128
   359 label *label105
   360 label *label86
 
   363 label *label83
   364 op mod *tmp133 :displayItem:amount 10
   365 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :y
   366 jump *label109 notEqual *tmp133 0
   367 label *label110
   368 op sub *tmp138 :displayItem:x 1
-    * op sub *tmp139 :y 2
   369 op sub *tmp140 :y 1
   370 draw lineRect *tmp138 *tmp140 9 14
   371 jump *label108 always
   372 label *label109
   373 jump *label111 notEqual *tmp133 1
   374 label *label112
-    * op add *tmp141 :displayItem:x 7
   375 op add *tmp142 :displayItem:x 6
-    * op add *tmp144 :displayItem:x 6
   376 op add *tmp145 :y 12
   377 draw line *tmp142 :y *tmp142 *tmp145
   378 jump *label108 always
 
   383 draw line :displayItem:x :y *tmp146 :y
   384 op add *tmp147 :y 6
   385 draw line :displayItem:x :y :displayItem:x *tmp147
-    * op add *tmp148 :y 6
-    * op add *tmp150 :y 6
   386 draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp152 :y 6
   387 op add *tmp154 :y 12
   388 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :y 12
-    * op add *tmp157 :y 12
   389 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   390 jump *label108 always
   391 label *label113
 
   396 draw line *tmp158 :y *tmp158 *tmp160
   397 draw line :displayItem:x :y *tmp158 :y
   398 op add *tmp162 :y 6
-    * op add *tmp164 :y 6
   399 draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :y 12
-    * op add *tmp167 :y 12
   400 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   401 jump *label108 always
   402 label *label115
 
   406 op add *tmp170 :y 12
   407 draw line *tmp168 :y *tmp168 *tmp170
   408 op add *tmp171 :y 6
-    * op add *tmp173 :y 6
   409 draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :y 6
-    * op add *tmp175 :y 12
   410 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   411 jump *label108 always
   412 label *label117
 
   416 draw line :displayItem:x :y *tmp176 :y
   417 op add *tmp179 :y 6
   418 draw line *tmp176 :y *tmp176 *tmp179
-    * op add *tmp180 :y 6
-    * op add *tmp182 :y 6
   419 draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :y 6
   420 op add *tmp184 :y 12
   421 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * op add *tmp185 :y 12
-    * op add *tmp187 :y 12
   422 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   423 jump *label108 always
   424 label *label119
 
   430 draw line :displayItem:x :y *tmp189 :y
   431 op add *tmp192 :y 6
   432 draw line *tmp189 :y *tmp189 *tmp192
-    * op add *tmp193 :y 6
-    * op add *tmp195 :y 6
   433 draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :y 12
-    * op add *tmp198 :y 12
   434 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   435 jump *label108 always
   436 label *label121
   437 jump *label123 notEqual *tmp133 7
   438 label *label124
-    * op add *tmp199 :displayItem:x 7
   439 op add *tmp200 :displayItem:x 6
-    * op add *tmp202 :displayItem:x 6
   440 op add *tmp203 :y 12
   441 draw line *tmp200 :y *tmp200 *tmp203
-    * op add *tmp204 :y 12
-    * op add *tmp206 :displayItem:x 6
-    * op add *tmp207 :y 12
   442 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   443 jump *label108 always
   444 label *label123
   445 jump *label125 notEqual *tmp133 8
   446 label *label126
   447 op sub *tmp209 :displayItem:x 1
-    * op sub *tmp210 :y 2
   448 op sub *tmp211 :y 1
   449 draw lineRect *tmp209 *tmp211 9 14
   450 op add *tmp212 :y 6
   451 op add *tmp213 :displayItem:x 7
-    * op add *tmp214 :y 6
   452 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   453 jump *label108 always
   454 label *label125
 
   459 op add *tmp218 :y 12
   460 draw line *tmp215 :y *tmp215 *tmp218
   461 op add *tmp219 :y 6
-    * op add *tmp221 :y 6
   462 draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :y 6
-    * op add *tmp223 :y 12
   463 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * op add *tmp224 :y 12
-    * op add *tmp226 :y 12
   464 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   465 label *label127
   466 label *label108

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
   353 label *label103
   354 jump *label105 notEqual *tmp53 9
   355 label *label106
-    * op add *tmp130 :y 5
   356 draw lineRect *tmp127 *tmp130 9 8
   357 draw line :displayItem:x :y *tmp131 *tmp128
   358 label *label105

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     8 set :n .LINKS
     9 label *label3
    10 jump *label5 lessThanEq :n 0
+   11 label *label138
    12 op sub :n :n 1
    13 getlink :block :n
    14 print "Found: "
 
    41 label *label13
    42 label *label6
    43 label *label4
-    * jump *label3 always
+   44 jump *label138 greaterThan :n 0
    45 label *label5
    46 print "Message: "
    47 print .MESSAGE
 
   290 label *label71
   291 set :displayItem:i 0
   292 label *label80
-    * jump *label82 greaterThanEq :displayItem:i 5
+  293 label *label139
   294 jump *label83 always
   295 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   296 jump *label87 notEqual *tmp53 0
 
   474 label *label130
   475 label *label81
   476 op add :displayItem:i :displayItem:i 1
-    * jump *label80 always
+  477 jump *label139 lessThan :displayItem:i 5
   478 label *label82
   479 label *label69
   480 op add :index :index 1

Modifications by Convert case at line 213:5 (+1 instructions):
 
   293 label *label139
   294 jump *label83 always
   295 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label87 notEqual *tmp53 0
+  296 multijump *label142 *tmp53 0 (m:*label141)
+  297 multilabel *label142 (m:*label141)
+  298 jump *label88 always
+  299 multilabel *label143 (m:*label141)
+  300 jump *label90 always
+  301 multilabel *label144 (m:*label141)
+  302 jump *label92 always
+  303 multilabel *label145 (m:*label141)
+  304 jump *label94 always
+  305 multilabel *label146 (m:*label141)
+  306 jump *label96 always
+  307 multilabel *label147 (m:*label141)
+  308 jump *label98 always
+  309 multilabel *label148 (m:*label141)
+  310 jump *label100 always
+  311 multilabel *label149 (m:*label141)
+  312 jump *label102 always
+  313 multilabel *label150 (m:*label141)
+  314 jump *label104 always
+  315 multilabel *label151 (m:*label141)
+  316 jump *label106 always
   317 label *label88
   318 draw lineRect *tmp58 *tmp60 9 14
   319 jump *label86 always
   320 label *label87
-    * jump *label89 notEqual *tmp53 1
   321 label *label90
   322 draw line *tmp62 :y *tmp62 *tmp65
   323 jump *label86 always
   324 label *label89
-    * jump *label91 notEqual *tmp53 2
   325 label *label92
   326 draw line :displayItem:x :y *tmp66 :y
   327 draw line :displayItem:x :y *tmp66 *tmp68
 
   329 draw line *tmp73 *tmp72 *tmp66 *tmp72
   330 jump *label86 always
   331 label *label91
-    * jump *label93 notEqual *tmp53 3
   332 label *label94
   333 draw line :displayItem:x :y *tmp77 *tmp78
   334 draw line :displayItem:x *tmp78 *tmp77 *tmp78
 
   336 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   337 jump *label86 always
   338 label *label93
-    * jump *label95 notEqual *tmp53 4
   339 label *label96
   340 draw line *tmp88 :y *tmp88 *tmp90
   341 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   342 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   343 jump *label86 always
   344 label *label95
-    * jump *label97 notEqual *tmp53 5
   345 label *label98
   346 draw line :displayItem:x :y *tmp97 *tmp98
   347 draw line :displayItem:x *tmp98 *tmp97 *tmp98
 
   349 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   350 jump *label86 always
   351 label *label97
-    * jump *label99 notEqual *tmp53 6
   352 label *label100
   353 draw lineRect *tmp108 *tmp110 9 8
   354 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   355 jump *label86 always
   356 label *label99
-    * jump *label101 notEqual *tmp53 7
   357 label *label102
   358 draw line :displayItem:x :y *tmp114 *tmp115
   359 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   360 jump *label86 always
   361 label *label101
-    * jump *label103 notEqual *tmp53 8
   362 label *label104
   363 draw lineRect *tmp120 *tmp122 9 14
   364 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   365 jump *label86 always
   366 label *label103
-    * jump *label105 notEqual *tmp53 9
   367 label *label106
   368 draw lineRect *tmp127 *tmp130 9 8
   369 draw line :displayItem:x :y *tmp131 *tmp128
   370 label *label105
+  371 label *label140
   372 label *label86
   373 label *label85
   374 jump *label84 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * jump *label5 lessThanEq :n 0
+   10 jump *label5 lessThanEq .LINKS 0
    11 label *label138
    12 op sub :n :n 1
    13 getlink :block :n

Modifications by Convert case at line 165:5 (+1 instructions):
 
   375 label *label83
   376 op mod *tmp133 :displayItem:amount 10
   377 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label109 notEqual *tmp133 0
+  378 multijump *label154 *tmp133 0 (m:*label153)
+  379 multilabel *label154 (m:*label153)
+  380 jump *label110 always
+  381 multilabel *label155 (m:*label153)
+  382 jump *label112 always
+  383 multilabel *label156 (m:*label153)
+  384 jump *label114 always
+  385 multilabel *label157 (m:*label153)
+  386 jump *label116 always
+  387 multilabel *label158 (m:*label153)
+  388 jump *label118 always
+  389 multilabel *label159 (m:*label153)
+  390 jump *label120 always
+  391 multilabel *label160 (m:*label153)
+  392 jump *label122 always
+  393 multilabel *label161 (m:*label153)
+  394 jump *label124 always
+  395 multilabel *label162 (m:*label153)
+  396 jump *label126 always
+  397 multilabel *label163 (m:*label153)
+  398 jump *label128 always
   399 label *label110
   400 op sub *tmp138 :displayItem:x 1
   401 op sub *tmp140 :y 1
   402 draw lineRect *tmp138 *tmp140 9 14
   403 jump *label108 always
   404 label *label109
-    * jump *label111 notEqual *tmp133 1
   405 label *label112
   406 op add *tmp142 :displayItem:x 6
   407 op add *tmp145 :y 12
   408 draw line *tmp142 :y *tmp142 *tmp145
   409 jump *label108 always
   410 label *label111
-    * jump *label113 notEqual *tmp133 2
   411 label *label114
   412 op add *tmp146 :displayItem:x 7
   413 draw line :displayItem:x :y *tmp146 :y
 
   419 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   420 jump *label108 always
   421 label *label113
-    * jump *label115 notEqual *tmp133 3
   422 label *label116
   423 op add *tmp158 :displayItem:x 7
   424 op add *tmp160 :y 12
 
   429 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   430 jump *label108 always
   431 label *label115
-    * jump *label117 notEqual *tmp133 4
   432 label *label118
   433 op add *tmp168 :displayItem:x 7
   434 op add *tmp170 :y 12
 
   438 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   439 jump *label108 always
   440 label *label117
-    * jump *label119 notEqual *tmp133 5
   441 label *label120
   442 op add *tmp176 :displayItem:x 7
   443 draw line :displayItem:x :y *tmp176 :y
 
   449 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   450 jump *label108 always
   451 label *label119
-    * jump *label121 notEqual *tmp133 6
   452 label *label122
   453 op add *tmp188 :y 12
   454 draw line :displayItem:x :y :displayItem:x *tmp188
 
   460 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   461 jump *label108 always
   462 label *label121
-    * jump *label123 notEqual *tmp133 7
   463 label *label124
   464 op add *tmp200 :displayItem:x 6
   465 op add *tmp203 :y 12
 
   467 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   468 jump *label108 always
   469 label *label123
-    * jump *label125 notEqual *tmp133 8
   470 label *label126
   471 op sub *tmp209 :displayItem:x 1
   472 op sub *tmp211 :y 1
 
   476 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   477 jump *label108 always
   478 label *label125
-    * jump *label127 notEqual *tmp133 9
   479 label *label128
   480 op add *tmp215 :displayItem:x 7
   481 draw line :displayItem:x :y *tmp215 :y
 
   486 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   487 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   488 label *label127
+  489 label *label152
   490 label *label108
   491 label *label107
   492 label *label84

Modifications by Unroll loop at line 152:5 (+535 instructions):
 
   288 label *label79
   289 label *label77
   290 label *label71
-    * set :displayItem:i 0
-    * label *label80
-    * label *label139
-    * jump *label83 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label142 *tmp53 0 (m:*label141)
-    * multilabel *label142 (m:*label141)
-    * jump *label88 always
-    * multilabel *label143 (m:*label141)
-    * jump *label90 always
-    * multilabel *label144 (m:*label141)
-    * jump *label92 always
-    * multilabel *label145 (m:*label141)
-    * jump *label94 always
-    * multilabel *label146 (m:*label141)
-    * jump *label96 always
-    * multilabel *label147 (m:*label141)
-    * jump *label98 always
-    * multilabel *label148 (m:*label141)
-    * jump *label100 always
-    * multilabel *label149 (m:*label141)
-    * jump *label102 always
-    * multilabel *label150 (m:*label141)
-    * jump *label104 always
-    * multilabel *label151 (m:*label141)
-    * jump *label106 always
-    * label *label88
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label86 always
-    * label *label87
-    * label *label90
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label86 always
-    * label *label89
-    * label *label92
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label86 always
-    * label *label91
-    * label *label94
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label86 always
-    * label *label93
-    * label *label96
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label86 always
-    * label *label95
-    * label *label98
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label86 always
-    * label *label97
-    * label *label100
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label86 always
-    * label *label99
-    * label *label102
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label86 always
-    * label *label101
-    * label *label104
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label86 always
-    * label *label103
-    * label *label106
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label105
-    * label *label140
-    * label *label86
-    * label *label85
-    * jump *label84 always
-    * label *label83
-    * op mod *tmp133 :displayItem:amount 10
-    * # "Function: inline def drawDigit(in x, in y, in digit)"
-    * multijump *label154 *tmp133 0 (m:*label153)
-    * multilabel *label154 (m:*label153)
-    * jump *label110 always
-    * multilabel *label155 (m:*label153)
-    * jump *label112 always
-    * multilabel *label156 (m:*label153)
-    * jump *label114 always
-    * multilabel *label157 (m:*label153)
-    * jump *label116 always
-    * multilabel *label158 (m:*label153)
-    * jump *label118 always
-    * multilabel *label159 (m:*label153)
-    * jump *label120 always
-    * multilabel *label160 (m:*label153)
-    * jump *label122 always
-    * multilabel *label161 (m:*label153)
-    * jump *label124 always
-    * multilabel *label162 (m:*label153)
-    * jump *label126 always
-    * multilabel *label163 (m:*label153)
-    * jump *label128 always
-    * label *label110
-    * op sub *tmp138 :displayItem:x 1
-    * op sub *tmp140 :y 1
-    * draw lineRect *tmp138 *tmp140 9 14
-    * jump *label108 always
-    * label *label109
-    * label *label112
-    * op add *tmp142 :displayItem:x 6
-    * op add *tmp145 :y 12
-    * draw line *tmp142 :y *tmp142 *tmp145
-    * jump *label108 always
-    * label *label111
-    * label *label114
-    * op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp146 :y
-    * op add *tmp147 :y 6
-    * draw line :displayItem:x :y :displayItem:x *tmp147
-    * draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp154 :y 12
-    * draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem:x *tmp154 *tmp146 *tmp154
-    * jump *label108 always
-    * label *label113
-    * label *label116
-    * op add *tmp158 :displayItem:x 7
-    * op add *tmp160 :y 12
-    * draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem:x :y *tmp158 :y
-    * op add *tmp162 :y 6
-    * draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem:x *tmp160 *tmp158 *tmp160
-    * jump *label108 always
-    * label *label115
-    * label *label118
-    * op add *tmp168 :displayItem:x 7
-    * op add *tmp170 :y 12
-    * draw line *tmp168 :y *tmp168 *tmp170
-    * op add *tmp171 :y 6
-    * draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem:x *tmp171 :displayItem:x *tmp170
-    * jump *label108 always
-    * label *label117
-    * label *label120
-    * op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp176 :y
-    * op add *tmp179 :y 6
-    * draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp184 :y 12
-    * draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * draw line :displayItem:x *tmp184 *tmp176 *tmp184
-    * jump *label108 always
-    * label *label119
-    * label *label122
-    * op add *tmp188 :y 12
-    * draw line :displayItem:x :y :displayItem:x *tmp188
-    * op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp189 :y
-    * op add *tmp192 :y 6
-    * draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem:x *tmp188 *tmp189 *tmp188
-    * jump *label108 always
-    * label *label121
-    * label *label124
-    * op add *tmp200 :displayItem:x 6
-    * op add *tmp203 :y 12
-    * draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem:x *tmp203 *tmp200 *tmp203
-    * jump *label108 always
-    * label *label123
-    * label *label126
-    * op sub *tmp209 :displayItem:x 1
-    * op sub *tmp211 :y 1
-    * draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :y 6
-    * op add *tmp213 :displayItem:x 7
-    * draw line :displayItem:x *tmp212 *tmp213 *tmp212
-    * jump *label108 always
-    * label *label125
-    * label *label128
-    * op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp215 :y
-    * op add *tmp218 :y 12
-    * draw line *tmp215 :y *tmp215 *tmp218
-    * op add *tmp219 :y 6
-    * draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label127
-    * label *label152
-    * label *label108
-    * label *label107
-    * label *label84
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label129 notEqual :displayItem:amount 0
-    * jump *label82 always
-    * label *label129
-    * label *label130
-    * label *label81
-    * op add :displayItem:i :displayItem:i 1
-    * jump *label139 lessThan :displayItem:i 5
-    * label *label82
+  291 set :displayItem:i 0
+  292 label *label164
+  293 label *label165
+  294 jump *label199 always
+  295 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  296 multijump *label166 *tmp53 0 (m:*label141)
+  297 multilabel *label166 (m:*label141)
+  298 jump *label176 always
+  299 multilabel *label167 (m:*label141)
+  300 jump *label178 always
+  301 multilabel *label168 (m:*label141)
+  302 jump *label180 always
+  303 multilabel *label169 (m:*label141)
+  304 jump *label182 always
+  305 multilabel *label170 (m:*label141)
+  306 jump *label184 always
+  307 multilabel *label171 (m:*label141)
+  308 jump *label186 always
+  309 multilabel *label172 (m:*label141)
+  310 jump *label188 always
+  311 multilabel *label173 (m:*label141)
+  312 jump *label190 always
+  313 multilabel *label174 (m:*label141)
+  314 jump *label192 always
+  315 multilabel *label175 (m:*label141)
+  316 jump *label194 always
+  317 label *label176
+  318 draw lineRect *tmp58 *tmp60 9 14
+  319 jump *label197 always
+  320 label *label177
+  321 label *label178
+  322 draw line *tmp62 :y *tmp62 *tmp65
+  323 jump *label197 always
+  324 label *label179
+  325 label *label180
+  326 draw line :displayItem:x :y *tmp66 :y
+  327 draw line :displayItem:x :y *tmp66 *tmp68
+  328 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  329 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  330 jump *label197 always
+  331 label *label181
+  332 label *label182
+  333 draw line :displayItem:x :y *tmp77 *tmp78
+  334 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  335 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  336 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  337 jump *label197 always
+  338 label *label183
+  339 label *label184
+  340 draw line *tmp88 :y *tmp88 *tmp90
+  341 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  342 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  343 jump *label197 always
+  344 label *label185
+  345 label *label186
+  346 draw line :displayItem:x :y *tmp97 *tmp98
+  347 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  348 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  349 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  350 jump *label197 always
+  351 label *label187
+  352 label *label188
+  353 draw lineRect *tmp108 *tmp110 9 8
+  354 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  355 jump *label197 always
+  356 label *label189
+  357 label *label190
+  358 draw line :displayItem:x :y *tmp114 *tmp115
+  359 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  360 jump *label197 always
+  361 label *label191
+  362 label *label192
+  363 draw lineRect *tmp120 *tmp122 9 14
+  364 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  365 jump *label197 always
+  366 label *label193
+  367 label *label194
+  368 draw lineRect *tmp127 *tmp130 9 8
+  369 draw line :displayItem:x :y *tmp131 *tmp128
+  370 label *label195
+  371 label *label196
+  372 label *label197
+  373 label *label198
+  374 jump *label233 always
+  375 label *label199
+  376 op mod *tmp133 :displayItem:amount 10
+  377 # "Function: inline def drawDigit(in x, in y, in digit)"
+  378 multijump *label200 *tmp133 0 (m:*label153)
+  379 multilabel *label200 (m:*label153)
+  380 jump *label210 always
+  381 multilabel *label201 (m:*label153)
+  382 jump *label212 always
+  383 multilabel *label202 (m:*label153)
+  384 jump *label214 always
+  385 multilabel *label203 (m:*label153)
+  386 jump *label216 always
+  387 multilabel *label204 (m:*label153)
+  388 jump *label218 always
+  389 multilabel *label205 (m:*label153)
+  390 jump *label220 always
+  391 multilabel *label206 (m:*label153)
+  392 jump *label222 always
+  393 multilabel *label207 (m:*label153)
+  394 jump *label224 always
+  395 multilabel *label208 (m:*label153)
+  396 jump *label226 always
+  397 multilabel *label209 (m:*label153)
+  398 jump *label228 always
+  399 label *label210
+  400 op sub *tmp138 :displayItem:x 1
+  401 op sub *tmp140 :y 1
+  402 draw lineRect *tmp138 *tmp140 9 14
+  403 jump *label231 always
+  404 label *label211
+  405 label *label212
+  406 op add *tmp142 :displayItem:x 6
+  407 op add *tmp145 :y 12
+  408 draw line *tmp142 :y *tmp142 *tmp145
+  409 jump *label231 always
+  410 label *label213
+  411 label *label214
+  412 op add *tmp146 :displayItem:x 7
+  413 draw line :displayItem:x :y *tmp146 :y
+  414 op add *tmp147 :y 6
+  415 draw line :displayItem:x :y :displayItem:x *tmp147
+  416 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  417 op add *tmp154 :y 12
+  418 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  419 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  420 jump *label231 always
+  421 label *label215
+  422 label *label216
+  423 op add *tmp158 :displayItem:x 7
+  424 op add *tmp160 :y 12
+  425 draw line *tmp158 :y *tmp158 *tmp160
+  426 draw line :displayItem:x :y *tmp158 :y
+  427 op add *tmp162 :y 6
+  428 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  429 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  430 jump *label231 always
+  431 label *label217
+  432 label *label218
+  433 op add *tmp168 :displayItem:x 7
+  434 op add *tmp170 :y 12
+  435 draw line *tmp168 :y *tmp168 *tmp170
+  436 op add *tmp171 :y 6
+  437 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  438 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  439 jump *label231 always
+  440 label *label219
+  441 label *label220
+  442 op add *tmp176 :displayItem:x 7
+  443 draw line :displayItem:x :y *tmp176 :y
+  444 op add *tmp179 :y 6
+  445 draw line *tmp176 :y *tmp176 *tmp179
+  446 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  447 op add *tmp184 :y 12
+  448 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  449 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  450 jump *label231 always
+  451 label *label221
+  452 label *label222
+  453 op add *tmp188 :y 12
+  454 draw line :displayItem:x :y :displayItem:x *tmp188
+  455 op add *tmp189 :displayItem:x 7
+  456 draw line :displayItem:x :y *tmp189 :y
+  457 op add *tmp192 :y 6
+  458 draw line *tmp189 :y *tmp189 *tmp192
+  459 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  460 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  461 jump *label231 always
+  462 label *label223
+  463 label *label224
+  464 op add *tmp200 :displayItem:x 6
+  465 op add *tmp203 :y 12
+  466 draw line *tmp200 :y *tmp200 *tmp203
+  467 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  468 jump *label231 always
+  469 label *label225
+  470 label *label226
+  471 op sub *tmp209 :displayItem:x 1
+  472 op sub *tmp211 :y 1
+  473 draw lineRect *tmp209 *tmp211 9 14
+  474 op add *tmp212 :y 6
+  475 op add *tmp213 :displayItem:x 7
+  476 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  477 jump *label231 always
+  478 label *label227
+  479 label *label228
+  480 op add *tmp215 :displayItem:x 7
+  481 draw line :displayItem:x :y *tmp215 :y
+  482 op add *tmp218 :y 12
+  483 draw line *tmp215 :y *tmp215 *tmp218
+  484 op add *tmp219 :y 6
+  485 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  486 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  487 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  488 label *label229
+  489 label *label230
+  490 label *label231
+  491 label *label232
+  492 label *label233
+  493 op sub :displayItem:x :displayItem:x 11
+  494 op idiv :displayItem:amount :displayItem:amount 10
+  495 jump *label234 notEqual :displayItem:amount 0
+  496 jump *label82 always
+  497 label *label234
+  498 label *label235
+  499 label *label236
+  500 op add :displayItem:i :displayItem:i 1
+  501 label *label239
+  502 jump *label273 always
+  503 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  504 multijump *label240 *tmp53 0 (m:*label141)
+  505 multilabel *label240 (m:*label141)
+  506 jump *label250 always
+  507 multilabel *label241 (m:*label141)
+  508 jump *label252 always
+  509 multilabel *label242 (m:*label141)
+  510 jump *label254 always
+  511 multilabel *label243 (m:*label141)
+  512 jump *label256 always
+  513 multilabel *label244 (m:*label141)
+  514 jump *label258 always
+  515 multilabel *label245 (m:*label141)
+  516 jump *label260 always
+  517 multilabel *label246 (m:*label141)
+  518 jump *label262 always
+  519 multilabel *label247 (m:*label141)
+  520 jump *label264 always
+  521 multilabel *label248 (m:*label141)
+  522 jump *label266 always
+  523 multilabel *label249 (m:*label141)
+  524 jump *label268 always
+  525 label *label250
+  526 draw lineRect *tmp58 *tmp60 9 14
+  527 jump *label271 always
+  528 label *label251
+  529 label *label252
+  530 draw line *tmp62 :y *tmp62 *tmp65
+  531 jump *label271 always
+  532 label *label253
+  533 label *label254
+  534 draw line :displayItem:x :y *tmp66 :y
+  535 draw line :displayItem:x :y *tmp66 *tmp68
+  536 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  537 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  538 jump *label271 always
+  539 label *label255
+  540 label *label256
+  541 draw line :displayItem:x :y *tmp77 *tmp78
+  542 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  543 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  544 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  545 jump *label271 always
+  546 label *label257
+  547 label *label258
+  548 draw line *tmp88 :y *tmp88 *tmp90
+  549 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  550 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  551 jump *label271 always
+  552 label *label259
+  553 label *label260
+  554 draw line :displayItem:x :y *tmp97 *tmp98
+  555 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  556 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  557 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  558 jump *label271 always
+  559 label *label261
+  560 label *label262
+  561 draw lineRect *tmp108 *tmp110 9 8
+  562 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  563 jump *label271 always
+  564 label *label263
+  565 label *label264
+  566 draw line :displayItem:x :y *tmp114 *tmp115
+  567 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  568 jump *label271 always
+  569 label *label265
+  570 label *label266
+  571 draw lineRect *tmp120 *tmp122 9 14
+  572 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  573 jump *label271 always
+  574 label *label267
+  575 label *label268
+  576 draw lineRect *tmp127 *tmp130 9 8
+  577 draw line :displayItem:x :y *tmp131 *tmp128
+  578 label *label269
+  579 label *label270
+  580 label *label271
+  581 label *label272
+  582 jump *label307 always
+  583 label *label273
+  584 op mod *tmp133 :displayItem:amount 10
+  585 # "Function: inline def drawDigit(in x, in y, in digit)"
+  586 multijump *label274 *tmp133 0 (m:*label153)
+  587 multilabel *label274 (m:*label153)
+  588 jump *label284 always
+  589 multilabel *label275 (m:*label153)
+  590 jump *label286 always
+  591 multilabel *label276 (m:*label153)
+  592 jump *label288 always
+  593 multilabel *label277 (m:*label153)
+  594 jump *label290 always
+  595 multilabel *label278 (m:*label153)
+  596 jump *label292 always
+  597 multilabel *label279 (m:*label153)
+  598 jump *label294 always
+  599 multilabel *label280 (m:*label153)
+  600 jump *label296 always
+  601 multilabel *label281 (m:*label153)
+  602 jump *label298 always
+  603 multilabel *label282 (m:*label153)
+  604 jump *label300 always
+  605 multilabel *label283 (m:*label153)
+  606 jump *label302 always
+  607 label *label284
+  608 op sub *tmp138 :displayItem:x 1
+  609 op sub *tmp140 :y 1
+  610 draw lineRect *tmp138 *tmp140 9 14
+  611 jump *label305 always
+  612 label *label285
+  613 label *label286
+  614 op add *tmp142 :displayItem:x 6
+  615 op add *tmp145 :y 12
+  616 draw line *tmp142 :y *tmp142 *tmp145
+  617 jump *label305 always
+  618 label *label287
+  619 label *label288
+  620 op add *tmp146 :displayItem:x 7
+  621 draw line :displayItem:x :y *tmp146 :y
+  622 op add *tmp147 :y 6
+  623 draw line :displayItem:x :y :displayItem:x *tmp147
+  624 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  625 op add *tmp154 :y 12
+  626 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  627 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  628 jump *label305 always
+  629 label *label289
+  630 label *label290
+  631 op add *tmp158 :displayItem:x 7
+  632 op add *tmp160 :y 12
+  633 draw line *tmp158 :y *tmp158 *tmp160
+  634 draw line :displayItem:x :y *tmp158 :y
+  635 op add *tmp162 :y 6
+  636 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  637 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  638 jump *label305 always
+  639 label *label291
+  640 label *label292
+  641 op add *tmp168 :displayItem:x 7
+  642 op add *tmp170 :y 12
+  643 draw line *tmp168 :y *tmp168 *tmp170
+  644 op add *tmp171 :y 6
+  645 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  646 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  647 jump *label305 always
+  648 label *label293
+  649 label *label294
+  650 op add *tmp176 :displayItem:x 7
+  651 draw line :displayItem:x :y *tmp176 :y
+  652 op add *tmp179 :y 6
+  653 draw line *tmp176 :y *tmp176 *tmp179
+  654 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  655 op add *tmp184 :y 12
+  656 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  657 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  658 jump *label305 always
+  659 label *label295
+  660 label *label296
+  661 op add *tmp188 :y 12
+  662 draw line :displayItem:x :y :displayItem:x *tmp188
+  663 op add *tmp189 :displayItem:x 7
+  664 draw line :displayItem:x :y *tmp189 :y
+  665 op add *tmp192 :y 6
+  666 draw line *tmp189 :y *tmp189 *tmp192
+  667 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  668 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  669 jump *label305 always
+  670 label *label297
+  671 label *label298
+  672 op add *tmp200 :displayItem:x 6
+  673 op add *tmp203 :y 12
+  674 draw line *tmp200 :y *tmp200 *tmp203
+  675 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  676 jump *label305 always
+  677 label *label299
+  678 label *label300
+  679 op sub *tmp209 :displayItem:x 1
+  680 op sub *tmp211 :y 1
+  681 draw lineRect *tmp209 *tmp211 9 14
+  682 op add *tmp212 :y 6
+  683 op add *tmp213 :displayItem:x 7
+  684 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  685 jump *label305 always
+  686 label *label301
+  687 label *label302
+  688 op add *tmp215 :displayItem:x 7
+  689 draw line :displayItem:x :y *tmp215 :y
+  690 op add *tmp218 :y 12
+  691 draw line *tmp215 :y *tmp215 *tmp218
+  692 op add *tmp219 :y 6
+  693 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  694 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  695 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  696 label *label303
+  697 label *label304
+  698 label *label305
+  699 label *label306
+  700 label *label307
+  701 op sub :displayItem:x :displayItem:x 11
+  702 op idiv :displayItem:amount :displayItem:amount 10
+  703 jump *label308 notEqual :displayItem:amount 0
+  704 jump *label82 always
+  705 label *label308
+  706 label *label309
+  707 label *label310
+  708 op add :displayItem:i :displayItem:i 1
+  709 label *label313
+  710 jump *label347 always
+  711 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  712 multijump *label314 *tmp53 0 (m:*label141)
+  713 multilabel *label314 (m:*label141)
+  714 jump *label324 always
+  715 multilabel *label315 (m:*label141)
+  716 jump *label326 always
+  717 multilabel *label316 (m:*label141)
+  718 jump *label328 always
+  719 multilabel *label317 (m:*label141)
+  720 jump *label330 always
+  721 multilabel *label318 (m:*label141)
+  722 jump *label332 always
+  723 multilabel *label319 (m:*label141)
+  724 jump *label334 always
+  725 multilabel *label320 (m:*label141)
+  726 jump *label336 always
+  727 multilabel *label321 (m:*label141)
+  728 jump *label338 always
+  729 multilabel *label322 (m:*label141)
+  730 jump *label340 always
+  731 multilabel *label323 (m:*label141)
+  732 jump *label342 always
+  733 label *label324
+  734 draw lineRect *tmp58 *tmp60 9 14
+  735 jump *label345 always
+  736 label *label325
+  737 label *label326
+  738 draw line *tmp62 :y *tmp62 *tmp65
+  739 jump *label345 always
+  740 label *label327
+  741 label *label328
+  742 draw line :displayItem:x :y *tmp66 :y
+  743 draw line :displayItem:x :y *tmp66 *tmp68
+  744 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  745 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  746 jump *label345 always
+  747 label *label329
+  748 label *label330
+  749 draw line :displayItem:x :y *tmp77 *tmp78
+  750 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  751 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  752 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  753 jump *label345 always
+  754 label *label331
+  755 label *label332
+  756 draw line *tmp88 :y *tmp88 *tmp90
+  757 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  758 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  759 jump *label345 always
+  760 label *label333
+  761 label *label334
+  762 draw line :displayItem:x :y *tmp97 *tmp98
+  763 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  764 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  765 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  766 jump *label345 always
+  767 label *label335
+  768 label *label336
+  769 draw lineRect *tmp108 *tmp110 9 8
+  770 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  771 jump *label345 always
+  772 label *label337
+  773 label *label338
+  774 draw line :displayItem:x :y *tmp114 *tmp115
+  775 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  776 jump *label345 always
+  777 label *label339
+  778 label *label340
+  779 draw lineRect *tmp120 *tmp122 9 14
+  780 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  781 jump *label345 always
+  782 label *label341
+  783 label *label342
+  784 draw lineRect *tmp127 *tmp130 9 8
+  785 draw line :displayItem:x :y *tmp131 *tmp128
+  786 label *label343
+  787 label *label344
+  788 label *label345
+  789 label *label346
+  790 jump *label381 always
+  791 label *label347
+  792 op mod *tmp133 :displayItem:amount 10
+  793 # "Function: inline def drawDigit(in x, in y, in digit)"
+  794 multijump *label348 *tmp133 0 (m:*label153)
+  795 multilabel *label348 (m:*label153)
+  796 jump *label358 always
+  797 multilabel *label349 (m:*label153)
+  798 jump *label360 always
+  799 multilabel *label350 (m:*label153)
+  800 jump *label362 always
+  801 multilabel *label351 (m:*label153)
+  802 jump *label364 always
+  803 multilabel *label352 (m:*label153)
+  804 jump *label366 always
+  805 multilabel *label353 (m:*label153)
+  806 jump *label368 always
+  807 multilabel *label354 (m:*label153)
+  808 jump *label370 always
+  809 multilabel *label355 (m:*label153)
+  810 jump *label372 always
+  811 multilabel *label356 (m:*label153)
+  812 jump *label374 always
+  813 multilabel *label357 (m:*label153)
+  814 jump *label376 always
+  815 label *label358
+  816 op sub *tmp138 :displayItem:x 1
+  817 op sub *tmp140 :y 1
+  818 draw lineRect *tmp138 *tmp140 9 14
+  819 jump *label379 always
+  820 label *label359
+  821 label *label360
+  822 op add *tmp142 :displayItem:x 6
+  823 op add *tmp145 :y 12
+  824 draw line *tmp142 :y *tmp142 *tmp145
+  825 jump *label379 always
+  826 label *label361
+  827 label *label362
+  828 op add *tmp146 :displayItem:x 7
+  829 draw line :displayItem:x :y *tmp146 :y
+  830 op add *tmp147 :y 6
+  831 draw line :displayItem:x :y :displayItem:x *tmp147
+  832 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  833 op add *tmp154 :y 12
+  834 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  835 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  836 jump *label379 always
+  837 label *label363
+  838 label *label364
+  839 op add *tmp158 :displayItem:x 7
+  840 op add *tmp160 :y 12
+  841 draw line *tmp158 :y *tmp158 *tmp160
+  842 draw line :displayItem:x :y *tmp158 :y
+  843 op add *tmp162 :y 6
+  844 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  845 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  846 jump *label379 always
+  847 label *label365
+  848 label *label366
+  849 op add *tmp168 :displayItem:x 7
+  850 op add *tmp170 :y 12
+  851 draw line *tmp168 :y *tmp168 *tmp170
+  852 op add *tmp171 :y 6
+  853 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  854 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  855 jump *label379 always
+  856 label *label367
+  857 label *label368
+  858 op add *tmp176 :displayItem:x 7
+  859 draw line :displayItem:x :y *tmp176 :y
+  860 op add *tmp179 :y 6
+  861 draw line *tmp176 :y *tmp176 *tmp179
+  862 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  863 op add *tmp184 :y 12
+  864 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  865 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  866 jump *label379 always
+  867 label *label369
+  868 label *label370
+  869 op add *tmp188 :y 12
+  870 draw line :displayItem:x :y :displayItem:x *tmp188
+  871 op add *tmp189 :displayItem:x 7
+  872 draw line :displayItem:x :y *tmp189 :y
+  873 op add *tmp192 :y 6
+  874 draw line *tmp189 :y *tmp189 *tmp192
+  875 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  876 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  877 jump *label379 always
+  878 label *label371
+  879 label *label372
+  880 op add *tmp200 :displayItem:x 6
+  881 op add *tmp203 :y 12
+  882 draw line *tmp200 :y *tmp200 *tmp203
+  883 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  884 jump *label379 always
+  885 label *label373
+  886 label *label374
+  887 op sub *tmp209 :displayItem:x 1
+  888 op sub *tmp211 :y 1
+  889 draw lineRect *tmp209 *tmp211 9 14
+  890 op add *tmp212 :y 6
+  891 op add *tmp213 :displayItem:x 7
+  892 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  893 jump *label379 always
+  894 label *label375
+  895 label *label376
+  896 op add *tmp215 :displayItem:x 7
+  897 draw line :displayItem:x :y *tmp215 :y
+  898 op add *tmp218 :y 12
+  899 draw line *tmp215 :y *tmp215 *tmp218
+  900 op add *tmp219 :y 6
+  901 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  902 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  903 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  904 label *label377
+  905 label *label378
+  906 label *label379
+  907 label *label380
+  908 label *label381
+  909 op sub :displayItem:x :displayItem:x 11
+  910 op idiv :displayItem:amount :displayItem:amount 10
+  911 jump *label382 notEqual :displayItem:amount 0
+  912 jump *label82 always
+  913 label *label382
+  914 label *label383
+  915 label *label384
+  916 op add :displayItem:i :displayItem:i 1
+  917 label *label387
+  918 jump *label421 always
+  919 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  920 multijump *label388 *tmp53 0 (m:*label141)
+  921 multilabel *label388 (m:*label141)
+  922 jump *label398 always
+  923 multilabel *label389 (m:*label141)
+  924 jump *label400 always
+  925 multilabel *label390 (m:*label141)
+  926 jump *label402 always
+  927 multilabel *label391 (m:*label141)
+  928 jump *label404 always
+  929 multilabel *label392 (m:*label141)
+  930 jump *label406 always
+  931 multilabel *label393 (m:*label141)
+  932 jump *label408 always
+  933 multilabel *label394 (m:*label141)
+  934 jump *label410 always
+  935 multilabel *label395 (m:*label141)
+  936 jump *label412 always
+  937 multilabel *label396 (m:*label141)
+  938 jump *label414 always
+  939 multilabel *label397 (m:*label141)
+  940 jump *label416 always
+  941 label *label398
+  942 draw lineRect *tmp58 *tmp60 9 14
+  943 jump *label419 always
+  944 label *label399
+  945 label *label400
+  946 draw line *tmp62 :y *tmp62 *tmp65
+  947 jump *label419 always
+  948 label *label401
+  949 label *label402
+  950 draw line :displayItem:x :y *tmp66 :y
+  951 draw line :displayItem:x :y *tmp66 *tmp68
+  952 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  953 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  954 jump *label419 always
+  955 label *label403
+  956 label *label404
+  957 draw line :displayItem:x :y *tmp77 *tmp78
+  958 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  959 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  960 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  961 jump *label419 always
+  962 label *label405
+  963 label *label406
+  964 draw line *tmp88 :y *tmp88 *tmp90
+  965 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  966 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  967 jump *label419 always
+  968 label *label407
+  969 label *label408
+  970 draw line :displayItem:x :y *tmp97 *tmp98
+  971 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  972 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  973 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  974 jump *label419 always
+  975 label *label409
+  976 label *label410
+  977 draw lineRect *tmp108 *tmp110 9 8
+  978 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  979 jump *label419 always
+  980 label *label411
+  981 label *label412
+  982 draw line :displayItem:x :y *tmp114 *tmp115
+  983 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  984 jump *label419 always
+  985 label *label413
+  986 label *label414
+  987 draw lineRect *tmp120 *tmp122 9 14
+  988 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  989 jump *label419 always
+  990 label *label415
+  991 label *label416
+  992 draw lineRect *tmp127 *tmp130 9 8
+  993 draw line :displayItem:x :y *tmp131 *tmp128
+  994 label *label417
+  995 label *label418
+  996 label *label419
+  997 label *label420
+  998 jump *label455 always
+  999 label *label421
+ 1000 op mod *tmp133 :displayItem:amount 10
+ 1001 # "Function: inline def drawDigit(in x, in y, in digit)"
+ 1002 multijump *label422 *tmp133 0 (m:*label153)
+ 1003 multilabel *label422 (m:*label153)
+ 1004 jump *label432 always
+ 1005 multilabel *label423 (m:*label153)
+ 1006 jump *label434 always
+ 1007 multilabel *label424 (m:*label153)
+ 1008 jump *label436 always
+ 1009 multilabel *label425 (m:*label153)
+ 1010 jump *label438 always
+ 1011 multilabel *label426 (m:*label153)
+ 1012 jump *label440 always
+ 1013 multilabel *label427 (m:*label153)
+ 1014 jump *label442 always
+ 1015 multilabel *label428 (m:*label153)
+ 1016 jump *label444 always
+ 1017 multilabel *label429 (m:*label153)
+ 1018 jump *label446 always
+ 1019 multilabel *label430 (m:*label153)
+ 1020 jump *label448 always
+ 1021 multilabel *label431 (m:*label153)
+ 1022 jump *label450 always
+ 1023 label *label432
+ 1024 op sub *tmp138 :displayItem:x 1
+ 1025 op sub *tmp140 :y 1
+ 1026 draw lineRect *tmp138 *tmp140 9 14
+ 1027 jump *label453 always
+ 1028 label *label433
+ 1029 label *label434
+ 1030 op add *tmp142 :displayItem:x 6
+ 1031 op add *tmp145 :y 12
+ 1032 draw line *tmp142 :y *tmp142 *tmp145
+ 1033 jump *label453 always
+ 1034 label *label435
+ 1035 label *label436
+ 1036 op add *tmp146 :displayItem:x 7
+ 1037 draw line :displayItem:x :y *tmp146 :y
+ 1038 op add *tmp147 :y 6
+ 1039 draw line :displayItem:x :y :displayItem:x *tmp147
+ 1040 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+ 1041 op add *tmp154 :y 12
+ 1042 draw line *tmp146 *tmp147 *tmp146 *tmp154
+ 1043 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+ 1044 jump *label453 always
+ 1045 label *label437
+ 1046 label *label438
+ 1047 op add *tmp158 :displayItem:x 7
+ 1048 op add *tmp160 :y 12
+ 1049 draw line *tmp158 :y *tmp158 *tmp160
+ 1050 draw line :displayItem:x :y *tmp158 :y
+ 1051 op add *tmp162 :y 6
+ 1052 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+ 1053 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+ 1054 jump *label453 always
+ 1055 label *label439
+ 1056 label *label440
+ 1057 op add *tmp168 :displayItem:x 7
+ 1058 op add *tmp170 :y 12
+ 1059 draw line *tmp168 :y *tmp168 *tmp170
+ 1060 op add *tmp171 :y 6
+ 1061 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+ 1062 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+ 1063 jump *label453 always
+ 1064 label *label441
+ 1065 label *label442
+ 1066 op add *tmp176 :displayItem:x 7
+ 1067 draw line :displayItem:x :y *tmp176 :y
+ 1068 op add *tmp179 :y 6
+ 1069 draw line *tmp176 :y *tmp176 *tmp179
+ 1070 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+ 1071 op add *tmp184 :y 12
+ 1072 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+ 1073 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+ 1074 jump *label453 always
+ 1075 label *label443
+ 1076 label *label444
+ 1077 op add *tmp188 :y 12
+ 1078 draw line :displayItem:x :y :displayItem:x *tmp188
+ 1079 op add *tmp189 :displayItem:x 7
+ 1080 draw line :displayItem:x :y *tmp189 :y
+ 1081 op add *tmp192 :y 6
+ 1082 draw line *tmp189 :y *tmp189 *tmp192
+ 1083 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+ 1084 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+ 1085 jump *label453 always
+ 1086 label *label445
+ 1087 label *label446
+ 1088 op add *tmp200 :displayItem:x 6
+ 1089 op add *tmp203 :y 12
+ 1090 draw line *tmp200 :y *tmp200 *tmp203
+ 1091 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+ 1092 jump *label453 always
+ 1093 label *label447
+ 1094 label *label448
+ 1095 op sub *tmp209 :displayItem:x 1
+ 1096 op sub *tmp211 :y 1
+ 1097 draw lineRect *tmp209 *tmp211 9 14
+ 1098 op add *tmp212 :y 6
+ 1099 op add *tmp213 :displayItem:x 7
+ 1100 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+ 1101 jump *label453 always
+ 1102 label *label449
+ 1103 label *label450
+ 1104 op add *tmp215 :displayItem:x 7
+ 1105 draw line :displayItem:x :y *tmp215 :y
+ 1106 op add *tmp218 :y 12
+ 1107 draw line *tmp215 :y *tmp215 *tmp218
+ 1108 op add *tmp219 :y 6
+ 1109 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+ 1110 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+ 1111 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+ 1112 label *label451
+ 1113 label *label452
+ 1114 label *label453
+ 1115 label *label454
+ 1116 label *label455
+ 1117 op sub :displayItem:x :displayItem:x 11
+ 1118 op idiv :displayItem:amount :displayItem:amount 10
+ 1119 jump *label456 notEqual :displayItem:amount 0
+ 1120 jump *label82 always
+ 1121 label *label456
+ 1122 label *label457
+ 1123 label *label458
+ 1124 op add :displayItem:i :displayItem:i 1
+ 1125 label *label461
+ 1126 jump *label495 always
+ 1127 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+ 1128 multijump *label462 *tmp53 0 (m:*label141)
+ 1129 multilabel *label462 (m:*label141)
+ 1130 jump *label472 always
+ 1131 multilabel *label463 (m:*label141)
+ 1132 jump *label474 always
+ 1133 multilabel *label464 (m:*label141)
+ 1134 jump *label476 always
+ 1135 multilabel *label465 (m:*label141)
+ 1136 jump *label478 always
+ 1137 multilabel *label466 (m:*label141)
+ 1138 jump *label480 always
+ 1139 multilabel *label467 (m:*label141)
+ 1140 jump *label482 always
+ 1141 multilabel *label468 (m:*label141)
+ 1142 jump *label484 always
+ 1143 multilabel *label469 (m:*label141)
+ 1144 jump *label486 always
+ 1145 multilabel *label470 (m:*label141)
+ 1146 jump *label488 always
+ 1147 multilabel *label471 (m:*label141)
+ 1148 jump *label490 always
+ 1149 label *label472
+ 1150 draw lineRect *tmp58 *tmp60 9 14
+ 1151 jump *label493 always
+ 1152 label *label473
+ 1153 label *label474
+ 1154 draw line *tmp62 :y *tmp62 *tmp65
+ 1155 jump *label493 always
+ 1156 label *label475
+ 1157 label *label476
+ 1158 draw line :displayItem:x :y *tmp66 :y
+ 1159 draw line :displayItem:x :y *tmp66 *tmp68
+ 1160 draw line *tmp66 *tmp68 *tmp66 *tmp72
+ 1161 draw line *tmp73 *tmp72 *tmp66 *tmp72
+ 1162 jump *label493 always
+ 1163 label *label477
+ 1164 label *label478
+ 1165 draw line :displayItem:x :y *tmp77 *tmp78
+ 1166 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+ 1167 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+ 1168 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+ 1169 jump *label493 always
+ 1170 label *label479
+ 1171 label *label480
+ 1172 draw line *tmp88 :y *tmp88 *tmp90
+ 1173 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+ 1174 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+ 1175 jump *label493 always
+ 1176 label *label481
+ 1177 label *label482
+ 1178 draw line :displayItem:x :y *tmp97 *tmp98
+ 1179 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+ 1180 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+ 1181 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+ 1182 jump *label493 always
+ 1183 label *label483
+ 1184 label *label484
+ 1185 draw lineRect *tmp108 *tmp110 9 8
+ 1186 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+ 1187 jump *label493 always
+ 1188 label *label485
+ 1189 label *label486
+ 1190 draw line :displayItem:x :y *tmp114 *tmp115
+ 1191 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+ 1192 jump *label493 always
+ 1193 label *label487
+ 1194 label *label488
+ 1195 draw lineRect *tmp120 *tmp122 9 14
+ 1196 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+ 1197 jump *label493 always
+ 1198 label *label489
+ 1199 label *label490
+ 1200 draw lineRect *tmp127 *tmp130 9 8
+ 1201 draw line :displayItem:x :y *tmp131 *tmp128
+ 1202 label *label491
+ 1203 label *label492
+ 1204 label *label493
+ 1205 label *label494
+ 1206 jump *label529 always
+ 1207 label *label495
+ 1208 op mod *tmp133 :displayItem:amount 10
+ 1209 # "Function: inline def drawDigit(in x, in y, in digit)"
+ 1210 multijump *label496 *tmp133 0 (m:*label153)
+ 1211 multilabel *label496 (m:*label153)
+ 1212 jump *label506 always
+ 1213 multilabel *label497 (m:*label153)
+ 1214 jump *label508 always
+ 1215 multilabel *label498 (m:*label153)
+ 1216 jump *label510 always
+ 1217 multilabel *label499 (m:*label153)
+ 1218 jump *label512 always
+ 1219 multilabel *label500 (m:*label153)
+ 1220 jump *label514 always
+ 1221 multilabel *label501 (m:*label153)
+ 1222 jump *label516 always
+ 1223 multilabel *label502 (m:*label153)
+ 1224 jump *label518 always
+ 1225 multilabel *label503 (m:*label153)
+ 1226 jump *label520 always
+ 1227 multilabel *label504 (m:*label153)
+ 1228 jump *label522 always
+ 1229 multilabel *label505 (m:*label153)
+ 1230 jump *label524 always
+ 1231 label *label506
+ 1232 op sub *tmp138 :displayItem:x 1
+ 1233 op sub *tmp140 :y 1
+ 1234 draw lineRect *tmp138 *tmp140 9 14
+ 1235 jump *label527 always
+ 1236 label *label507
+ 1237 label *label508
+ 1238 op add *tmp142 :displayItem:x 6
+ 1239 op add *tmp145 :y 12
+ 1240 draw line *tmp142 :y *tmp142 *tmp145
+ 1241 jump *label527 always
+ 1242 label *label509
+ 1243 label *label510
+ 1244 op add *tmp146 :displayItem:x 7
+ 1245 draw line :displayItem:x :y *tmp146 :y
+ 1246 op add *tmp147 :y 6
+ 1247 draw line :displayItem:x :y :displayItem:x *tmp147
+ 1248 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+ 1249 op add *tmp154 :y 12
+ 1250 draw line *tmp146 *tmp147 *tmp146 *tmp154
+ 1251 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+ 1252 jump *label527 always
+ 1253 label *label511
+ 1254 label *label512
+ 1255 op add *tmp158 :displayItem:x 7
+ 1256 op add *tmp160 :y 12
+ 1257 draw line *tmp158 :y *tmp158 *tmp160
+ 1258 draw line :displayItem:x :y *tmp158 :y
+ 1259 op add *tmp162 :y 6
+ 1260 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+ 1261 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+ 1262 jump *label527 always
+ 1263 label *label513
+ 1264 label *label514
+ 1265 op add *tmp168 :displayItem:x 7
+ 1266 op add *tmp170 :y 12
+ 1267 draw line *tmp168 :y *tmp168 *tmp170
+ 1268 op add *tmp171 :y 6
+ 1269 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+ 1270 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+ 1271 jump *label527 always
+ 1272 label *label515
+ 1273 label *label516
+ 1274 op add *tmp176 :displayItem:x 7
+ 1275 draw line :displayItem:x :y *tmp176 :y
+ 1276 op add *tmp179 :y 6
+ 1277 draw line *tmp176 :y *tmp176 *tmp179
+ 1278 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+ 1279 op add *tmp184 :y 12
+ 1280 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+ 1281 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+ 1282 jump *label527 always
+ 1283 label *label517
+ 1284 label *label518
+ 1285 op add *tmp188 :y 12
+ 1286 draw line :displayItem:x :y :displayItem:x *tmp188
+ 1287 op add *tmp189 :displayItem:x 7
+ 1288 draw line :displayItem:x :y *tmp189 :y
+ 1289 op add *tmp192 :y 6
+ 1290 draw line *tmp189 :y *tmp189 *tmp192
+ 1291 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+ 1292 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+ 1293 jump *label527 always
+ 1294 label *label519
+ 1295 label *label520
+ 1296 op add *tmp200 :displayItem:x 6
+ 1297 op add *tmp203 :y 12
+ 1298 draw line *tmp200 :y *tmp200 *tmp203
+ 1299 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+ 1300 jump *label527 always
+ 1301 label *label521
+ 1302 label *label522
+ 1303 op sub *tmp209 :displayItem:x 1
+ 1304 op sub *tmp211 :y 1
+ 1305 draw lineRect *tmp209 *tmp211 9 14
+ 1306 op add *tmp212 :y 6
+ 1307 op add *tmp213 :displayItem:x 7
+ 1308 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+ 1309 jump *label527 always
+ 1310 label *label523
+ 1311 label *label524
+ 1312 op add *tmp215 :displayItem:x 7
+ 1313 draw line :displayItem:x :y *tmp215 :y
+ 1314 op add *tmp218 :y 12
+ 1315 draw line *tmp215 :y *tmp215 *tmp218
+ 1316 op add *tmp219 :y 6
+ 1317 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+ 1318 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+ 1319 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+ 1320 label *label525
+ 1321 label *label526
+ 1322 label *label527
+ 1323 label *label528
+ 1324 label *label529
+ 1325 op sub :displayItem:x :displayItem:x 11
+ 1326 op idiv :displayItem:amount :displayItem:amount 10
+ 1327 jump *label530 notEqual :displayItem:amount 0
+ 1328 jump *label82 always
+ 1329 label *label530
+ 1330 label *label531
+ 1331 label *label532
+ 1332 op add :displayItem:i :displayItem:i 1
+ 1333 label *label82
  1334 label *label69
  1335 op add :index :index 1
  1336 op sub :y :y 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   323 jump *label197 always
   324 label *label179
   325 label *label180
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
+  326 draw line :x :y *tmp66 :y
+  327 draw line :x :y *tmp66 *tmp68
   328 draw line *tmp66 *tmp68 *tmp66 *tmp72
   329 draw line *tmp73 *tmp72 *tmp66 *tmp72
   330 jump *label197 always
   331 label *label181
   332 label *label182
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  333 draw line :x :y *tmp77 *tmp78
+  334 draw line :x *tmp78 *tmp77 *tmp78
+  335 draw line :x *tmp78 *tmp77 *tmp84
+  336 draw line :x *tmp84 *tmp77 *tmp84
   337 jump *label197 always
   338 label *label183
   339 label *label184
   340 draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  341 draw line :x *tmp90 *tmp88 *tmp90
+  342 draw line :x *tmp90 *tmp88 *tmp96
   343 jump *label197 always
   344 label *label185
   345 label *label186
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  346 draw line :x :y *tmp97 *tmp98
+  347 draw line :x *tmp98 *tmp97 *tmp98
+  348 draw line :x *tmp98 :x *tmp103
+  349 draw line :x *tmp103 *tmp97 *tmp103
   350 jump *label197 always
   351 label *label187
   352 label *label188
   353 draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  354 draw line :x *tmp111 *tmp112 *tmp113
   355 jump *label197 always
   356 label *label189
   357 label *label190
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  358 draw line :x :y *tmp114 *tmp115
+  359 draw line :x *tmp115 *tmp114 *tmp115
   360 jump *label197 always
   361 label *label191
   362 label *label192
   363 draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  364 draw line :x *tmp123 *tmp124 *tmp123
   365 jump *label197 always
   366 label *label193
   367 label *label194
   368 draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
+  369 draw line :x :y *tmp131 *tmp128
   370 label *label195
   371 label *label196
   372 label *label197
 
   397 multilabel *label209 (m:*label153)
   398 jump *label228 always
   399 label *label210
-    * op sub *tmp138 :displayItem:x 1
+  400 op sub *tmp138 :x 1
   401 op sub *tmp140 :y 1
   402 draw lineRect *tmp138 *tmp140 9 14
   403 jump *label231 always
   404 label *label211
   405 label *label212
-    * op add *tmp142 :displayItem:x 6
+  406 op add *tmp142 :x 6
   407 op add *tmp145 :y 12
   408 draw line *tmp142 :y *tmp142 *tmp145
   409 jump *label231 always
   410 label *label213
   411 label *label214
-    * op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp146 :y
+  412 op add *tmp146 :x 7
+  413 draw line :x :y *tmp146 :y
   414 op add *tmp147 :y 6
-    * draw line :displayItem:x :y :displayItem:x *tmp147
-    * draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  415 draw line :x :y :x *tmp147
+  416 draw line :x *tmp147 *tmp146 *tmp147
   417 op add *tmp154 :y 12
   418 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  419 draw line :x *tmp154 *tmp146 *tmp154
   420 jump *label231 always
   421 label *label215
   422 label *label216
-    * op add *tmp158 :displayItem:x 7
+  423 op add *tmp158 :x 7
   424 op add *tmp160 :y 12
   425 draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem:x :y *tmp158 :y
+  426 draw line :x :y *tmp158 :y
   427 op add *tmp162 :y 6
-    * draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  428 draw line :x *tmp162 *tmp158 *tmp162
+  429 draw line :x *tmp160 *tmp158 *tmp160
   430 jump *label231 always
   431 label *label217
   432 label *label218
-    * op add *tmp168 :displayItem:x 7
+  433 op add *tmp168 :x 7
   434 op add *tmp170 :y 12
   435 draw line *tmp168 :y *tmp168 *tmp170
   436 op add *tmp171 :y 6
-    * draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  437 draw line :x *tmp171 *tmp168 *tmp171
+  438 draw line :x *tmp171 :x *tmp170
   439 jump *label231 always
   440 label *label219
   441 label *label220
-    * op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp176 :y
+  442 op add *tmp176 :x 7
+  443 draw line :x :y *tmp176 :y
   444 op add *tmp179 :y 6
   445 draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  446 draw line :x *tmp179 *tmp176 *tmp179
   447 op add *tmp184 :y 12
-    * draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  448 draw line :x *tmp179 :x *tmp184
+  449 draw line :x *tmp184 *tmp176 *tmp184
   450 jump *label231 always
   451 label *label221
   452 label *label222
   453 op add *tmp188 :y 12
-    * draw line :displayItem:x :y :displayItem:x *tmp188
-    * op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp189 :y
+  454 draw line :x :y :x *tmp188
+  455 op add *tmp189 :x 7
+  456 draw line :x :y *tmp189 :y
   457 op add *tmp192 :y 6
   458 draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  459 draw line :x *tmp192 *tmp189 *tmp192
+  460 draw line :x *tmp188 *tmp189 *tmp188
   461 jump *label231 always
   462 label *label223
   463 label *label224
-    * op add *tmp200 :displayItem:x 6
+  464 op add *tmp200 :x 6
   465 op add *tmp203 :y 12
   466 draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  467 draw line :x *tmp203 *tmp200 *tmp203
   468 jump *label231 always
   469 label *label225
   470 label *label226
-    * op sub *tmp209 :displayItem:x 1
+  471 op sub *tmp209 :x 1
   472 op sub *tmp211 :y 1
   473 draw lineRect *tmp209 *tmp211 9 14
   474 op add *tmp212 :y 6
-    * op add *tmp213 :displayItem:x 7
-    * draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  475 op add *tmp213 :x 7
+  476 draw line :x *tmp212 *tmp213 *tmp212
   477 jump *label231 always
   478 label *label227
   479 label *label228
-    * op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp215 :y
+  480 op add *tmp215 :x 7
+  481 draw line :x :y *tmp215 :y
   482 op add *tmp218 :y 12
   483 draw line *tmp215 :y *tmp215 *tmp218
   484 op add *tmp219 :y 6
-    * draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  485 draw line :x *tmp219 *tmp215 *tmp219
+  486 draw line :x *tmp219 :x *tmp218
+  487 draw line :x *tmp218 *tmp215 *tmp218
   488 label *label229
   489 label *label230
   490 label *label231
   491 label *label232
   492 label *label233
-    * op sub :displayItem:x :displayItem:x 11
+  493 op sub :displayItem:x :x 11
   494 op idiv :displayItem:amount :displayItem:amount 10
   495 jump *label234 notEqual :displayItem:amount 0
   496 jump *label82 always
   497 label *label234
   498 label *label235
   499 label *label236
-    * op add :displayItem:i :displayItem:i 1
+  500 op add :displayItem:i 0 1
   501 label *label239
   502 jump *label273 always
   503 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   705 label *label308
   706 label *label309
   707 label *label310
-    * op add :displayItem:i :displayItem:i 1
+  708 op add :displayItem:i 1 1
   709 label *label313
   710 jump *label347 always
   711 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   913 label *label382
   914 label *label383
   915 label *label384
-    * op add :displayItem:i :displayItem:i 1
+  916 op add :displayItem:i 2 1
   917 label *label387
   918 jump *label421 always
   919 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1121 label *label456
  1122 label *label457
  1123 label *label458
-    * op add :displayItem:i :displayItem:i 1
+ 1124 op add :displayItem:i 3 1
  1125 label *label461
  1126 jump *label495 always
  1127 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1322 label *label527
  1323 label *label528
  1324 label *label529
-    * op sub :displayItem:x :displayItem:x 11
  1325 op idiv :displayItem:amount :displayItem:amount 10
  1326 jump *label530 notEqual :displayItem:amount 0
  1327 jump *label82 always
  1328 label *label530
  1329 label *label531
  1330 label *label532
-    * op add :displayItem:i :displayItem:i 1
+ 1331 op add :displayItem:i 4 1
  1332 label *label82
  1333 label *label69
  1334 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   257 set *tmp35 null
   258 label *label50
   259 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem:x :x
   260 sensor :displayItem:amount .CONTAINER :item
   261 op strictEqual *tmp38 .MEMORY null
   262 jump *label70 equal *tmp38 false
 
   287 label *label79
   288 label *label77
   289 label *label71
-    * set :displayItem:i 0
   290 label *label164
   291 label *label165
   292 jump *label199 always
 
   495 label *label234
   496 label *label235
   497 label *label236
-    * op add :displayItem:i 0 1
   498 label *label239
   499 jump *label273 always
   500 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   695 label *label305
   696 label *label306
   697 label *label307
-    * op sub :displayItem:x :displayItem:x 11
+  698 op sub :displayItem:x :x 22
   699 op idiv :displayItem:amount :displayItem:amount 10
   700 jump *label308 notEqual :displayItem:amount 0
   701 jump *label82 always
   702 label *label308
   703 label *label309
   704 label *label310
-    * op add :displayItem:i 1 1
   705 label *label313
   706 jump *label347 always
   707 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   909 label *label382
   910 label *label383
   911 label *label384
-    * op add :displayItem:i 2 1
   912 label *label387
   913 jump *label421 always
   914 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1116 label *label456
  1117 label *label457
  1118 label *label458
-    * op add :displayItem:i 3 1
  1119 label *label461
  1120 jump *label495 always
  1121 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1322 label *label530
  1323 label *label531
  1324 label *label532
-    * op add :displayItem:i 4 1
  1325 label *label82
  1326 label *label69
  1327 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
   902 label *label379
   903 label *label380
   904 label *label381
-    * op sub :displayItem:x :displayItem:x 11
+  905 op sub :displayItem:x :x 33
   906 op idiv :displayItem:amount :displayItem:amount 10
   907 jump *label382 notEqual :displayItem:amount 0
   908 jump *label82 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
  1109 label *label453
  1110 label *label454
  1111 label *label455
-    * op sub :displayItem:x :displayItem:x 11
+ 1112 op sub :displayItem:x :x 44
  1113 op idiv :displayItem:amount :displayItem:amount 10
  1114 jump *label456 notEqual :displayItem:amount 0
  1115 jump *label82 always

Modifications by Unroll iteration loop at line 71:5 (+103 instructions):
 
   102 label *label23
   103 draw color 255 255 255 255
   104 set :index 0
-    * set :item @sand
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label29 (m:marker0)
-    * set :item @copper
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label30 (m:marker0)
-    * set :item @lead
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label31 (m:marker0)
-    * set :item @coal
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label32 (m:marker0)
-    * set :item @titanium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label33 (m:marker0)
-    * set :item @thorium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label34 (m:marker0)
-    * set :item @scrap
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label35 (m:marker0)
-    * set :item @graphite
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label36 (m:marker0)
-    * set :item @metaglass
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label37 (m:marker0)
-    * set :item @silicon
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label38 (m:marker0)
-    * set :item @pyratite
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label39 (m:marker0)
-    * set :item @blast-compound
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label40 (m:marker0)
-    * set :item @plastanium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label41 (m:marker0)
-    * set :item @phase-fabric
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label42 (m:marker0)
-    * set :item @surge-alloy
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label43 (m:marker0)
-    * set :item @spore-pod
-    * set *tmp26 null
-    * label *label26
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label45 notEqual :index 8
-    * set :y 152
-    * set :x 93
-    * draw color 255 255 255 255
-    * label *label45
-    * label *label46
-    * label *label27
-    * multijump *tmp26 0 0 (m:marker0)
-    * multilabel *label44 (m:marker0)
-    * label *label28
+  105 set :item @sand
+  106 label *label535
+  107 op add *tmp27 :x 8
+  108 op add *tmp30 :y 7
+  109 draw image *tmp27 *tmp30 :item 16 0
+  110 op add :index :index 1
+  111 op sub :y :y 20
+  112 jump *label536 notEqual :index 8
+  113 set :y 152
+  114 set :x 93
+  115 draw color 255 255 255 255
+  116 label *label536
+  117 label *label537
+  118 label *label538
+  119 set :item @copper
+  120 label *label541
+  121 op add *tmp27 :x 8
+  122 op add *tmp30 :y 7
+  123 draw image *tmp27 *tmp30 :item 16 0
+  124 op add :index :index 1
+  125 op sub :y :y 20
+  126 jump *label542 notEqual :index 8
+  127 set :y 152
+  128 set :x 93
+  129 draw color 255 255 255 255
+  130 label *label542
+  131 label *label543
+  132 label *label544
+  133 set :item @lead
+  134 label *label547
+  135 op add *tmp27 :x 8
+  136 op add *tmp30 :y 7
+  137 draw image *tmp27 *tmp30 :item 16 0
+  138 op add :index :index 1
+  139 op sub :y :y 20
+  140 jump *label548 notEqual :index 8
+  141 set :y 152
+  142 set :x 93
+  143 draw color 255 255 255 255
+  144 label *label548
+  145 label *label549
+  146 label *label550
+  147 set :item @coal
+  148 label *label553
+  149 op add *tmp27 :x 8
+  150 op add *tmp30 :y 7
+  151 draw image *tmp27 *tmp30 :item 16 0
+  152 op add :index :index 1
+  153 op sub :y :y 20
+  154 jump *label554 notEqual :index 8
+  155 set :y 152
+  156 set :x 93
+  157 draw color 255 255 255 255
+  158 label *label554
+  159 label *label555
+  160 label *label556
+  161 set :item @titanium
+  162 label *label559
+  163 op add *tmp27 :x 8
+  164 op add *tmp30 :y 7
+  165 draw image *tmp27 *tmp30 :item 16 0
+  166 op add :index :index 1
+  167 op sub :y :y 20
+  168 jump *label560 notEqual :index 8
+  169 set :y 152
+  170 set :x 93
+  171 draw color 255 255 255 255
+  172 label *label560
+  173 label *label561
+  174 label *label562
+  175 set :item @thorium
+  176 label *label565
+  177 op add *tmp27 :x 8
+  178 op add *tmp30 :y 7
+  179 draw image *tmp27 *tmp30 :item 16 0
+  180 op add :index :index 1
+  181 op sub :y :y 20
+  182 jump *label566 notEqual :index 8
+  183 set :y 152
+  184 set :x 93
+  185 draw color 255 255 255 255
+  186 label *label566
+  187 label *label567
+  188 label *label568
+  189 set :item @scrap
+  190 label *label571
+  191 op add *tmp27 :x 8
+  192 op add *tmp30 :y 7
+  193 draw image *tmp27 *tmp30 :item 16 0
+  194 op add :index :index 1
+  195 op sub :y :y 20
+  196 jump *label572 notEqual :index 8
+  197 set :y 152
+  198 set :x 93
+  199 draw color 255 255 255 255
+  200 label *label572
+  201 label *label573
+  202 label *label574
+  203 set :item @graphite
+  204 label *label577
+  205 op add *tmp27 :x 8
+  206 op add *tmp30 :y 7
+  207 draw image *tmp27 *tmp30 :item 16 0
+  208 op add :index :index 1
+  209 op sub :y :y 20
+  210 jump *label578 notEqual :index 8
+  211 set :y 152
+  212 set :x 93
+  213 draw color 255 255 255 255
+  214 label *label578
+  215 label *label579
+  216 label *label580
+  217 set :item @metaglass
+  218 label *label583
+  219 op add *tmp27 :x 8
+  220 op add *tmp30 :y 7
+  221 draw image *tmp27 *tmp30 :item 16 0
+  222 op add :index :index 1
+  223 op sub :y :y 20
+  224 jump *label584 notEqual :index 8
+  225 set :y 152
+  226 set :x 93
+  227 draw color 255 255 255 255
+  228 label *label584
+  229 label *label585
+  230 label *label586
+  231 set :item @silicon
+  232 label *label589
+  233 op add *tmp27 :x 8
+  234 op add *tmp30 :y 7
+  235 draw image *tmp27 *tmp30 :item 16 0
+  236 op add :index :index 1
+  237 op sub :y :y 20
+  238 jump *label590 notEqual :index 8
+  239 set :y 152
+  240 set :x 93
+  241 draw color 255 255 255 255
+  242 label *label590
+  243 label *label591
+  244 label *label592
+  245 set :item @pyratite
+  246 label *label595
+  247 op add *tmp27 :x 8
+  248 op add *tmp30 :y 7
+  249 draw image *tmp27 *tmp30 :item 16 0
+  250 op add :index :index 1
+  251 op sub :y :y 20
+  252 jump *label596 notEqual :index 8
+  253 set :y 152
+  254 set :x 93
+  255 draw color 255 255 255 255
+  256 label *label596
+  257 label *label597
+  258 label *label598
+  259 set :item @blast-compound
+  260 label *label601
+  261 op add *tmp27 :x 8
+  262 op add *tmp30 :y 7
+  263 draw image *tmp27 *tmp30 :item 16 0
+  264 op add :index :index 1
+  265 op sub :y :y 20
+  266 jump *label602 notEqual :index 8
+  267 set :y 152
+  268 set :x 93
+  269 draw color 255 255 255 255
+  270 label *label602
+  271 label *label603
+  272 label *label604
+  273 set :item @plastanium
+  274 label *label607
+  275 op add *tmp27 :x 8
+  276 op add *tmp30 :y 7
+  277 draw image *tmp27 *tmp30 :item 16 0
+  278 op add :index :index 1
+  279 op sub :y :y 20
+  280 jump *label608 notEqual :index 8
+  281 set :y 152
+  282 set :x 93
+  283 draw color 255 255 255 255
+  284 label *label608
+  285 label *label609
+  286 label *label610
+  287 set :item @phase-fabric
+  288 label *label613
+  289 op add *tmp27 :x 8
+  290 op add *tmp30 :y 7
+  291 draw image *tmp27 *tmp30 :item 16 0
+  292 op add :index :index 1
+  293 op sub :y :y 20
+  294 jump *label614 notEqual :index 8
+  295 set :y 152
+  296 set :x 93
+  297 draw color 255 255 255 255
+  298 label *label614
+  299 label *label615
+  300 label *label616
+  301 set :item @surge-alloy
+  302 label *label619
+  303 op add *tmp27 :x 8
+  304 op add *tmp30 :y 7
+  305 draw image *tmp27 *tmp30 :item 16 0
+  306 op add :index :index 1
+  307 op sub :y :y 20
+  308 jump *label620 notEqual :index 8
+  309 set :y 152
+  310 set :x 93
+  311 draw color 255 255 255 255
+  312 label *label620
+  313 label *label621
+  314 label *label622
+  315 set :item @spore-pod
+  316 label *label625
+  317 op add *tmp27 :x 8
+  318 op add *tmp30 :y 7
+  319 draw image *tmp27 *tmp30 :item 16 0
+  320 op add :index :index 1
+  321 op sub :y :y 20
+  322 jump *label626 notEqual :index 8
+  323 set :y 152
+  324 set :x 93
+  325 draw color 255 255 255 255
+  326 label *label626
+  327 label *label627
+  328 label *label628
+  329 label *label28
   330 drawflush display1
   331 set :x 71
   332 set :y 152

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   104 set :index 0
   105 set :item @sand
   106 label *label535
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label536 notEqual :index 8
+  107 op add *tmp27 7 8
+  108 op add *tmp30 152 7
+  109 draw image 15 159 @sand 16 0
+  110 op add :index 0 1
+  111 op sub :y 152 20
+  112 jump *label536 notEqual 1 8
   113 set :y 152
   114 set :x 93
   115 draw color 255 255 255 255
 
   118 label *label538
   119 set :item @copper
   120 label *label541
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label542 notEqual :index 8
+  121 op add *tmp27 7 8
+  122 op add *tmp30 132 7
+  123 draw image 15 139 @copper 16 0
+  124 op add :index 1 1
+  125 op sub :y 132 20
+  126 jump *label542 notEqual 2 8
   127 set :y 152
   128 set :x 93
   129 draw color 255 255 255 255
 
   132 label *label544
   133 set :item @lead
   134 label *label547
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label548 notEqual :index 8
+  135 op add *tmp27 7 8
+  136 op add *tmp30 112 7
+  137 draw image 15 119 @lead 16 0
+  138 op add :index 2 1
+  139 op sub :y 112 20
+  140 jump *label548 notEqual 3 8
   141 set :y 152
   142 set :x 93
   143 draw color 255 255 255 255
 
   146 label *label550
   147 set :item @coal
   148 label *label553
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label554 notEqual :index 8
+  149 op add *tmp27 7 8
+  150 op add *tmp30 92 7
+  151 draw image 15 99 @coal 16 0
+  152 op add :index 3 1
+  153 op sub :y 92 20
+  154 jump *label554 notEqual 4 8
   155 set :y 152
   156 set :x 93
   157 draw color 255 255 255 255
 
   160 label *label556
   161 set :item @titanium
   162 label *label559
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label560 notEqual :index 8
+  163 op add *tmp27 7 8
+  164 op add *tmp30 72 7
+  165 draw image 15 79 @titanium 16 0
+  166 op add :index 4 1
+  167 op sub :y 72 20
+  168 jump *label560 notEqual 5 8
   169 set :y 152
   170 set :x 93
   171 draw color 255 255 255 255
 
   174 label *label562
   175 set :item @thorium
   176 label *label565
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label566 notEqual :index 8
+  177 op add *tmp27 7 8
+  178 op add *tmp30 52 7
+  179 draw image 15 59 @thorium 16 0
+  180 op add :index 5 1
+  181 op sub :y 52 20
+  182 jump *label566 notEqual 6 8
   183 set :y 152
   184 set :x 93
   185 draw color 255 255 255 255
 
   188 label *label568
   189 set :item @scrap
   190 label *label571
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label572 notEqual :index 8
+  191 op add *tmp27 7 8
+  192 op add *tmp30 32 7
+  193 draw image 15 39 @scrap 16 0
+  194 op add :index 6 1
+  195 op sub :y 32 20
+  196 jump *label572 notEqual 7 8
   197 set :y 152
   198 set :x 93
   199 draw color 255 255 255 255
 
   202 label *label574
   203 set :item @graphite
   204 label *label577
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label578 notEqual :index 8
+  205 op add *tmp27 7 8
+  206 op add *tmp30 12 7
+  207 draw image 15 19 @graphite 16 0
+  208 op add :index 7 1
+  209 op sub :y 12 20
+  210 jump *label578 notEqual 8 8
   211 set :y 152
   212 set :x 93
   213 draw color 255 255 255 255
 
   216 label *label580
   217 set :item @metaglass
   218 label *label583
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label584 notEqual :index 8
+  219 op add *tmp27 93 8
+  220 op add *tmp30 152 7
+  221 draw image 101 159 @metaglass 16 0
+  222 op add :index 8 1
+  223 op sub :y 152 20
+  224 jump *label584 notEqual 9 8
   225 set :y 152
   226 set :x 93
   227 draw color 255 255 255 255
 
   230 label *label586
   231 set :item @silicon
   232 label *label589
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label590 notEqual :index 8
+  233 op add *tmp27 93 8
+  234 op add *tmp30 132 7
+  235 draw image 101 139 @silicon 16 0
+  236 op add :index 9 1
+  237 op sub :y 132 20
+  238 jump *label590 notEqual 10 8
   239 set :y 152
   240 set :x 93
   241 draw color 255 255 255 255
 
   244 label *label592
   245 set :item @pyratite
   246 label *label595
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label596 notEqual :index 8
+  247 op add *tmp27 93 8
+  248 op add *tmp30 112 7
+  249 draw image 101 119 @pyratite 16 0
+  250 op add :index 10 1
+  251 op sub :y 112 20
+  252 jump *label596 notEqual 11 8
   253 set :y 152
   254 set :x 93
   255 draw color 255 255 255 255
 
   258 label *label598
   259 set :item @blast-compound
   260 label *label601
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label602 notEqual :index 8
+  261 op add *tmp27 93 8
+  262 op add *tmp30 92 7
+  263 draw image 101 99 @blast-compound 16 0
+  264 op add :index 11 1
+  265 op sub :y 92 20
+  266 jump *label602 notEqual 12 8
   267 set :y 152
   268 set :x 93
   269 draw color 255 255 255 255
 
   272 label *label604
   273 set :item @plastanium
   274 label *label607
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label608 notEqual :index 8
+  275 op add *tmp27 93 8
+  276 op add *tmp30 72 7
+  277 draw image 101 79 @plastanium 16 0
+  278 op add :index 12 1
+  279 op sub :y 72 20
+  280 jump *label608 notEqual 13 8
   281 set :y 152
   282 set :x 93
   283 draw color 255 255 255 255
 
   286 label *label610
   287 set :item @phase-fabric
   288 label *label613
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label614 notEqual :index 8
+  289 op add *tmp27 93 8
+  290 op add *tmp30 52 7
+  291 draw image 101 59 @phase-fabric 16 0
+  292 op add :index 13 1
+  293 op sub :y 52 20
+  294 jump *label614 notEqual 14 8
   295 set :y 152
   296 set :x 93
   297 draw color 255 255 255 255
 
   300 label *label616
   301 set :item @surge-alloy
   302 label *label619
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label620 notEqual :index 8
+  303 op add *tmp27 93 8
+  304 op add *tmp30 32 7
+  305 draw image 101 39 @surge-alloy 16 0
+  306 op add :index 14 1
+  307 op sub :y 32 20
+  308 jump *label620 notEqual 15 8
   309 set :y 152
   310 set :x 93
   311 draw color 255 255 255 255
 
   314 label *label622
   315 set :item @spore-pod
   316 label *label625
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label626 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  317 op add *tmp27 93 8
+  318 op add *tmp30 12 7
+  319 draw image 101 19 @spore-pod 16 0
+  320 op add :index 15 1
+  321 op sub :y 12 20
+  322 jump *label626 notEqual 16 8
   323 draw color 255 255 255 255
   324 label *label626
   325 label *label627

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-113 instructions):
 
    80 sensor .CAPACITY .CONTAINER @itemCapacity
    81 op div .LIMIT .CAPACITY 5
    82 draw stroke 2
-    * set :x 7
-    * set :y 152
    83 # "Function: inline def eraseImages(in first_column)"
    84 draw color 0 0 80 255
    85 jump *label21 equal true false
 
    99 label *label25
   100 label *label23
   101 draw color 255 255 255 255
-    * set :index 0
-    * set :item @sand
   102 label *label535
-    * op add *tmp27 7 8
-    * op add *tmp30 152 7
   103 draw image 15 159 @sand 16 0
-    * op add :index 0 1
-    * op sub :y 152 20
   104 jump *label536 notEqual 1 8
-    * set :y 152
-    * set :x 93
   105 draw color 255 255 255 255
   106 label *label536
   107 label *label537
   108 label *label538
-    * set :item @copper
   109 label *label541
-    * op add *tmp27 7 8
-    * op add *tmp30 132 7
   110 draw image 15 139 @copper 16 0
-    * op add :index 1 1
-    * op sub :y 132 20
   111 jump *label542 notEqual 2 8
-    * set :y 152
-    * set :x 93
   112 draw color 255 255 255 255
   113 label *label542
   114 label *label543
   115 label *label544
-    * set :item @lead
   116 label *label547
-    * op add *tmp27 7 8
-    * op add *tmp30 112 7
   117 draw image 15 119 @lead 16 0
-    * op add :index 2 1
-    * op sub :y 112 20
   118 jump *label548 notEqual 3 8
-    * set :y 152
-    * set :x 93
   119 draw color 255 255 255 255
   120 label *label548
   121 label *label549
   122 label *label550
-    * set :item @coal
   123 label *label553
-    * op add *tmp27 7 8
-    * op add *tmp30 92 7
   124 draw image 15 99 @coal 16 0
-    * op add :index 3 1
-    * op sub :y 92 20
   125 jump *label554 notEqual 4 8
-    * set :y 152
-    * set :x 93
   126 draw color 255 255 255 255
   127 label *label554
   128 label *label555
   129 label *label556
-    * set :item @titanium
   130 label *label559
-    * op add *tmp27 7 8
-    * op add *tmp30 72 7
   131 draw image 15 79 @titanium 16 0
-    * op add :index 4 1
-    * op sub :y 72 20
   132 jump *label560 notEqual 5 8
-    * set :y 152
-    * set :x 93
   133 draw color 255 255 255 255
   134 label *label560
   135 label *label561
   136 label *label562
-    * set :item @thorium
   137 label *label565
-    * op add *tmp27 7 8
-    * op add *tmp30 52 7
   138 draw image 15 59 @thorium 16 0
-    * op add :index 5 1
-    * op sub :y 52 20
   139 jump *label566 notEqual 6 8
-    * set :y 152
-    * set :x 93
   140 draw color 255 255 255 255
   141 label *label566
   142 label *label567
   143 label *label568
-    * set :item @scrap
   144 label *label571
-    * op add *tmp27 7 8
-    * op add *tmp30 32 7
   145 draw image 15 39 @scrap 16 0
-    * op add :index 6 1
-    * op sub :y 32 20
   146 jump *label572 notEqual 7 8
-    * set :y 152
-    * set :x 93
   147 draw color 255 255 255 255
   148 label *label572
   149 label *label573
   150 label *label574
-    * set :item @graphite
   151 label *label577
-    * op add *tmp27 7 8
-    * op add *tmp30 12 7
   152 draw image 15 19 @graphite 16 0
-    * op add :index 7 1
-    * op sub :y 12 20
   153 jump *label578 notEqual 8 8
-    * set :y 152
-    * set :x 93
   154 draw color 255 255 255 255
   155 label *label578
   156 label *label579
   157 label *label580
-    * set :item @metaglass
   158 label *label583
-    * op add *tmp27 93 8
-    * op add *tmp30 152 7
   159 draw image 101 159 @metaglass 16 0
-    * op add :index 8 1
-    * op sub :y 152 20
   160 jump *label584 notEqual 9 8
-    * set :y 152
-    * set :x 93
   161 draw color 255 255 255 255
   162 label *label584
   163 label *label585
   164 label *label586
-    * set :item @silicon
   165 label *label589
-    * op add *tmp27 93 8
-    * op add *tmp30 132 7
   166 draw image 101 139 @silicon 16 0
-    * op add :index 9 1
-    * op sub :y 132 20
   167 jump *label590 notEqual 10 8
-    * set :y 152
-    * set :x 93
   168 draw color 255 255 255 255
   169 label *label590
   170 label *label591
   171 label *label592
-    * set :item @pyratite
   172 label *label595
-    * op add *tmp27 93 8
-    * op add *tmp30 112 7
   173 draw image 101 119 @pyratite 16 0
-    * op add :index 10 1
-    * op sub :y 112 20
   174 jump *label596 notEqual 11 8
-    * set :y 152
-    * set :x 93
   175 draw color 255 255 255 255
   176 label *label596
   177 label *label597
   178 label *label598
-    * set :item @blast-compound
   179 label *label601
-    * op add *tmp27 93 8
-    * op add *tmp30 92 7
   180 draw image 101 99 @blast-compound 16 0
-    * op add :index 11 1
-    * op sub :y 92 20
   181 jump *label602 notEqual 12 8
-    * set :y 152
-    * set :x 93
   182 draw color 255 255 255 255
   183 label *label602
   184 label *label603
   185 label *label604
-    * set :item @plastanium
   186 label *label607
-    * op add *tmp27 93 8
-    * op add *tmp30 72 7
   187 draw image 101 79 @plastanium 16 0
-    * op add :index 12 1
-    * op sub :y 72 20
   188 jump *label608 notEqual 13 8
-    * set :y 152
-    * set :x 93
   189 draw color 255 255 255 255
   190 label *label608
   191 label *label609
   192 label *label610
-    * set :item @phase-fabric
   193 label *label613
-    * op add *tmp27 93 8
-    * op add *tmp30 52 7
   194 draw image 101 59 @phase-fabric 16 0
-    * op add :index 13 1
-    * op sub :y 52 20
   195 jump *label614 notEqual 14 8
-    * set :y 152
-    * set :x 93
   196 draw color 255 255 255 255
   197 label *label614
   198 label *label615
   199 label *label616
-    * set :item @surge-alloy
   200 label *label619
-    * op add *tmp27 93 8
-    * op add *tmp30 32 7
   201 draw image 101 39 @surge-alloy 16 0
-    * op add :index 14 1
-    * op sub :y 32 20
   202 jump *label620 notEqual 15 8
-    * set :y 152
-    * set :x 93
   203 draw color 255 255 255 255
   204 label *label620
   205 label *label621
   206 label *label622
-    * set :item @spore-pod
   207 label *label625
-    * op add *tmp27 93 8
-    * op add *tmp30 12 7
   208 draw image 101 19 @spore-pod 16 0
-    * op add :index 15 1
-    * op sub :y 12 20
   209 jump *label626 notEqual 16 8
   210 draw color 255 255 255 255
   211 label *label626

Modifications by Replicate loop condition at line 58:1 (+7 instructions):
 
    76 op equal *tmp17 .LINKS @links
    77 op land *tmp18 *tmp16 *tmp17
    78 jump *label19 equal *tmp18 false
+   79 label *label632
    80 set :start @time
    81 sensor .CAPACITY .CONTAINER @itemCapacity
    82 op div .LIMIT .CAPACITY 5
 
  1391 print "ms"
  1392 printflush message1
  1393 label *label18
-    * jump *label17 always
+ 1394 sensor *tmp12 .CONTAINER @dead
+ 1395 op equal *tmp13 *tmp12 0
+ 1396 sensor *tmp14 .DISPLAY @dead
+ 1397 op equal *tmp15 *tmp14 0
+ 1398 op land *tmp16 *tmp13 *tmp15
+ 1399 op equal *tmp17 .LINKS @links
+ 1400 op land *tmp18 *tmp16 *tmp17
+ 1401 jump *label632 notEqual *tmp18 false
  1402 label *label19
  1403 end

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
    83 draw stroke 2
    84 # "Function: inline def eraseImages(in first_column)"
    85 draw color 0 0 80 255
-    * jump *label21 equal true false
    86 draw rect 0 0 23 176
    87 jump *label22 always
    88 label *label21
 
    91 label *label20
    92 # "Function: inline def eraseImages(in first_column)"
    93 draw color 0 0 80 255
-    * jump *label24 equal false false
+   94 jump *label24 always
    95 draw rect 0 0 23 176
    96 jump *label25 always
    97 label *label24
 
   101 draw color 255 255 255 255
   102 label *label535
   103 draw image 15 159 @sand 16 0
-    * jump *label536 notEqual 1 8
+  104 jump *label536 always
   105 draw color 255 255 255 255
   106 label *label536
   107 label *label537
   108 label *label538
   109 label *label541
   110 draw image 15 139 @copper 16 0
-    * jump *label542 notEqual 2 8
+  111 jump *label542 always
   112 draw color 255 255 255 255
   113 label *label542
   114 label *label543
   115 label *label544
   116 label *label547
   117 draw image 15 119 @lead 16 0
-    * jump *label548 notEqual 3 8
+  118 jump *label548 always
   119 draw color 255 255 255 255
   120 label *label548
   121 label *label549
   122 label *label550
   123 label *label553
   124 draw image 15 99 @coal 16 0
-    * jump *label554 notEqual 4 8
+  125 jump *label554 always
   126 draw color 255 255 255 255
   127 label *label554
   128 label *label555
   129 label *label556
   130 label *label559
   131 draw image 15 79 @titanium 16 0
-    * jump *label560 notEqual 5 8
+  132 jump *label560 always
   133 draw color 255 255 255 255
   134 label *label560
   135 label *label561
   136 label *label562
   137 label *label565
   138 draw image 15 59 @thorium 16 0
-    * jump *label566 notEqual 6 8
+  139 jump *label566 always
   140 draw color 255 255 255 255
   141 label *label566
   142 label *label567
   143 label *label568
   144 label *label571
   145 draw image 15 39 @scrap 16 0
-    * jump *label572 notEqual 7 8
+  146 jump *label572 always
   147 draw color 255 255 255 255
   148 label *label572
   149 label *label573
   150 label *label574
   151 label *label577
   152 draw image 15 19 @graphite 16 0
-    * jump *label578 notEqual 8 8
   153 draw color 255 255 255 255
   154 label *label578
   155 label *label579
   156 label *label580
   157 label *label583
   158 draw image 101 159 @metaglass 16 0
-    * jump *label584 notEqual 9 8
+  159 jump *label584 always
   160 draw color 255 255 255 255
   161 label *label584
   162 label *label585
   163 label *label586
   164 label *label589
   165 draw image 101 139 @silicon 16 0
-    * jump *label590 notEqual 10 8
+  166 jump *label590 always
   167 draw color 255 255 255 255
   168 label *label590
   169 label *label591
   170 label *label592
   171 label *label595
   172 draw image 101 119 @pyratite 16 0
-    * jump *label596 notEqual 11 8
+  173 jump *label596 always
   174 draw color 255 255 255 255
   175 label *label596
   176 label *label597
   177 label *label598
   178 label *label601
   179 draw image 101 99 @blast-compound 16 0
-    * jump *label602 notEqual 12 8
+  180 jump *label602 always
   181 draw color 255 255 255 255
   182 label *label602
   183 label *label603
   184 label *label604
   185 label *label607
   186 draw image 101 79 @plastanium 16 0
-    * jump *label608 notEqual 13 8
+  187 jump *label608 always
   188 draw color 255 255 255 255
   189 label *label608
   190 label *label609
   191 label *label610
   192 label *label613
   193 draw image 101 59 @phase-fabric 16 0
-    * jump *label614 notEqual 14 8
+  194 jump *label614 always
   195 draw color 255 255 255 255
   196 label *label614
   197 label *label615
   198 label *label616
   199 label *label619
   200 draw image 101 39 @surge-alloy 16 0
-    * jump *label620 notEqual 15 8
+  201 jump *label620 always
   202 draw color 255 255 255 255
   203 label *label620
   204 label *label621
   205 label *label622
   206 label *label625
   207 draw image 101 19 @spore-pod 16 0
-    * jump *label626 notEqual 16 8
+  208 jump *label626 always
   209 draw color 255 255 255 255
   210 label *label626
   211 label *label627
 
   216 set :y 152
   217 # "Function: inline def eraseNumbers(in first_column)"
   218 draw color 0 0 80 255
-    * jump *label48 equal true false
   219 draw rect 23 0 70 176
   220 jump *label49 always
   221 label *label48
 
  1364 set :x 157
  1365 # "Function: inline def eraseNumbers(in first_column)"
  1366 draw color 0 0 80 255
-    * jump *label136 equal false false
+ 1367 jump *label136 always
  1368 draw rect 23 0 70 176
  1369 jump *label137 always
  1370 label *label136

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
  1348 label *label529
  1349 op idiv :displayItem:amount :displayItem:amount 10
  1350 jump *label530 notEqual :displayItem:amount 0
-    * jump *label82 always
  1351 label *label530
  1352 label *label531
  1353 label *label532

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
  1347 label *label528
  1348 label *label529
  1349 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label530 notEqual :displayItem:amount 0
  1350 label *label530
  1351 label *label531
  1352 label *label532

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1346 label *label527
  1347 label *label528
  1348 label *label529
-    * op idiv :displayItem:amount :displayItem:amount 10
  1349 label *label530
  1350 label *label531
  1351 label *label532

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     6 print "\n"
     7 set .LINKS @links
     8 set :n .LINKS
-    * label *label3
     9 jump *label5 lessThanEq .LINKS 0
    10 label *label138
    11 op sub :n :n 1
 
    15 print "\n"
    16 sensor *tmp5 :block @type
    17 jump *label7 notEqual *tmp5 @message
-    * label *label8
    18 set .MESSAGE :block
    19 jump *label6 always
    20 label *label7
 
    34 jump *label6 always
    35 label *label11
    36 jump *label13 notEqual *tmp5 @large-logic-display
-    * label *label14
    37 set .DISPLAY :block
    38 label *label13
    39 label *label6
-    * label *label4
    40 jump *label138 greaterThan :n 0
    41 label *label5
    42 print "Message: "
 
    58 print "No container or display."
    59 print "\n"
    60 label *label15
-    * label *label16
    61 printflush .MESSAGE
-    * label *label1
    62 jump *label0 equal .CONTAINER null
-    * label *label2
-    * label *label17
    63 sensor *tmp12 .CONTAINER @dead
    64 op equal *tmp13 *tmp12 0
    65 sensor *tmp14 .DISPLAY @dead
 
    77 draw color 0 0 80 255
    78 draw rect 0 0 23 176
    79 jump *label22 always
-    * label *label21
    80 draw rect 93 0 16 176
    81 label *label22
-    * label *label20
    82 # "Function: inline def eraseImages(in first_column)"
    83 draw color 0 0 80 255
    84 jump *label24 always
 
    87 label *label24
    88 draw rect 93 0 16 176
    89 label *label25
-    * label *label23
    90 draw color 255 255 255 255
-    * label *label535
    91 draw image 15 159 @sand 16 0
    92 jump *label536 always
    93 draw color 255 255 255 255
    94 label *label536
-    * label *label537
-    * label *label538
-    * label *label541
    95 draw image 15 139 @copper 16 0
    96 jump *label542 always
    97 draw color 255 255 255 255
    98 label *label542
-    * label *label543
-    * label *label544
-    * label *label547
    99 draw image 15 119 @lead 16 0
   100 jump *label548 always
   101 draw color 255 255 255 255
   102 label *label548
-    * label *label549
-    * label *label550
-    * label *label553
   103 draw image 15 99 @coal 16 0
   104 jump *label554 always
   105 draw color 255 255 255 255
   106 label *label554
-    * label *label555
-    * label *label556
-    * label *label559
   107 draw image 15 79 @titanium 16 0
   108 jump *label560 always
   109 draw color 255 255 255 255
   110 label *label560
-    * label *label561
-    * label *label562
-    * label *label565
   111 draw image 15 59 @thorium 16 0
   112 jump *label566 always
   113 draw color 255 255 255 255
   114 label *label566
-    * label *label567
-    * label *label568
-    * label *label571
   115 draw image 15 39 @scrap 16 0
   116 jump *label572 always
   117 draw color 255 255 255 255
   118 label *label572
-    * label *label573
-    * label *label574
-    * label *label577
   119 draw image 15 19 @graphite 16 0
   120 draw color 255 255 255 255
-    * label *label578
-    * label *label579
-    * label *label580
-    * label *label583
   121 draw image 101 159 @metaglass 16 0
   122 jump *label584 always
   123 draw color 255 255 255 255
   124 label *label584
-    * label *label585
-    * label *label586
-    * label *label589
   125 draw image 101 139 @silicon 16 0
   126 jump *label590 always
   127 draw color 255 255 255 255
   128 label *label590
-    * label *label591
-    * label *label592
-    * label *label595
   129 draw image 101 119 @pyratite 16 0
   130 jump *label596 always
   131 draw color 255 255 255 255
   132 label *label596
-    * label *label597
-    * label *label598
-    * label *label601
   133 draw image 101 99 @blast-compound 16 0
   134 jump *label602 always
   135 draw color 255 255 255 255
   136 label *label602
-    * label *label603
-    * label *label604
-    * label *label607
   137 draw image 101 79 @plastanium 16 0
   138 jump *label608 always
   139 draw color 255 255 255 255
   140 label *label608
-    * label *label609
-    * label *label610
-    * label *label613
   141 draw image 101 59 @phase-fabric 16 0
   142 jump *label614 always
   143 draw color 255 255 255 255
   144 label *label614
-    * label *label615
-    * label *label616
-    * label *label619
   145 draw image 101 39 @surge-alloy 16 0
   146 jump *label620 always
   147 draw color 255 255 255 255
   148 label *label620
-    * label *label621
-    * label *label622
-    * label *label625
   149 draw image 101 19 @spore-pod 16 0
   150 jump *label626 always
   151 draw color 255 255 255 255
   152 label *label626
-    * label *label627
-    * label *label628
-    * label *label28
   153 drawflush display1
   154 set :x 71
   155 set :y 152
 
   157 draw color 0 0 80 255
   158 draw rect 23 0 70 176
   159 jump *label49 always
-    * label *label48
   160 draw rect 109 0 176 176
   161 label *label49
-    * label *label47
   162 set :index 0
   163 set :item @sand
   164 op add *tmp35 @counter 1
 
   254 label *label79
   255 label *label77
   256 label *label71
-    * label *label164
-    * label *label165
   257 jump *label199 always
   258 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   259 multijump *label166 *tmp53 0 (m:*label141)
 
   280 label *label176
   281 draw lineRect *tmp58 *tmp60 9 14
   282 jump *label197 always
-    * label *label177
   283 label *label178
   284 draw line *tmp62 :y *tmp62 *tmp65
   285 jump *label197 always
-    * label *label179
   286 label *label180
   287 draw line :x :y *tmp66 :y
   288 draw line :x :y *tmp66 *tmp68
   289 draw line *tmp66 *tmp68 *tmp66 *tmp72
   290 draw line *tmp73 *tmp72 *tmp66 *tmp72
   291 jump *label197 always
-    * label *label181
   292 label *label182
   293 draw line :x :y *tmp77 *tmp78
   294 draw line :x *tmp78 *tmp77 *tmp78
   295 draw line :x *tmp78 *tmp77 *tmp84
   296 draw line :x *tmp84 *tmp77 *tmp84
   297 jump *label197 always
-    * label *label183
   298 label *label184
   299 draw line *tmp88 :y *tmp88 *tmp90
   300 draw line :x *tmp90 *tmp88 *tmp90
   301 draw line :x *tmp90 *tmp88 *tmp96
   302 jump *label197 always
-    * label *label185
   303 label *label186
   304 draw line :x :y *tmp97 *tmp98
   305 draw line :x *tmp98 *tmp97 *tmp98
   306 draw line :x *tmp98 :x *tmp103
   307 draw line :x *tmp103 *tmp97 *tmp103
   308 jump *label197 always
-    * label *label187
   309 label *label188
   310 draw lineRect *tmp108 *tmp110 9 8
   311 draw line :x *tmp111 *tmp112 *tmp113
   312 jump *label197 always
-    * label *label189
   313 label *label190
   314 draw line :x :y *tmp114 *tmp115
   315 draw line :x *tmp115 *tmp114 *tmp115
   316 jump *label197 always
-    * label *label191
   317 label *label192
   318 draw lineRect *tmp120 *tmp122 9 14
   319 draw line :x *tmp123 *tmp124 *tmp123
   320 jump *label197 always
-    * label *label193
   321 label *label194
   322 draw lineRect *tmp127 *tmp130 9 8
   323 draw line :x :y *tmp131 *tmp128
-    * label *label195
-    * label *label196
   324 label *label197
-    * label *label198
   325 jump *label233 always
   326 label *label199
   327 op mod *tmp133 :displayItem:amount 10
 
   352 op sub *tmp140 :y 1
   353 draw lineRect *tmp138 *tmp140 9 14
   354 jump *label231 always
-    * label *label211
   355 label *label212
   356 op add *tmp142 :x 6
   357 op add *tmp145 :y 12
   358 draw line *tmp142 :y *tmp142 *tmp145
   359 jump *label231 always
-    * label *label213
   360 label *label214
   361 op add *tmp146 :x 7
   362 draw line :x :y *tmp146 :y
 
   367 draw line *tmp146 *tmp147 *tmp146 *tmp154
   368 draw line :x *tmp154 *tmp146 *tmp154
   369 jump *label231 always
-    * label *label215
   370 label *label216
   371 op add *tmp158 :x 7
   372 op add *tmp160 :y 12
 
   376 draw line :x *tmp162 *tmp158 *tmp162
   377 draw line :x *tmp160 *tmp158 *tmp160
   378 jump *label231 always
-    * label *label217
   379 label *label218
   380 op add *tmp168 :x 7
   381 op add *tmp170 :y 12
 
   384 draw line :x *tmp171 *tmp168 *tmp171
   385 draw line :x *tmp171 :x *tmp170
   386 jump *label231 always
-    * label *label219
   387 label *label220
   388 op add *tmp176 :x 7
   389 draw line :x :y *tmp176 :y
 
   394 draw line :x *tmp179 :x *tmp184
   395 draw line :x *tmp184 *tmp176 *tmp184
   396 jump *label231 always
-    * label *label221
   397 label *label222
   398 op add *tmp188 :y 12
   399 draw line :x :y :x *tmp188
 
   404 draw line :x *tmp192 *tmp189 *tmp192
   405 draw line :x *tmp188 *tmp189 *tmp188
   406 jump *label231 always
-    * label *label223
   407 label *label224
   408 op add *tmp200 :x 6
   409 op add *tmp203 :y 12
   410 draw line *tmp200 :y *tmp200 *tmp203
   411 draw line :x *tmp203 *tmp200 *tmp203
   412 jump *label231 always
-    * label *label225
   413 label *label226
   414 op sub *tmp209 :x 1
   415 op sub *tmp211 :y 1
 
   418 op add *tmp213 :x 7
   419 draw line :x *tmp212 *tmp213 *tmp212
   420 jump *label231 always
-    * label *label227
   421 label *label228
   422 op add *tmp215 :x 7
   423 draw line :x :y *tmp215 :y
 
   427 draw line :x *tmp219 *tmp215 *tmp219
   428 draw line :x *tmp219 :x *tmp218
   429 draw line :x *tmp218 *tmp215 *tmp218
-    * label *label229
-    * label *label230
   430 label *label231
-    * label *label232
   431 label *label233
   432 op sub :displayItem:x :x 11
   433 op idiv :displayItem:amount :displayItem:amount 10
   434 jump *label234 notEqual :displayItem:amount 0
   435 jump *label82 always
   436 label *label234
-    * label *label235
-    * label *label236
-    * label *label239
   437 jump *label273 always
   438 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   439 multijump *label240 *tmp53 0 (m:*label141)
 
   460 label *label250
   461 draw lineRect *tmp58 *tmp60 9 14
   462 jump *label271 always
-    * label *label251
   463 label *label252
   464 draw line *tmp62 :y *tmp62 *tmp65
   465 jump *label271 always
-    * label *label253
   466 label *label254
   467 draw line :displayItem:x :y *tmp66 :y
   468 draw line :displayItem:x :y *tmp66 *tmp68
   469 draw line *tmp66 *tmp68 *tmp66 *tmp72
   470 draw line *tmp73 *tmp72 *tmp66 *tmp72
   471 jump *label271 always
-    * label *label255
   472 label *label256
   473 draw line :displayItem:x :y *tmp77 *tmp78
   474 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   475 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   476 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   477 jump *label271 always
-    * label *label257
   478 label *label258
   479 draw line *tmp88 :y *tmp88 *tmp90
   480 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   481 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   482 jump *label271 always
-    * label *label259
   483 label *label260
   484 draw line :displayItem:x :y *tmp97 *tmp98
   485 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   486 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   487 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   488 jump *label271 always
-    * label *label261
   489 label *label262
   490 draw lineRect *tmp108 *tmp110 9 8
   491 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   492 jump *label271 always
-    * label *label263
   493 label *label264
   494 draw line :displayItem:x :y *tmp114 *tmp115
   495 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   496 jump *label271 always
-    * label *label265
   497 label *label266
   498 draw lineRect *tmp120 *tmp122 9 14
   499 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   500 jump *label271 always
-    * label *label267
   501 label *label268
   502 draw lineRect *tmp127 *tmp130 9 8
   503 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label269
-    * label *label270
   504 label *label271
-    * label *label272
   505 jump *label307 always
   506 label *label273
   507 op mod *tmp133 :displayItem:amount 10
 
   532 op sub *tmp140 :y 1
   533 draw lineRect *tmp138 *tmp140 9 14
   534 jump *label305 always
-    * label *label285
   535 label *label286
   536 op add *tmp142 :displayItem:x 6
   537 op add *tmp145 :y 12
   538 draw line *tmp142 :y *tmp142 *tmp145
   539 jump *label305 always
-    * label *label287
   540 label *label288
   541 op add *tmp146 :displayItem:x 7
   542 draw line :displayItem:x :y *tmp146 :y
 
   547 draw line *tmp146 *tmp147 *tmp146 *tmp154
   548 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   549 jump *label305 always
-    * label *label289
   550 label *label290
   551 op add *tmp158 :displayItem:x 7
   552 op add *tmp160 :y 12
 
   556 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   557 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   558 jump *label305 always
-    * label *label291
   559 label *label292
   560 op add *tmp168 :displayItem:x 7
   561 op add *tmp170 :y 12
 
   564 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   565 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   566 jump *label305 always
-    * label *label293
   567 label *label294
   568 op add *tmp176 :displayItem:x 7
   569 draw line :displayItem:x :y *tmp176 :y
 
   574 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   575 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   576 jump *label305 always
-    * label *label295
   577 label *label296
   578 op add *tmp188 :y 12
   579 draw line :displayItem:x :y :displayItem:x *tmp188
 
   584 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   585 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   586 jump *label305 always
-    * label *label297
   587 label *label298
   588 op add *tmp200 :displayItem:x 6
   589 op add *tmp203 :y 12
   590 draw line *tmp200 :y *tmp200 *tmp203
   591 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   592 jump *label305 always
-    * label *label299
   593 label *label300
   594 op sub *tmp209 :displayItem:x 1
   595 op sub *tmp211 :y 1
 
   598 op add *tmp213 :displayItem:x 7
   599 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   600 jump *label305 always
-    * label *label301
   601 label *label302
   602 op add *tmp215 :displayItem:x 7
   603 draw line :displayItem:x :y *tmp215 :y
 
   607 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   608 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   609 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label303
-    * label *label304
   610 label *label305
-    * label *label306
   611 label *label307
   612 op sub :displayItem:x :x 22
   613 op idiv :displayItem:amount :displayItem:amount 10
   614 jump *label308 notEqual :displayItem:amount 0
   615 jump *label82 always
   616 label *label308
-    * label *label309
-    * label *label310
-    * label *label313
   617 jump *label347 always
   618 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   619 multijump *label314 *tmp53 0 (m:*label141)
 
   640 label *label324
   641 draw lineRect *tmp58 *tmp60 9 14
   642 jump *label345 always
-    * label *label325
   643 label *label326
   644 draw line *tmp62 :y *tmp62 *tmp65
   645 jump *label345 always
-    * label *label327
   646 label *label328
   647 draw line :displayItem:x :y *tmp66 :y
   648 draw line :displayItem:x :y *tmp66 *tmp68
   649 draw line *tmp66 *tmp68 *tmp66 *tmp72
   650 draw line *tmp73 *tmp72 *tmp66 *tmp72
   651 jump *label345 always
-    * label *label329
   652 label *label330
   653 draw line :displayItem:x :y *tmp77 *tmp78
   654 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   655 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   656 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   657 jump *label345 always
-    * label *label331
   658 label *label332
   659 draw line *tmp88 :y *tmp88 *tmp90
   660 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   661 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   662 jump *label345 always
-    * label *label333
   663 label *label334
   664 draw line :displayItem:x :y *tmp97 *tmp98
   665 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   666 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   667 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   668 jump *label345 always
-    * label *label335
   669 label *label336
   670 draw lineRect *tmp108 *tmp110 9 8
   671 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   672 jump *label345 always
-    * label *label337
   673 label *label338
   674 draw line :displayItem:x :y *tmp114 *tmp115
   675 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   676 jump *label345 always
-    * label *label339
   677 label *label340
   678 draw lineRect *tmp120 *tmp122 9 14
   679 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   680 jump *label345 always
-    * label *label341
   681 label *label342
   682 draw lineRect *tmp127 *tmp130 9 8
   683 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label343
-    * label *label344
   684 label *label345
-    * label *label346
   685 jump *label381 always
   686 label *label347
   687 op mod *tmp133 :displayItem:amount 10
 
   712 op sub *tmp140 :y 1
   713 draw lineRect *tmp138 *tmp140 9 14
   714 jump *label379 always
-    * label *label359
   715 label *label360
   716 op add *tmp142 :displayItem:x 6
   717 op add *tmp145 :y 12
   718 draw line *tmp142 :y *tmp142 *tmp145
   719 jump *label379 always
-    * label *label361
   720 label *label362
   721 op add *tmp146 :displayItem:x 7
   722 draw line :displayItem:x :y *tmp146 :y
 
   727 draw line *tmp146 *tmp147 *tmp146 *tmp154
   728 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   729 jump *label379 always
-    * label *label363
   730 label *label364
   731 op add *tmp158 :displayItem:x 7
   732 op add *tmp160 :y 12
 
   736 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   737 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   738 jump *label379 always
-    * label *label365
   739 label *label366
   740 op add *tmp168 :displayItem:x 7
   741 op add *tmp170 :y 12
 
   744 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   745 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   746 jump *label379 always
-    * label *label367
   747 label *label368
   748 op add *tmp176 :displayItem:x 7
   749 draw line :displayItem:x :y *tmp176 :y
 
   754 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   755 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   756 jump *label379 always
-    * label *label369
   757 label *label370
   758 op add *tmp188 :y 12
   759 draw line :displayItem:x :y :displayItem:x *tmp188
 
   764 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   765 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   766 jump *label379 always
-    * label *label371
   767 label *label372
   768 op add *tmp200 :displayItem:x 6
   769 op add *tmp203 :y 12
   770 draw line *tmp200 :y *tmp200 *tmp203
   771 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   772 jump *label379 always
-    * label *label373
   773 label *label374
   774 op sub *tmp209 :displayItem:x 1
   775 op sub *tmp211 :y 1
 
   778 op add *tmp213 :displayItem:x 7
   779 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   780 jump *label379 always
-    * label *label375
   781 label *label376
   782 op add *tmp215 :displayItem:x 7
   783 draw line :displayItem:x :y *tmp215 :y
 
   787 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   788 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   789 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label377
-    * label *label378
   790 label *label379
-    * label *label380
   791 label *label381
   792 op sub :displayItem:x :x 33
   793 op idiv :displayItem:amount :displayItem:amount 10
   794 jump *label382 notEqual :displayItem:amount 0
   795 jump *label82 always
   796 label *label382
-    * label *label383
-    * label *label384
-    * label *label387
   797 jump *label421 always
   798 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   799 multijump *label388 *tmp53 0 (m:*label141)
 
   820 label *label398
   821 draw lineRect *tmp58 *tmp60 9 14
   822 jump *label419 always
-    * label *label399
   823 label *label400
   824 draw line *tmp62 :y *tmp62 *tmp65
   825 jump *label419 always
-    * label *label401
   826 label *label402
   827 draw line :displayItem:x :y *tmp66 :y
   828 draw line :displayItem:x :y *tmp66 *tmp68
   829 draw line *tmp66 *tmp68 *tmp66 *tmp72
   830 draw line *tmp73 *tmp72 *tmp66 *tmp72
   831 jump *label419 always
-    * label *label403
   832 label *label404
   833 draw line :displayItem:x :y *tmp77 *tmp78
   834 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   835 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   836 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   837 jump *label419 always
-    * label *label405
   838 label *label406
   839 draw line *tmp88 :y *tmp88 *tmp90
   840 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   841 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   842 jump *label419 always
-    * label *label407
   843 label *label408
   844 draw line :displayItem:x :y *tmp97 *tmp98
   845 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   846 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   847 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   848 jump *label419 always
-    * label *label409
   849 label *label410
   850 draw lineRect *tmp108 *tmp110 9 8
   851 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   852 jump *label419 always
-    * label *label411
   853 label *label412
   854 draw line :displayItem:x :y *tmp114 *tmp115
   855 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   856 jump *label419 always
-    * label *label413
   857 label *label414
   858 draw lineRect *tmp120 *tmp122 9 14
   859 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   860 jump *label419 always
-    * label *label415
   861 label *label416
   862 draw lineRect *tmp127 *tmp130 9 8
   863 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label417
-    * label *label418
   864 label *label419
-    * label *label420
   865 jump *label455 always
   866 label *label421
   867 op mod *tmp133 :displayItem:amount 10
 
   892 op sub *tmp140 :y 1
   893 draw lineRect *tmp138 *tmp140 9 14
   894 jump *label453 always
-    * label *label433
   895 label *label434
   896 op add *tmp142 :displayItem:x 6
   897 op add *tmp145 :y 12
   898 draw line *tmp142 :y *tmp142 *tmp145
   899 jump *label453 always
-    * label *label435
   900 label *label436
   901 op add *tmp146 :displayItem:x 7
   902 draw line :displayItem:x :y *tmp146 :y
 
   907 draw line *tmp146 *tmp147 *tmp146 *tmp154
   908 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   909 jump *label453 always
-    * label *label437
   910 label *label438
   911 op add *tmp158 :displayItem:x 7
   912 op add *tmp160 :y 12
 
   916 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   917 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   918 jump *label453 always
-    * label *label439
   919 label *label440
   920 op add *tmp168 :displayItem:x 7
   921 op add *tmp170 :y 12
 
   924 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   925 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   926 jump *label453 always
-    * label *label441
   927 label *label442
   928 op add *tmp176 :displayItem:x 7
   929 draw line :displayItem:x :y *tmp176 :y
 
   934 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   935 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   936 jump *label453 always
-    * label *label443
   937 label *label444
   938 op add *tmp188 :y 12
   939 draw line :displayItem:x :y :displayItem:x *tmp188
 
   944 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   945 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   946 jump *label453 always
-    * label *label445
   947 label *label446
   948 op add *tmp200 :displayItem:x 6
   949 op add *tmp203 :y 12
   950 draw line *tmp200 :y *tmp200 *tmp203
   951 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   952 jump *label453 always
-    * label *label447
   953 label *label448
   954 op sub *tmp209 :displayItem:x 1
   955 op sub *tmp211 :y 1
 
   958 op add *tmp213 :displayItem:x 7
   959 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   960 jump *label453 always
-    * label *label449
   961 label *label450
   962 op add *tmp215 :displayItem:x 7
   963 draw line :displayItem:x :y *tmp215 :y
 
   967 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   968 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   969 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label451
-    * label *label452
   970 label *label453
-    * label *label454
   971 label *label455
   972 op sub :displayItem:x :x 44
   973 op idiv :displayItem:amount :displayItem:amount 10
   974 jump *label456 notEqual :displayItem:amount 0
   975 jump *label82 always
   976 label *label456
-    * label *label457
-    * label *label458
-    * label *label461
   977 jump *label495 always
   978 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   979 multijump *label462 *tmp53 0 (m:*label141)
 
  1000 label *label472
  1001 draw lineRect *tmp58 *tmp60 9 14
  1002 jump *label493 always
-    * label *label473
  1003 label *label474
  1004 draw line *tmp62 :y *tmp62 *tmp65
  1005 jump *label493 always
-    * label *label475
  1006 label *label476
  1007 draw line :displayItem:x :y *tmp66 :y
  1008 draw line :displayItem:x :y *tmp66 *tmp68
  1009 draw line *tmp66 *tmp68 *tmp66 *tmp72
  1010 draw line *tmp73 *tmp72 *tmp66 *tmp72
  1011 jump *label493 always
-    * label *label477
  1012 label *label478
  1013 draw line :displayItem:x :y *tmp77 *tmp78
  1014 draw line :displayItem:x *tmp78 *tmp77 *tmp78
  1015 draw line :displayItem:x *tmp78 *tmp77 *tmp84
  1016 draw line :displayItem:x *tmp84 *tmp77 *tmp84
  1017 jump *label493 always
-    * label *label479
  1018 label *label480
  1019 draw line *tmp88 :y *tmp88 *tmp90
  1020 draw line :displayItem:x *tmp90 *tmp88 *tmp90
  1021 draw line :displayItem:x *tmp90 *tmp88 *tmp96
  1022 jump *label493 always
-    * label *label481
  1023 label *label482
  1024 draw line :displayItem:x :y *tmp97 *tmp98
  1025 draw line :displayItem:x *tmp98 *tmp97 *tmp98
  1026 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
  1027 draw line :displayItem:x *tmp103 *tmp97 *tmp103
  1028 jump *label493 always
-    * label *label483
  1029 label *label484
  1030 draw lineRect *tmp108 *tmp110 9 8
  1031 draw line :displayItem:x *tmp111 *tmp112 *tmp113
  1032 jump *label493 always
-    * label *label485
  1033 label *label486
  1034 draw line :displayItem:x :y *tmp114 *tmp115
  1035 draw line :displayItem:x *tmp115 *tmp114 *tmp115
  1036 jump *label493 always
-    * label *label487
  1037 label *label488
  1038 draw lineRect *tmp120 *tmp122 9 14
  1039 draw line :displayItem:x *tmp123 *tmp124 *tmp123
  1040 jump *label493 always
-    * label *label489
  1041 label *label490
  1042 draw lineRect *tmp127 *tmp130 9 8
  1043 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label491
-    * label *label492
  1044 label *label493
-    * label *label494
  1045 jump *label529 always
  1046 label *label495
  1047 op mod *tmp133 :displayItem:amount 10
 
  1072 op sub *tmp140 :y 1
  1073 draw lineRect *tmp138 *tmp140 9 14
  1074 jump *label527 always
-    * label *label507
  1075 label *label508
  1076 op add *tmp142 :displayItem:x 6
  1077 op add *tmp145 :y 12
  1078 draw line *tmp142 :y *tmp142 *tmp145
  1079 jump *label527 always
-    * label *label509
  1080 label *label510
  1081 op add *tmp146 :displayItem:x 7
  1082 draw line :displayItem:x :y *tmp146 :y
 
  1087 draw line *tmp146 *tmp147 *tmp146 *tmp154
  1088 draw line :displayItem:x *tmp154 *tmp146 *tmp154
  1089 jump *label527 always
-    * label *label511
  1090 label *label512
  1091 op add *tmp158 :displayItem:x 7
  1092 op add *tmp160 :y 12
 
  1096 draw line :displayItem:x *tmp162 *tmp158 *tmp162
  1097 draw line :displayItem:x *tmp160 *tmp158 *tmp160
  1098 jump *label527 always
-    * label *label513
  1099 label *label514
  1100 op add *tmp168 :displayItem:x 7
  1101 op add *tmp170 :y 12
 
  1104 draw line :displayItem:x *tmp171 *tmp168 *tmp171
  1105 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
  1106 jump *label527 always
-    * label *label515
  1107 label *label516
  1108 op add *tmp176 :displayItem:x 7
  1109 draw line :displayItem:x :y *tmp176 :y
 
  1114 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
  1115 draw line :displayItem:x *tmp184 *tmp176 *tmp184
  1116 jump *label527 always
-    * label *label517
  1117 label *label518
  1118 op add *tmp188 :y 12
  1119 draw line :displayItem:x :y :displayItem:x *tmp188
 
  1124 draw line :displayItem:x *tmp192 *tmp189 *tmp192
  1125 draw line :displayItem:x *tmp188 *tmp189 *tmp188
  1126 jump *label527 always
-    * label *label519
  1127 label *label520
  1128 op add *tmp200 :displayItem:x 6
  1129 op add *tmp203 :y 12
  1130 draw line *tmp200 :y *tmp200 *tmp203
  1131 draw line :displayItem:x *tmp203 *tmp200 *tmp203
  1132 jump *label527 always
-    * label *label521
  1133 label *label522
  1134 op sub *tmp209 :displayItem:x 1
  1135 op sub *tmp211 :y 1
 
  1138 op add *tmp213 :displayItem:x 7
  1139 draw line :displayItem:x *tmp212 *tmp213 *tmp212
  1140 jump *label527 always
-    * label *label523
  1141 label *label524
  1142 op add *tmp215 :displayItem:x 7
  1143 draw line :displayItem:x :y *tmp215 :y
 
  1147 draw line :displayItem:x *tmp219 *tmp215 *tmp219
  1148 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
  1149 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label525
-    * label *label526
  1150 label *label527
-    * label *label528
  1151 label *label529
-    * label *label530
-    * label *label531
-    * label *label532
  1152 label *label82
-    * label *label69
  1153 op add :index :index 1
  1154 op sub :y :y 20
  1155 jump *label131 notEqual :index 8
  1156 drawflush display1
-    * label *label133
-    * label *label134
  1157 set :y 152
  1158 set :x 157
  1159 # "Function: inline def eraseNumbers(in first_column)"
 
  1164 label *label136
  1165 draw rect 109 0 176 176
  1166 label *label137
-    * label *label135
  1167 label *label131
-    * label *label132
-    * label *label51
  1168 multijump *tmp35 0 0 (m:marker1)
  1169 multilabel *label68 (m:marker1)
-    * label *label52
  1170 drawflush display1
  1171 op sub *tmp234 @time :start
  1172 op floor :elapsed *tmp234
 
  1177 print " "
  1178 print "ms"
  1179 printflush message1
-    * label *label18
  1180 sensor *tmp12 .CONTAINER @dead
  1181 op equal *tmp13 *tmp12 0
  1182 sensor *tmp14 .DISPLAY @dead

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   431 label *label233
   432 op sub :displayItem:x :x 11
   433 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label234 notEqual :displayItem:amount 0
-    * jump *label82 always
+  434 jump *label82 equal :displayItem:amount 0
   435 label *label234
   436 jump *label273 always
   437 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   610 label *label307
   611 op sub :displayItem:x :x 22
   612 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label308 notEqual :displayItem:amount 0
-    * jump *label82 always
+  613 jump *label82 equal :displayItem:amount 0
   614 label *label308
   615 jump *label347 always
   616 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   789 label *label381
   790 op sub :displayItem:x :x 33
   791 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label382 notEqual :displayItem:amount 0
-    * jump *label82 always
+  792 jump *label82 equal :displayItem:amount 0
   793 label *label382
   794 jump *label421 always
   795 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   968 label *label455
   969 op sub :displayItem:x :x 44
   970 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label456 notEqual :displayItem:amount 0
-    * jump *label82 always
+  971 jump *label82 equal :displayItem:amount 0
   972 label *label456
   973 jump *label495 always
   974 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   432 op sub :displayItem:x :x 11
   433 op idiv :displayItem:amount :displayItem:amount 10
   434 jump *label82 equal :displayItem:amount 0
-    * label *label234
   435 jump *label273 always
   436 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   437 multijump *label240 *tmp53 0 (m:*label141)
 
   610 op sub :displayItem:x :x 22
   611 op idiv :displayItem:amount :displayItem:amount 10
   612 jump *label82 equal :displayItem:amount 0
-    * label *label308
   613 jump *label347 always
   614 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   615 multijump *label314 *tmp53 0 (m:*label141)
 
   788 op sub :displayItem:x :x 33
   789 op idiv :displayItem:amount :displayItem:amount 10
   790 jump *label82 equal :displayItem:amount 0
-    * label *label382
   791 jump *label421 always
   792 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   793 multijump *label388 *tmp53 0 (m:*label141)
 
   966 op sub :displayItem:x :x 44
   967 op idiv :displayItem:amount :displayItem:amount 10
   968 jump *label82 equal :displayItem:amount 0
-    * label *label456
   969 jump *label495 always
   970 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   971 multijump *label462 *tmp53 0 (m:*label141)

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 set .CONTAINER null
     2 set .MEMORY null
     3 set .MESSAGE null
 
    68 op land *tmp16 *tmp13 *tmp15
    69 op equal *tmp17 .LINKS @links
    70 op land *tmp18 *tmp16 *tmp17
-    * jump *label19 equal *tmp18 false
+   71 jump __start__ equal *tmp18 false
    72 label *label632
    73 set :start @time
    74 sensor .CAPACITY .CONTAINER @itemCapacity
 
   230 jump *label70 equal *tmp38 false
   231 jump *label72 notEqual :displayItem:amount .CAPACITY
   232 draw color 0 255 0 255
-    * jump *label73 always
+  233 jump *label199 always
   234 label *label72
   235 jump *label74 lessThanEq :displayItem:amount .LIMIT
   236 draw color 255 255 0 255
-    * jump *label75 always
+  237 jump *label199 always
   238 label *label74
   239 draw color 255 80 80 255
   240 label *label75
   241 label *label73
-    * jump *label71 always
+  242 jump *label199 always
   243 label *label70
   244 read :displayItem:last .MEMORY :index
   245 write :displayItem:amount .MEMORY :index
   246 jump *label76 notEqual :displayItem:amount :displayItem:last
   247 draw color 255 255 0 255
-    * jump *label77 always
+  248 jump *label199 always
   249 label *label76
   250 jump *label78 greaterThanEq :displayItem:amount :displayItem:last
   251 draw color 255 80 80 255
-    * jump *label79 always
+  252 jump *label199 always
   253 label *label78
   254 draw color 0 255 0 255
   255 label *label79
 
   280 jump *label194 always
   281 label *label176
   282 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label197 always
+  283 jump *label233 always
   284 label *label178
   285 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label197 always
+  286 jump *label233 always
   287 label *label180
   288 draw line :x :y *tmp66 :y
   289 draw line :x :y *tmp66 *tmp68
   290 draw line *tmp66 *tmp68 *tmp66 *tmp72
   291 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label197 always
+  292 jump *label233 always
   293 label *label182
   294 draw line :x :y *tmp77 *tmp78
   295 draw line :x *tmp78 *tmp77 *tmp78
   296 draw line :x *tmp78 *tmp77 *tmp84
   297 draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label197 always
+  298 jump *label233 always
   299 label *label184
   300 draw line *tmp88 :y *tmp88 *tmp90
   301 draw line :x *tmp90 *tmp88 *tmp90
   302 draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label197 always
+  303 jump *label233 always
   304 label *label186
   305 draw line :x :y *tmp97 *tmp98
   306 draw line :x *tmp98 *tmp97 *tmp98
   307 draw line :x *tmp98 :x *tmp103
   308 draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label197 always
+  309 jump *label233 always
   310 label *label188
   311 draw lineRect *tmp108 *tmp110 9 8
   312 draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label197 always
+  313 jump *label233 always
   314 label *label190
   315 draw line :x :y *tmp114 *tmp115
   316 draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label197 always
+  317 jump *label233 always
   318 label *label192
   319 draw lineRect *tmp120 *tmp122 9 14
   320 draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label197 always
+  321 jump *label233 always
   322 label *label194
   323 draw lineRect *tmp127 *tmp130 9 8
   324 draw line :x :y *tmp131 *tmp128
 
   458 jump *label268 always
   459 label *label250
   460 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label271 always
+  461 jump *label307 always
   462 label *label252
   463 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label271 always
+  464 jump *label307 always
   465 label *label254
   466 draw line :displayItem:x :y *tmp66 :y
   467 draw line :displayItem:x :y *tmp66 *tmp68
   468 draw line *tmp66 *tmp68 *tmp66 *tmp72
   469 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label271 always
+  470 jump *label307 always
   471 label *label256
   472 draw line :displayItem:x :y *tmp77 *tmp78
   473 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   474 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   475 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label271 always
+  476 jump *label307 always
   477 label *label258
   478 draw line *tmp88 :y *tmp88 *tmp90
   479 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   480 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label271 always
+  481 jump *label307 always
   482 label *label260
   483 draw line :displayItem:x :y *tmp97 *tmp98
   484 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   485 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   486 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label271 always
+  487 jump *label307 always
   488 label *label262
   489 draw lineRect *tmp108 *tmp110 9 8
   490 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label271 always
+  491 jump *label307 always
   492 label *label264
   493 draw line :displayItem:x :y *tmp114 *tmp115
   494 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label271 always
+  495 jump *label307 always
   496 label *label266
   497 draw lineRect *tmp120 *tmp122 9 14
   498 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label271 always
+  499 jump *label307 always
   500 label *label268
   501 draw lineRect *tmp127 *tmp130 9 8
   502 draw line :displayItem:x :y *tmp131 *tmp128
 
   636 jump *label342 always
   637 label *label324
   638 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label345 always
+  639 jump *label381 always
   640 label *label326
   641 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label345 always
+  642 jump *label381 always
   643 label *label328
   644 draw line :displayItem:x :y *tmp66 :y
   645 draw line :displayItem:x :y *tmp66 *tmp68
   646 draw line *tmp66 *tmp68 *tmp66 *tmp72
   647 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label345 always
+  648 jump *label381 always
   649 label *label330
   650 draw line :displayItem:x :y *tmp77 *tmp78
   651 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   652 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   653 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label345 always
+  654 jump *label381 always
   655 label *label332
   656 draw line *tmp88 :y *tmp88 *tmp90
   657 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   658 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label345 always
+  659 jump *label381 always
   660 label *label334
   661 draw line :displayItem:x :y *tmp97 *tmp98
   662 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   663 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   664 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label345 always
+  665 jump *label381 always
   666 label *label336
   667 draw lineRect *tmp108 *tmp110 9 8
   668 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label345 always
+  669 jump *label381 always
   670 label *label338
   671 draw line :displayItem:x :y *tmp114 *tmp115
   672 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label345 always
+  673 jump *label381 always
   674 label *label340
   675 draw lineRect *tmp120 *tmp122 9 14
   676 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label345 always
+  677 jump *label381 always
   678 label *label342
   679 draw lineRect *tmp127 *tmp130 9 8
   680 draw line :displayItem:x :y *tmp131 *tmp128
 
   814 jump *label416 always
   815 label *label398
   816 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label419 always
+  817 jump *label455 always
   818 label *label400
   819 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label419 always
+  820 jump *label455 always
   821 label *label402
   822 draw line :displayItem:x :y *tmp66 :y
   823 draw line :displayItem:x :y *tmp66 *tmp68
   824 draw line *tmp66 *tmp68 *tmp66 *tmp72
   825 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label419 always
+  826 jump *label455 always
   827 label *label404
   828 draw line :displayItem:x :y *tmp77 *tmp78
   829 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   830 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   831 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label419 always
+  832 jump *label455 always
   833 label *label406
   834 draw line *tmp88 :y *tmp88 *tmp90
   835 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   836 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label419 always
+  837 jump *label455 always
   838 label *label408
   839 draw line :displayItem:x :y *tmp97 *tmp98
   840 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   841 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   842 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label419 always
+  843 jump *label455 always
   844 label *label410
   845 draw lineRect *tmp108 *tmp110 9 8
   846 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label419 always
+  847 jump *label455 always
   848 label *label412
   849 draw line :displayItem:x :y *tmp114 *tmp115
   850 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label419 always
+  851 jump *label455 always
   852 label *label414
   853 draw lineRect *tmp120 *tmp122 9 14
   854 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label419 always
+  855 jump *label455 always
   856 label *label416
   857 draw lineRect *tmp127 *tmp130 9 8
   858 draw line :displayItem:x :y *tmp131 *tmp128
 
   992 jump *label490 always
   993 label *label472
   994 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label493 always
+  995 jump *label529 always
   996 label *label474
   997 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label493 always
+  998 jump *label529 always
   999 label *label476
  1000 draw line :displayItem:x :y *tmp66 :y
  1001 draw line :displayItem:x :y *tmp66 *tmp68
  1002 draw line *tmp66 *tmp68 *tmp66 *tmp72
  1003 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label493 always
+ 1004 jump *label529 always
  1005 label *label478
  1006 draw line :displayItem:x :y *tmp77 *tmp78
  1007 draw line :displayItem:x *tmp78 *tmp77 *tmp78
  1008 draw line :displayItem:x *tmp78 *tmp77 *tmp84
  1009 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label493 always
+ 1010 jump *label529 always
  1011 label *label480
  1012 draw line *tmp88 :y *tmp88 *tmp90
  1013 draw line :displayItem:x *tmp90 *tmp88 *tmp90
  1014 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label493 always
+ 1015 jump *label529 always
  1016 label *label482
  1017 draw line :displayItem:x :y *tmp97 *tmp98
  1018 draw line :displayItem:x *tmp98 *tmp97 *tmp98
  1019 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
  1020 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label493 always
+ 1021 jump *label529 always
  1022 label *label484
  1023 draw lineRect *tmp108 *tmp110 9 8
  1024 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label493 always
+ 1025 jump *label529 always
  1026 label *label486
  1027 draw line :displayItem:x :y *tmp114 *tmp115
  1028 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label493 always
+ 1029 jump *label529 always
  1030 label *label488
  1031 draw lineRect *tmp120 *tmp122 9 14
  1032 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label493 always
+ 1033 jump *label529 always
  1034 label *label490
  1035 draw lineRect *tmp127 *tmp130 9 8
  1036 draw line :displayItem:x :y *tmp131 *tmp128

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-251 instructions):
 
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
    80 jump *label22 always
-    * draw rect 93 0 16 176
    81 label *label22
    82 # "Function: inline def eraseImages(in first_column)"
    83 draw color 0 0 80 255
    84 jump *label24 always
-    * draw rect 0 0 23 176
-    * jump *label25 always
    85 label *label24
    86 draw rect 93 0 16 176
    87 label *label25
    88 draw color 255 255 255 255
    89 draw image 15 159 @sand 16 0
    90 jump *label536 always
-    * draw color 255 255 255 255
    91 label *label536
    92 draw image 15 139 @copper 16 0
    93 jump *label542 always
-    * draw color 255 255 255 255
    94 label *label542
    95 draw image 15 119 @lead 16 0
    96 jump *label548 always
-    * draw color 255 255 255 255
    97 label *label548
    98 draw image 15 99 @coal 16 0
    99 jump *label554 always
-    * draw color 255 255 255 255
   100 label *label554
   101 draw image 15 79 @titanium 16 0
   102 jump *label560 always
-    * draw color 255 255 255 255
   103 label *label560
   104 draw image 15 59 @thorium 16 0
   105 jump *label566 always
-    * draw color 255 255 255 255
   106 label *label566
   107 draw image 15 39 @scrap 16 0
   108 jump *label572 always
-    * draw color 255 255 255 255
   109 label *label572
   110 draw image 15 19 @graphite 16 0
   111 draw color 255 255 255 255
   112 draw image 101 159 @metaglass 16 0
   113 jump *label584 always
-    * draw color 255 255 255 255
   114 label *label584
   115 draw image 101 139 @silicon 16 0
   116 jump *label590 always
-    * draw color 255 255 255 255
   117 label *label590
   118 draw image 101 119 @pyratite 16 0
   119 jump *label596 always
-    * draw color 255 255 255 255
   120 label *label596
   121 draw image 101 99 @blast-compound 16 0
   122 jump *label602 always
-    * draw color 255 255 255 255
   123 label *label602
   124 draw image 101 79 @plastanium 16 0
   125 jump *label608 always
-    * draw color 255 255 255 255
   126 label *label608
   127 draw image 101 59 @phase-fabric 16 0
   128 jump *label614 always
-    * draw color 255 255 255 255
   129 label *label614
   130 draw image 101 39 @surge-alloy 16 0
   131 jump *label620 always
-    * draw color 255 255 255 255
   132 label *label620
   133 draw image 101 19 @spore-pod 16 0
   134 jump *label626 always
-    * draw color 255 255 255 255
   135 label *label626
   136 drawflush display1
   137 set :x 71
 
   140 draw color 0 0 80 255
   141 draw rect 23 0 70 176
   142 jump *label49 always
-    * draw rect 109 0 176 176
   143 label *label49
   144 set :index 0
   145 set :item @sand
 
   218 jump *label199 always
   219 label *label74
   220 draw color 255 80 80 255
-    * label *label75
-    * label *label73
   221 jump *label199 always
   222 label *label70
   223 read :displayItem:last .MEMORY :index
 
   231 jump *label199 always
   232 label *label78
   233 draw color 0 255 0 255
-    * label *label79
-    * label *label77
-    * label *label71
   234 jump *label199 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label166 *tmp53 0 (m:*label141)
-    * multilabel *label166 (m:*label141)
-    * jump *label176 always
-    * multilabel *label167 (m:*label141)
-    * jump *label178 always
-    * multilabel *label168 (m:*label141)
-    * jump *label180 always
-    * multilabel *label169 (m:*label141)
-    * jump *label182 always
-    * multilabel *label170 (m:*label141)
-    * jump *label184 always
-    * multilabel *label171 (m:*label141)
-    * jump *label186 always
-    * multilabel *label172 (m:*label141)
-    * jump *label188 always
-    * multilabel *label173 (m:*label141)
-    * jump *label190 always
-    * multilabel *label174 (m:*label141)
-    * jump *label192 always
-    * multilabel *label175 (m:*label141)
-    * jump *label194 always
-    * label *label176
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label233 always
-    * label *label178
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label233 always
-    * label *label180
-    * draw line :x :y *tmp66 :y
-    * draw line :x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label233 always
-    * label *label182
-    * draw line :x :y *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp84
-    * draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label233 always
-    * label *label184
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label233 always
-    * label *label186
-    * draw line :x :y *tmp97 *tmp98
-    * draw line :x *tmp98 *tmp97 *tmp98
-    * draw line :x *tmp98 :x *tmp103
-    * draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label233 always
-    * label *label188
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label233 always
-    * label *label190
-    * draw line :x :y *tmp114 *tmp115
-    * draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label233 always
-    * label *label192
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label233 always
-    * label *label194
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :x :y *tmp131 *tmp128
-    * label *label197
-    * jump *label233 always
   235 label *label199
   236 op mod *tmp133 :displayItem:amount 10
   237 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   342 op idiv :displayItem:amount :displayItem:amount 10
   343 jump *label82 equal :displayItem:amount 0
   344 jump *label273 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label240 *tmp53 0 (m:*label141)
-    * multilabel *label240 (m:*label141)
-    * jump *label250 always
-    * multilabel *label241 (m:*label141)
-    * jump *label252 always
-    * multilabel *label242 (m:*label141)
-    * jump *label254 always
-    * multilabel *label243 (m:*label141)
-    * jump *label256 always
-    * multilabel *label244 (m:*label141)
-    * jump *label258 always
-    * multilabel *label245 (m:*label141)
-    * jump *label260 always
-    * multilabel *label246 (m:*label141)
-    * jump *label262 always
-    * multilabel *label247 (m:*label141)
-    * jump *label264 always
-    * multilabel *label248 (m:*label141)
-    * jump *label266 always
-    * multilabel *label249 (m:*label141)
-    * jump *label268 always
-    * label *label250
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label307 always
-    * label *label252
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label307 always
-    * label *label254
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label307 always
-    * label *label256
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label307 always
-    * label *label258
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label307 always
-    * label *label260
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label307 always
-    * label *label262
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label307 always
-    * label *label264
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label307 always
-    * label *label266
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label307 always
-    * label *label268
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label271
-    * jump *label307 always
   345 label *label273
   346 op mod *tmp133 :displayItem:amount 10
   347 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   452 op idiv :displayItem:amount :displayItem:amount 10
   453 jump *label82 equal :displayItem:amount 0
   454 jump *label347 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label314 *tmp53 0 (m:*label141)
-    * multilabel *label314 (m:*label141)
-    * jump *label324 always
-    * multilabel *label315 (m:*label141)
-    * jump *label326 always
-    * multilabel *label316 (m:*label141)
-    * jump *label328 always
-    * multilabel *label317 (m:*label141)
-    * jump *label330 always
-    * multilabel *label318 (m:*label141)
-    * jump *label332 always
-    * multilabel *label319 (m:*label141)
-    * jump *label334 always
-    * multilabel *label320 (m:*label141)
-    * jump *label336 always
-    * multilabel *label321 (m:*label141)
-    * jump *label338 always
-    * multilabel *label322 (m:*label141)
-    * jump *label340 always
-    * multilabel *label323 (m:*label141)
-    * jump *label342 always
-    * label *label324
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label381 always
-    * label *label326
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label381 always
-    * label *label328
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label381 always
-    * label *label330
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label381 always
-    * label *label332
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label381 always
-    * label *label334
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label381 always
-    * label *label336
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label381 always
-    * label *label338
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label381 always
-    * label *label340
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label381 always
-    * label *label342
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label345
-    * jump *label381 always
   455 label *label347
   456 op mod *tmp133 :displayItem:amount 10
   457 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   562 op idiv :displayItem:amount :displayItem:amount 10
   563 jump *label82 equal :displayItem:amount 0
   564 jump *label421 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label388 *tmp53 0 (m:*label141)
-    * multilabel *label388 (m:*label141)
-    * jump *label398 always
-    * multilabel *label389 (m:*label141)
-    * jump *label400 always
-    * multilabel *label390 (m:*label141)
-    * jump *label402 always
-    * multilabel *label391 (m:*label141)
-    * jump *label404 always
-    * multilabel *label392 (m:*label141)
-    * jump *label406 always
-    * multilabel *label393 (m:*label141)
-    * jump *label408 always
-    * multilabel *label394 (m:*label141)
-    * jump *label410 always
-    * multilabel *label395 (m:*label141)
-    * jump *label412 always
-    * multilabel *label396 (m:*label141)
-    * jump *label414 always
-    * multilabel *label397 (m:*label141)
-    * jump *label416 always
-    * label *label398
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label455 always
-    * label *label400
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label455 always
-    * label *label402
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label455 always
-    * label *label404
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label455 always
-    * label *label406
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label455 always
-    * label *label408
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label455 always
-    * label *label410
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label455 always
-    * label *label412
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label455 always
-    * label *label414
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label455 always
-    * label *label416
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label419
-    * jump *label455 always
   565 label *label421
   566 op mod *tmp133 :displayItem:amount 10
   567 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   672 op idiv :displayItem:amount :displayItem:amount 10
   673 jump *label82 equal :displayItem:amount 0
   674 jump *label495 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label462 *tmp53 0 (m:*label141)
-    * multilabel *label462 (m:*label141)
-    * jump *label472 always
-    * multilabel *label463 (m:*label141)
-    * jump *label474 always
-    * multilabel *label464 (m:*label141)
-    * jump *label476 always
-    * multilabel *label465 (m:*label141)
-    * jump *label478 always
-    * multilabel *label466 (m:*label141)
-    * jump *label480 always
-    * multilabel *label467 (m:*label141)
-    * jump *label482 always
-    * multilabel *label468 (m:*label141)
-    * jump *label484 always
-    * multilabel *label469 (m:*label141)
-    * jump *label486 always
-    * multilabel *label470 (m:*label141)
-    * jump *label488 always
-    * multilabel *label471 (m:*label141)
-    * jump *label490 always
-    * label *label472
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label529 always
-    * label *label474
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label529 always
-    * label *label476
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label529 always
-    * label *label478
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label529 always
-    * label *label480
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label529 always
-    * label *label482
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label529 always
-    * label *label484
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label529 always
-    * label *label486
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label529 always
-    * label *label488
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label529 always
-    * label *label490
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label493
-    * jump *label529 always
   675 label *label495
   676 op mod *tmp133 :displayItem:amount 10
   677 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   788 # "Function: inline def eraseNumbers(in first_column)"
   789 draw color 0 0 80 255
   790 jump *label136 always
-    * draw rect 23 0 70 176
-    * jump *label137 always
   791 label *label136
   792 draw rect 109 0 176 176
   793 label *label137
 
   812 op equal *tmp17 .LINKS @links
   813 op land *tmp18 *tmp16 *tmp17
   814 jump *label632 notEqual *tmp18 false
-    * label *label19
   815 end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
    84 jump *label24 always
    85 label *label24
    86 draw rect 93 0 16 176
-    * label *label25
    87 draw color 255 255 255 255
    88 draw image 15 159 @sand 16 0
    89 jump *label536 always
 
   336 draw line :x *tmp219 :x *tmp218
   337 draw line :x *tmp218 *tmp215 *tmp218
   338 label *label231
-    * label *label233
   339 op sub :displayItem:x :x 11
   340 op idiv :displayItem:amount :displayItem:amount 10
   341 jump *label82 equal :displayItem:amount 0
 
   445 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   446 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   447 label *label305
-    * label *label307
   448 op sub :displayItem:x :x 22
   449 op idiv :displayItem:amount :displayItem:amount 10
   450 jump *label82 equal :displayItem:amount 0
 
   554 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   555 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   556 label *label379
-    * label *label381
   557 op sub :displayItem:x :x 33
   558 op idiv :displayItem:amount :displayItem:amount 10
   559 jump *label82 equal :displayItem:amount 0
 
   663 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   664 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   665 label *label453
-    * label *label455
   666 op sub :displayItem:x :x 44
   667 op idiv :displayItem:amount :displayItem:amount 10
   668 jump *label82 equal :displayItem:amount 0
 
   772 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   773 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   774 label *label527
-    * label *label529
   775 label *label82
   776 op add :index :index 1
   777 op sub :y :y 20
 
   784 jump *label136 always
   785 label *label136
   786 draw rect 109 0 176 176
-    * label *label137
   787 label *label131
   788 multijump *tmp35 0 0 (m:marker1)
   789 multilabel *label68 (m:marker1)

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-24 instructions):
 
    77 # "Function: inline def eraseImages(in first_column)"
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
-    * jump *label22 always
    80 label *label22
    81 # "Function: inline def eraseImages(in first_column)"
    82 draw color 0 0 80 255
-    * jump *label24 always
    83 label *label24
    84 draw rect 93 0 16 176
    85 draw color 255 255 255 255
    86 draw image 15 159 @sand 16 0
-    * jump *label536 always
    87 label *label536
    88 draw image 15 139 @copper 16 0
-    * jump *label542 always
    89 label *label542
    90 draw image 15 119 @lead 16 0
-    * jump *label548 always
    91 label *label548
    92 draw image 15 99 @coal 16 0
-    * jump *label554 always
    93 label *label554
    94 draw image 15 79 @titanium 16 0
-    * jump *label560 always
    95 label *label560
    96 draw image 15 59 @thorium 16 0
-    * jump *label566 always
    97 label *label566
    98 draw image 15 39 @scrap 16 0
-    * jump *label572 always
    99 label *label572
   100 draw image 15 19 @graphite 16 0
   101 draw color 255 255 255 255
   102 draw image 101 159 @metaglass 16 0
-    * jump *label584 always
   103 label *label584
   104 draw image 101 139 @silicon 16 0
-    * jump *label590 always
   105 label *label590
   106 draw image 101 119 @pyratite 16 0
-    * jump *label596 always
   107 label *label596
   108 draw image 101 99 @blast-compound 16 0
-    * jump *label602 always
   109 label *label602
   110 draw image 101 79 @plastanium 16 0
-    * jump *label608 always
   111 label *label608
   112 draw image 101 59 @phase-fabric 16 0
-    * jump *label614 always
   113 label *label614
   114 draw image 101 39 @surge-alloy 16 0
-    * jump *label620 always
   115 label *label620
   116 draw image 101 19 @spore-pod 16 0
-    * jump *label626 always
   117 label *label626
   118 drawflush display1
   119 set :x 71
 
   121 # "Function: inline def eraseNumbers(in first_column)"
   122 draw color 0 0 80 255
   123 draw rect 23 0 70 176
-    * jump *label49 always
   124 label *label49
   125 set :index 0
   126 set :item @sand
 
   321 op sub :displayItem:x :x 11
   322 op idiv :displayItem:amount :displayItem:amount 10
   323 jump *label82 equal :displayItem:amount 0
-    * jump *label273 always
   324 label *label273
   325 op mod *tmp133 :displayItem:amount 10
   326 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   429 op sub :displayItem:x :x 22
   430 op idiv :displayItem:amount :displayItem:amount 10
   431 jump *label82 equal :displayItem:amount 0
-    * jump *label347 always
   432 label *label347
   433 op mod *tmp133 :displayItem:amount 10
   434 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   537 op sub :displayItem:x :x 33
   538 op idiv :displayItem:amount :displayItem:amount 10
   539 jump *label82 equal :displayItem:amount 0
-    * jump *label421 always
   540 label *label421
   541 op mod *tmp133 :displayItem:amount 10
   542 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   645 op sub :displayItem:x :x 44
   646 op idiv :displayItem:amount :displayItem:amount 10
   647 jump *label82 equal :displayItem:amount 0
-    * jump *label495 always
   648 label *label495
   649 op mod *tmp133 :displayItem:amount 10
   650 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   759 set :x 157
   760 # "Function: inline def eraseNumbers(in first_column)"
   761 draw color 0 0 80 255
-    * jump *label136 always
   762 label *label136
   763 draw rect 109 0 176 176
   764 label *label131
 
   782 op equal *tmp17 .LINKS @links
   783 op land *tmp18 *tmp16 *tmp17
   784 jump *label632 notEqual *tmp18 false
-    * end

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    77 # "Function: inline def eraseImages(in first_column)"
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
-    * label *label22
    80 # "Function: inline def eraseImages(in first_column)"
    81 draw color 0 0 80 255
-    * label *label24
    82 draw rect 93 0 16 176
    83 draw color 255 255 255 255
    84 draw image 15 159 @sand 16 0
-    * label *label536
    85 draw image 15 139 @copper 16 0
-    * label *label542
    86 draw image 15 119 @lead 16 0
-    * label *label548
    87 draw image 15 99 @coal 16 0
-    * label *label554
    88 draw image 15 79 @titanium 16 0
-    * label *label560
    89 draw image 15 59 @thorium 16 0
-    * label *label566
    90 draw image 15 39 @scrap 16 0
-    * label *label572
    91 draw image 15 19 @graphite 16 0
    92 draw color 255 255 255 255
    93 draw image 101 159 @metaglass 16 0
-    * label *label584
    94 draw image 101 139 @silicon 16 0
-    * label *label590
    95 draw image 101 119 @pyratite 16 0
-    * label *label596
    96 draw image 101 99 @blast-compound 16 0
-    * label *label602
    97 draw image 101 79 @plastanium 16 0
-    * label *label608
    98 draw image 101 59 @phase-fabric 16 0
-    * label *label614
    99 draw image 101 39 @surge-alloy 16 0
-    * label *label620
   100 draw image 101 19 @spore-pod 16 0
-    * label *label626
   101 drawflush display1
   102 set :x 71
   103 set :y 152
   104 # "Function: inline def eraseNumbers(in first_column)"
   105 draw color 0 0 80 255
   106 draw rect 23 0 70 176
-    * label *label49
   107 set :index 0
   108 set :item @sand
   109 op add *tmp35 @counter 1
 
   303 op sub :displayItem:x :x 11
   304 op idiv :displayItem:amount :displayItem:amount 10
   305 jump *label82 equal :displayItem:amount 0
-    * label *label273
   306 op mod *tmp133 :displayItem:amount 10
   307 # "Function: inline def drawDigit(in x, in y, in digit)"
   308 multijump *label274 *tmp133 0 (m:*label153)
 
   410 op sub :displayItem:x :x 22
   411 op idiv :displayItem:amount :displayItem:amount 10
   412 jump *label82 equal :displayItem:amount 0
-    * label *label347
   413 op mod *tmp133 :displayItem:amount 10
   414 # "Function: inline def drawDigit(in x, in y, in digit)"
   415 multijump *label348 *tmp133 0 (m:*label153)
 
   517 op sub :displayItem:x :x 33
   518 op idiv :displayItem:amount :displayItem:amount 10
   519 jump *label82 equal :displayItem:amount 0
-    * label *label421
   520 op mod *tmp133 :displayItem:amount 10
   521 # "Function: inline def drawDigit(in x, in y, in digit)"
   522 multijump *label422 *tmp133 0 (m:*label153)
 
   624 op sub :displayItem:x :x 44
   625 op idiv :displayItem:amount :displayItem:amount 10
   626 jump *label82 equal :displayItem:amount 0
-    * label *label495
   627 op mod *tmp133 :displayItem:amount 10
   628 # "Function: inline def drawDigit(in x, in y, in digit)"
   629 multijump *label496 *tmp133 0 (m:*label153)
 
   737 set :x 157
   738 # "Function: inline def eraseNumbers(in first_column)"
   739 draw color 0 0 80 255
-    * label *label136
   740 draw rect 109 0 176 176
   741 label *label131
   742 multijump *tmp35 0 0 (m:marker1)

Modifications by Final phase, Print Merging, iteration 1 (-14 instructions):
 
     3 set .MESSAGE null
     4 set .DISPLAY null
     5 label *label0
-    * print "Configuring storage display..."
-    * print "\n"
+    6 print "Configuring storage display...\n"
     7 set .LINKS @links
     8 set :n .LINKS
     9 jump *label5 lessThanEq .LINKS 0
    10 label *label138
    11 op sub :n :n 1
    12 getlink :block :n
-    * print "Found: "
-    * print :block
-    * print "\n"
+   13 print "Found: {0}\n"
+   14 format :block
    15 sensor *tmp5 :block @type
    16 jump *label7 notEqual *tmp5 @message
    17 set .MESSAGE :block
 
    38 label *label6
    39 jump *label138 greaterThan :n 0
    40 label *label5
-    * print "Message: "
-    * print .MESSAGE
-    * print "\n"
-    * print "Memory: "
-    * print .MEMORY
-    * print "\n"
-    * print "Container: "
-    * print .CONTAINER
-    * print "\n"
-    * print "Display: "
-    * print .DISPLAY
-    * print "\n"
+   41 print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
+   42 format .MESSAGE
+   43 format .MEMORY
+   44 format .CONTAINER
+   45 format .DISPLAY
    46 op equal *tmp7 .CONTAINER null
    47 op equal *tmp8 .DISPLAY null
    48 op or *tmp9 *tmp7 *tmp8
    49 jump *label15 equal *tmp9 false
-    * print "No container or display."
-    * print "\n"
+   50 print "No container or display.\n"
    51 label *label15
    52 printflush .MESSAGE
    53 jump *label0 equal .CONTAINER null
 
   734 drawflush display1
   735 op sub *tmp234 @time :start
   736 op floor :elapsed *tmp234
-    * print "Storage Display"
-    * print "\n"
-    * print "Elapsed: "
-    * print :elapsed
-    * print " "
-    * print "ms"
+  737 print "Storage Display\nElapsed: {0} ms"
+  738 format :elapsed
   739 printflush message1
   740 sensor *tmp12 .CONTAINER @dead
   741 op equal *tmp13 *tmp12 0

Final code before resolving virtual instructions:

label __start__
set .CONTAINER null
set .MEMORY null
set .MESSAGE null
set .DISPLAY null
label *label0
print "Configuring storage display...\n"
set .LINKS @links
set :n .LINKS
jump *label5 lessThanEq .LINKS 0
label *label138
op sub :n :n 1
getlink :block :n
print "Found: {0}\n"
format :block
sensor *tmp5 :block @type
jump *label7 notEqual *tmp5 @message
set .MESSAGE :block
jump *label6 always
label *label7
jump *label10 equal *tmp5 @memory-bank
jump *label9 notEqual *tmp5 @memory-cell
label *label10
set .MEMORY :block
jump *label6 always
label *label9
jump *label12 equal *tmp5 @vault
jump *label12 equal *tmp5 @container
jump *label12 equal *tmp5 @core-shard
jump *label12 equal *tmp5 @core-foundation
jump *label11 notEqual *tmp5 @core-nucleus
label *label12
set .CONTAINER :block
jump *label6 always
label *label11
jump *label13 notEqual *tmp5 @large-logic-display
set .DISPLAY :block
label *label13
label *label6
jump *label138 greaterThan :n 0
label *label5
print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
format .MESSAGE
format .MEMORY
format .CONTAINER
format .DISPLAY
op equal *tmp7 .CONTAINER null
op equal *tmp8 .DISPLAY null
op or *tmp9 *tmp7 *tmp8
jump *label15 equal *tmp9 false
print "No container or display.\n"
label *label15
printflush .MESSAGE
jump *label0 equal .CONTAINER null
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump __start__ equal *tmp18 false
label *label632
set :start @time
sensor .CAPACITY .CONTAINER @itemCapacity
op div .LIMIT .CAPACITY 5
draw stroke 2
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
draw image 15 159 @sand 16 0
draw image 15 139 @copper 16 0
draw image 15 119 @lead 16 0
draw image 15 99 @coal 16 0
draw image 15 79 @titanium 16 0
draw image 15 59 @thorium 16 0
draw image 15 39 @scrap 16 0
draw image 15 19 @graphite 16 0
draw color 255 255 255 255
draw image 101 159 @metaglass 16 0
draw image 101 139 @silicon 16 0
draw image 101 119 @pyratite 16 0
draw image 101 99 @blast-compound 16 0
draw image 101 79 @plastanium 16 0
draw image 101 59 @phase-fabric 16 0
draw image 101 39 @surge-alloy 16 0
draw image 101 19 @spore-pod 16 0
drawflush display1
set :x 71
set :y 152
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp35 @counter 1
jump *label50 always
multilabel *label53
set :item @copper
op add *tmp35 @counter 1
jump *label50 always
multilabel *label54
set :item @lead
op add *tmp35 @counter 1
jump *label50 always
multilabel *label55
set :item @coal
op add *tmp35 @counter 1
jump *label50 always
multilabel *label56
set :item @titanium
op add *tmp35 @counter 1
jump *label50 always
multilabel *label57
set :item @thorium
op add *tmp35 @counter 1
jump *label50 always
multilabel *label58
set :item @scrap
op add *tmp35 @counter 1
jump *label50 always
multilabel *label59
set :item @graphite
op add *tmp35 @counter 1
jump *label50 always
multilabel *label60
set :item @metaglass
op add *tmp35 @counter 1
jump *label50 always
multilabel *label61
set :item @silicon
op add *tmp35 @counter 1
jump *label50 always
multilabel *label62
set :item @pyratite
op add *tmp35 @counter 1
jump *label50 always
multilabel *label63
set :item @blast-compound
op add *tmp35 @counter 1
jump *label50 always
multilabel *label64
set :item @plastanium
op add *tmp35 @counter 1
jump *label50 always
multilabel *label65
set :item @phase-fabric
op add *tmp35 @counter 1
jump *label50 always
multilabel *label66
set :item @surge-alloy
op add *tmp35 @counter 1
jump *label50 always
multilabel *label67
set :item @spore-pod
set *tmp35 null
label *label50
# "Function: inline def displayItem(in index, in item, in x, in y)"
sensor :displayItem:amount .CONTAINER :item
op strictEqual *tmp38 .MEMORY null
jump *label70 equal *tmp38 false
jump *label72 notEqual :displayItem:amount .CAPACITY
draw color 0 255 0 255
jump *label199 always
label *label72
jump *label74 lessThanEq :displayItem:amount .LIMIT
draw color 255 255 0 255
jump *label199 always
label *label74
draw color 255 80 80 255
jump *label199 always
label *label70
read :displayItem:last .MEMORY :index
write :displayItem:amount .MEMORY :index
jump *label76 notEqual :displayItem:amount :displayItem:last
draw color 255 255 0 255
jump *label199 always
label *label76
jump *label78 greaterThanEq :displayItem:amount :displayItem:last
draw color 255 80 80 255
jump *label199 always
label *label78
draw color 0 255 0 255
jump *label199 always
label *label199
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label200 *tmp133 0
multilabel *label200
jump *label210 always
multilabel *label201
jump *label212 always
multilabel *label202
jump *label214 always
multilabel *label203
jump *label216 always
multilabel *label204
jump *label218 always
multilabel *label205
jump *label220 always
multilabel *label206
jump *label222 always
multilabel *label207
jump *label224 always
multilabel *label208
jump *label226 always
multilabel *label209
jump *label228 always
label *label210
op sub *tmp138 :x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label231 always
label *label212
op add *tmp142 :x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label231 always
label *label214
op add *tmp146 :x 7
draw line :x :y *tmp146 :y
op add *tmp147 :y 6
draw line :x :y :x *tmp147
draw line :x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :x *tmp154 *tmp146 *tmp154
jump *label231 always
label *label216
op add *tmp158 :x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :x :y *tmp158 :y
op add *tmp162 :y 6
draw line :x *tmp162 *tmp158 *tmp162
draw line :x *tmp160 *tmp158 *tmp160
jump *label231 always
label *label218
op add *tmp168 :x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :x *tmp171 *tmp168 *tmp171
draw line :x *tmp171 :x *tmp170
jump *label231 always
label *label220
op add *tmp176 :x 7
draw line :x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :x *tmp179 :x *tmp184
draw line :x *tmp184 *tmp176 *tmp184
jump *label231 always
label *label222
op add *tmp188 :y 12
draw line :x :y :x *tmp188
op add *tmp189 :x 7
draw line :x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :x *tmp192 *tmp189 *tmp192
draw line :x *tmp188 *tmp189 *tmp188
jump *label231 always
label *label224
op add *tmp200 :x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :x *tmp203 *tmp200 *tmp203
jump *label231 always
label *label226
op sub *tmp209 :x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :x 7
draw line :x *tmp212 *tmp213 *tmp212
jump *label231 always
label *label228
op add *tmp215 :x 7
draw line :x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :x *tmp219 *tmp215 *tmp219
draw line :x *tmp219 :x *tmp218
draw line :x *tmp218 *tmp215 *tmp218
label *label231
op sub :displayItem:x :x 11
op idiv :displayItem:amount :displayItem:amount 10
jump *label82 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label274 *tmp133 0
multilabel *label274
jump *label284 always
multilabel *label275
jump *label286 always
multilabel *label276
jump *label288 always
multilabel *label277
jump *label290 always
multilabel *label278
jump *label292 always
multilabel *label279
jump *label294 always
multilabel *label280
jump *label296 always
multilabel *label281
jump *label298 always
multilabel *label282
jump *label300 always
multilabel *label283
jump *label302 always
label *label284
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label305 always
label *label286
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label305 always
label *label288
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label305 always
label *label290
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label305 always
label *label292
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label305 always
label *label294
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label305 always
label *label296
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label305 always
label *label298
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label305 always
label *label300
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label305 always
label *label302
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label305
op sub :displayItem:x :x 22
op idiv :displayItem:amount :displayItem:amount 10
jump *label82 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label348 *tmp133 0
multilabel *label348
jump *label358 always
multilabel *label349
jump *label360 always
multilabel *label350
jump *label362 always
multilabel *label351
jump *label364 always
multilabel *label352
jump *label366 always
multilabel *label353
jump *label368 always
multilabel *label354
jump *label370 always
multilabel *label355
jump *label372 always
multilabel *label356
jump *label374 always
multilabel *label357
jump *label376 always
label *label358
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label379 always
label *label360
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label379 always
label *label362
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label379 always
label *label364
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label379 always
label *label366
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label379 always
label *label368
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label379 always
label *label370
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label379 always
label *label372
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label379 always
label *label374
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label379 always
label *label376
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label379
op sub :displayItem:x :x 33
op idiv :displayItem:amount :displayItem:amount 10
jump *label82 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label422 *tmp133 0
multilabel *label422
jump *label432 always
multilabel *label423
jump *label434 always
multilabel *label424
jump *label436 always
multilabel *label425
jump *label438 always
multilabel *label426
jump *label440 always
multilabel *label427
jump *label442 always
multilabel *label428
jump *label444 always
multilabel *label429
jump *label446 always
multilabel *label430
jump *label448 always
multilabel *label431
jump *label450 always
label *label432
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label453 always
label *label434
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label453 always
label *label436
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label453 always
label *label438
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label453 always
label *label440
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label453 always
label *label442
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label453 always
label *label444
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label453 always
label *label446
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label453 always
label *label448
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label453 always
label *label450
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label453
op sub :displayItem:x :x 44
op idiv :displayItem:amount :displayItem:amount 10
jump *label82 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label496 *tmp133 0
multilabel *label496
jump *label506 always
multilabel *label497
jump *label508 always
multilabel *label498
jump *label510 always
multilabel *label499
jump *label512 always
multilabel *label500
jump *label514 always
multilabel *label501
jump *label516 always
multilabel *label502
jump *label518 always
multilabel *label503
jump *label520 always
multilabel *label504
jump *label522 always
multilabel *label505
jump *label524 always
label *label506
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label527 always
label *label508
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label527 always
label *label510
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label527 always
label *label512
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label527 always
label *label514
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label527 always
label *label516
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label527 always
label *label518
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label527 always
label *label520
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label527 always
label *label522
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label527 always
label *label524
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label527
label *label82
op add :index :index 1
op sub :y :y 20
jump *label131 notEqual :index 8
drawflush display1
set :y 152
set :x 157
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label131
multijump *tmp35 0 0
multilabel *label68
drawflush display1
op sub *tmp234 @time :start
op floor :elapsed *tmp234
print "Storage Display\nElapsed: {0} ms"
format :elapsed
printflush message1
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump *label632 notEqual *tmp18 false
