   645 instructions before optimizations.
    11 instructions eliminated by Temp Variables Elimination (2 iterations).
     3 instructions eliminated by Case Expression Optimization.
    62 instructions eliminated by Dead Code Elimination (6 iterations).
     3 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
     9 instructions eliminated by Jump Optimization (5 iterations).
    33 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
   294 instructions eliminated by Data Flow Optimization (4 passes, 27 iterations).
     6 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   644 instructions added by Loop Unrolling (16 iterations).
     2 loops unrolled by Loop Unrolling.
    10 instructions added by Case Switching (16 iterations).
    10 case expressions converted to switched jumps Case Switching.
    28 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    51 instructions updated by JumpThreading.
   251 instructions eliminated by Unreachable Code Elimination (2 iterations).
    14 instructions eliminated by Print Merging.
   597 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 626):
    Replicate loop condition at line 58:1                        size    +7, benefit       25.0, efficiency      3.571
    Unroll iteration loop at line 71:5                           size   +81, benefit     1575.0, efficiency     19.444
  * Unroll loop at line 152:5                                    size  +521, benefit   156250.0, efficiency    299.904 (+519 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit    27343.8, efficiency  27343.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit    27343.8, efficiency  27343.750

Pass 1: speed optimization selection (cost limit 107):
    Replicate loop condition at line 58:1                        size    +7, benefit       25.0, efficiency      3.571
  * Unroll iteration loop at line 71:5                           size   +81, benefit     1575.0, efficiency     19.444 (-14 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 121):
  * Replicate loop condition at line 58:1                        size    +7, benefit       25.0, efficiency      3.571 (+7 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 114):
  * Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 113):
  * Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 112):
  * Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 111):
  * Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 110):
  * Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 109):
  * Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 108):
  * Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 107):
  * Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 106):
  * Convert case at line 213:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)
  o Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750

Pass 1: speed optimization selection (cost limit 105):
  * Convert case at line 165:5 (segments: 1)                     size    +1, benefit     1093.8, efficiency   1093.750 (+1 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-3 instructions):
 
    18 print :block
    19 print "\n"
    20 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   21 jump *label8 equal *tmp5 @message
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
    25 set *tmp4 .MESSAGE
    26 jump *label6 always
    27 label *label7
-    * jump *label10 equal *tmp6 @memory-bank
-    * jump *label10 equal *tmp6 @memory-cell
+   28 jump *label10 equal *tmp5 @memory-bank
+   29 jump *label10 equal *tmp5 @memory-cell
    30 jump *label9 always
    31 label *label10
    32 set .MEMORY :block
    33 set *tmp4 .MEMORY
    34 jump *label6 always
    35 label *label9
-    * jump *label12 equal *tmp6 @vault
-    * jump *label12 equal *tmp6 @container
-    * jump *label12 equal *tmp6 @core-shard
-    * jump *label12 equal *tmp6 @core-foundation
-    * jump *label12 equal *tmp6 @core-nucleus
+   36 jump *label12 equal *tmp5 @vault
+   37 jump *label12 equal *tmp5 @container
+   38 jump *label12 equal *tmp5 @core-shard
+   39 jump *label12 equal *tmp5 @core-foundation
+   40 jump *label12 equal *tmp5 @core-nucleus
    41 jump *label11 always
    42 label *label12
    43 set .CONTAINER :block
    44 set *tmp4 .CONTAINER
    45 jump *label6 always
    46 label *label11
-    * jump *label14 equal *tmp6 @large-logic-display
+   47 jump *label14 equal *tmp5 @large-logic-display
    48 jump *label13 always
    49 label *label14
    50 set .DISPLAY :block
 
   363 set :drawDigitSlanted:x :displayItem:x
   364 set :drawDigitSlanted:y :displayItem:y
   365 set :drawDigitSlanted:digit *tmp53
-    * set *tmp56 :drawDigitSlanted:digit
-    * jump *label92 equal *tmp56 0
+  366 jump *label92 equal :drawDigitSlanted:digit 0
   367 jump *label91 always
   368 label *label92
   369 op sub *tmp57 :drawDigitSlanted:x 2
 
   374 set *tmp55 null
   375 jump *label90 always
   376 label *label91
-    * jump *label94 equal *tmp56 1
+  377 jump *label94 equal :drawDigitSlanted:digit 1
   378 jump *label93 always
   379 label *label94
   380 op add *tmp61 :drawDigitSlanted:x 7
 
   386 set *tmp55 null
   387 jump *label90 always
   388 label *label93
-    * jump *label96 equal *tmp56 2
+  389 jump *label96 equal :drawDigitSlanted:digit 2
   390 jump *label95 always
   391 label *label96
   392 op add *tmp66 :drawDigitSlanted:x 7
 
   407 set *tmp55 null
   408 jump *label90 always
   409 label *label95
-    * jump *label98 equal *tmp56 3
+  410 jump *label98 equal :drawDigitSlanted:digit 3
   411 jump *label97 always
   412 label *label98
   413 op add *tmp77 :drawDigitSlanted:x 7
 
   428 set *tmp55 null
   429 jump *label90 always
   430 label *label97
-    * jump *label100 equal *tmp56 4
+  431 jump *label100 equal :drawDigitSlanted:digit 4
   432 jump *label99 always
   433 label *label100
   434 op add *tmp88 :drawDigitSlanted:x 7
 
   446 set *tmp55 null
   447 jump *label90 always
   448 label *label99
-    * jump *label102 equal *tmp56 5
+  449 jump *label102 equal :drawDigitSlanted:digit 5
   450 jump *label101 always
   451 label *label102
   452 op add *tmp97 :drawDigitSlanted:x 7
 
   466 set *tmp55 null
   467 jump *label90 always
   468 label *label101
-    * jump *label104 equal *tmp56 6
+  469 jump *label104 equal :drawDigitSlanted:digit 6
   470 jump *label103 always
   471 label *label104
   472 op sub *tmp107 :drawDigitSlanted:x 2
 
   481 set *tmp55 null
   482 jump *label90 always
   483 label *label103
-    * jump *label106 equal *tmp56 7
+  484 jump *label106 equal :drawDigitSlanted:digit 7
   485 jump *label105 always
   486 label *label106
   487 op add *tmp114 :drawDigitSlanted:x 7
 
   494 set *tmp55 null
   495 jump *label90 always
   496 label *label105
-    * jump *label108 equal *tmp56 8
+  497 jump *label108 equal :drawDigitSlanted:digit 8
   498 jump *label107 always
   499 label *label108
   500 op sub *tmp119 :drawDigitSlanted:x 2
 
   509 set *tmp55 null
   510 jump *label90 always
   511 label *label107
-    * jump *label110 equal *tmp56 9
+  512 jump *label110 equal :drawDigitSlanted:digit 9
   513 jump *label109 always
   514 label *label110
   515 op sub *tmp126 :drawDigitSlanted:x 2
 
   536 set :drawDigit:x :displayItem:x
   537 set :drawDigit:y :displayItem:y
   538 set :drawDigit:digit *tmp133
-    * set *tmp136 :drawDigit:digit
-    * jump *label114 equal *tmp136 0
+  539 jump *label114 equal :drawDigit:digit 0
   540 jump *label113 always
   541 label *label114
   542 op sub *tmp137 :drawDigit:x 2
 
   547 set *tmp135 null
   548 jump *label112 always
   549 label *label113
-    * jump *label116 equal *tmp136 1
+  550 jump *label116 equal :drawDigit:digit 1
   551 jump *label115 always
   552 label *label116
   553 op add *tmp141 :drawDigit:x 7
 
   559 set *tmp135 null
   560 jump *label112 always
   561 label *label115
-    * jump *label118 equal *tmp136 2
+  562 jump *label118 equal :drawDigit:digit 2
   563 jump *label117 always
   564 label *label118
   565 op add *tmp146 :drawDigit:x 7
 
   582 set *tmp135 null
   583 jump *label112 always
   584 label *label117
-    * jump *label120 equal *tmp136 3
+  585 jump *label120 equal :drawDigit:digit 3
   586 jump *label119 always
   587 label *label120
   588 op add *tmp158 :drawDigit:x 7
 
   602 set *tmp135 null
   603 jump *label112 always
   604 label *label119
-    * jump *label122 equal *tmp136 4
+  605 jump *label122 equal :drawDigit:digit 4
   606 jump *label121 always
   607 label *label122
   608 op add *tmp168 :drawDigit:x 7
 
   619 set *tmp135 null
   620 jump *label112 always
   621 label *label121
-    * jump *label124 equal *tmp136 5
+  622 jump *label124 equal :drawDigit:digit 5
   623 jump *label123 always
   624 label *label124
   625 op add *tmp176 :drawDigit:x 7
 
   642 set *tmp135 null
   643 jump *label112 always
   644 label *label123
-    * jump *label126 equal *tmp136 6
+  645 jump *label126 equal :drawDigit:digit 6
   646 jump *label125 always
   647 label *label126
   648 op add *tmp188 :drawDigit:y 12
 
   664 set *tmp135 null
   665 jump *label112 always
   666 label *label125
-    * jump *label128 equal *tmp136 7
+  667 jump *label128 equal :drawDigit:digit 7
   668 jump *label127 always
   669 label *label128
   670 op add *tmp199 :drawDigit:x 7
 
   681 set *tmp135 null
   682 jump *label112 always
   683 label *label127
-    * jump *label130 equal *tmp136 8
+  684 jump *label130 equal :drawDigit:digit 8
   685 jump *label129 always
   686 label *label130
   687 op sub *tmp208 :drawDigit:x 2
 
   696 set *tmp135 null
   697 jump *label112 always
   698 label *label129
-    * jump *label132 equal *tmp136 9
+  699 jump *label132 equal :drawDigit:digit 9
   700 jump *label131 always
   701 label *label132
   702 op add *tmp215 :drawDigit:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-21 instructions):
 
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    25 jump *label6 always
    26 label *label7
    27 jump *label10 equal *tmp5 @memory-bank
 
    29 jump *label9 always
    30 label *label10
    31 set .MEMORY :block
-    * set *tmp4 .MEMORY
    32 jump *label6 always
    33 label *label9
    34 jump *label12 equal *tmp5 @vault
 
    39 jump *label11 always
    40 label *label12
    41 set .CONTAINER :block
-    * set *tmp4 .CONTAINER
    42 jump *label6 always
    43 label *label11
    44 jump *label14 equal *tmp5 @large-logic-display
    45 jump *label13 always
    46 label *label14
    47 set .DISPLAY :block
-    * set *tmp4 .DISPLAY
    48 jump *label6 always
    49 label *label13
-    * set *tmp4 null
    50 label *label6
    51 label *label4
    52 jump *label3 always
 
    69 jump *label15 equal *tmp9 false
    70 print "No container or display."
    71 print "\n"
-    * set *tmp10 "No container or display."
    72 jump *label16 always
    73 label *label15
-    * set *tmp10 null
    74 label *label16
    75 printflush .MESSAGE
    76 label *label1
 
   106 draw rect 93 0 16 176
   107 set *tmp23 null
   108 label *label22
-    * set *tmp22 *tmp23
   109 label *label20
   110 # "Function: inline def eraseImages(in first_column)"
   111 set :eraseImages.1:first_column false
 
   118 draw rect 93 0 16 176
   119 set *tmp25 null
   120 label *label25
-    * set *tmp24 *tmp25
   121 label *label23
   122 draw color 255 255 255 255
   123 set :index 0
 
   199 set :y 152
   200 set :x 93
   201 draw color 255 255 255 255
-    * set *tmp32 null
   202 jump *label48 always
   203 label *label47
-    * set *tmp32 null
   204 label *label48
   205 label *label27
   206 multijump *tmp26 0 0 (m:marker0)
 
   221 draw rect 109 0 176 176
   222 set *tmp34 null
   223 label *label51
-    * set *tmp33 *tmp34
   224 label *label49
   225 set :index 0
   226 set :item @sand
 
   315 label *label79
   316 set *tmp41 *tmp43
   317 label *label77
-    * set *tmp39 *tmp41
   318 jump *label75 always
   319 label *label74
   320 set *tmp44 :displayItem:index
 
   339 label *label83
   340 set *tmp49 *tmp51
   341 label *label81
-    * set *tmp39 *tmp49
   342 label *label75
   343 set :displayItem:i 0
   344 label *label84
 
   514 label *label90
   515 set *tmp54 *tmp55
   516 label *label89
-    * set *tmp52 *tmp54
   517 jump *label88 always
   518 label *label87
   519 op mod *tmp133 :displayItem:amount 10
 
   708 label *label112
   709 set *tmp134 *tmp135
   710 label *label111
-    * set *tmp52 *tmp134
   711 label *label88
   712 op sub :displayItem:x :displayItem:x 11
   713 op idiv :displayItem:amount :displayItem:amount 10
   714 op equal *tmp227 :displayItem:amount 0
   715 jump *label133 equal *tmp227 false
   716 jump *label86 always
-    * set *tmp228 null
   717 jump *label134 always
   718 label *label133
-    * set *tmp228 null
   719 label *label134
   720 label *label85
   721 op add :displayItem:i :displayItem:i 1
   722 jump *label84 always
   723 label *label86
-    * set *tmp36 null
   724 label *label73
   725 op add :index :index 1
   726 op sub :y :y 20
 
   742 label *label139
   743 set *tmp231 *tmp232
   744 label *label137
-    * set *tmp230 *tmp231
   745 jump *label136 always
   746 label *label135
-    * set *tmp230 null
   747 label *label136
   748 label *label53
   749 multijump *tmp35 0 0 (m:marker1)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-13 instructions):
 
   100 draw color 0 0 80 255
   101 jump *label21 equal :eraseImages:first_column false
   102 draw rect 0 0 23 176
-    * set *tmp23 null
   103 jump *label22 always
   104 label *label21
   105 draw rect 93 0 16 176
-    * set *tmp23 null
   106 label *label22
   107 label *label20
   108 # "Function: inline def eraseImages(in first_column)"
 
   110 draw color 0 0 80 255
   111 jump *label24 equal :eraseImages.1:first_column false
   112 draw rect 0 0 23 176
-    * set *tmp25 null
   113 jump *label25 always
   114 label *label24
   115 draw rect 93 0 16 176
-    * set *tmp25 null
   116 label *label25
   117 label *label23
   118 draw color 255 255 255 255
 
   211 draw color 0 0 80 255
   212 jump *label50 equal :eraseNumbers:first_column false
   213 draw rect 23 0 70 176
-    * set *tmp34 null
   214 jump *label51 always
   215 label *label50
   216 draw rect 109 0 176 176
-    * set *tmp34 null
   217 label *label51
   218 label *label49
   219 set :index 0
 
   295 op equal *tmp40 :displayItem:amount .CAPACITY
   296 jump *label76 equal *tmp40 false
   297 draw color 0 255 0 255
-    * set *tmp41 null
   298 jump *label77 always
   299 label *label76
   300 op greaterThan *tmp42 :displayItem:amount .LIMIT
 
   306 draw color 255 80 80 255
   307 set *tmp43 null
   308 label *label79
-    * set *tmp41 *tmp43
   309 label *label77
   310 jump *label75 always
   311 label *label74
 
   317 op equal *tmp48 :displayItem:amount :displayItem:last
   318 jump *label80 equal *tmp48 false
   319 draw color 255 255 0 255
-    * set *tmp49 null
   320 jump *label81 always
   321 label *label80
   322 op lessThan *tmp50 :displayItem:amount :displayItem:last
 
   328 draw color 0 255 0 255
   329 set *tmp51 null
   330 label *label83
-    * set *tmp49 *tmp51
   331 label *label81
   332 label *label75
   333 set :displayItem:i 0
 
   502 label *label109
   503 set *tmp55 null
   504 label *label90
-    * set *tmp54 *tmp55
   505 label *label89
   506 jump *label88 always
   507 label *label87
 
   695 label *label131
   696 set *tmp135 null
   697 label *label112
-    * set *tmp134 *tmp135
   698 label *label111
   699 label *label88
   700 op sub :displayItem:x :displayItem:x 11
 
   728 draw rect 109 0 176 176
   729 set *tmp232 null
   730 label *label139
-    * set *tmp231 *tmp232
   731 label *label137
   732 jump *label136 always
   733 label *label135

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-28 instructions):
 
   300 op greaterThan *tmp42 :displayItem:amount .LIMIT
   301 jump *label78 equal *tmp42 false
   302 draw color 255 255 0 255
-    * set *tmp43 null
   303 jump *label79 always
   304 label *label78
   305 draw color 255 80 80 255
-    * set *tmp43 null
   306 label *label79
   307 label *label77
   308 jump *label75 always
 
   320 op lessThan *tmp50 :displayItem:amount :displayItem:last
   321 jump *label82 equal *tmp50 false
   322 draw color 255 80 80 255
-    * set *tmp51 null
   323 jump *label83 always
   324 label *label82
   325 draw color 0 255 0 255
-    * set *tmp51 null
   326 label *label83
   327 label *label81
   328 label *label75
 
   343 op sub *tmp59 :drawDigitSlanted:y 2
   344 op add *tmp60 *tmp59 1
   345 draw lineRect *tmp58 *tmp60 9 14
-    * set *tmp55 null
   346 jump *label90 always
   347 label *label91
   348 jump *label94 equal :drawDigitSlanted:digit 1
 
   354 op sub *tmp64 *tmp63 1
   355 op add *tmp65 :drawDigitSlanted:y 12
   356 draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
-    * set *tmp55 null
   357 jump *label90 always
   358 label *label93
   359 jump *label96 equal :drawDigitSlanted:digit 2
 
   374 op add *tmp75 :drawDigitSlanted:x 7
   375 op add *tmp76 :drawDigitSlanted:y 12
   376 draw line *tmp73 *tmp74 *tmp75 *tmp76
-    * set *tmp55 null
   377 jump *label90 always
   378 label *label95
   379 jump *label98 equal :drawDigitSlanted:digit 3
 
   394 op add *tmp86 :drawDigitSlanted:x 7
   395 op add *tmp87 :drawDigitSlanted:y 12
   396 draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
-    * set *tmp55 null
   397 jump *label90 always
   398 label *label97
   399 jump *label100 equal :drawDigitSlanted:digit 4
 
   411 op add *tmp95 :drawDigitSlanted:x 7
   412 op add *tmp96 :drawDigitSlanted:y 12
   413 draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
-    * set *tmp55 null
   414 jump *label90 always
   415 label *label99
   416 jump *label102 equal :drawDigitSlanted:digit 5
 
   430 op add *tmp105 :drawDigitSlanted:x 7
   431 op add *tmp106 :drawDigitSlanted:y 12
   432 draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
-    * set *tmp55 null
   433 jump *label90 always
   434 label *label101
   435 jump *label104 equal :drawDigitSlanted:digit 6
 
   444 op add *tmp112 :drawDigitSlanted:x 7
   445 op add *tmp113 :drawDigitSlanted:y 12
   446 draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
-    * set *tmp55 null
   447 jump *label90 always
   448 label *label103
   449 jump *label106 equal :drawDigitSlanted:digit 7
 
   456 op add *tmp117 :drawDigitSlanted:x 7
   457 op add *tmp118 :drawDigitSlanted:y 12
   458 draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
-    * set *tmp55 null
   459 jump *label90 always
   460 label *label105
   461 jump *label108 equal :drawDigitSlanted:digit 8
 
   470 op add *tmp124 :drawDigitSlanted:x 7
   471 op add *tmp125 :drawDigitSlanted:y 6
   472 draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
-    * set *tmp55 null
   473 jump *label90 always
   474 label *label107
   475 jump *label110 equal :drawDigitSlanted:digit 9
 
   484 op add *tmp131 :drawDigitSlanted:x 7
   485 op add *tmp132 :drawDigitSlanted:y 6
   486 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
-    * set *tmp55 null
   487 jump *label90 always
   488 label *label109
-    * set *tmp55 null
   489 label *label90
   490 label *label89
   491 jump *label88 always
 
   503 op sub *tmp139 :drawDigit:y 2
   504 op add *tmp140 *tmp139 1
   505 draw lineRect *tmp138 *tmp140 9 14
-    * set *tmp135 null
   506 jump *label112 always
   507 label *label113
   508 jump *label116 equal :drawDigit:digit 1
 
   514 op sub *tmp144 *tmp143 1
   515 op add *tmp145 :drawDigit:y 12
   516 draw line *tmp142 :drawDigit:y *tmp144 *tmp145
-    * set *tmp135 null
   517 jump *label112 always
   518 label *label115
   519 jump *label118 equal :drawDigit:digit 2
 
   536 op add *tmp156 :drawDigit:x 7
   537 op add *tmp157 :drawDigit:y 12
   538 draw line :drawDigit:x *tmp155 *tmp156 *tmp157
-    * set *tmp135 null
   539 jump *label112 always
   540 label *label117
   541 jump *label120 equal :drawDigit:digit 3
 
   555 op add *tmp166 :drawDigit:x 7
   556 op add *tmp167 :drawDigit:y 12
   557 draw line :drawDigit:x *tmp165 *tmp166 *tmp167
-    * set *tmp135 null
   558 jump *label112 always
   559 label *label119
   560 jump *label122 equal :drawDigit:digit 4
 
   571 op add *tmp174 :drawDigit:y 6
   572 op add *tmp175 :drawDigit:y 12
   573 draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
-    * set *tmp135 null
   574 jump *label112 always
   575 label *label121
   576 jump *label124 equal :drawDigit:digit 5
 
   593 op add *tmp186 :drawDigit:x 7
   594 op add *tmp187 :drawDigit:y 12
   595 draw line :drawDigit:x *tmp185 *tmp186 *tmp187
-    * set *tmp135 null
   596 jump *label112 always
   597 label *label123
   598 jump *label126 equal :drawDigit:digit 6
 
   614 op add *tmp197 :drawDigit:x 7
   615 op add *tmp198 :drawDigit:y 12
   616 draw line :drawDigit:x *tmp196 *tmp197 *tmp198
-    * set *tmp135 null
   617 jump *label112 always
   618 label *label125
   619 jump *label128 equal :drawDigit:digit 7
 
   630 op sub *tmp206 *tmp205 1
   631 op add *tmp207 :drawDigit:y 12
   632 draw line :drawDigit:x *tmp204 *tmp206 *tmp207
-    * set *tmp135 null
   633 jump *label112 always
   634 label *label127
   635 jump *label130 equal :drawDigit:digit 8
 
   644 op add *tmp213 :drawDigit:x 7
   645 op add *tmp214 :drawDigit:y 6
   646 draw line :drawDigit:x *tmp212 *tmp213 *tmp214
-    * set *tmp135 null
   647 jump *label112 always
   648 label *label129
   649 jump *label132 equal :drawDigit:digit 9
 
   666 op add *tmp225 :drawDigit:x 7
   667 op add *tmp226 :drawDigit:y 12
   668 draw line :drawDigit:x *tmp224 *tmp225 *tmp226
-    * set *tmp135 null
   669 jump *label112 always
   670 label *label131
-    * set *tmp135 null
   671 label *label112
   672 label *label111
   673 label *label88
 
   696 draw color 0 0 80 255
   697 jump *label138 equal :eraseNumbers.1:first_column false
   698 draw rect 23 0 70 176
-    * set *tmp232 null
   699 jump *label139 always
   700 label *label138
   701 draw rect 109 0 176 176
-    * set *tmp232 null
   702 label *label139
   703 label *label137
   704 jump *label136 always

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-11 instructions):
 
     4 label *label0
     5 print "Configuring storage display..."
     6 print "\n"
-    * set *tmp0 @links
-    * set .LINKS *tmp0
+    7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
    10 op greaterThan *tmp1 :n 0
    11 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   12 op sub :n :n 1
+   13 getlink :block :n
    14 print "Found: "
    15 print :block
    16 print "\n"
 
    83 op equal *tmp17 .LINKS @links
    84 op land *tmp18 *tmp16 *tmp17
    85 jump *label19 equal *tmp18 false
-    * set *tmp19 @time
-    * set :start *tmp19
-    * sensor *tmp20 .CONTAINER @itemCapacity
-    * set .CAPACITY *tmp20
-    * op div *tmp21 .CAPACITY 5
-    * set .LIMIT *tmp21
+   86 set :start @time
+   87 sensor .CAPACITY .CONTAINER @itemCapacity
+   88 op div .LIMIT .CAPACITY 5
    89 draw stroke 2
    90 set :x 7
    91 set :y 152
 
   282 set :displayItem:item :item
   283 set :displayItem:x :x
   284 set :displayItem:y :y
-    * sensor *tmp37 .CONTAINER :displayItem:item
-    * set :displayItem:amount *tmp37
+  285 sensor :displayItem:amount .CONTAINER :displayItem:item
   286 op strictEqual *tmp38 .MEMORY null
   287 jump *label74 equal *tmp38 false
   288 op equal *tmp40 :displayItem:amount .CAPACITY
 
   300 label *label77
   301 jump *label75 always
   302 label *label74
-    * set *tmp44 :displayItem:index
-    * read *tmp45 .MEMORY *tmp44
-    * set :displayItem:last *tmp45
-    * set *tmp46 :displayItem:index
-    * write :displayItem:amount .MEMORY *tmp46
+  303 read :displayItem:last .MEMORY :displayItem:index
+  304 write :displayItem:amount .MEMORY :displayItem:index
   305 op equal *tmp48 :displayItem:amount :displayItem:last
   306 jump *label80 equal *tmp48 false
   307 draw color 255 255 0 255
 
   701 label *label54
   702 drawflush display1
   703 op sub *tmp233 @time :start
-    * op floor *tmp234 *tmp233
-    * set :elapsed *tmp234
+  704 op floor :elapsed *tmp233
   705 print "Storage Display"
   706 print "\n"
   707 print "Elapsed: "

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1:
 
   319 set :displayItem:i 0
   320 label *label84
   321 jump *label86 greaterThanEq :displayItem:i 5
-    * jump *label87 equal false false
+  322 jump *label87 always
   323 op mod *tmp53 :displayItem:amount 10
   324 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   325 set :drawDigitSlanted:x :displayItem:x

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-24 instructions):
 
    15 print :block
    16 print "\n"
    17 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   18 jump *label7 notEqual *tmp5 @message
    19 label *label8
    20 set .MESSAGE :block
    21 jump *label6 always
    22 label *label7
    23 jump *label10 equal *tmp5 @memory-bank
-    * jump *label10 equal *tmp5 @memory-cell
-    * jump *label9 always
+   24 jump *label9 notEqual *tmp5 @memory-cell
    25 label *label10
    26 set .MEMORY :block
    27 jump *label6 always
 
    30 jump *label12 equal *tmp5 @container
    31 jump *label12 equal *tmp5 @core-shard
    32 jump *label12 equal *tmp5 @core-foundation
-    * jump *label12 equal *tmp5 @core-nucleus
-    * jump *label11 always
+   33 jump *label11 notEqual *tmp5 @core-nucleus
    34 label *label12
    35 set .CONTAINER :block
    36 jump *label6 always
    37 label *label11
-    * jump *label14 equal *tmp5 @large-logic-display
-    * jump *label13 always
+   38 jump *label13 notEqual *tmp5 @large-logic-display
    39 label *label14
    40 set .DISPLAY :block
    41 jump *label6 always
 
   321 set :drawDigitSlanted:x :displayItem:x
   322 set :drawDigitSlanted:y :displayItem:y
   323 set :drawDigitSlanted:digit *tmp53
-    * jump *label92 equal :drawDigitSlanted:digit 0
-    * jump *label91 always
+  324 jump *label91 notEqual :drawDigitSlanted:digit 0
   325 label *label92
   326 op sub *tmp57 :drawDigitSlanted:x 2
   327 op add *tmp58 *tmp57 1
 
   330 draw lineRect *tmp58 *tmp60 9 14
   331 jump *label90 always
   332 label *label91
-    * jump *label94 equal :drawDigitSlanted:digit 1
-    * jump *label93 always
+  333 jump *label93 notEqual :drawDigitSlanted:digit 1
   334 label *label94
   335 op add *tmp61 :drawDigitSlanted:x 7
   336 op sub *tmp62 *tmp61 1
 
   340 draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
   341 jump *label90 always
   342 label *label93
-    * jump *label96 equal :drawDigitSlanted:digit 2
-    * jump *label95 always
+  343 jump *label95 notEqual :drawDigitSlanted:digit 2
   344 label *label96
   345 op add *tmp66 :drawDigitSlanted:x 7
   346 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp66 :drawDigitSlanted:y
 
   359 draw line *tmp73 *tmp74 *tmp75 *tmp76
   360 jump *label90 always
   361 label *label95
-    * jump *label98 equal :drawDigitSlanted:digit 3
-    * jump *label97 always
+  362 jump *label97 notEqual :drawDigitSlanted:digit 3
   363 label *label98
   364 op add *tmp77 :drawDigitSlanted:x 7
   365 op add *tmp78 :drawDigitSlanted:y 6
 
   378 draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
   379 jump *label90 always
   380 label *label97
-    * jump *label100 equal :drawDigitSlanted:digit 4
-    * jump *label99 always
+  381 jump *label99 notEqual :drawDigitSlanted:digit 4
   382 label *label100
   383 op add *tmp88 :drawDigitSlanted:x 7
   384 op add *tmp89 :drawDigitSlanted:x 7
 
   394 draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
   395 jump *label90 always
   396 label *label99
-    * jump *label102 equal :drawDigitSlanted:digit 5
-    * jump *label101 always
+  397 jump *label101 notEqual :drawDigitSlanted:digit 5
   398 label *label102
   399 op add *tmp97 :drawDigitSlanted:x 7
   400 op add *tmp98 :drawDigitSlanted:y 6
 
   412 draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
   413 jump *label90 always
   414 label *label101
-    * jump *label104 equal :drawDigitSlanted:digit 6
-    * jump *label103 always
+  415 jump *label103 notEqual :drawDigitSlanted:digit 6
   416 label *label104
   417 op sub *tmp107 :drawDigitSlanted:x 2
   418 op add *tmp108 *tmp107 1
 
   425 draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
   426 jump *label90 always
   427 label *label103
-    * jump *label106 equal :drawDigitSlanted:digit 7
-    * jump *label105 always
+  428 jump *label105 notEqual :drawDigitSlanted:digit 7
   429 label *label106
   430 op add *tmp114 :drawDigitSlanted:x 7
   431 op add *tmp115 :drawDigitSlanted:y 12
 
   436 draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
   437 jump *label90 always
   438 label *label105
-    * jump *label108 equal :drawDigitSlanted:digit 8
-    * jump *label107 always
+  439 jump *label107 notEqual :drawDigitSlanted:digit 8
   440 label *label108
   441 op sub *tmp119 :drawDigitSlanted:x 2
   442 op add *tmp120 *tmp119 1
 
   449 draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
   450 jump *label90 always
   451 label *label107
-    * jump *label110 equal :drawDigitSlanted:digit 9
-    * jump *label109 always
+  452 jump *label109 notEqual :drawDigitSlanted:digit 9
   453 label *label110
   454 op sub *tmp126 :drawDigitSlanted:x 2
   455 op add *tmp127 *tmp126 1
 
   471 set :drawDigit:x :displayItem:x
   472 set :drawDigit:y :displayItem:y
   473 set :drawDigit:digit *tmp133
-    * jump *label114 equal :drawDigit:digit 0
-    * jump *label113 always
+  474 jump *label113 notEqual :drawDigit:digit 0
   475 label *label114
   476 op sub *tmp137 :drawDigit:x 2
   477 op add *tmp138 *tmp137 1
 
   480 draw lineRect *tmp138 *tmp140 9 14
   481 jump *label112 always
   482 label *label113
-    * jump *label116 equal :drawDigit:digit 1
-    * jump *label115 always
+  483 jump *label115 notEqual :drawDigit:digit 1
   484 label *label116
   485 op add *tmp141 :drawDigit:x 7
   486 op sub *tmp142 *tmp141 1
 
   490 draw line *tmp142 :drawDigit:y *tmp144 *tmp145
   491 jump *label112 always
   492 label *label115
-    * jump *label118 equal :drawDigit:digit 2
-    * jump *label117 always
+  493 jump *label117 notEqual :drawDigit:digit 2
   494 label *label118
   495 op add *tmp146 :drawDigit:x 7
   496 draw line :drawDigit:x :drawDigit:y *tmp146 :drawDigit:y
 
   511 draw line :drawDigit:x *tmp155 *tmp156 *tmp157
   512 jump *label112 always
   513 label *label117
-    * jump *label120 equal :drawDigit:digit 3
-    * jump *label119 always
+  514 jump *label119 notEqual :drawDigit:digit 3
   515 label *label120
   516 op add *tmp158 :drawDigit:x 7
   517 op add *tmp159 :drawDigit:x 7
 
   529 draw line :drawDigit:x *tmp165 *tmp166 *tmp167
   530 jump *label112 always
   531 label *label119
-    * jump *label122 equal :drawDigit:digit 4
-    * jump *label121 always
+  532 jump *label121 notEqual :drawDigit:digit 4
   533 label *label122
   534 op add *tmp168 :drawDigit:x 7
   535 op add *tmp169 :drawDigit:x 7
 
   544 draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
   545 jump *label112 always
   546 label *label121
-    * jump *label124 equal :drawDigit:digit 5
-    * jump *label123 always
+  547 jump *label123 notEqual :drawDigit:digit 5
   548 label *label124
   549 op add *tmp176 :drawDigit:x 7
   550 draw line :drawDigit:x :drawDigit:y *tmp176 :drawDigit:y
 
   565 draw line :drawDigit:x *tmp185 *tmp186 *tmp187
   566 jump *label112 always
   567 label *label123
-    * jump *label126 equal :drawDigit:digit 6
-    * jump *label125 always
+  568 jump *label125 notEqual :drawDigit:digit 6
   569 label *label126
   570 op add *tmp188 :drawDigit:y 12
   571 draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp188
 
   585 draw line :drawDigit:x *tmp196 *tmp197 *tmp198
   586 jump *label112 always
   587 label *label125
-    * jump *label128 equal :drawDigit:digit 7
-    * jump *label127 always
+  588 jump *label127 notEqual :drawDigit:digit 7
   589 label *label128
   590 op add *tmp199 :drawDigit:x 7
   591 op sub *tmp200 *tmp199 1
 
   600 draw line :drawDigit:x *tmp204 *tmp206 *tmp207
   601 jump *label112 always
   602 label *label127
-    * jump *label130 equal :drawDigit:digit 8
-    * jump *label129 always
+  603 jump *label129 notEqual :drawDigit:digit 8
   604 label *label130
   605 op sub *tmp208 :drawDigit:x 2
   606 op add *tmp209 *tmp208 1
 
   613 draw line :drawDigit:x *tmp212 *tmp213 *tmp214
   614 jump *label112 always
   615 label *label129
-    * jump *label132 equal :drawDigit:digit 9
-    * jump *label131 always
+  616 jump *label131 notEqual :drawDigit:digit 9
   617 label *label132
   618 op add *tmp215 :drawDigit:x 7
   619 draw line :drawDigit:x :drawDigit:y *tmp215 :drawDigit:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-9 instructions):
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   10 jump *label5 lessThanEq :n 0
    11 op sub :n :n 1
    12 getlink :block :n
    13 print "Found: "
 
    66 label *label16
    67 printflush .MESSAGE
    68 label *label1
-    * op equal *tmp11 .CONTAINER null
-    * jump *label0 notEqual *tmp11 false
+   69 jump *label0 equal .CONTAINER null
    70 label *label2
    71 label *label17
    72 sensor *tmp12 .CONTAINER @dead
 
   178 draw image *tmp27 *tmp30 :item 16 0
   179 op add :index :index 1
   180 op sub :y :y 20
-    * op equal *tmp31 :index 8
-    * jump *label47 equal *tmp31 false
+  181 jump *label47 notEqual :index 8
   182 set :y 152
   183 set :x 93
   184 draw color 255 255 255 255
 
   278 sensor :displayItem:amount .CONTAINER :displayItem:item
   279 op strictEqual *tmp38 .MEMORY null
   280 jump *label74 equal *tmp38 false
-    * op equal *tmp40 :displayItem:amount .CAPACITY
-    * jump *label76 equal *tmp40 false
+  281 jump *label76 notEqual :displayItem:amount .CAPACITY
   282 draw color 0 255 0 255
   283 jump *label77 always
   284 label *label76
-    * op greaterThan *tmp42 :displayItem:amount .LIMIT
-    * jump *label78 equal *tmp42 false
+  285 jump *label78 lessThanEq :displayItem:amount .LIMIT
   286 draw color 255 255 0 255
   287 jump *label79 always
   288 label *label78
 
   293 label *label74
   294 read :displayItem:last .MEMORY :displayItem:index
   295 write :displayItem:amount .MEMORY :displayItem:index
-    * op equal *tmp48 :displayItem:amount :displayItem:last
-    * jump *label80 equal *tmp48 false
+  296 jump *label80 notEqual :displayItem:amount :displayItem:last
   297 draw color 255 255 0 255
   298 jump *label81 always
   299 label *label80
-    * op lessThan *tmp50 :displayItem:amount :displayItem:last
-    * jump *label82 equal *tmp50 false
+  300 jump *label82 greaterThanEq :displayItem:amount :displayItem:last
   301 draw color 255 80 80 255
   302 jump *label83 always
   303 label *label82
 
   632 label *label88
   633 op sub :displayItem:x :displayItem:x 11
   634 op idiv :displayItem:amount :displayItem:amount 10
-    * op equal *tmp227 :displayItem:amount 0
-    * jump *label133 equal *tmp227 false
+  635 jump *label133 notEqual :displayItem:amount 0
   636 jump *label86 always
   637 jump *label134 always
   638 label *label133
 
   644 label *label73
   645 op add :index :index 1
   646 op sub :y :y 20
-    * op equal *tmp229 :index 8
-    * jump *label135 equal *tmp229 false
+  647 jump *label135 notEqual :index 8
   648 drawflush display1
   649 set :y 152
   650 set :x 157

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-7 instructions):
 
    37 jump *label13 notEqual *tmp5 @large-logic-display
    38 label *label14
    39 set .DISPLAY :block
-    * jump *label6 always
    40 label *label13
    41 label *label6
    42 label *label4
 
    60 jump *label15 equal *tmp9 false
    61 print "No container or display."
    62 print "\n"
-    * jump *label16 always
    63 label *label15
    64 label *label16
    65 printflush .MESSAGE
 
   180 set :y 152
   181 set :x 93
   182 draw color 255 255 255 255
-    * jump *label48 always
   183 label *label47
   184 label *label48
   185 label *label27
 
   450 op add *tmp131 :drawDigitSlanted:x 7
   451 op add *tmp132 :drawDigitSlanted:y 6
   452 draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
-    * jump *label90 always
   453 label *label109
   454 label *label90
   455 label *label89
 
   621 op add *tmp225 :drawDigit:x 7
   622 op add *tmp226 :drawDigit:y 12
   623 draw line :drawDigit:x *tmp224 *tmp225 *tmp226
-    * jump *label112 always
   624 label *label131
   625 label *label112
   626 label *label111
 
   629 op idiv :displayItem:amount :displayItem:amount 10
   630 jump *label133 notEqual :displayItem:amount 0
   631 jump *label86 always
-    * jump *label134 always
   632 label *label133
   633 label *label134
   634 label *label85
 
   652 draw rect 109 0 176 176
   653 label *label139
   654 label *label137
-    * jump *label136 always
   655 label *label135
   656 label *label136
   657 label *label53

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    84 # "Function: inline def eraseImages(in first_column)"
    85 set :eraseImages:first_column true
    86 draw color 0 0 80 255
-    * jump *label21 equal :eraseImages:first_column false
+   87 jump *label21 equal true false
    88 draw rect 0 0 23 176
    89 jump *label22 always
    90 label *label21
 
    94 # "Function: inline def eraseImages(in first_column)"
    95 set :eraseImages.1:first_column false
    96 draw color 0 0 80 255
-    * jump *label24 equal :eraseImages.1:first_column false
+   97 jump *label24 equal false false
    98 draw rect 0 0 23 176
    99 jump *label25 always
   100 label *label24
 
   171 label *label26
   172 op add *tmp27 :x 8
   173 op add *tmp28 :y 8
-    * op sub *tmp29 *tmp28 2
-    * op add *tmp30 *tmp29 1
+  174 op add *tmp29 :y 6
+  175 op sub *tmp30 *tmp28 1
   176 draw image *tmp27 *tmp30 :item 16 0
   177 op add :index :index 1
   178 op sub :y :y 20
 
   193 # "Function: inline def eraseNumbers(in first_column)"
   194 set :eraseNumbers:first_column true
   195 draw color 0 0 80 255
-    * jump *label50 equal :eraseNumbers:first_column false
+  196 jump *label50 equal true false
   197 draw rect 23 0 70 176
   198 jump *label51 always
   199 label *label50
 
   272 set :displayItem:item :item
   273 set :displayItem:x :x
   274 set :displayItem:y :y
-    * sensor :displayItem:amount .CONTAINER :displayItem:item
+  275 sensor :displayItem:amount .CONTAINER :item
   276 op strictEqual *tmp38 .MEMORY null
   277 jump *label74 equal *tmp38 false
   278 jump *label76 notEqual :displayItem:amount .CAPACITY
 
   288 label *label77
   289 jump *label75 always
   290 label *label74
-    * read :displayItem:last .MEMORY :displayItem:index
-    * write :displayItem:amount .MEMORY :displayItem:index
+  291 read :displayItem:last .MEMORY :index
+  292 write :displayItem:amount .MEMORY :index
   293 jump *label80 notEqual :displayItem:amount :displayItem:last
   294 draw color 255 255 0 255
   295 jump *label81 always
 
   309 op mod *tmp53 :displayItem:amount 10
   310 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   311 set :drawDigitSlanted:x :displayItem:x
-    * set :drawDigitSlanted:y :displayItem:y
-    * set :drawDigitSlanted:digit *tmp53
-    * jump *label91 notEqual :drawDigitSlanted:digit 0
+  312 set :drawDigitSlanted:y :y
+  313 jump *label91 notEqual *tmp53 0
   314 label *label92
-    * op sub *tmp57 :drawDigitSlanted:x 2
-    * op add *tmp58 *tmp57 1
-    * op sub *tmp59 :drawDigitSlanted:y 2
-    * op add *tmp60 *tmp59 1
+  315 op sub *tmp57 :displayItem:x 2
+  316 op sub *tmp58 :drawDigitSlanted:x 1
+  317 op sub *tmp59 :displayItem:y 2
+  318 op sub *tmp60 :drawDigitSlanted:y 1
   319 draw lineRect *tmp58 *tmp60 9 14
   320 jump *label90 always
   321 label *label91
-    * jump *label93 notEqual :drawDigitSlanted:digit 1
+  322 jump *label93 notEqual *tmp53 1
   323 label *label94
-    * op add *tmp61 :drawDigitSlanted:x 7
-    * op sub *tmp62 *tmp61 1
-    * op add *tmp63 :drawDigitSlanted:x 7
-    * op sub *tmp64 *tmp63 1
-    * op add *tmp65 :drawDigitSlanted:y 12
-    * draw line *tmp62 :drawDigitSlanted:y *tmp64 *tmp65
+  324 op add *tmp61 :displayItem:x 7
+  325 op add *tmp62 :drawDigitSlanted:x 6
+  326 op add *tmp63 :displayItem:x 7
+  327 op sub *tmp64 *tmp61 1
+  328 op add *tmp65 :displayItem:y 12
+  329 draw line *tmp62 :displayItem:y *tmp62 *tmp65
   330 jump *label90 always
   331 label *label93
-    * jump *label95 notEqual :drawDigitSlanted:digit 2
+  332 jump *label95 notEqual *tmp53 2
   333 label *label96
-    * op add *tmp66 :drawDigitSlanted:x 7
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp66 :drawDigitSlanted:y
-    * op add *tmp67 :drawDigitSlanted:x 7
-    * op add *tmp68 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp67 *tmp68
-    * op add *tmp69 :drawDigitSlanted:x 7
-    * op add *tmp70 :drawDigitSlanted:y 6
-    * op add *tmp71 :drawDigitSlanted:x 7
-    * op add *tmp72 :drawDigitSlanted:y 12
-    * draw line *tmp69 *tmp70 *tmp71 *tmp72
-    * op add *tmp73 :drawDigitSlanted:x 2
-    * op add *tmp74 :drawDigitSlanted:y 12
-    * op add *tmp75 :drawDigitSlanted:x 7
-    * op add *tmp76 :drawDigitSlanted:y 12
-    * draw line *tmp73 *tmp74 *tmp75 *tmp76
+  334 op add *tmp66 :displayItem:x 7
+  335 draw line :displayItem:x :displayItem:y *tmp66 :displayItem:y
+  336 op add *tmp67 :displayItem:x 7
+  337 op add *tmp68 :displayItem:y 6
+  338 draw line :displayItem:x :displayItem:y *tmp66 *tmp68
+  339 op add *tmp69 :displayItem:x 7
+  340 op add *tmp70 :displayItem:y 6
+  341 op add *tmp71 :displayItem:x 7
+  342 op add *tmp72 :displayItem:y 12
+  343 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  344 op add *tmp73 :displayItem:x 2
+  345 op add *tmp74 :displayItem:y 12
+  346 op add *tmp75 :displayItem:x 7
+  347 op add *tmp76 :displayItem:y 12
+  348 draw line *tmp73 *tmp72 *tmp66 *tmp72
   349 jump *label90 always
   350 label *label95
-    * jump *label97 notEqual :drawDigitSlanted:digit 3
+  351 jump *label97 notEqual *tmp53 3
   352 label *label98
-    * op add *tmp77 :drawDigitSlanted:x 7
-    * op add *tmp78 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigitSlanted:y 6
-    * op add *tmp80 :drawDigitSlanted:x 7
-    * op add *tmp81 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigitSlanted:y 6
-    * op add *tmp83 :drawDigitSlanted:x 7
-    * op add *tmp84 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp82 *tmp83 *tmp84
-    * op add *tmp85 :drawDigitSlanted:y 12
-    * op add *tmp86 :drawDigitSlanted:x 7
-    * op add *tmp87 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp85 *tmp86 *tmp87
+  353 op add *tmp77 :displayItem:x 7
+  354 op add *tmp78 :displayItem:y 6
+  355 draw line :displayItem:x :displayItem:y *tmp77 *tmp78
+  356 op add *tmp79 :displayItem:y 6
+  357 op add *tmp80 :displayItem:x 7
+  358 op add *tmp81 :displayItem:y 6
+  359 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  360 op add *tmp82 :displayItem:y 6
+  361 op add *tmp83 :displayItem:x 7
+  362 op add *tmp84 :displayItem:y 12
+  363 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  364 op add *tmp85 :displayItem:y 12
+  365 op add *tmp86 :displayItem:x 7
+  366 op add *tmp87 :displayItem:y 12
+  367 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   368 jump *label90 always
   369 label *label97
-    * jump *label99 notEqual :drawDigitSlanted:digit 4
+  370 jump *label99 notEqual *tmp53 4
   371 label *label100
-    * op add *tmp88 :drawDigitSlanted:x 7
-    * op add *tmp89 :drawDigitSlanted:x 7
-    * op add *tmp90 :drawDigitSlanted:y 6
-    * draw line *tmp88 :drawDigitSlanted:y *tmp89 *tmp90
-    * op add *tmp91 :drawDigitSlanted:y 6
-    * op add *tmp92 :drawDigitSlanted:x 7
-    * op add *tmp93 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp91 *tmp92 *tmp93
-    * op add *tmp94 :drawDigitSlanted:y 6
-    * op add *tmp95 :drawDigitSlanted:x 7
-    * op add *tmp96 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp94 *tmp95 *tmp96
+  372 op add *tmp88 :displayItem:x 7
+  373 op add *tmp89 :displayItem:x 7
+  374 op add *tmp90 :displayItem:y 6
+  375 draw line *tmp88 :displayItem:y *tmp88 *tmp90
+  376 op add *tmp91 :displayItem:y 6
+  377 op add *tmp92 :displayItem:x 7
+  378 op add *tmp93 :displayItem:y 6
+  379 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  380 op add *tmp94 :displayItem:y 6
+  381 op add *tmp95 :displayItem:x 7
+  382 op add *tmp96 :displayItem:y 12
+  383 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   384 jump *label90 always
   385 label *label99
-    * jump *label101 notEqual :drawDigitSlanted:digit 5
+  386 jump *label101 notEqual *tmp53 5
   387 label *label102
-    * op add *tmp97 :drawDigitSlanted:x 7
-    * op add *tmp98 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp97 *tmp98
-    * op add *tmp99 :drawDigitSlanted:y 6
-    * op add *tmp100 :drawDigitSlanted:x 7
-    * op add *tmp101 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp99 *tmp100 *tmp101
-    * op add *tmp102 :drawDigitSlanted:y 6
-    * op add *tmp103 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp102 :drawDigitSlanted:x *tmp103
-    * op add *tmp104 :drawDigitSlanted:y 12
-    * op add *tmp105 :drawDigitSlanted:x 7
-    * op add *tmp106 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp104 *tmp105 *tmp106
+  388 op add *tmp97 :displayItem:x 7
+  389 op add *tmp98 :displayItem:y 6
+  390 draw line :displayItem:x :displayItem:y *tmp97 *tmp98
+  391 op add *tmp99 :displayItem:y 6
+  392 op add *tmp100 :displayItem:x 7
+  393 op add *tmp101 :displayItem:y 6
+  394 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  395 op add *tmp102 :displayItem:y 6
+  396 op add *tmp103 :displayItem:y 12
+  397 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  398 op add *tmp104 :displayItem:y 12
+  399 op add *tmp105 :displayItem:x 7
+  400 op add *tmp106 :displayItem:y 12
+  401 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   402 jump *label90 always
   403 label *label101
-    * jump *label103 notEqual :drawDigitSlanted:digit 6
+  404 jump *label103 notEqual *tmp53 6
   405 label *label104
-    * op sub *tmp107 :drawDigitSlanted:x 2
-    * op add *tmp108 *tmp107 1
-    * op sub *tmp109 :drawDigitSlanted:y 2
-    * op add *tmp110 *tmp109 1
+  406 op sub *tmp107 :displayItem:x 2
+  407 op sub *tmp108 :drawDigitSlanted:x 1
+  408 op sub *tmp109 :displayItem:y 2
+  409 op sub *tmp110 :drawDigitSlanted:y 1
   410 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :drawDigitSlanted:y 6
-    * op add *tmp112 :drawDigitSlanted:x 7
-    * op add *tmp113 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp111 *tmp112 *tmp113
+  411 op add *tmp111 :displayItem:y 6
+  412 op add *tmp112 :displayItem:x 7
+  413 op add *tmp113 :displayItem:y 12
+  414 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   415 jump *label90 always
   416 label *label103
-    * jump *label105 notEqual :drawDigitSlanted:digit 7
+  417 jump *label105 notEqual *tmp53 7
   418 label *label106
-    * op add *tmp114 :drawDigitSlanted:x 7
-    * op add *tmp115 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp114 *tmp115
-    * op add *tmp116 :drawDigitSlanted:y 12
-    * op add *tmp117 :drawDigitSlanted:x 7
-    * op add *tmp118 :drawDigitSlanted:y 12
-    * draw line :drawDigitSlanted:x *tmp116 *tmp117 *tmp118
+  419 op add *tmp114 :displayItem:x 7
+  420 op add *tmp115 :displayItem:y 12
+  421 draw line :displayItem:x :displayItem:y *tmp114 *tmp115
+  422 op add *tmp116 :displayItem:y 12
+  423 op add *tmp117 :displayItem:x 7
+  424 op add *tmp118 :displayItem:y 12
+  425 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   426 jump *label90 always
   427 label *label105
-    * jump *label107 notEqual :drawDigitSlanted:digit 8
+  428 jump *label107 notEqual *tmp53 8
   429 label *label108
-    * op sub *tmp119 :drawDigitSlanted:x 2
-    * op add *tmp120 *tmp119 1
-    * op sub *tmp121 :drawDigitSlanted:y 2
-    * op add *tmp122 *tmp121 1
+  430 op sub *tmp119 :displayItem:x 2
+  431 op sub *tmp120 :drawDigitSlanted:x 1
+  432 op sub *tmp121 :displayItem:y 2
+  433 op sub *tmp122 :drawDigitSlanted:y 1
   434 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :drawDigitSlanted:y 6
-    * op add *tmp124 :drawDigitSlanted:x 7
-    * op add *tmp125 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x *tmp123 *tmp124 *tmp125
+  435 op add *tmp123 :displayItem:y 6
+  436 op add *tmp124 :displayItem:x 7
+  437 op add *tmp125 :displayItem:y 6
+  438 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   439 jump *label90 always
   440 label *label107
-    * jump *label109 notEqual :drawDigitSlanted:digit 9
+  441 jump *label109 notEqual *tmp53 9
   442 label *label110
-    * op sub *tmp126 :drawDigitSlanted:x 2
-    * op add *tmp127 *tmp126 1
-    * op add *tmp128 :drawDigitSlanted:y 6
-    * op sub *tmp129 *tmp128 2
-    * op add *tmp130 *tmp129 1
+  443 op sub *tmp126 :displayItem:x 2
+  444 op sub *tmp127 :drawDigitSlanted:x 1
+  445 op add *tmp128 :displayItem:y 6
+  446 op add *tmp129 :drawDigitSlanted:y 4
+  447 op sub *tmp130 *tmp128 1
   448 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :drawDigitSlanted:x 7
-    * op add *tmp132 :drawDigitSlanted:y 6
-    * draw line :drawDigitSlanted:x :drawDigitSlanted:y *tmp131 *tmp132
+  449 op add *tmp131 :displayItem:x 7
+  450 op add *tmp132 :displayItem:y 6
+  451 draw line :displayItem:x :displayItem:y *tmp131 *tmp128
   452 label *label109
   453 label *label90
   454 label *label89
 
   457 op mod *tmp133 :displayItem:amount 10
   458 # "Function: inline def drawDigit(in x, in y, in digit)"
   459 set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :displayItem:y
+  460 set :drawDigit:y :y
   461 set :drawDigit:digit *tmp133
-    * jump *label113 notEqual :drawDigit:digit 0
+  462 jump *label113 notEqual *tmp133 0
   463 label *label114
-    * op sub *tmp137 :drawDigit:x 2
-    * op add *tmp138 *tmp137 1
-    * op sub *tmp139 :drawDigit:y 2
-    * op add *tmp140 *tmp139 1
+  464 op sub *tmp137 :displayItem:x 2
+  465 op sub *tmp138 :drawDigit:x 1
+  466 op sub *tmp139 :displayItem:y 2
+  467 op sub *tmp140 :drawDigit:y 1
   468 draw lineRect *tmp138 *tmp140 9 14
   469 jump *label112 always
   470 label *label113
-    * jump *label115 notEqual :drawDigit:digit 1
+  471 jump *label115 notEqual *tmp133 1
   472 label *label116
-    * op add *tmp141 :drawDigit:x 7
-    * op sub *tmp142 *tmp141 1
-    * op add *tmp143 :drawDigit:x 7
-    * op sub *tmp144 *tmp143 1
-    * op add *tmp145 :drawDigit:y 12
-    * draw line *tmp142 :drawDigit:y *tmp144 *tmp145
+  473 op add *tmp141 :displayItem:x 7
+  474 op add *tmp142 :drawDigit:x 6
+  475 op add *tmp143 :displayItem:x 7
+  476 op sub *tmp144 *tmp141 1
+  477 op add *tmp145 :displayItem:y 12
+  478 draw line *tmp142 :displayItem:y *tmp142 *tmp145
   479 jump *label112 always
   480 label *label115
-    * jump *label117 notEqual :drawDigit:digit 2
+  481 jump *label117 notEqual *tmp133 2
   482 label *label118
-    * op add *tmp146 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp146 :drawDigit:y
-    * op add *tmp147 :drawDigit:y 6
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp147
-    * op add *tmp148 :drawDigit:y 6
-    * op add *tmp149 :drawDigit:x 7
-    * op add *tmp150 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp148 *tmp149 *tmp150
-    * op add *tmp151 :drawDigit:x 7
-    * op add *tmp152 :drawDigit:y 6
-    * op add *tmp153 :drawDigit:x 7
-    * op add *tmp154 :drawDigit:y 12
-    * draw line *tmp151 *tmp152 *tmp153 *tmp154
-    * op add *tmp155 :drawDigit:y 12
-    * op add *tmp156 :drawDigit:x 7
-    * op add *tmp157 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp155 *tmp156 *tmp157
+  483 op add *tmp146 :displayItem:x 7
+  484 draw line :displayItem:x :displayItem:y *tmp146 :displayItem:y
+  485 op add *tmp147 :displayItem:y 6
+  486 draw line :displayItem:x :displayItem:y :displayItem:x *tmp147
+  487 op add *tmp148 :displayItem:y 6
+  488 op add *tmp149 :displayItem:x 7
+  489 op add *tmp150 :displayItem:y 6
+  490 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  491 op add *tmp151 :displayItem:x 7
+  492 op add *tmp152 :displayItem:y 6
+  493 op add *tmp153 :displayItem:x 7
+  494 op add *tmp154 :displayItem:y 12
+  495 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  496 op add *tmp155 :displayItem:y 12
+  497 op add *tmp156 :displayItem:x 7
+  498 op add *tmp157 :displayItem:y 12
+  499 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   500 jump *label112 always
   501 label *label117
-    * jump *label119 notEqual :drawDigit:digit 3
+  502 jump *label119 notEqual *tmp133 3
   503 label *label120
-    * op add *tmp158 :drawDigit:x 7
-    * op add *tmp159 :drawDigit:x 7
-    * op add *tmp160 :drawDigit:y 12
-    * draw line *tmp158 :drawDigit:y *tmp159 *tmp160
-    * op add *tmp161 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp161 :drawDigit:y
-    * op add *tmp162 :drawDigit:y 6
-    * op add *tmp163 :drawDigit:x 7
-    * op add *tmp164 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp162 *tmp163 *tmp164
-    * op add *tmp165 :drawDigit:y 12
-    * op add *tmp166 :drawDigit:x 7
-    * op add *tmp167 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp165 *tmp166 *tmp167
+  504 op add *tmp158 :displayItem:x 7
+  505 op add *tmp159 :displayItem:x 7
+  506 op add *tmp160 :displayItem:y 12
+  507 draw line *tmp158 :displayItem:y *tmp158 *tmp160
+  508 op add *tmp161 :displayItem:x 7
+  509 draw line :displayItem:x :displayItem:y *tmp158 :displayItem:y
+  510 op add *tmp162 :displayItem:y 6
+  511 op add *tmp163 :displayItem:x 7
+  512 op add *tmp164 :displayItem:y 6
+  513 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  514 op add *tmp165 :displayItem:y 12
+  515 op add *tmp166 :displayItem:x 7
+  516 op add *tmp167 :displayItem:y 12
+  517 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   518 jump *label112 always
   519 label *label119
-    * jump *label121 notEqual :drawDigit:digit 4
+  520 jump *label121 notEqual *tmp133 4
   521 label *label122
-    * op add *tmp168 :drawDigit:x 7
-    * op add *tmp169 :drawDigit:x 7
-    * op add *tmp170 :drawDigit:y 12
-    * draw line *tmp168 :drawDigit:y *tmp169 *tmp170
-    * op add *tmp171 :drawDigit:y 6
-    * op add *tmp172 :drawDigit:x 7
-    * op add *tmp173 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp171 *tmp172 *tmp173
-    * op add *tmp174 :drawDigit:y 6
-    * op add *tmp175 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp174 :drawDigit:x *tmp175
+  522 op add *tmp168 :displayItem:x 7
+  523 op add *tmp169 :displayItem:x 7
+  524 op add *tmp170 :displayItem:y 12
+  525 draw line *tmp168 :displayItem:y *tmp168 *tmp170
+  526 op add *tmp171 :displayItem:y 6
+  527 op add *tmp172 :displayItem:x 7
+  528 op add *tmp173 :displayItem:y 6
+  529 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  530 op add *tmp174 :displayItem:y 6
+  531 op add *tmp175 :displayItem:y 12
+  532 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   533 jump *label112 always
   534 label *label121
-    * jump *label123 notEqual :drawDigit:digit 5
+  535 jump *label123 notEqual *tmp133 5
   536 label *label124
-    * op add *tmp176 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp176 :drawDigit:y
-    * op add *tmp177 :drawDigit:x 7
-    * op add *tmp178 :drawDigit:x 7
-    * op add *tmp179 :drawDigit:y 6
-    * draw line *tmp177 :drawDigit:y *tmp178 *tmp179
-    * op add *tmp180 :drawDigit:y 6
-    * op add *tmp181 :drawDigit:x 7
-    * op add *tmp182 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp180 *tmp181 *tmp182
-    * op add *tmp183 :drawDigit:y 6
-    * op add *tmp184 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp183 :drawDigit:x *tmp184
-    * op add *tmp185 :drawDigit:y 12
-    * op add *tmp186 :drawDigit:x 7
-    * op add *tmp187 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp185 *tmp186 *tmp187
+  537 op add *tmp176 :displayItem:x 7
+  538 draw line :displayItem:x :displayItem:y *tmp176 :displayItem:y
+  539 op add *tmp177 :displayItem:x 7
+  540 op add *tmp178 :displayItem:x 7
+  541 op add *tmp179 :displayItem:y 6
+  542 draw line *tmp176 :displayItem:y *tmp176 *tmp179
+  543 op add *tmp180 :displayItem:y 6
+  544 op add *tmp181 :displayItem:x 7
+  545 op add *tmp182 :displayItem:y 6
+  546 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  547 op add *tmp183 :displayItem:y 6
+  548 op add *tmp184 :displayItem:y 12
+  549 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  550 op add *tmp185 :displayItem:y 12
+  551 op add *tmp186 :displayItem:x 7
+  552 op add *tmp187 :displayItem:y 12
+  553 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   554 jump *label112 always
   555 label *label123
-    * jump *label125 notEqual :drawDigit:digit 6
+  556 jump *label125 notEqual *tmp133 6
   557 label *label126
-    * op add *tmp188 :drawDigit:y 12
-    * draw line :drawDigit:x :drawDigit:y :drawDigit:x *tmp188
-    * op add *tmp189 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp189 :drawDigit:y
-    * op add *tmp190 :drawDigit:x 7
-    * op add *tmp191 :drawDigit:x 7
-    * op add *tmp192 :drawDigit:y 6
-    * draw line *tmp190 :drawDigit:y *tmp191 *tmp192
-    * op add *tmp193 :drawDigit:y 6
-    * op add *tmp194 :drawDigit:x 7
-    * op add *tmp195 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp193 *tmp194 *tmp195
-    * op add *tmp196 :drawDigit:y 12
-    * op add *tmp197 :drawDigit:x 7
-    * op add *tmp198 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp196 *tmp197 *tmp198
+  558 op add *tmp188 :displayItem:y 12
+  559 draw line :displayItem:x :displayItem:y :displayItem:x *tmp188
+  560 op add *tmp189 :displayItem:x 7
+  561 draw line :displayItem:x :displayItem:y *tmp189 :displayItem:y
+  562 op add *tmp190 :displayItem:x 7
+  563 op add *tmp191 :displayItem:x 7
+  564 op add *tmp192 :displayItem:y 6
+  565 draw line *tmp189 :displayItem:y *tmp189 *tmp192
+  566 op add *tmp193 :displayItem:y 6
+  567 op add *tmp194 :displayItem:x 7
+  568 op add *tmp195 :displayItem:y 6
+  569 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  570 op add *tmp196 :displayItem:y 12
+  571 op add *tmp197 :displayItem:x 7
+  572 op add *tmp198 :displayItem:y 12
+  573 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   574 jump *label112 always
   575 label *label125
-    * jump *label127 notEqual :drawDigit:digit 7
+  576 jump *label127 notEqual *tmp133 7
   577 label *label128
-    * op add *tmp199 :drawDigit:x 7
-    * op sub *tmp200 *tmp199 1
-    * op add *tmp201 :drawDigit:x 7
-    * op sub *tmp202 *tmp201 1
-    * op add *tmp203 :drawDigit:y 12
-    * draw line *tmp200 :drawDigit:y *tmp202 *tmp203
-    * op add *tmp204 :drawDigit:y 12
-    * op add *tmp205 :drawDigit:x 7
-    * op sub *tmp206 *tmp205 1
-    * op add *tmp207 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp204 *tmp206 *tmp207
+  578 op add *tmp199 :displayItem:x 7
+  579 op add *tmp200 :drawDigit:x 6
+  580 op add *tmp201 :displayItem:x 7
+  581 op sub *tmp202 *tmp199 1
+  582 op add *tmp203 :displayItem:y 12
+  583 draw line *tmp200 :displayItem:y *tmp200 *tmp203
+  584 op add *tmp204 :displayItem:y 12
+  585 op add *tmp205 :displayItem:x 7
+  586 op sub *tmp206 *tmp199 1
+  587 op add *tmp207 :displayItem:y 12
+  588 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   589 jump *label112 always
   590 label *label127
-    * jump *label129 notEqual :drawDigit:digit 8
+  591 jump *label129 notEqual *tmp133 8
   592 label *label130
-    * op sub *tmp208 :drawDigit:x 2
-    * op add *tmp209 *tmp208 1
-    * op sub *tmp210 :drawDigit:y 2
-    * op add *tmp211 *tmp210 1
+  593 op sub *tmp208 :displayItem:x 2
+  594 op sub *tmp209 :drawDigit:x 1
+  595 op sub *tmp210 :displayItem:y 2
+  596 op sub *tmp211 :drawDigit:y 1
   597 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :drawDigit:y 6
-    * op add *tmp213 :drawDigit:x 7
-    * op add *tmp214 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp212 *tmp213 *tmp214
+  598 op add *tmp212 :displayItem:y 6
+  599 op add *tmp213 :displayItem:x 7
+  600 op add *tmp214 :displayItem:y 6
+  601 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   602 jump *label112 always
   603 label *label129
-    * jump *label131 notEqual :drawDigit:digit 9
+  604 jump *label131 notEqual *tmp133 9
   605 label *label132
-    * op add *tmp215 :drawDigit:x 7
-    * draw line :drawDigit:x :drawDigit:y *tmp215 :drawDigit:y
-    * op add *tmp216 :drawDigit:x 7
-    * op add *tmp217 :drawDigit:x 7
-    * op add *tmp218 :drawDigit:y 12
-    * draw line *tmp216 :drawDigit:y *tmp217 *tmp218
-    * op add *tmp219 :drawDigit:y 6
-    * op add *tmp220 :drawDigit:x 7
-    * op add *tmp221 :drawDigit:y 6
-    * draw line :drawDigit:x *tmp219 *tmp220 *tmp221
-    * op add *tmp222 :drawDigit:y 6
-    * op add *tmp223 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp222 :drawDigit:x *tmp223
-    * op add *tmp224 :drawDigit:y 12
-    * op add *tmp225 :drawDigit:x 7
-    * op add *tmp226 :drawDigit:y 12
-    * draw line :drawDigit:x *tmp224 *tmp225 *tmp226
+  606 op add *tmp215 :displayItem:x 7
+  607 draw line :displayItem:x :displayItem:y *tmp215 :displayItem:y
+  608 op add *tmp216 :displayItem:x 7
+  609 op add *tmp217 :displayItem:x 7
+  610 op add *tmp218 :displayItem:y 12
+  611 draw line *tmp215 :displayItem:y *tmp215 *tmp218
+  612 op add *tmp219 :displayItem:y 6
+  613 op add *tmp220 :displayItem:x 7
+  614 op add *tmp221 :displayItem:y 6
+  615 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  616 op add *tmp222 :displayItem:y 6
+  617 op add *tmp223 :displayItem:y 12
+  618 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  619 op add *tmp224 :displayItem:y 12
+  620 op add *tmp225 :displayItem:x 7
+  621 op add *tmp226 :displayItem:y 12
+  622 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   623 label *label131
   624 label *label112
   625 label *label111
 
   644 # "Function: inline def eraseNumbers(in first_column)"
   645 set :eraseNumbers.1:first_column false
   646 draw color 0 0 80 255
-    * jump *label138 equal :eraseNumbers.1:first_column false
+  647 jump *label138 equal false false
   648 draw rect 23 0 70 176
   649 jump *label139 always
   650 label *label138

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-60 instructions):
 
    82 set :x 7
    83 set :y 152
    84 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages:first_column true
    85 draw color 0 0 80 255
    86 jump *label21 equal true false
    87 draw rect 0 0 23 176
 
    91 label *label22
    92 label *label20
    93 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages.1:first_column false
    94 draw color 0 0 80 255
    95 jump *label24 equal false false
    96 draw rect 0 0 23 176
 
   169 label *label26
   170 op add *tmp27 :x 8
   171 op add *tmp28 :y 8
-    * op add *tmp29 :y 6
-    * op sub *tmp30 *tmp28 1
+  172 op add *tmp30 :y 7
   173 draw image *tmp27 *tmp30 :item 16 0
   174 op add :index :index 1
   175 op sub :y :y 20
 
   188 set :x 71
   189 set :y 152
   190 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers:first_column true
   191 draw color 0 0 80 255
   192 jump *label50 equal true false
   193 draw rect 23 0 70 176
 
   264 jump *label72 always
   265 label *label52
   266 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem:index :index
-    * set :displayItem:item :item
   267 set :displayItem:x :x
   268 set :displayItem:y :y
   269 sensor :displayItem:amount .CONTAINER :item
 
   300 label *label84
   301 jump *label86 greaterThanEq :displayItem:i 5
   302 jump *label87 always
-    * op mod *tmp53 :displayItem:amount 10
   303 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * set :drawDigitSlanted:x :displayItem:x
-    * set :drawDigitSlanted:y :y
   304 jump *label91 notEqual *tmp53 0
   305 label *label92
-    * op sub *tmp57 :displayItem:x 2
-    * op sub *tmp58 :drawDigitSlanted:x 1
-    * op sub *tmp59 :displayItem:y 2
-    * op sub *tmp60 :drawDigitSlanted:y 1
+  306 op sub *tmp58 :displayItem:x 1
+  307 op sub *tmp59 :y 2
+  308 op sub *tmp60 :y 1
   309 draw lineRect *tmp58 *tmp60 9 14
   310 jump *label90 always
   311 label *label91
   312 jump *label93 notEqual *tmp53 1
   313 label *label94
-    * op add *tmp61 :displayItem:x 7
-    * op add *tmp62 :drawDigitSlanted:x 6
-    * op add *tmp63 :displayItem:x 7
-    * op sub *tmp64 *tmp61 1
-    * op add *tmp65 :displayItem:y 12
-    * draw line *tmp62 :displayItem:y *tmp62 *tmp65
+  314 op add *tmp62 :displayItem:x 6
+  315 op add *tmp64 :displayItem:x 6
+  316 op add *tmp65 :y 12
+  317 draw line *tmp62 :y *tmp62 *tmp65
   318 jump *label90 always
   319 label *label93
   320 jump *label95 notEqual *tmp53 2
   321 label *label96
   322 op add *tmp66 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp66 :displayItem:y
-    * op add *tmp67 :displayItem:x 7
-    * op add *tmp68 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp66 *tmp68
-    * op add *tmp69 :displayItem:x 7
-    * op add *tmp70 :displayItem:y 6
-    * op add *tmp71 :displayItem:x 7
-    * op add *tmp72 :displayItem:y 12
+  323 draw line :displayItem:x :y *tmp66 :y
+  324 op add *tmp68 :y 6
+  325 draw line :displayItem:x :y *tmp66 *tmp68
+  326 op add *tmp70 :y 6
+  327 op add *tmp72 :y 12
   328 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp73 :displayItem:x 2
-    * op add *tmp74 :displayItem:y 12
-    * op add *tmp75 :displayItem:x 7
-    * op add *tmp76 :displayItem:y 12
+  329 op add *tmp74 :y 12
+  330 op add *tmp76 :y 12
   331 draw line *tmp73 *tmp72 *tmp66 *tmp72
   332 jump *label90 always
   333 label *label95
   334 jump *label97 notEqual *tmp53 3
   335 label *label98
   336 op add *tmp77 :displayItem:x 7
-    * op add *tmp78 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp77 *tmp78
-    * op add *tmp79 :displayItem:y 6
-    * op add *tmp80 :displayItem:x 7
-    * op add *tmp81 :displayItem:y 6
+  337 op add *tmp78 :y 6
+  338 draw line :displayItem:x :y *tmp77 *tmp78
+  339 op add *tmp79 :y 6
+  340 op add *tmp81 :y 6
   341 draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :displayItem:y 6
-    * op add *tmp83 :displayItem:x 7
-    * op add *tmp84 :displayItem:y 12
+  342 op add *tmp82 :y 6
+  343 op add *tmp84 :y 12
   344 draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :displayItem:y 12
-    * op add *tmp86 :displayItem:x 7
-    * op add *tmp87 :displayItem:y 12
+  345 op add *tmp85 :y 12
+  346 op add *tmp87 :y 12
   347 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   348 jump *label90 always
   349 label *label97
   350 jump *label99 notEqual *tmp53 4
   351 label *label100
   352 op add *tmp88 :displayItem:x 7
-    * op add *tmp89 :displayItem:x 7
-    * op add *tmp90 :displayItem:y 6
-    * draw line *tmp88 :displayItem:y *tmp88 *tmp90
-    * op add *tmp91 :displayItem:y 6
-    * op add *tmp92 :displayItem:x 7
-    * op add *tmp93 :displayItem:y 6
+  353 op add *tmp90 :y 6
+  354 draw line *tmp88 :y *tmp88 *tmp90
+  355 op add *tmp91 :y 6
+  356 op add *tmp93 :y 6
   357 draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :displayItem:y 6
-    * op add *tmp95 :displayItem:x 7
-    * op add *tmp96 :displayItem:y 12
+  358 op add *tmp94 :y 6
+  359 op add *tmp96 :y 12
   360 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   361 jump *label90 always
   362 label *label99
   363 jump *label101 notEqual *tmp53 5
   364 label *label102
   365 op add *tmp97 :displayItem:x 7
-    * op add *tmp98 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp97 *tmp98
-    * op add *tmp99 :displayItem:y 6
-    * op add *tmp100 :displayItem:x 7
-    * op add *tmp101 :displayItem:y 6
+  366 op add *tmp98 :y 6
+  367 draw line :displayItem:x :y *tmp97 *tmp98
+  368 op add *tmp99 :y 6
+  369 op add *tmp101 :y 6
   370 draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :displayItem:y 6
-    * op add *tmp103 :displayItem:y 12
+  371 op add *tmp102 :y 6
+  372 op add *tmp103 :y 12
   373 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * op add *tmp104 :displayItem:y 12
-    * op add *tmp105 :displayItem:x 7
-    * op add *tmp106 :displayItem:y 12
+  374 op add *tmp104 :y 12
+  375 op add *tmp106 :y 12
   376 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   377 jump *label90 always
   378 label *label101
   379 jump *label103 notEqual *tmp53 6
   380 label *label104
-    * op sub *tmp107 :displayItem:x 2
-    * op sub *tmp108 :drawDigitSlanted:x 1
-    * op sub *tmp109 :displayItem:y 2
-    * op sub *tmp110 :drawDigitSlanted:y 1
+  381 op sub *tmp108 :displayItem:x 1
+  382 op sub *tmp109 :y 2
+  383 op sub *tmp110 :y 1
   384 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :displayItem:y 6
-    * op add *tmp112 :displayItem:x 7
-    * op add *tmp113 :displayItem:y 12
+  385 op add *tmp111 :y 6
+  386 op add *tmp113 :y 12
   387 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   388 jump *label90 always
   389 label *label103
   390 jump *label105 notEqual *tmp53 7
   391 label *label106
   392 op add *tmp114 :displayItem:x 7
-    * op add *tmp115 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y *tmp114 *tmp115
-    * op add *tmp116 :displayItem:y 12
-    * op add *tmp117 :displayItem:x 7
-    * op add *tmp118 :displayItem:y 12
+  393 op add *tmp115 :y 12
+  394 draw line :displayItem:x :y *tmp114 *tmp115
+  395 op add *tmp116 :y 12
+  396 op add *tmp118 :y 12
   397 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   398 jump *label90 always
   399 label *label105
   400 jump *label107 notEqual *tmp53 8
   401 label *label108
-    * op sub *tmp119 :displayItem:x 2
-    * op sub *tmp120 :drawDigitSlanted:x 1
-    * op sub *tmp121 :displayItem:y 2
-    * op sub *tmp122 :drawDigitSlanted:y 1
+  402 op sub *tmp120 :displayItem:x 1
+  403 op sub *tmp121 :y 2
+  404 op sub *tmp122 :y 1
   405 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :displayItem:y 6
-    * op add *tmp124 :displayItem:x 7
-    * op add *tmp125 :displayItem:y 6
+  406 op add *tmp123 :y 6
+  407 op add *tmp125 :y 6
   408 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   409 jump *label90 always
   410 label *label107
   411 jump *label109 notEqual *tmp53 9
   412 label *label110
-    * op sub *tmp126 :displayItem:x 2
-    * op sub *tmp127 :drawDigitSlanted:x 1
-    * op add *tmp128 :displayItem:y 6
-    * op add *tmp129 :drawDigitSlanted:y 4
-    * op sub *tmp130 *tmp128 1
+  413 op sub *tmp127 :displayItem:x 1
+  414 op add *tmp128 :y 6
+  415 op add *tmp129 :y 4
+  416 op add *tmp130 :displayItem:y 5
   417 draw lineRect *tmp127 *tmp130 9 8
   418 op add *tmp131 :displayItem:x 7
-    * op add *tmp132 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y *tmp131 *tmp128
+  419 op add *tmp132 :y 6
+  420 draw line :displayItem:x :y *tmp131 *tmp128
   421 label *label109
   422 label *label90
   423 label *label89
 
   427 # "Function: inline def drawDigit(in x, in y, in digit)"
   428 set :drawDigit:x :displayItem:x
   429 set :drawDigit:y :y
-    * set :drawDigit:digit *tmp133
   430 jump *label113 notEqual *tmp133 0
   431 label *label114
-    * op sub *tmp137 :displayItem:x 2
-    * op sub *tmp138 :drawDigit:x 1
-    * op sub *tmp139 :displayItem:y 2
-    * op sub *tmp140 :drawDigit:y 1
+  432 op sub *tmp138 :displayItem:x 1
+  433 op sub *tmp139 :y 2
+  434 op sub *tmp140 :y 1
   435 draw lineRect *tmp138 *tmp140 9 14
   436 jump *label112 always
   437 label *label113
   438 jump *label115 notEqual *tmp133 1
   439 label *label116
   440 op add *tmp141 :displayItem:x 7
-    * op add *tmp142 :drawDigit:x 6
-    * op add *tmp143 :displayItem:x 7
-    * op sub *tmp144 *tmp141 1
-    * op add *tmp145 :displayItem:y 12
-    * draw line *tmp142 :displayItem:y *tmp142 *tmp145
+  441 op add *tmp142 :displayItem:x 6
+  442 op add *tmp144 :displayItem:x 6
+  443 op add *tmp145 :y 12
+  444 draw line *tmp142 :y *tmp142 *tmp145
   445 jump *label112 always
   446 label *label115
   447 jump *label117 notEqual *tmp133 2
   448 label *label118
   449 op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp146 :displayItem:y
-    * op add *tmp147 :displayItem:y 6
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp147
-    * op add *tmp148 :displayItem:y 6
-    * op add *tmp149 :displayItem:x 7
-    * op add *tmp150 :displayItem:y 6
+  450 draw line :displayItem:x :y *tmp146 :y
+  451 op add *tmp147 :y 6
+  452 draw line :displayItem:x :y :displayItem:x *tmp147
+  453 op add *tmp148 :y 6
+  454 op add *tmp150 :y 6
   455 draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp151 :displayItem:x 7
-    * op add *tmp152 :displayItem:y 6
-    * op add *tmp153 :displayItem:x 7
-    * op add *tmp154 :displayItem:y 12
+  456 op add *tmp152 :y 6
+  457 op add *tmp154 :y 12
   458 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :displayItem:y 12
-    * op add *tmp156 :displayItem:x 7
-    * op add *tmp157 :displayItem:y 12
+  459 op add *tmp155 :y 12
+  460 op add *tmp157 :y 12
   461 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   462 jump *label112 always
   463 label *label117
   464 jump *label119 notEqual *tmp133 3
   465 label *label120
   466 op add *tmp158 :displayItem:x 7
-    * op add *tmp159 :displayItem:x 7
-    * op add *tmp160 :displayItem:y 12
-    * draw line *tmp158 :displayItem:y *tmp158 *tmp160
-    * op add *tmp161 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp158 :displayItem:y
-    * op add *tmp162 :displayItem:y 6
-    * op add *tmp163 :displayItem:x 7
-    * op add *tmp164 :displayItem:y 6
+  467 op add *tmp160 :y 12
+  468 draw line *tmp158 :y *tmp158 *tmp160
+  469 draw line :displayItem:x :y *tmp158 :y
+  470 op add *tmp162 :y 6
+  471 op add *tmp164 :y 6
   472 draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :displayItem:y 12
-    * op add *tmp166 :displayItem:x 7
-    * op add *tmp167 :displayItem:y 12
+  473 op add *tmp165 :y 12
+  474 op add *tmp167 :y 12
   475 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   476 jump *label112 always
   477 label *label119
   478 jump *label121 notEqual *tmp133 4
   479 label *label122
   480 op add *tmp168 :displayItem:x 7
-    * op add *tmp169 :displayItem:x 7
-    * op add *tmp170 :displayItem:y 12
-    * draw line *tmp168 :displayItem:y *tmp168 *tmp170
-    * op add *tmp171 :displayItem:y 6
-    * op add *tmp172 :displayItem:x 7
-    * op add *tmp173 :displayItem:y 6
+  481 op add *tmp170 :y 12
+  482 draw line *tmp168 :y *tmp168 *tmp170
+  483 op add *tmp171 :y 6
+  484 op add *tmp173 :y 6
   485 draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :displayItem:y 6
-    * op add *tmp175 :displayItem:y 12
+  486 op add *tmp174 :y 6
+  487 op add *tmp175 :y 12
   488 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   489 jump *label112 always
   490 label *label121
   491 jump *label123 notEqual *tmp133 5
   492 label *label124
   493 op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp176 :displayItem:y
-    * op add *tmp177 :displayItem:x 7
-    * op add *tmp178 :displayItem:x 7
-    * op add *tmp179 :displayItem:y 6
-    * draw line *tmp176 :displayItem:y *tmp176 *tmp179
-    * op add *tmp180 :displayItem:y 6
-    * op add *tmp181 :displayItem:x 7
-    * op add *tmp182 :displayItem:y 6
+  494 draw line :displayItem:x :y *tmp176 :y
+  495 op add *tmp179 :y 6
+  496 draw line *tmp176 :y *tmp176 *tmp179
+  497 op add *tmp180 :y 6
+  498 op add *tmp182 :y 6
   499 draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :displayItem:y 6
-    * op add *tmp184 :displayItem:y 12
+  500 op add *tmp183 :y 6
+  501 op add *tmp184 :y 12
   502 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * op add *tmp185 :displayItem:y 12
-    * op add *tmp186 :displayItem:x 7
-    * op add *tmp187 :displayItem:y 12
+  503 op add *tmp185 :y 12
+  504 op add *tmp187 :y 12
   505 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   506 jump *label112 always
   507 label *label123
   508 jump *label125 notEqual *tmp133 6
   509 label *label126
-    * op add *tmp188 :displayItem:y 12
-    * draw line :displayItem:x :displayItem:y :displayItem:x *tmp188
+  510 op add *tmp188 :y 12
+  511 draw line :displayItem:x :y :displayItem:x *tmp188
   512 op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp189 :displayItem:y
-    * op add *tmp190 :displayItem:x 7
-    * op add *tmp191 :displayItem:x 7
-    * op add *tmp192 :displayItem:y 6
-    * draw line *tmp189 :displayItem:y *tmp189 *tmp192
-    * op add *tmp193 :displayItem:y 6
-    * op add *tmp194 :displayItem:x 7
-    * op add *tmp195 :displayItem:y 6
+  513 draw line :displayItem:x :y *tmp189 :y
+  514 op add *tmp192 :y 6
+  515 draw line *tmp189 :y *tmp189 *tmp192
+  516 op add *tmp193 :y 6
+  517 op add *tmp195 :y 6
   518 draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :displayItem:y 12
-    * op add *tmp197 :displayItem:x 7
-    * op add *tmp198 :displayItem:y 12
+  519 op add *tmp196 :y 12
+  520 op add *tmp198 :y 12
   521 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   522 jump *label112 always
   523 label *label125
   524 jump *label127 notEqual *tmp133 7
   525 label *label128
   526 op add *tmp199 :displayItem:x 7
-    * op add *tmp200 :drawDigit:x 6
-    * op add *tmp201 :displayItem:x 7
-    * op sub *tmp202 *tmp199 1
-    * op add *tmp203 :displayItem:y 12
-    * draw line *tmp200 :displayItem:y *tmp200 *tmp203
-    * op add *tmp204 :displayItem:y 12
-    * op add *tmp205 :displayItem:x 7
-    * op sub *tmp206 *tmp199 1
-    * op add *tmp207 :displayItem:y 12
+  527 op add *tmp200 :displayItem:x 6
+  528 op add *tmp202 :displayItem:x 6
+  529 op add *tmp203 :y 12
+  530 draw line *tmp200 :y *tmp200 *tmp203
+  531 op add *tmp204 :y 12
+  532 op add *tmp206 :displayItem:x 6
+  533 op add *tmp207 :y 12
   534 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   535 jump *label112 always
   536 label *label127
   537 jump *label129 notEqual *tmp133 8
   538 label *label130
-    * op sub *tmp208 :displayItem:x 2
-    * op sub *tmp209 :drawDigit:x 1
-    * op sub *tmp210 :displayItem:y 2
-    * op sub *tmp211 :drawDigit:y 1
+  539 op sub *tmp209 :displayItem:x 1
+  540 op sub *tmp210 :y 2
+  541 op sub *tmp211 :y 1
   542 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :displayItem:y 6
+  543 op add *tmp212 :y 6
   544 op add *tmp213 :displayItem:x 7
-    * op add *tmp214 :displayItem:y 6
+  545 op add *tmp214 :y 6
   546 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   547 jump *label112 always
   548 label *label129
   549 jump *label131 notEqual *tmp133 9
   550 label *label132
   551 op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :displayItem:y *tmp215 :displayItem:y
-    * op add *tmp216 :displayItem:x 7
-    * op add *tmp217 :displayItem:x 7
-    * op add *tmp218 :displayItem:y 12
-    * draw line *tmp215 :displayItem:y *tmp215 *tmp218
-    * op add *tmp219 :displayItem:y 6
-    * op add *tmp220 :displayItem:x 7
-    * op add *tmp221 :displayItem:y 6
+  552 draw line :displayItem:x :y *tmp215 :y
+  553 op add *tmp218 :y 12
+  554 draw line *tmp215 :y *tmp215 *tmp218
+  555 op add *tmp219 :y 6
+  556 op add *tmp221 :y 6
   557 draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :displayItem:y 6
-    * op add *tmp223 :displayItem:y 12
+  558 op add *tmp222 :y 6
+  559 op add *tmp223 :y 12
   560 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * op add *tmp224 :displayItem:y 12
-    * op add *tmp225 :displayItem:x 7
-    * op add *tmp226 :displayItem:y 12
+  561 op add *tmp224 :y 12
+  562 op add *tmp226 :y 12
   563 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   564 label *label131
   565 label *label112
 
   583 set :y 152
   584 set :x 157
   585 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers.1:first_column false
   586 draw color 0 0 80 255
   587 jump *label138 equal false false
   588 draw rect 23 0 70 176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-92 instructions):
 
   168 jump *label46 always
   169 label *label26
   170 op add *tmp27 :x 8
-    * op add *tmp28 :y 8
   171 op add *tmp30 :y 7
   172 draw image *tmp27 *tmp30 :item 16 0
   173 op add :index :index 1
 
   264 label *label52
   265 # "Function: inline def displayItem(in index, in item, in x, in y)"
   266 set :displayItem:x :x
-    * set :displayItem:y :y
   267 sensor :displayItem:amount .CONTAINER :item
   268 op strictEqual *tmp38 .MEMORY null
   269 jump *label74 equal *tmp38 false
 
   301 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   302 jump *label91 notEqual *tmp53 0
   303 label *label92
-    * op sub *tmp58 :displayItem:x 1
-    * op sub *tmp59 :y 2
-    * op sub *tmp60 :y 1
   304 draw lineRect *tmp58 *tmp60 9 14
   305 jump *label90 always
   306 label *label91
   307 jump *label93 notEqual *tmp53 1
   308 label *label94
-    * op add *tmp62 :displayItem:x 6
-    * op add *tmp64 :displayItem:x 6
-    * op add *tmp65 :y 12
   309 draw line *tmp62 :y *tmp62 *tmp65
   310 jump *label90 always
   311 label *label93
   312 jump *label95 notEqual *tmp53 2
   313 label *label96
-    * op add *tmp66 :displayItem:x 7
   314 draw line :displayItem:x :y *tmp66 :y
-    * op add *tmp68 :y 6
   315 draw line :displayItem:x :y *tmp66 *tmp68
-    * op add *tmp70 :y 6
-    * op add *tmp72 :y 12
   316 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp74 :y 12
-    * op add *tmp76 :y 12
   317 draw line *tmp73 *tmp72 *tmp66 *tmp72
   318 jump *label90 always
   319 label *label95
   320 jump *label97 notEqual *tmp53 3
   321 label *label98
-    * op add *tmp77 :displayItem:x 7
-    * op add *tmp78 :y 6
   322 draw line :displayItem:x :y *tmp77 *tmp78
-    * op add *tmp79 :y 6
-    * op add *tmp81 :y 6
   323 draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :y 6
-    * op add *tmp84 :y 12
   324 draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :y 12
-    * op add *tmp87 :y 12
   325 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   326 jump *label90 always
   327 label *label97
   328 jump *label99 notEqual *tmp53 4
   329 label *label100
-    * op add *tmp88 :displayItem:x 7
-    * op add *tmp90 :y 6
   330 draw line *tmp88 :y *tmp88 *tmp90
-    * op add *tmp91 :y 6
-    * op add *tmp93 :y 6
   331 draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :y 6
-    * op add *tmp96 :y 12
   332 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   333 jump *label90 always
   334 label *label99
   335 jump *label101 notEqual *tmp53 5
   336 label *label102
-    * op add *tmp97 :displayItem:x 7
-    * op add *tmp98 :y 6
   337 draw line :displayItem:x :y *tmp97 *tmp98
-    * op add *tmp99 :y 6
-    * op add *tmp101 :y 6
   338 draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :y 6
-    * op add *tmp103 :y 12
   339 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * op add *tmp104 :y 12
-    * op add *tmp106 :y 12
   340 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   341 jump *label90 always
   342 label *label101
   343 jump *label103 notEqual *tmp53 6
   344 label *label104
-    * op sub *tmp108 :displayItem:x 1
-    * op sub *tmp109 :y 2
-    * op sub *tmp110 :y 1
   345 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :y 6
-    * op add *tmp113 :y 12
   346 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   347 jump *label90 always
   348 label *label103
   349 jump *label105 notEqual *tmp53 7
   350 label *label106
-    * op add *tmp114 :displayItem:x 7
-    * op add *tmp115 :y 12
   351 draw line :displayItem:x :y *tmp114 *tmp115
-    * op add *tmp116 :y 12
-    * op add *tmp118 :y 12
   352 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   353 jump *label90 always
   354 label *label105
   355 jump *label107 notEqual *tmp53 8
   356 label *label108
-    * op sub *tmp120 :displayItem:x 1
-    * op sub *tmp121 :y 2
-    * op sub *tmp122 :y 1
   357 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :y 6
-    * op add *tmp125 :y 6
   358 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   359 jump *label90 always
   360 label *label107
   361 jump *label109 notEqual *tmp53 9
   362 label *label110
-    * op sub *tmp127 :displayItem:x 1
-    * op add *tmp128 :y 6
-    * op add *tmp129 :y 4
-    * op add *tmp130 :displayItem:y 5
+  363 op add *tmp130 :y 5
   364 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :displayItem:x 7
-    * op add *tmp132 :y 6
   365 draw line :displayItem:x :y *tmp131 *tmp128
   366 label *label109
   367 label *label90
 
   370 label *label87
   371 op mod *tmp133 :displayItem:amount 10
   372 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * set :drawDigit:x :displayItem:x
-    * set :drawDigit:y :y
   373 jump *label113 notEqual *tmp133 0
   374 label *label114
   375 op sub *tmp138 :displayItem:x 1
-    * op sub *tmp139 :y 2
   376 op sub *tmp140 :y 1
   377 draw lineRect *tmp138 *tmp140 9 14
   378 jump *label112 always
   379 label *label113
   380 jump *label115 notEqual *tmp133 1
   381 label *label116
-    * op add *tmp141 :displayItem:x 7
   382 op add *tmp142 :displayItem:x 6
-    * op add *tmp144 :displayItem:x 6
   383 op add *tmp145 :y 12
   384 draw line *tmp142 :y *tmp142 *tmp145
   385 jump *label112 always
 
   390 draw line :displayItem:x :y *tmp146 :y
   391 op add *tmp147 :y 6
   392 draw line :displayItem:x :y :displayItem:x *tmp147
-    * op add *tmp148 :y 6
-    * op add *tmp150 :y 6
   393 draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp152 :y 6
   394 op add *tmp154 :y 12
   395 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :y 12
-    * op add *tmp157 :y 12
   396 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   397 jump *label112 always
   398 label *label117
 
   403 draw line *tmp158 :y *tmp158 *tmp160
   404 draw line :displayItem:x :y *tmp158 :y
   405 op add *tmp162 :y 6
-    * op add *tmp164 :y 6
   406 draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :y 12
-    * op add *tmp167 :y 12
   407 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   408 jump *label112 always
   409 label *label119
 
   413 op add *tmp170 :y 12
   414 draw line *tmp168 :y *tmp168 *tmp170
   415 op add *tmp171 :y 6
-    * op add *tmp173 :y 6
   416 draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :y 6
-    * op add *tmp175 :y 12
   417 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   418 jump *label112 always
   419 label *label121
 
   423 draw line :displayItem:x :y *tmp176 :y
   424 op add *tmp179 :y 6
   425 draw line *tmp176 :y *tmp176 *tmp179
-    * op add *tmp180 :y 6
-    * op add *tmp182 :y 6
   426 draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :y 6
   427 op add *tmp184 :y 12
   428 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * op add *tmp185 :y 12
-    * op add *tmp187 :y 12
   429 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   430 jump *label112 always
   431 label *label123
 
   437 draw line :displayItem:x :y *tmp189 :y
   438 op add *tmp192 :y 6
   439 draw line *tmp189 :y *tmp189 *tmp192
-    * op add *tmp193 :y 6
-    * op add *tmp195 :y 6
   440 draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :y 12
-    * op add *tmp198 :y 12
   441 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   442 jump *label112 always
   443 label *label125
   444 jump *label127 notEqual *tmp133 7
   445 label *label128
-    * op add *tmp199 :displayItem:x 7
   446 op add *tmp200 :displayItem:x 6
-    * op add *tmp202 :displayItem:x 6
   447 op add *tmp203 :y 12
   448 draw line *tmp200 :y *tmp200 *tmp203
-    * op add *tmp204 :y 12
-    * op add *tmp206 :displayItem:x 6
-    * op add *tmp207 :y 12
   449 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   450 jump *label112 always
   451 label *label127
   452 jump *label129 notEqual *tmp133 8
   453 label *label130
   454 op sub *tmp209 :displayItem:x 1
-    * op sub *tmp210 :y 2
   455 op sub *tmp211 :y 1
   456 draw lineRect *tmp209 *tmp211 9 14
   457 op add *tmp212 :y 6
   458 op add *tmp213 :displayItem:x 7
-    * op add *tmp214 :y 6
   459 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   460 jump *label112 always
   461 label *label129
 
   466 op add *tmp218 :y 12
   467 draw line *tmp215 :y *tmp215 *tmp218
   468 op add *tmp219 :y 6
-    * op add *tmp221 :y 6
   469 draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :y 6
-    * op add *tmp223 :y 12
   470 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * op add *tmp224 :y 12
-    * op add *tmp226 :y 12
   471 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   472 label *label131
   473 label *label112

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
   360 label *label107
   361 jump *label109 notEqual *tmp53 9
   362 label *label110
-    * op add *tmp130 :y 5
   363 draw lineRect *tmp127 *tmp130 9 8
   364 draw line :displayItem:x :y *tmp131 *tmp128
   365 label *label109

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     8 set :n .LINKS
     9 label *label3
    10 jump *label5 lessThanEq :n 0
+   11 label *label140
    12 op sub :n :n 1
    13 getlink :block :n
    14 print "Found: "
 
    41 label *label13
    42 label *label6
    43 label *label4
-    * jump *label3 always
+   44 jump *label140 greaterThan :n 0
    45 label *label5
    46 print "Message: "
    47 print .MESSAGE
 
   297 label *label75
   298 set :displayItem:i 0
   299 label *label84
-    * jump *label86 greaterThanEq :displayItem:i 5
+  300 label *label141
   301 jump *label87 always
   302 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   303 jump *label91 notEqual *tmp53 0
 
   481 label *label134
   482 label *label85
   483 op add :displayItem:i :displayItem:i 1
-    * jump *label84 always
+  484 jump *label141 lessThan :displayItem:i 5
   485 label *label86
   486 label *label73
   487 op add :index :index 1

Modifications by Unroll loop at line 152:5 (+527 instructions):
 
   295 label *label83
   296 label *label81
   297 label *label75
-    * set :displayItem:i 0
-    * label *label84
-    * label *label141
-    * jump *label87 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label91 notEqual *tmp53 0
-    * label *label92
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label90 always
-    * label *label91
-    * jump *label93 notEqual *tmp53 1
-    * label *label94
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label90 always
-    * label *label93
-    * jump *label95 notEqual *tmp53 2
-    * label *label96
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label90 always
-    * label *label95
-    * jump *label97 notEqual *tmp53 3
-    * label *label98
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label90 always
-    * label *label97
-    * jump *label99 notEqual *tmp53 4
-    * label *label100
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label90 always
-    * label *label99
-    * jump *label101 notEqual *tmp53 5
-    * label *label102
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label90 always
-    * label *label101
-    * jump *label103 notEqual *tmp53 6
-    * label *label104
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label90 always
-    * label *label103
-    * jump *label105 notEqual *tmp53 7
-    * label *label106
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label90 always
-    * label *label105
-    * jump *label107 notEqual *tmp53 8
-    * label *label108
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label90 always
-    * label *label107
-    * jump *label109 notEqual *tmp53 9
-    * label *label110
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label109
-    * label *label90
-    * label *label89
-    * jump *label88 always
-    * label *label87
-    * op mod *tmp133 :displayItem:amount 10
-    * # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label113 notEqual *tmp133 0
-    * label *label114
-    * op sub *tmp138 :displayItem:x 1
-    * op sub *tmp140 :y 1
-    * draw lineRect *tmp138 *tmp140 9 14
-    * jump *label112 always
-    * label *label113
-    * jump *label115 notEqual *tmp133 1
-    * label *label116
-    * op add *tmp142 :displayItem:x 6
-    * op add *tmp145 :y 12
-    * draw line *tmp142 :y *tmp142 *tmp145
-    * jump *label112 always
-    * label *label115
-    * jump *label117 notEqual *tmp133 2
-    * label *label118
-    * op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp146 :y
-    * op add *tmp147 :y 6
-    * draw line :displayItem:x :y :displayItem:x *tmp147
-    * draw line :displayItem:x *tmp147 *tmp146 *tmp147
-    * op add *tmp154 :y 12
-    * draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem:x *tmp154 *tmp146 *tmp154
-    * jump *label112 always
-    * label *label117
-    * jump *label119 notEqual *tmp133 3
-    * label *label120
-    * op add *tmp158 :displayItem:x 7
-    * op add *tmp160 :y 12
-    * draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem:x :y *tmp158 :y
-    * op add *tmp162 :y 6
-    * draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem:x *tmp160 *tmp158 *tmp160
-    * jump *label112 always
-    * label *label119
-    * jump *label121 notEqual *tmp133 4
-    * label *label122
-    * op add *tmp168 :displayItem:x 7
-    * op add *tmp170 :y 12
-    * draw line *tmp168 :y *tmp168 *tmp170
-    * op add *tmp171 :y 6
-    * draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem:x *tmp171 :displayItem:x *tmp170
-    * jump *label112 always
-    * label *label121
-    * jump *label123 notEqual *tmp133 5
-    * label *label124
-    * op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp176 :y
-    * op add *tmp179 :y 6
-    * draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem:x *tmp179 *tmp176 *tmp179
-    * op add *tmp184 :y 12
-    * draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * draw line :displayItem:x *tmp184 *tmp176 *tmp184
-    * jump *label112 always
-    * label *label123
-    * jump *label125 notEqual *tmp133 6
-    * label *label126
-    * op add *tmp188 :y 12
-    * draw line :displayItem:x :y :displayItem:x *tmp188
-    * op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp189 :y
-    * op add *tmp192 :y 6
-    * draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem:x *tmp188 *tmp189 *tmp188
-    * jump *label112 always
-    * label *label125
-    * jump *label127 notEqual *tmp133 7
-    * label *label128
-    * op add *tmp200 :displayItem:x 6
-    * op add *tmp203 :y 12
-    * draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem:x *tmp203 *tmp200 *tmp203
-    * jump *label112 always
-    * label *label127
-    * jump *label129 notEqual *tmp133 8
-    * label *label130
-    * op sub *tmp209 :displayItem:x 1
-    * op sub *tmp211 :y 1
-    * draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :y 6
-    * op add *tmp213 :displayItem:x 7
-    * draw line :displayItem:x *tmp212 *tmp213 *tmp212
-    * jump *label112 always
-    * label *label129
-    * jump *label131 notEqual *tmp133 9
-    * label *label132
-    * op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp215 :y
-    * op add *tmp218 :y 12
-    * draw line *tmp215 :y *tmp215 *tmp218
-    * op add *tmp219 :y 6
-    * draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label131
-    * label *label112
-    * label *label111
-    * label *label88
-    * op sub :displayItem:x :displayItem:x 11
-    * op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label133 notEqual :displayItem:amount 0
-    * jump *label86 always
-    * label *label133
-    * label *label134
-    * label *label85
-    * op add :displayItem:i :displayItem:i 1
-    * jump *label141 lessThan :displayItem:i 5
-    * label *label86
+  298 set :displayItem:i 0
+  299 label *label142
+  300 label *label143
+  301 jump *label166 always
+  302 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  303 jump *label145 notEqual *tmp53 0
+  304 label *label144
+  305 draw lineRect *tmp58 *tmp60 9 14
+  306 jump *label164 always
+  307 label *label145
+  308 jump *label147 notEqual *tmp53 1
+  309 label *label146
+  310 draw line *tmp62 :y *tmp62 *tmp65
+  311 jump *label164 always
+  312 label *label147
+  313 jump *label149 notEqual *tmp53 2
+  314 label *label148
+  315 draw line :displayItem:x :y *tmp66 :y
+  316 draw line :displayItem:x :y *tmp66 *tmp68
+  317 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  318 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  319 jump *label164 always
+  320 label *label149
+  321 jump *label151 notEqual *tmp53 3
+  322 label *label150
+  323 draw line :displayItem:x :y *tmp77 *tmp78
+  324 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  325 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  326 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  327 jump *label164 always
+  328 label *label151
+  329 jump *label153 notEqual *tmp53 4
+  330 label *label152
+  331 draw line *tmp88 :y *tmp88 *tmp90
+  332 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  333 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  334 jump *label164 always
+  335 label *label153
+  336 jump *label155 notEqual *tmp53 5
+  337 label *label154
+  338 draw line :displayItem:x :y *tmp97 *tmp98
+  339 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  340 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  341 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  342 jump *label164 always
+  343 label *label155
+  344 jump *label157 notEqual *tmp53 6
+  345 label *label156
+  346 draw lineRect *tmp108 *tmp110 9 8
+  347 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  348 jump *label164 always
+  349 label *label157
+  350 jump *label159 notEqual *tmp53 7
+  351 label *label158
+  352 draw line :displayItem:x :y *tmp114 *tmp115
+  353 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  354 jump *label164 always
+  355 label *label159
+  356 jump *label161 notEqual *tmp53 8
+  357 label *label160
+  358 draw lineRect *tmp120 *tmp122 9 14
+  359 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  360 jump *label164 always
+  361 label *label161
+  362 jump *label163 notEqual *tmp53 9
+  363 label *label162
+  364 draw lineRect *tmp127 *tmp130 9 8
+  365 draw line :displayItem:x :y *tmp131 *tmp128
+  366 label *label163
+  367 label *label164
+  368 label *label165
+  369 jump *label189 always
+  370 label *label166
+  371 op mod *tmp133 :displayItem:amount 10
+  372 # "Function: inline def drawDigit(in x, in y, in digit)"
+  373 jump *label168 notEqual *tmp133 0
+  374 label *label167
+  375 op sub *tmp138 :displayItem:x 1
+  376 op sub *tmp140 :y 1
+  377 draw lineRect *tmp138 *tmp140 9 14
+  378 jump *label187 always
+  379 label *label168
+  380 jump *label170 notEqual *tmp133 1
+  381 label *label169
+  382 op add *tmp142 :displayItem:x 6
+  383 op add *tmp145 :y 12
+  384 draw line *tmp142 :y *tmp142 *tmp145
+  385 jump *label187 always
+  386 label *label170
+  387 jump *label172 notEqual *tmp133 2
+  388 label *label171
+  389 op add *tmp146 :displayItem:x 7
+  390 draw line :displayItem:x :y *tmp146 :y
+  391 op add *tmp147 :y 6
+  392 draw line :displayItem:x :y :displayItem:x *tmp147
+  393 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  394 op add *tmp154 :y 12
+  395 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  396 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  397 jump *label187 always
+  398 label *label172
+  399 jump *label174 notEqual *tmp133 3
+  400 label *label173
+  401 op add *tmp158 :displayItem:x 7
+  402 op add *tmp160 :y 12
+  403 draw line *tmp158 :y *tmp158 *tmp160
+  404 draw line :displayItem:x :y *tmp158 :y
+  405 op add *tmp162 :y 6
+  406 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  407 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  408 jump *label187 always
+  409 label *label174
+  410 jump *label176 notEqual *tmp133 4
+  411 label *label175
+  412 op add *tmp168 :displayItem:x 7
+  413 op add *tmp170 :y 12
+  414 draw line *tmp168 :y *tmp168 *tmp170
+  415 op add *tmp171 :y 6
+  416 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  417 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  418 jump *label187 always
+  419 label *label176
+  420 jump *label178 notEqual *tmp133 5
+  421 label *label177
+  422 op add *tmp176 :displayItem:x 7
+  423 draw line :displayItem:x :y *tmp176 :y
+  424 op add *tmp179 :y 6
+  425 draw line *tmp176 :y *tmp176 *tmp179
+  426 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  427 op add *tmp184 :y 12
+  428 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  429 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  430 jump *label187 always
+  431 label *label178
+  432 jump *label180 notEqual *tmp133 6
+  433 label *label179
+  434 op add *tmp188 :y 12
+  435 draw line :displayItem:x :y :displayItem:x *tmp188
+  436 op add *tmp189 :displayItem:x 7
+  437 draw line :displayItem:x :y *tmp189 :y
+  438 op add *tmp192 :y 6
+  439 draw line *tmp189 :y *tmp189 *tmp192
+  440 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  441 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  442 jump *label187 always
+  443 label *label180
+  444 jump *label182 notEqual *tmp133 7
+  445 label *label181
+  446 op add *tmp200 :displayItem:x 6
+  447 op add *tmp203 :y 12
+  448 draw line *tmp200 :y *tmp200 *tmp203
+  449 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  450 jump *label187 always
+  451 label *label182
+  452 jump *label184 notEqual *tmp133 8
+  453 label *label183
+  454 op sub *tmp209 :displayItem:x 1
+  455 op sub *tmp211 :y 1
+  456 draw lineRect *tmp209 *tmp211 9 14
+  457 op add *tmp212 :y 6
+  458 op add *tmp213 :displayItem:x 7
+  459 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  460 jump *label187 always
+  461 label *label184
+  462 jump *label186 notEqual *tmp133 9
+  463 label *label185
+  464 op add *tmp215 :displayItem:x 7
+  465 draw line :displayItem:x :y *tmp215 :y
+  466 op add *tmp218 :y 12
+  467 draw line *tmp215 :y *tmp215 *tmp218
+  468 op add *tmp219 :y 6
+  469 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  470 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  471 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  472 label *label186
+  473 label *label187
+  474 label *label188
+  475 label *label189
+  476 op sub :displayItem:x :displayItem:x 11
+  477 op idiv :displayItem:amount :displayItem:amount 10
+  478 jump *label190 notEqual :displayItem:amount 0
+  479 jump *label86 always
+  480 label *label190
+  481 label *label191
+  482 label *label192
+  483 op add :displayItem:i :displayItem:i 1
+  484 label *label193
+  485 jump *label216 always
+  486 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  487 jump *label195 notEqual *tmp53 0
+  488 label *label194
+  489 draw lineRect *tmp58 *tmp60 9 14
+  490 jump *label214 always
+  491 label *label195
+  492 jump *label197 notEqual *tmp53 1
+  493 label *label196
+  494 draw line *tmp62 :y *tmp62 *tmp65
+  495 jump *label214 always
+  496 label *label197
+  497 jump *label199 notEqual *tmp53 2
+  498 label *label198
+  499 draw line :displayItem:x :y *tmp66 :y
+  500 draw line :displayItem:x :y *tmp66 *tmp68
+  501 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  502 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  503 jump *label214 always
+  504 label *label199
+  505 jump *label201 notEqual *tmp53 3
+  506 label *label200
+  507 draw line :displayItem:x :y *tmp77 *tmp78
+  508 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  509 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  510 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  511 jump *label214 always
+  512 label *label201
+  513 jump *label203 notEqual *tmp53 4
+  514 label *label202
+  515 draw line *tmp88 :y *tmp88 *tmp90
+  516 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  517 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  518 jump *label214 always
+  519 label *label203
+  520 jump *label205 notEqual *tmp53 5
+  521 label *label204
+  522 draw line :displayItem:x :y *tmp97 *tmp98
+  523 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  524 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  525 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  526 jump *label214 always
+  527 label *label205
+  528 jump *label207 notEqual *tmp53 6
+  529 label *label206
+  530 draw lineRect *tmp108 *tmp110 9 8
+  531 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  532 jump *label214 always
+  533 label *label207
+  534 jump *label209 notEqual *tmp53 7
+  535 label *label208
+  536 draw line :displayItem:x :y *tmp114 *tmp115
+  537 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  538 jump *label214 always
+  539 label *label209
+  540 jump *label211 notEqual *tmp53 8
+  541 label *label210
+  542 draw lineRect *tmp120 *tmp122 9 14
+  543 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  544 jump *label214 always
+  545 label *label211
+  546 jump *label213 notEqual *tmp53 9
+  547 label *label212
+  548 draw lineRect *tmp127 *tmp130 9 8
+  549 draw line :displayItem:x :y *tmp131 *tmp128
+  550 label *label213
+  551 label *label214
+  552 label *label215
+  553 jump *label239 always
+  554 label *label216
+  555 op mod *tmp133 :displayItem:amount 10
+  556 # "Function: inline def drawDigit(in x, in y, in digit)"
+  557 jump *label218 notEqual *tmp133 0
+  558 label *label217
+  559 op sub *tmp138 :displayItem:x 1
+  560 op sub *tmp140 :y 1
+  561 draw lineRect *tmp138 *tmp140 9 14
+  562 jump *label237 always
+  563 label *label218
+  564 jump *label220 notEqual *tmp133 1
+  565 label *label219
+  566 op add *tmp142 :displayItem:x 6
+  567 op add *tmp145 :y 12
+  568 draw line *tmp142 :y *tmp142 *tmp145
+  569 jump *label237 always
+  570 label *label220
+  571 jump *label222 notEqual *tmp133 2
+  572 label *label221
+  573 op add *tmp146 :displayItem:x 7
+  574 draw line :displayItem:x :y *tmp146 :y
+  575 op add *tmp147 :y 6
+  576 draw line :displayItem:x :y :displayItem:x *tmp147
+  577 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  578 op add *tmp154 :y 12
+  579 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  580 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  581 jump *label237 always
+  582 label *label222
+  583 jump *label224 notEqual *tmp133 3
+  584 label *label223
+  585 op add *tmp158 :displayItem:x 7
+  586 op add *tmp160 :y 12
+  587 draw line *tmp158 :y *tmp158 *tmp160
+  588 draw line :displayItem:x :y *tmp158 :y
+  589 op add *tmp162 :y 6
+  590 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  591 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  592 jump *label237 always
+  593 label *label224
+  594 jump *label226 notEqual *tmp133 4
+  595 label *label225
+  596 op add *tmp168 :displayItem:x 7
+  597 op add *tmp170 :y 12
+  598 draw line *tmp168 :y *tmp168 *tmp170
+  599 op add *tmp171 :y 6
+  600 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  601 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  602 jump *label237 always
+  603 label *label226
+  604 jump *label228 notEqual *tmp133 5
+  605 label *label227
+  606 op add *tmp176 :displayItem:x 7
+  607 draw line :displayItem:x :y *tmp176 :y
+  608 op add *tmp179 :y 6
+  609 draw line *tmp176 :y *tmp176 *tmp179
+  610 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  611 op add *tmp184 :y 12
+  612 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  613 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  614 jump *label237 always
+  615 label *label228
+  616 jump *label230 notEqual *tmp133 6
+  617 label *label229
+  618 op add *tmp188 :y 12
+  619 draw line :displayItem:x :y :displayItem:x *tmp188
+  620 op add *tmp189 :displayItem:x 7
+  621 draw line :displayItem:x :y *tmp189 :y
+  622 op add *tmp192 :y 6
+  623 draw line *tmp189 :y *tmp189 *tmp192
+  624 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  625 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  626 jump *label237 always
+  627 label *label230
+  628 jump *label232 notEqual *tmp133 7
+  629 label *label231
+  630 op add *tmp200 :displayItem:x 6
+  631 op add *tmp203 :y 12
+  632 draw line *tmp200 :y *tmp200 *tmp203
+  633 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  634 jump *label237 always
+  635 label *label232
+  636 jump *label234 notEqual *tmp133 8
+  637 label *label233
+  638 op sub *tmp209 :displayItem:x 1
+  639 op sub *tmp211 :y 1
+  640 draw lineRect *tmp209 *tmp211 9 14
+  641 op add *tmp212 :y 6
+  642 op add *tmp213 :displayItem:x 7
+  643 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  644 jump *label237 always
+  645 label *label234
+  646 jump *label236 notEqual *tmp133 9
+  647 label *label235
+  648 op add *tmp215 :displayItem:x 7
+  649 draw line :displayItem:x :y *tmp215 :y
+  650 op add *tmp218 :y 12
+  651 draw line *tmp215 :y *tmp215 *tmp218
+  652 op add *tmp219 :y 6
+  653 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  654 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  655 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  656 label *label236
+  657 label *label237
+  658 label *label238
+  659 label *label239
+  660 op sub :displayItem:x :displayItem:x 11
+  661 op idiv :displayItem:amount :displayItem:amount 10
+  662 jump *label240 notEqual :displayItem:amount 0
+  663 jump *label86 always
+  664 label *label240
+  665 label *label241
+  666 label *label242
+  667 op add :displayItem:i :displayItem:i 1
+  668 label *label243
+  669 jump *label266 always
+  670 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  671 jump *label245 notEqual *tmp53 0
+  672 label *label244
+  673 draw lineRect *tmp58 *tmp60 9 14
+  674 jump *label264 always
+  675 label *label245
+  676 jump *label247 notEqual *tmp53 1
+  677 label *label246
+  678 draw line *tmp62 :y *tmp62 *tmp65
+  679 jump *label264 always
+  680 label *label247
+  681 jump *label249 notEqual *tmp53 2
+  682 label *label248
+  683 draw line :displayItem:x :y *tmp66 :y
+  684 draw line :displayItem:x :y *tmp66 *tmp68
+  685 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  686 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  687 jump *label264 always
+  688 label *label249
+  689 jump *label251 notEqual *tmp53 3
+  690 label *label250
+  691 draw line :displayItem:x :y *tmp77 *tmp78
+  692 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  693 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  694 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  695 jump *label264 always
+  696 label *label251
+  697 jump *label253 notEqual *tmp53 4
+  698 label *label252
+  699 draw line *tmp88 :y *tmp88 *tmp90
+  700 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  701 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  702 jump *label264 always
+  703 label *label253
+  704 jump *label255 notEqual *tmp53 5
+  705 label *label254
+  706 draw line :displayItem:x :y *tmp97 *tmp98
+  707 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  708 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  709 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  710 jump *label264 always
+  711 label *label255
+  712 jump *label257 notEqual *tmp53 6
+  713 label *label256
+  714 draw lineRect *tmp108 *tmp110 9 8
+  715 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  716 jump *label264 always
+  717 label *label257
+  718 jump *label259 notEqual *tmp53 7
+  719 label *label258
+  720 draw line :displayItem:x :y *tmp114 *tmp115
+  721 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  722 jump *label264 always
+  723 label *label259
+  724 jump *label261 notEqual *tmp53 8
+  725 label *label260
+  726 draw lineRect *tmp120 *tmp122 9 14
+  727 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  728 jump *label264 always
+  729 label *label261
+  730 jump *label263 notEqual *tmp53 9
+  731 label *label262
+  732 draw lineRect *tmp127 *tmp130 9 8
+  733 draw line :displayItem:x :y *tmp131 *tmp128
+  734 label *label263
+  735 label *label264
+  736 label *label265
+  737 jump *label289 always
+  738 label *label266
+  739 op mod *tmp133 :displayItem:amount 10
+  740 # "Function: inline def drawDigit(in x, in y, in digit)"
+  741 jump *label268 notEqual *tmp133 0
+  742 label *label267
+  743 op sub *tmp138 :displayItem:x 1
+  744 op sub *tmp140 :y 1
+  745 draw lineRect *tmp138 *tmp140 9 14
+  746 jump *label287 always
+  747 label *label268
+  748 jump *label270 notEqual *tmp133 1
+  749 label *label269
+  750 op add *tmp142 :displayItem:x 6
+  751 op add *tmp145 :y 12
+  752 draw line *tmp142 :y *tmp142 *tmp145
+  753 jump *label287 always
+  754 label *label270
+  755 jump *label272 notEqual *tmp133 2
+  756 label *label271
+  757 op add *tmp146 :displayItem:x 7
+  758 draw line :displayItem:x :y *tmp146 :y
+  759 op add *tmp147 :y 6
+  760 draw line :displayItem:x :y :displayItem:x *tmp147
+  761 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  762 op add *tmp154 :y 12
+  763 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  764 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  765 jump *label287 always
+  766 label *label272
+  767 jump *label274 notEqual *tmp133 3
+  768 label *label273
+  769 op add *tmp158 :displayItem:x 7
+  770 op add *tmp160 :y 12
+  771 draw line *tmp158 :y *tmp158 *tmp160
+  772 draw line :displayItem:x :y *tmp158 :y
+  773 op add *tmp162 :y 6
+  774 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  775 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  776 jump *label287 always
+  777 label *label274
+  778 jump *label276 notEqual *tmp133 4
+  779 label *label275
+  780 op add *tmp168 :displayItem:x 7
+  781 op add *tmp170 :y 12
+  782 draw line *tmp168 :y *tmp168 *tmp170
+  783 op add *tmp171 :y 6
+  784 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  785 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  786 jump *label287 always
+  787 label *label276
+  788 jump *label278 notEqual *tmp133 5
+  789 label *label277
+  790 op add *tmp176 :displayItem:x 7
+  791 draw line :displayItem:x :y *tmp176 :y
+  792 op add *tmp179 :y 6
+  793 draw line *tmp176 :y *tmp176 *tmp179
+  794 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  795 op add *tmp184 :y 12
+  796 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  797 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  798 jump *label287 always
+  799 label *label278
+  800 jump *label280 notEqual *tmp133 6
+  801 label *label279
+  802 op add *tmp188 :y 12
+  803 draw line :displayItem:x :y :displayItem:x *tmp188
+  804 op add *tmp189 :displayItem:x 7
+  805 draw line :displayItem:x :y *tmp189 :y
+  806 op add *tmp192 :y 6
+  807 draw line *tmp189 :y *tmp189 *tmp192
+  808 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  809 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  810 jump *label287 always
+  811 label *label280
+  812 jump *label282 notEqual *tmp133 7
+  813 label *label281
+  814 op add *tmp200 :displayItem:x 6
+  815 op add *tmp203 :y 12
+  816 draw line *tmp200 :y *tmp200 *tmp203
+  817 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  818 jump *label287 always
+  819 label *label282
+  820 jump *label284 notEqual *tmp133 8
+  821 label *label283
+  822 op sub *tmp209 :displayItem:x 1
+  823 op sub *tmp211 :y 1
+  824 draw lineRect *tmp209 *tmp211 9 14
+  825 op add *tmp212 :y 6
+  826 op add *tmp213 :displayItem:x 7
+  827 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  828 jump *label287 always
+  829 label *label284
+  830 jump *label286 notEqual *tmp133 9
+  831 label *label285
+  832 op add *tmp215 :displayItem:x 7
+  833 draw line :displayItem:x :y *tmp215 :y
+  834 op add *tmp218 :y 12
+  835 draw line *tmp215 :y *tmp215 *tmp218
+  836 op add *tmp219 :y 6
+  837 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+  838 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+  839 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  840 label *label286
+  841 label *label287
+  842 label *label288
+  843 label *label289
+  844 op sub :displayItem:x :displayItem:x 11
+  845 op idiv :displayItem:amount :displayItem:amount 10
+  846 jump *label290 notEqual :displayItem:amount 0
+  847 jump *label86 always
+  848 label *label290
+  849 label *label291
+  850 label *label292
+  851 op add :displayItem:i :displayItem:i 1
+  852 label *label293
+  853 jump *label316 always
+  854 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  855 jump *label295 notEqual *tmp53 0
+  856 label *label294
+  857 draw lineRect *tmp58 *tmp60 9 14
+  858 jump *label314 always
+  859 label *label295
+  860 jump *label297 notEqual *tmp53 1
+  861 label *label296
+  862 draw line *tmp62 :y *tmp62 *tmp65
+  863 jump *label314 always
+  864 label *label297
+  865 jump *label299 notEqual *tmp53 2
+  866 label *label298
+  867 draw line :displayItem:x :y *tmp66 :y
+  868 draw line :displayItem:x :y *tmp66 *tmp68
+  869 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  870 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  871 jump *label314 always
+  872 label *label299
+  873 jump *label301 notEqual *tmp53 3
+  874 label *label300
+  875 draw line :displayItem:x :y *tmp77 *tmp78
+  876 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+  877 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+  878 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  879 jump *label314 always
+  880 label *label301
+  881 jump *label303 notEqual *tmp53 4
+  882 label *label302
+  883 draw line *tmp88 :y *tmp88 *tmp90
+  884 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+  885 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  886 jump *label314 always
+  887 label *label303
+  888 jump *label305 notEqual *tmp53 5
+  889 label *label304
+  890 draw line :displayItem:x :y *tmp97 *tmp98
+  891 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+  892 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+  893 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  894 jump *label314 always
+  895 label *label305
+  896 jump *label307 notEqual *tmp53 6
+  897 label *label306
+  898 draw lineRect *tmp108 *tmp110 9 8
+  899 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  900 jump *label314 always
+  901 label *label307
+  902 jump *label309 notEqual *tmp53 7
+  903 label *label308
+  904 draw line :displayItem:x :y *tmp114 *tmp115
+  905 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  906 jump *label314 always
+  907 label *label309
+  908 jump *label311 notEqual *tmp53 8
+  909 label *label310
+  910 draw lineRect *tmp120 *tmp122 9 14
+  911 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  912 jump *label314 always
+  913 label *label311
+  914 jump *label313 notEqual *tmp53 9
+  915 label *label312
+  916 draw lineRect *tmp127 *tmp130 9 8
+  917 draw line :displayItem:x :y *tmp131 *tmp128
+  918 label *label313
+  919 label *label314
+  920 label *label315
+  921 jump *label339 always
+  922 label *label316
+  923 op mod *tmp133 :displayItem:amount 10
+  924 # "Function: inline def drawDigit(in x, in y, in digit)"
+  925 jump *label318 notEqual *tmp133 0
+  926 label *label317
+  927 op sub *tmp138 :displayItem:x 1
+  928 op sub *tmp140 :y 1
+  929 draw lineRect *tmp138 *tmp140 9 14
+  930 jump *label337 always
+  931 label *label318
+  932 jump *label320 notEqual *tmp133 1
+  933 label *label319
+  934 op add *tmp142 :displayItem:x 6
+  935 op add *tmp145 :y 12
+  936 draw line *tmp142 :y *tmp142 *tmp145
+  937 jump *label337 always
+  938 label *label320
+  939 jump *label322 notEqual *tmp133 2
+  940 label *label321
+  941 op add *tmp146 :displayItem:x 7
+  942 draw line :displayItem:x :y *tmp146 :y
+  943 op add *tmp147 :y 6
+  944 draw line :displayItem:x :y :displayItem:x *tmp147
+  945 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  946 op add *tmp154 :y 12
+  947 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  948 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  949 jump *label337 always
+  950 label *label322
+  951 jump *label324 notEqual *tmp133 3
+  952 label *label323
+  953 op add *tmp158 :displayItem:x 7
+  954 op add *tmp160 :y 12
+  955 draw line *tmp158 :y *tmp158 *tmp160
+  956 draw line :displayItem:x :y *tmp158 :y
+  957 op add *tmp162 :y 6
+  958 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+  959 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  960 jump *label337 always
+  961 label *label324
+  962 jump *label326 notEqual *tmp133 4
+  963 label *label325
+  964 op add *tmp168 :displayItem:x 7
+  965 op add *tmp170 :y 12
+  966 draw line *tmp168 :y *tmp168 *tmp170
+  967 op add *tmp171 :y 6
+  968 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+  969 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  970 jump *label337 always
+  971 label *label326
+  972 jump *label328 notEqual *tmp133 5
+  973 label *label327
+  974 op add *tmp176 :displayItem:x 7
+  975 draw line :displayItem:x :y *tmp176 :y
+  976 op add *tmp179 :y 6
+  977 draw line *tmp176 :y *tmp176 *tmp179
+  978 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  979 op add *tmp184 :y 12
+  980 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+  981 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  982 jump *label337 always
+  983 label *label328
+  984 jump *label330 notEqual *tmp133 6
+  985 label *label329
+  986 op add *tmp188 :y 12
+  987 draw line :displayItem:x :y :displayItem:x *tmp188
+  988 op add *tmp189 :displayItem:x 7
+  989 draw line :displayItem:x :y *tmp189 :y
+  990 op add *tmp192 :y 6
+  991 draw line *tmp189 :y *tmp189 *tmp192
+  992 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+  993 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  994 jump *label337 always
+  995 label *label330
+  996 jump *label332 notEqual *tmp133 7
+  997 label *label331
+  998 op add *tmp200 :displayItem:x 6
+  999 op add *tmp203 :y 12
+ 1000 draw line *tmp200 :y *tmp200 *tmp203
+ 1001 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+ 1002 jump *label337 always
+ 1003 label *label332
+ 1004 jump *label334 notEqual *tmp133 8
+ 1005 label *label333
+ 1006 op sub *tmp209 :displayItem:x 1
+ 1007 op sub *tmp211 :y 1
+ 1008 draw lineRect *tmp209 *tmp211 9 14
+ 1009 op add *tmp212 :y 6
+ 1010 op add *tmp213 :displayItem:x 7
+ 1011 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+ 1012 jump *label337 always
+ 1013 label *label334
+ 1014 jump *label336 notEqual *tmp133 9
+ 1015 label *label335
+ 1016 op add *tmp215 :displayItem:x 7
+ 1017 draw line :displayItem:x :y *tmp215 :y
+ 1018 op add *tmp218 :y 12
+ 1019 draw line *tmp215 :y *tmp215 *tmp218
+ 1020 op add *tmp219 :y 6
+ 1021 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+ 1022 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+ 1023 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+ 1024 label *label336
+ 1025 label *label337
+ 1026 label *label338
+ 1027 label *label339
+ 1028 op sub :displayItem:x :displayItem:x 11
+ 1029 op idiv :displayItem:amount :displayItem:amount 10
+ 1030 jump *label340 notEqual :displayItem:amount 0
+ 1031 jump *label86 always
+ 1032 label *label340
+ 1033 label *label341
+ 1034 label *label342
+ 1035 op add :displayItem:i :displayItem:i 1
+ 1036 label *label343
+ 1037 jump *label366 always
+ 1038 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+ 1039 jump *label345 notEqual *tmp53 0
+ 1040 label *label344
+ 1041 draw lineRect *tmp58 *tmp60 9 14
+ 1042 jump *label364 always
+ 1043 label *label345
+ 1044 jump *label347 notEqual *tmp53 1
+ 1045 label *label346
+ 1046 draw line *tmp62 :y *tmp62 *tmp65
+ 1047 jump *label364 always
+ 1048 label *label347
+ 1049 jump *label349 notEqual *tmp53 2
+ 1050 label *label348
+ 1051 draw line :displayItem:x :y *tmp66 :y
+ 1052 draw line :displayItem:x :y *tmp66 *tmp68
+ 1053 draw line *tmp66 *tmp68 *tmp66 *tmp72
+ 1054 draw line *tmp73 *tmp72 *tmp66 *tmp72
+ 1055 jump *label364 always
+ 1056 label *label349
+ 1057 jump *label351 notEqual *tmp53 3
+ 1058 label *label350
+ 1059 draw line :displayItem:x :y *tmp77 *tmp78
+ 1060 draw line :displayItem:x *tmp78 *tmp77 *tmp78
+ 1061 draw line :displayItem:x *tmp78 *tmp77 *tmp84
+ 1062 draw line :displayItem:x *tmp84 *tmp77 *tmp84
+ 1063 jump *label364 always
+ 1064 label *label351
+ 1065 jump *label353 notEqual *tmp53 4
+ 1066 label *label352
+ 1067 draw line *tmp88 :y *tmp88 *tmp90
+ 1068 draw line :displayItem:x *tmp90 *tmp88 *tmp90
+ 1069 draw line :displayItem:x *tmp90 *tmp88 *tmp96
+ 1070 jump *label364 always
+ 1071 label *label353
+ 1072 jump *label355 notEqual *tmp53 5
+ 1073 label *label354
+ 1074 draw line :displayItem:x :y *tmp97 *tmp98
+ 1075 draw line :displayItem:x *tmp98 *tmp97 *tmp98
+ 1076 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
+ 1077 draw line :displayItem:x *tmp103 *tmp97 *tmp103
+ 1078 jump *label364 always
+ 1079 label *label355
+ 1080 jump *label357 notEqual *tmp53 6
+ 1081 label *label356
+ 1082 draw lineRect *tmp108 *tmp110 9 8
+ 1083 draw line :displayItem:x *tmp111 *tmp112 *tmp113
+ 1084 jump *label364 always
+ 1085 label *label357
+ 1086 jump *label359 notEqual *tmp53 7
+ 1087 label *label358
+ 1088 draw line :displayItem:x :y *tmp114 *tmp115
+ 1089 draw line :displayItem:x *tmp115 *tmp114 *tmp115
+ 1090 jump *label364 always
+ 1091 label *label359
+ 1092 jump *label361 notEqual *tmp53 8
+ 1093 label *label360
+ 1094 draw lineRect *tmp120 *tmp122 9 14
+ 1095 draw line :displayItem:x *tmp123 *tmp124 *tmp123
+ 1096 jump *label364 always
+ 1097 label *label361
+ 1098 jump *label363 notEqual *tmp53 9
+ 1099 label *label362
+ 1100 draw lineRect *tmp127 *tmp130 9 8
+ 1101 draw line :displayItem:x :y *tmp131 *tmp128
+ 1102 label *label363
+ 1103 label *label364
+ 1104 label *label365
+ 1105 jump *label389 always
+ 1106 label *label366
+ 1107 op mod *tmp133 :displayItem:amount 10
+ 1108 # "Function: inline def drawDigit(in x, in y, in digit)"
+ 1109 jump *label368 notEqual *tmp133 0
+ 1110 label *label367
+ 1111 op sub *tmp138 :displayItem:x 1
+ 1112 op sub *tmp140 :y 1
+ 1113 draw lineRect *tmp138 *tmp140 9 14
+ 1114 jump *label387 always
+ 1115 label *label368
+ 1116 jump *label370 notEqual *tmp133 1
+ 1117 label *label369
+ 1118 op add *tmp142 :displayItem:x 6
+ 1119 op add *tmp145 :y 12
+ 1120 draw line *tmp142 :y *tmp142 *tmp145
+ 1121 jump *label387 always
+ 1122 label *label370
+ 1123 jump *label372 notEqual *tmp133 2
+ 1124 label *label371
+ 1125 op add *tmp146 :displayItem:x 7
+ 1126 draw line :displayItem:x :y *tmp146 :y
+ 1127 op add *tmp147 :y 6
+ 1128 draw line :displayItem:x :y :displayItem:x *tmp147
+ 1129 draw line :displayItem:x *tmp147 *tmp146 *tmp147
+ 1130 op add *tmp154 :y 12
+ 1131 draw line *tmp146 *tmp147 *tmp146 *tmp154
+ 1132 draw line :displayItem:x *tmp154 *tmp146 *tmp154
+ 1133 jump *label387 always
+ 1134 label *label372
+ 1135 jump *label374 notEqual *tmp133 3
+ 1136 label *label373
+ 1137 op add *tmp158 :displayItem:x 7
+ 1138 op add *tmp160 :y 12
+ 1139 draw line *tmp158 :y *tmp158 *tmp160
+ 1140 draw line :displayItem:x :y *tmp158 :y
+ 1141 op add *tmp162 :y 6
+ 1142 draw line :displayItem:x *tmp162 *tmp158 *tmp162
+ 1143 draw line :displayItem:x *tmp160 *tmp158 *tmp160
+ 1144 jump *label387 always
+ 1145 label *label374
+ 1146 jump *label376 notEqual *tmp133 4
+ 1147 label *label375
+ 1148 op add *tmp168 :displayItem:x 7
+ 1149 op add *tmp170 :y 12
+ 1150 draw line *tmp168 :y *tmp168 *tmp170
+ 1151 op add *tmp171 :y 6
+ 1152 draw line :displayItem:x *tmp171 *tmp168 *tmp171
+ 1153 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+ 1154 jump *label387 always
+ 1155 label *label376
+ 1156 jump *label378 notEqual *tmp133 5
+ 1157 label *label377
+ 1158 op add *tmp176 :displayItem:x 7
+ 1159 draw line :displayItem:x :y *tmp176 :y
+ 1160 op add *tmp179 :y 6
+ 1161 draw line *tmp176 :y *tmp176 *tmp179
+ 1162 draw line :displayItem:x *tmp179 *tmp176 *tmp179
+ 1163 op add *tmp184 :y 12
+ 1164 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
+ 1165 draw line :displayItem:x *tmp184 *tmp176 *tmp184
+ 1166 jump *label387 always
+ 1167 label *label378
+ 1168 jump *label380 notEqual *tmp133 6
+ 1169 label *label379
+ 1170 op add *tmp188 :y 12
+ 1171 draw line :displayItem:x :y :displayItem:x *tmp188
+ 1172 op add *tmp189 :displayItem:x 7
+ 1173 draw line :displayItem:x :y *tmp189 :y
+ 1174 op add *tmp192 :y 6
+ 1175 draw line *tmp189 :y *tmp189 *tmp192
+ 1176 draw line :displayItem:x *tmp192 *tmp189 *tmp192
+ 1177 draw line :displayItem:x *tmp188 *tmp189 *tmp188
+ 1178 jump *label387 always
+ 1179 label *label380
+ 1180 jump *label382 notEqual *tmp133 7
+ 1181 label *label381
+ 1182 op add *tmp200 :displayItem:x 6
+ 1183 op add *tmp203 :y 12
+ 1184 draw line *tmp200 :y *tmp200 *tmp203
+ 1185 draw line :displayItem:x *tmp203 *tmp200 *tmp203
+ 1186 jump *label387 always
+ 1187 label *label382
+ 1188 jump *label384 notEqual *tmp133 8
+ 1189 label *label383
+ 1190 op sub *tmp209 :displayItem:x 1
+ 1191 op sub *tmp211 :y 1
+ 1192 draw lineRect *tmp209 *tmp211 9 14
+ 1193 op add *tmp212 :y 6
+ 1194 op add *tmp213 :displayItem:x 7
+ 1195 draw line :displayItem:x *tmp212 *tmp213 *tmp212
+ 1196 jump *label387 always
+ 1197 label *label384
+ 1198 jump *label386 notEqual *tmp133 9
+ 1199 label *label385
+ 1200 op add *tmp215 :displayItem:x 7
+ 1201 draw line :displayItem:x :y *tmp215 :y
+ 1202 op add *tmp218 :y 12
+ 1203 draw line *tmp215 :y *tmp215 *tmp218
+ 1204 op add *tmp219 :y 6
+ 1205 draw line :displayItem:x *tmp219 *tmp215 *tmp219
+ 1206 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
+ 1207 draw line :displayItem:x *tmp218 *tmp215 *tmp218
+ 1208 label *label386
+ 1209 label *label387
+ 1210 label *label388
+ 1211 label *label389
+ 1212 op sub :displayItem:x :displayItem:x 11
+ 1213 op idiv :displayItem:amount :displayItem:amount 10
+ 1214 jump *label390 notEqual :displayItem:amount 0
+ 1215 jump *label86 always
+ 1216 label *label390
+ 1217 label *label391
+ 1218 label *label392
+ 1219 op add :displayItem:i :displayItem:i 1
+ 1220 label *label86
  1221 label *label73
  1222 op add :index :index 1
  1223 op sub :y :y 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * jump *label5 lessThanEq :n 0
+   10 jump *label5 lessThanEq .LINKS 0
    11 label *label140
    12 op sub :n :n 1
    13 getlink :block :n
 
   312 label *label147
   313 jump *label149 notEqual *tmp53 2
   314 label *label148
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
+  315 draw line :x :y *tmp66 :y
+  316 draw line :x :y *tmp66 *tmp68
   317 draw line *tmp66 *tmp68 *tmp66 *tmp72
   318 draw line *tmp73 *tmp72 *tmp66 *tmp72
   319 jump *label164 always
   320 label *label149
   321 jump *label151 notEqual *tmp53 3
   322 label *label150
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
+  323 draw line :x :y *tmp77 *tmp78
+  324 draw line :x *tmp78 *tmp77 *tmp78
+  325 draw line :x *tmp78 *tmp77 *tmp84
+  326 draw line :x *tmp84 *tmp77 *tmp84
   327 jump *label164 always
   328 label *label151
   329 jump *label153 notEqual *tmp53 4
   330 label *label152
   331 draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
+  332 draw line :x *tmp90 *tmp88 *tmp90
+  333 draw line :x *tmp90 *tmp88 *tmp96
   334 jump *label164 always
   335 label *label153
   336 jump *label155 notEqual *tmp53 5
   337 label *label154
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
+  338 draw line :x :y *tmp97 *tmp98
+  339 draw line :x *tmp98 *tmp97 *tmp98
+  340 draw line :x *tmp98 :x *tmp103
+  341 draw line :x *tmp103 *tmp97 *tmp103
   342 jump *label164 always
   343 label *label155
   344 jump *label157 notEqual *tmp53 6
   345 label *label156
   346 draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
+  347 draw line :x *tmp111 *tmp112 *tmp113
   348 jump *label164 always
   349 label *label157
   350 jump *label159 notEqual *tmp53 7
   351 label *label158
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
+  352 draw line :x :y *tmp114 *tmp115
+  353 draw line :x *tmp115 *tmp114 *tmp115
   354 jump *label164 always
   355 label *label159
   356 jump *label161 notEqual *tmp53 8
   357 label *label160
   358 draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
+  359 draw line :x *tmp123 *tmp124 *tmp123
   360 jump *label164 always
   361 label *label161
   362 jump *label163 notEqual *tmp53 9
   363 label *label162
   364 draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
+  365 draw line :x :y *tmp131 *tmp128
   366 label *label163
   367 label *label164
   368 label *label165
 
   372 # "Function: inline def drawDigit(in x, in y, in digit)"
   373 jump *label168 notEqual *tmp133 0
   374 label *label167
-    * op sub *tmp138 :displayItem:x 1
+  375 op sub *tmp138 :x 1
   376 op sub *tmp140 :y 1
   377 draw lineRect *tmp138 *tmp140 9 14
   378 jump *label187 always
   379 label *label168
   380 jump *label170 notEqual *tmp133 1
   381 label *label169
-    * op add *tmp142 :displayItem:x 6
+  382 op add *tmp142 :x 6
   383 op add *tmp145 :y 12
   384 draw line *tmp142 :y *tmp142 *tmp145
   385 jump *label187 always
   386 label *label170
   387 jump *label172 notEqual *tmp133 2
   388 label *label171
-    * op add *tmp146 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp146 :y
+  389 op add *tmp146 :x 7
+  390 draw line :x :y *tmp146 :y
   391 op add *tmp147 :y 6
-    * draw line :displayItem:x :y :displayItem:x *tmp147
-    * draw line :displayItem:x *tmp147 *tmp146 *tmp147
+  392 draw line :x :y :x *tmp147
+  393 draw line :x *tmp147 *tmp146 *tmp147
   394 op add *tmp154 :y 12
   395 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem:x *tmp154 *tmp146 *tmp154
+  396 draw line :x *tmp154 *tmp146 *tmp154
   397 jump *label187 always
   398 label *label172
   399 jump *label174 notEqual *tmp133 3
   400 label *label173
-    * op add *tmp158 :displayItem:x 7
+  401 op add *tmp158 :x 7
   402 op add *tmp160 :y 12
   403 draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem:x :y *tmp158 :y
+  404 draw line :x :y *tmp158 :y
   405 op add *tmp162 :y 6
-    * draw line :displayItem:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem:x *tmp160 *tmp158 *tmp160
+  406 draw line :x *tmp162 *tmp158 *tmp162
+  407 draw line :x *tmp160 *tmp158 *tmp160
   408 jump *label187 always
   409 label *label174
   410 jump *label176 notEqual *tmp133 4
   411 label *label175
-    * op add *tmp168 :displayItem:x 7
+  412 op add *tmp168 :x 7
   413 op add *tmp170 :y 12
   414 draw line *tmp168 :y *tmp168 *tmp170
   415 op add *tmp171 :y 6
-    * draw line :displayItem:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem:x *tmp171 :displayItem:x *tmp170
+  416 draw line :x *tmp171 *tmp168 *tmp171
+  417 draw line :x *tmp171 :x *tmp170
   418 jump *label187 always
   419 label *label176
   420 jump *label178 notEqual *tmp133 5
   421 label *label177
-    * op add *tmp176 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp176 :y
+  422 op add *tmp176 :x 7
+  423 draw line :x :y *tmp176 :y
   424 op add *tmp179 :y 6
   425 draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem:x *tmp179 *tmp176 *tmp179
+  426 draw line :x *tmp179 *tmp176 *tmp179
   427 op add *tmp184 :y 12
-    * draw line :displayItem:x *tmp179 :displayItem:x *tmp184
-    * draw line :displayItem:x *tmp184 *tmp176 *tmp184
+  428 draw line :x *tmp179 :x *tmp184
+  429 draw line :x *tmp184 *tmp176 *tmp184
   430 jump *label187 always
   431 label *label178
   432 jump *label180 notEqual *tmp133 6
   433 label *label179
   434 op add *tmp188 :y 12
-    * draw line :displayItem:x :y :displayItem:x *tmp188
-    * op add *tmp189 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp189 :y
+  435 draw line :x :y :x *tmp188
+  436 op add *tmp189 :x 7
+  437 draw line :x :y *tmp189 :y
   438 op add *tmp192 :y 6
   439 draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem:x *tmp188 *tmp189 *tmp188
+  440 draw line :x *tmp192 *tmp189 *tmp192
+  441 draw line :x *tmp188 *tmp189 *tmp188
   442 jump *label187 always
   443 label *label180
   444 jump *label182 notEqual *tmp133 7
   445 label *label181
-    * op add *tmp200 :displayItem:x 6
+  446 op add *tmp200 :x 6
   447 op add *tmp203 :y 12
   448 draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem:x *tmp203 *tmp200 *tmp203
+  449 draw line :x *tmp203 *tmp200 *tmp203
   450 jump *label187 always
   451 label *label182
   452 jump *label184 notEqual *tmp133 8
   453 label *label183
-    * op sub *tmp209 :displayItem:x 1
+  454 op sub *tmp209 :x 1
   455 op sub *tmp211 :y 1
   456 draw lineRect *tmp209 *tmp211 9 14
   457 op add *tmp212 :y 6
-    * op add *tmp213 :displayItem:x 7
-    * draw line :displayItem:x *tmp212 *tmp213 *tmp212
+  458 op add *tmp213 :x 7
+  459 draw line :x *tmp212 *tmp213 *tmp212
   460 jump *label187 always
   461 label *label184
   462 jump *label186 notEqual *tmp133 9
   463 label *label185
-    * op add *tmp215 :displayItem:x 7
-    * draw line :displayItem:x :y *tmp215 :y
+  464 op add *tmp215 :x 7
+  465 draw line :x :y *tmp215 :y
   466 op add *tmp218 :y 12
   467 draw line *tmp215 :y *tmp215 *tmp218
   468 op add *tmp219 :y 6
-    * draw line :displayItem:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem:x *tmp219 :displayItem:x *tmp218
-    * draw line :displayItem:x *tmp218 *tmp215 *tmp218
+  469 draw line :x *tmp219 *tmp215 *tmp219
+  470 draw line :x *tmp219 :x *tmp218
+  471 draw line :x *tmp218 *tmp215 *tmp218
   472 label *label186
   473 label *label187
   474 label *label188
   475 label *label189
-    * op sub :displayItem:x :displayItem:x 11
+  476 op sub :displayItem:x :x 11
   477 op idiv :displayItem:amount :displayItem:amount 10
   478 jump *label190 notEqual :displayItem:amount 0
   479 jump *label86 always
   480 label *label190
   481 label *label191
   482 label *label192
-    * op add :displayItem:i :displayItem:i 1
+  483 op add :displayItem:i 0 1
   484 label *label193
   485 jump *label216 always
   486 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   664 label *label240
   665 label *label241
   666 label *label242
-    * op add :displayItem:i :displayItem:i 1
+  667 op add :displayItem:i 1 1
   668 label *label243
   669 jump *label266 always
   670 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   848 label *label290
   849 label *label291
   850 label *label292
-    * op add :displayItem:i :displayItem:i 1
+  851 op add :displayItem:i 2 1
   852 label *label293
   853 jump *label316 always
   854 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1032 label *label340
  1033 label *label341
  1034 label *label342
-    * op add :displayItem:i :displayItem:i 1
+ 1035 op add :displayItem:i 3 1
  1036 label *label343
  1037 jump *label366 always
  1038 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1209 label *label387
  1210 label *label388
  1211 label *label389
-    * op sub :displayItem:x :displayItem:x 11
  1212 op idiv :displayItem:amount :displayItem:amount 10
  1213 jump *label390 notEqual :displayItem:amount 0
  1214 jump *label86 always
  1215 label *label390
  1216 label *label391
  1217 label *label392
-    * op add :displayItem:i :displayItem:i 1
+ 1218 op add :displayItem:i 4 1
  1219 label *label86
  1220 label *label73
  1221 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   264 jump *label72 always
   265 label *label52
   266 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem:x :x
   267 sensor :displayItem:amount .CONTAINER :item
   268 op strictEqual *tmp38 .MEMORY null
   269 jump *label74 equal *tmp38 false
 
   294 label *label83
   295 label *label81
   296 label *label75
-    * set :displayItem:i 0
   297 label *label142
   298 label *label143
   299 jump *label166 always
 
   478 label *label190
   479 label *label191
   480 label *label192
-    * op add :displayItem:i 0 1
   481 label *label193
   482 jump *label216 always
   483 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   654 label *label237
   655 label *label238
   656 label *label239
-    * op sub :displayItem:x :displayItem:x 11
+  657 op sub :displayItem:x :x 22
   658 op idiv :displayItem:amount :displayItem:amount 10
   659 jump *label240 notEqual :displayItem:amount 0
   660 jump *label86 always
   661 label *label240
   662 label *label241
   663 label *label242
-    * op add :displayItem:i 1 1
   664 label *label243
   665 jump *label266 always
   666 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   844 label *label290
   845 label *label291
   846 label *label292
-    * op add :displayItem:i 2 1
   847 label *label293
   848 jump *label316 always
   849 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1027 label *label340
  1028 label *label341
  1029 label *label342
-    * op add :displayItem:i 3 1
  1030 label *label343
  1031 jump *label366 always
  1032 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1209 label *label390
  1210 label *label391
  1211 label *label392
-    * op add :displayItem:i 4 1
  1212 label *label86
  1213 label *label73
  1214 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
   837 label *label287
   838 label *label288
   839 label *label289
-    * op sub :displayItem:x :displayItem:x 11
+  840 op sub :displayItem:x :x 33
   841 op idiv :displayItem:amount :displayItem:amount 10
   842 jump *label290 notEqual :displayItem:amount 0
   843 jump *label86 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
  1020 label *label337
  1021 label *label338
  1022 label *label339
-    * op sub :displayItem:x :displayItem:x 11
+ 1023 op sub :displayItem:x :x 44
  1024 op idiv :displayItem:amount :displayItem:amount 10
  1025 jump *label340 notEqual :displayItem:amount 0
  1026 jump *label86 always

Modifications by Unroll iteration loop at line 71:5 (+117 instructions):
 
   102 label *label23
   103 draw color 255 255 255 255
   104 set :index 0
-    * set :item @sand
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label29 (m:marker0)
-    * set :item @copper
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label30 (m:marker0)
-    * set :item @lead
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label31 (m:marker0)
-    * set :item @coal
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label32 (m:marker0)
-    * set :item @titanium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label33 (m:marker0)
-    * set :item @thorium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label34 (m:marker0)
-    * set :item @scrap
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label35 (m:marker0)
-    * set :item @graphite
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label36 (m:marker0)
-    * set :item @metaglass
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label37 (m:marker0)
-    * set :item @silicon
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label38 (m:marker0)
-    * set :item @pyratite
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label39 (m:marker0)
-    * set :item @blast-compound
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label40 (m:marker0)
-    * set :item @plastanium
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label41 (m:marker0)
-    * set :item @phase-fabric
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label42 (m:marker0)
-    * set :item @surge-alloy
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label43 (m:marker0)
-    * set :item @spore-pod
-    * op add *tmp26 @counter 1
-    * jump *label26 always
-    * multilabel *label45 (m:marker0)
-    * jump *label46 always
-    * label *label26
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label47 notEqual :index 8
-    * set :y 152
-    * set :x 93
-    * draw color 255 255 255 255
-    * label *label47
-    * label *label48
-    * label *label27
-    * multijump *tmp26 0 0 (m:marker0)
-    * multilabel *label44 (m:marker0)
-    * label *label46
-    * label *label28
+  105 set :item @sand
+  106 op add *tmp26 @counter 1
+  107 label *label393
+  108 op add *tmp27 :x 8
+  109 op add *tmp30 :y 7
+  110 draw image *tmp27 *tmp30 :item 16 0
+  111 op add :index :index 1
+  112 op sub :y :y 20
+  113 jump *label394 notEqual :index 8
+  114 set :y 152
+  115 set :x 93
+  116 draw color 255 255 255 255
+  117 label *label394
+  118 label *label395
+  119 label *label396
+  120 set :item @copper
+  121 op add *tmp26 @counter 1
+  122 label *label399
+  123 op add *tmp27 :x 8
+  124 op add *tmp30 :y 7
+  125 draw image *tmp27 *tmp30 :item 16 0
+  126 op add :index :index 1
+  127 op sub :y :y 20
+  128 jump *label400 notEqual :index 8
+  129 set :y 152
+  130 set :x 93
+  131 draw color 255 255 255 255
+  132 label *label400
+  133 label *label401
+  134 label *label402
+  135 set :item @lead
+  136 op add *tmp26 @counter 1
+  137 label *label405
+  138 op add *tmp27 :x 8
+  139 op add *tmp30 :y 7
+  140 draw image *tmp27 *tmp30 :item 16 0
+  141 op add :index :index 1
+  142 op sub :y :y 20
+  143 jump *label406 notEqual :index 8
+  144 set :y 152
+  145 set :x 93
+  146 draw color 255 255 255 255
+  147 label *label406
+  148 label *label407
+  149 label *label408
+  150 set :item @coal
+  151 op add *tmp26 @counter 1
+  152 label *label411
+  153 op add *tmp27 :x 8
+  154 op add *tmp30 :y 7
+  155 draw image *tmp27 *tmp30 :item 16 0
+  156 op add :index :index 1
+  157 op sub :y :y 20
+  158 jump *label412 notEqual :index 8
+  159 set :y 152
+  160 set :x 93
+  161 draw color 255 255 255 255
+  162 label *label412
+  163 label *label413
+  164 label *label414
+  165 set :item @titanium
+  166 op add *tmp26 @counter 1
+  167 label *label417
+  168 op add *tmp27 :x 8
+  169 op add *tmp30 :y 7
+  170 draw image *tmp27 *tmp30 :item 16 0
+  171 op add :index :index 1
+  172 op sub :y :y 20
+  173 jump *label418 notEqual :index 8
+  174 set :y 152
+  175 set :x 93
+  176 draw color 255 255 255 255
+  177 label *label418
+  178 label *label419
+  179 label *label420
+  180 set :item @thorium
+  181 op add *tmp26 @counter 1
+  182 label *label423
+  183 op add *tmp27 :x 8
+  184 op add *tmp30 :y 7
+  185 draw image *tmp27 *tmp30 :item 16 0
+  186 op add :index :index 1
+  187 op sub :y :y 20
+  188 jump *label424 notEqual :index 8
+  189 set :y 152
+  190 set :x 93
+  191 draw color 255 255 255 255
+  192 label *label424
+  193 label *label425
+  194 label *label426
+  195 set :item @scrap
+  196 op add *tmp26 @counter 1
+  197 label *label429
+  198 op add *tmp27 :x 8
+  199 op add *tmp30 :y 7
+  200 draw image *tmp27 *tmp30 :item 16 0
+  201 op add :index :index 1
+  202 op sub :y :y 20
+  203 jump *label430 notEqual :index 8
+  204 set :y 152
+  205 set :x 93
+  206 draw color 255 255 255 255
+  207 label *label430
+  208 label *label431
+  209 label *label432
+  210 set :item @graphite
+  211 op add *tmp26 @counter 1
+  212 label *label435
+  213 op add *tmp27 :x 8
+  214 op add *tmp30 :y 7
+  215 draw image *tmp27 *tmp30 :item 16 0
+  216 op add :index :index 1
+  217 op sub :y :y 20
+  218 jump *label436 notEqual :index 8
+  219 set :y 152
+  220 set :x 93
+  221 draw color 255 255 255 255
+  222 label *label436
+  223 label *label437
+  224 label *label438
+  225 set :item @metaglass
+  226 op add *tmp26 @counter 1
+  227 label *label441
+  228 op add *tmp27 :x 8
+  229 op add *tmp30 :y 7
+  230 draw image *tmp27 *tmp30 :item 16 0
+  231 op add :index :index 1
+  232 op sub :y :y 20
+  233 jump *label442 notEqual :index 8
+  234 set :y 152
+  235 set :x 93
+  236 draw color 255 255 255 255
+  237 label *label442
+  238 label *label443
+  239 label *label444
+  240 set :item @silicon
+  241 op add *tmp26 @counter 1
+  242 label *label447
+  243 op add *tmp27 :x 8
+  244 op add *tmp30 :y 7
+  245 draw image *tmp27 *tmp30 :item 16 0
+  246 op add :index :index 1
+  247 op sub :y :y 20
+  248 jump *label448 notEqual :index 8
+  249 set :y 152
+  250 set :x 93
+  251 draw color 255 255 255 255
+  252 label *label448
+  253 label *label449
+  254 label *label450
+  255 set :item @pyratite
+  256 op add *tmp26 @counter 1
+  257 label *label453
+  258 op add *tmp27 :x 8
+  259 op add *tmp30 :y 7
+  260 draw image *tmp27 *tmp30 :item 16 0
+  261 op add :index :index 1
+  262 op sub :y :y 20
+  263 jump *label454 notEqual :index 8
+  264 set :y 152
+  265 set :x 93
+  266 draw color 255 255 255 255
+  267 label *label454
+  268 label *label455
+  269 label *label456
+  270 set :item @blast-compound
+  271 op add *tmp26 @counter 1
+  272 label *label459
+  273 op add *tmp27 :x 8
+  274 op add *tmp30 :y 7
+  275 draw image *tmp27 *tmp30 :item 16 0
+  276 op add :index :index 1
+  277 op sub :y :y 20
+  278 jump *label460 notEqual :index 8
+  279 set :y 152
+  280 set :x 93
+  281 draw color 255 255 255 255
+  282 label *label460
+  283 label *label461
+  284 label *label462
+  285 set :item @plastanium
+  286 op add *tmp26 @counter 1
+  287 label *label465
+  288 op add *tmp27 :x 8
+  289 op add *tmp30 :y 7
+  290 draw image *tmp27 *tmp30 :item 16 0
+  291 op add :index :index 1
+  292 op sub :y :y 20
+  293 jump *label466 notEqual :index 8
+  294 set :y 152
+  295 set :x 93
+  296 draw color 255 255 255 255
+  297 label *label466
+  298 label *label467
+  299 label *label468
+  300 set :item @phase-fabric
+  301 op add *tmp26 @counter 1
+  302 label *label471
+  303 op add *tmp27 :x 8
+  304 op add *tmp30 :y 7
+  305 draw image *tmp27 *tmp30 :item 16 0
+  306 op add :index :index 1
+  307 op sub :y :y 20
+  308 jump *label472 notEqual :index 8
+  309 set :y 152
+  310 set :x 93
+  311 draw color 255 255 255 255
+  312 label *label472
+  313 label *label473
+  314 label *label474
+  315 set :item @surge-alloy
+  316 op add *tmp26 @counter 1
+  317 label *label477
+  318 op add *tmp27 :x 8
+  319 op add *tmp30 :y 7
+  320 draw image *tmp27 *tmp30 :item 16 0
+  321 op add :index :index 1
+  322 op sub :y :y 20
+  323 jump *label478 notEqual :index 8
+  324 set :y 152
+  325 set :x 93
+  326 draw color 255 255 255 255
+  327 label *label478
+  328 label *label479
+  329 label *label480
+  330 set :item @spore-pod
+  331 op add *tmp26 @counter 1
+  332 label *label483
+  333 op add *tmp27 :x 8
+  334 op add *tmp30 :y 7
+  335 draw image *tmp27 *tmp30 :item 16 0
+  336 op add :index :index 1
+  337 op sub :y :y 20
+  338 jump *label484 notEqual :index 8
+  339 set :y 152
+  340 set :x 93
+  341 draw color 255 255 255 255
+  342 label *label484
+  343 label *label485
+  344 label *label486
+  345 label *label46
+  346 label *label28
   347 drawflush display1
   348 set :x 71
   349 set :y 152

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-18 instructions):
 
   103 draw color 255 255 255 255
   104 set :index 0
   105 set :item @sand
-    * op add *tmp26 @counter 1
   106 label *label393
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label394 notEqual :index 8
+  107 op add *tmp27 7 8
+  108 op add *tmp30 152 7
+  109 draw image 15 159 @sand 16 0
+  110 op add :index 0 1
+  111 op sub :y 152 20
+  112 jump *label394 notEqual 1 8
   113 set :y 152
   114 set :x 93
   115 draw color 255 255 255 255
 
   117 label *label395
   118 label *label396
   119 set :item @copper
-    * op add *tmp26 @counter 1
   120 label *label399
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label400 notEqual :index 8
+  121 op add *tmp27 7 8
+  122 op add *tmp30 132 7
+  123 draw image 15 139 @copper 16 0
+  124 op add :index 1 1
+  125 op sub :y 132 20
+  126 jump *label400 notEqual 2 8
   127 set :y 152
   128 set :x 93
   129 draw color 255 255 255 255
 
   131 label *label401
   132 label *label402
   133 set :item @lead
-    * op add *tmp26 @counter 1
   134 label *label405
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label406 notEqual :index 8
+  135 op add *tmp27 7 8
+  136 op add *tmp30 112 7
+  137 draw image 15 119 @lead 16 0
+  138 op add :index 2 1
+  139 op sub :y 112 20
+  140 jump *label406 notEqual 3 8
   141 set :y 152
   142 set :x 93
   143 draw color 255 255 255 255
 
   145 label *label407
   146 label *label408
   147 set :item @coal
-    * op add *tmp26 @counter 1
   148 label *label411
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label412 notEqual :index 8
+  149 op add *tmp27 7 8
+  150 op add *tmp30 92 7
+  151 draw image 15 99 @coal 16 0
+  152 op add :index 3 1
+  153 op sub :y 92 20
+  154 jump *label412 notEqual 4 8
   155 set :y 152
   156 set :x 93
   157 draw color 255 255 255 255
 
   159 label *label413
   160 label *label414
   161 set :item @titanium
-    * op add *tmp26 @counter 1
   162 label *label417
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label418 notEqual :index 8
+  163 op add *tmp27 7 8
+  164 op add *tmp30 72 7
+  165 draw image 15 79 @titanium 16 0
+  166 op add :index 4 1
+  167 op sub :y 72 20
+  168 jump *label418 notEqual 5 8
   169 set :y 152
   170 set :x 93
   171 draw color 255 255 255 255
 
   173 label *label419
   174 label *label420
   175 set :item @thorium
-    * op add *tmp26 @counter 1
   176 label *label423
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label424 notEqual :index 8
+  177 op add *tmp27 7 8
+  178 op add *tmp30 52 7
+  179 draw image 15 59 @thorium 16 0
+  180 op add :index 5 1
+  181 op sub :y 52 20
+  182 jump *label424 notEqual 6 8
   183 set :y 152
   184 set :x 93
   185 draw color 255 255 255 255
 
   187 label *label425
   188 label *label426
   189 set :item @scrap
-    * op add *tmp26 @counter 1
   190 label *label429
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label430 notEqual :index 8
+  191 op add *tmp27 7 8
+  192 op add *tmp30 32 7
+  193 draw image 15 39 @scrap 16 0
+  194 op add :index 6 1
+  195 op sub :y 32 20
+  196 jump *label430 notEqual 7 8
   197 set :y 152
   198 set :x 93
   199 draw color 255 255 255 255
 
   201 label *label431
   202 label *label432
   203 set :item @graphite
-    * op add *tmp26 @counter 1
   204 label *label435
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label436 notEqual :index 8
+  205 op add *tmp27 7 8
+  206 op add *tmp30 12 7
+  207 draw image 15 19 @graphite 16 0
+  208 op add :index 7 1
+  209 op sub :y 12 20
+  210 jump *label436 notEqual 8 8
   211 set :y 152
   212 set :x 93
   213 draw color 255 255 255 255
 
   215 label *label437
   216 label *label438
   217 set :item @metaglass
-    * op add *tmp26 @counter 1
   218 label *label441
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label442 notEqual :index 8
+  219 op add *tmp27 93 8
+  220 op add *tmp30 152 7
+  221 draw image 101 159 @metaglass 16 0
+  222 op add :index 8 1
+  223 op sub :y 152 20
+  224 jump *label442 notEqual 9 8
   225 set :y 152
   226 set :x 93
   227 draw color 255 255 255 255
 
   229 label *label443
   230 label *label444
   231 set :item @silicon
-    * op add *tmp26 @counter 1
   232 label *label447
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label448 notEqual :index 8
+  233 op add *tmp27 93 8
+  234 op add *tmp30 132 7
+  235 draw image 101 139 @silicon 16 0
+  236 op add :index 9 1
+  237 op sub :y 132 20
+  238 jump *label448 notEqual 10 8
   239 set :y 152
   240 set :x 93
   241 draw color 255 255 255 255
 
   243 label *label449
   244 label *label450
   245 set :item @pyratite
-    * op add *tmp26 @counter 1
   246 label *label453
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label454 notEqual :index 8
+  247 op add *tmp27 93 8
+  248 op add *tmp30 112 7
+  249 draw image 101 119 @pyratite 16 0
+  250 op add :index 10 1
+  251 op sub :y 112 20
+  252 jump *label454 notEqual 11 8
   253 set :y 152
   254 set :x 93
   255 draw color 255 255 255 255
 
   257 label *label455
   258 label *label456
   259 set :item @blast-compound
-    * op add *tmp26 @counter 1
   260 label *label459
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label460 notEqual :index 8
+  261 op add *tmp27 93 8
+  262 op add *tmp30 92 7
+  263 draw image 101 99 @blast-compound 16 0
+  264 op add :index 11 1
+  265 op sub :y 92 20
+  266 jump *label460 notEqual 12 8
   267 set :y 152
   268 set :x 93
   269 draw color 255 255 255 255
 
   271 label *label461
   272 label *label462
   273 set :item @plastanium
-    * op add *tmp26 @counter 1
   274 label *label465
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label466 notEqual :index 8
+  275 op add *tmp27 93 8
+  276 op add *tmp30 72 7
+  277 draw image 101 79 @plastanium 16 0
+  278 op add :index 12 1
+  279 op sub :y 72 20
+  280 jump *label466 notEqual 13 8
   281 set :y 152
   282 set :x 93
   283 draw color 255 255 255 255
 
   285 label *label467
   286 label *label468
   287 set :item @phase-fabric
-    * op add *tmp26 @counter 1
   288 label *label471
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label472 notEqual :index 8
+  289 op add *tmp27 93 8
+  290 op add *tmp30 52 7
+  291 draw image 101 59 @phase-fabric 16 0
+  292 op add :index 13 1
+  293 op sub :y 52 20
+  294 jump *label472 notEqual 14 8
   295 set :y 152
   296 set :x 93
   297 draw color 255 255 255 255
 
   299 label *label473
   300 label *label474
   301 set :item @surge-alloy
-    * op add *tmp26 @counter 1
   302 label *label477
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label478 notEqual :index 8
+  303 op add *tmp27 93 8
+  304 op add *tmp30 32 7
+  305 draw image 101 39 @surge-alloy 16 0
+  306 op add :index 14 1
+  307 op sub :y 32 20
+  308 jump *label478 notEqual 15 8
   309 set :y 152
   310 set :x 93
   311 draw color 255 255 255 255
 
   313 label *label479
   314 label *label480
   315 set :item @spore-pod
-    * op add *tmp26 @counter 1
   316 label *label483
-    * op add *tmp27 :x 8
-    * op add *tmp30 :y 7
-    * draw image *tmp27 *tmp30 :item 16 0
-    * op add :index :index 1
-    * op sub :y :y 20
-    * jump *label484 notEqual :index 8
-    * set :y 152
-    * set :x 93
+  317 op add *tmp27 93 8
+  318 op add *tmp30 12 7
+  319 draw image 101 19 @spore-pod 16 0
+  320 op add :index 15 1
+  321 op sub :y 12 20
+  322 jump *label484 notEqual 16 8
   323 draw color 255 255 255 255
   324 label *label484
   325 label *label485

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-113 instructions):
 
    80 sensor .CAPACITY .CONTAINER @itemCapacity
    81 op div .LIMIT .CAPACITY 5
    82 draw stroke 2
-    * set :x 7
-    * set :y 152
    83 # "Function: inline def eraseImages(in first_column)"
    84 draw color 0 0 80 255
    85 jump *label21 equal true false
 
    99 label *label25
   100 label *label23
   101 draw color 255 255 255 255
-    * set :index 0
-    * set :item @sand
   102 label *label393
-    * op add *tmp27 7 8
-    * op add *tmp30 152 7
   103 draw image 15 159 @sand 16 0
-    * op add :index 0 1
-    * op sub :y 152 20
   104 jump *label394 notEqual 1 8
-    * set :y 152
-    * set :x 93
   105 draw color 255 255 255 255
   106 label *label394
   107 label *label395
   108 label *label396
-    * set :item @copper
   109 label *label399
-    * op add *tmp27 7 8
-    * op add *tmp30 132 7
   110 draw image 15 139 @copper 16 0
-    * op add :index 1 1
-    * op sub :y 132 20
   111 jump *label400 notEqual 2 8
-    * set :y 152
-    * set :x 93
   112 draw color 255 255 255 255
   113 label *label400
   114 label *label401
   115 label *label402
-    * set :item @lead
   116 label *label405
-    * op add *tmp27 7 8
-    * op add *tmp30 112 7
   117 draw image 15 119 @lead 16 0
-    * op add :index 2 1
-    * op sub :y 112 20
   118 jump *label406 notEqual 3 8
-    * set :y 152
-    * set :x 93
   119 draw color 255 255 255 255
   120 label *label406
   121 label *label407
   122 label *label408
-    * set :item @coal
   123 label *label411
-    * op add *tmp27 7 8
-    * op add *tmp30 92 7
   124 draw image 15 99 @coal 16 0
-    * op add :index 3 1
-    * op sub :y 92 20
   125 jump *label412 notEqual 4 8
-    * set :y 152
-    * set :x 93
   126 draw color 255 255 255 255
   127 label *label412
   128 label *label413
   129 label *label414
-    * set :item @titanium
   130 label *label417
-    * op add *tmp27 7 8
-    * op add *tmp30 72 7
   131 draw image 15 79 @titanium 16 0
-    * op add :index 4 1
-    * op sub :y 72 20
   132 jump *label418 notEqual 5 8
-    * set :y 152
-    * set :x 93
   133 draw color 255 255 255 255
   134 label *label418
   135 label *label419
   136 label *label420
-    * set :item @thorium
   137 label *label423
-    * op add *tmp27 7 8
-    * op add *tmp30 52 7
   138 draw image 15 59 @thorium 16 0
-    * op add :index 5 1
-    * op sub :y 52 20
   139 jump *label424 notEqual 6 8
-    * set :y 152
-    * set :x 93
   140 draw color 255 255 255 255
   141 label *label424
   142 label *label425
   143 label *label426
-    * set :item @scrap
   144 label *label429
-    * op add *tmp27 7 8
-    * op add *tmp30 32 7
   145 draw image 15 39 @scrap 16 0
-    * op add :index 6 1
-    * op sub :y 32 20
   146 jump *label430 notEqual 7 8
-    * set :y 152
-    * set :x 93
   147 draw color 255 255 255 255
   148 label *label430
   149 label *label431
   150 label *label432
-    * set :item @graphite
   151 label *label435
-    * op add *tmp27 7 8
-    * op add *tmp30 12 7
   152 draw image 15 19 @graphite 16 0
-    * op add :index 7 1
-    * op sub :y 12 20
   153 jump *label436 notEqual 8 8
-    * set :y 152
-    * set :x 93
   154 draw color 255 255 255 255
   155 label *label436
   156 label *label437
   157 label *label438
-    * set :item @metaglass
   158 label *label441
-    * op add *tmp27 93 8
-    * op add *tmp30 152 7
   159 draw image 101 159 @metaglass 16 0
-    * op add :index 8 1
-    * op sub :y 152 20
   160 jump *label442 notEqual 9 8
-    * set :y 152
-    * set :x 93
   161 draw color 255 255 255 255
   162 label *label442
   163 label *label443
   164 label *label444
-    * set :item @silicon
   165 label *label447
-    * op add *tmp27 93 8
-    * op add *tmp30 132 7
   166 draw image 101 139 @silicon 16 0
-    * op add :index 9 1
-    * op sub :y 132 20
   167 jump *label448 notEqual 10 8
-    * set :y 152
-    * set :x 93
   168 draw color 255 255 255 255
   169 label *label448
   170 label *label449
   171 label *label450
-    * set :item @pyratite
   172 label *label453
-    * op add *tmp27 93 8
-    * op add *tmp30 112 7
   173 draw image 101 119 @pyratite 16 0
-    * op add :index 10 1
-    * op sub :y 112 20
   174 jump *label454 notEqual 11 8
-    * set :y 152
-    * set :x 93
   175 draw color 255 255 255 255
   176 label *label454
   177 label *label455
   178 label *label456
-    * set :item @blast-compound
   179 label *label459
-    * op add *tmp27 93 8
-    * op add *tmp30 92 7
   180 draw image 101 99 @blast-compound 16 0
-    * op add :index 11 1
-    * op sub :y 92 20
   181 jump *label460 notEqual 12 8
-    * set :y 152
-    * set :x 93
   182 draw color 255 255 255 255
   183 label *label460
   184 label *label461
   185 label *label462
-    * set :item @plastanium
   186 label *label465
-    * op add *tmp27 93 8
-    * op add *tmp30 72 7
   187 draw image 101 79 @plastanium 16 0
-    * op add :index 12 1
-    * op sub :y 72 20
   188 jump *label466 notEqual 13 8
-    * set :y 152
-    * set :x 93
   189 draw color 255 255 255 255
   190 label *label466
   191 label *label467
   192 label *label468
-    * set :item @phase-fabric
   193 label *label471
-    * op add *tmp27 93 8
-    * op add *tmp30 52 7
   194 draw image 101 59 @phase-fabric 16 0
-    * op add :index 13 1
-    * op sub :y 52 20
   195 jump *label472 notEqual 14 8
-    * set :y 152
-    * set :x 93
   196 draw color 255 255 255 255
   197 label *label472
   198 label *label473
   199 label *label474
-    * set :item @surge-alloy
   200 label *label477
-    * op add *tmp27 93 8
-    * op add *tmp30 32 7
   201 draw image 101 39 @surge-alloy 16 0
-    * op add :index 14 1
-    * op sub :y 32 20
   202 jump *label478 notEqual 15 8
-    * set :y 152
-    * set :x 93
   203 draw color 255 255 255 255
   204 label *label478
   205 label *label479
   206 label *label480
-    * set :item @spore-pod
   207 label *label483
-    * op add *tmp27 93 8
-    * op add *tmp30 12 7
   208 draw image 101 19 @spore-pod 16 0
-    * op add :index 15 1
-    * op sub :y 12 20
   209 jump *label484 notEqual 16 8
   210 draw color 255 255 255 255
   211 label *label484

Modifications by Replicate loop condition at line 58:1 (+7 instructions):
 
    76 op equal *tmp17 .LINKS @links
    77 op land *tmp18 *tmp16 *tmp17
    78 jump *label19 equal *tmp18 false
+   79 label *label491
    80 set :start @time
    81 sensor .CAPACITY .CONTAINER @itemCapacity
    82 op div .LIMIT .CAPACITY 5
 
  1274 print "ms"
  1275 printflush message1
  1276 label *label18
-    * jump *label17 always
+ 1277 sensor *tmp12 .CONTAINER @dead
+ 1278 op equal *tmp13 *tmp12 0
+ 1279 sensor *tmp14 .DISPLAY @dead
+ 1280 op equal *tmp15 *tmp14 0
+ 1281 op land *tmp16 *tmp13 *tmp15
+ 1282 op equal *tmp17 .LINKS @links
+ 1283 op land *tmp18 *tmp16 *tmp17
+ 1284 jump *label491 notEqual *tmp18 false
  1285 label *label19
  1286 end

Modifications by Convert case at line 213:5 (segments: 1) (+1 instructions):
 
   328 label *label143
   329 jump *label166 always
   330 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label145 notEqual *tmp53 0
+  331 multijump *label494 *tmp53 0 (m:*label493)
+  332 multilabel *label494 (m:*label493)
+  333 jump *label144 always
+  334 multilabel *label495 (m:*label493)
+  335 jump *label146 always
+  336 multilabel *label496 (m:*label493)
+  337 jump *label148 always
+  338 multilabel *label497 (m:*label493)
+  339 jump *label150 always
+  340 multilabel *label498 (m:*label493)
+  341 jump *label152 always
+  342 multilabel *label499 (m:*label493)
+  343 jump *label154 always
+  344 multilabel *label500 (m:*label493)
+  345 jump *label156 always
+  346 multilabel *label501 (m:*label493)
+  347 jump *label158 always
+  348 multilabel *label502 (m:*label493)
+  349 jump *label160 always
+  350 multilabel *label503 (m:*label493)
+  351 jump *label162 always
   352 label *label144
   353 draw lineRect *tmp58 *tmp60 9 14
   354 jump *label164 always
   355 label *label145
-    * jump *label147 notEqual *tmp53 1
   356 label *label146
   357 draw line *tmp62 :y *tmp62 *tmp65
   358 jump *label164 always
   359 label *label147
-    * jump *label149 notEqual *tmp53 2
   360 label *label148
   361 draw line :x :y *tmp66 :y
   362 draw line :x :y *tmp66 *tmp68
 
   364 draw line *tmp73 *tmp72 *tmp66 *tmp72
   365 jump *label164 always
   366 label *label149
-    * jump *label151 notEqual *tmp53 3
   367 label *label150
   368 draw line :x :y *tmp77 *tmp78
   369 draw line :x *tmp78 *tmp77 *tmp78
 
   371 draw line :x *tmp84 *tmp77 *tmp84
   372 jump *label164 always
   373 label *label151
-    * jump *label153 notEqual *tmp53 4
   374 label *label152
   375 draw line *tmp88 :y *tmp88 *tmp90
   376 draw line :x *tmp90 *tmp88 *tmp90
   377 draw line :x *tmp90 *tmp88 *tmp96
   378 jump *label164 always
   379 label *label153
-    * jump *label155 notEqual *tmp53 5
   380 label *label154
   381 draw line :x :y *tmp97 *tmp98
   382 draw line :x *tmp98 *tmp97 *tmp98
 
   384 draw line :x *tmp103 *tmp97 *tmp103
   385 jump *label164 always
   386 label *label155
-    * jump *label157 notEqual *tmp53 6
   387 label *label156
   388 draw lineRect *tmp108 *tmp110 9 8
   389 draw line :x *tmp111 *tmp112 *tmp113
   390 jump *label164 always
   391 label *label157
-    * jump *label159 notEqual *tmp53 7
   392 label *label158
   393 draw line :x :y *tmp114 *tmp115
   394 draw line :x *tmp115 *tmp114 *tmp115
   395 jump *label164 always
   396 label *label159
-    * jump *label161 notEqual *tmp53 8
   397 label *label160
   398 draw lineRect *tmp120 *tmp122 9 14
   399 draw line :x *tmp123 *tmp124 *tmp123
   400 jump *label164 always
   401 label *label161
-    * jump *label163 notEqual *tmp53 9
   402 label *label162
   403 draw lineRect *tmp127 *tmp130 9 8
   404 draw line :x :y *tmp131 *tmp128
   405 label *label163
+  406 label *label492
   407 label *label164
   408 label *label165
   409 jump *label189 always

Modifications by Convert case at line 165:5 (segments: 1) (+1 instructions):
 
   410 label *label166
   411 op mod *tmp133 :displayItem:amount 10
   412 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label168 notEqual *tmp133 0
+  413 multijump *label506 *tmp133 0 (m:*label505)
+  414 multilabel *label506 (m:*label505)
+  415 jump *label167 always
+  416 multilabel *label507 (m:*label505)
+  417 jump *label169 always
+  418 multilabel *label508 (m:*label505)
+  419 jump *label171 always
+  420 multilabel *label509 (m:*label505)
+  421 jump *label173 always
+  422 multilabel *label510 (m:*label505)
+  423 jump *label175 always
+  424 multilabel *label511 (m:*label505)
+  425 jump *label177 always
+  426 multilabel *label512 (m:*label505)
+  427 jump *label179 always
+  428 multilabel *label513 (m:*label505)
+  429 jump *label181 always
+  430 multilabel *label514 (m:*label505)
+  431 jump *label183 always
+  432 multilabel *label515 (m:*label505)
+  433 jump *label185 always
   434 label *label167
   435 op sub *tmp138 :x 1
   436 op sub *tmp140 :y 1
   437 draw lineRect *tmp138 *tmp140 9 14
   438 jump *label187 always
   439 label *label168
-    * jump *label170 notEqual *tmp133 1
   440 label *label169
   441 op add *tmp142 :x 6
   442 op add *tmp145 :y 12
   443 draw line *tmp142 :y *tmp142 *tmp145
   444 jump *label187 always
   445 label *label170
-    * jump *label172 notEqual *tmp133 2
   446 label *label171
   447 op add *tmp146 :x 7
   448 draw line :x :y *tmp146 :y
 
   454 draw line :x *tmp154 *tmp146 *tmp154
   455 jump *label187 always
   456 label *label172
-    * jump *label174 notEqual *tmp133 3
   457 label *label173
   458 op add *tmp158 :x 7
   459 op add *tmp160 :y 12
 
   464 draw line :x *tmp160 *tmp158 *tmp160
   465 jump *label187 always
   466 label *label174
-    * jump *label176 notEqual *tmp133 4
   467 label *label175
   468 op add *tmp168 :x 7
   469 op add *tmp170 :y 12
 
   473 draw line :x *tmp171 :x *tmp170
   474 jump *label187 always
   475 label *label176
-    * jump *label178 notEqual *tmp133 5
   476 label *label177
   477 op add *tmp176 :x 7
   478 draw line :x :y *tmp176 :y
 
   484 draw line :x *tmp184 *tmp176 *tmp184
   485 jump *label187 always
   486 label *label178
-    * jump *label180 notEqual *tmp133 6
   487 label *label179
   488 op add *tmp188 :y 12
   489 draw line :x :y :x *tmp188
 
   495 draw line :x *tmp188 *tmp189 *tmp188
   496 jump *label187 always
   497 label *label180
-    * jump *label182 notEqual *tmp133 7
   498 label *label181
   499 op add *tmp200 :x 6
   500 op add *tmp203 :y 12
 
   502 draw line :x *tmp203 *tmp200 *tmp203
   503 jump *label187 always
   504 label *label182
-    * jump *label184 notEqual *tmp133 8
   505 label *label183
   506 op sub *tmp209 :x 1
   507 op sub *tmp211 :y 1
 
   511 draw line :x *tmp212 *tmp213 *tmp212
   512 jump *label187 always
   513 label *label184
-    * jump *label186 notEqual *tmp133 9
   514 label *label185
   515 op add *tmp215 :x 7
   516 draw line :x :y *tmp215 :y
 
   521 draw line :x *tmp219 :x *tmp218
   522 draw line :x *tmp218 *tmp215 *tmp218
   523 label *label186
+  524 label *label504
   525 label *label187
   526 label *label188
   527 label *label189

Modifications by Convert case at line 213:5 (segments: 1) (+1 instructions):
 
   535 label *label193
   536 jump *label216 always
   537 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label195 notEqual *tmp53 0
+  538 multijump *label518 *tmp53 0 (m:*label517)
+  539 multilabel *label518 (m:*label517)
+  540 jump *label194 always
+  541 multilabel *label519 (m:*label517)
+  542 jump *label196 always
+  543 multilabel *label520 (m:*label517)
+  544 jump *label198 always
+  545 multilabel *label521 (m:*label517)
+  546 jump *label200 always
+  547 multilabel *label522 (m:*label517)
+  548 jump *label202 always
+  549 multilabel *label523 (m:*label517)
+  550 jump *label204 always
+  551 multilabel *label524 (m:*label517)
+  552 jump *label206 always
+  553 multilabel *label525 (m:*label517)
+  554 jump *label208 always
+  555 multilabel *label526 (m:*label517)
+  556 jump *label210 always
+  557 multilabel *label527 (m:*label517)
+  558 jump *label212 always
   559 label *label194
   560 draw lineRect *tmp58 *tmp60 9 14
   561 jump *label214 always
   562 label *label195
-    * jump *label197 notEqual *tmp53 1
   563 label *label196
   564 draw line *tmp62 :y *tmp62 *tmp65
   565 jump *label214 always
   566 label *label197
-    * jump *label199 notEqual *tmp53 2
   567 label *label198
   568 draw line :displayItem:x :y *tmp66 :y
   569 draw line :displayItem:x :y *tmp66 *tmp68
 
   571 draw line *tmp73 *tmp72 *tmp66 *tmp72
   572 jump *label214 always
   573 label *label199
-    * jump *label201 notEqual *tmp53 3
   574 label *label200
   575 draw line :displayItem:x :y *tmp77 *tmp78
   576 draw line :displayItem:x *tmp78 *tmp77 *tmp78
 
   578 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   579 jump *label214 always
   580 label *label201
-    * jump *label203 notEqual *tmp53 4
   581 label *label202
   582 draw line *tmp88 :y *tmp88 *tmp90
   583 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   584 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   585 jump *label214 always
   586 label *label203
-    * jump *label205 notEqual *tmp53 5
   587 label *label204
   588 draw line :displayItem:x :y *tmp97 *tmp98
   589 draw line :displayItem:x *tmp98 *tmp97 *tmp98
 
   591 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   592 jump *label214 always
   593 label *label205
-    * jump *label207 notEqual *tmp53 6
   594 label *label206
   595 draw lineRect *tmp108 *tmp110 9 8
   596 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   597 jump *label214 always
   598 label *label207
-    * jump *label209 notEqual *tmp53 7
   599 label *label208
   600 draw line :displayItem:x :y *tmp114 *tmp115
   601 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   602 jump *label214 always
   603 label *label209
-    * jump *label211 notEqual *tmp53 8
   604 label *label210
   605 draw lineRect *tmp120 *tmp122 9 14
   606 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   607 jump *label214 always
   608 label *label211
-    * jump *label213 notEqual *tmp53 9
   609 label *label212
   610 draw lineRect *tmp127 *tmp130 9 8
   611 draw line :displayItem:x :y *tmp131 *tmp128
   612 label *label213
+  613 label *label516
   614 label *label214
   615 label *label215
   616 jump *label239 always

Modifications by Convert case at line 165:5 (segments: 1) (+1 instructions):
 
   617 label *label216
   618 op mod *tmp133 :displayItem:amount 10
   619 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label218 notEqual *tmp133 0
+  620 multijump *label530 *tmp133 0 (m:*label529)
+  621 multilabel *label530 (m:*label529)
+  622 jump *label217 always
+  623 multilabel *label531 (m:*label529)
+  624 jump *label219 always
+  625 multilabel *label532 (m:*label529)
+  626 jump *label221 always
+  627 multilabel *label533 (m:*label529)
+  628 jump *label223 always
+  629 multilabel *label534 (m:*label529)
+  630 jump *label225 always
+  631 multilabel *label535 (m:*label529)
+  632 jump *label227 always
+  633 multilabel *label536 (m:*label529)
+  634 jump *label229 always
+  635 multilabel *label537 (m:*label529)
+  636 jump *label231 always
+  637 multilabel *label538 (m:*label529)
+  638 jump *label233 always
+  639 multilabel *label539 (m:*label529)
+  640 jump *label235 always
   641 label *label217
   642 op sub *tmp138 :displayItem:x 1
   643 op sub *tmp140 :y 1
   644 draw lineRect *tmp138 *tmp140 9 14
   645 jump *label237 always
   646 label *label218
-    * jump *label220 notEqual *tmp133 1
   647 label *label219
   648 op add *tmp142 :displayItem:x 6
   649 op add *tmp145 :y 12
   650 draw line *tmp142 :y *tmp142 *tmp145
   651 jump *label237 always
   652 label *label220
-    * jump *label222 notEqual *tmp133 2
   653 label *label221
   654 op add *tmp146 :displayItem:x 7
   655 draw line :displayItem:x :y *tmp146 :y
 
   661 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   662 jump *label237 always
   663 label *label222
-    * jump *label224 notEqual *tmp133 3
   664 label *label223
   665 op add *tmp158 :displayItem:x 7
   666 op add *tmp160 :y 12
 
   671 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   672 jump *label237 always
   673 label *label224
-    * jump *label226 notEqual *tmp133 4
   674 label *label225
   675 op add *tmp168 :displayItem:x 7
   676 op add *tmp170 :y 12
 
   680 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   681 jump *label237 always
   682 label *label226
-    * jump *label228 notEqual *tmp133 5
   683 label *label227
   684 op add *tmp176 :displayItem:x 7
   685 draw line :displayItem:x :y *tmp176 :y
 
   691 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   692 jump *label237 always
   693 label *label228
-    * jump *label230 notEqual *tmp133 6
   694 label *label229
   695 op add *tmp188 :y 12
   696 draw line :displayItem:x :y :displayItem:x *tmp188
 
   702 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   703 jump *label237 always
   704 label *label230
-    * jump *label232 notEqual *tmp133 7
   705 label *label231
   706 op add *tmp200 :displayItem:x 6
   707 op add *tmp203 :y 12
 
   709 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   710 jump *label237 always
   711 label *label232
-    * jump *label234 notEqual *tmp133 8
   712 label *label233
   713 op sub *tmp209 :displayItem:x 1
   714 op sub *tmp211 :y 1
 
   718 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   719 jump *label237 always
   720 label *label234
-    * jump *label236 notEqual *tmp133 9
   721 label *label235
   722 op add *tmp215 :displayItem:x 7
   723 draw line :displayItem:x :y *tmp215 :y
 
   728 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   729 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   730 label *label236
+  731 label *label528
   732 label *label237
   733 label *label238
   734 label *label239

Modifications by Convert case at line 213:5 (segments: 1) (+1 instructions):
 
   742 label *label243
   743 jump *label266 always
   744 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label245 notEqual *tmp53 0
+  745 multijump *label542 *tmp53 0 (m:*label541)
+  746 multilabel *label542 (m:*label541)
+  747 jump *label244 always
+  748 multilabel *label543 (m:*label541)
+  749 jump *label246 always
+  750 multilabel *label544 (m:*label541)
+  751 jump *label248 always
+  752 multilabel *label545 (m:*label541)
+  753 jump *label250 always
+  754 multilabel *label546 (m:*label541)
+  755 jump *label252 always
+  756 multilabel *label547 (m:*label541)
+  757 jump *label254 always
+  758 multilabel *label548 (m:*label541)
+  759 jump *label256 always
+  760 multilabel *label549 (m:*label541)
+  761 jump *label258 always
+  762 multilabel *label550 (m:*label541)
+  763 jump *label260 always
+  764 multilabel *label551 (m:*label541)
+  765 jump *label262 always
   766 label *label244
   767 draw lineRect *tmp58 *tmp60 9 14
   768 jump *label264 always
   769 label *label245
-    * jump *label247 notEqual *tmp53 1
   770 label *label246
   771 draw line *tmp62 :y *tmp62 *tmp65
   772 jump *label264 always
   773 label *label247
-    * jump *label249 notEqual *tmp53 2
   774 label *label248
   775 draw line :displayItem:x :y *tmp66 :y
   776 draw line :displayItem:x :y *tmp66 *tmp68
 
   778 draw line *tmp73 *tmp72 *tmp66 *tmp72
   779 jump *label264 always
   780 label *label249
-    * jump *label251 notEqual *tmp53 3
   781 label *label250
   782 draw line :displayItem:x :y *tmp77 *tmp78
   783 draw line :displayItem:x *tmp78 *tmp77 *tmp78
 
   785 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   786 jump *label264 always
   787 label *label251
-    * jump *label253 notEqual *tmp53 4
   788 label *label252
   789 draw line *tmp88 :y *tmp88 *tmp90
   790 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   791 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   792 jump *label264 always
   793 label *label253
-    * jump *label255 notEqual *tmp53 5
   794 label *label254
   795 draw line :displayItem:x :y *tmp97 *tmp98
   796 draw line :displayItem:x *tmp98 *tmp97 *tmp98
 
   798 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   799 jump *label264 always
   800 label *label255
-    * jump *label257 notEqual *tmp53 6
   801 label *label256
   802 draw lineRect *tmp108 *tmp110 9 8
   803 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   804 jump *label264 always
   805 label *label257
-    * jump *label259 notEqual *tmp53 7
   806 label *label258
   807 draw line :displayItem:x :y *tmp114 *tmp115
   808 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   809 jump *label264 always
   810 label *label259
-    * jump *label261 notEqual *tmp53 8
   811 label *label260
   812 draw lineRect *tmp120 *tmp122 9 14
   813 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   814 jump *label264 always
   815 label *label261
-    * jump *label263 notEqual *tmp53 9
   816 label *label262
   817 draw lineRect *tmp127 *tmp130 9 8
   818 draw line :displayItem:x :y *tmp131 *tmp128
   819 label *label263
+  820 label *label540
   821 label *label264
   822 label *label265
   823 jump *label289 always

Modifications by Convert case at line 165:5 (segments: 1) (+1 instructions):
 
   824 label *label266
   825 op mod *tmp133 :displayItem:amount 10
   826 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label268 notEqual *tmp133 0
+  827 multijump *label554 *tmp133 0 (m:*label553)
+  828 multilabel *label554 (m:*label553)
+  829 jump *label267 always
+  830 multilabel *label555 (m:*label553)
+  831 jump *label269 always
+  832 multilabel *label556 (m:*label553)
+  833 jump *label271 always
+  834 multilabel *label557 (m:*label553)
+  835 jump *label273 always
+  836 multilabel *label558 (m:*label553)
+  837 jump *label275 always
+  838 multilabel *label559 (m:*label553)
+  839 jump *label277 always
+  840 multilabel *label560 (m:*label553)
+  841 jump *label279 always
+  842 multilabel *label561 (m:*label553)
+  843 jump *label281 always
+  844 multilabel *label562 (m:*label553)
+  845 jump *label283 always
+  846 multilabel *label563 (m:*label553)
+  847 jump *label285 always
   848 label *label267
   849 op sub *tmp138 :displayItem:x 1
   850 op sub *tmp140 :y 1
   851 draw lineRect *tmp138 *tmp140 9 14
   852 jump *label287 always
   853 label *label268
-    * jump *label270 notEqual *tmp133 1
   854 label *label269
   855 op add *tmp142 :displayItem:x 6
   856 op add *tmp145 :y 12
   857 draw line *tmp142 :y *tmp142 *tmp145
   858 jump *label287 always
   859 label *label270
-    * jump *label272 notEqual *tmp133 2
   860 label *label271
   861 op add *tmp146 :displayItem:x 7
   862 draw line :displayItem:x :y *tmp146 :y
 
   868 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   869 jump *label287 always
   870 label *label272
-    * jump *label274 notEqual *tmp133 3
   871 label *label273
   872 op add *tmp158 :displayItem:x 7
   873 op add *tmp160 :y 12
 
   878 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   879 jump *label287 always
   880 label *label274
-    * jump *label276 notEqual *tmp133 4
   881 label *label275
   882 op add *tmp168 :displayItem:x 7
   883 op add *tmp170 :y 12
 
   887 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   888 jump *label287 always
   889 label *label276
-    * jump *label278 notEqual *tmp133 5
   890 label *label277
   891 op add *tmp176 :displayItem:x 7
   892 draw line :displayItem:x :y *tmp176 :y
 
   898 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   899 jump *label287 always
   900 label *label278
-    * jump *label280 notEqual *tmp133 6
   901 label *label279
   902 op add *tmp188 :y 12
   903 draw line :displayItem:x :y :displayItem:x *tmp188
 
   909 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   910 jump *label287 always
   911 label *label280
-    * jump *label282 notEqual *tmp133 7
   912 label *label281
   913 op add *tmp200 :displayItem:x 6
   914 op add *tmp203 :y 12
 
   916 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   917 jump *label287 always
   918 label *label282
-    * jump *label284 notEqual *tmp133 8
   919 label *label283
   920 op sub *tmp209 :displayItem:x 1
   921 op sub *tmp211 :y 1
 
   925 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   926 jump *label287 always
   927 label *label284
-    * jump *label286 notEqual *tmp133 9
   928 label *label285
   929 op add *tmp215 :displayItem:x 7
   930 draw line :displayItem:x :y *tmp215 :y
 
   935 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   936 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   937 label *label286
+  938 label *label552
   939 label *label287
   940 label *label288
   941 label *label289

Modifications by Convert case at line 213:5 (segments: 1) (+1 instructions):
 
   949 label *label293
   950 jump *label316 always
   951 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label295 notEqual *tmp53 0
+  952 multijump *label566 *tmp53 0 (m:*label565)
+  953 multilabel *label566 (m:*label565)
+  954 jump *label294 always
+  955 multilabel *label567 (m:*label565)
+  956 jump *label296 always
+  957 multilabel *label568 (m:*label565)
+  958 jump *label298 always
+  959 multilabel *label569 (m:*label565)
+  960 jump *label300 always
+  961 multilabel *label570 (m:*label565)
+  962 jump *label302 always
+  963 multilabel *label571 (m:*label565)
+  964 jump *label304 always
+  965 multilabel *label572 (m:*label565)
+  966 jump *label306 always
+  967 multilabel *label573 (m:*label565)
+  968 jump *label308 always
+  969 multilabel *label574 (m:*label565)
+  970 jump *label310 always
+  971 multilabel *label575 (m:*label565)
+  972 jump *label312 always
   973 label *label294
   974 draw lineRect *tmp58 *tmp60 9 14
   975 jump *label314 always
   976 label *label295
-    * jump *label297 notEqual *tmp53 1
   977 label *label296
   978 draw line *tmp62 :y *tmp62 *tmp65
   979 jump *label314 always
   980 label *label297
-    * jump *label299 notEqual *tmp53 2
   981 label *label298
   982 draw line :displayItem:x :y *tmp66 :y
   983 draw line :displayItem:x :y *tmp66 *tmp68
 
   985 draw line *tmp73 *tmp72 *tmp66 *tmp72
   986 jump *label314 always
   987 label *label299
-    * jump *label301 notEqual *tmp53 3
   988 label *label300
   989 draw line :displayItem:x :y *tmp77 *tmp78
   990 draw line :displayItem:x *tmp78 *tmp77 *tmp78
 
   992 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   993 jump *label314 always
   994 label *label301
-    * jump *label303 notEqual *tmp53 4
   995 label *label302
   996 draw line *tmp88 :y *tmp88 *tmp90
   997 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   998 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   999 jump *label314 always
  1000 label *label303
-    * jump *label305 notEqual *tmp53 5
  1001 label *label304
  1002 draw line :displayItem:x :y *tmp97 *tmp98
  1003 draw line :displayItem:x *tmp98 *tmp97 *tmp98
 
  1005 draw line :displayItem:x *tmp103 *tmp97 *tmp103
  1006 jump *label314 always
  1007 label *label305
-    * jump *label307 notEqual *tmp53 6
  1008 label *label306
  1009 draw lineRect *tmp108 *tmp110 9 8
  1010 draw line :displayItem:x *tmp111 *tmp112 *tmp113
  1011 jump *label314 always
  1012 label *label307
-    * jump *label309 notEqual *tmp53 7
  1013 label *label308
  1014 draw line :displayItem:x :y *tmp114 *tmp115
  1015 draw line :displayItem:x *tmp115 *tmp114 *tmp115
  1016 jump *label314 always
  1017 label *label309
-    * jump *label311 notEqual *tmp53 8
  1018 label *label310
  1019 draw lineRect *tmp120 *tmp122 9 14
  1020 draw line :displayItem:x *tmp123 *tmp124 *tmp123
  1021 jump *label314 always
  1022 label *label311
-    * jump *label313 notEqual *tmp53 9
  1023 label *label312
  1024 draw lineRect *tmp127 *tmp130 9 8
  1025 draw line :displayItem:x :y *tmp131 *tmp128
  1026 label *label313
+ 1027 label *label564
  1028 label *label314
  1029 label *label315
  1030 jump *label339 always

Modifications by Convert case at line 165:5 (segments: 1) (+1 instructions):
 
  1031 label *label316
  1032 op mod *tmp133 :displayItem:amount 10
  1033 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label318 notEqual *tmp133 0
+ 1034 multijump *label578 *tmp133 0 (m:*label577)
+ 1035 multilabel *label578 (m:*label577)
+ 1036 jump *label317 always
+ 1037 multilabel *label579 (m:*label577)
+ 1038 jump *label319 always
+ 1039 multilabel *label580 (m:*label577)
+ 1040 jump *label321 always
+ 1041 multilabel *label581 (m:*label577)
+ 1042 jump *label323 always
+ 1043 multilabel *label582 (m:*label577)
+ 1044 jump *label325 always
+ 1045 multilabel *label583 (m:*label577)
+ 1046 jump *label327 always
+ 1047 multilabel *label584 (m:*label577)
+ 1048 jump *label329 always
+ 1049 multilabel *label585 (m:*label577)
+ 1050 jump *label331 always
+ 1051 multilabel *label586 (m:*label577)
+ 1052 jump *label333 always
+ 1053 multilabel *label587 (m:*label577)
+ 1054 jump *label335 always
  1055 label *label317
  1056 op sub *tmp138 :displayItem:x 1
  1057 op sub *tmp140 :y 1
  1058 draw lineRect *tmp138 *tmp140 9 14
  1059 jump *label337 always
  1060 label *label318
-    * jump *label320 notEqual *tmp133 1
  1061 label *label319
  1062 op add *tmp142 :displayItem:x 6
  1063 op add *tmp145 :y 12
  1064 draw line *tmp142 :y *tmp142 *tmp145
  1065 jump *label337 always
  1066 label *label320
-    * jump *label322 notEqual *tmp133 2
  1067 label *label321
  1068 op add *tmp146 :displayItem:x 7
  1069 draw line :displayItem:x :y *tmp146 :y
 
  1075 draw line :displayItem:x *tmp154 *tmp146 *tmp154
  1076 jump *label337 always
  1077 label *label322
-    * jump *label324 notEqual *tmp133 3
  1078 label *label323
  1079 op add *tmp158 :displayItem:x 7
  1080 op add *tmp160 :y 12
 
  1085 draw line :displayItem:x *tmp160 *tmp158 *tmp160
  1086 jump *label337 always
  1087 label *label324
-    * jump *label326 notEqual *tmp133 4
  1088 label *label325
  1089 op add *tmp168 :displayItem:x 7
  1090 op add *tmp170 :y 12
 
  1094 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
  1095 jump *label337 always
  1096 label *label326
-    * jump *label328 notEqual *tmp133 5
  1097 label *label327
  1098 op add *tmp176 :displayItem:x 7
  1099 draw line :displayItem:x :y *tmp176 :y
 
  1105 draw line :displayItem:x *tmp184 *tmp176 *tmp184
  1106 jump *label337 always
  1107 label *label328
-    * jump *label330 notEqual *tmp133 6
  1108 label *label329
  1109 op add *tmp188 :y 12
  1110 draw line :displayItem:x :y :displayItem:x *tmp188
 
  1116 draw line :displayItem:x *tmp188 *tmp189 *tmp188
  1117 jump *label337 always
  1118 label *label330
-    * jump *label332 notEqual *tmp133 7
  1119 label *label331
  1120 op add *tmp200 :displayItem:x 6
  1121 op add *tmp203 :y 12
 
  1123 draw line :displayItem:x *tmp203 *tmp200 *tmp203
  1124 jump *label337 always
  1125 label *label332
-    * jump *label334 notEqual *tmp133 8
  1126 label *label333
  1127 op sub *tmp209 :displayItem:x 1
  1128 op sub *tmp211 :y 1
 
  1132 draw line :displayItem:x *tmp212 *tmp213 *tmp212
  1133 jump *label337 always
  1134 label *label334
-    * jump *label336 notEqual *tmp133 9
  1135 label *label335
  1136 op add *tmp215 :displayItem:x 7
  1137 draw line :displayItem:x :y *tmp215 :y
 
  1142 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
  1143 draw line :displayItem:x *tmp218 *tmp215 *tmp218
  1144 label *label336
+ 1145 label *label576
  1146 label *label337
  1147 label *label338
  1148 label *label339

Modifications by Convert case at line 213:5 (segments: 1) (+1 instructions):
 
  1156 label *label343
  1157 jump *label366 always
  1158 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label345 notEqual *tmp53 0
+ 1159 multijump *label590 *tmp53 0 (m:*label589)
+ 1160 multilabel *label590 (m:*label589)
+ 1161 jump *label344 always
+ 1162 multilabel *label591 (m:*label589)
+ 1163 jump *label346 always
+ 1164 multilabel *label592 (m:*label589)
+ 1165 jump *label348 always
+ 1166 multilabel *label593 (m:*label589)
+ 1167 jump *label350 always
+ 1168 multilabel *label594 (m:*label589)
+ 1169 jump *label352 always
+ 1170 multilabel *label595 (m:*label589)
+ 1171 jump *label354 always
+ 1172 multilabel *label596 (m:*label589)
+ 1173 jump *label356 always
+ 1174 multilabel *label597 (m:*label589)
+ 1175 jump *label358 always
+ 1176 multilabel *label598 (m:*label589)
+ 1177 jump *label360 always
+ 1178 multilabel *label599 (m:*label589)
+ 1179 jump *label362 always
  1180 label *label344
  1181 draw lineRect *tmp58 *tmp60 9 14
  1182 jump *label364 always
  1183 label *label345
-    * jump *label347 notEqual *tmp53 1
  1184 label *label346
  1185 draw line *tmp62 :y *tmp62 *tmp65
  1186 jump *label364 always
  1187 label *label347
-    * jump *label349 notEqual *tmp53 2
  1188 label *label348
  1189 draw line :displayItem:x :y *tmp66 :y
  1190 draw line :displayItem:x :y *tmp66 *tmp68
 
  1192 draw line *tmp73 *tmp72 *tmp66 *tmp72
  1193 jump *label364 always
  1194 label *label349
-    * jump *label351 notEqual *tmp53 3
  1195 label *label350
  1196 draw line :displayItem:x :y *tmp77 *tmp78
  1197 draw line :displayItem:x *tmp78 *tmp77 *tmp78
 
  1199 draw line :displayItem:x *tmp84 *tmp77 *tmp84
  1200 jump *label364 always
  1201 label *label351
-    * jump *label353 notEqual *tmp53 4
  1202 label *label352
  1203 draw line *tmp88 :y *tmp88 *tmp90
  1204 draw line :displayItem:x *tmp90 *tmp88 *tmp90
  1205 draw line :displayItem:x *tmp90 *tmp88 *tmp96
  1206 jump *label364 always
  1207 label *label353
-    * jump *label355 notEqual *tmp53 5
  1208 label *label354
  1209 draw line :displayItem:x :y *tmp97 *tmp98
  1210 draw line :displayItem:x *tmp98 *tmp97 *tmp98
 
  1212 draw line :displayItem:x *tmp103 *tmp97 *tmp103
  1213 jump *label364 always
  1214 label *label355
-    * jump *label357 notEqual *tmp53 6
  1215 label *label356
  1216 draw lineRect *tmp108 *tmp110 9 8
  1217 draw line :displayItem:x *tmp111 *tmp112 *tmp113
  1218 jump *label364 always
  1219 label *label357
-    * jump *label359 notEqual *tmp53 7
  1220 label *label358
  1221 draw line :displayItem:x :y *tmp114 *tmp115
  1222 draw line :displayItem:x *tmp115 *tmp114 *tmp115
  1223 jump *label364 always
  1224 label *label359
-    * jump *label361 notEqual *tmp53 8
  1225 label *label360
  1226 draw lineRect *tmp120 *tmp122 9 14
  1227 draw line :displayItem:x *tmp123 *tmp124 *tmp123
  1228 jump *label364 always
  1229 label *label361
-    * jump *label363 notEqual *tmp53 9
  1230 label *label362
  1231 draw lineRect *tmp127 *tmp130 9 8
  1232 draw line :displayItem:x :y *tmp131 *tmp128
  1233 label *label363
+ 1234 label *label588
  1235 label *label364
  1236 label *label365
  1237 jump *label389 always

Modifications by Convert case at line 165:5 (segments: 1) (+1 instructions):
 
  1238 label *label366
  1239 op mod *tmp133 :displayItem:amount 10
  1240 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label368 notEqual *tmp133 0
+ 1241 multijump *label602 *tmp133 0 (m:*label601)
+ 1242 multilabel *label602 (m:*label601)
+ 1243 jump *label367 always
+ 1244 multilabel *label603 (m:*label601)
+ 1245 jump *label369 always
+ 1246 multilabel *label604 (m:*label601)
+ 1247 jump *label371 always
+ 1248 multilabel *label605 (m:*label601)
+ 1249 jump *label373 always
+ 1250 multilabel *label606 (m:*label601)
+ 1251 jump *label375 always
+ 1252 multilabel *label607 (m:*label601)
+ 1253 jump *label377 always
+ 1254 multilabel *label608 (m:*label601)
+ 1255 jump *label379 always
+ 1256 multilabel *label609 (m:*label601)
+ 1257 jump *label381 always
+ 1258 multilabel *label610 (m:*label601)
+ 1259 jump *label383 always
+ 1260 multilabel *label611 (m:*label601)
+ 1261 jump *label385 always
  1262 label *label367
  1263 op sub *tmp138 :displayItem:x 1
  1264 op sub *tmp140 :y 1
  1265 draw lineRect *tmp138 *tmp140 9 14
  1266 jump *label387 always
  1267 label *label368
-    * jump *label370 notEqual *tmp133 1
  1268 label *label369
  1269 op add *tmp142 :displayItem:x 6
  1270 op add *tmp145 :y 12
  1271 draw line *tmp142 :y *tmp142 *tmp145
  1272 jump *label387 always
  1273 label *label370
-    * jump *label372 notEqual *tmp133 2
  1274 label *label371
  1275 op add *tmp146 :displayItem:x 7
  1276 draw line :displayItem:x :y *tmp146 :y
 
  1282 draw line :displayItem:x *tmp154 *tmp146 *tmp154
  1283 jump *label387 always
  1284 label *label372
-    * jump *label374 notEqual *tmp133 3
  1285 label *label373
  1286 op add *tmp158 :displayItem:x 7
  1287 op add *tmp160 :y 12
 
  1292 draw line :displayItem:x *tmp160 *tmp158 *tmp160
  1293 jump *label387 always
  1294 label *label374
-    * jump *label376 notEqual *tmp133 4
  1295 label *label375
  1296 op add *tmp168 :displayItem:x 7
  1297 op add *tmp170 :y 12
 
  1301 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
  1302 jump *label387 always
  1303 label *label376
-    * jump *label378 notEqual *tmp133 5
  1304 label *label377
  1305 op add *tmp176 :displayItem:x 7
  1306 draw line :displayItem:x :y *tmp176 :y
 
  1312 draw line :displayItem:x *tmp184 *tmp176 *tmp184
  1313 jump *label387 always
  1314 label *label378
-    * jump *label380 notEqual *tmp133 6
  1315 label *label379
  1316 op add *tmp188 :y 12
  1317 draw line :displayItem:x :y :displayItem:x *tmp188
 
  1323 draw line :displayItem:x *tmp188 *tmp189 *tmp188
  1324 jump *label387 always
  1325 label *label380
-    * jump *label382 notEqual *tmp133 7
  1326 label *label381
  1327 op add *tmp200 :displayItem:x 6
  1328 op add *tmp203 :y 12
 
  1330 draw line :displayItem:x *tmp203 *tmp200 *tmp203
  1331 jump *label387 always
  1332 label *label382
-    * jump *label384 notEqual *tmp133 8
  1333 label *label383
  1334 op sub *tmp209 :displayItem:x 1
  1335 op sub *tmp211 :y 1
 
  1339 draw line :displayItem:x *tmp212 *tmp213 *tmp212
  1340 jump *label387 always
  1341 label *label384
-    * jump *label386 notEqual *tmp133 9
  1342 label *label385
  1343 op add *tmp215 :displayItem:x 7
  1344 draw line :displayItem:x :y *tmp215 :y
 
  1349 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
  1350 draw line :displayItem:x *tmp218 *tmp215 *tmp218
  1351 label *label386
+ 1352 label *label600
  1353 label *label387
  1354 label *label388
  1355 label *label389

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
    83 draw stroke 2
    84 # "Function: inline def eraseImages(in first_column)"
    85 draw color 0 0 80 255
-    * jump *label21 equal true false
    86 draw rect 0 0 23 176
    87 jump *label22 always
    88 label *label21
 
    91 label *label20
    92 # "Function: inline def eraseImages(in first_column)"
    93 draw color 0 0 80 255
-    * jump *label24 equal false false
+   94 jump *label24 always
    95 draw rect 0 0 23 176
    96 jump *label25 always
    97 label *label24
 
   101 draw color 255 255 255 255
   102 label *label393
   103 draw image 15 159 @sand 16 0
-    * jump *label394 notEqual 1 8
+  104 jump *label394 always
   105 draw color 255 255 255 255
   106 label *label394
   107 label *label395
   108 label *label396
   109 label *label399
   110 draw image 15 139 @copper 16 0
-    * jump *label400 notEqual 2 8
+  111 jump *label400 always
   112 draw color 255 255 255 255
   113 label *label400
   114 label *label401
   115 label *label402
   116 label *label405
   117 draw image 15 119 @lead 16 0
-    * jump *label406 notEqual 3 8
+  118 jump *label406 always
   119 draw color 255 255 255 255
   120 label *label406
   121 label *label407
   122 label *label408
   123 label *label411
   124 draw image 15 99 @coal 16 0
-    * jump *label412 notEqual 4 8
+  125 jump *label412 always
   126 draw color 255 255 255 255
   127 label *label412
   128 label *label413
   129 label *label414
   130 label *label417
   131 draw image 15 79 @titanium 16 0
-    * jump *label418 notEqual 5 8
+  132 jump *label418 always
   133 draw color 255 255 255 255
   134 label *label418
   135 label *label419
   136 label *label420
   137 label *label423
   138 draw image 15 59 @thorium 16 0
-    * jump *label424 notEqual 6 8
+  139 jump *label424 always
   140 draw color 255 255 255 255
   141 label *label424
   142 label *label425
   143 label *label426
   144 label *label429
   145 draw image 15 39 @scrap 16 0
-    * jump *label430 notEqual 7 8
+  146 jump *label430 always
   147 draw color 255 255 255 255
   148 label *label430
   149 label *label431
   150 label *label432
   151 label *label435
   152 draw image 15 19 @graphite 16 0
-    * jump *label436 notEqual 8 8
   153 draw color 255 255 255 255
   154 label *label436
   155 label *label437
   156 label *label438
   157 label *label441
   158 draw image 101 159 @metaglass 16 0
-    * jump *label442 notEqual 9 8
+  159 jump *label442 always
   160 draw color 255 255 255 255
   161 label *label442
   162 label *label443
   163 label *label444
   164 label *label447
   165 draw image 101 139 @silicon 16 0
-    * jump *label448 notEqual 10 8
+  166 jump *label448 always
   167 draw color 255 255 255 255
   168 label *label448
   169 label *label449
   170 label *label450
   171 label *label453
   172 draw image 101 119 @pyratite 16 0
-    * jump *label454 notEqual 11 8
+  173 jump *label454 always
   174 draw color 255 255 255 255
   175 label *label454
   176 label *label455
   177 label *label456
   178 label *label459
   179 draw image 101 99 @blast-compound 16 0
-    * jump *label460 notEqual 12 8
+  180 jump *label460 always
   181 draw color 255 255 255 255
   182 label *label460
   183 label *label461
   184 label *label462
   185 label *label465
   186 draw image 101 79 @plastanium 16 0
-    * jump *label466 notEqual 13 8
+  187 jump *label466 always
   188 draw color 255 255 255 255
   189 label *label466
   190 label *label467
   191 label *label468
   192 label *label471
   193 draw image 101 59 @phase-fabric 16 0
-    * jump *label472 notEqual 14 8
+  194 jump *label472 always
   195 draw color 255 255 255 255
   196 label *label472
   197 label *label473
   198 label *label474
   199 label *label477
   200 draw image 101 39 @surge-alloy 16 0
-    * jump *label478 notEqual 15 8
+  201 jump *label478 always
   202 draw color 255 255 255 255
   203 label *label478
   204 label *label479
   205 label *label480
   206 label *label483
   207 draw image 101 19 @spore-pod 16 0
-    * jump *label484 notEqual 16 8
+  208 jump *label484 always
   209 draw color 255 255 255 255
   210 label *label484
   211 label *label485
 
   217 set :y 152
   218 # "Function: inline def eraseNumbers(in first_column)"
   219 draw color 0 0 80 255
-    * jump *label50 equal true false
   220 draw rect 23 0 70 176
   221 jump *label51 always
   222 label *label50
 
  1366 set :x 157
  1367 # "Function: inline def eraseNumbers(in first_column)"
  1368 draw color 0 0 80 255
-    * jump *label138 equal false false
+ 1369 jump *label138 always
  1370 draw rect 23 0 70 176
  1371 jump *label139 always
  1372 label *label138

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
  1352 label *label389
  1353 op idiv :displayItem:amount :displayItem:amount 10
  1354 jump *label390 notEqual :displayItem:amount 0
-    * jump *label86 always
  1355 label *label390
  1356 label *label391
  1357 label *label392

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
  1351 label *label388
  1352 label *label389
  1353 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label390 notEqual :displayItem:amount 0
  1354 label *label390
  1355 label *label391
  1356 label *label392

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1350 label *label387
  1351 label *label388
  1352 label *label389
-    * op idiv :displayItem:amount :displayItem:amount 10
  1353 label *label390
  1354 label *label391
  1355 label *label392

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     6 print "\n"
     7 set .LINKS @links
     8 set :n .LINKS
-    * label *label3
     9 jump *label5 lessThanEq .LINKS 0
    10 label *label140
    11 op sub :n :n 1
 
    15 print "\n"
    16 sensor *tmp5 :block @type
    17 jump *label7 notEqual *tmp5 @message
-    * label *label8
    18 set .MESSAGE :block
    19 jump *label6 always
    20 label *label7
 
    34 jump *label6 always
    35 label *label11
    36 jump *label13 notEqual *tmp5 @large-logic-display
-    * label *label14
    37 set .DISPLAY :block
    38 label *label13
    39 label *label6
-    * label *label4
    40 jump *label140 greaterThan :n 0
    41 label *label5
    42 print "Message: "
 
    58 print "No container or display."
    59 print "\n"
    60 label *label15
-    * label *label16
    61 printflush .MESSAGE
-    * label *label1
    62 jump *label0 equal .CONTAINER null
-    * label *label2
-    * label *label17
    63 sensor *tmp12 .CONTAINER @dead
    64 op equal *tmp13 *tmp12 0
    65 sensor *tmp14 .DISPLAY @dead
 
    77 draw color 0 0 80 255
    78 draw rect 0 0 23 176
    79 jump *label22 always
-    * label *label21
    80 draw rect 93 0 16 176
    81 label *label22
-    * label *label20
    82 # "Function: inline def eraseImages(in first_column)"
    83 draw color 0 0 80 255
    84 jump *label24 always
 
    87 label *label24
    88 draw rect 93 0 16 176
    89 label *label25
-    * label *label23
    90 draw color 255 255 255 255
-    * label *label393
    91 draw image 15 159 @sand 16 0
    92 jump *label394 always
    93 draw color 255 255 255 255
    94 label *label394
-    * label *label395
-    * label *label396
-    * label *label399
    95 draw image 15 139 @copper 16 0
    96 jump *label400 always
    97 draw color 255 255 255 255
    98 label *label400
-    * label *label401
-    * label *label402
-    * label *label405
    99 draw image 15 119 @lead 16 0
   100 jump *label406 always
   101 draw color 255 255 255 255
   102 label *label406
-    * label *label407
-    * label *label408
-    * label *label411
   103 draw image 15 99 @coal 16 0
   104 jump *label412 always
   105 draw color 255 255 255 255
   106 label *label412
-    * label *label413
-    * label *label414
-    * label *label417
   107 draw image 15 79 @titanium 16 0
   108 jump *label418 always
   109 draw color 255 255 255 255
   110 label *label418
-    * label *label419
-    * label *label420
-    * label *label423
   111 draw image 15 59 @thorium 16 0
   112 jump *label424 always
   113 draw color 255 255 255 255
   114 label *label424
-    * label *label425
-    * label *label426
-    * label *label429
   115 draw image 15 39 @scrap 16 0
   116 jump *label430 always
   117 draw color 255 255 255 255
   118 label *label430
-    * label *label431
-    * label *label432
-    * label *label435
   119 draw image 15 19 @graphite 16 0
   120 draw color 255 255 255 255
-    * label *label436
-    * label *label437
-    * label *label438
-    * label *label441
   121 draw image 101 159 @metaglass 16 0
   122 jump *label442 always
   123 draw color 255 255 255 255
   124 label *label442
-    * label *label443
-    * label *label444
-    * label *label447
   125 draw image 101 139 @silicon 16 0
   126 jump *label448 always
   127 draw color 255 255 255 255
   128 label *label448
-    * label *label449
-    * label *label450
-    * label *label453
   129 draw image 101 119 @pyratite 16 0
   130 jump *label454 always
   131 draw color 255 255 255 255
   132 label *label454
-    * label *label455
-    * label *label456
-    * label *label459
   133 draw image 101 99 @blast-compound 16 0
   134 jump *label460 always
   135 draw color 255 255 255 255
   136 label *label460
-    * label *label461
-    * label *label462
-    * label *label465
   137 draw image 101 79 @plastanium 16 0
   138 jump *label466 always
   139 draw color 255 255 255 255
   140 label *label466
-    * label *label467
-    * label *label468
-    * label *label471
   141 draw image 101 59 @phase-fabric 16 0
   142 jump *label472 always
   143 draw color 255 255 255 255
   144 label *label472
-    * label *label473
-    * label *label474
-    * label *label477
   145 draw image 101 39 @surge-alloy 16 0
   146 jump *label478 always
   147 draw color 255 255 255 255
   148 label *label478
-    * label *label479
-    * label *label480
-    * label *label483
   149 draw image 101 19 @spore-pod 16 0
   150 jump *label484 always
   151 draw color 255 255 255 255
   152 label *label484
-    * label *label485
-    * label *label486
-    * label *label46
-    * label *label28
   153 drawflush display1
   154 set :x 71
   155 set :y 152
 
   157 draw color 0 0 80 255
   158 draw rect 23 0 70 176
   159 jump *label51 always
-    * label *label50
   160 draw rect 109 0 176 176
   161 label *label51
-    * label *label49
   162 set :index 0
   163 set :item @sand
   164 op add *tmp35 @counter 1
 
   257 label *label83
   258 label *label81
   259 label *label75
-    * label *label142
-    * label *label143
   260 jump *label166 always
   261 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   262 multijump *label494 *tmp53 0 (m:*label493)
 
   283 label *label144
   284 draw lineRect *tmp58 *tmp60 9 14
   285 jump *label164 always
-    * label *label145
   286 label *label146
   287 draw line *tmp62 :y *tmp62 *tmp65
   288 jump *label164 always
-    * label *label147
   289 label *label148
   290 draw line :x :y *tmp66 :y
   291 draw line :x :y *tmp66 *tmp68
   292 draw line *tmp66 *tmp68 *tmp66 *tmp72
   293 draw line *tmp73 *tmp72 *tmp66 *tmp72
   294 jump *label164 always
-    * label *label149
   295 label *label150
   296 draw line :x :y *tmp77 *tmp78
   297 draw line :x *tmp78 *tmp77 *tmp78
   298 draw line :x *tmp78 *tmp77 *tmp84
   299 draw line :x *tmp84 *tmp77 *tmp84
   300 jump *label164 always
-    * label *label151
   301 label *label152
   302 draw line *tmp88 :y *tmp88 *tmp90
   303 draw line :x *tmp90 *tmp88 *tmp90
   304 draw line :x *tmp90 *tmp88 *tmp96
   305 jump *label164 always
-    * label *label153
   306 label *label154
   307 draw line :x :y *tmp97 *tmp98
   308 draw line :x *tmp98 *tmp97 *tmp98
   309 draw line :x *tmp98 :x *tmp103
   310 draw line :x *tmp103 *tmp97 *tmp103
   311 jump *label164 always
-    * label *label155
   312 label *label156
   313 draw lineRect *tmp108 *tmp110 9 8
   314 draw line :x *tmp111 *tmp112 *tmp113
   315 jump *label164 always
-    * label *label157
   316 label *label158
   317 draw line :x :y *tmp114 *tmp115
   318 draw line :x *tmp115 *tmp114 *tmp115
   319 jump *label164 always
-    * label *label159
   320 label *label160
   321 draw lineRect *tmp120 *tmp122 9 14
   322 draw line :x *tmp123 *tmp124 *tmp123
   323 jump *label164 always
-    * label *label161
   324 label *label162
   325 draw lineRect *tmp127 *tmp130 9 8
   326 draw line :x :y *tmp131 *tmp128
-    * label *label163
-    * label *label492
   327 label *label164
-    * label *label165
   328 jump *label189 always
   329 label *label166
   330 op mod *tmp133 :displayItem:amount 10
 
   355 op sub *tmp140 :y 1
   356 draw lineRect *tmp138 *tmp140 9 14
   357 jump *label187 always
-    * label *label168
   358 label *label169
   359 op add *tmp142 :x 6
   360 op add *tmp145 :y 12
   361 draw line *tmp142 :y *tmp142 *tmp145
   362 jump *label187 always
-    * label *label170
   363 label *label171
   364 op add *tmp146 :x 7
   365 draw line :x :y *tmp146 :y
 
   370 draw line *tmp146 *tmp147 *tmp146 *tmp154
   371 draw line :x *tmp154 *tmp146 *tmp154
   372 jump *label187 always
-    * label *label172
   373 label *label173
   374 op add *tmp158 :x 7
   375 op add *tmp160 :y 12
 
   379 draw line :x *tmp162 *tmp158 *tmp162
   380 draw line :x *tmp160 *tmp158 *tmp160
   381 jump *label187 always
-    * label *label174
   382 label *label175
   383 op add *tmp168 :x 7
   384 op add *tmp170 :y 12
 
   387 draw line :x *tmp171 *tmp168 *tmp171
   388 draw line :x *tmp171 :x *tmp170
   389 jump *label187 always
-    * label *label176
   390 label *label177
   391 op add *tmp176 :x 7
   392 draw line :x :y *tmp176 :y
 
   397 draw line :x *tmp179 :x *tmp184
   398 draw line :x *tmp184 *tmp176 *tmp184
   399 jump *label187 always
-    * label *label178
   400 label *label179
   401 op add *tmp188 :y 12
   402 draw line :x :y :x *tmp188
 
   407 draw line :x *tmp192 *tmp189 *tmp192
   408 draw line :x *tmp188 *tmp189 *tmp188
   409 jump *label187 always
-    * label *label180
   410 label *label181
   411 op add *tmp200 :x 6
   412 op add *tmp203 :y 12
   413 draw line *tmp200 :y *tmp200 *tmp203
   414 draw line :x *tmp203 *tmp200 *tmp203
   415 jump *label187 always
-    * label *label182
   416 label *label183
   417 op sub *tmp209 :x 1
   418 op sub *tmp211 :y 1
 
   421 op add *tmp213 :x 7
   422 draw line :x *tmp212 *tmp213 *tmp212
   423 jump *label187 always
-    * label *label184
   424 label *label185
   425 op add *tmp215 :x 7
   426 draw line :x :y *tmp215 :y
 
   430 draw line :x *tmp219 *tmp215 *tmp219
   431 draw line :x *tmp219 :x *tmp218
   432 draw line :x *tmp218 *tmp215 *tmp218
-    * label *label186
-    * label *label504
   433 label *label187
-    * label *label188
   434 label *label189
   435 op sub :displayItem:x :x 11
   436 op idiv :displayItem:amount :displayItem:amount 10
   437 jump *label190 notEqual :displayItem:amount 0
   438 jump *label86 always
   439 label *label190
-    * label *label191
-    * label *label192
-    * label *label193
   440 jump *label216 always
   441 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   442 multijump *label518 *tmp53 0 (m:*label517)
 
   463 label *label194
   464 draw lineRect *tmp58 *tmp60 9 14
   465 jump *label214 always
-    * label *label195
   466 label *label196
   467 draw line *tmp62 :y *tmp62 *tmp65
   468 jump *label214 always
-    * label *label197
   469 label *label198
   470 draw line :displayItem:x :y *tmp66 :y
   471 draw line :displayItem:x :y *tmp66 *tmp68
   472 draw line *tmp66 *tmp68 *tmp66 *tmp72
   473 draw line *tmp73 *tmp72 *tmp66 *tmp72
   474 jump *label214 always
-    * label *label199
   475 label *label200
   476 draw line :displayItem:x :y *tmp77 *tmp78
   477 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   478 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   479 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   480 jump *label214 always
-    * label *label201
   481 label *label202
   482 draw line *tmp88 :y *tmp88 *tmp90
   483 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   484 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   485 jump *label214 always
-    * label *label203
   486 label *label204
   487 draw line :displayItem:x :y *tmp97 *tmp98
   488 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   489 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   490 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   491 jump *label214 always
-    * label *label205
   492 label *label206
   493 draw lineRect *tmp108 *tmp110 9 8
   494 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   495 jump *label214 always
-    * label *label207
   496 label *label208
   497 draw line :displayItem:x :y *tmp114 *tmp115
   498 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   499 jump *label214 always
-    * label *label209
   500 label *label210
   501 draw lineRect *tmp120 *tmp122 9 14
   502 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   503 jump *label214 always
-    * label *label211
   504 label *label212
   505 draw lineRect *tmp127 *tmp130 9 8
   506 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label213
-    * label *label516
   507 label *label214
-    * label *label215
   508 jump *label239 always
   509 label *label216
   510 op mod *tmp133 :displayItem:amount 10
 
   535 op sub *tmp140 :y 1
   536 draw lineRect *tmp138 *tmp140 9 14
   537 jump *label237 always
-    * label *label218
   538 label *label219
   539 op add *tmp142 :displayItem:x 6
   540 op add *tmp145 :y 12
   541 draw line *tmp142 :y *tmp142 *tmp145
   542 jump *label237 always
-    * label *label220
   543 label *label221
   544 op add *tmp146 :displayItem:x 7
   545 draw line :displayItem:x :y *tmp146 :y
 
   550 draw line *tmp146 *tmp147 *tmp146 *tmp154
   551 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   552 jump *label237 always
-    * label *label222
   553 label *label223
   554 op add *tmp158 :displayItem:x 7
   555 op add *tmp160 :y 12
 
   559 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   560 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   561 jump *label237 always
-    * label *label224
   562 label *label225
   563 op add *tmp168 :displayItem:x 7
   564 op add *tmp170 :y 12
 
   567 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   568 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   569 jump *label237 always
-    * label *label226
   570 label *label227
   571 op add *tmp176 :displayItem:x 7
   572 draw line :displayItem:x :y *tmp176 :y
 
   577 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   578 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   579 jump *label237 always
-    * label *label228
   580 label *label229
   581 op add *tmp188 :y 12
   582 draw line :displayItem:x :y :displayItem:x *tmp188
 
   587 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   588 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   589 jump *label237 always
-    * label *label230
   590 label *label231
   591 op add *tmp200 :displayItem:x 6
   592 op add *tmp203 :y 12
   593 draw line *tmp200 :y *tmp200 *tmp203
   594 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   595 jump *label237 always
-    * label *label232
   596 label *label233
   597 op sub *tmp209 :displayItem:x 1
   598 op sub *tmp211 :y 1
 
   601 op add *tmp213 :displayItem:x 7
   602 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   603 jump *label237 always
-    * label *label234
   604 label *label235
   605 op add *tmp215 :displayItem:x 7
   606 draw line :displayItem:x :y *tmp215 :y
 
   610 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   611 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   612 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label236
-    * label *label528
   613 label *label237
-    * label *label238
   614 label *label239
   615 op sub :displayItem:x :x 22
   616 op idiv :displayItem:amount :displayItem:amount 10
   617 jump *label240 notEqual :displayItem:amount 0
   618 jump *label86 always
   619 label *label240
-    * label *label241
-    * label *label242
-    * label *label243
   620 jump *label266 always
   621 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   622 multijump *label542 *tmp53 0 (m:*label541)
 
   643 label *label244
   644 draw lineRect *tmp58 *tmp60 9 14
   645 jump *label264 always
-    * label *label245
   646 label *label246
   647 draw line *tmp62 :y *tmp62 *tmp65
   648 jump *label264 always
-    * label *label247
   649 label *label248
   650 draw line :displayItem:x :y *tmp66 :y
   651 draw line :displayItem:x :y *tmp66 *tmp68
   652 draw line *tmp66 *tmp68 *tmp66 *tmp72
   653 draw line *tmp73 *tmp72 *tmp66 *tmp72
   654 jump *label264 always
-    * label *label249
   655 label *label250
   656 draw line :displayItem:x :y *tmp77 *tmp78
   657 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   658 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   659 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   660 jump *label264 always
-    * label *label251
   661 label *label252
   662 draw line *tmp88 :y *tmp88 *tmp90
   663 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   664 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   665 jump *label264 always
-    * label *label253
   666 label *label254
   667 draw line :displayItem:x :y *tmp97 *tmp98
   668 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   669 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   670 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   671 jump *label264 always
-    * label *label255
   672 label *label256
   673 draw lineRect *tmp108 *tmp110 9 8
   674 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   675 jump *label264 always
-    * label *label257
   676 label *label258
   677 draw line :displayItem:x :y *tmp114 *tmp115
   678 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   679 jump *label264 always
-    * label *label259
   680 label *label260
   681 draw lineRect *tmp120 *tmp122 9 14
   682 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   683 jump *label264 always
-    * label *label261
   684 label *label262
   685 draw lineRect *tmp127 *tmp130 9 8
   686 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label263
-    * label *label540
   687 label *label264
-    * label *label265
   688 jump *label289 always
   689 label *label266
   690 op mod *tmp133 :displayItem:amount 10
 
   715 op sub *tmp140 :y 1
   716 draw lineRect *tmp138 *tmp140 9 14
   717 jump *label287 always
-    * label *label268
   718 label *label269
   719 op add *tmp142 :displayItem:x 6
   720 op add *tmp145 :y 12
   721 draw line *tmp142 :y *tmp142 *tmp145
   722 jump *label287 always
-    * label *label270
   723 label *label271
   724 op add *tmp146 :displayItem:x 7
   725 draw line :displayItem:x :y *tmp146 :y
 
   730 draw line *tmp146 *tmp147 *tmp146 *tmp154
   731 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   732 jump *label287 always
-    * label *label272
   733 label *label273
   734 op add *tmp158 :displayItem:x 7
   735 op add *tmp160 :y 12
 
   739 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   740 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   741 jump *label287 always
-    * label *label274
   742 label *label275
   743 op add *tmp168 :displayItem:x 7
   744 op add *tmp170 :y 12
 
   747 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   748 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   749 jump *label287 always
-    * label *label276
   750 label *label277
   751 op add *tmp176 :displayItem:x 7
   752 draw line :displayItem:x :y *tmp176 :y
 
   757 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   758 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   759 jump *label287 always
-    * label *label278
   760 label *label279
   761 op add *tmp188 :y 12
   762 draw line :displayItem:x :y :displayItem:x *tmp188
 
   767 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   768 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   769 jump *label287 always
-    * label *label280
   770 label *label281
   771 op add *tmp200 :displayItem:x 6
   772 op add *tmp203 :y 12
   773 draw line *tmp200 :y *tmp200 *tmp203
   774 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   775 jump *label287 always
-    * label *label282
   776 label *label283
   777 op sub *tmp209 :displayItem:x 1
   778 op sub *tmp211 :y 1
 
   781 op add *tmp213 :displayItem:x 7
   782 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   783 jump *label287 always
-    * label *label284
   784 label *label285
   785 op add *tmp215 :displayItem:x 7
   786 draw line :displayItem:x :y *tmp215 :y
 
   790 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   791 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   792 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label286
-    * label *label552
   793 label *label287
-    * label *label288
   794 label *label289
   795 op sub :displayItem:x :x 33
   796 op idiv :displayItem:amount :displayItem:amount 10
   797 jump *label290 notEqual :displayItem:amount 0
   798 jump *label86 always
   799 label *label290
-    * label *label291
-    * label *label292
-    * label *label293
   800 jump *label316 always
   801 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   802 multijump *label566 *tmp53 0 (m:*label565)
 
   823 label *label294
   824 draw lineRect *tmp58 *tmp60 9 14
   825 jump *label314 always
-    * label *label295
   826 label *label296
   827 draw line *tmp62 :y *tmp62 *tmp65
   828 jump *label314 always
-    * label *label297
   829 label *label298
   830 draw line :displayItem:x :y *tmp66 :y
   831 draw line :displayItem:x :y *tmp66 *tmp68
   832 draw line *tmp66 *tmp68 *tmp66 *tmp72
   833 draw line *tmp73 *tmp72 *tmp66 *tmp72
   834 jump *label314 always
-    * label *label299
   835 label *label300
   836 draw line :displayItem:x :y *tmp77 *tmp78
   837 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   838 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   839 draw line :displayItem:x *tmp84 *tmp77 *tmp84
   840 jump *label314 always
-    * label *label301
   841 label *label302
   842 draw line *tmp88 :y *tmp88 *tmp90
   843 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   844 draw line :displayItem:x *tmp90 *tmp88 *tmp96
   845 jump *label314 always
-    * label *label303
   846 label *label304
   847 draw line :displayItem:x :y *tmp97 *tmp98
   848 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   849 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   850 draw line :displayItem:x *tmp103 *tmp97 *tmp103
   851 jump *label314 always
-    * label *label305
   852 label *label306
   853 draw lineRect *tmp108 *tmp110 9 8
   854 draw line :displayItem:x *tmp111 *tmp112 *tmp113
   855 jump *label314 always
-    * label *label307
   856 label *label308
   857 draw line :displayItem:x :y *tmp114 *tmp115
   858 draw line :displayItem:x *tmp115 *tmp114 *tmp115
   859 jump *label314 always
-    * label *label309
   860 label *label310
   861 draw lineRect *tmp120 *tmp122 9 14
   862 draw line :displayItem:x *tmp123 *tmp124 *tmp123
   863 jump *label314 always
-    * label *label311
   864 label *label312
   865 draw lineRect *tmp127 *tmp130 9 8
   866 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label313
-    * label *label564
   867 label *label314
-    * label *label315
   868 jump *label339 always
   869 label *label316
   870 op mod *tmp133 :displayItem:amount 10
 
   895 op sub *tmp140 :y 1
   896 draw lineRect *tmp138 *tmp140 9 14
   897 jump *label337 always
-    * label *label318
   898 label *label319
   899 op add *tmp142 :displayItem:x 6
   900 op add *tmp145 :y 12
   901 draw line *tmp142 :y *tmp142 *tmp145
   902 jump *label337 always
-    * label *label320
   903 label *label321
   904 op add *tmp146 :displayItem:x 7
   905 draw line :displayItem:x :y *tmp146 :y
 
   910 draw line *tmp146 *tmp147 *tmp146 *tmp154
   911 draw line :displayItem:x *tmp154 *tmp146 *tmp154
   912 jump *label337 always
-    * label *label322
   913 label *label323
   914 op add *tmp158 :displayItem:x 7
   915 op add *tmp160 :y 12
 
   919 draw line :displayItem:x *tmp162 *tmp158 *tmp162
   920 draw line :displayItem:x *tmp160 *tmp158 *tmp160
   921 jump *label337 always
-    * label *label324
   922 label *label325
   923 op add *tmp168 :displayItem:x 7
   924 op add *tmp170 :y 12
 
   927 draw line :displayItem:x *tmp171 *tmp168 *tmp171
   928 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
   929 jump *label337 always
-    * label *label326
   930 label *label327
   931 op add *tmp176 :displayItem:x 7
   932 draw line :displayItem:x :y *tmp176 :y
 
   937 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
   938 draw line :displayItem:x *tmp184 *tmp176 *tmp184
   939 jump *label337 always
-    * label *label328
   940 label *label329
   941 op add *tmp188 :y 12
   942 draw line :displayItem:x :y :displayItem:x *tmp188
 
   947 draw line :displayItem:x *tmp192 *tmp189 *tmp192
   948 draw line :displayItem:x *tmp188 *tmp189 *tmp188
   949 jump *label337 always
-    * label *label330
   950 label *label331
   951 op add *tmp200 :displayItem:x 6
   952 op add *tmp203 :y 12
   953 draw line *tmp200 :y *tmp200 *tmp203
   954 draw line :displayItem:x *tmp203 *tmp200 *tmp203
   955 jump *label337 always
-    * label *label332
   956 label *label333
   957 op sub *tmp209 :displayItem:x 1
   958 op sub *tmp211 :y 1
 
   961 op add *tmp213 :displayItem:x 7
   962 draw line :displayItem:x *tmp212 *tmp213 *tmp212
   963 jump *label337 always
-    * label *label334
   964 label *label335
   965 op add *tmp215 :displayItem:x 7
   966 draw line :displayItem:x :y *tmp215 :y
 
   970 draw line :displayItem:x *tmp219 *tmp215 *tmp219
   971 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   972 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label336
-    * label *label576
   973 label *label337
-    * label *label338
   974 label *label339
   975 op sub :displayItem:x :x 44
   976 op idiv :displayItem:amount :displayItem:amount 10
   977 jump *label340 notEqual :displayItem:amount 0
   978 jump *label86 always
   979 label *label340
-    * label *label341
-    * label *label342
-    * label *label343
   980 jump *label366 always
   981 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   982 multijump *label590 *tmp53 0 (m:*label589)
 
  1003 label *label344
  1004 draw lineRect *tmp58 *tmp60 9 14
  1005 jump *label364 always
-    * label *label345
  1006 label *label346
  1007 draw line *tmp62 :y *tmp62 *tmp65
  1008 jump *label364 always
-    * label *label347
  1009 label *label348
  1010 draw line :displayItem:x :y *tmp66 :y
  1011 draw line :displayItem:x :y *tmp66 *tmp68
  1012 draw line *tmp66 *tmp68 *tmp66 *tmp72
  1013 draw line *tmp73 *tmp72 *tmp66 *tmp72
  1014 jump *label364 always
-    * label *label349
  1015 label *label350
  1016 draw line :displayItem:x :y *tmp77 *tmp78
  1017 draw line :displayItem:x *tmp78 *tmp77 *tmp78
  1018 draw line :displayItem:x *tmp78 *tmp77 *tmp84
  1019 draw line :displayItem:x *tmp84 *tmp77 *tmp84
  1020 jump *label364 always
-    * label *label351
  1021 label *label352
  1022 draw line *tmp88 :y *tmp88 *tmp90
  1023 draw line :displayItem:x *tmp90 *tmp88 *tmp90
  1024 draw line :displayItem:x *tmp90 *tmp88 *tmp96
  1025 jump *label364 always
-    * label *label353
  1026 label *label354
  1027 draw line :displayItem:x :y *tmp97 *tmp98
  1028 draw line :displayItem:x *tmp98 *tmp97 *tmp98
  1029 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
  1030 draw line :displayItem:x *tmp103 *tmp97 *tmp103
  1031 jump *label364 always
-    * label *label355
  1032 label *label356
  1033 draw lineRect *tmp108 *tmp110 9 8
  1034 draw line :displayItem:x *tmp111 *tmp112 *tmp113
  1035 jump *label364 always
-    * label *label357
  1036 label *label358
  1037 draw line :displayItem:x :y *tmp114 *tmp115
  1038 draw line :displayItem:x *tmp115 *tmp114 *tmp115
  1039 jump *label364 always
-    * label *label359
  1040 label *label360
  1041 draw lineRect *tmp120 *tmp122 9 14
  1042 draw line :displayItem:x *tmp123 *tmp124 *tmp123
  1043 jump *label364 always
-    * label *label361
  1044 label *label362
  1045 draw lineRect *tmp127 *tmp130 9 8
  1046 draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label363
-    * label *label588
  1047 label *label364
-    * label *label365
  1048 jump *label389 always
  1049 label *label366
  1050 op mod *tmp133 :displayItem:amount 10
 
  1075 op sub *tmp140 :y 1
  1076 draw lineRect *tmp138 *tmp140 9 14
  1077 jump *label387 always
-    * label *label368
  1078 label *label369
  1079 op add *tmp142 :displayItem:x 6
  1080 op add *tmp145 :y 12
  1081 draw line *tmp142 :y *tmp142 *tmp145
  1082 jump *label387 always
-    * label *label370
  1083 label *label371
  1084 op add *tmp146 :displayItem:x 7
  1085 draw line :displayItem:x :y *tmp146 :y
 
  1090 draw line *tmp146 *tmp147 *tmp146 *tmp154
  1091 draw line :displayItem:x *tmp154 *tmp146 *tmp154
  1092 jump *label387 always
-    * label *label372
  1093 label *label373
  1094 op add *tmp158 :displayItem:x 7
  1095 op add *tmp160 :y 12
 
  1099 draw line :displayItem:x *tmp162 *tmp158 *tmp162
  1100 draw line :displayItem:x *tmp160 *tmp158 *tmp160
  1101 jump *label387 always
-    * label *label374
  1102 label *label375
  1103 op add *tmp168 :displayItem:x 7
  1104 op add *tmp170 :y 12
 
  1107 draw line :displayItem:x *tmp171 *tmp168 *tmp171
  1108 draw line :displayItem:x *tmp171 :displayItem:x *tmp170
  1109 jump *label387 always
-    * label *label376
  1110 label *label377
  1111 op add *tmp176 :displayItem:x 7
  1112 draw line :displayItem:x :y *tmp176 :y
 
  1117 draw line :displayItem:x *tmp179 :displayItem:x *tmp184
  1118 draw line :displayItem:x *tmp184 *tmp176 *tmp184
  1119 jump *label387 always
-    * label *label378
  1120 label *label379
  1121 op add *tmp188 :y 12
  1122 draw line :displayItem:x :y :displayItem:x *tmp188
 
  1127 draw line :displayItem:x *tmp192 *tmp189 *tmp192
  1128 draw line :displayItem:x *tmp188 *tmp189 *tmp188
  1129 jump *label387 always
-    * label *label380
  1130 label *label381
  1131 op add *tmp200 :displayItem:x 6
  1132 op add *tmp203 :y 12
  1133 draw line *tmp200 :y *tmp200 *tmp203
  1134 draw line :displayItem:x *tmp203 *tmp200 *tmp203
  1135 jump *label387 always
-    * label *label382
  1136 label *label383
  1137 op sub *tmp209 :displayItem:x 1
  1138 op sub *tmp211 :y 1
 
  1141 op add *tmp213 :displayItem:x 7
  1142 draw line :displayItem:x *tmp212 *tmp213 *tmp212
  1143 jump *label387 always
-    * label *label384
  1144 label *label385
  1145 op add *tmp215 :displayItem:x 7
  1146 draw line :displayItem:x :y *tmp215 :y
 
  1150 draw line :displayItem:x *tmp219 *tmp215 *tmp219
  1151 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
  1152 draw line :displayItem:x *tmp218 *tmp215 *tmp218
-    * label *label386
-    * label *label600
  1153 label *label387
-    * label *label388
  1154 label *label389
-    * label *label390
-    * label *label391
-    * label *label392
  1155 label *label86
-    * label *label73
  1156 op add :index :index 1
  1157 op sub :y :y 20
  1158 jump *label135 notEqual :index 8
 
  1167 label *label138
  1168 draw rect 109 0 176 176
  1169 label *label139
-    * label *label137
  1170 label *label135
-    * label *label136
-    * label *label53
  1171 multijump *tmp35 0 0 (m:marker1)
  1172 multilabel *label70 (m:marker1)
  1173 label *label72
-    * label *label54
  1174 drawflush display1
  1175 op sub *tmp233 @time :start
  1176 op floor :elapsed *tmp233
 
  1181 print " "
  1182 print "ms"
  1183 printflush message1
-    * label *label18
  1184 sensor *tmp12 .CONTAINER @dead
  1185 op equal *tmp13 *tmp12 0
  1186 sensor *tmp14 .DISPLAY @dead

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   434 label *label189
   435 op sub :displayItem:x :x 11
   436 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label190 notEqual :displayItem:amount 0
-    * jump *label86 always
+  437 jump *label86 equal :displayItem:amount 0
   438 label *label190
   439 jump *label216 always
   440 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   613 label *label239
   614 op sub :displayItem:x :x 22
   615 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label240 notEqual :displayItem:amount 0
-    * jump *label86 always
+  616 jump *label86 equal :displayItem:amount 0
   617 label *label240
   618 jump *label266 always
   619 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   792 label *label289
   793 op sub :displayItem:x :x 33
   794 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label290 notEqual :displayItem:amount 0
-    * jump *label86 always
+  795 jump *label86 equal :displayItem:amount 0
   796 label *label290
   797 jump *label316 always
   798 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   971 label *label339
   972 op sub :displayItem:x :x 44
   973 op idiv :displayItem:amount :displayItem:amount 10
-    * jump *label340 notEqual :displayItem:amount 0
-    * jump *label86 always
+  974 jump *label86 equal :displayItem:amount 0
   975 label *label340
   976 jump *label366 always
   977 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   435 op sub :displayItem:x :x 11
   436 op idiv :displayItem:amount :displayItem:amount 10
   437 jump *label86 equal :displayItem:amount 0
-    * label *label190
   438 jump *label216 always
   439 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   440 multijump *label518 *tmp53 0 (m:*label517)
 
   613 op sub :displayItem:x :x 22
   614 op idiv :displayItem:amount :displayItem:amount 10
   615 jump *label86 equal :displayItem:amount 0
-    * label *label240
   616 jump *label266 always
   617 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   618 multijump *label542 *tmp53 0 (m:*label541)
 
   791 op sub :displayItem:x :x 33
   792 op idiv :displayItem:amount :displayItem:amount 10
   793 jump *label86 equal :displayItem:amount 0
-    * label *label290
   794 jump *label316 always
   795 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   796 multijump *label566 *tmp53 0 (m:*label565)
 
   969 op sub :displayItem:x :x 44
   970 op idiv :displayItem:amount :displayItem:amount 10
   971 jump *label86 equal :displayItem:amount 0
-    * label *label340
   972 jump *label366 always
   973 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   974 multijump *label590 *tmp53 0 (m:*label589)

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 set .CONTAINER null
     2 set .MEMORY null
     3 set .MESSAGE null
 
    68 op land *tmp16 *tmp13 *tmp15
    69 op equal *tmp17 .LINKS @links
    70 op land *tmp18 *tmp16 *tmp17
-    * jump *label19 equal *tmp18 false
+   71 jump __start__ equal *tmp18 false
    72 label *label491
    73 set :start @time
    74 sensor .CAPACITY .CONTAINER @itemCapacity
 
   233 jump *label74 equal *tmp38 false
   234 jump *label76 notEqual :displayItem:amount .CAPACITY
   235 draw color 0 255 0 255
-    * jump *label77 always
+  236 jump *label166 always
   237 label *label76
   238 jump *label78 lessThanEq :displayItem:amount .LIMIT
   239 draw color 255 255 0 255
-    * jump *label79 always
+  240 jump *label166 always
   241 label *label78
   242 draw color 255 80 80 255
   243 label *label79
   244 label *label77
-    * jump *label75 always
+  245 jump *label166 always
   246 label *label74
   247 read :displayItem:last .MEMORY :index
   248 write :displayItem:amount .MEMORY :index
   249 jump *label80 notEqual :displayItem:amount :displayItem:last
   250 draw color 255 255 0 255
-    * jump *label81 always
+  251 jump *label166 always
   252 label *label80
   253 jump *label82 greaterThanEq :displayItem:amount :displayItem:last
   254 draw color 255 80 80 255
-    * jump *label83 always
+  255 jump *label166 always
   256 label *label82
   257 draw color 0 255 0 255
   258 label *label83
 
   283 jump *label162 always
   284 label *label144
   285 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label164 always
+  286 jump *label189 always
   287 label *label146
   288 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label164 always
+  289 jump *label189 always
   290 label *label148
   291 draw line :x :y *tmp66 :y
   292 draw line :x :y *tmp66 *tmp68
   293 draw line *tmp66 *tmp68 *tmp66 *tmp72
   294 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label164 always
+  295 jump *label189 always
   296 label *label150
   297 draw line :x :y *tmp77 *tmp78
   298 draw line :x *tmp78 *tmp77 *tmp78
   299 draw line :x *tmp78 *tmp77 *tmp84
   300 draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label164 always
+  301 jump *label189 always
   302 label *label152
   303 draw line *tmp88 :y *tmp88 *tmp90
   304 draw line :x *tmp90 *tmp88 *tmp90
   305 draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label164 always
+  306 jump *label189 always
   307 label *label154
   308 draw line :x :y *tmp97 *tmp98
   309 draw line :x *tmp98 *tmp97 *tmp98
   310 draw line :x *tmp98 :x *tmp103
   311 draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label164 always
+  312 jump *label189 always
   313 label *label156
   314 draw lineRect *tmp108 *tmp110 9 8
   315 draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label164 always
+  316 jump *label189 always
   317 label *label158
   318 draw line :x :y *tmp114 *tmp115
   319 draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label164 always
+  320 jump *label189 always
   321 label *label160
   322 draw lineRect *tmp120 *tmp122 9 14
   323 draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label164 always
+  324 jump *label189 always
   325 label *label162
   326 draw lineRect *tmp127 *tmp130 9 8
   327 draw line :x :y *tmp131 *tmp128
 
   461 jump *label212 always
   462 label *label194
   463 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label214 always
+  464 jump *label239 always
   465 label *label196
   466 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label214 always
+  467 jump *label239 always
   468 label *label198
   469 draw line :displayItem:x :y *tmp66 :y
   470 draw line :displayItem:x :y *tmp66 *tmp68
   471 draw line *tmp66 *tmp68 *tmp66 *tmp72
   472 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label214 always
+  473 jump *label239 always
   474 label *label200
   475 draw line :displayItem:x :y *tmp77 *tmp78
   476 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   477 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   478 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label214 always
+  479 jump *label239 always
   480 label *label202
   481 draw line *tmp88 :y *tmp88 *tmp90
   482 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   483 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label214 always
+  484 jump *label239 always
   485 label *label204
   486 draw line :displayItem:x :y *tmp97 *tmp98
   487 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   488 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   489 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label214 always
+  490 jump *label239 always
   491 label *label206
   492 draw lineRect *tmp108 *tmp110 9 8
   493 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label214 always
+  494 jump *label239 always
   495 label *label208
   496 draw line :displayItem:x :y *tmp114 *tmp115
   497 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label214 always
+  498 jump *label239 always
   499 label *label210
   500 draw lineRect *tmp120 *tmp122 9 14
   501 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label214 always
+  502 jump *label239 always
   503 label *label212
   504 draw lineRect *tmp127 *tmp130 9 8
   505 draw line :displayItem:x :y *tmp131 *tmp128
 
   639 jump *label262 always
   640 label *label244
   641 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label264 always
+  642 jump *label289 always
   643 label *label246
   644 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label264 always
+  645 jump *label289 always
   646 label *label248
   647 draw line :displayItem:x :y *tmp66 :y
   648 draw line :displayItem:x :y *tmp66 *tmp68
   649 draw line *tmp66 *tmp68 *tmp66 *tmp72
   650 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label264 always
+  651 jump *label289 always
   652 label *label250
   653 draw line :displayItem:x :y *tmp77 *tmp78
   654 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   655 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   656 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label264 always
+  657 jump *label289 always
   658 label *label252
   659 draw line *tmp88 :y *tmp88 *tmp90
   660 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   661 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label264 always
+  662 jump *label289 always
   663 label *label254
   664 draw line :displayItem:x :y *tmp97 *tmp98
   665 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   666 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   667 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label264 always
+  668 jump *label289 always
   669 label *label256
   670 draw lineRect *tmp108 *tmp110 9 8
   671 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label264 always
+  672 jump *label289 always
   673 label *label258
   674 draw line :displayItem:x :y *tmp114 *tmp115
   675 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label264 always
+  676 jump *label289 always
   677 label *label260
   678 draw lineRect *tmp120 *tmp122 9 14
   679 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label264 always
+  680 jump *label289 always
   681 label *label262
   682 draw lineRect *tmp127 *tmp130 9 8
   683 draw line :displayItem:x :y *tmp131 *tmp128
 
   817 jump *label312 always
   818 label *label294
   819 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label314 always
+  820 jump *label339 always
   821 label *label296
   822 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label314 always
+  823 jump *label339 always
   824 label *label298
   825 draw line :displayItem:x :y *tmp66 :y
   826 draw line :displayItem:x :y *tmp66 *tmp68
   827 draw line *tmp66 *tmp68 *tmp66 *tmp72
   828 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label314 always
+  829 jump *label339 always
   830 label *label300
   831 draw line :displayItem:x :y *tmp77 *tmp78
   832 draw line :displayItem:x *tmp78 *tmp77 *tmp78
   833 draw line :displayItem:x *tmp78 *tmp77 *tmp84
   834 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label314 always
+  835 jump *label339 always
   836 label *label302
   837 draw line *tmp88 :y *tmp88 *tmp90
   838 draw line :displayItem:x *tmp90 *tmp88 *tmp90
   839 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label314 always
+  840 jump *label339 always
   841 label *label304
   842 draw line :displayItem:x :y *tmp97 *tmp98
   843 draw line :displayItem:x *tmp98 *tmp97 *tmp98
   844 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
   845 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label314 always
+  846 jump *label339 always
   847 label *label306
   848 draw lineRect *tmp108 *tmp110 9 8
   849 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label314 always
+  850 jump *label339 always
   851 label *label308
   852 draw line :displayItem:x :y *tmp114 *tmp115
   853 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label314 always
+  854 jump *label339 always
   855 label *label310
   856 draw lineRect *tmp120 *tmp122 9 14
   857 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label314 always
+  858 jump *label339 always
   859 label *label312
   860 draw lineRect *tmp127 *tmp130 9 8
   861 draw line :displayItem:x :y *tmp131 *tmp128
 
   995 jump *label362 always
   996 label *label344
   997 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label364 always
+  998 jump *label389 always
   999 label *label346
  1000 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label364 always
+ 1001 jump *label389 always
  1002 label *label348
  1003 draw line :displayItem:x :y *tmp66 :y
  1004 draw line :displayItem:x :y *tmp66 *tmp68
  1005 draw line *tmp66 *tmp68 *tmp66 *tmp72
  1006 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label364 always
+ 1007 jump *label389 always
  1008 label *label350
  1009 draw line :displayItem:x :y *tmp77 *tmp78
  1010 draw line :displayItem:x *tmp78 *tmp77 *tmp78
  1011 draw line :displayItem:x *tmp78 *tmp77 *tmp84
  1012 draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label364 always
+ 1013 jump *label389 always
  1014 label *label352
  1015 draw line *tmp88 :y *tmp88 *tmp90
  1016 draw line :displayItem:x *tmp90 *tmp88 *tmp90
  1017 draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label364 always
+ 1018 jump *label389 always
  1019 label *label354
  1020 draw line :displayItem:x :y *tmp97 *tmp98
  1021 draw line :displayItem:x *tmp98 *tmp97 *tmp98
  1022 draw line :displayItem:x *tmp98 :displayItem:x *tmp103
  1023 draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label364 always
+ 1024 jump *label389 always
  1025 label *label356
  1026 draw lineRect *tmp108 *tmp110 9 8
  1027 draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label364 always
+ 1028 jump *label389 always
  1029 label *label358
  1030 draw line :displayItem:x :y *tmp114 *tmp115
  1031 draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label364 always
+ 1032 jump *label389 always
  1033 label *label360
  1034 draw lineRect *tmp120 *tmp122 9 14
  1035 draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label364 always
+ 1036 jump *label389 always
  1037 label *label362
  1038 draw lineRect *tmp127 *tmp130 9 8
  1039 draw line :displayItem:x :y *tmp131 *tmp128

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-251 instructions):
 
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
    80 jump *label22 always
-    * draw rect 93 0 16 176
    81 label *label22
    82 # "Function: inline def eraseImages(in first_column)"
    83 draw color 0 0 80 255
    84 jump *label24 always
-    * draw rect 0 0 23 176
-    * jump *label25 always
    85 label *label24
    86 draw rect 93 0 16 176
    87 label *label25
    88 draw color 255 255 255 255
    89 draw image 15 159 @sand 16 0
    90 jump *label394 always
-    * draw color 255 255 255 255
    91 label *label394
    92 draw image 15 139 @copper 16 0
    93 jump *label400 always
-    * draw color 255 255 255 255
    94 label *label400
    95 draw image 15 119 @lead 16 0
    96 jump *label406 always
-    * draw color 255 255 255 255
    97 label *label406
    98 draw image 15 99 @coal 16 0
    99 jump *label412 always
-    * draw color 255 255 255 255
   100 label *label412
   101 draw image 15 79 @titanium 16 0
   102 jump *label418 always
-    * draw color 255 255 255 255
   103 label *label418
   104 draw image 15 59 @thorium 16 0
   105 jump *label424 always
-    * draw color 255 255 255 255
   106 label *label424
   107 draw image 15 39 @scrap 16 0
   108 jump *label430 always
-    * draw color 255 255 255 255
   109 label *label430
   110 draw image 15 19 @graphite 16 0
   111 draw color 255 255 255 255
   112 draw image 101 159 @metaglass 16 0
   113 jump *label442 always
-    * draw color 255 255 255 255
   114 label *label442
   115 draw image 101 139 @silicon 16 0
   116 jump *label448 always
-    * draw color 255 255 255 255
   117 label *label448
   118 draw image 101 119 @pyratite 16 0
   119 jump *label454 always
-    * draw color 255 255 255 255
   120 label *label454
   121 draw image 101 99 @blast-compound 16 0
   122 jump *label460 always
-    * draw color 255 255 255 255
   123 label *label460
   124 draw image 101 79 @plastanium 16 0
   125 jump *label466 always
-    * draw color 255 255 255 255
   126 label *label466
   127 draw image 101 59 @phase-fabric 16 0
   128 jump *label472 always
-    * draw color 255 255 255 255
   129 label *label472
   130 draw image 101 39 @surge-alloy 16 0
   131 jump *label478 always
-    * draw color 255 255 255 255
   132 label *label478
   133 draw image 101 19 @spore-pod 16 0
   134 jump *label484 always
-    * draw color 255 255 255 255
   135 label *label484
   136 drawflush display1
   137 set :x 71
 
   140 draw color 0 0 80 255
   141 draw rect 23 0 70 176
   142 jump *label51 always
-    * draw rect 109 0 176 176
   143 label *label51
   144 set :index 0
   145 set :item @sand
 
   221 jump *label166 always
   222 label *label78
   223 draw color 255 80 80 255
-    * label *label79
-    * label *label77
   224 jump *label166 always
   225 label *label74
   226 read :displayItem:last .MEMORY :index
 
   234 jump *label166 always
   235 label *label82
   236 draw color 0 255 0 255
-    * label *label83
-    * label *label81
-    * label *label75
   237 jump *label166 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label494 *tmp53 0 (m:*label493)
-    * multilabel *label494 (m:*label493)
-    * jump *label144 always
-    * multilabel *label495 (m:*label493)
-    * jump *label146 always
-    * multilabel *label496 (m:*label493)
-    * jump *label148 always
-    * multilabel *label497 (m:*label493)
-    * jump *label150 always
-    * multilabel *label498 (m:*label493)
-    * jump *label152 always
-    * multilabel *label499 (m:*label493)
-    * jump *label154 always
-    * multilabel *label500 (m:*label493)
-    * jump *label156 always
-    * multilabel *label501 (m:*label493)
-    * jump *label158 always
-    * multilabel *label502 (m:*label493)
-    * jump *label160 always
-    * multilabel *label503 (m:*label493)
-    * jump *label162 always
-    * label *label144
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label189 always
-    * label *label146
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label189 always
-    * label *label148
-    * draw line :x :y *tmp66 :y
-    * draw line :x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label189 always
-    * label *label150
-    * draw line :x :y *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp84
-    * draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label189 always
-    * label *label152
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label189 always
-    * label *label154
-    * draw line :x :y *tmp97 *tmp98
-    * draw line :x *tmp98 *tmp97 *tmp98
-    * draw line :x *tmp98 :x *tmp103
-    * draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label189 always
-    * label *label156
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label189 always
-    * label *label158
-    * draw line :x :y *tmp114 *tmp115
-    * draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label189 always
-    * label *label160
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label189 always
-    * label *label162
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :x :y *tmp131 *tmp128
-    * label *label164
-    * jump *label189 always
   238 label *label166
   239 op mod *tmp133 :displayItem:amount 10
   240 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   345 op idiv :displayItem:amount :displayItem:amount 10
   346 jump *label86 equal :displayItem:amount 0
   347 jump *label216 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label518 *tmp53 0 (m:*label517)
-    * multilabel *label518 (m:*label517)
-    * jump *label194 always
-    * multilabel *label519 (m:*label517)
-    * jump *label196 always
-    * multilabel *label520 (m:*label517)
-    * jump *label198 always
-    * multilabel *label521 (m:*label517)
-    * jump *label200 always
-    * multilabel *label522 (m:*label517)
-    * jump *label202 always
-    * multilabel *label523 (m:*label517)
-    * jump *label204 always
-    * multilabel *label524 (m:*label517)
-    * jump *label206 always
-    * multilabel *label525 (m:*label517)
-    * jump *label208 always
-    * multilabel *label526 (m:*label517)
-    * jump *label210 always
-    * multilabel *label527 (m:*label517)
-    * jump *label212 always
-    * label *label194
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label239 always
-    * label *label196
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label239 always
-    * label *label198
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label239 always
-    * label *label200
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label239 always
-    * label *label202
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label239 always
-    * label *label204
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label239 always
-    * label *label206
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label239 always
-    * label *label208
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label239 always
-    * label *label210
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label239 always
-    * label *label212
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label214
-    * jump *label239 always
   348 label *label216
   349 op mod *tmp133 :displayItem:amount 10
   350 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   455 op idiv :displayItem:amount :displayItem:amount 10
   456 jump *label86 equal :displayItem:amount 0
   457 jump *label266 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label542 *tmp53 0 (m:*label541)
-    * multilabel *label542 (m:*label541)
-    * jump *label244 always
-    * multilabel *label543 (m:*label541)
-    * jump *label246 always
-    * multilabel *label544 (m:*label541)
-    * jump *label248 always
-    * multilabel *label545 (m:*label541)
-    * jump *label250 always
-    * multilabel *label546 (m:*label541)
-    * jump *label252 always
-    * multilabel *label547 (m:*label541)
-    * jump *label254 always
-    * multilabel *label548 (m:*label541)
-    * jump *label256 always
-    * multilabel *label549 (m:*label541)
-    * jump *label258 always
-    * multilabel *label550 (m:*label541)
-    * jump *label260 always
-    * multilabel *label551 (m:*label541)
-    * jump *label262 always
-    * label *label244
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label289 always
-    * label *label246
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label289 always
-    * label *label248
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label289 always
-    * label *label250
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label289 always
-    * label *label252
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label289 always
-    * label *label254
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label289 always
-    * label *label256
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label289 always
-    * label *label258
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label289 always
-    * label *label260
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label289 always
-    * label *label262
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label264
-    * jump *label289 always
   458 label *label266
   459 op mod *tmp133 :displayItem:amount 10
   460 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   565 op idiv :displayItem:amount :displayItem:amount 10
   566 jump *label86 equal :displayItem:amount 0
   567 jump *label316 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label566 *tmp53 0 (m:*label565)
-    * multilabel *label566 (m:*label565)
-    * jump *label294 always
-    * multilabel *label567 (m:*label565)
-    * jump *label296 always
-    * multilabel *label568 (m:*label565)
-    * jump *label298 always
-    * multilabel *label569 (m:*label565)
-    * jump *label300 always
-    * multilabel *label570 (m:*label565)
-    * jump *label302 always
-    * multilabel *label571 (m:*label565)
-    * jump *label304 always
-    * multilabel *label572 (m:*label565)
-    * jump *label306 always
-    * multilabel *label573 (m:*label565)
-    * jump *label308 always
-    * multilabel *label574 (m:*label565)
-    * jump *label310 always
-    * multilabel *label575 (m:*label565)
-    * jump *label312 always
-    * label *label294
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label339 always
-    * label *label296
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label339 always
-    * label *label298
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label339 always
-    * label *label300
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label339 always
-    * label *label302
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label339 always
-    * label *label304
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label339 always
-    * label *label306
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label339 always
-    * label *label308
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label339 always
-    * label *label310
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label339 always
-    * label *label312
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label314
-    * jump *label339 always
   568 label *label316
   569 op mod *tmp133 :displayItem:amount 10
   570 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   675 op idiv :displayItem:amount :displayItem:amount 10
   676 jump *label86 equal :displayItem:amount 0
   677 jump *label366 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * multijump *label590 *tmp53 0 (m:*label589)
-    * multilabel *label590 (m:*label589)
-    * jump *label344 always
-    * multilabel *label591 (m:*label589)
-    * jump *label346 always
-    * multilabel *label592 (m:*label589)
-    * jump *label348 always
-    * multilabel *label593 (m:*label589)
-    * jump *label350 always
-    * multilabel *label594 (m:*label589)
-    * jump *label352 always
-    * multilabel *label595 (m:*label589)
-    * jump *label354 always
-    * multilabel *label596 (m:*label589)
-    * jump *label356 always
-    * multilabel *label597 (m:*label589)
-    * jump *label358 always
-    * multilabel *label598 (m:*label589)
-    * jump *label360 always
-    * multilabel *label599 (m:*label589)
-    * jump *label362 always
-    * label *label344
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label389 always
-    * label *label346
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label389 always
-    * label *label348
-    * draw line :displayItem:x :y *tmp66 :y
-    * draw line :displayItem:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label389 always
-    * label *label350
-    * draw line :displayItem:x :y *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem:x *tmp84 *tmp77 *tmp84
-    * jump *label389 always
-    * label *label352
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem:x *tmp90 *tmp88 *tmp96
-    * jump *label389 always
-    * label *label354
-    * draw line :displayItem:x :y *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem:x *tmp98 :displayItem:x *tmp103
-    * draw line :displayItem:x *tmp103 *tmp97 *tmp103
-    * jump *label389 always
-    * label *label356
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem:x *tmp111 *tmp112 *tmp113
-    * jump *label389 always
-    * label *label358
-    * draw line :displayItem:x :y *tmp114 *tmp115
-    * draw line :displayItem:x *tmp115 *tmp114 *tmp115
-    * jump *label389 always
-    * label *label360
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem:x *tmp123 *tmp124 *tmp123
-    * jump *label389 always
-    * label *label362
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem:x :y *tmp131 *tmp128
-    * label *label364
-    * jump *label389 always
   678 label *label366
   679 op mod *tmp133 :displayItem:amount 10
   680 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   791 # "Function: inline def eraseNumbers(in first_column)"
   792 draw color 0 0 80 255
   793 jump *label138 always
-    * draw rect 23 0 70 176
-    * jump *label139 always
   794 label *label138
   795 draw rect 109 0 176 176
   796 label *label139
 
   816 op equal *tmp17 .LINKS @links
   817 op land *tmp18 *tmp16 *tmp17
   818 jump *label491 notEqual *tmp18 false
-    * label *label19
   819 end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
    84 jump *label24 always
    85 label *label24
    86 draw rect 93 0 16 176
-    * label *label25
    87 draw color 255 255 255 255
    88 draw image 15 159 @sand 16 0
    89 jump *label394 always
 
   339 draw line :x *tmp219 :x *tmp218
   340 draw line :x *tmp218 *tmp215 *tmp218
   341 label *label187
-    * label *label189
   342 op sub :displayItem:x :x 11
   343 op idiv :displayItem:amount :displayItem:amount 10
   344 jump *label86 equal :displayItem:amount 0
 
   448 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   449 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   450 label *label237
-    * label *label239
   451 op sub :displayItem:x :x 22
   452 op idiv :displayItem:amount :displayItem:amount 10
   453 jump *label86 equal :displayItem:amount 0
 
   557 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   558 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   559 label *label287
-    * label *label289
   560 op sub :displayItem:x :x 33
   561 op idiv :displayItem:amount :displayItem:amount 10
   562 jump *label86 equal :displayItem:amount 0
 
   666 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   667 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   668 label *label337
-    * label *label339
   669 op sub :displayItem:x :x 44
   670 op idiv :displayItem:amount :displayItem:amount 10
   671 jump *label86 equal :displayItem:amount 0
 
   775 draw line :displayItem:x *tmp219 :displayItem:x *tmp218
   776 draw line :displayItem:x *tmp218 *tmp215 *tmp218
   777 label *label387
-    * label *label389
   778 label *label86
   779 op add :index :index 1
   780 op sub :y :y 20
 
   787 jump *label138 always
   788 label *label138
   789 draw rect 109 0 176 176
-    * label *label139
   790 label *label135
   791 multijump *tmp35 0 0 (m:marker1)
   792 multilabel *label70 (m:marker1)

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-24 instructions):
 
    77 # "Function: inline def eraseImages(in first_column)"
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
-    * jump *label22 always
    80 label *label22
    81 # "Function: inline def eraseImages(in first_column)"
    82 draw color 0 0 80 255
-    * jump *label24 always
    83 label *label24
    84 draw rect 93 0 16 176
    85 draw color 255 255 255 255
    86 draw image 15 159 @sand 16 0
-    * jump *label394 always
    87 label *label394
    88 draw image 15 139 @copper 16 0
-    * jump *label400 always
    89 label *label400
    90 draw image 15 119 @lead 16 0
-    * jump *label406 always
    91 label *label406
    92 draw image 15 99 @coal 16 0
-    * jump *label412 always
    93 label *label412
    94 draw image 15 79 @titanium 16 0
-    * jump *label418 always
    95 label *label418
    96 draw image 15 59 @thorium 16 0
-    * jump *label424 always
    97 label *label424
    98 draw image 15 39 @scrap 16 0
-    * jump *label430 always
    99 label *label430
   100 draw image 15 19 @graphite 16 0
   101 draw color 255 255 255 255
   102 draw image 101 159 @metaglass 16 0
-    * jump *label442 always
   103 label *label442
   104 draw image 101 139 @silicon 16 0
-    * jump *label448 always
   105 label *label448
   106 draw image 101 119 @pyratite 16 0
-    * jump *label454 always
   107 label *label454
   108 draw image 101 99 @blast-compound 16 0
-    * jump *label460 always
   109 label *label460
   110 draw image 101 79 @plastanium 16 0
-    * jump *label466 always
   111 label *label466
   112 draw image 101 59 @phase-fabric 16 0
-    * jump *label472 always
   113 label *label472
   114 draw image 101 39 @surge-alloy 16 0
-    * jump *label478 always
   115 label *label478
   116 draw image 101 19 @spore-pod 16 0
-    * jump *label484 always
   117 label *label484
   118 drawflush display1
   119 set :x 71
 
   121 # "Function: inline def eraseNumbers(in first_column)"
   122 draw color 0 0 80 255
   123 draw rect 23 0 70 176
-    * jump *label51 always
   124 label *label51
   125 set :index 0
   126 set :item @sand
 
   324 op sub :displayItem:x :x 11
   325 op idiv :displayItem:amount :displayItem:amount 10
   326 jump *label86 equal :displayItem:amount 0
-    * jump *label216 always
   327 label *label216
   328 op mod *tmp133 :displayItem:amount 10
   329 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   432 op sub :displayItem:x :x 22
   433 op idiv :displayItem:amount :displayItem:amount 10
   434 jump *label86 equal :displayItem:amount 0
-    * jump *label266 always
   435 label *label266
   436 op mod *tmp133 :displayItem:amount 10
   437 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   540 op sub :displayItem:x :x 33
   541 op idiv :displayItem:amount :displayItem:amount 10
   542 jump *label86 equal :displayItem:amount 0
-    * jump *label316 always
   543 label *label316
   544 op mod *tmp133 :displayItem:amount 10
   545 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   648 op sub :displayItem:x :x 44
   649 op idiv :displayItem:amount :displayItem:amount 10
   650 jump *label86 equal :displayItem:amount 0
-    * jump *label366 always
   651 label *label366
   652 op mod *tmp133 :displayItem:amount 10
   653 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   762 set :x 157
   763 # "Function: inline def eraseNumbers(in first_column)"
   764 draw color 0 0 80 255
-    * jump *label138 always
   765 label *label138
   766 draw rect 109 0 176 176
   767 label *label135
 
   786 op equal *tmp17 .LINKS @links
   787 op land *tmp18 *tmp16 *tmp17
   788 jump *label491 notEqual *tmp18 false
-    * end

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    77 # "Function: inline def eraseImages(in first_column)"
    78 draw color 0 0 80 255
    79 draw rect 0 0 23 176
-    * label *label22
    80 # "Function: inline def eraseImages(in first_column)"
    81 draw color 0 0 80 255
-    * label *label24
    82 draw rect 93 0 16 176
    83 draw color 255 255 255 255
    84 draw image 15 159 @sand 16 0
-    * label *label394
    85 draw image 15 139 @copper 16 0
-    * label *label400
    86 draw image 15 119 @lead 16 0
-    * label *label406
    87 draw image 15 99 @coal 16 0
-    * label *label412
    88 draw image 15 79 @titanium 16 0
-    * label *label418
    89 draw image 15 59 @thorium 16 0
-    * label *label424
    90 draw image 15 39 @scrap 16 0
-    * label *label430
    91 draw image 15 19 @graphite 16 0
    92 draw color 255 255 255 255
    93 draw image 101 159 @metaglass 16 0
-    * label *label442
    94 draw image 101 139 @silicon 16 0
-    * label *label448
    95 draw image 101 119 @pyratite 16 0
-    * label *label454
    96 draw image 101 99 @blast-compound 16 0
-    * label *label460
    97 draw image 101 79 @plastanium 16 0
-    * label *label466
    98 draw image 101 59 @phase-fabric 16 0
-    * label *label472
    99 draw image 101 39 @surge-alloy 16 0
-    * label *label478
   100 draw image 101 19 @spore-pod 16 0
-    * label *label484
   101 drawflush display1
   102 set :x 71
   103 set :y 152
   104 # "Function: inline def eraseNumbers(in first_column)"
   105 draw color 0 0 80 255
   106 draw rect 23 0 70 176
-    * label *label51
   107 set :index 0
   108 set :item @sand
   109 op add *tmp35 @counter 1
 
   306 op sub :displayItem:x :x 11
   307 op idiv :displayItem:amount :displayItem:amount 10
   308 jump *label86 equal :displayItem:amount 0
-    * label *label216
   309 op mod *tmp133 :displayItem:amount 10
   310 # "Function: inline def drawDigit(in x, in y, in digit)"
   311 multijump *label530 *tmp133 0 (m:*label529)
 
   413 op sub :displayItem:x :x 22
   414 op idiv :displayItem:amount :displayItem:amount 10
   415 jump *label86 equal :displayItem:amount 0
-    * label *label266
   416 op mod *tmp133 :displayItem:amount 10
   417 # "Function: inline def drawDigit(in x, in y, in digit)"
   418 multijump *label554 *tmp133 0 (m:*label553)
 
   520 op sub :displayItem:x :x 33
   521 op idiv :displayItem:amount :displayItem:amount 10
   522 jump *label86 equal :displayItem:amount 0
-    * label *label316
   523 op mod *tmp133 :displayItem:amount 10
   524 # "Function: inline def drawDigit(in x, in y, in digit)"
   525 multijump *label578 *tmp133 0 (m:*label577)
 
   627 op sub :displayItem:x :x 44
   628 op idiv :displayItem:amount :displayItem:amount 10
   629 jump *label86 equal :displayItem:amount 0
-    * label *label366
   630 op mod *tmp133 :displayItem:amount 10
   631 # "Function: inline def drawDigit(in x, in y, in digit)"
   632 multijump *label602 *tmp133 0 (m:*label601)
 
   740 set :x 157
   741 # "Function: inline def eraseNumbers(in first_column)"
   742 draw color 0 0 80 255
-    * label *label138
   743 draw rect 109 0 176 176
   744 label *label135
   745 multijump *tmp35 0 0 (m:marker1)

Modifications by Final phase, Print Merging, iteration 1 (-14 instructions):
 
     3 set .MESSAGE null
     4 set .DISPLAY null
     5 label *label0
-    * print "Configuring storage display..."
-    * print "\n"
+    6 print "Configuring storage display...\n"
     7 set .LINKS @links
     8 set :n .LINKS
     9 jump *label5 lessThanEq .LINKS 0
    10 label *label140
    11 op sub :n :n 1
    12 getlink :block :n
-    * print "Found: "
-    * print :block
-    * print "\n"
+   13 print "Found: {0}\n"
+   14 format :block
    15 sensor *tmp5 :block @type
    16 jump *label7 notEqual *tmp5 @message
    17 set .MESSAGE :block
 
    38 label *label6
    39 jump *label140 greaterThan :n 0
    40 label *label5
-    * print "Message: "
-    * print .MESSAGE
-    * print "\n"
-    * print "Memory: "
-    * print .MEMORY
-    * print "\n"
-    * print "Container: "
-    * print .CONTAINER
-    * print "\n"
-    * print "Display: "
-    * print .DISPLAY
-    * print "\n"
+   41 print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
+   42 format .MESSAGE
+   43 format .MEMORY
+   44 format .CONTAINER
+   45 format .DISPLAY
    46 op equal *tmp7 .CONTAINER null
    47 op equal *tmp8 .DISPLAY null
    48 op or *tmp9 *tmp7 *tmp8
    49 jump *label15 equal *tmp9 false
-    * print "No container or display."
-    * print "\n"
+   50 print "No container or display.\n"
    51 label *label15
    52 printflush .MESSAGE
    53 jump *label0 equal .CONTAINER null
 
   738 drawflush display1
   739 op sub *tmp233 @time :start
   740 op floor :elapsed *tmp233
-    * print "Storage Display"
-    * print "\n"
-    * print "Elapsed: "
-    * print :elapsed
-    * print " "
-    * print "ms"
+  741 print "Storage Display\nElapsed: {0} ms"
+  742 format :elapsed
   743 printflush message1
   744 sensor *tmp12 .CONTAINER @dead
   745 op equal *tmp13 *tmp12 0

Final code before resolving virtual instructions:

label __start__
set .CONTAINER null
set .MEMORY null
set .MESSAGE null
set .DISPLAY null
label *label0
print "Configuring storage display...\n"
set .LINKS @links
set :n .LINKS
jump *label5 lessThanEq .LINKS 0
label *label140
op sub :n :n 1
getlink :block :n
print "Found: {0}\n"
format :block
sensor *tmp5 :block @type
jump *label7 notEqual *tmp5 @message
set .MESSAGE :block
jump *label6 always
label *label7
jump *label10 equal *tmp5 @memory-bank
jump *label9 notEqual *tmp5 @memory-cell
label *label10
set .MEMORY :block
jump *label6 always
label *label9
jump *label12 equal *tmp5 @vault
jump *label12 equal *tmp5 @container
jump *label12 equal *tmp5 @core-shard
jump *label12 equal *tmp5 @core-foundation
jump *label11 notEqual *tmp5 @core-nucleus
label *label12
set .CONTAINER :block
jump *label6 always
label *label11
jump *label13 notEqual *tmp5 @large-logic-display
set .DISPLAY :block
label *label13
label *label6
jump *label140 greaterThan :n 0
label *label5
print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
format .MESSAGE
format .MEMORY
format .CONTAINER
format .DISPLAY
op equal *tmp7 .CONTAINER null
op equal *tmp8 .DISPLAY null
op or *tmp9 *tmp7 *tmp8
jump *label15 equal *tmp9 false
print "No container or display.\n"
label *label15
printflush .MESSAGE
jump *label0 equal .CONTAINER null
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump __start__ equal *tmp18 false
label *label491
set :start @time
sensor .CAPACITY .CONTAINER @itemCapacity
op div .LIMIT .CAPACITY 5
draw stroke 2
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
draw image 15 159 @sand 16 0
draw image 15 139 @copper 16 0
draw image 15 119 @lead 16 0
draw image 15 99 @coal 16 0
draw image 15 79 @titanium 16 0
draw image 15 59 @thorium 16 0
draw image 15 39 @scrap 16 0
draw image 15 19 @graphite 16 0
draw color 255 255 255 255
draw image 101 159 @metaglass 16 0
draw image 101 139 @silicon 16 0
draw image 101 119 @pyratite 16 0
draw image 101 99 @blast-compound 16 0
draw image 101 79 @plastanium 16 0
draw image 101 59 @phase-fabric 16 0
draw image 101 39 @surge-alloy 16 0
draw image 101 19 @spore-pod 16 0
drawflush display1
set :x 71
set :y 152
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp35 @counter 1
jump *label52 always
multilabel *label55
set :item @copper
op add *tmp35 @counter 1
jump *label52 always
multilabel *label56
set :item @lead
op add *tmp35 @counter 1
jump *label52 always
multilabel *label57
set :item @coal
op add *tmp35 @counter 1
jump *label52 always
multilabel *label58
set :item @titanium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label59
set :item @thorium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label60
set :item @scrap
op add *tmp35 @counter 1
jump *label52 always
multilabel *label61
set :item @graphite
op add *tmp35 @counter 1
jump *label52 always
multilabel *label62
set :item @metaglass
op add *tmp35 @counter 1
jump *label52 always
multilabel *label63
set :item @silicon
op add *tmp35 @counter 1
jump *label52 always
multilabel *label64
set :item @pyratite
op add *tmp35 @counter 1
jump *label52 always
multilabel *label65
set :item @blast-compound
op add *tmp35 @counter 1
jump *label52 always
multilabel *label66
set :item @plastanium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label67
set :item @phase-fabric
op add *tmp35 @counter 1
jump *label52 always
multilabel *label68
set :item @surge-alloy
op add *tmp35 @counter 1
jump *label52 always
multilabel *label69
set :item @spore-pod
op add *tmp35 @counter 1
jump *label52 always
multilabel *label71
jump *label72 always
label *label52
# "Function: inline def displayItem(in index, in item, in x, in y)"
sensor :displayItem:amount .CONTAINER :item
op strictEqual *tmp38 .MEMORY null
jump *label74 equal *tmp38 false
jump *label76 notEqual :displayItem:amount .CAPACITY
draw color 0 255 0 255
jump *label166 always
label *label76
jump *label78 lessThanEq :displayItem:amount .LIMIT
draw color 255 255 0 255
jump *label166 always
label *label78
draw color 255 80 80 255
jump *label166 always
label *label74
read :displayItem:last .MEMORY :index
write :displayItem:amount .MEMORY :index
jump *label80 notEqual :displayItem:amount :displayItem:last
draw color 255 255 0 255
jump *label166 always
label *label80
jump *label82 greaterThanEq :displayItem:amount :displayItem:last
draw color 255 80 80 255
jump *label166 always
label *label82
draw color 0 255 0 255
jump *label166 always
label *label166
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label506 *tmp133 0
multilabel *label506
jump *label167 always
multilabel *label507
jump *label169 always
multilabel *label508
jump *label171 always
multilabel *label509
jump *label173 always
multilabel *label510
jump *label175 always
multilabel *label511
jump *label177 always
multilabel *label512
jump *label179 always
multilabel *label513
jump *label181 always
multilabel *label514
jump *label183 always
multilabel *label515
jump *label185 always
label *label167
op sub *tmp138 :x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label187 always
label *label169
op add *tmp142 :x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label187 always
label *label171
op add *tmp146 :x 7
draw line :x :y *tmp146 :y
op add *tmp147 :y 6
draw line :x :y :x *tmp147
draw line :x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :x *tmp154 *tmp146 *tmp154
jump *label187 always
label *label173
op add *tmp158 :x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :x :y *tmp158 :y
op add *tmp162 :y 6
draw line :x *tmp162 *tmp158 *tmp162
draw line :x *tmp160 *tmp158 *tmp160
jump *label187 always
label *label175
op add *tmp168 :x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :x *tmp171 *tmp168 *tmp171
draw line :x *tmp171 :x *tmp170
jump *label187 always
label *label177
op add *tmp176 :x 7
draw line :x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :x *tmp179 :x *tmp184
draw line :x *tmp184 *tmp176 *tmp184
jump *label187 always
label *label179
op add *tmp188 :y 12
draw line :x :y :x *tmp188
op add *tmp189 :x 7
draw line :x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :x *tmp192 *tmp189 *tmp192
draw line :x *tmp188 *tmp189 *tmp188
jump *label187 always
label *label181
op add *tmp200 :x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :x *tmp203 *tmp200 *tmp203
jump *label187 always
label *label183
op sub *tmp209 :x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :x 7
draw line :x *tmp212 *tmp213 *tmp212
jump *label187 always
label *label185
op add *tmp215 :x 7
draw line :x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :x *tmp219 *tmp215 *tmp219
draw line :x *tmp219 :x *tmp218
draw line :x *tmp218 *tmp215 *tmp218
label *label187
op sub :displayItem:x :x 11
op idiv :displayItem:amount :displayItem:amount 10
jump *label86 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label530 *tmp133 0
multilabel *label530
jump *label217 always
multilabel *label531
jump *label219 always
multilabel *label532
jump *label221 always
multilabel *label533
jump *label223 always
multilabel *label534
jump *label225 always
multilabel *label535
jump *label227 always
multilabel *label536
jump *label229 always
multilabel *label537
jump *label231 always
multilabel *label538
jump *label233 always
multilabel *label539
jump *label235 always
label *label217
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label237 always
label *label219
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label237 always
label *label221
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label237 always
label *label223
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label237 always
label *label225
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label237 always
label *label227
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label237 always
label *label229
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label237 always
label *label231
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label237 always
label *label233
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label237 always
label *label235
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label237
op sub :displayItem:x :x 22
op idiv :displayItem:amount :displayItem:amount 10
jump *label86 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label554 *tmp133 0
multilabel *label554
jump *label267 always
multilabel *label555
jump *label269 always
multilabel *label556
jump *label271 always
multilabel *label557
jump *label273 always
multilabel *label558
jump *label275 always
multilabel *label559
jump *label277 always
multilabel *label560
jump *label279 always
multilabel *label561
jump *label281 always
multilabel *label562
jump *label283 always
multilabel *label563
jump *label285 always
label *label267
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label287 always
label *label269
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label287 always
label *label271
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label287 always
label *label273
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label287 always
label *label275
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label287 always
label *label277
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label287 always
label *label279
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label287 always
label *label281
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label287 always
label *label283
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label287 always
label *label285
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label287
op sub :displayItem:x :x 33
op idiv :displayItem:amount :displayItem:amount 10
jump *label86 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label578 *tmp133 0
multilabel *label578
jump *label317 always
multilabel *label579
jump *label319 always
multilabel *label580
jump *label321 always
multilabel *label581
jump *label323 always
multilabel *label582
jump *label325 always
multilabel *label583
jump *label327 always
multilabel *label584
jump *label329 always
multilabel *label585
jump *label331 always
multilabel *label586
jump *label333 always
multilabel *label587
jump *label335 always
label *label317
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label337 always
label *label319
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label337 always
label *label321
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label337 always
label *label323
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label337 always
label *label325
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label337 always
label *label327
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label337 always
label *label329
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label337 always
label *label331
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label337 always
label *label333
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label337 always
label *label335
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label337
op sub :displayItem:x :x 44
op idiv :displayItem:amount :displayItem:amount 10
jump *label86 equal :displayItem:amount 0
op mod *tmp133 :displayItem:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
multijump *label602 *tmp133 0
multilabel *label602
jump *label367 always
multilabel *label603
jump *label369 always
multilabel *label604
jump *label371 always
multilabel *label605
jump *label373 always
multilabel *label606
jump *label375 always
multilabel *label607
jump *label377 always
multilabel *label608
jump *label379 always
multilabel *label609
jump *label381 always
multilabel *label610
jump *label383 always
multilabel *label611
jump *label385 always
label *label367
op sub *tmp138 :displayItem:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label387 always
label *label369
op add *tmp142 :displayItem:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label387 always
label *label371
op add *tmp146 :displayItem:x 7
draw line :displayItem:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem:x :y :displayItem:x *tmp147
draw line :displayItem:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem:x *tmp154 *tmp146 *tmp154
jump *label387 always
label *label373
op add *tmp158 :displayItem:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem:x *tmp162 *tmp158 *tmp162
draw line :displayItem:x *tmp160 *tmp158 *tmp160
jump *label387 always
label *label375
op add *tmp168 :displayItem:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem:x *tmp171 *tmp168 *tmp171
draw line :displayItem:x *tmp171 :displayItem:x *tmp170
jump *label387 always
label *label377
op add *tmp176 :displayItem:x 7
draw line :displayItem:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem:x *tmp179 :displayItem:x *tmp184
draw line :displayItem:x *tmp184 *tmp176 *tmp184
jump *label387 always
label *label379
op add *tmp188 :y 12
draw line :displayItem:x :y :displayItem:x *tmp188
op add *tmp189 :displayItem:x 7
draw line :displayItem:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem:x *tmp192 *tmp189 *tmp192
draw line :displayItem:x *tmp188 *tmp189 *tmp188
jump *label387 always
label *label381
op add *tmp200 :displayItem:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem:x *tmp203 *tmp200 *tmp203
jump *label387 always
label *label383
op sub *tmp209 :displayItem:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem:x 7
draw line :displayItem:x *tmp212 *tmp213 *tmp212
jump *label387 always
label *label385
op add *tmp215 :displayItem:x 7
draw line :displayItem:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem:x *tmp219 *tmp215 *tmp219
draw line :displayItem:x *tmp219 :displayItem:x *tmp218
draw line :displayItem:x *tmp218 *tmp215 *tmp218
label *label387
label *label86
op add :index :index 1
op sub :y :y 20
jump *label135 notEqual :index 8
drawflush display1
set :y 152
set :x 157
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label135
multijump *tmp35 0 0
multilabel *label70
label *label72
drawflush display1
op sub *tmp233 @time :start
op floor :elapsed *tmp233
print "Storage Display\nElapsed: {0} ms"
format :elapsed
printflush message1
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump *label491 notEqual *tmp18 false
