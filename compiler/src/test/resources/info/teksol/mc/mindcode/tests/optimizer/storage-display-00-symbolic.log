   649 instructions before optimizations.
    11 instructions eliminated by Temp Variables Elimination.
     3 instructions eliminated by Case Expression Optimization.
    64 instructions eliminated by Dead Code Elimination (5 iterations).
     3 instructions eliminated by Jump Normalization (2 passes, 4 iterations).
     9 instructions eliminated by Jump Optimization (4 iterations).
    19 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
   163 instructions eliminated by Data Flow Optimization (4 passes, 17 iterations).
     6 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   551 instructions added by Loop Unrolling (7 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions added by Case Switching (7 iterations).
     2 case expressions converted to switched jumps Case Switching.
    28 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
    62 instructions updated by JumpThreading.
   246 instructions eliminated by Unreachable Code Elimination.
    14 instructions eliminated by Print Merging.
   652 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 626):
    Replicate loop condition at line 56:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4
    Unroll loop at line 150:5                                    cost   521, benefit   156250.0, efficiency      299.9
  * Convert case at line 211:5                                   cost     3, benefit     7812.5, efficiency     2604.2 (+3 instructions)
    Convert case at line 163:5                                   cost     3, benefit     7812.5, efficiency     2604.2

Pass 1: speed optimization selection (cost limit 623):
    Replicate loop condition at line 56:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4
    Unroll loop at line 150:5                                    cost   533, benefit   156250.0, efficiency      293.2
  * Convert case at line 163:5                                   cost     3, benefit     7812.5, efficiency     2604.2 (+3 instructions)

Pass 1: speed optimization selection (cost limit 620):
    Replicate loop condition at line 56:1                        cost     7, benefit       25.0, efficiency        3.6
    Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4
  * Unroll loop at line 150:5                                    cost   545, benefit   156250.0, efficiency      286.7 (+543 instructions)

Pass 1: speed optimization selection (cost limit 77):
  * Replicate loop condition at line 56:1                        cost     7, benefit       25.0, efficiency        3.6 (+7 instructions)
  ! Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4

Pass 1: speed optimization selection (cost limit 70):
  ! Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4

Pass 2: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4

Pass 3: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at line 69:5                           cost    81, benefit     1575.0, efficiency       19.4

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-3 instructions):
 
    18 print :block
    19 print "\n"
    20 sensor *tmp5 :block @type
-    * set *tmp6 *tmp5
-    * jump *label8 equal *tmp6 @message
+   21 jump *label8 equal *tmp5 @message
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
    25 set *tmp4 .MESSAGE
    26 jump *label6 always
    27 label *label7
-    * jump *label10 equal *tmp6 @memory-bank
-    * jump *label10 equal *tmp6 @memory-cell
+   28 jump *label10 equal *tmp5 @memory-bank
+   29 jump *label10 equal *tmp5 @memory-cell
    30 jump *label9 always
    31 label *label10
    32 set .MEMORY :block
    33 set *tmp4 .MEMORY
    34 jump *label6 always
    35 label *label9
-    * jump *label12 equal *tmp6 @vault
-    * jump *label12 equal *tmp6 @container
-    * jump *label12 equal *tmp6 @core-shard
-    * jump *label12 equal *tmp6 @core-foundation
-    * jump *label12 equal *tmp6 @core-nucleus
+   36 jump *label12 equal *tmp5 @vault
+   37 jump *label12 equal *tmp5 @container
+   38 jump *label12 equal *tmp5 @core-shard
+   39 jump *label12 equal *tmp5 @core-foundation
+   40 jump *label12 equal *tmp5 @core-nucleus
    41 jump *label11 always
    42 label *label12
    43 set .CONTAINER :block
    44 set *tmp4 .CONTAINER
    45 jump *label6 always
    46 label *label11
-    * jump *label14 equal *tmp6 @large-logic-display
+   47 jump *label14 equal *tmp5 @large-logic-display
    48 jump *label13 always
    49 label *label14
    50 set .DISPLAY :block
 
   363 set :drawDigitSlanted.0:x :displayItem.0:x
   364 set :drawDigitSlanted.0:y :displayItem.0:y
   365 set :drawDigitSlanted.0:digit *tmp53
-    * set *tmp56 :drawDigitSlanted.0:digit
-    * jump *label92 equal *tmp56 0
+  366 jump *label92 equal :drawDigitSlanted.0:digit 0
   367 jump *label91 always
   368 label *label92
   369 op sub *tmp57 :drawDigitSlanted.0:x 2
 
   374 set *tmp55 null
   375 jump *label90 always
   376 label *label91
-    * jump *label94 equal *tmp56 1
+  377 jump *label94 equal :drawDigitSlanted.0:digit 1
   378 jump *label93 always
   379 label *label94
   380 op add *tmp61 :drawDigitSlanted.0:x 7
 
   386 set *tmp55 null
   387 jump *label90 always
   388 label *label93
-    * jump *label96 equal *tmp56 2
+  389 jump *label96 equal :drawDigitSlanted.0:digit 2
   390 jump *label95 always
   391 label *label96
   392 op add *tmp66 :drawDigitSlanted.0:x 7
 
   407 set *tmp55 null
   408 jump *label90 always
   409 label *label95
-    * jump *label98 equal *tmp56 3
+  410 jump *label98 equal :drawDigitSlanted.0:digit 3
   411 jump *label97 always
   412 label *label98
   413 op add *tmp77 :drawDigitSlanted.0:x 7
 
   428 set *tmp55 null
   429 jump *label90 always
   430 label *label97
-    * jump *label100 equal *tmp56 4
+  431 jump *label100 equal :drawDigitSlanted.0:digit 4
   432 jump *label99 always
   433 label *label100
   434 op add *tmp88 :drawDigitSlanted.0:x 7
 
   446 set *tmp55 null
   447 jump *label90 always
   448 label *label99
-    * jump *label102 equal *tmp56 5
+  449 jump *label102 equal :drawDigitSlanted.0:digit 5
   450 jump *label101 always
   451 label *label102
   452 op add *tmp97 :drawDigitSlanted.0:x 7
 
   466 set *tmp55 null
   467 jump *label90 always
   468 label *label101
-    * jump *label104 equal *tmp56 6
+  469 jump *label104 equal :drawDigitSlanted.0:digit 6
   470 jump *label103 always
   471 label *label104
   472 op sub *tmp107 :drawDigitSlanted.0:x 2
 
   481 set *tmp55 null
   482 jump *label90 always
   483 label *label103
-    * jump *label106 equal *tmp56 7
+  484 jump *label106 equal :drawDigitSlanted.0:digit 7
   485 jump *label105 always
   486 label *label106
   487 op add *tmp114 :drawDigitSlanted.0:x 7
 
   494 set *tmp55 null
   495 jump *label90 always
   496 label *label105
-    * jump *label108 equal *tmp56 8
+  497 jump *label108 equal :drawDigitSlanted.0:digit 8
   498 jump *label107 always
   499 label *label108
   500 op sub *tmp119 :drawDigitSlanted.0:x 2
 
   509 set *tmp55 null
   510 jump *label90 always
   511 label *label107
-    * jump *label110 equal *tmp56 9
+  512 jump *label110 equal :drawDigitSlanted.0:digit 9
   513 jump *label109 always
   514 label *label110
   515 op sub *tmp126 :drawDigitSlanted.0:x 2
 
   536 set :drawDigit.0:x :displayItem.0:x
   537 set :drawDigit.0:y :displayItem.0:y
   538 set :drawDigit.0:digit *tmp133
-    * set *tmp136 :drawDigit.0:digit
-    * jump *label114 equal *tmp136 0
+  539 jump *label114 equal :drawDigit.0:digit 0
   540 jump *label113 always
   541 label *label114
   542 op sub *tmp137 :drawDigit.0:x 2
 
   547 set *tmp135 null
   548 jump *label112 always
   549 label *label113
-    * jump *label116 equal *tmp136 1
+  550 jump *label116 equal :drawDigit.0:digit 1
   551 jump *label115 always
   552 label *label116
   553 op add *tmp141 :drawDigit.0:x 7
 
   559 set *tmp135 null
   560 jump *label112 always
   561 label *label115
-    * jump *label118 equal *tmp136 2
+  562 jump *label118 equal :drawDigit.0:digit 2
   563 jump *label117 always
   564 label *label118
   565 op add *tmp146 :drawDigit.0:x 7
 
   582 set *tmp135 null
   583 jump *label112 always
   584 label *label117
-    * jump *label120 equal *tmp136 3
+  585 jump *label120 equal :drawDigit.0:digit 3
   586 jump *label119 always
   587 label *label120
   588 op add *tmp158 :drawDigit.0:x 7
 
   602 set *tmp135 null
   603 jump *label112 always
   604 label *label119
-    * jump *label122 equal *tmp136 4
+  605 jump *label122 equal :drawDigit.0:digit 4
   606 jump *label121 always
   607 label *label122
   608 op add *tmp168 :drawDigit.0:x 7
 
   619 set *tmp135 null
   620 jump *label112 always
   621 label *label121
-    * jump *label124 equal *tmp136 5
+  622 jump *label124 equal :drawDigit.0:digit 5
   623 jump *label123 always
   624 label *label124
   625 op add *tmp176 :drawDigit.0:x 7
 
   642 set *tmp135 null
   643 jump *label112 always
   644 label *label123
-    * jump *label126 equal *tmp136 6
+  645 jump *label126 equal :drawDigit.0:digit 6
   646 jump *label125 always
   647 label *label126
   648 op add *tmp188 :drawDigit.0:y 12
 
   664 set *tmp135 null
   665 jump *label112 always
   666 label *label125
-    * jump *label128 equal *tmp136 7
+  667 jump *label128 equal :drawDigit.0:digit 7
   668 jump *label127 always
   669 label *label128
   670 op add *tmp199 :drawDigit.0:x 7
 
   681 set *tmp135 null
   682 jump *label112 always
   683 label *label127
-    * jump *label130 equal *tmp136 8
+  684 jump *label130 equal :drawDigit.0:digit 8
   685 jump *label129 always
   686 label *label130
   687 op sub *tmp208 :drawDigit.0:x 2
 
   696 set *tmp135 null
   697 jump *label112 always
   698 label *label129
-    * jump *label132 equal *tmp136 9
+  699 jump *label132 equal :drawDigit.0:digit 9
   700 jump *label131 always
   701 label *label132
   702 op add *tmp215 :drawDigit.0:x 7

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-23 instructions):
 
    22 jump *label7 always
    23 label *label8
    24 set .MESSAGE :block
-    * set *tmp4 .MESSAGE
    25 jump *label6 always
    26 label *label7
    27 jump *label10 equal *tmp5 @memory-bank
 
    29 jump *label9 always
    30 label *label10
    31 set .MEMORY :block
-    * set *tmp4 .MEMORY
    32 jump *label6 always
    33 label *label9
    34 jump *label12 equal *tmp5 @vault
 
    39 jump *label11 always
    40 label *label12
    41 set .CONTAINER :block
-    * set *tmp4 .CONTAINER
    42 jump *label6 always
    43 label *label11
    44 jump *label14 equal *tmp5 @large-logic-display
    45 jump *label13 always
    46 label *label14
    47 set .DISPLAY :block
-    * set *tmp4 .DISPLAY
    48 jump *label6 always
    49 label *label13
-    * set *tmp4 null
    50 label *label6
    51 label *label4
    52 jump *label3 always
 
    69 jump *label15 equal *tmp9 false
    70 print "No container or display."
    71 print "\n"
-    * set *tmp10 "No container or display."
    72 jump *label16 always
    73 label *label15
-    * set *tmp10 null
    74 label *label16
    75 printflush .MESSAGE
    76 label *label1
 
   106 draw rect 93 0 16 176
   107 set *tmp23 null
   108 label *label22
-    * set *tmp22 *tmp23
   109 label *label20
   110 # "Function: inline def eraseImages(in first_column)"
   111 set :eraseImages.1:first_column false
 
   118 draw rect 93 0 16 176
   119 set *tmp25 null
   120 label *label25
-    * set *tmp24 *tmp25
   121 label *label23
   122 draw color 255 255 255 255
   123 set :index 0
 
   199 set :y 152
   200 set :x 93
   201 draw color 255 255 255 255
-    * set *tmp32 null
   202 jump *label48 always
   203 label *label47
-    * set *tmp32 null
   204 label *label48
   205 label *label27
   206 multijump *tmp26 0 0 (m:marker0)
 
   221 draw rect 109 0 176 176
   222 set *tmp34 null
   223 label *label51
-    * set *tmp33 *tmp34
   224 label *label49
   225 set :index 0
   226 set :item @sand
 
   315 label *label79
   316 set *tmp41 *tmp43
   317 label *label77
-    * set *tmp39 *tmp41
   318 jump *label75 always
   319 label *label74
   320 set *tmp44 :displayItem.0:index
 
   339 label *label83
   340 set *tmp49 *tmp51
   341 label *label81
-    * set *tmp39 *tmp49
   342 label *label75
   343 set :displayItem.0:i 0
   344 label *label84
 
   514 label *label90
   515 set *tmp54 *tmp55
   516 label *label89
-    * set *tmp52 *tmp54
   517 jump *label88 always
   518 label *label87
   519 op mod *tmp133 :displayItem.0:amount 10
 
   708 label *label112
   709 set *tmp134 *tmp135
   710 label *label111
-    * set *tmp52 *tmp134
   711 label *label88
   712 op sub :displayItem.0:x :displayItem.0:x 11
   713 op idiv :displayItem.0:amount :displayItem.0:amount 10
   714 op equal *tmp227 :displayItem.0:amount 0
   715 jump *label133 equal *tmp227 false
   716 jump *label86 always
-    * set *tmp228 null
   717 jump *label134 always
   718 label *label133
-    * set *tmp228 null
   719 label *label134
   720 label *label85
   721 op add :displayItem.0:i :displayItem.0:i 1
   722 jump *label84 always
   723 label *label86
-    * set *tmp36 null
   724 label *label73
   725 op add :index :index 1
   726 op sub :y :y 20
 
   728 jump *label135 equal *tmp229 false
   729 jump *label137 equal true false
   730 drawflush display1
-    * set *tmp231 null
   731 jump *label138 always
   732 label *label137
-    * set *tmp231 null
   733 label *label138
   734 set :y 152
   735 set :x 157
 
   746 label *label141
   747 set *tmp232 *tmp233
   748 label *label139
-    * set *tmp230 *tmp232
   749 jump *label136 always
   750 label *label135
-    * set *tmp230 null
   751 label *label136
   752 label *label53
   753 multijump *tmp35 0 0 (m:marker1)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-13 instructions):
 
   100 draw color 0 0 80 255
   101 jump *label21 equal :eraseImages.0:first_column false
   102 draw rect 0 0 23 176
-    * set *tmp23 null
   103 jump *label22 always
   104 label *label21
   105 draw rect 93 0 16 176
-    * set *tmp23 null
   106 label *label22
   107 label *label20
   108 # "Function: inline def eraseImages(in first_column)"
 
   110 draw color 0 0 80 255
   111 jump *label24 equal :eraseImages.1:first_column false
   112 draw rect 0 0 23 176
-    * set *tmp25 null
   113 jump *label25 always
   114 label *label24
   115 draw rect 93 0 16 176
-    * set *tmp25 null
   116 label *label25
   117 label *label23
   118 draw color 255 255 255 255
 
   211 draw color 0 0 80 255
   212 jump *label50 equal :eraseNumbers.0:first_column false
   213 draw rect 23 0 70 176
-    * set *tmp34 null
   214 jump *label51 always
   215 label *label50
   216 draw rect 109 0 176 176
-    * set *tmp34 null
   217 label *label51
   218 label *label49
   219 set :index 0
 
   295 op equal *tmp40 :displayItem.0:amount .CAPACITY
   296 jump *label76 equal *tmp40 false
   297 draw color 0 255 0 255
-    * set *tmp41 null
   298 jump *label77 always
   299 label *label76
   300 op greaterThan *tmp42 :displayItem.0:amount .LIMIT
 
   306 draw color 255 80 80 255
   307 set *tmp43 null
   308 label *label79
-    * set *tmp41 *tmp43
   309 label *label77
   310 jump *label75 always
   311 label *label74
 
   317 op equal *tmp48 :displayItem.0:amount :displayItem.0:last
   318 jump *label80 equal *tmp48 false
   319 draw color 255 255 0 255
-    * set *tmp49 null
   320 jump *label81 always
   321 label *label80
   322 op lessThan *tmp50 :displayItem.0:amount :displayItem.0:last
 
   328 draw color 0 255 0 255
   329 set *tmp51 null
   330 label *label83
-    * set *tmp49 *tmp51
   331 label *label81
   332 label *label75
   333 set :displayItem.0:i 0
 
   502 label *label109
   503 set *tmp55 null
   504 label *label90
-    * set *tmp54 *tmp55
   505 label *label89
   506 jump *label88 always
   507 label *label87
 
   695 label *label131
   696 set *tmp135 null
   697 label *label112
-    * set *tmp134 *tmp135
   698 label *label111
   699 label *label88
   700 op sub :displayItem.0:x :displayItem.0:x 11
 
   732 draw rect 109 0 176 176
   733 set *tmp233 null
   734 label *label141
-    * set *tmp232 *tmp233
   735 label *label139
   736 jump *label136 always
   737 label *label135

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-28 instructions):
 
   300 op greaterThan *tmp42 :displayItem.0:amount .LIMIT
   301 jump *label78 equal *tmp42 false
   302 draw color 255 255 0 255
-    * set *tmp43 null
   303 jump *label79 always
   304 label *label78
   305 draw color 255 80 80 255
-    * set *tmp43 null
   306 label *label79
   307 label *label77
   308 jump *label75 always
 
   320 op lessThan *tmp50 :displayItem.0:amount :displayItem.0:last
   321 jump *label82 equal *tmp50 false
   322 draw color 255 80 80 255
-    * set *tmp51 null
   323 jump *label83 always
   324 label *label82
   325 draw color 0 255 0 255
-    * set *tmp51 null
   326 label *label83
   327 label *label81
   328 label *label75
 
   343 op sub *tmp59 :drawDigitSlanted.0:y 2
   344 op add *tmp60 *tmp59 1
   345 draw lineRect *tmp58 *tmp60 9 14
-    * set *tmp55 null
   346 jump *label90 always
   347 label *label91
   348 jump *label94 equal :drawDigitSlanted.0:digit 1
 
   354 op sub *tmp64 *tmp63 1
   355 op add *tmp65 :drawDigitSlanted.0:y 12
   356 draw line *tmp62 :drawDigitSlanted.0:y *tmp64 *tmp65
-    * set *tmp55 null
   357 jump *label90 always
   358 label *label93
   359 jump *label96 equal :drawDigitSlanted.0:digit 2
 
   374 op add *tmp75 :drawDigitSlanted.0:x 7
   375 op add *tmp76 :drawDigitSlanted.0:y 12
   376 draw line *tmp73 *tmp74 *tmp75 *tmp76
-    * set *tmp55 null
   377 jump *label90 always
   378 label *label95
   379 jump *label98 equal :drawDigitSlanted.0:digit 3
 
   394 op add *tmp86 :drawDigitSlanted.0:x 7
   395 op add *tmp87 :drawDigitSlanted.0:y 12
   396 draw line :drawDigitSlanted.0:x *tmp85 *tmp86 *tmp87
-    * set *tmp55 null
   397 jump *label90 always
   398 label *label97
   399 jump *label100 equal :drawDigitSlanted.0:digit 4
 
   411 op add *tmp95 :drawDigitSlanted.0:x 7
   412 op add *tmp96 :drawDigitSlanted.0:y 12
   413 draw line :drawDigitSlanted.0:x *tmp94 *tmp95 *tmp96
-    * set *tmp55 null
   414 jump *label90 always
   415 label *label99
   416 jump *label102 equal :drawDigitSlanted.0:digit 5
 
   430 op add *tmp105 :drawDigitSlanted.0:x 7
   431 op add *tmp106 :drawDigitSlanted.0:y 12
   432 draw line :drawDigitSlanted.0:x *tmp104 *tmp105 *tmp106
-    * set *tmp55 null
   433 jump *label90 always
   434 label *label101
   435 jump *label104 equal :drawDigitSlanted.0:digit 6
 
   444 op add *tmp112 :drawDigitSlanted.0:x 7
   445 op add *tmp113 :drawDigitSlanted.0:y 12
   446 draw line :drawDigitSlanted.0:x *tmp111 *tmp112 *tmp113
-    * set *tmp55 null
   447 jump *label90 always
   448 label *label103
   449 jump *label106 equal :drawDigitSlanted.0:digit 7
 
   456 op add *tmp117 :drawDigitSlanted.0:x 7
   457 op add *tmp118 :drawDigitSlanted.0:y 12
   458 draw line :drawDigitSlanted.0:x *tmp116 *tmp117 *tmp118
-    * set *tmp55 null
   459 jump *label90 always
   460 label *label105
   461 jump *label108 equal :drawDigitSlanted.0:digit 8
 
   470 op add *tmp124 :drawDigitSlanted.0:x 7
   471 op add *tmp125 :drawDigitSlanted.0:y 6
   472 draw line :drawDigitSlanted.0:x *tmp123 *tmp124 *tmp125
-    * set *tmp55 null
   473 jump *label90 always
   474 label *label107
   475 jump *label110 equal :drawDigitSlanted.0:digit 9
 
   484 op add *tmp131 :drawDigitSlanted.0:x 7
   485 op add *tmp132 :drawDigitSlanted.0:y 6
   486 draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp131 *tmp132
-    * set *tmp55 null
   487 jump *label90 always
   488 label *label109
-    * set *tmp55 null
   489 label *label90
   490 label *label89
   491 jump *label88 always
 
   503 op sub *tmp139 :drawDigit.0:y 2
   504 op add *tmp140 *tmp139 1
   505 draw lineRect *tmp138 *tmp140 9 14
-    * set *tmp135 null
   506 jump *label112 always
   507 label *label113
   508 jump *label116 equal :drawDigit.0:digit 1
 
   514 op sub *tmp144 *tmp143 1
   515 op add *tmp145 :drawDigit.0:y 12
   516 draw line *tmp142 :drawDigit.0:y *tmp144 *tmp145
-    * set *tmp135 null
   517 jump *label112 always
   518 label *label115
   519 jump *label118 equal :drawDigit.0:digit 2
 
   536 op add *tmp156 :drawDigit.0:x 7
   537 op add *tmp157 :drawDigit.0:y 12
   538 draw line :drawDigit.0:x *tmp155 *tmp156 *tmp157
-    * set *tmp135 null
   539 jump *label112 always
   540 label *label117
   541 jump *label120 equal :drawDigit.0:digit 3
 
   555 op add *tmp166 :drawDigit.0:x 7
   556 op add *tmp167 :drawDigit.0:y 12
   557 draw line :drawDigit.0:x *tmp165 *tmp166 *tmp167
-    * set *tmp135 null
   558 jump *label112 always
   559 label *label119
   560 jump *label122 equal :drawDigit.0:digit 4
 
   571 op add *tmp174 :drawDigit.0:y 6
   572 op add *tmp175 :drawDigit.0:y 12
   573 draw line :drawDigit.0:x *tmp174 :drawDigit.0:x *tmp175
-    * set *tmp135 null
   574 jump *label112 always
   575 label *label121
   576 jump *label124 equal :drawDigit.0:digit 5
 
   593 op add *tmp186 :drawDigit.0:x 7
   594 op add *tmp187 :drawDigit.0:y 12
   595 draw line :drawDigit.0:x *tmp185 *tmp186 *tmp187
-    * set *tmp135 null
   596 jump *label112 always
   597 label *label123
   598 jump *label126 equal :drawDigit.0:digit 6
 
   614 op add *tmp197 :drawDigit.0:x 7
   615 op add *tmp198 :drawDigit.0:y 12
   616 draw line :drawDigit.0:x *tmp196 *tmp197 *tmp198
-    * set *tmp135 null
   617 jump *label112 always
   618 label *label125
   619 jump *label128 equal :drawDigit.0:digit 7
 
   630 op sub *tmp206 *tmp205 1
   631 op add *tmp207 :drawDigit.0:y 12
   632 draw line :drawDigit.0:x *tmp204 *tmp206 *tmp207
-    * set *tmp135 null
   633 jump *label112 always
   634 label *label127
   635 jump *label130 equal :drawDigit.0:digit 8
 
   644 op add *tmp213 :drawDigit.0:x 7
   645 op add *tmp214 :drawDigit.0:y 6
   646 draw line :drawDigit.0:x *tmp212 *tmp213 *tmp214
-    * set *tmp135 null
   647 jump *label112 always
   648 label *label129
   649 jump *label132 equal :drawDigit.0:digit 9
 
   666 op add *tmp225 :drawDigit.0:x 7
   667 op add *tmp226 :drawDigit.0:y 12
   668 draw line :drawDigit.0:x *tmp224 *tmp225 *tmp226
-    * set *tmp135 null
   669 jump *label112 always
   670 label *label131
-    * set *tmp135 null
   671 label *label112
   672 label *label111
   673 label *label88
 
   700 draw color 0 0 80 255
   701 jump *label140 equal :eraseNumbers.1:first_column false
   702 draw rect 23 0 70 176
-    * set *tmp233 null
   703 jump *label141 always
   704 label *label140
   705 draw rect 109 0 176 176
-    * set *tmp233 null
   706 label *label141
   707 label *label139
   708 jump *label136 always

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-11 instructions):
 
     4 label *label0
     5 print "Configuring storage display..."
     6 print "\n"
-    * set *tmp0 @links
-    * set .LINKS *tmp0
+    7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
    10 op greaterThan *tmp1 :n 0
    11 jump *label5 equal *tmp1 false
-    * op sub *tmp2 :n 1
-    * set :n *tmp2
-    * getlink *tmp3 :n
-    * set :block *tmp3
+   12 op sub :n :n 1
+   13 getlink :block :n
    14 print "Found: "
    15 print :block
    16 print "\n"
 
    83 op equal *tmp17 .LINKS @links
    84 op land *tmp18 *tmp16 *tmp17
    85 jump *label19 equal *tmp18 false
-    * set *tmp19 @time
-    * set :start *tmp19
-    * sensor *tmp20 .CONTAINER @itemCapacity
-    * set .CAPACITY *tmp20
-    * op div *tmp21 .CAPACITY 5
-    * set .LIMIT *tmp21
+   86 set :start @time
+   87 sensor .CAPACITY .CONTAINER @itemCapacity
+   88 op div .LIMIT .CAPACITY 5
    89 draw stroke 2
    90 set :x 7
    91 set :y 152
 
   282 set :displayItem.0:item :item
   283 set :displayItem.0:x :x
   284 set :displayItem.0:y :y
-    * sensor *tmp37 .CONTAINER :displayItem.0:item
-    * set :displayItem.0:amount *tmp37
+  285 sensor :displayItem.0:amount .CONTAINER :displayItem.0:item
   286 op strictEqual *tmp38 .MEMORY null
   287 jump *label74 equal *tmp38 false
   288 op equal *tmp40 :displayItem.0:amount .CAPACITY
 
   300 label *label77
   301 jump *label75 always
   302 label *label74
-    * set *tmp44 :displayItem.0:index
-    * read *tmp45 .MEMORY *tmp44
-    * set :displayItem.0:last *tmp45
-    * set *tmp46 :displayItem.0:index
-    * write :displayItem.0:amount .MEMORY *tmp46
+  303 read :displayItem.0:last .MEMORY :displayItem.0:index
+  304 write :displayItem.0:amount .MEMORY :displayItem.0:index
   305 op equal *tmp48 :displayItem.0:amount :displayItem.0:last
   306 jump *label80 equal *tmp48 false
   307 draw color 255 255 0 255
 
   705 label *label54
   706 drawflush display1
   707 op sub *tmp234 @time :start
-    * op floor *tmp235 *tmp234
-    * set :elapsed *tmp235
+  708 op floor :elapsed *tmp234
   709 print "Storage Display"
   710 print "\n"
   711 print "Elapsed: "

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   319 set :displayItem.0:i 0
   320 label *label84
   321 jump *label86 greaterThanEq :displayItem.0:i 5
-    * jump *label87 equal false false
+  322 jump *label87 always
   323 op mod *tmp53 :displayItem.0:amount 10
   324 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   325 set :drawDigitSlanted.0:x :displayItem.0:x
 
   678 op sub :y :y 20
   679 op equal *tmp229 :index 8
   680 jump *label135 equal *tmp229 false
-    * jump *label137 equal true false
   681 drawflush display1
   682 jump *label138 always
   683 label *label137

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-24 instructions):
 
    15 print :block
    16 print "\n"
    17 sensor *tmp5 :block @type
-    * jump *label8 equal *tmp5 @message
-    * jump *label7 always
+   18 jump *label7 notEqual *tmp5 @message
    19 label *label8
    20 set .MESSAGE :block
    21 jump *label6 always
    22 label *label7
    23 jump *label10 equal *tmp5 @memory-bank
-    * jump *label10 equal *tmp5 @memory-cell
-    * jump *label9 always
+   24 jump *label9 notEqual *tmp5 @memory-cell
    25 label *label10
    26 set .MEMORY :block
    27 jump *label6 always
 
    30 jump *label12 equal *tmp5 @container
    31 jump *label12 equal *tmp5 @core-shard
    32 jump *label12 equal *tmp5 @core-foundation
-    * jump *label12 equal *tmp5 @core-nucleus
-    * jump *label11 always
+   33 jump *label11 notEqual *tmp5 @core-nucleus
    34 label *label12
    35 set .CONTAINER :block
    36 jump *label6 always
    37 label *label11
-    * jump *label14 equal *tmp5 @large-logic-display
-    * jump *label13 always
+   38 jump *label13 notEqual *tmp5 @large-logic-display
    39 label *label14
    40 set .DISPLAY :block
    41 jump *label6 always
 
   321 set :drawDigitSlanted.0:x :displayItem.0:x
   322 set :drawDigitSlanted.0:y :displayItem.0:y
   323 set :drawDigitSlanted.0:digit *tmp53
-    * jump *label92 equal :drawDigitSlanted.0:digit 0
-    * jump *label91 always
+  324 jump *label91 notEqual :drawDigitSlanted.0:digit 0
   325 label *label92
   326 op sub *tmp57 :drawDigitSlanted.0:x 2
   327 op add *tmp58 *tmp57 1
 
   330 draw lineRect *tmp58 *tmp60 9 14
   331 jump *label90 always
   332 label *label91
-    * jump *label94 equal :drawDigitSlanted.0:digit 1
-    * jump *label93 always
+  333 jump *label93 notEqual :drawDigitSlanted.0:digit 1
   334 label *label94
   335 op add *tmp61 :drawDigitSlanted.0:x 7
   336 op sub *tmp62 *tmp61 1
 
   340 draw line *tmp62 :drawDigitSlanted.0:y *tmp64 *tmp65
   341 jump *label90 always
   342 label *label93
-    * jump *label96 equal :drawDigitSlanted.0:digit 2
-    * jump *label95 always
+  343 jump *label95 notEqual :drawDigitSlanted.0:digit 2
   344 label *label96
   345 op add *tmp66 :drawDigitSlanted.0:x 7
   346 draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp66 :drawDigitSlanted.0:y
 
   359 draw line *tmp73 *tmp74 *tmp75 *tmp76
   360 jump *label90 always
   361 label *label95
-    * jump *label98 equal :drawDigitSlanted.0:digit 3
-    * jump *label97 always
+  362 jump *label97 notEqual :drawDigitSlanted.0:digit 3
   363 label *label98
   364 op add *tmp77 :drawDigitSlanted.0:x 7
   365 op add *tmp78 :drawDigitSlanted.0:y 6
 
   378 draw line :drawDigitSlanted.0:x *tmp85 *tmp86 *tmp87
   379 jump *label90 always
   380 label *label97
-    * jump *label100 equal :drawDigitSlanted.0:digit 4
-    * jump *label99 always
+  381 jump *label99 notEqual :drawDigitSlanted.0:digit 4
   382 label *label100
   383 op add *tmp88 :drawDigitSlanted.0:x 7
   384 op add *tmp89 :drawDigitSlanted.0:x 7
 
   394 draw line :drawDigitSlanted.0:x *tmp94 *tmp95 *tmp96
   395 jump *label90 always
   396 label *label99
-    * jump *label102 equal :drawDigitSlanted.0:digit 5
-    * jump *label101 always
+  397 jump *label101 notEqual :drawDigitSlanted.0:digit 5
   398 label *label102
   399 op add *tmp97 :drawDigitSlanted.0:x 7
   400 op add *tmp98 :drawDigitSlanted.0:y 6
 
   412 draw line :drawDigitSlanted.0:x *tmp104 *tmp105 *tmp106
   413 jump *label90 always
   414 label *label101
-    * jump *label104 equal :drawDigitSlanted.0:digit 6
-    * jump *label103 always
+  415 jump *label103 notEqual :drawDigitSlanted.0:digit 6
   416 label *label104
   417 op sub *tmp107 :drawDigitSlanted.0:x 2
   418 op add *tmp108 *tmp107 1
 
   425 draw line :drawDigitSlanted.0:x *tmp111 *tmp112 *tmp113
   426 jump *label90 always
   427 label *label103
-    * jump *label106 equal :drawDigitSlanted.0:digit 7
-    * jump *label105 always
+  428 jump *label105 notEqual :drawDigitSlanted.0:digit 7
   429 label *label106
   430 op add *tmp114 :drawDigitSlanted.0:x 7
   431 op add *tmp115 :drawDigitSlanted.0:y 12
 
   436 draw line :drawDigitSlanted.0:x *tmp116 *tmp117 *tmp118
   437 jump *label90 always
   438 label *label105
-    * jump *label108 equal :drawDigitSlanted.0:digit 8
-    * jump *label107 always
+  439 jump *label107 notEqual :drawDigitSlanted.0:digit 8
   440 label *label108
   441 op sub *tmp119 :drawDigitSlanted.0:x 2
   442 op add *tmp120 *tmp119 1
 
   449 draw line :drawDigitSlanted.0:x *tmp123 *tmp124 *tmp125
   450 jump *label90 always
   451 label *label107
-    * jump *label110 equal :drawDigitSlanted.0:digit 9
-    * jump *label109 always
+  452 jump *label109 notEqual :drawDigitSlanted.0:digit 9
   453 label *label110
   454 op sub *tmp126 :drawDigitSlanted.0:x 2
   455 op add *tmp127 *tmp126 1
 
   471 set :drawDigit.0:x :displayItem.0:x
   472 set :drawDigit.0:y :displayItem.0:y
   473 set :drawDigit.0:digit *tmp133
-    * jump *label114 equal :drawDigit.0:digit 0
-    * jump *label113 always
+  474 jump *label113 notEqual :drawDigit.0:digit 0
   475 label *label114
   476 op sub *tmp137 :drawDigit.0:x 2
   477 op add *tmp138 *tmp137 1
 
   480 draw lineRect *tmp138 *tmp140 9 14
   481 jump *label112 always
   482 label *label113
-    * jump *label116 equal :drawDigit.0:digit 1
-    * jump *label115 always
+  483 jump *label115 notEqual :drawDigit.0:digit 1
   484 label *label116
   485 op add *tmp141 :drawDigit.0:x 7
   486 op sub *tmp142 *tmp141 1
 
   490 draw line *tmp142 :drawDigit.0:y *tmp144 *tmp145
   491 jump *label112 always
   492 label *label115
-    * jump *label118 equal :drawDigit.0:digit 2
-    * jump *label117 always
+  493 jump *label117 notEqual :drawDigit.0:digit 2
   494 label *label118
   495 op add *tmp146 :drawDigit.0:x 7
   496 draw line :drawDigit.0:x :drawDigit.0:y *tmp146 :drawDigit.0:y
 
   511 draw line :drawDigit.0:x *tmp155 *tmp156 *tmp157
   512 jump *label112 always
   513 label *label117
-    * jump *label120 equal :drawDigit.0:digit 3
-    * jump *label119 always
+  514 jump *label119 notEqual :drawDigit.0:digit 3
   515 label *label120
   516 op add *tmp158 :drawDigit.0:x 7
   517 op add *tmp159 :drawDigit.0:x 7
 
   529 draw line :drawDigit.0:x *tmp165 *tmp166 *tmp167
   530 jump *label112 always
   531 label *label119
-    * jump *label122 equal :drawDigit.0:digit 4
-    * jump *label121 always
+  532 jump *label121 notEqual :drawDigit.0:digit 4
   533 label *label122
   534 op add *tmp168 :drawDigit.0:x 7
   535 op add *tmp169 :drawDigit.0:x 7
 
   544 draw line :drawDigit.0:x *tmp174 :drawDigit.0:x *tmp175
   545 jump *label112 always
   546 label *label121
-    * jump *label124 equal :drawDigit.0:digit 5
-    * jump *label123 always
+  547 jump *label123 notEqual :drawDigit.0:digit 5
   548 label *label124
   549 op add *tmp176 :drawDigit.0:x 7
   550 draw line :drawDigit.0:x :drawDigit.0:y *tmp176 :drawDigit.0:y
 
   565 draw line :drawDigit.0:x *tmp185 *tmp186 *tmp187
   566 jump *label112 always
   567 label *label123
-    * jump *label126 equal :drawDigit.0:digit 6
-    * jump *label125 always
+  568 jump *label125 notEqual :drawDigit.0:digit 6
   569 label *label126
   570 op add *tmp188 :drawDigit.0:y 12
   571 draw line :drawDigit.0:x :drawDigit.0:y :drawDigit.0:x *tmp188
 
   585 draw line :drawDigit.0:x *tmp196 *tmp197 *tmp198
   586 jump *label112 always
   587 label *label125
-    * jump *label128 equal :drawDigit.0:digit 7
-    * jump *label127 always
+  588 jump *label127 notEqual :drawDigit.0:digit 7
   589 label *label128
   590 op add *tmp199 :drawDigit.0:x 7
   591 op sub *tmp200 *tmp199 1
 
   600 draw line :drawDigit.0:x *tmp204 *tmp206 *tmp207
   601 jump *label112 always
   602 label *label127
-    * jump *label130 equal :drawDigit.0:digit 8
-    * jump *label129 always
+  603 jump *label129 notEqual :drawDigit.0:digit 8
   604 label *label130
   605 op sub *tmp208 :drawDigit.0:x 2
   606 op add *tmp209 *tmp208 1
 
   613 draw line :drawDigit.0:x *tmp212 *tmp213 *tmp214
   614 jump *label112 always
   615 label *label129
-    * jump *label132 equal :drawDigit.0:digit 9
-    * jump *label131 always
+  616 jump *label131 notEqual :drawDigit.0:digit 9
   617 label *label132
   618 op add *tmp215 :drawDigit.0:x 7
   619 draw line :drawDigit.0:x :drawDigit.0:y *tmp215 :drawDigit.0:y

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-9 instructions):
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * op greaterThan *tmp1 :n 0
-    * jump *label5 equal *tmp1 false
+   10 jump *label5 lessThanEq :n 0
    11 op sub :n :n 1
    12 getlink :block :n
    13 print "Found: "
 
    66 label *label16
    67 printflush .MESSAGE
    68 label *label1
-    * op equal *tmp11 .CONTAINER null
-    * jump *label0 notEqual *tmp11 false
+   69 jump *label0 equal .CONTAINER null
    70 label *label2
    71 label *label17
    72 sensor *tmp12 .CONTAINER @dead
 
   178 draw image *tmp27 *tmp30 :item 16 0
   179 op add :index :index 1
   180 op sub :y :y 20
-    * op equal *tmp31 :index 8
-    * jump *label47 equal *tmp31 false
+  181 jump *label47 notEqual :index 8
   182 set :y 152
   183 set :x 93
   184 draw color 255 255 255 255
 
   278 sensor :displayItem.0:amount .CONTAINER :displayItem.0:item
   279 op strictEqual *tmp38 .MEMORY null
   280 jump *label74 equal *tmp38 false
-    * op equal *tmp40 :displayItem.0:amount .CAPACITY
-    * jump *label76 equal *tmp40 false
+  281 jump *label76 notEqual :displayItem.0:amount .CAPACITY
   282 draw color 0 255 0 255
   283 jump *label77 always
   284 label *label76
-    * op greaterThan *tmp42 :displayItem.0:amount .LIMIT
-    * jump *label78 equal *tmp42 false
+  285 jump *label78 lessThanEq :displayItem.0:amount .LIMIT
   286 draw color 255 255 0 255
   287 jump *label79 always
   288 label *label78
 
   293 label *label74
   294 read :displayItem.0:last .MEMORY :displayItem.0:index
   295 write :displayItem.0:amount .MEMORY :displayItem.0:index
-    * op equal *tmp48 :displayItem.0:amount :displayItem.0:last
-    * jump *label80 equal *tmp48 false
+  296 jump *label80 notEqual :displayItem.0:amount :displayItem.0:last
   297 draw color 255 255 0 255
   298 jump *label81 always
   299 label *label80
-    * op lessThan *tmp50 :displayItem.0:amount :displayItem.0:last
-    * jump *label82 equal *tmp50 false
+  300 jump *label82 greaterThanEq :displayItem.0:amount :displayItem.0:last
   301 draw color 255 80 80 255
   302 jump *label83 always
   303 label *label82
 
   632 label *label88
   633 op sub :displayItem.0:x :displayItem.0:x 11
   634 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * op equal *tmp227 :displayItem.0:amount 0
-    * jump *label133 equal *tmp227 false
+  635 jump *label133 notEqual :displayItem.0:amount 0
   636 jump *label86 always
   637 jump *label134 always
   638 label *label133
 
   644 label *label73
   645 op add :index :index 1
   646 op sub :y :y 20
-    * op equal *tmp229 :index 8
-    * jump *label135 equal *tmp229 false
+  647 jump *label135 notEqual :index 8
   648 drawflush display1
   649 jump *label138 always
   650 label *label137

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    37 jump *label13 notEqual *tmp5 @large-logic-display
    38 label *label14
    39 set .DISPLAY :block
-    * jump *label6 always
    40 label *label13
    41 label *label6
    42 label *label4
 
    60 jump *label15 equal *tmp9 false
    61 print "No container or display."
    62 print "\n"
-    * jump *label16 always
    63 label *label15
    64 label *label16
    65 printflush .MESSAGE
 
   180 set :y 152
   181 set :x 93
   182 draw color 255 255 255 255
-    * jump *label48 always
   183 label *label47
   184 label *label48
   185 label *label27
 
   450 op add *tmp131 :drawDigitSlanted.0:x 7
   451 op add *tmp132 :drawDigitSlanted.0:y 6
   452 draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp131 *tmp132
-    * jump *label90 always
   453 label *label109
   454 label *label90
   455 label *label89
 
   621 op add *tmp225 :drawDigit.0:x 7
   622 op add *tmp226 :drawDigit.0:y 12
   623 draw line :drawDigit.0:x *tmp224 *tmp225 *tmp226
-    * jump *label112 always
   624 label *label131
   625 label *label112
   626 label *label111
 
   629 op idiv :displayItem.0:amount :displayItem.0:amount 10
   630 jump *label133 notEqual :displayItem.0:amount 0
   631 jump *label86 always
-    * jump *label134 always
   632 label *label133
   633 label *label134
   634 label *label85
 
   640 op sub :y :y 20
   641 jump *label135 notEqual :index 8
   642 drawflush display1
-    * jump *label138 always
   643 label *label137
   644 label *label138
   645 set :y 152
 
   654 draw rect 109 0 176 176
   655 label *label141
   656 label *label139
-    * jump *label136 always
   657 label *label135
   658 label *label136
   659 label *label53

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    84 # "Function: inline def eraseImages(in first_column)"
    85 set :eraseImages.0:first_column true
    86 draw color 0 0 80 255
-    * jump *label21 equal :eraseImages.0:first_column false
+   87 jump *label21 equal true false
    88 draw rect 0 0 23 176
    89 jump *label22 always
    90 label *label21
 
    94 # "Function: inline def eraseImages(in first_column)"
    95 set :eraseImages.1:first_column false
    96 draw color 0 0 80 255
-    * jump *label24 equal :eraseImages.1:first_column false
+   97 jump *label24 equal false false
    98 draw rect 0 0 23 176
    99 jump *label25 always
   100 label *label24
 
   171 label *label26
   172 op add *tmp27 :x 8
   173 op add *tmp28 :y 8
-    * op sub *tmp29 *tmp28 2
-    * op add *tmp30 *tmp29 1
+  174 op add *tmp29 :y 6
+  175 op sub *tmp30 *tmp28 1
   176 draw image *tmp27 *tmp30 :item 16 0
   177 op add :index :index 1
   178 op sub :y :y 20
 
   193 # "Function: inline def eraseNumbers(in first_column)"
   194 set :eraseNumbers.0:first_column true
   195 draw color 0 0 80 255
-    * jump *label50 equal :eraseNumbers.0:first_column false
+  196 jump *label50 equal true false
   197 draw rect 23 0 70 176
   198 jump *label51 always
   199 label *label50
 
   272 set :displayItem.0:item :item
   273 set :displayItem.0:x :x
   274 set :displayItem.0:y :y
-    * sensor :displayItem.0:amount .CONTAINER :displayItem.0:item
+  275 sensor :displayItem.0:amount .CONTAINER :item
   276 op strictEqual *tmp38 .MEMORY null
   277 jump *label74 equal *tmp38 false
   278 jump *label76 notEqual :displayItem.0:amount .CAPACITY
 
   288 label *label77
   289 jump *label75 always
   290 label *label74
-    * read :displayItem.0:last .MEMORY :displayItem.0:index
-    * write :displayItem.0:amount .MEMORY :displayItem.0:index
+  291 read :displayItem.0:last .MEMORY :index
+  292 write :displayItem.0:amount .MEMORY :index
   293 jump *label80 notEqual :displayItem.0:amount :displayItem.0:last
   294 draw color 255 255 0 255
   295 jump *label81 always
 
   309 op mod *tmp53 :displayItem.0:amount 10
   310 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   311 set :drawDigitSlanted.0:x :displayItem.0:x
-    * set :drawDigitSlanted.0:y :displayItem.0:y
-    * set :drawDigitSlanted.0:digit *tmp53
-    * jump *label91 notEqual :drawDigitSlanted.0:digit 0
+  312 set :drawDigitSlanted.0:y :y
+  313 jump *label91 notEqual *tmp53 0
   314 label *label92
-    * op sub *tmp57 :drawDigitSlanted.0:x 2
-    * op add *tmp58 *tmp57 1
-    * op sub *tmp59 :drawDigitSlanted.0:y 2
-    * op add *tmp60 *tmp59 1
+  315 op sub *tmp57 :displayItem.0:x 2
+  316 op sub *tmp58 :drawDigitSlanted.0:x 1
+  317 op sub *tmp59 :displayItem.0:y 2
+  318 op sub *tmp60 :drawDigitSlanted.0:y 1
   319 draw lineRect *tmp58 *tmp60 9 14
   320 jump *label90 always
   321 label *label91
-    * jump *label93 notEqual :drawDigitSlanted.0:digit 1
+  322 jump *label93 notEqual *tmp53 1
   323 label *label94
-    * op add *tmp61 :drawDigitSlanted.0:x 7
-    * op sub *tmp62 *tmp61 1
-    * op add *tmp63 :drawDigitSlanted.0:x 7
-    * op sub *tmp64 *tmp63 1
-    * op add *tmp65 :drawDigitSlanted.0:y 12
-    * draw line *tmp62 :drawDigitSlanted.0:y *tmp64 *tmp65
+  324 op add *tmp61 :displayItem.0:x 7
+  325 op add *tmp62 :drawDigitSlanted.0:x 6
+  326 op add *tmp63 :displayItem.0:x 7
+  327 op sub *tmp64 *tmp61 1
+  328 op add *tmp65 :displayItem.0:y 12
+  329 draw line *tmp62 :displayItem.0:y *tmp62 *tmp65
   330 jump *label90 always
   331 label *label93
-    * jump *label95 notEqual :drawDigitSlanted.0:digit 2
+  332 jump *label95 notEqual *tmp53 2
   333 label *label96
-    * op add *tmp66 :drawDigitSlanted.0:x 7
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp66 :drawDigitSlanted.0:y
-    * op add *tmp67 :drawDigitSlanted.0:x 7
-    * op add *tmp68 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp67 *tmp68
-    * op add *tmp69 :drawDigitSlanted.0:x 7
-    * op add *tmp70 :drawDigitSlanted.0:y 6
-    * op add *tmp71 :drawDigitSlanted.0:x 7
-    * op add *tmp72 :drawDigitSlanted.0:y 12
-    * draw line *tmp69 *tmp70 *tmp71 *tmp72
-    * op add *tmp73 :drawDigitSlanted.0:x 2
-    * op add *tmp74 :drawDigitSlanted.0:y 12
-    * op add *tmp75 :drawDigitSlanted.0:x 7
-    * op add *tmp76 :drawDigitSlanted.0:y 12
-    * draw line *tmp73 *tmp74 *tmp75 *tmp76
+  334 op add *tmp66 :displayItem.0:x 7
+  335 draw line :displayItem.0:x :displayItem.0:y *tmp66 :displayItem.0:y
+  336 op add *tmp67 :displayItem.0:x 7
+  337 op add *tmp68 :displayItem.0:y 6
+  338 draw line :displayItem.0:x :displayItem.0:y *tmp66 *tmp68
+  339 op add *tmp69 :displayItem.0:x 7
+  340 op add *tmp70 :displayItem.0:y 6
+  341 op add *tmp71 :displayItem.0:x 7
+  342 op add *tmp72 :displayItem.0:y 12
+  343 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  344 op add *tmp73 :displayItem.0:x 2
+  345 op add *tmp74 :displayItem.0:y 12
+  346 op add *tmp75 :displayItem.0:x 7
+  347 op add *tmp76 :displayItem.0:y 12
+  348 draw line *tmp73 *tmp72 *tmp66 *tmp72
   349 jump *label90 always
   350 label *label95
-    * jump *label97 notEqual :drawDigitSlanted.0:digit 3
+  351 jump *label97 notEqual *tmp53 3
   352 label *label98
-    * op add *tmp77 :drawDigitSlanted.0:x 7
-    * op add *tmp78 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp77 *tmp78
-    * op add *tmp79 :drawDigitSlanted.0:y 6
-    * op add *tmp80 :drawDigitSlanted.0:x 7
-    * op add *tmp81 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x *tmp79 *tmp80 *tmp81
-    * op add *tmp82 :drawDigitSlanted.0:y 6
-    * op add *tmp83 :drawDigitSlanted.0:x 7
-    * op add *tmp84 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp82 *tmp83 *tmp84
-    * op add *tmp85 :drawDigitSlanted.0:y 12
-    * op add *tmp86 :drawDigitSlanted.0:x 7
-    * op add *tmp87 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp85 *tmp86 *tmp87
+  353 op add *tmp77 :displayItem.0:x 7
+  354 op add *tmp78 :displayItem.0:y 6
+  355 draw line :displayItem.0:x :displayItem.0:y *tmp77 *tmp78
+  356 op add *tmp79 :displayItem.0:y 6
+  357 op add *tmp80 :displayItem.0:x 7
+  358 op add *tmp81 :displayItem.0:y 6
+  359 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+  360 op add *tmp82 :displayItem.0:y 6
+  361 op add *tmp83 :displayItem.0:x 7
+  362 op add *tmp84 :displayItem.0:y 12
+  363 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+  364 op add *tmp85 :displayItem.0:y 12
+  365 op add *tmp86 :displayItem.0:x 7
+  366 op add *tmp87 :displayItem.0:y 12
+  367 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
   368 jump *label90 always
   369 label *label97
-    * jump *label99 notEqual :drawDigitSlanted.0:digit 4
+  370 jump *label99 notEqual *tmp53 4
   371 label *label100
-    * op add *tmp88 :drawDigitSlanted.0:x 7
-    * op add *tmp89 :drawDigitSlanted.0:x 7
-    * op add *tmp90 :drawDigitSlanted.0:y 6
-    * draw line *tmp88 :drawDigitSlanted.0:y *tmp89 *tmp90
-    * op add *tmp91 :drawDigitSlanted.0:y 6
-    * op add *tmp92 :drawDigitSlanted.0:x 7
-    * op add *tmp93 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x *tmp91 *tmp92 *tmp93
-    * op add *tmp94 :drawDigitSlanted.0:y 6
-    * op add *tmp95 :drawDigitSlanted.0:x 7
-    * op add *tmp96 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp94 *tmp95 *tmp96
+  372 op add *tmp88 :displayItem.0:x 7
+  373 op add *tmp89 :displayItem.0:x 7
+  374 op add *tmp90 :displayItem.0:y 6
+  375 draw line *tmp88 :displayItem.0:y *tmp88 *tmp90
+  376 op add *tmp91 :displayItem.0:y 6
+  377 op add *tmp92 :displayItem.0:x 7
+  378 op add *tmp93 :displayItem.0:y 6
+  379 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+  380 op add *tmp94 :displayItem.0:y 6
+  381 op add *tmp95 :displayItem.0:x 7
+  382 op add *tmp96 :displayItem.0:y 12
+  383 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
   384 jump *label90 always
   385 label *label99
-    * jump *label101 notEqual :drawDigitSlanted.0:digit 5
+  386 jump *label101 notEqual *tmp53 5
   387 label *label102
-    * op add *tmp97 :drawDigitSlanted.0:x 7
-    * op add *tmp98 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp97 *tmp98
-    * op add *tmp99 :drawDigitSlanted.0:y 6
-    * op add *tmp100 :drawDigitSlanted.0:x 7
-    * op add *tmp101 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x *tmp99 *tmp100 *tmp101
-    * op add *tmp102 :drawDigitSlanted.0:y 6
-    * op add *tmp103 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp102 :drawDigitSlanted.0:x *tmp103
-    * op add *tmp104 :drawDigitSlanted.0:y 12
-    * op add *tmp105 :drawDigitSlanted.0:x 7
-    * op add *tmp106 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp104 *tmp105 *tmp106
+  388 op add *tmp97 :displayItem.0:x 7
+  389 op add *tmp98 :displayItem.0:y 6
+  390 draw line :displayItem.0:x :displayItem.0:y *tmp97 *tmp98
+  391 op add *tmp99 :displayItem.0:y 6
+  392 op add *tmp100 :displayItem.0:x 7
+  393 op add *tmp101 :displayItem.0:y 6
+  394 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+  395 op add *tmp102 :displayItem.0:y 6
+  396 op add *tmp103 :displayItem.0:y 12
+  397 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+  398 op add *tmp104 :displayItem.0:y 12
+  399 op add *tmp105 :displayItem.0:x 7
+  400 op add *tmp106 :displayItem.0:y 12
+  401 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
   402 jump *label90 always
   403 label *label101
-    * jump *label103 notEqual :drawDigitSlanted.0:digit 6
+  404 jump *label103 notEqual *tmp53 6
   405 label *label104
-    * op sub *tmp107 :drawDigitSlanted.0:x 2
-    * op add *tmp108 *tmp107 1
-    * op sub *tmp109 :drawDigitSlanted.0:y 2
-    * op add *tmp110 *tmp109 1
+  406 op sub *tmp107 :displayItem.0:x 2
+  407 op sub *tmp108 :drawDigitSlanted.0:x 1
+  408 op sub *tmp109 :displayItem.0:y 2
+  409 op sub *tmp110 :drawDigitSlanted.0:y 1
   410 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :drawDigitSlanted.0:y 6
-    * op add *tmp112 :drawDigitSlanted.0:x 7
-    * op add *tmp113 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp111 *tmp112 *tmp113
+  411 op add *tmp111 :displayItem.0:y 6
+  412 op add *tmp112 :displayItem.0:x 7
+  413 op add *tmp113 :displayItem.0:y 12
+  414 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
   415 jump *label90 always
   416 label *label103
-    * jump *label105 notEqual :drawDigitSlanted.0:digit 7
+  417 jump *label105 notEqual *tmp53 7
   418 label *label106
-    * op add *tmp114 :drawDigitSlanted.0:x 7
-    * op add *tmp115 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp114 *tmp115
-    * op add *tmp116 :drawDigitSlanted.0:y 12
-    * op add *tmp117 :drawDigitSlanted.0:x 7
-    * op add *tmp118 :drawDigitSlanted.0:y 12
-    * draw line :drawDigitSlanted.0:x *tmp116 *tmp117 *tmp118
+  419 op add *tmp114 :displayItem.0:x 7
+  420 op add *tmp115 :displayItem.0:y 12
+  421 draw line :displayItem.0:x :displayItem.0:y *tmp114 *tmp115
+  422 op add *tmp116 :displayItem.0:y 12
+  423 op add *tmp117 :displayItem.0:x 7
+  424 op add *tmp118 :displayItem.0:y 12
+  425 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
   426 jump *label90 always
   427 label *label105
-    * jump *label107 notEqual :drawDigitSlanted.0:digit 8
+  428 jump *label107 notEqual *tmp53 8
   429 label *label108
-    * op sub *tmp119 :drawDigitSlanted.0:x 2
-    * op add *tmp120 *tmp119 1
-    * op sub *tmp121 :drawDigitSlanted.0:y 2
-    * op add *tmp122 *tmp121 1
+  430 op sub *tmp119 :displayItem.0:x 2
+  431 op sub *tmp120 :drawDigitSlanted.0:x 1
+  432 op sub *tmp121 :displayItem.0:y 2
+  433 op sub *tmp122 :drawDigitSlanted.0:y 1
   434 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :drawDigitSlanted.0:y 6
-    * op add *tmp124 :drawDigitSlanted.0:x 7
-    * op add *tmp125 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x *tmp123 *tmp124 *tmp125
+  435 op add *tmp123 :displayItem.0:y 6
+  436 op add *tmp124 :displayItem.0:x 7
+  437 op add *tmp125 :displayItem.0:y 6
+  438 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
   439 jump *label90 always
   440 label *label107
-    * jump *label109 notEqual :drawDigitSlanted.0:digit 9
+  441 jump *label109 notEqual *tmp53 9
   442 label *label110
-    * op sub *tmp126 :drawDigitSlanted.0:x 2
-    * op add *tmp127 *tmp126 1
-    * op add *tmp128 :drawDigitSlanted.0:y 6
-    * op sub *tmp129 *tmp128 2
-    * op add *tmp130 *tmp129 1
+  443 op sub *tmp126 :displayItem.0:x 2
+  444 op sub *tmp127 :drawDigitSlanted.0:x 1
+  445 op add *tmp128 :displayItem.0:y 6
+  446 op add *tmp129 :drawDigitSlanted.0:y 4
+  447 op sub *tmp130 *tmp128 1
   448 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :drawDigitSlanted.0:x 7
-    * op add *tmp132 :drawDigitSlanted.0:y 6
-    * draw line :drawDigitSlanted.0:x :drawDigitSlanted.0:y *tmp131 *tmp132
+  449 op add *tmp131 :displayItem.0:x 7
+  450 op add *tmp132 :displayItem.0:y 6
+  451 draw line :displayItem.0:x :displayItem.0:y *tmp131 *tmp128
   452 label *label109
   453 label *label90
   454 label *label89
 
   457 op mod *tmp133 :displayItem.0:amount 10
   458 # "Function: inline def drawDigit(in x, in y, in digit)"
   459 set :drawDigit.0:x :displayItem.0:x
-    * set :drawDigit.0:y :displayItem.0:y
+  460 set :drawDigit.0:y :y
   461 set :drawDigit.0:digit *tmp133
-    * jump *label113 notEqual :drawDigit.0:digit 0
+  462 jump *label113 notEqual *tmp133 0
   463 label *label114
-    * op sub *tmp137 :drawDigit.0:x 2
-    * op add *tmp138 *tmp137 1
-    * op sub *tmp139 :drawDigit.0:y 2
-    * op add *tmp140 *tmp139 1
+  464 op sub *tmp137 :displayItem.0:x 2
+  465 op sub *tmp138 :drawDigit.0:x 1
+  466 op sub *tmp139 :displayItem.0:y 2
+  467 op sub *tmp140 :drawDigit.0:y 1
   468 draw lineRect *tmp138 *tmp140 9 14
   469 jump *label112 always
   470 label *label113
-    * jump *label115 notEqual :drawDigit.0:digit 1
+  471 jump *label115 notEqual *tmp133 1
   472 label *label116
-    * op add *tmp141 :drawDigit.0:x 7
-    * op sub *tmp142 *tmp141 1
-    * op add *tmp143 :drawDigit.0:x 7
-    * op sub *tmp144 *tmp143 1
-    * op add *tmp145 :drawDigit.0:y 12
-    * draw line *tmp142 :drawDigit.0:y *tmp144 *tmp145
+  473 op add *tmp141 :displayItem.0:x 7
+  474 op add *tmp142 :drawDigit.0:x 6
+  475 op add *tmp143 :displayItem.0:x 7
+  476 op sub *tmp144 *tmp141 1
+  477 op add *tmp145 :displayItem.0:y 12
+  478 draw line *tmp142 :displayItem.0:y *tmp142 *tmp145
   479 jump *label112 always
   480 label *label115
-    * jump *label117 notEqual :drawDigit.0:digit 2
+  481 jump *label117 notEqual *tmp133 2
   482 label *label118
-    * op add *tmp146 :drawDigit.0:x 7
-    * draw line :drawDigit.0:x :drawDigit.0:y *tmp146 :drawDigit.0:y
-    * op add *tmp147 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x :drawDigit.0:y :drawDigit.0:x *tmp147
-    * op add *tmp148 :drawDigit.0:y 6
-    * op add *tmp149 :drawDigit.0:x 7
-    * op add *tmp150 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp148 *tmp149 *tmp150
-    * op add *tmp151 :drawDigit.0:x 7
-    * op add *tmp152 :drawDigit.0:y 6
-    * op add *tmp153 :drawDigit.0:x 7
-    * op add *tmp154 :drawDigit.0:y 12
-    * draw line *tmp151 *tmp152 *tmp153 *tmp154
-    * op add *tmp155 :drawDigit.0:y 12
-    * op add *tmp156 :drawDigit.0:x 7
-    * op add *tmp157 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp155 *tmp156 *tmp157
+  483 op add *tmp146 :displayItem.0:x 7
+  484 draw line :displayItem.0:x :displayItem.0:y *tmp146 :displayItem.0:y
+  485 op add *tmp147 :displayItem.0:y 6
+  486 draw line :displayItem.0:x :displayItem.0:y :displayItem.0:x *tmp147
+  487 op add *tmp148 :displayItem.0:y 6
+  488 op add *tmp149 :displayItem.0:x 7
+  489 op add *tmp150 :displayItem.0:y 6
+  490 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+  491 op add *tmp151 :displayItem.0:x 7
+  492 op add *tmp152 :displayItem.0:y 6
+  493 op add *tmp153 :displayItem.0:x 7
+  494 op add *tmp154 :displayItem.0:y 12
+  495 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  496 op add *tmp155 :displayItem.0:y 12
+  497 op add *tmp156 :displayItem.0:x 7
+  498 op add *tmp157 :displayItem.0:y 12
+  499 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   500 jump *label112 always
   501 label *label117
-    * jump *label119 notEqual :drawDigit.0:digit 3
+  502 jump *label119 notEqual *tmp133 3
   503 label *label120
-    * op add *tmp158 :drawDigit.0:x 7
-    * op add *tmp159 :drawDigit.0:x 7
-    * op add *tmp160 :drawDigit.0:y 12
-    * draw line *tmp158 :drawDigit.0:y *tmp159 *tmp160
-    * op add *tmp161 :drawDigit.0:x 7
-    * draw line :drawDigit.0:x :drawDigit.0:y *tmp161 :drawDigit.0:y
-    * op add *tmp162 :drawDigit.0:y 6
-    * op add *tmp163 :drawDigit.0:x 7
-    * op add *tmp164 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp162 *tmp163 *tmp164
-    * op add *tmp165 :drawDigit.0:y 12
-    * op add *tmp166 :drawDigit.0:x 7
-    * op add *tmp167 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp165 *tmp166 *tmp167
+  504 op add *tmp158 :displayItem.0:x 7
+  505 op add *tmp159 :displayItem.0:x 7
+  506 op add *tmp160 :displayItem.0:y 12
+  507 draw line *tmp158 :displayItem.0:y *tmp158 *tmp160
+  508 op add *tmp161 :displayItem.0:x 7
+  509 draw line :displayItem.0:x :displayItem.0:y *tmp158 :displayItem.0:y
+  510 op add *tmp162 :displayItem.0:y 6
+  511 op add *tmp163 :displayItem.0:x 7
+  512 op add *tmp164 :displayItem.0:y 6
+  513 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+  514 op add *tmp165 :displayItem.0:y 12
+  515 op add *tmp166 :displayItem.0:x 7
+  516 op add *tmp167 :displayItem.0:y 12
+  517 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   518 jump *label112 always
   519 label *label119
-    * jump *label121 notEqual :drawDigit.0:digit 4
+  520 jump *label121 notEqual *tmp133 4
   521 label *label122
-    * op add *tmp168 :drawDigit.0:x 7
-    * op add *tmp169 :drawDigit.0:x 7
-    * op add *tmp170 :drawDigit.0:y 12
-    * draw line *tmp168 :drawDigit.0:y *tmp169 *tmp170
-    * op add *tmp171 :drawDigit.0:y 6
-    * op add *tmp172 :drawDigit.0:x 7
-    * op add *tmp173 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp171 *tmp172 *tmp173
-    * op add *tmp174 :drawDigit.0:y 6
-    * op add *tmp175 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp174 :drawDigit.0:x *tmp175
+  522 op add *tmp168 :displayItem.0:x 7
+  523 op add *tmp169 :displayItem.0:x 7
+  524 op add *tmp170 :displayItem.0:y 12
+  525 draw line *tmp168 :displayItem.0:y *tmp168 *tmp170
+  526 op add *tmp171 :displayItem.0:y 6
+  527 op add *tmp172 :displayItem.0:x 7
+  528 op add *tmp173 :displayItem.0:y 6
+  529 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+  530 op add *tmp174 :displayItem.0:y 6
+  531 op add *tmp175 :displayItem.0:y 12
+  532 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   533 jump *label112 always
   534 label *label121
-    * jump *label123 notEqual :drawDigit.0:digit 5
+  535 jump *label123 notEqual *tmp133 5
   536 label *label124
-    * op add *tmp176 :drawDigit.0:x 7
-    * draw line :drawDigit.0:x :drawDigit.0:y *tmp176 :drawDigit.0:y
-    * op add *tmp177 :drawDigit.0:x 7
-    * op add *tmp178 :drawDigit.0:x 7
-    * op add *tmp179 :drawDigit.0:y 6
-    * draw line *tmp177 :drawDigit.0:y *tmp178 *tmp179
-    * op add *tmp180 :drawDigit.0:y 6
-    * op add *tmp181 :drawDigit.0:x 7
-    * op add *tmp182 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp180 *tmp181 *tmp182
-    * op add *tmp183 :drawDigit.0:y 6
-    * op add *tmp184 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp183 :drawDigit.0:x *tmp184
-    * op add *tmp185 :drawDigit.0:y 12
-    * op add *tmp186 :drawDigit.0:x 7
-    * op add *tmp187 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp185 *tmp186 *tmp187
+  537 op add *tmp176 :displayItem.0:x 7
+  538 draw line :displayItem.0:x :displayItem.0:y *tmp176 :displayItem.0:y
+  539 op add *tmp177 :displayItem.0:x 7
+  540 op add *tmp178 :displayItem.0:x 7
+  541 op add *tmp179 :displayItem.0:y 6
+  542 draw line *tmp176 :displayItem.0:y *tmp176 *tmp179
+  543 op add *tmp180 :displayItem.0:y 6
+  544 op add *tmp181 :displayItem.0:x 7
+  545 op add *tmp182 :displayItem.0:y 6
+  546 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+  547 op add *tmp183 :displayItem.0:y 6
+  548 op add *tmp184 :displayItem.0:y 12
+  549 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+  550 op add *tmp185 :displayItem.0:y 12
+  551 op add *tmp186 :displayItem.0:x 7
+  552 op add *tmp187 :displayItem.0:y 12
+  553 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   554 jump *label112 always
   555 label *label123
-    * jump *label125 notEqual :drawDigit.0:digit 6
+  556 jump *label125 notEqual *tmp133 6
   557 label *label126
-    * op add *tmp188 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x :drawDigit.0:y :drawDigit.0:x *tmp188
-    * op add *tmp189 :drawDigit.0:x 7
-    * draw line :drawDigit.0:x :drawDigit.0:y *tmp189 :drawDigit.0:y
-    * op add *tmp190 :drawDigit.0:x 7
-    * op add *tmp191 :drawDigit.0:x 7
-    * op add *tmp192 :drawDigit.0:y 6
-    * draw line *tmp190 :drawDigit.0:y *tmp191 *tmp192
-    * op add *tmp193 :drawDigit.0:y 6
-    * op add *tmp194 :drawDigit.0:x 7
-    * op add *tmp195 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp193 *tmp194 *tmp195
-    * op add *tmp196 :drawDigit.0:y 12
-    * op add *tmp197 :drawDigit.0:x 7
-    * op add *tmp198 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp196 *tmp197 *tmp198
+  558 op add *tmp188 :displayItem.0:y 12
+  559 draw line :displayItem.0:x :displayItem.0:y :displayItem.0:x *tmp188
+  560 op add *tmp189 :displayItem.0:x 7
+  561 draw line :displayItem.0:x :displayItem.0:y *tmp189 :displayItem.0:y
+  562 op add *tmp190 :displayItem.0:x 7
+  563 op add *tmp191 :displayItem.0:x 7
+  564 op add *tmp192 :displayItem.0:y 6
+  565 draw line *tmp189 :displayItem.0:y *tmp189 *tmp192
+  566 op add *tmp193 :displayItem.0:y 6
+  567 op add *tmp194 :displayItem.0:x 7
+  568 op add *tmp195 :displayItem.0:y 6
+  569 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+  570 op add *tmp196 :displayItem.0:y 12
+  571 op add *tmp197 :displayItem.0:x 7
+  572 op add *tmp198 :displayItem.0:y 12
+  573 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   574 jump *label112 always
   575 label *label125
-    * jump *label127 notEqual :drawDigit.0:digit 7
+  576 jump *label127 notEqual *tmp133 7
   577 label *label128
-    * op add *tmp199 :drawDigit.0:x 7
-    * op sub *tmp200 *tmp199 1
-    * op add *tmp201 :drawDigit.0:x 7
-    * op sub *tmp202 *tmp201 1
-    * op add *tmp203 :drawDigit.0:y 12
-    * draw line *tmp200 :drawDigit.0:y *tmp202 *tmp203
-    * op add *tmp204 :drawDigit.0:y 12
-    * op add *tmp205 :drawDigit.0:x 7
-    * op sub *tmp206 *tmp205 1
-    * op add *tmp207 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp204 *tmp206 *tmp207
+  578 op add *tmp199 :displayItem.0:x 7
+  579 op add *tmp200 :drawDigit.0:x 6
+  580 op add *tmp201 :displayItem.0:x 7
+  581 op sub *tmp202 *tmp199 1
+  582 op add *tmp203 :displayItem.0:y 12
+  583 draw line *tmp200 :displayItem.0:y *tmp200 *tmp203
+  584 op add *tmp204 :displayItem.0:y 12
+  585 op add *tmp205 :displayItem.0:x 7
+  586 op sub *tmp206 *tmp199 1
+  587 op add *tmp207 :displayItem.0:y 12
+  588 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   589 jump *label112 always
   590 label *label127
-    * jump *label129 notEqual :drawDigit.0:digit 8
+  591 jump *label129 notEqual *tmp133 8
   592 label *label130
-    * op sub *tmp208 :drawDigit.0:x 2
-    * op add *tmp209 *tmp208 1
-    * op sub *tmp210 :drawDigit.0:y 2
-    * op add *tmp211 *tmp210 1
+  593 op sub *tmp208 :displayItem.0:x 2
+  594 op sub *tmp209 :drawDigit.0:x 1
+  595 op sub *tmp210 :displayItem.0:y 2
+  596 op sub *tmp211 :drawDigit.0:y 1
   597 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :drawDigit.0:y 6
-    * op add *tmp213 :drawDigit.0:x 7
-    * op add *tmp214 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp212 *tmp213 *tmp214
+  598 op add *tmp212 :displayItem.0:y 6
+  599 op add *tmp213 :displayItem.0:x 7
+  600 op add *tmp214 :displayItem.0:y 6
+  601 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   602 jump *label112 always
   603 label *label129
-    * jump *label131 notEqual :drawDigit.0:digit 9
+  604 jump *label131 notEqual *tmp133 9
   605 label *label132
-    * op add *tmp215 :drawDigit.0:x 7
-    * draw line :drawDigit.0:x :drawDigit.0:y *tmp215 :drawDigit.0:y
-    * op add *tmp216 :drawDigit.0:x 7
-    * op add *tmp217 :drawDigit.0:x 7
-    * op add *tmp218 :drawDigit.0:y 12
-    * draw line *tmp216 :drawDigit.0:y *tmp217 *tmp218
-    * op add *tmp219 :drawDigit.0:y 6
-    * op add *tmp220 :drawDigit.0:x 7
-    * op add *tmp221 :drawDigit.0:y 6
-    * draw line :drawDigit.0:x *tmp219 *tmp220 *tmp221
-    * op add *tmp222 :drawDigit.0:y 6
-    * op add *tmp223 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp222 :drawDigit.0:x *tmp223
-    * op add *tmp224 :drawDigit.0:y 12
-    * op add *tmp225 :drawDigit.0:x 7
-    * op add *tmp226 :drawDigit.0:y 12
-    * draw line :drawDigit.0:x *tmp224 *tmp225 *tmp226
+  606 op add *tmp215 :displayItem.0:x 7
+  607 draw line :displayItem.0:x :displayItem.0:y *tmp215 :displayItem.0:y
+  608 op add *tmp216 :displayItem.0:x 7
+  609 op add *tmp217 :displayItem.0:x 7
+  610 op add *tmp218 :displayItem.0:y 12
+  611 draw line *tmp215 :displayItem.0:y *tmp215 *tmp218
+  612 op add *tmp219 :displayItem.0:y 6
+  613 op add *tmp220 :displayItem.0:x 7
+  614 op add *tmp221 :displayItem.0:y 6
+  615 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+  616 op add *tmp222 :displayItem.0:y 6
+  617 op add *tmp223 :displayItem.0:y 12
+  618 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+  619 op add *tmp224 :displayItem.0:y 12
+  620 op add *tmp225 :displayItem.0:x 7
+  621 op add *tmp226 :displayItem.0:y 12
+  622 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
   623 label *label131
   624 label *label112
   625 label *label111
 
   646 # "Function: inline def eraseNumbers(in first_column)"
   647 set :eraseNumbers.1:first_column false
   648 draw color 0 0 80 255
-    * jump *label140 equal :eraseNumbers.1:first_column false
+  649 jump *label140 equal false false
   650 draw rect 23 0 70 176
   651 jump *label141 always
   652 label *label140

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-60 instructions):
 
    82 set :x 7
    83 set :y 152
    84 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages.0:first_column true
    85 draw color 0 0 80 255
    86 jump *label21 equal true false
    87 draw rect 0 0 23 176
 
    91 label *label22
    92 label *label20
    93 # "Function: inline def eraseImages(in first_column)"
-    * set :eraseImages.1:first_column false
    94 draw color 0 0 80 255
    95 jump *label24 equal false false
    96 draw rect 0 0 23 176
 
   169 label *label26
   170 op add *tmp27 :x 8
   171 op add *tmp28 :y 8
-    * op add *tmp29 :y 6
-    * op sub *tmp30 *tmp28 1
+  172 op add *tmp30 :y 7
   173 draw image *tmp27 *tmp30 :item 16 0
   174 op add :index :index 1
   175 op sub :y :y 20
 
   188 set :x 71
   189 set :y 152
   190 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers.0:first_column true
   191 draw color 0 0 80 255
   192 jump *label50 equal true false
   193 draw rect 23 0 70 176
 
   264 jump *label72 always
   265 label *label52
   266 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem.0:index :index
-    * set :displayItem.0:item :item
   267 set :displayItem.0:x :x
   268 set :displayItem.0:y :y
   269 sensor :displayItem.0:amount .CONTAINER :item
 
   300 label *label84
   301 jump *label86 greaterThanEq :displayItem.0:i 5
   302 jump *label87 always
-    * op mod *tmp53 :displayItem.0:amount 10
   303 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * set :drawDigitSlanted.0:x :displayItem.0:x
-    * set :drawDigitSlanted.0:y :y
   304 jump *label91 notEqual *tmp53 0
   305 label *label92
-    * op sub *tmp57 :displayItem.0:x 2
-    * op sub *tmp58 :drawDigitSlanted.0:x 1
-    * op sub *tmp59 :displayItem.0:y 2
-    * op sub *tmp60 :drawDigitSlanted.0:y 1
+  306 op sub *tmp58 :displayItem.0:x 1
+  307 op sub *tmp59 :y 2
+  308 op sub *tmp60 :y 1
   309 draw lineRect *tmp58 *tmp60 9 14
   310 jump *label90 always
   311 label *label91
   312 jump *label93 notEqual *tmp53 1
   313 label *label94
-    * op add *tmp61 :displayItem.0:x 7
-    * op add *tmp62 :drawDigitSlanted.0:x 6
-    * op add *tmp63 :displayItem.0:x 7
-    * op sub *tmp64 *tmp61 1
-    * op add *tmp65 :displayItem.0:y 12
-    * draw line *tmp62 :displayItem.0:y *tmp62 *tmp65
+  314 op add *tmp62 :displayItem.0:x 6
+  315 op add *tmp64 :displayItem.0:x 6
+  316 op add *tmp65 :y 12
+  317 draw line *tmp62 :y *tmp62 *tmp65
   318 jump *label90 always
   319 label *label93
   320 jump *label95 notEqual *tmp53 2
   321 label *label96
   322 op add *tmp66 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp66 :displayItem.0:y
-    * op add *tmp67 :displayItem.0:x 7
-    * op add *tmp68 :displayItem.0:y 6
-    * draw line :displayItem.0:x :displayItem.0:y *tmp66 *tmp68
-    * op add *tmp69 :displayItem.0:x 7
-    * op add *tmp70 :displayItem.0:y 6
-    * op add *tmp71 :displayItem.0:x 7
-    * op add *tmp72 :displayItem.0:y 12
+  323 draw line :displayItem.0:x :y *tmp66 :y
+  324 op add *tmp68 :y 6
+  325 draw line :displayItem.0:x :y *tmp66 *tmp68
+  326 op add *tmp70 :y 6
+  327 op add *tmp72 :y 12
   328 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp73 :displayItem.0:x 2
-    * op add *tmp74 :displayItem.0:y 12
-    * op add *tmp75 :displayItem.0:x 7
-    * op add *tmp76 :displayItem.0:y 12
+  329 op add *tmp74 :y 12
+  330 op add *tmp76 :y 12
   331 draw line *tmp73 *tmp72 *tmp66 *tmp72
   332 jump *label90 always
   333 label *label95
   334 jump *label97 notEqual *tmp53 3
   335 label *label98
   336 op add *tmp77 :displayItem.0:x 7
-    * op add *tmp78 :displayItem.0:y 6
-    * draw line :displayItem.0:x :displayItem.0:y *tmp77 *tmp78
-    * op add *tmp79 :displayItem.0:y 6
-    * op add *tmp80 :displayItem.0:x 7
-    * op add *tmp81 :displayItem.0:y 6
+  337 op add *tmp78 :y 6
+  338 draw line :displayItem.0:x :y *tmp77 *tmp78
+  339 op add *tmp79 :y 6
+  340 op add *tmp81 :y 6
   341 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :displayItem.0:y 6
-    * op add *tmp83 :displayItem.0:x 7
-    * op add *tmp84 :displayItem.0:y 12
+  342 op add *tmp82 :y 6
+  343 op add *tmp84 :y 12
   344 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :displayItem.0:y 12
-    * op add *tmp86 :displayItem.0:x 7
-    * op add *tmp87 :displayItem.0:y 12
+  345 op add *tmp85 :y 12
+  346 op add *tmp87 :y 12
   347 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
   348 jump *label90 always
   349 label *label97
   350 jump *label99 notEqual *tmp53 4
   351 label *label100
   352 op add *tmp88 :displayItem.0:x 7
-    * op add *tmp89 :displayItem.0:x 7
-    * op add *tmp90 :displayItem.0:y 6
-    * draw line *tmp88 :displayItem.0:y *tmp88 *tmp90
-    * op add *tmp91 :displayItem.0:y 6
-    * op add *tmp92 :displayItem.0:x 7
-    * op add *tmp93 :displayItem.0:y 6
+  353 op add *tmp90 :y 6
+  354 draw line *tmp88 :y *tmp88 *tmp90
+  355 op add *tmp91 :y 6
+  356 op add *tmp93 :y 6
   357 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :displayItem.0:y 6
-    * op add *tmp95 :displayItem.0:x 7
-    * op add *tmp96 :displayItem.0:y 12
+  358 op add *tmp94 :y 6
+  359 op add *tmp96 :y 12
   360 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
   361 jump *label90 always
   362 label *label99
   363 jump *label101 notEqual *tmp53 5
   364 label *label102
   365 op add *tmp97 :displayItem.0:x 7
-    * op add *tmp98 :displayItem.0:y 6
-    * draw line :displayItem.0:x :displayItem.0:y *tmp97 *tmp98
-    * op add *tmp99 :displayItem.0:y 6
-    * op add *tmp100 :displayItem.0:x 7
-    * op add *tmp101 :displayItem.0:y 6
+  366 op add *tmp98 :y 6
+  367 draw line :displayItem.0:x :y *tmp97 *tmp98
+  368 op add *tmp99 :y 6
+  369 op add *tmp101 :y 6
   370 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :displayItem.0:y 6
-    * op add *tmp103 :displayItem.0:y 12
+  371 op add *tmp102 :y 6
+  372 op add *tmp103 :y 12
   373 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * op add *tmp104 :displayItem.0:y 12
-    * op add *tmp105 :displayItem.0:x 7
-    * op add *tmp106 :displayItem.0:y 12
+  374 op add *tmp104 :y 12
+  375 op add *tmp106 :y 12
   376 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
   377 jump *label90 always
   378 label *label101
   379 jump *label103 notEqual *tmp53 6
   380 label *label104
-    * op sub *tmp107 :displayItem.0:x 2
-    * op sub *tmp108 :drawDigitSlanted.0:x 1
-    * op sub *tmp109 :displayItem.0:y 2
-    * op sub *tmp110 :drawDigitSlanted.0:y 1
+  381 op sub *tmp108 :displayItem.0:x 1
+  382 op sub *tmp109 :y 2
+  383 op sub *tmp110 :y 1
   384 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :displayItem.0:y 6
-    * op add *tmp112 :displayItem.0:x 7
-    * op add *tmp113 :displayItem.0:y 12
+  385 op add *tmp111 :y 6
+  386 op add *tmp113 :y 12
   387 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
   388 jump *label90 always
   389 label *label103
   390 jump *label105 notEqual *tmp53 7
   391 label *label106
   392 op add *tmp114 :displayItem.0:x 7
-    * op add *tmp115 :displayItem.0:y 12
-    * draw line :displayItem.0:x :displayItem.0:y *tmp114 *tmp115
-    * op add *tmp116 :displayItem.0:y 12
-    * op add *tmp117 :displayItem.0:x 7
-    * op add *tmp118 :displayItem.0:y 12
+  393 op add *tmp115 :y 12
+  394 draw line :displayItem.0:x :y *tmp114 *tmp115
+  395 op add *tmp116 :y 12
+  396 op add *tmp118 :y 12
   397 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
   398 jump *label90 always
   399 label *label105
   400 jump *label107 notEqual *tmp53 8
   401 label *label108
-    * op sub *tmp119 :displayItem.0:x 2
-    * op sub *tmp120 :drawDigitSlanted.0:x 1
-    * op sub *tmp121 :displayItem.0:y 2
-    * op sub *tmp122 :drawDigitSlanted.0:y 1
+  402 op sub *tmp120 :displayItem.0:x 1
+  403 op sub *tmp121 :y 2
+  404 op sub *tmp122 :y 1
   405 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :displayItem.0:y 6
-    * op add *tmp124 :displayItem.0:x 7
-    * op add *tmp125 :displayItem.0:y 6
+  406 op add *tmp123 :y 6
+  407 op add *tmp125 :y 6
   408 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
   409 jump *label90 always
   410 label *label107
   411 jump *label109 notEqual *tmp53 9
   412 label *label110
-    * op sub *tmp126 :displayItem.0:x 2
-    * op sub *tmp127 :drawDigitSlanted.0:x 1
-    * op add *tmp128 :displayItem.0:y 6
-    * op add *tmp129 :drawDigitSlanted.0:y 4
-    * op sub *tmp130 *tmp128 1
+  413 op sub *tmp127 :displayItem.0:x 1
+  414 op add *tmp128 :y 6
+  415 op add *tmp129 :y 4
+  416 op add *tmp130 :displayItem.0:y 5
   417 draw lineRect *tmp127 *tmp130 9 8
   418 op add *tmp131 :displayItem.0:x 7
-    * op add *tmp132 :displayItem.0:y 6
-    * draw line :displayItem.0:x :displayItem.0:y *tmp131 *tmp128
+  419 op add *tmp132 :y 6
+  420 draw line :displayItem.0:x :y *tmp131 *tmp128
   421 label *label109
   422 label *label90
   423 label *label89
 
   427 # "Function: inline def drawDigit(in x, in y, in digit)"
   428 set :drawDigit.0:x :displayItem.0:x
   429 set :drawDigit.0:y :y
-    * set :drawDigit.0:digit *tmp133
   430 jump *label113 notEqual *tmp133 0
   431 label *label114
-    * op sub *tmp137 :displayItem.0:x 2
-    * op sub *tmp138 :drawDigit.0:x 1
-    * op sub *tmp139 :displayItem.0:y 2
-    * op sub *tmp140 :drawDigit.0:y 1
+  432 op sub *tmp138 :displayItem.0:x 1
+  433 op sub *tmp139 :y 2
+  434 op sub *tmp140 :y 1
   435 draw lineRect *tmp138 *tmp140 9 14
   436 jump *label112 always
   437 label *label113
   438 jump *label115 notEqual *tmp133 1
   439 label *label116
   440 op add *tmp141 :displayItem.0:x 7
-    * op add *tmp142 :drawDigit.0:x 6
-    * op add *tmp143 :displayItem.0:x 7
-    * op sub *tmp144 *tmp141 1
-    * op add *tmp145 :displayItem.0:y 12
-    * draw line *tmp142 :displayItem.0:y *tmp142 *tmp145
+  441 op add *tmp142 :displayItem.0:x 6
+  442 op add *tmp144 :displayItem.0:x 6
+  443 op add *tmp145 :y 12
+  444 draw line *tmp142 :y *tmp142 *tmp145
   445 jump *label112 always
   446 label *label115
   447 jump *label117 notEqual *tmp133 2
   448 label *label118
   449 op add *tmp146 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp146 :displayItem.0:y
-    * op add *tmp147 :displayItem.0:y 6
-    * draw line :displayItem.0:x :displayItem.0:y :displayItem.0:x *tmp147
-    * op add *tmp148 :displayItem.0:y 6
-    * op add *tmp149 :displayItem.0:x 7
-    * op add *tmp150 :displayItem.0:y 6
+  450 draw line :displayItem.0:x :y *tmp146 :y
+  451 op add *tmp147 :y 6
+  452 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+  453 op add *tmp148 :y 6
+  454 op add *tmp150 :y 6
   455 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
-    * op add *tmp151 :displayItem.0:x 7
-    * op add *tmp152 :displayItem.0:y 6
-    * op add *tmp153 :displayItem.0:x 7
-    * op add *tmp154 :displayItem.0:y 12
+  456 op add *tmp152 :y 6
+  457 op add *tmp154 :y 12
   458 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :displayItem.0:y 12
-    * op add *tmp156 :displayItem.0:x 7
-    * op add *tmp157 :displayItem.0:y 12
+  459 op add *tmp155 :y 12
+  460 op add *tmp157 :y 12
   461 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   462 jump *label112 always
   463 label *label117
   464 jump *label119 notEqual *tmp133 3
   465 label *label120
   466 op add *tmp158 :displayItem.0:x 7
-    * op add *tmp159 :displayItem.0:x 7
-    * op add *tmp160 :displayItem.0:y 12
-    * draw line *tmp158 :displayItem.0:y *tmp158 *tmp160
-    * op add *tmp161 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp158 :displayItem.0:y
-    * op add *tmp162 :displayItem.0:y 6
-    * op add *tmp163 :displayItem.0:x 7
-    * op add *tmp164 :displayItem.0:y 6
+  467 op add *tmp160 :y 12
+  468 draw line *tmp158 :y *tmp158 *tmp160
+  469 draw line :displayItem.0:x :y *tmp158 :y
+  470 op add *tmp162 :y 6
+  471 op add *tmp164 :y 6
   472 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :displayItem.0:y 12
-    * op add *tmp166 :displayItem.0:x 7
-    * op add *tmp167 :displayItem.0:y 12
+  473 op add *tmp165 :y 12
+  474 op add *tmp167 :y 12
   475 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   476 jump *label112 always
   477 label *label119
   478 jump *label121 notEqual *tmp133 4
   479 label *label122
   480 op add *tmp168 :displayItem.0:x 7
-    * op add *tmp169 :displayItem.0:x 7
-    * op add *tmp170 :displayItem.0:y 12
-    * draw line *tmp168 :displayItem.0:y *tmp168 *tmp170
-    * op add *tmp171 :displayItem.0:y 6
-    * op add *tmp172 :displayItem.0:x 7
-    * op add *tmp173 :displayItem.0:y 6
+  481 op add *tmp170 :y 12
+  482 draw line *tmp168 :y *tmp168 *tmp170
+  483 op add *tmp171 :y 6
+  484 op add *tmp173 :y 6
   485 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :displayItem.0:y 6
-    * op add *tmp175 :displayItem.0:y 12
+  486 op add *tmp174 :y 6
+  487 op add *tmp175 :y 12
   488 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   489 jump *label112 always
   490 label *label121
   491 jump *label123 notEqual *tmp133 5
   492 label *label124
   493 op add *tmp176 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp176 :displayItem.0:y
-    * op add *tmp177 :displayItem.0:x 7
-    * op add *tmp178 :displayItem.0:x 7
-    * op add *tmp179 :displayItem.0:y 6
-    * draw line *tmp176 :displayItem.0:y *tmp176 *tmp179
-    * op add *tmp180 :displayItem.0:y 6
-    * op add *tmp181 :displayItem.0:x 7
-    * op add *tmp182 :displayItem.0:y 6
+  494 draw line :displayItem.0:x :y *tmp176 :y
+  495 op add *tmp179 :y 6
+  496 draw line *tmp176 :y *tmp176 *tmp179
+  497 op add *tmp180 :y 6
+  498 op add *tmp182 :y 6
   499 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :displayItem.0:y 6
-    * op add *tmp184 :displayItem.0:y 12
+  500 op add *tmp183 :y 6
+  501 op add *tmp184 :y 12
   502 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
-    * op add *tmp185 :displayItem.0:y 12
-    * op add *tmp186 :displayItem.0:x 7
-    * op add *tmp187 :displayItem.0:y 12
+  503 op add *tmp185 :y 12
+  504 op add *tmp187 :y 12
   505 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   506 jump *label112 always
   507 label *label123
   508 jump *label125 notEqual *tmp133 6
   509 label *label126
-    * op add *tmp188 :displayItem.0:y 12
-    * draw line :displayItem.0:x :displayItem.0:y :displayItem.0:x *tmp188
+  510 op add *tmp188 :y 12
+  511 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
   512 op add *tmp189 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp189 :displayItem.0:y
-    * op add *tmp190 :displayItem.0:x 7
-    * op add *tmp191 :displayItem.0:x 7
-    * op add *tmp192 :displayItem.0:y 6
-    * draw line *tmp189 :displayItem.0:y *tmp189 *tmp192
-    * op add *tmp193 :displayItem.0:y 6
-    * op add *tmp194 :displayItem.0:x 7
-    * op add *tmp195 :displayItem.0:y 6
+  513 draw line :displayItem.0:x :y *tmp189 :y
+  514 op add *tmp192 :y 6
+  515 draw line *tmp189 :y *tmp189 *tmp192
+  516 op add *tmp193 :y 6
+  517 op add *tmp195 :y 6
   518 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :displayItem.0:y 12
-    * op add *tmp197 :displayItem.0:x 7
-    * op add *tmp198 :displayItem.0:y 12
+  519 op add *tmp196 :y 12
+  520 op add *tmp198 :y 12
   521 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   522 jump *label112 always
   523 label *label125
   524 jump *label127 notEqual *tmp133 7
   525 label *label128
   526 op add *tmp199 :displayItem.0:x 7
-    * op add *tmp200 :drawDigit.0:x 6
-    * op add *tmp201 :displayItem.0:x 7
-    * op sub *tmp202 *tmp199 1
-    * op add *tmp203 :displayItem.0:y 12
-    * draw line *tmp200 :displayItem.0:y *tmp200 *tmp203
-    * op add *tmp204 :displayItem.0:y 12
-    * op add *tmp205 :displayItem.0:x 7
-    * op sub *tmp206 *tmp199 1
-    * op add *tmp207 :displayItem.0:y 12
+  527 op add *tmp200 :displayItem.0:x 6
+  528 op add *tmp202 :displayItem.0:x 6
+  529 op add *tmp203 :y 12
+  530 draw line *tmp200 :y *tmp200 *tmp203
+  531 op add *tmp204 :y 12
+  532 op add *tmp206 :displayItem.0:x 6
+  533 op add *tmp207 :y 12
   534 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   535 jump *label112 always
   536 label *label127
   537 jump *label129 notEqual *tmp133 8
   538 label *label130
-    * op sub *tmp208 :displayItem.0:x 2
-    * op sub *tmp209 :drawDigit.0:x 1
-    * op sub *tmp210 :displayItem.0:y 2
-    * op sub *tmp211 :drawDigit.0:y 1
+  539 op sub *tmp209 :displayItem.0:x 1
+  540 op sub *tmp210 :y 2
+  541 op sub *tmp211 :y 1
   542 draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :displayItem.0:y 6
+  543 op add *tmp212 :y 6
   544 op add *tmp213 :displayItem.0:x 7
-    * op add *tmp214 :displayItem.0:y 6
+  545 op add *tmp214 :y 6
   546 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   547 jump *label112 always
   548 label *label129
   549 jump *label131 notEqual *tmp133 9
   550 label *label132
   551 op add *tmp215 :displayItem.0:x 7
-    * draw line :displayItem.0:x :displayItem.0:y *tmp215 :displayItem.0:y
-    * op add *tmp216 :displayItem.0:x 7
-    * op add *tmp217 :displayItem.0:x 7
-    * op add *tmp218 :displayItem.0:y 12
-    * draw line *tmp215 :displayItem.0:y *tmp215 *tmp218
-    * op add *tmp219 :displayItem.0:y 6
-    * op add *tmp220 :displayItem.0:x 7
-    * op add *tmp221 :displayItem.0:y 6
+  552 draw line :displayItem.0:x :y *tmp215 :y
+  553 op add *tmp218 :y 12
+  554 draw line *tmp215 :y *tmp215 *tmp218
+  555 op add *tmp219 :y 6
+  556 op add *tmp221 :y 6
   557 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :displayItem.0:y 6
-    * op add *tmp223 :displayItem.0:y 12
+  558 op add *tmp222 :y 6
+  559 op add *tmp223 :y 12
   560 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
-    * op add *tmp224 :displayItem.0:y 12
-    * op add *tmp225 :displayItem.0:x 7
-    * op add *tmp226 :displayItem.0:y 12
+  561 op add *tmp224 :y 12
+  562 op add *tmp226 :y 12
   563 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
   564 label *label131
   565 label *label112
 
   585 set :y 152
   586 set :x 157
   587 # "Function: inline def eraseNumbers(in first_column)"
-    * set :eraseNumbers.1:first_column false
   588 draw color 0 0 80 255
   589 jump *label140 equal false false
   590 draw rect 23 0 70 176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-92 instructions):
 
   168 jump *label46 always
   169 label *label26
   170 op add *tmp27 :x 8
-    * op add *tmp28 :y 8
   171 op add *tmp30 :y 7
   172 draw image *tmp27 *tmp30 :item 16 0
   173 op add :index :index 1
 
   264 label *label52
   265 # "Function: inline def displayItem(in index, in item, in x, in y)"
   266 set :displayItem.0:x :x
-    * set :displayItem.0:y :y
   267 sensor :displayItem.0:amount .CONTAINER :item
   268 op strictEqual *tmp38 .MEMORY null
   269 jump *label74 equal *tmp38 false
 
   301 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   302 jump *label91 notEqual *tmp53 0
   303 label *label92
-    * op sub *tmp58 :displayItem.0:x 1
-    * op sub *tmp59 :y 2
-    * op sub *tmp60 :y 1
   304 draw lineRect *tmp58 *tmp60 9 14
   305 jump *label90 always
   306 label *label91
   307 jump *label93 notEqual *tmp53 1
   308 label *label94
-    * op add *tmp62 :displayItem.0:x 6
-    * op add *tmp64 :displayItem.0:x 6
-    * op add *tmp65 :y 12
   309 draw line *tmp62 :y *tmp62 *tmp65
   310 jump *label90 always
   311 label *label93
   312 jump *label95 notEqual *tmp53 2
   313 label *label96
-    * op add *tmp66 :displayItem.0:x 7
   314 draw line :displayItem.0:x :y *tmp66 :y
-    * op add *tmp68 :y 6
   315 draw line :displayItem.0:x :y *tmp66 *tmp68
-    * op add *tmp70 :y 6
-    * op add *tmp72 :y 12
   316 draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * op add *tmp74 :y 12
-    * op add *tmp76 :y 12
   317 draw line *tmp73 *tmp72 *tmp66 *tmp72
   318 jump *label90 always
   319 label *label95
   320 jump *label97 notEqual *tmp53 3
   321 label *label98
-    * op add *tmp77 :displayItem.0:x 7
-    * op add *tmp78 :y 6
   322 draw line :displayItem.0:x :y *tmp77 *tmp78
-    * op add *tmp79 :y 6
-    * op add *tmp81 :y 6
   323 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * op add *tmp82 :y 6
-    * op add *tmp84 :y 12
   324 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * op add *tmp85 :y 12
-    * op add *tmp87 :y 12
   325 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
   326 jump *label90 always
   327 label *label97
   328 jump *label99 notEqual *tmp53 4
   329 label *label100
-    * op add *tmp88 :displayItem.0:x 7
-    * op add *tmp90 :y 6
   330 draw line *tmp88 :y *tmp88 *tmp90
-    * op add *tmp91 :y 6
-    * op add *tmp93 :y 6
   331 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * op add *tmp94 :y 6
-    * op add *tmp96 :y 12
   332 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
   333 jump *label90 always
   334 label *label99
   335 jump *label101 notEqual *tmp53 5
   336 label *label102
-    * op add *tmp97 :displayItem.0:x 7
-    * op add *tmp98 :y 6
   337 draw line :displayItem.0:x :y *tmp97 *tmp98
-    * op add *tmp99 :y 6
-    * op add *tmp101 :y 6
   338 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * op add *tmp102 :y 6
-    * op add *tmp103 :y 12
   339 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * op add *tmp104 :y 12
-    * op add *tmp106 :y 12
   340 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
   341 jump *label90 always
   342 label *label101
   343 jump *label103 notEqual *tmp53 6
   344 label *label104
-    * op sub *tmp108 :displayItem.0:x 1
-    * op sub *tmp109 :y 2
-    * op sub *tmp110 :y 1
   345 draw lineRect *tmp108 *tmp110 9 8
-    * op add *tmp111 :y 6
-    * op add *tmp113 :y 12
   346 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
   347 jump *label90 always
   348 label *label103
   349 jump *label105 notEqual *tmp53 7
   350 label *label106
-    * op add *tmp114 :displayItem.0:x 7
-    * op add *tmp115 :y 12
   351 draw line :displayItem.0:x :y *tmp114 *tmp115
-    * op add *tmp116 :y 12
-    * op add *tmp118 :y 12
   352 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
   353 jump *label90 always
   354 label *label105
   355 jump *label107 notEqual *tmp53 8
   356 label *label108
-    * op sub *tmp120 :displayItem.0:x 1
-    * op sub *tmp121 :y 2
-    * op sub *tmp122 :y 1
   357 draw lineRect *tmp120 *tmp122 9 14
-    * op add *tmp123 :y 6
-    * op add *tmp125 :y 6
   358 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
   359 jump *label90 always
   360 label *label107
   361 jump *label109 notEqual *tmp53 9
   362 label *label110
-    * op sub *tmp127 :displayItem.0:x 1
-    * op add *tmp128 :y 6
-    * op add *tmp129 :y 4
-    * op add *tmp130 :displayItem.0:y 5
+  363 op add *tmp130 :y 5
   364 draw lineRect *tmp127 *tmp130 9 8
-    * op add *tmp131 :displayItem.0:x 7
-    * op add *tmp132 :y 6
   365 draw line :displayItem.0:x :y *tmp131 *tmp128
   366 label *label109
   367 label *label90
 
   370 label *label87
   371 op mod *tmp133 :displayItem.0:amount 10
   372 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * set :drawDigit.0:x :displayItem.0:x
-    * set :drawDigit.0:y :y
   373 jump *label113 notEqual *tmp133 0
   374 label *label114
   375 op sub *tmp138 :displayItem.0:x 1
-    * op sub *tmp139 :y 2
   376 op sub *tmp140 :y 1
   377 draw lineRect *tmp138 *tmp140 9 14
   378 jump *label112 always
   379 label *label113
   380 jump *label115 notEqual *tmp133 1
   381 label *label116
-    * op add *tmp141 :displayItem.0:x 7
   382 op add *tmp142 :displayItem.0:x 6
-    * op add *tmp144 :displayItem.0:x 6
   383 op add *tmp145 :y 12
   384 draw line *tmp142 :y *tmp142 *tmp145
   385 jump *label112 always
 
   390 draw line :displayItem.0:x :y *tmp146 :y
   391 op add *tmp147 :y 6
   392 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
-    * op add *tmp148 :y 6
-    * op add *tmp150 :y 6
   393 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
-    * op add *tmp152 :y 6
   394 op add *tmp154 :y 12
   395 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * op add *tmp155 :y 12
-    * op add *tmp157 :y 12
   396 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   397 jump *label112 always
   398 label *label117
 
   403 draw line *tmp158 :y *tmp158 *tmp160
   404 draw line :displayItem.0:x :y *tmp158 :y
   405 op add *tmp162 :y 6
-    * op add *tmp164 :y 6
   406 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
-    * op add *tmp165 :y 12
-    * op add *tmp167 :y 12
   407 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   408 jump *label112 always
   409 label *label119
 
   413 op add *tmp170 :y 12
   414 draw line *tmp168 :y *tmp168 *tmp170
   415 op add *tmp171 :y 6
-    * op add *tmp173 :y 6
   416 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
-    * op add *tmp174 :y 6
-    * op add *tmp175 :y 12
   417 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   418 jump *label112 always
   419 label *label121
 
   423 draw line :displayItem.0:x :y *tmp176 :y
   424 op add *tmp179 :y 6
   425 draw line *tmp176 :y *tmp176 *tmp179
-    * op add *tmp180 :y 6
-    * op add *tmp182 :y 6
   426 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
-    * op add *tmp183 :y 6
   427 op add *tmp184 :y 12
   428 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
-    * op add *tmp185 :y 12
-    * op add *tmp187 :y 12
   429 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   430 jump *label112 always
   431 label *label123
 
   437 draw line :displayItem.0:x :y *tmp189 :y
   438 op add *tmp192 :y 6
   439 draw line *tmp189 :y *tmp189 *tmp192
-    * op add *tmp193 :y 6
-    * op add *tmp195 :y 6
   440 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
-    * op add *tmp196 :y 12
-    * op add *tmp198 :y 12
   441 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   442 jump *label112 always
   443 label *label125
   444 jump *label127 notEqual *tmp133 7
   445 label *label128
-    * op add *tmp199 :displayItem.0:x 7
   446 op add *tmp200 :displayItem.0:x 6
-    * op add *tmp202 :displayItem.0:x 6
   447 op add *tmp203 :y 12
   448 draw line *tmp200 :y *tmp200 *tmp203
-    * op add *tmp204 :y 12
-    * op add *tmp206 :displayItem.0:x 6
-    * op add *tmp207 :y 12
   449 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   450 jump *label112 always
   451 label *label127
   452 jump *label129 notEqual *tmp133 8
   453 label *label130
   454 op sub *tmp209 :displayItem.0:x 1
-    * op sub *tmp210 :y 2
   455 op sub *tmp211 :y 1
   456 draw lineRect *tmp209 *tmp211 9 14
   457 op add *tmp212 :y 6
   458 op add *tmp213 :displayItem.0:x 7
-    * op add *tmp214 :y 6
   459 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   460 jump *label112 always
   461 label *label129
 
   466 op add *tmp218 :y 12
   467 draw line *tmp215 :y *tmp215 *tmp218
   468 op add *tmp219 :y 6
-    * op add *tmp221 :y 6
   469 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
-    * op add *tmp222 :y 6
-    * op add *tmp223 :y 12
   470 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
-    * op add *tmp224 :y 12
-    * op add *tmp226 :y 12
   471 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
   472 label *label131
   473 label *label112

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
   360 label *label107
   361 jump *label109 notEqual *tmp53 9
   362 label *label110
-    * op add *tmp130 :y 5
   363 draw lineRect *tmp127 *tmp130 9 8
   364 draw line :displayItem.0:x :y *tmp131 *tmp128
   365 label *label109

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     8 set :n .LINKS
     9 label *label3
    10 jump *label5 lessThanEq :n 0
+   11 label *label142
    12 op sub :n :n 1
    13 getlink :block :n
    14 print "Found: "
 
    41 label *label13
    42 label *label6
    43 label *label4
-    * jump *label3 always
+   44 jump *label142 greaterThan :n 0
    45 label *label5
    46 print "Message: "
    47 print .MESSAGE
 
   297 label *label75
   298 set :displayItem.0:i 0
   299 label *label84
-    * jump *label86 greaterThanEq :displayItem.0:i 5
+  300 label *label143
   301 jump *label87 always
   302 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
   303 jump *label91 notEqual *tmp53 0
 
   481 label *label134
   482 label *label85
   483 op add :displayItem.0:i :displayItem.0:i 1
-    * jump *label84 always
+  484 jump *label143 lessThan :displayItem.0:i 5
   485 label *label86
   486 label *label73
   487 op add :index :index 1

Modifications by Convert case at line 211:5 (+3 instructions):
 
   300 label *label143
   301 jump *label87 always
   302 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label91 notEqual *tmp53 0
+  303 jump *label144 lessThan *tmp53 0
+  304 jump *label144 greaterThan *tmp53 9
+  305 multijump *label146 *tmp53 0 (m:*label145)
+  306 multilabel *label146 (m:*label145)
+  307 jump *label92 always
+  308 multilabel *label147 (m:*label145)
+  309 jump *label94 always
+  310 multilabel *label148 (m:*label145)
+  311 jump *label96 always
+  312 multilabel *label149 (m:*label145)
+  313 jump *label98 always
+  314 multilabel *label150 (m:*label145)
+  315 jump *label100 always
+  316 multilabel *label151 (m:*label145)
+  317 jump *label102 always
+  318 multilabel *label152 (m:*label145)
+  319 jump *label104 always
+  320 multilabel *label153 (m:*label145)
+  321 jump *label106 always
+  322 multilabel *label154 (m:*label145)
+  323 jump *label108 always
+  324 multilabel *label155 (m:*label145)
+  325 jump *label110 always
   326 label *label92
   327 draw lineRect *tmp58 *tmp60 9 14
   328 jump *label90 always
   329 label *label91
-    * jump *label93 notEqual *tmp53 1
   330 label *label94
   331 draw line *tmp62 :y *tmp62 *tmp65
   332 jump *label90 always
   333 label *label93
-    * jump *label95 notEqual *tmp53 2
   334 label *label96
   335 draw line :displayItem.0:x :y *tmp66 :y
   336 draw line :displayItem.0:x :y *tmp66 *tmp68
 
   338 draw line *tmp73 *tmp72 *tmp66 *tmp72
   339 jump *label90 always
   340 label *label95
-    * jump *label97 notEqual *tmp53 3
   341 label *label98
   342 draw line :displayItem.0:x :y *tmp77 *tmp78
   343 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
 
   345 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
   346 jump *label90 always
   347 label *label97
-    * jump *label99 notEqual *tmp53 4
   348 label *label100
   349 draw line *tmp88 :y *tmp88 *tmp90
   350 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
   351 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
   352 jump *label90 always
   353 label *label99
-    * jump *label101 notEqual *tmp53 5
   354 label *label102
   355 draw line :displayItem.0:x :y *tmp97 *tmp98
   356 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
 
   358 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
   359 jump *label90 always
   360 label *label101
-    * jump *label103 notEqual *tmp53 6
   361 label *label104
   362 draw lineRect *tmp108 *tmp110 9 8
   363 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
   364 jump *label90 always
   365 label *label103
-    * jump *label105 notEqual *tmp53 7
   366 label *label106
   367 draw line :displayItem.0:x :y *tmp114 *tmp115
   368 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
   369 jump *label90 always
   370 label *label105
-    * jump *label107 notEqual *tmp53 8
   371 label *label108
   372 draw lineRect *tmp120 *tmp122 9 14
   373 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
   374 jump *label90 always
   375 label *label107
-    * jump *label109 notEqual *tmp53 9
   376 label *label110
   377 draw lineRect *tmp127 *tmp130 9 8
   378 draw line :displayItem.0:x :y *tmp131 *tmp128
   379 label *label109
+  380 label *label144
   381 label *label90
   382 label *label89
   383 jump *label88 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
-    * jump *label5 lessThanEq :n 0
+   10 jump *label5 lessThanEq .LINKS 0
    11 label *label142
    12 op sub :n :n 1
    13 getlink :block :n

Modifications by Convert case at line 163:5 (+3 instructions):
 
   384 label *label87
   385 op mod *tmp133 :displayItem.0:amount 10
   386 # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label113 notEqual *tmp133 0
+  387 jump *label156 lessThan *tmp133 0
+  388 jump *label156 greaterThan *tmp133 9
+  389 multijump *label158 *tmp133 0 (m:*label157)
+  390 multilabel *label158 (m:*label157)
+  391 jump *label114 always
+  392 multilabel *label159 (m:*label157)
+  393 jump *label116 always
+  394 multilabel *label160 (m:*label157)
+  395 jump *label118 always
+  396 multilabel *label161 (m:*label157)
+  397 jump *label120 always
+  398 multilabel *label162 (m:*label157)
+  399 jump *label122 always
+  400 multilabel *label163 (m:*label157)
+  401 jump *label124 always
+  402 multilabel *label164 (m:*label157)
+  403 jump *label126 always
+  404 multilabel *label165 (m:*label157)
+  405 jump *label128 always
+  406 multilabel *label166 (m:*label157)
+  407 jump *label130 always
+  408 multilabel *label167 (m:*label157)
+  409 jump *label132 always
   410 label *label114
   411 op sub *tmp138 :displayItem.0:x 1
   412 op sub *tmp140 :y 1
   413 draw lineRect *tmp138 *tmp140 9 14
   414 jump *label112 always
   415 label *label113
-    * jump *label115 notEqual *tmp133 1
   416 label *label116
   417 op add *tmp142 :displayItem.0:x 6
   418 op add *tmp145 :y 12
   419 draw line *tmp142 :y *tmp142 *tmp145
   420 jump *label112 always
   421 label *label115
-    * jump *label117 notEqual *tmp133 2
   422 label *label118
   423 op add *tmp146 :displayItem.0:x 7
   424 draw line :displayItem.0:x :y *tmp146 :y
 
   430 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   431 jump *label112 always
   432 label *label117
-    * jump *label119 notEqual *tmp133 3
   433 label *label120
   434 op add *tmp158 :displayItem.0:x 7
   435 op add *tmp160 :y 12
 
   440 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   441 jump *label112 always
   442 label *label119
-    * jump *label121 notEqual *tmp133 4
   443 label *label122
   444 op add *tmp168 :displayItem.0:x 7
   445 op add *tmp170 :y 12
 
   449 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   450 jump *label112 always
   451 label *label121
-    * jump *label123 notEqual *tmp133 5
   452 label *label124
   453 op add *tmp176 :displayItem.0:x 7
   454 draw line :displayItem.0:x :y *tmp176 :y
 
   460 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   461 jump *label112 always
   462 label *label123
-    * jump *label125 notEqual *tmp133 6
   463 label *label126
   464 op add *tmp188 :y 12
   465 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
 
   471 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   472 jump *label112 always
   473 label *label125
-    * jump *label127 notEqual *tmp133 7
   474 label *label128
   475 op add *tmp200 :displayItem.0:x 6
   476 op add *tmp203 :y 12
 
   478 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   479 jump *label112 always
   480 label *label127
-    * jump *label129 notEqual *tmp133 8
   481 label *label130
   482 op sub *tmp209 :displayItem.0:x 1
   483 op sub *tmp211 :y 1
 
   487 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   488 jump *label112 always
   489 label *label129
-    * jump *label131 notEqual *tmp133 9
   490 label *label132
   491 op add *tmp215 :displayItem.0:x 7
   492 draw line :displayItem.0:x :y *tmp215 :y
 
   497 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
   498 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
   499 label *label131
+  500 label *label156
   501 label *label112
   502 label *label111
   503 label *label88

Modifications by Unroll loop at line 150:5 (+551 instructions):
 
   295 label *label83
   296 label *label81
   297 label *label75
-    * set :displayItem.0:i 0
-    * label *label84
-    * label *label143
-    * jump *label87 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label144 lessThan *tmp53 0
-    * jump *label144 greaterThan *tmp53 9
-    * multijump *label146 *tmp53 0 (m:*label145)
-    * multilabel *label146 (m:*label145)
-    * jump *label92 always
-    * multilabel *label147 (m:*label145)
-    * jump *label94 always
-    * multilabel *label148 (m:*label145)
-    * jump *label96 always
-    * multilabel *label149 (m:*label145)
-    * jump *label98 always
-    * multilabel *label150 (m:*label145)
-    * jump *label100 always
-    * multilabel *label151 (m:*label145)
-    * jump *label102 always
-    * multilabel *label152 (m:*label145)
-    * jump *label104 always
-    * multilabel *label153 (m:*label145)
-    * jump *label106 always
-    * multilabel *label154 (m:*label145)
-    * jump *label108 always
-    * multilabel *label155 (m:*label145)
-    * jump *label110 always
-    * label *label92
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label90 always
-    * label *label91
-    * label *label94
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label90 always
-    * label *label93
-    * label *label96
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label90 always
-    * label *label95
-    * label *label98
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label90 always
-    * label *label97
-    * label *label100
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label90 always
-    * label *label99
-    * label *label102
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label90 always
-    * label *label101
-    * label *label104
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label90 always
-    * label *label103
-    * label *label106
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label90 always
-    * label *label105
-    * label *label108
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label90 always
-    * label *label107
-    * label *label110
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
-    * label *label109
-    * label *label144
-    * label *label90
-    * label *label89
-    * jump *label88 always
-    * label *label87
-    * op mod *tmp133 :displayItem.0:amount 10
-    * # "Function: inline def drawDigit(in x, in y, in digit)"
-    * jump *label156 lessThan *tmp133 0
-    * jump *label156 greaterThan *tmp133 9
-    * multijump *label158 *tmp133 0 (m:*label157)
-    * multilabel *label158 (m:*label157)
-    * jump *label114 always
-    * multilabel *label159 (m:*label157)
-    * jump *label116 always
-    * multilabel *label160 (m:*label157)
-    * jump *label118 always
-    * multilabel *label161 (m:*label157)
-    * jump *label120 always
-    * multilabel *label162 (m:*label157)
-    * jump *label122 always
-    * multilabel *label163 (m:*label157)
-    * jump *label124 always
-    * multilabel *label164 (m:*label157)
-    * jump *label126 always
-    * multilabel *label165 (m:*label157)
-    * jump *label128 always
-    * multilabel *label166 (m:*label157)
-    * jump *label130 always
-    * multilabel *label167 (m:*label157)
-    * jump *label132 always
-    * label *label114
-    * op sub *tmp138 :displayItem.0:x 1
-    * op sub *tmp140 :y 1
-    * draw lineRect *tmp138 *tmp140 9 14
-    * jump *label112 always
-    * label *label113
-    * label *label116
-    * op add *tmp142 :displayItem.0:x 6
-    * op add *tmp145 :y 12
-    * draw line *tmp142 :y *tmp142 *tmp145
-    * jump *label112 always
-    * label *label115
-    * label *label118
-    * op add *tmp146 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp146 :y
-    * op add *tmp147 :y 6
-    * draw line :displayItem.0:x :y :displayItem.0:x *tmp147
-    * draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
-    * op add *tmp154 :y 12
-    * draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
-    * jump *label112 always
-    * label *label117
-    * label *label120
-    * op add *tmp158 :displayItem.0:x 7
-    * op add *tmp160 :y 12
-    * draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem.0:x :y *tmp158 :y
-    * op add *tmp162 :y 6
-    * draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
-    * jump *label112 always
-    * label *label119
-    * label *label122
-    * op add *tmp168 :displayItem.0:x 7
-    * op add *tmp170 :y 12
-    * draw line *tmp168 :y *tmp168 *tmp170
-    * op add *tmp171 :y 6
-    * draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
-    * jump *label112 always
-    * label *label121
-    * label *label124
-    * op add *tmp176 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp176 :y
-    * op add *tmp179 :y 6
-    * draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
-    * op add *tmp184 :y 12
-    * draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
-    * draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
-    * jump *label112 always
-    * label *label123
-    * label *label126
-    * op add *tmp188 :y 12
-    * draw line :displayItem.0:x :y :displayItem.0:x *tmp188
-    * op add *tmp189 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp189 :y
-    * op add *tmp192 :y 6
-    * draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
-    * jump *label112 always
-    * label *label125
-    * label *label128
-    * op add *tmp200 :displayItem.0:x 6
-    * op add *tmp203 :y 12
-    * draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
-    * jump *label112 always
-    * label *label127
-    * label *label130
-    * op sub *tmp209 :displayItem.0:x 1
-    * op sub *tmp211 :y 1
-    * draw lineRect *tmp209 *tmp211 9 14
-    * op add *tmp212 :y 6
-    * op add *tmp213 :displayItem.0:x 7
-    * draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
-    * jump *label112 always
-    * label *label129
-    * label *label132
-    * op add *tmp215 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp215 :y
-    * op add *tmp218 :y 12
-    * draw line *tmp215 :y *tmp215 *tmp218
-    * op add *tmp219 :y 6
-    * draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
-    * draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
-    * label *label131
-    * label *label156
-    * label *label112
-    * label *label111
-    * label *label88
-    * op sub :displayItem.0:x :displayItem.0:x 11
-    * op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label133 notEqual :displayItem.0:amount 0
-    * jump *label86 always
-    * label *label133
-    * label *label134
-    * label *label85
-    * op add :displayItem.0:i :displayItem.0:i 1
-    * jump *label143 lessThan :displayItem.0:i 5
-    * label *label86
+  298 set :displayItem.0:i 0
+  299 label *label168
+  300 label *label169
+  301 jump *label203 always
+  302 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  303 jump *label200 lessThan *tmp53 0
+  304 jump *label200 greaterThan *tmp53 9
+  305 multijump *label170 *tmp53 0 (m:*label145)
+  306 multilabel *label170 (m:*label145)
+  307 jump *label180 always
+  308 multilabel *label171 (m:*label145)
+  309 jump *label182 always
+  310 multilabel *label172 (m:*label145)
+  311 jump *label184 always
+  312 multilabel *label173 (m:*label145)
+  313 jump *label186 always
+  314 multilabel *label174 (m:*label145)
+  315 jump *label188 always
+  316 multilabel *label175 (m:*label145)
+  317 jump *label190 always
+  318 multilabel *label176 (m:*label145)
+  319 jump *label192 always
+  320 multilabel *label177 (m:*label145)
+  321 jump *label194 always
+  322 multilabel *label178 (m:*label145)
+  323 jump *label196 always
+  324 multilabel *label179 (m:*label145)
+  325 jump *label198 always
+  326 label *label180
+  327 draw lineRect *tmp58 *tmp60 9 14
+  328 jump *label201 always
+  329 label *label181
+  330 label *label182
+  331 draw line *tmp62 :y *tmp62 *tmp65
+  332 jump *label201 always
+  333 label *label183
+  334 label *label184
+  335 draw line :displayItem.0:x :y *tmp66 :y
+  336 draw line :displayItem.0:x :y *tmp66 *tmp68
+  337 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  338 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  339 jump *label201 always
+  340 label *label185
+  341 label *label186
+  342 draw line :displayItem.0:x :y *tmp77 *tmp78
+  343 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+  344 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+  345 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+  346 jump *label201 always
+  347 label *label187
+  348 label *label188
+  349 draw line *tmp88 :y *tmp88 *tmp90
+  350 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+  351 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+  352 jump *label201 always
+  353 label *label189
+  354 label *label190
+  355 draw line :displayItem.0:x :y *tmp97 *tmp98
+  356 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+  357 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+  358 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+  359 jump *label201 always
+  360 label *label191
+  361 label *label192
+  362 draw lineRect *tmp108 *tmp110 9 8
+  363 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+  364 jump *label201 always
+  365 label *label193
+  366 label *label194
+  367 draw line :displayItem.0:x :y *tmp114 *tmp115
+  368 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+  369 jump *label201 always
+  370 label *label195
+  371 label *label196
+  372 draw lineRect *tmp120 *tmp122 9 14
+  373 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+  374 jump *label201 always
+  375 label *label197
+  376 label *label198
+  377 draw lineRect *tmp127 *tmp130 9 8
+  378 draw line :displayItem.0:x :y *tmp131 *tmp128
+  379 label *label199
+  380 label *label200
+  381 label *label201
+  382 label *label202
+  383 jump *label237 always
+  384 label *label203
+  385 op mod *tmp133 :displayItem.0:amount 10
+  386 # "Function: inline def drawDigit(in x, in y, in digit)"
+  387 jump *label234 lessThan *tmp133 0
+  388 jump *label234 greaterThan *tmp133 9
+  389 multijump *label204 *tmp133 0 (m:*label157)
+  390 multilabel *label204 (m:*label157)
+  391 jump *label214 always
+  392 multilabel *label205 (m:*label157)
+  393 jump *label216 always
+  394 multilabel *label206 (m:*label157)
+  395 jump *label218 always
+  396 multilabel *label207 (m:*label157)
+  397 jump *label220 always
+  398 multilabel *label208 (m:*label157)
+  399 jump *label222 always
+  400 multilabel *label209 (m:*label157)
+  401 jump *label224 always
+  402 multilabel *label210 (m:*label157)
+  403 jump *label226 always
+  404 multilabel *label211 (m:*label157)
+  405 jump *label228 always
+  406 multilabel *label212 (m:*label157)
+  407 jump *label230 always
+  408 multilabel *label213 (m:*label157)
+  409 jump *label232 always
+  410 label *label214
+  411 op sub *tmp138 :displayItem.0:x 1
+  412 op sub *tmp140 :y 1
+  413 draw lineRect *tmp138 *tmp140 9 14
+  414 jump *label235 always
+  415 label *label215
+  416 label *label216
+  417 op add *tmp142 :displayItem.0:x 6
+  418 op add *tmp145 :y 12
+  419 draw line *tmp142 :y *tmp142 *tmp145
+  420 jump *label235 always
+  421 label *label217
+  422 label *label218
+  423 op add *tmp146 :displayItem.0:x 7
+  424 draw line :displayItem.0:x :y *tmp146 :y
+  425 op add *tmp147 :y 6
+  426 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+  427 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+  428 op add *tmp154 :y 12
+  429 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  430 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+  431 jump *label235 always
+  432 label *label219
+  433 label *label220
+  434 op add *tmp158 :displayItem.0:x 7
+  435 op add *tmp160 :y 12
+  436 draw line *tmp158 :y *tmp158 *tmp160
+  437 draw line :displayItem.0:x :y *tmp158 :y
+  438 op add *tmp162 :y 6
+  439 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+  440 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+  441 jump *label235 always
+  442 label *label221
+  443 label *label222
+  444 op add *tmp168 :displayItem.0:x 7
+  445 op add *tmp170 :y 12
+  446 draw line *tmp168 :y *tmp168 *tmp170
+  447 op add *tmp171 :y 6
+  448 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+  449 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+  450 jump *label235 always
+  451 label *label223
+  452 label *label224
+  453 op add *tmp176 :displayItem.0:x 7
+  454 draw line :displayItem.0:x :y *tmp176 :y
+  455 op add *tmp179 :y 6
+  456 draw line *tmp176 :y *tmp176 *tmp179
+  457 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+  458 op add *tmp184 :y 12
+  459 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+  460 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+  461 jump *label235 always
+  462 label *label225
+  463 label *label226
+  464 op add *tmp188 :y 12
+  465 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
+  466 op add *tmp189 :displayItem.0:x 7
+  467 draw line :displayItem.0:x :y *tmp189 :y
+  468 op add *tmp192 :y 6
+  469 draw line *tmp189 :y *tmp189 *tmp192
+  470 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+  471 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+  472 jump *label235 always
+  473 label *label227
+  474 label *label228
+  475 op add *tmp200 :displayItem.0:x 6
+  476 op add *tmp203 :y 12
+  477 draw line *tmp200 :y *tmp200 *tmp203
+  478 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+  479 jump *label235 always
+  480 label *label229
+  481 label *label230
+  482 op sub *tmp209 :displayItem.0:x 1
+  483 op sub *tmp211 :y 1
+  484 draw lineRect *tmp209 *tmp211 9 14
+  485 op add *tmp212 :y 6
+  486 op add *tmp213 :displayItem.0:x 7
+  487 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+  488 jump *label235 always
+  489 label *label231
+  490 label *label232
+  491 op add *tmp215 :displayItem.0:x 7
+  492 draw line :displayItem.0:x :y *tmp215 :y
+  493 op add *tmp218 :y 12
+  494 draw line *tmp215 :y *tmp215 *tmp218
+  495 op add *tmp219 :y 6
+  496 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+  497 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+  498 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+  499 label *label233
+  500 label *label234
+  501 label *label235
+  502 label *label236
+  503 label *label237
+  504 op sub :displayItem.0:x :displayItem.0:x 11
+  505 op idiv :displayItem.0:amount :displayItem.0:amount 10
+  506 jump *label238 notEqual :displayItem.0:amount 0
+  507 jump *label86 always
+  508 label *label238
+  509 label *label239
+  510 label *label240
+  511 op add :displayItem.0:i :displayItem.0:i 1
+  512 label *label243
+  513 jump *label277 always
+  514 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  515 jump *label274 lessThan *tmp53 0
+  516 jump *label274 greaterThan *tmp53 9
+  517 multijump *label244 *tmp53 0 (m:*label145)
+  518 multilabel *label244 (m:*label145)
+  519 jump *label254 always
+  520 multilabel *label245 (m:*label145)
+  521 jump *label256 always
+  522 multilabel *label246 (m:*label145)
+  523 jump *label258 always
+  524 multilabel *label247 (m:*label145)
+  525 jump *label260 always
+  526 multilabel *label248 (m:*label145)
+  527 jump *label262 always
+  528 multilabel *label249 (m:*label145)
+  529 jump *label264 always
+  530 multilabel *label250 (m:*label145)
+  531 jump *label266 always
+  532 multilabel *label251 (m:*label145)
+  533 jump *label268 always
+  534 multilabel *label252 (m:*label145)
+  535 jump *label270 always
+  536 multilabel *label253 (m:*label145)
+  537 jump *label272 always
+  538 label *label254
+  539 draw lineRect *tmp58 *tmp60 9 14
+  540 jump *label275 always
+  541 label *label255
+  542 label *label256
+  543 draw line *tmp62 :y *tmp62 *tmp65
+  544 jump *label275 always
+  545 label *label257
+  546 label *label258
+  547 draw line :displayItem.0:x :y *tmp66 :y
+  548 draw line :displayItem.0:x :y *tmp66 *tmp68
+  549 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  550 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  551 jump *label275 always
+  552 label *label259
+  553 label *label260
+  554 draw line :displayItem.0:x :y *tmp77 *tmp78
+  555 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+  556 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+  557 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+  558 jump *label275 always
+  559 label *label261
+  560 label *label262
+  561 draw line *tmp88 :y *tmp88 *tmp90
+  562 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+  563 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+  564 jump *label275 always
+  565 label *label263
+  566 label *label264
+  567 draw line :displayItem.0:x :y *tmp97 *tmp98
+  568 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+  569 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+  570 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+  571 jump *label275 always
+  572 label *label265
+  573 label *label266
+  574 draw lineRect *tmp108 *tmp110 9 8
+  575 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+  576 jump *label275 always
+  577 label *label267
+  578 label *label268
+  579 draw line :displayItem.0:x :y *tmp114 *tmp115
+  580 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+  581 jump *label275 always
+  582 label *label269
+  583 label *label270
+  584 draw lineRect *tmp120 *tmp122 9 14
+  585 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+  586 jump *label275 always
+  587 label *label271
+  588 label *label272
+  589 draw lineRect *tmp127 *tmp130 9 8
+  590 draw line :displayItem.0:x :y *tmp131 *tmp128
+  591 label *label273
+  592 label *label274
+  593 label *label275
+  594 label *label276
+  595 jump *label311 always
+  596 label *label277
+  597 op mod *tmp133 :displayItem.0:amount 10
+  598 # "Function: inline def drawDigit(in x, in y, in digit)"
+  599 jump *label308 lessThan *tmp133 0
+  600 jump *label308 greaterThan *tmp133 9
+  601 multijump *label278 *tmp133 0 (m:*label157)
+  602 multilabel *label278 (m:*label157)
+  603 jump *label288 always
+  604 multilabel *label279 (m:*label157)
+  605 jump *label290 always
+  606 multilabel *label280 (m:*label157)
+  607 jump *label292 always
+  608 multilabel *label281 (m:*label157)
+  609 jump *label294 always
+  610 multilabel *label282 (m:*label157)
+  611 jump *label296 always
+  612 multilabel *label283 (m:*label157)
+  613 jump *label298 always
+  614 multilabel *label284 (m:*label157)
+  615 jump *label300 always
+  616 multilabel *label285 (m:*label157)
+  617 jump *label302 always
+  618 multilabel *label286 (m:*label157)
+  619 jump *label304 always
+  620 multilabel *label287 (m:*label157)
+  621 jump *label306 always
+  622 label *label288
+  623 op sub *tmp138 :displayItem.0:x 1
+  624 op sub *tmp140 :y 1
+  625 draw lineRect *tmp138 *tmp140 9 14
+  626 jump *label309 always
+  627 label *label289
+  628 label *label290
+  629 op add *tmp142 :displayItem.0:x 6
+  630 op add *tmp145 :y 12
+  631 draw line *tmp142 :y *tmp142 *tmp145
+  632 jump *label309 always
+  633 label *label291
+  634 label *label292
+  635 op add *tmp146 :displayItem.0:x 7
+  636 draw line :displayItem.0:x :y *tmp146 :y
+  637 op add *tmp147 :y 6
+  638 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+  639 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+  640 op add *tmp154 :y 12
+  641 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  642 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+  643 jump *label309 always
+  644 label *label293
+  645 label *label294
+  646 op add *tmp158 :displayItem.0:x 7
+  647 op add *tmp160 :y 12
+  648 draw line *tmp158 :y *tmp158 *tmp160
+  649 draw line :displayItem.0:x :y *tmp158 :y
+  650 op add *tmp162 :y 6
+  651 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+  652 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+  653 jump *label309 always
+  654 label *label295
+  655 label *label296
+  656 op add *tmp168 :displayItem.0:x 7
+  657 op add *tmp170 :y 12
+  658 draw line *tmp168 :y *tmp168 *tmp170
+  659 op add *tmp171 :y 6
+  660 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+  661 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+  662 jump *label309 always
+  663 label *label297
+  664 label *label298
+  665 op add *tmp176 :displayItem.0:x 7
+  666 draw line :displayItem.0:x :y *tmp176 :y
+  667 op add *tmp179 :y 6
+  668 draw line *tmp176 :y *tmp176 *tmp179
+  669 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+  670 op add *tmp184 :y 12
+  671 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+  672 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+  673 jump *label309 always
+  674 label *label299
+  675 label *label300
+  676 op add *tmp188 :y 12
+  677 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
+  678 op add *tmp189 :displayItem.0:x 7
+  679 draw line :displayItem.0:x :y *tmp189 :y
+  680 op add *tmp192 :y 6
+  681 draw line *tmp189 :y *tmp189 *tmp192
+  682 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+  683 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+  684 jump *label309 always
+  685 label *label301
+  686 label *label302
+  687 op add *tmp200 :displayItem.0:x 6
+  688 op add *tmp203 :y 12
+  689 draw line *tmp200 :y *tmp200 *tmp203
+  690 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+  691 jump *label309 always
+  692 label *label303
+  693 label *label304
+  694 op sub *tmp209 :displayItem.0:x 1
+  695 op sub *tmp211 :y 1
+  696 draw lineRect *tmp209 *tmp211 9 14
+  697 op add *tmp212 :y 6
+  698 op add *tmp213 :displayItem.0:x 7
+  699 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+  700 jump *label309 always
+  701 label *label305
+  702 label *label306
+  703 op add *tmp215 :displayItem.0:x 7
+  704 draw line :displayItem.0:x :y *tmp215 :y
+  705 op add *tmp218 :y 12
+  706 draw line *tmp215 :y *tmp215 *tmp218
+  707 op add *tmp219 :y 6
+  708 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+  709 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+  710 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+  711 label *label307
+  712 label *label308
+  713 label *label309
+  714 label *label310
+  715 label *label311
+  716 op sub :displayItem.0:x :displayItem.0:x 11
+  717 op idiv :displayItem.0:amount :displayItem.0:amount 10
+  718 jump *label312 notEqual :displayItem.0:amount 0
+  719 jump *label86 always
+  720 label *label312
+  721 label *label313
+  722 label *label314
+  723 op add :displayItem.0:i :displayItem.0:i 1
+  724 label *label317
+  725 jump *label351 always
+  726 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  727 jump *label348 lessThan *tmp53 0
+  728 jump *label348 greaterThan *tmp53 9
+  729 multijump *label318 *tmp53 0 (m:*label145)
+  730 multilabel *label318 (m:*label145)
+  731 jump *label328 always
+  732 multilabel *label319 (m:*label145)
+  733 jump *label330 always
+  734 multilabel *label320 (m:*label145)
+  735 jump *label332 always
+  736 multilabel *label321 (m:*label145)
+  737 jump *label334 always
+  738 multilabel *label322 (m:*label145)
+  739 jump *label336 always
+  740 multilabel *label323 (m:*label145)
+  741 jump *label338 always
+  742 multilabel *label324 (m:*label145)
+  743 jump *label340 always
+  744 multilabel *label325 (m:*label145)
+  745 jump *label342 always
+  746 multilabel *label326 (m:*label145)
+  747 jump *label344 always
+  748 multilabel *label327 (m:*label145)
+  749 jump *label346 always
+  750 label *label328
+  751 draw lineRect *tmp58 *tmp60 9 14
+  752 jump *label349 always
+  753 label *label329
+  754 label *label330
+  755 draw line *tmp62 :y *tmp62 *tmp65
+  756 jump *label349 always
+  757 label *label331
+  758 label *label332
+  759 draw line :displayItem.0:x :y *tmp66 :y
+  760 draw line :displayItem.0:x :y *tmp66 *tmp68
+  761 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  762 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  763 jump *label349 always
+  764 label *label333
+  765 label *label334
+  766 draw line :displayItem.0:x :y *tmp77 *tmp78
+  767 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+  768 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+  769 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+  770 jump *label349 always
+  771 label *label335
+  772 label *label336
+  773 draw line *tmp88 :y *tmp88 *tmp90
+  774 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+  775 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+  776 jump *label349 always
+  777 label *label337
+  778 label *label338
+  779 draw line :displayItem.0:x :y *tmp97 *tmp98
+  780 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+  781 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+  782 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+  783 jump *label349 always
+  784 label *label339
+  785 label *label340
+  786 draw lineRect *tmp108 *tmp110 9 8
+  787 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+  788 jump *label349 always
+  789 label *label341
+  790 label *label342
+  791 draw line :displayItem.0:x :y *tmp114 *tmp115
+  792 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+  793 jump *label349 always
+  794 label *label343
+  795 label *label344
+  796 draw lineRect *tmp120 *tmp122 9 14
+  797 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+  798 jump *label349 always
+  799 label *label345
+  800 label *label346
+  801 draw lineRect *tmp127 *tmp130 9 8
+  802 draw line :displayItem.0:x :y *tmp131 *tmp128
+  803 label *label347
+  804 label *label348
+  805 label *label349
+  806 label *label350
+  807 jump *label385 always
+  808 label *label351
+  809 op mod *tmp133 :displayItem.0:amount 10
+  810 # "Function: inline def drawDigit(in x, in y, in digit)"
+  811 jump *label382 lessThan *tmp133 0
+  812 jump *label382 greaterThan *tmp133 9
+  813 multijump *label352 *tmp133 0 (m:*label157)
+  814 multilabel *label352 (m:*label157)
+  815 jump *label362 always
+  816 multilabel *label353 (m:*label157)
+  817 jump *label364 always
+  818 multilabel *label354 (m:*label157)
+  819 jump *label366 always
+  820 multilabel *label355 (m:*label157)
+  821 jump *label368 always
+  822 multilabel *label356 (m:*label157)
+  823 jump *label370 always
+  824 multilabel *label357 (m:*label157)
+  825 jump *label372 always
+  826 multilabel *label358 (m:*label157)
+  827 jump *label374 always
+  828 multilabel *label359 (m:*label157)
+  829 jump *label376 always
+  830 multilabel *label360 (m:*label157)
+  831 jump *label378 always
+  832 multilabel *label361 (m:*label157)
+  833 jump *label380 always
+  834 label *label362
+  835 op sub *tmp138 :displayItem.0:x 1
+  836 op sub *tmp140 :y 1
+  837 draw lineRect *tmp138 *tmp140 9 14
+  838 jump *label383 always
+  839 label *label363
+  840 label *label364
+  841 op add *tmp142 :displayItem.0:x 6
+  842 op add *tmp145 :y 12
+  843 draw line *tmp142 :y *tmp142 *tmp145
+  844 jump *label383 always
+  845 label *label365
+  846 label *label366
+  847 op add *tmp146 :displayItem.0:x 7
+  848 draw line :displayItem.0:x :y *tmp146 :y
+  849 op add *tmp147 :y 6
+  850 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+  851 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+  852 op add *tmp154 :y 12
+  853 draw line *tmp146 *tmp147 *tmp146 *tmp154
+  854 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+  855 jump *label383 always
+  856 label *label367
+  857 label *label368
+  858 op add *tmp158 :displayItem.0:x 7
+  859 op add *tmp160 :y 12
+  860 draw line *tmp158 :y *tmp158 *tmp160
+  861 draw line :displayItem.0:x :y *tmp158 :y
+  862 op add *tmp162 :y 6
+  863 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+  864 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+  865 jump *label383 always
+  866 label *label369
+  867 label *label370
+  868 op add *tmp168 :displayItem.0:x 7
+  869 op add *tmp170 :y 12
+  870 draw line *tmp168 :y *tmp168 *tmp170
+  871 op add *tmp171 :y 6
+  872 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+  873 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+  874 jump *label383 always
+  875 label *label371
+  876 label *label372
+  877 op add *tmp176 :displayItem.0:x 7
+  878 draw line :displayItem.0:x :y *tmp176 :y
+  879 op add *tmp179 :y 6
+  880 draw line *tmp176 :y *tmp176 *tmp179
+  881 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+  882 op add *tmp184 :y 12
+  883 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+  884 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+  885 jump *label383 always
+  886 label *label373
+  887 label *label374
+  888 op add *tmp188 :y 12
+  889 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
+  890 op add *tmp189 :displayItem.0:x 7
+  891 draw line :displayItem.0:x :y *tmp189 :y
+  892 op add *tmp192 :y 6
+  893 draw line *tmp189 :y *tmp189 *tmp192
+  894 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+  895 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+  896 jump *label383 always
+  897 label *label375
+  898 label *label376
+  899 op add *tmp200 :displayItem.0:x 6
+  900 op add *tmp203 :y 12
+  901 draw line *tmp200 :y *tmp200 *tmp203
+  902 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+  903 jump *label383 always
+  904 label *label377
+  905 label *label378
+  906 op sub *tmp209 :displayItem.0:x 1
+  907 op sub *tmp211 :y 1
+  908 draw lineRect *tmp209 *tmp211 9 14
+  909 op add *tmp212 :y 6
+  910 op add *tmp213 :displayItem.0:x 7
+  911 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+  912 jump *label383 always
+  913 label *label379
+  914 label *label380
+  915 op add *tmp215 :displayItem.0:x 7
+  916 draw line :displayItem.0:x :y *tmp215 :y
+  917 op add *tmp218 :y 12
+  918 draw line *tmp215 :y *tmp215 *tmp218
+  919 op add *tmp219 :y 6
+  920 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+  921 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+  922 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+  923 label *label381
+  924 label *label382
+  925 label *label383
+  926 label *label384
+  927 label *label385
+  928 op sub :displayItem.0:x :displayItem.0:x 11
+  929 op idiv :displayItem.0:amount :displayItem.0:amount 10
+  930 jump *label386 notEqual :displayItem.0:amount 0
+  931 jump *label86 always
+  932 label *label386
+  933 label *label387
+  934 label *label388
+  935 op add :displayItem.0:i :displayItem.0:i 1
+  936 label *label391
+  937 jump *label425 always
+  938 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+  939 jump *label422 lessThan *tmp53 0
+  940 jump *label422 greaterThan *tmp53 9
+  941 multijump *label392 *tmp53 0 (m:*label145)
+  942 multilabel *label392 (m:*label145)
+  943 jump *label402 always
+  944 multilabel *label393 (m:*label145)
+  945 jump *label404 always
+  946 multilabel *label394 (m:*label145)
+  947 jump *label406 always
+  948 multilabel *label395 (m:*label145)
+  949 jump *label408 always
+  950 multilabel *label396 (m:*label145)
+  951 jump *label410 always
+  952 multilabel *label397 (m:*label145)
+  953 jump *label412 always
+  954 multilabel *label398 (m:*label145)
+  955 jump *label414 always
+  956 multilabel *label399 (m:*label145)
+  957 jump *label416 always
+  958 multilabel *label400 (m:*label145)
+  959 jump *label418 always
+  960 multilabel *label401 (m:*label145)
+  961 jump *label420 always
+  962 label *label402
+  963 draw lineRect *tmp58 *tmp60 9 14
+  964 jump *label423 always
+  965 label *label403
+  966 label *label404
+  967 draw line *tmp62 :y *tmp62 *tmp65
+  968 jump *label423 always
+  969 label *label405
+  970 label *label406
+  971 draw line :displayItem.0:x :y *tmp66 :y
+  972 draw line :displayItem.0:x :y *tmp66 *tmp68
+  973 draw line *tmp66 *tmp68 *tmp66 *tmp72
+  974 draw line *tmp73 *tmp72 *tmp66 *tmp72
+  975 jump *label423 always
+  976 label *label407
+  977 label *label408
+  978 draw line :displayItem.0:x :y *tmp77 *tmp78
+  979 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+  980 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+  981 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+  982 jump *label423 always
+  983 label *label409
+  984 label *label410
+  985 draw line *tmp88 :y *tmp88 *tmp90
+  986 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+  987 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+  988 jump *label423 always
+  989 label *label411
+  990 label *label412
+  991 draw line :displayItem.0:x :y *tmp97 *tmp98
+  992 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+  993 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+  994 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+  995 jump *label423 always
+  996 label *label413
+  997 label *label414
+  998 draw lineRect *tmp108 *tmp110 9 8
+  999 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+ 1000 jump *label423 always
+ 1001 label *label415
+ 1002 label *label416
+ 1003 draw line :displayItem.0:x :y *tmp114 *tmp115
+ 1004 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+ 1005 jump *label423 always
+ 1006 label *label417
+ 1007 label *label418
+ 1008 draw lineRect *tmp120 *tmp122 9 14
+ 1009 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+ 1010 jump *label423 always
+ 1011 label *label419
+ 1012 label *label420
+ 1013 draw lineRect *tmp127 *tmp130 9 8
+ 1014 draw line :displayItem.0:x :y *tmp131 *tmp128
+ 1015 label *label421
+ 1016 label *label422
+ 1017 label *label423
+ 1018 label *label424
+ 1019 jump *label459 always
+ 1020 label *label425
+ 1021 op mod *tmp133 :displayItem.0:amount 10
+ 1022 # "Function: inline def drawDigit(in x, in y, in digit)"
+ 1023 jump *label456 lessThan *tmp133 0
+ 1024 jump *label456 greaterThan *tmp133 9
+ 1025 multijump *label426 *tmp133 0 (m:*label157)
+ 1026 multilabel *label426 (m:*label157)
+ 1027 jump *label436 always
+ 1028 multilabel *label427 (m:*label157)
+ 1029 jump *label438 always
+ 1030 multilabel *label428 (m:*label157)
+ 1031 jump *label440 always
+ 1032 multilabel *label429 (m:*label157)
+ 1033 jump *label442 always
+ 1034 multilabel *label430 (m:*label157)
+ 1035 jump *label444 always
+ 1036 multilabel *label431 (m:*label157)
+ 1037 jump *label446 always
+ 1038 multilabel *label432 (m:*label157)
+ 1039 jump *label448 always
+ 1040 multilabel *label433 (m:*label157)
+ 1041 jump *label450 always
+ 1042 multilabel *label434 (m:*label157)
+ 1043 jump *label452 always
+ 1044 multilabel *label435 (m:*label157)
+ 1045 jump *label454 always
+ 1046 label *label436
+ 1047 op sub *tmp138 :displayItem.0:x 1
+ 1048 op sub *tmp140 :y 1
+ 1049 draw lineRect *tmp138 *tmp140 9 14
+ 1050 jump *label457 always
+ 1051 label *label437
+ 1052 label *label438
+ 1053 op add *tmp142 :displayItem.0:x 6
+ 1054 op add *tmp145 :y 12
+ 1055 draw line *tmp142 :y *tmp142 *tmp145
+ 1056 jump *label457 always
+ 1057 label *label439
+ 1058 label *label440
+ 1059 op add *tmp146 :displayItem.0:x 7
+ 1060 draw line :displayItem.0:x :y *tmp146 :y
+ 1061 op add *tmp147 :y 6
+ 1062 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+ 1063 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+ 1064 op add *tmp154 :y 12
+ 1065 draw line *tmp146 *tmp147 *tmp146 *tmp154
+ 1066 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+ 1067 jump *label457 always
+ 1068 label *label441
+ 1069 label *label442
+ 1070 op add *tmp158 :displayItem.0:x 7
+ 1071 op add *tmp160 :y 12
+ 1072 draw line *tmp158 :y *tmp158 *tmp160
+ 1073 draw line :displayItem.0:x :y *tmp158 :y
+ 1074 op add *tmp162 :y 6
+ 1075 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+ 1076 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+ 1077 jump *label457 always
+ 1078 label *label443
+ 1079 label *label444
+ 1080 op add *tmp168 :displayItem.0:x 7
+ 1081 op add *tmp170 :y 12
+ 1082 draw line *tmp168 :y *tmp168 *tmp170
+ 1083 op add *tmp171 :y 6
+ 1084 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+ 1085 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+ 1086 jump *label457 always
+ 1087 label *label445
+ 1088 label *label446
+ 1089 op add *tmp176 :displayItem.0:x 7
+ 1090 draw line :displayItem.0:x :y *tmp176 :y
+ 1091 op add *tmp179 :y 6
+ 1092 draw line *tmp176 :y *tmp176 *tmp179
+ 1093 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+ 1094 op add *tmp184 :y 12
+ 1095 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+ 1096 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+ 1097 jump *label457 always
+ 1098 label *label447
+ 1099 label *label448
+ 1100 op add *tmp188 :y 12
+ 1101 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
+ 1102 op add *tmp189 :displayItem.0:x 7
+ 1103 draw line :displayItem.0:x :y *tmp189 :y
+ 1104 op add *tmp192 :y 6
+ 1105 draw line *tmp189 :y *tmp189 *tmp192
+ 1106 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+ 1107 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+ 1108 jump *label457 always
+ 1109 label *label449
+ 1110 label *label450
+ 1111 op add *tmp200 :displayItem.0:x 6
+ 1112 op add *tmp203 :y 12
+ 1113 draw line *tmp200 :y *tmp200 *tmp203
+ 1114 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+ 1115 jump *label457 always
+ 1116 label *label451
+ 1117 label *label452
+ 1118 op sub *tmp209 :displayItem.0:x 1
+ 1119 op sub *tmp211 :y 1
+ 1120 draw lineRect *tmp209 *tmp211 9 14
+ 1121 op add *tmp212 :y 6
+ 1122 op add *tmp213 :displayItem.0:x 7
+ 1123 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+ 1124 jump *label457 always
+ 1125 label *label453
+ 1126 label *label454
+ 1127 op add *tmp215 :displayItem.0:x 7
+ 1128 draw line :displayItem.0:x :y *tmp215 :y
+ 1129 op add *tmp218 :y 12
+ 1130 draw line *tmp215 :y *tmp215 *tmp218
+ 1131 op add *tmp219 :y 6
+ 1132 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+ 1133 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+ 1134 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+ 1135 label *label455
+ 1136 label *label456
+ 1137 label *label457
+ 1138 label *label458
+ 1139 label *label459
+ 1140 op sub :displayItem.0:x :displayItem.0:x 11
+ 1141 op idiv :displayItem.0:amount :displayItem.0:amount 10
+ 1142 jump *label460 notEqual :displayItem.0:amount 0
+ 1143 jump *label86 always
+ 1144 label *label460
+ 1145 label *label461
+ 1146 label *label462
+ 1147 op add :displayItem.0:i :displayItem.0:i 1
+ 1148 label *label465
+ 1149 jump *label499 always
+ 1150 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
+ 1151 jump *label496 lessThan *tmp53 0
+ 1152 jump *label496 greaterThan *tmp53 9
+ 1153 multijump *label466 *tmp53 0 (m:*label145)
+ 1154 multilabel *label466 (m:*label145)
+ 1155 jump *label476 always
+ 1156 multilabel *label467 (m:*label145)
+ 1157 jump *label478 always
+ 1158 multilabel *label468 (m:*label145)
+ 1159 jump *label480 always
+ 1160 multilabel *label469 (m:*label145)
+ 1161 jump *label482 always
+ 1162 multilabel *label470 (m:*label145)
+ 1163 jump *label484 always
+ 1164 multilabel *label471 (m:*label145)
+ 1165 jump *label486 always
+ 1166 multilabel *label472 (m:*label145)
+ 1167 jump *label488 always
+ 1168 multilabel *label473 (m:*label145)
+ 1169 jump *label490 always
+ 1170 multilabel *label474 (m:*label145)
+ 1171 jump *label492 always
+ 1172 multilabel *label475 (m:*label145)
+ 1173 jump *label494 always
+ 1174 label *label476
+ 1175 draw lineRect *tmp58 *tmp60 9 14
+ 1176 jump *label497 always
+ 1177 label *label477
+ 1178 label *label478
+ 1179 draw line *tmp62 :y *tmp62 *tmp65
+ 1180 jump *label497 always
+ 1181 label *label479
+ 1182 label *label480
+ 1183 draw line :displayItem.0:x :y *tmp66 :y
+ 1184 draw line :displayItem.0:x :y *tmp66 *tmp68
+ 1185 draw line *tmp66 *tmp68 *tmp66 *tmp72
+ 1186 draw line *tmp73 *tmp72 *tmp66 *tmp72
+ 1187 jump *label497 always
+ 1188 label *label481
+ 1189 label *label482
+ 1190 draw line :displayItem.0:x :y *tmp77 *tmp78
+ 1191 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
+ 1192 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
+ 1193 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+ 1194 jump *label497 always
+ 1195 label *label483
+ 1196 label *label484
+ 1197 draw line *tmp88 :y *tmp88 *tmp90
+ 1198 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
+ 1199 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+ 1200 jump *label497 always
+ 1201 label *label485
+ 1202 label *label486
+ 1203 draw line :displayItem.0:x :y *tmp97 *tmp98
+ 1204 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
+ 1205 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
+ 1206 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+ 1207 jump *label497 always
+ 1208 label *label487
+ 1209 label *label488
+ 1210 draw lineRect *tmp108 *tmp110 9 8
+ 1211 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+ 1212 jump *label497 always
+ 1213 label *label489
+ 1214 label *label490
+ 1215 draw line :displayItem.0:x :y *tmp114 *tmp115
+ 1216 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+ 1217 jump *label497 always
+ 1218 label *label491
+ 1219 label *label492
+ 1220 draw lineRect *tmp120 *tmp122 9 14
+ 1221 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+ 1222 jump *label497 always
+ 1223 label *label493
+ 1224 label *label494
+ 1225 draw lineRect *tmp127 *tmp130 9 8
+ 1226 draw line :displayItem.0:x :y *tmp131 *tmp128
+ 1227 label *label495
+ 1228 label *label496
+ 1229 label *label497
+ 1230 label *label498
+ 1231 jump *label533 always
+ 1232 label *label499
+ 1233 op mod *tmp133 :displayItem.0:amount 10
+ 1234 # "Function: inline def drawDigit(in x, in y, in digit)"
+ 1235 jump *label530 lessThan *tmp133 0
+ 1236 jump *label530 greaterThan *tmp133 9
+ 1237 multijump *label500 *tmp133 0 (m:*label157)
+ 1238 multilabel *label500 (m:*label157)
+ 1239 jump *label510 always
+ 1240 multilabel *label501 (m:*label157)
+ 1241 jump *label512 always
+ 1242 multilabel *label502 (m:*label157)
+ 1243 jump *label514 always
+ 1244 multilabel *label503 (m:*label157)
+ 1245 jump *label516 always
+ 1246 multilabel *label504 (m:*label157)
+ 1247 jump *label518 always
+ 1248 multilabel *label505 (m:*label157)
+ 1249 jump *label520 always
+ 1250 multilabel *label506 (m:*label157)
+ 1251 jump *label522 always
+ 1252 multilabel *label507 (m:*label157)
+ 1253 jump *label524 always
+ 1254 multilabel *label508 (m:*label157)
+ 1255 jump *label526 always
+ 1256 multilabel *label509 (m:*label157)
+ 1257 jump *label528 always
+ 1258 label *label510
+ 1259 op sub *tmp138 :displayItem.0:x 1
+ 1260 op sub *tmp140 :y 1
+ 1261 draw lineRect *tmp138 *tmp140 9 14
+ 1262 jump *label531 always
+ 1263 label *label511
+ 1264 label *label512
+ 1265 op add *tmp142 :displayItem.0:x 6
+ 1266 op add *tmp145 :y 12
+ 1267 draw line *tmp142 :y *tmp142 *tmp145
+ 1268 jump *label531 always
+ 1269 label *label513
+ 1270 label *label514
+ 1271 op add *tmp146 :displayItem.0:x 7
+ 1272 draw line :displayItem.0:x :y *tmp146 :y
+ 1273 op add *tmp147 :y 6
+ 1274 draw line :displayItem.0:x :y :displayItem.0:x *tmp147
+ 1275 draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+ 1276 op add *tmp154 :y 12
+ 1277 draw line *tmp146 *tmp147 *tmp146 *tmp154
+ 1278 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+ 1279 jump *label531 always
+ 1280 label *label515
+ 1281 label *label516
+ 1282 op add *tmp158 :displayItem.0:x 7
+ 1283 op add *tmp160 :y 12
+ 1284 draw line *tmp158 :y *tmp158 *tmp160
+ 1285 draw line :displayItem.0:x :y *tmp158 :y
+ 1286 op add *tmp162 :y 6
+ 1287 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
+ 1288 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+ 1289 jump *label531 always
+ 1290 label *label517
+ 1291 label *label518
+ 1292 op add *tmp168 :displayItem.0:x 7
+ 1293 op add *tmp170 :y 12
+ 1294 draw line *tmp168 :y *tmp168 *tmp170
+ 1295 op add *tmp171 :y 6
+ 1296 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
+ 1297 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+ 1298 jump *label531 always
+ 1299 label *label519
+ 1300 label *label520
+ 1301 op add *tmp176 :displayItem.0:x 7
+ 1302 draw line :displayItem.0:x :y *tmp176 :y
+ 1303 op add *tmp179 :y 6
+ 1304 draw line *tmp176 :y *tmp176 *tmp179
+ 1305 draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+ 1306 op add *tmp184 :y 12
+ 1307 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
+ 1308 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+ 1309 jump *label531 always
+ 1310 label *label521
+ 1311 label *label522
+ 1312 op add *tmp188 :y 12
+ 1313 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
+ 1314 op add *tmp189 :displayItem.0:x 7
+ 1315 draw line :displayItem.0:x :y *tmp189 :y
+ 1316 op add *tmp192 :y 6
+ 1317 draw line *tmp189 :y *tmp189 *tmp192
+ 1318 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
+ 1319 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+ 1320 jump *label531 always
+ 1321 label *label523
+ 1322 label *label524
+ 1323 op add *tmp200 :displayItem.0:x 6
+ 1324 op add *tmp203 :y 12
+ 1325 draw line *tmp200 :y *tmp200 *tmp203
+ 1326 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+ 1327 jump *label531 always
+ 1328 label *label525
+ 1329 label *label526
+ 1330 op sub *tmp209 :displayItem.0:x 1
+ 1331 op sub *tmp211 :y 1
+ 1332 draw lineRect *tmp209 *tmp211 9 14
+ 1333 op add *tmp212 :y 6
+ 1334 op add *tmp213 :displayItem.0:x 7
+ 1335 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+ 1336 jump *label531 always
+ 1337 label *label527
+ 1338 label *label528
+ 1339 op add *tmp215 :displayItem.0:x 7
+ 1340 draw line :displayItem.0:x :y *tmp215 :y
+ 1341 op add *tmp218 :y 12
+ 1342 draw line *tmp215 :y *tmp215 *tmp218
+ 1343 op add *tmp219 :y 6
+ 1344 draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
+ 1345 draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
+ 1346 draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+ 1347 label *label529
+ 1348 label *label530
+ 1349 label *label531
+ 1350 label *label532
+ 1351 label *label533
+ 1352 op sub :displayItem.0:x :displayItem.0:x 11
+ 1353 op idiv :displayItem.0:amount :displayItem.0:amount 10
+ 1354 jump *label534 notEqual :displayItem.0:amount 0
+ 1355 jump *label86 always
+ 1356 label *label534
+ 1357 label *label535
+ 1358 label *label536
+ 1359 op add :displayItem.0:i :displayItem.0:i 1
+ 1360 label *label86
  1361 label *label73
  1362 op add :index :index 1
  1363 op sub :y :y 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   332 jump *label201 always
   333 label *label183
   334 label *label184
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
+  335 draw line :x :y *tmp66 :y
+  336 draw line :x :y *tmp66 *tmp68
   337 draw line *tmp66 *tmp68 *tmp66 *tmp72
   338 draw line *tmp73 *tmp72 *tmp66 *tmp72
   339 jump *label201 always
   340 label *label185
   341 label *label186
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
+  342 draw line :x :y *tmp77 *tmp78
+  343 draw line :x *tmp78 *tmp77 *tmp78
+  344 draw line :x *tmp78 *tmp77 *tmp84
+  345 draw line :x *tmp84 *tmp77 *tmp84
   346 jump *label201 always
   347 label *label187
   348 label *label188
   349 draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
+  350 draw line :x *tmp90 *tmp88 *tmp90
+  351 draw line :x *tmp90 *tmp88 *tmp96
   352 jump *label201 always
   353 label *label189
   354 label *label190
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
+  355 draw line :x :y *tmp97 *tmp98
+  356 draw line :x *tmp98 *tmp97 *tmp98
+  357 draw line :x *tmp98 :x *tmp103
+  358 draw line :x *tmp103 *tmp97 *tmp103
   359 jump *label201 always
   360 label *label191
   361 label *label192
   362 draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
+  363 draw line :x *tmp111 *tmp112 *tmp113
   364 jump *label201 always
   365 label *label193
   366 label *label194
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
+  367 draw line :x :y *tmp114 *tmp115
+  368 draw line :x *tmp115 *tmp114 *tmp115
   369 jump *label201 always
   370 label *label195
   371 label *label196
   372 draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
+  373 draw line :x *tmp123 *tmp124 *tmp123
   374 jump *label201 always
   375 label *label197
   376 label *label198
   377 draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
+  378 draw line :x :y *tmp131 *tmp128
   379 label *label199
   380 label *label200
   381 label *label201
 
   408 multilabel *label213 (m:*label157)
   409 jump *label232 always
   410 label *label214
-    * op sub *tmp138 :displayItem.0:x 1
+  411 op sub *tmp138 :x 1
   412 op sub *tmp140 :y 1
   413 draw lineRect *tmp138 *tmp140 9 14
   414 jump *label235 always
   415 label *label215
   416 label *label216
-    * op add *tmp142 :displayItem.0:x 6
+  417 op add *tmp142 :x 6
   418 op add *tmp145 :y 12
   419 draw line *tmp142 :y *tmp142 *tmp145
   420 jump *label235 always
   421 label *label217
   422 label *label218
-    * op add *tmp146 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp146 :y
+  423 op add *tmp146 :x 7
+  424 draw line :x :y *tmp146 :y
   425 op add *tmp147 :y 6
-    * draw line :displayItem.0:x :y :displayItem.0:x *tmp147
-    * draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
+  426 draw line :x :y :x *tmp147
+  427 draw line :x *tmp147 *tmp146 *tmp147
   428 op add *tmp154 :y 12
   429 draw line *tmp146 *tmp147 *tmp146 *tmp154
-    * draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
+  430 draw line :x *tmp154 *tmp146 *tmp154
   431 jump *label235 always
   432 label *label219
   433 label *label220
-    * op add *tmp158 :displayItem.0:x 7
+  434 op add *tmp158 :x 7
   435 op add *tmp160 :y 12
   436 draw line *tmp158 :y *tmp158 *tmp160
-    * draw line :displayItem.0:x :y *tmp158 :y
+  437 draw line :x :y *tmp158 :y
   438 op add *tmp162 :y 6
-    * draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
-    * draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
+  439 draw line :x *tmp162 *tmp158 *tmp162
+  440 draw line :x *tmp160 *tmp158 *tmp160
   441 jump *label235 always
   442 label *label221
   443 label *label222
-    * op add *tmp168 :displayItem.0:x 7
+  444 op add *tmp168 :x 7
   445 op add *tmp170 :y 12
   446 draw line *tmp168 :y *tmp168 *tmp170
   447 op add *tmp171 :y 6
-    * draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
-    * draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
+  448 draw line :x *tmp171 *tmp168 *tmp171
+  449 draw line :x *tmp171 :x *tmp170
   450 jump *label235 always
   451 label *label223
   452 label *label224
-    * op add *tmp176 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp176 :y
+  453 op add *tmp176 :x 7
+  454 draw line :x :y *tmp176 :y
   455 op add *tmp179 :y 6
   456 draw line *tmp176 :y *tmp176 *tmp179
-    * draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
+  457 draw line :x *tmp179 *tmp176 *tmp179
   458 op add *tmp184 :y 12
-    * draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
-    * draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
+  459 draw line :x *tmp179 :x *tmp184
+  460 draw line :x *tmp184 *tmp176 *tmp184
   461 jump *label235 always
   462 label *label225
   463 label *label226
   464 op add *tmp188 :y 12
-    * draw line :displayItem.0:x :y :displayItem.0:x *tmp188
-    * op add *tmp189 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp189 :y
+  465 draw line :x :y :x *tmp188
+  466 op add *tmp189 :x 7
+  467 draw line :x :y *tmp189 :y
   468 op add *tmp192 :y 6
   469 draw line *tmp189 :y *tmp189 *tmp192
-    * draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
-    * draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
+  470 draw line :x *tmp192 *tmp189 *tmp192
+  471 draw line :x *tmp188 *tmp189 *tmp188
   472 jump *label235 always
   473 label *label227
   474 label *label228
-    * op add *tmp200 :displayItem.0:x 6
+  475 op add *tmp200 :x 6
   476 op add *tmp203 :y 12
   477 draw line *tmp200 :y *tmp200 *tmp203
-    * draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
+  478 draw line :x *tmp203 *tmp200 *tmp203
   479 jump *label235 always
   480 label *label229
   481 label *label230
-    * op sub *tmp209 :displayItem.0:x 1
+  482 op sub *tmp209 :x 1
   483 op sub *tmp211 :y 1
   484 draw lineRect *tmp209 *tmp211 9 14
   485 op add *tmp212 :y 6
-    * op add *tmp213 :displayItem.0:x 7
-    * draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
+  486 op add *tmp213 :x 7
+  487 draw line :x *tmp212 *tmp213 *tmp212
   488 jump *label235 always
   489 label *label231
   490 label *label232
-    * op add *tmp215 :displayItem.0:x 7
-    * draw line :displayItem.0:x :y *tmp215 :y
+  491 op add *tmp215 :x 7
+  492 draw line :x :y *tmp215 :y
   493 op add *tmp218 :y 12
   494 draw line *tmp215 :y *tmp215 *tmp218
   495 op add *tmp219 :y 6
-    * draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
-    * draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
-    * draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
+  496 draw line :x *tmp219 *tmp215 *tmp219
+  497 draw line :x *tmp219 :x *tmp218
+  498 draw line :x *tmp218 *tmp215 *tmp218
   499 label *label233
   500 label *label234
   501 label *label235
   502 label *label236
   503 label *label237
-    * op sub :displayItem.0:x :displayItem.0:x 11
+  504 op sub :displayItem.0:x :x 11
   505 op idiv :displayItem.0:amount :displayItem.0:amount 10
   506 jump *label238 notEqual :displayItem.0:amount 0
   507 jump *label86 always
   508 label *label238
   509 label *label239
   510 label *label240
-    * op add :displayItem.0:i :displayItem.0:i 1
+  511 op add :displayItem.0:i 0 1
   512 label *label243
   513 jump *label277 always
   514 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   720 label *label312
   721 label *label313
   722 label *label314
-    * op add :displayItem.0:i :displayItem.0:i 1
+  723 op add :displayItem.0:i 1 1
   724 label *label317
   725 jump *label351 always
   726 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   932 label *label386
   933 label *label387
   934 label *label388
-    * op add :displayItem.0:i :displayItem.0:i 1
+  935 op add :displayItem.0:i 2 1
   936 label *label391
   937 jump *label425 always
   938 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1144 label *label460
  1145 label *label461
  1146 label *label462
-    * op add :displayItem.0:i :displayItem.0:i 1
+ 1147 op add :displayItem.0:i 3 1
  1148 label *label465
  1149 jump *label499 always
  1150 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1349 label *label531
  1350 label *label532
  1351 label *label533
-    * op sub :displayItem.0:x :displayItem.0:x 11
  1352 op idiv :displayItem.0:amount :displayItem.0:amount 10
  1353 jump *label534 notEqual :displayItem.0:amount 0
  1354 jump *label86 always
  1355 label *label534
  1356 label *label535
  1357 label *label536
-    * op add :displayItem.0:i :displayItem.0:i 1
+ 1358 op add :displayItem.0:i 4 1
  1359 label *label86
  1360 label *label73
  1361 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   264 jump *label72 always
   265 label *label52
   266 # "Function: inline def displayItem(in index, in item, in x, in y)"
-    * set :displayItem.0:x :x
   267 sensor :displayItem.0:amount .CONTAINER :item
   268 op strictEqual *tmp38 .MEMORY null
   269 jump *label74 equal *tmp38 false
 
   294 label *label83
   295 label *label81
   296 label *label75
-    * set :displayItem.0:i 0
   297 label *label168
   298 label *label169
   299 jump *label203 always
 
   506 label *label238
   507 label *label239
   508 label *label240
-    * op add :displayItem.0:i 0 1
   509 label *label243
   510 jump *label277 always
   511 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   710 label *label309
   711 label *label310
   712 label *label311
-    * op sub :displayItem.0:x :displayItem.0:x 11
+  713 op sub :displayItem.0:x :x 22
   714 op idiv :displayItem.0:amount :displayItem.0:amount 10
   715 jump *label312 notEqual :displayItem.0:amount 0
   716 jump *label86 always
   717 label *label312
   718 label *label313
   719 label *label314
-    * op add :displayItem.0:i 1 1
   720 label *label317
   721 jump *label351 always
   722 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
   928 label *label386
   929 label *label387
   930 label *label388
-    * op add :displayItem.0:i 2 1
   931 label *label391
   932 jump *label425 always
   933 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1139 label *label460
  1140 label *label461
  1141 label *label462
-    * op add :displayItem.0:i 3 1
  1142 label *label465
  1143 jump *label499 always
  1144 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
 
  1349 label *label534
  1350 label *label535
  1351 label *label536
-    * op add :displayItem.0:i 4 1
  1352 label *label86
  1353 label *label73
  1354 op add :index :index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
   921 label *label383
   922 label *label384
   923 label *label385
-    * op sub :displayItem.0:x :displayItem.0:x 11
+  924 op sub :displayItem.0:x :x 33
   925 op idiv :displayItem.0:amount :displayItem.0:amount 10
   926 jump *label386 notEqual :displayItem.0:amount 0
   927 jump *label86 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
  1132 label *label457
  1133 label *label458
  1134 label *label459
-    * op sub :displayItem.0:x :displayItem.0:x 11
+ 1135 op sub :displayItem.0:x :x 44
  1136 op idiv :displayItem.0:amount :displayItem.0:amount 10
  1137 jump *label460 notEqual :displayItem.0:amount 0
  1138 jump *label86 always

Modifications by Replicate loop condition at line 56:1 (+7 instructions):
 
    76 op equal *tmp17 .LINKS @links
    77 op land *tmp18 *tmp16 *tmp17
    78 jump *label19 equal *tmp18 false
+   79 label *label539
    80 set :start @time
    81 sensor .CAPACITY .CONTAINER @itemCapacity
    82 op div .LIMIT .CAPACITY 5
 
  1387 print "ms"
  1388 printflush message1
  1389 label *label18
-    * jump *label17 always
+ 1390 sensor *tmp12 .CONTAINER @dead
+ 1391 op equal *tmp13 *tmp12 0
+ 1392 sensor *tmp14 .DISPLAY @dead
+ 1393 op equal *tmp15 *tmp14 0
+ 1394 op land *tmp16 *tmp13 *tmp15
+ 1395 op equal *tmp17 .LINKS @links
+ 1396 op land *tmp18 *tmp16 *tmp17
+ 1397 jump *label539 notEqual *tmp18 false
  1398 label *label19
  1399 end

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
    85 set :y 152
    86 # "Function: inline def eraseImages(in first_column)"
    87 draw color 0 0 80 255
-    * jump *label21 equal true false
    88 draw rect 0 0 23 176
    89 jump *label22 always
    90 label *label21
 
    93 label *label20
    94 # "Function: inline def eraseImages(in first_column)"
    95 draw color 0 0 80 255
-    * jump *label24 equal false false
+   96 jump *label24 always
    97 draw rect 0 0 23 176
    98 jump *label25 always
    99 label *label24
 
   189 set :y 152
   190 # "Function: inline def eraseNumbers(in first_column)"
   191 draw color 0 0 80 255
-    * jump *label50 equal true false
   192 draw rect 23 0 70 176
   193 jump *label51 always
   194 label *label50
 
  1360 set :x 157
  1361 # "Function: inline def eraseNumbers(in first_column)"
  1362 draw color 0 0 80 255
-    * jump *label140 equal false false
+ 1363 jump *label140 always
  1364 draw rect 23 0 70 176
  1365 jump *label141 always
  1366 label *label140

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
  1344 label *label533
  1345 op idiv :displayItem.0:amount :displayItem.0:amount 10
  1346 jump *label534 notEqual :displayItem.0:amount 0
-    * jump *label86 always
  1347 label *label534
  1348 label *label535
  1349 label *label536

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
  1343 label *label532
  1344 label *label533
  1345 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label534 notEqual :displayItem.0:amount 0
  1346 label *label534
  1347 label *label535
  1348 label *label536

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1342 label *label531
  1343 label *label532
  1344 label *label533
-    * op idiv :displayItem.0:amount :displayItem.0:amount 10
  1345 label *label534
  1346 label *label535
  1347 label *label536

Modifications by Final phase, Jump Straightening, iteration 1 (-4 instructions):
 
   500 label *label237
   501 op sub :displayItem.0:x :x 11
   502 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label238 notEqual :displayItem.0:amount 0
-    * jump *label86 always
+  503 jump *label86 equal :displayItem.0:amount 0
   504 label *label238
   505 label *label239
   506 label *label240
 
   710 label *label311
   711 op sub :displayItem.0:x :x 22
   712 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label312 notEqual :displayItem.0:amount 0
-    * jump *label86 always
+  713 jump *label86 equal :displayItem.0:amount 0
   714 label *label312
   715 label *label313
   716 label *label314
 
   920 label *label385
   921 op sub :displayItem.0:x :x 33
   922 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label386 notEqual :displayItem.0:amount 0
-    * jump *label86 always
+  923 jump *label86 equal :displayItem.0:amount 0
   924 label *label386
   925 label *label387
   926 label *label388
 
  1130 label *label459
  1131 op sub :displayItem.0:x :x 44
  1132 op idiv :displayItem.0:amount :displayItem.0:amount 10
-    * jump *label460 notEqual :displayItem.0:amount 0
-    * jump *label86 always
+ 1133 jump *label86 equal :displayItem.0:amount 0
  1134 label *label460
  1135 label *label461
  1136 label *label462

Modifications by Final phase, Jump Threading, iteration 1:
+    0 label __start__
     1 set .CONTAINER null
     2 set .MEMORY null
     3 set .MESSAGE null
 
    76 op land *tmp16 *tmp13 *tmp15
    77 op equal *tmp17 .LINKS @links
    78 op land *tmp18 *tmp16 *tmp17
-    * jump *label19 equal *tmp18 false
+   79 jump __start__ equal *tmp18 false
    80 label *label539
    81 set :start @time
    82 sensor .CAPACITY .CONTAINER @itemCapacity
 
   269 jump *label74 equal *tmp38 false
   270 jump *label76 notEqual :displayItem.0:amount .CAPACITY
   271 draw color 0 255 0 255
-    * jump *label77 always
+  272 jump *label203 always
   273 label *label76
   274 jump *label78 lessThanEq :displayItem.0:amount .LIMIT
   275 draw color 255 255 0 255
-    * jump *label79 always
+  276 jump *label203 always
   277 label *label78
   278 draw color 255 80 80 255
   279 label *label79
   280 label *label77
-    * jump *label75 always
+  281 jump *label203 always
   282 label *label74
   283 read :displayItem.0:last .MEMORY :index
   284 write :displayItem.0:amount .MEMORY :index
   285 jump *label80 notEqual :displayItem.0:amount :displayItem.0:last
   286 draw color 255 255 0 255
-    * jump *label81 always
+  287 jump *label203 always
   288 label *label80
   289 jump *label82 greaterThanEq :displayItem.0:amount :displayItem.0:last
   290 draw color 255 80 80 255
-    * jump *label83 always
+  291 jump *label203 always
   292 label *label82
   293 draw color 0 255 0 255
   294 label *label83
 
   298 label *label169
   299 jump *label203 always
   300 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label200 lessThan *tmp53 0
-    * jump *label200 greaterThan *tmp53 9
+  301 jump *label237 lessThan *tmp53 0
+  302 jump *label237 greaterThan *tmp53 9
   303 multijump *label170 *tmp53 0 (m:*label145)
   304 multilabel *label170 (m:*label145)
   305 jump *label180 always
 
   323 jump *label198 always
   324 label *label180
   325 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label201 always
+  326 jump *label237 always
   327 label *label181
   328 label *label182
   329 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label201 always
+  330 jump *label237 always
   331 label *label183
   332 label *label184
   333 draw line :x :y *tmp66 :y
   334 draw line :x :y *tmp66 *tmp68
   335 draw line *tmp66 *tmp68 *tmp66 *tmp72
   336 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label201 always
+  337 jump *label237 always
   338 label *label185
   339 label *label186
   340 draw line :x :y *tmp77 *tmp78
   341 draw line :x *tmp78 *tmp77 *tmp78
   342 draw line :x *tmp78 *tmp77 *tmp84
   343 draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label201 always
+  344 jump *label237 always
   345 label *label187
   346 label *label188
   347 draw line *tmp88 :y *tmp88 *tmp90
   348 draw line :x *tmp90 *tmp88 *tmp90
   349 draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label201 always
+  350 jump *label237 always
   351 label *label189
   352 label *label190
   353 draw line :x :y *tmp97 *tmp98
   354 draw line :x *tmp98 *tmp97 *tmp98
   355 draw line :x *tmp98 :x *tmp103
   356 draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label201 always
+  357 jump *label237 always
   358 label *label191
   359 label *label192
   360 draw lineRect *tmp108 *tmp110 9 8
   361 draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label201 always
+  362 jump *label237 always
   363 label *label193
   364 label *label194
   365 draw line :x :y *tmp114 *tmp115
   366 draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label201 always
+  367 jump *label237 always
   368 label *label195
   369 label *label196
   370 draw lineRect *tmp120 *tmp122 9 14
   371 draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label201 always
+  372 jump *label237 always
   373 label *label197
   374 label *label198
   375 draw lineRect *tmp127 *tmp130 9 8
 
   508 label *label243
   509 jump *label277 always
   510 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label274 lessThan *tmp53 0
-    * jump *label274 greaterThan *tmp53 9
+  511 jump *label311 lessThan *tmp53 0
+  512 jump *label311 greaterThan *tmp53 9
   513 multijump *label244 *tmp53 0 (m:*label145)
   514 multilabel *label244 (m:*label145)
   515 jump *label254 always
 
   533 jump *label272 always
   534 label *label254
   535 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label275 always
+  536 jump *label311 always
   537 label *label255
   538 label *label256
   539 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label275 always
+  540 jump *label311 always
   541 label *label257
   542 label *label258
   543 draw line :displayItem.0:x :y *tmp66 :y
   544 draw line :displayItem.0:x :y *tmp66 *tmp68
   545 draw line *tmp66 *tmp68 *tmp66 *tmp72
   546 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label275 always
+  547 jump *label311 always
   548 label *label259
   549 label *label260
   550 draw line :displayItem.0:x :y *tmp77 *tmp78
   551 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
   552 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
   553 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label275 always
+  554 jump *label311 always
   555 label *label261
   556 label *label262
   557 draw line *tmp88 :y *tmp88 *tmp90
   558 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
   559 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label275 always
+  560 jump *label311 always
   561 label *label263
   562 label *label264
   563 draw line :displayItem.0:x :y *tmp97 *tmp98
   564 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
   565 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
   566 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label275 always
+  567 jump *label311 always
   568 label *label265
   569 label *label266
   570 draw lineRect *tmp108 *tmp110 9 8
   571 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label275 always
+  572 jump *label311 always
   573 label *label267
   574 label *label268
   575 draw line :displayItem.0:x :y *tmp114 *tmp115
   576 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label275 always
+  577 jump *label311 always
   578 label *label269
   579 label *label270
   580 draw lineRect *tmp120 *tmp122 9 14
   581 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label275 always
+  582 jump *label311 always
   583 label *label271
   584 label *label272
   585 draw lineRect *tmp127 *tmp130 9 8
 
   718 label *label317
   719 jump *label351 always
   720 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label348 lessThan *tmp53 0
-    * jump *label348 greaterThan *tmp53 9
+  721 jump *label385 lessThan *tmp53 0
+  722 jump *label385 greaterThan *tmp53 9
   723 multijump *label318 *tmp53 0 (m:*label145)
   724 multilabel *label318 (m:*label145)
   725 jump *label328 always
 
   743 jump *label346 always
   744 label *label328
   745 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label349 always
+  746 jump *label385 always
   747 label *label329
   748 label *label330
   749 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label349 always
+  750 jump *label385 always
   751 label *label331
   752 label *label332
   753 draw line :displayItem.0:x :y *tmp66 :y
   754 draw line :displayItem.0:x :y *tmp66 *tmp68
   755 draw line *tmp66 *tmp68 *tmp66 *tmp72
   756 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label349 always
+  757 jump *label385 always
   758 label *label333
   759 label *label334
   760 draw line :displayItem.0:x :y *tmp77 *tmp78
   761 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
   762 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
   763 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label349 always
+  764 jump *label385 always
   765 label *label335
   766 label *label336
   767 draw line *tmp88 :y *tmp88 *tmp90
   768 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
   769 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label349 always
+  770 jump *label385 always
   771 label *label337
   772 label *label338
   773 draw line :displayItem.0:x :y *tmp97 *tmp98
   774 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
   775 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
   776 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label349 always
+  777 jump *label385 always
   778 label *label339
   779 label *label340
   780 draw lineRect *tmp108 *tmp110 9 8
   781 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label349 always
+  782 jump *label385 always
   783 label *label341
   784 label *label342
   785 draw line :displayItem.0:x :y *tmp114 *tmp115
   786 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label349 always
+  787 jump *label385 always
   788 label *label343
   789 label *label344
   790 draw lineRect *tmp120 *tmp122 9 14
   791 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label349 always
+  792 jump *label385 always
   793 label *label345
   794 label *label346
   795 draw lineRect *tmp127 *tmp130 9 8
 
   928 label *label391
   929 jump *label425 always
   930 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label422 lessThan *tmp53 0
-    * jump *label422 greaterThan *tmp53 9
+  931 jump *label459 lessThan *tmp53 0
+  932 jump *label459 greaterThan *tmp53 9
   933 multijump *label392 *tmp53 0 (m:*label145)
   934 multilabel *label392 (m:*label145)
   935 jump *label402 always
 
   953 jump *label420 always
   954 label *label402
   955 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label423 always
+  956 jump *label459 always
   957 label *label403
   958 label *label404
   959 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label423 always
+  960 jump *label459 always
   961 label *label405
   962 label *label406
   963 draw line :displayItem.0:x :y *tmp66 :y
   964 draw line :displayItem.0:x :y *tmp66 *tmp68
   965 draw line *tmp66 *tmp68 *tmp66 *tmp72
   966 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label423 always
+  967 jump *label459 always
   968 label *label407
   969 label *label408
   970 draw line :displayItem.0:x :y *tmp77 *tmp78
   971 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
   972 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
   973 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label423 always
+  974 jump *label459 always
   975 label *label409
   976 label *label410
   977 draw line *tmp88 :y *tmp88 *tmp90
   978 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
   979 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label423 always
+  980 jump *label459 always
   981 label *label411
   982 label *label412
   983 draw line :displayItem.0:x :y *tmp97 *tmp98
   984 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
   985 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
   986 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label423 always
+  987 jump *label459 always
   988 label *label413
   989 label *label414
   990 draw lineRect *tmp108 *tmp110 9 8
   991 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label423 always
+  992 jump *label459 always
   993 label *label415
   994 label *label416
   995 draw line :displayItem.0:x :y *tmp114 *tmp115
   996 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label423 always
+  997 jump *label459 always
   998 label *label417
   999 label *label418
  1000 draw lineRect *tmp120 *tmp122 9 14
  1001 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label423 always
+ 1002 jump *label459 always
  1003 label *label419
  1004 label *label420
  1005 draw lineRect *tmp127 *tmp130 9 8
 
  1138 label *label465
  1139 jump *label499 always
  1140 # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label496 lessThan *tmp53 0
-    * jump *label496 greaterThan *tmp53 9
+ 1141 jump *label533 lessThan *tmp53 0
+ 1142 jump *label533 greaterThan *tmp53 9
  1143 multijump *label466 *tmp53 0 (m:*label145)
  1144 multilabel *label466 (m:*label145)
  1145 jump *label476 always
 
  1163 jump *label494 always
  1164 label *label476
  1165 draw lineRect *tmp58 *tmp60 9 14
-    * jump *label497 always
+ 1166 jump *label533 always
  1167 label *label477
  1168 label *label478
  1169 draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label497 always
+ 1170 jump *label533 always
  1171 label *label479
  1172 label *label480
  1173 draw line :displayItem.0:x :y *tmp66 :y
  1174 draw line :displayItem.0:x :y *tmp66 *tmp68
  1175 draw line *tmp66 *tmp68 *tmp66 *tmp72
  1176 draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label497 always
+ 1177 jump *label533 always
  1178 label *label481
  1179 label *label482
  1180 draw line :displayItem.0:x :y *tmp77 *tmp78
  1181 draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
  1182 draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
  1183 draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label497 always
+ 1184 jump *label533 always
  1185 label *label483
  1186 label *label484
  1187 draw line *tmp88 :y *tmp88 *tmp90
  1188 draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
  1189 draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label497 always
+ 1190 jump *label533 always
  1191 label *label485
  1192 label *label486
  1193 draw line :displayItem.0:x :y *tmp97 *tmp98
  1194 draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
  1195 draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
  1196 draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label497 always
+ 1197 jump *label533 always
  1198 label *label487
  1199 label *label488
  1200 draw lineRect *tmp108 *tmp110 9 8
  1201 draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label497 always
+ 1202 jump *label533 always
  1203 label *label489
  1204 label *label490
  1205 draw line :displayItem.0:x :y *tmp114 *tmp115
  1206 draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label497 always
+ 1207 jump *label533 always
  1208 label *label491
  1209 label *label492
  1210 draw lineRect *tmp120 *tmp122 9 14
  1211 draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label497 always
+ 1212 jump *label533 always
  1213 label *label493
  1214 label *label494
  1215 draw lineRect *tmp127 *tmp130 9 8
 
  1356 draw color 0 0 80 255
  1357 jump *label140 always
  1358 draw rect 23 0 70 176
-    * jump *label141 always
+ 1359 multijump *tmp35 0 0 (m:marker1)
  1360 label *label140
  1361 draw rect 109 0 176 176
  1362 label *label141

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-246 instructions):
 
    88 draw color 0 0 80 255
    89 draw rect 0 0 23 176
    90 jump *label22 always
-    * label *label21
-    * draw rect 93 0 16 176
    91 label *label22
    92 label *label20
    93 # "Function: inline def eraseImages(in first_column)"
    94 draw color 0 0 80 255
    95 jump *label24 always
-    * draw rect 0 0 23 176
-    * jump *label25 always
    96 label *label24
    97 draw rect 93 0 16 176
    98 label *label25
 
   188 draw color 0 0 80 255
   189 draw rect 23 0 70 176
   190 jump *label51 always
-    * label *label50
-    * draw rect 109 0 176 176
   191 label *label51
   192 label *label49
   193 set :index 0
 
   291 label *label168
   292 label *label169
   293 jump *label203 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label237 lessThan *tmp53 0
-    * jump *label237 greaterThan *tmp53 9
-    * multijump *label170 *tmp53 0 (m:*label145)
-    * multilabel *label170 (m:*label145)
-    * jump *label180 always
-    * multilabel *label171 (m:*label145)
-    * jump *label182 always
-    * multilabel *label172 (m:*label145)
-    * jump *label184 always
-    * multilabel *label173 (m:*label145)
-    * jump *label186 always
-    * multilabel *label174 (m:*label145)
-    * jump *label188 always
-    * multilabel *label175 (m:*label145)
-    * jump *label190 always
-    * multilabel *label176 (m:*label145)
-    * jump *label192 always
-    * multilabel *label177 (m:*label145)
-    * jump *label194 always
-    * multilabel *label178 (m:*label145)
-    * jump *label196 always
-    * multilabel *label179 (m:*label145)
-    * jump *label198 always
-    * label *label180
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label237 always
-    * label *label181
-    * label *label182
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label237 always
-    * label *label183
-    * label *label184
-    * draw line :x :y *tmp66 :y
-    * draw line :x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label237 always
-    * label *label185
-    * label *label186
-    * draw line :x :y *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp78
-    * draw line :x *tmp78 *tmp77 *tmp84
-    * draw line :x *tmp84 *tmp77 *tmp84
-    * jump *label237 always
-    * label *label187
-    * label *label188
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp90
-    * draw line :x *tmp90 *tmp88 *tmp96
-    * jump *label237 always
-    * label *label189
-    * label *label190
-    * draw line :x :y *tmp97 *tmp98
-    * draw line :x *tmp98 *tmp97 *tmp98
-    * draw line :x *tmp98 :x *tmp103
-    * draw line :x *tmp103 *tmp97 *tmp103
-    * jump *label237 always
-    * label *label191
-    * label *label192
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :x *tmp111 *tmp112 *tmp113
-    * jump *label237 always
-    * label *label193
-    * label *label194
-    * draw line :x :y *tmp114 *tmp115
-    * draw line :x *tmp115 *tmp114 *tmp115
-    * jump *label237 always
-    * label *label195
-    * label *label196
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :x *tmp123 *tmp124 *tmp123
-    * jump *label237 always
-    * label *label197
-    * label *label198
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :x :y *tmp131 *tmp128
-    * label *label199
-    * label *label200
-    * label *label201
-    * label *label202
-    * jump *label237 always
   294 label *label203
   295 op mod *tmp133 :displayItem.0:amount 10
   296 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   322 op sub *tmp140 :y 1
   323 draw lineRect *tmp138 *tmp140 9 14
   324 jump *label235 always
-    * label *label215
   325 label *label216
   326 op add *tmp142 :x 6
   327 op add *tmp145 :y 12
   328 draw line *tmp142 :y *tmp142 *tmp145
   329 jump *label235 always
-    * label *label217
   330 label *label218
   331 op add *tmp146 :x 7
   332 draw line :x :y *tmp146 :y
 
   337 draw line *tmp146 *tmp147 *tmp146 *tmp154
   338 draw line :x *tmp154 *tmp146 *tmp154
   339 jump *label235 always
-    * label *label219
   340 label *label220
   341 op add *tmp158 :x 7
   342 op add *tmp160 :y 12
 
   346 draw line :x *tmp162 *tmp158 *tmp162
   347 draw line :x *tmp160 *tmp158 *tmp160
   348 jump *label235 always
-    * label *label221
   349 label *label222
   350 op add *tmp168 :x 7
   351 op add *tmp170 :y 12
 
   354 draw line :x *tmp171 *tmp168 *tmp171
   355 draw line :x *tmp171 :x *tmp170
   356 jump *label235 always
-    * label *label223
   357 label *label224
   358 op add *tmp176 :x 7
   359 draw line :x :y *tmp176 :y
 
   364 draw line :x *tmp179 :x *tmp184
   365 draw line :x *tmp184 *tmp176 *tmp184
   366 jump *label235 always
-    * label *label225
   367 label *label226
   368 op add *tmp188 :y 12
   369 draw line :x :y :x *tmp188
 
   374 draw line :x *tmp192 *tmp189 *tmp192
   375 draw line :x *tmp188 *tmp189 *tmp188
   376 jump *label235 always
-    * label *label227
   377 label *label228
   378 op add *tmp200 :x 6
   379 op add *tmp203 :y 12
   380 draw line *tmp200 :y *tmp200 *tmp203
   381 draw line :x *tmp203 *tmp200 *tmp203
   382 jump *label235 always
-    * label *label229
   383 label *label230
   384 op sub *tmp209 :x 1
   385 op sub *tmp211 :y 1
 
   388 op add *tmp213 :x 7
   389 draw line :x *tmp212 *tmp213 *tmp212
   390 jump *label235 always
-    * label *label231
   391 label *label232
   392 op add *tmp215 :x 7
   393 draw line :x :y *tmp215 :y
 
   410 label *label240
   411 label *label243
   412 jump *label277 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label311 lessThan *tmp53 0
-    * jump *label311 greaterThan *tmp53 9
-    * multijump *label244 *tmp53 0 (m:*label145)
-    * multilabel *label244 (m:*label145)
-    * jump *label254 always
-    * multilabel *label245 (m:*label145)
-    * jump *label256 always
-    * multilabel *label246 (m:*label145)
-    * jump *label258 always
-    * multilabel *label247 (m:*label145)
-    * jump *label260 always
-    * multilabel *label248 (m:*label145)
-    * jump *label262 always
-    * multilabel *label249 (m:*label145)
-    * jump *label264 always
-    * multilabel *label250 (m:*label145)
-    * jump *label266 always
-    * multilabel *label251 (m:*label145)
-    * jump *label268 always
-    * multilabel *label252 (m:*label145)
-    * jump *label270 always
-    * multilabel *label253 (m:*label145)
-    * jump *label272 always
-    * label *label254
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label311 always
-    * label *label255
-    * label *label256
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label311 always
-    * label *label257
-    * label *label258
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label311 always
-    * label *label259
-    * label *label260
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label311 always
-    * label *label261
-    * label *label262
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label311 always
-    * label *label263
-    * label *label264
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label311 always
-    * label *label265
-    * label *label266
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label311 always
-    * label *label267
-    * label *label268
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label311 always
-    * label *label269
-    * label *label270
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label311 always
-    * label *label271
-    * label *label272
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
-    * label *label273
-    * label *label274
-    * label *label275
-    * label *label276
-    * jump *label311 always
   413 label *label277
   414 op mod *tmp133 :displayItem.0:amount 10
   415 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   441 op sub *tmp140 :y 1
   442 draw lineRect *tmp138 *tmp140 9 14
   443 jump *label309 always
-    * label *label289
   444 label *label290
   445 op add *tmp142 :displayItem.0:x 6
   446 op add *tmp145 :y 12
   447 draw line *tmp142 :y *tmp142 *tmp145
   448 jump *label309 always
-    * label *label291
   449 label *label292
   450 op add *tmp146 :displayItem.0:x 7
   451 draw line :displayItem.0:x :y *tmp146 :y
 
   456 draw line *tmp146 *tmp147 *tmp146 *tmp154
   457 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   458 jump *label309 always
-    * label *label293
   459 label *label294
   460 op add *tmp158 :displayItem.0:x 7
   461 op add *tmp160 :y 12
 
   465 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
   466 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   467 jump *label309 always
-    * label *label295
   468 label *label296
   469 op add *tmp168 :displayItem.0:x 7
   470 op add *tmp170 :y 12
 
   473 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
   474 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   475 jump *label309 always
-    * label *label297
   476 label *label298
   477 op add *tmp176 :displayItem.0:x 7
   478 draw line :displayItem.0:x :y *tmp176 :y
 
   483 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
   484 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   485 jump *label309 always
-    * label *label299
   486 label *label300
   487 op add *tmp188 :y 12
   488 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
 
   493 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
   494 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   495 jump *label309 always
-    * label *label301
   496 label *label302
   497 op add *tmp200 :displayItem.0:x 6
   498 op add *tmp203 :y 12
   499 draw line *tmp200 :y *tmp200 *tmp203
   500 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   501 jump *label309 always
-    * label *label303
   502 label *label304
   503 op sub *tmp209 :displayItem.0:x 1
   504 op sub *tmp211 :y 1
 
   507 op add *tmp213 :displayItem.0:x 7
   508 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   509 jump *label309 always
-    * label *label305
   510 label *label306
   511 op add *tmp215 :displayItem.0:x 7
   512 draw line :displayItem.0:x :y *tmp215 :y
 
   529 label *label314
   530 label *label317
   531 jump *label351 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label385 lessThan *tmp53 0
-    * jump *label385 greaterThan *tmp53 9
-    * multijump *label318 *tmp53 0 (m:*label145)
-    * multilabel *label318 (m:*label145)
-    * jump *label328 always
-    * multilabel *label319 (m:*label145)
-    * jump *label330 always
-    * multilabel *label320 (m:*label145)
-    * jump *label332 always
-    * multilabel *label321 (m:*label145)
-    * jump *label334 always
-    * multilabel *label322 (m:*label145)
-    * jump *label336 always
-    * multilabel *label323 (m:*label145)
-    * jump *label338 always
-    * multilabel *label324 (m:*label145)
-    * jump *label340 always
-    * multilabel *label325 (m:*label145)
-    * jump *label342 always
-    * multilabel *label326 (m:*label145)
-    * jump *label344 always
-    * multilabel *label327 (m:*label145)
-    * jump *label346 always
-    * label *label328
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label385 always
-    * label *label329
-    * label *label330
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label385 always
-    * label *label331
-    * label *label332
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label385 always
-    * label *label333
-    * label *label334
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label385 always
-    * label *label335
-    * label *label336
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label385 always
-    * label *label337
-    * label *label338
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label385 always
-    * label *label339
-    * label *label340
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label385 always
-    * label *label341
-    * label *label342
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label385 always
-    * label *label343
-    * label *label344
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label385 always
-    * label *label345
-    * label *label346
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
-    * label *label347
-    * label *label348
-    * label *label349
-    * label *label350
-    * jump *label385 always
   532 label *label351
   533 op mod *tmp133 :displayItem.0:amount 10
   534 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   560 op sub *tmp140 :y 1
   561 draw lineRect *tmp138 *tmp140 9 14
   562 jump *label383 always
-    * label *label363
   563 label *label364
   564 op add *tmp142 :displayItem.0:x 6
   565 op add *tmp145 :y 12
   566 draw line *tmp142 :y *tmp142 *tmp145
   567 jump *label383 always
-    * label *label365
   568 label *label366
   569 op add *tmp146 :displayItem.0:x 7
   570 draw line :displayItem.0:x :y *tmp146 :y
 
   575 draw line *tmp146 *tmp147 *tmp146 *tmp154
   576 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   577 jump *label383 always
-    * label *label367
   578 label *label368
   579 op add *tmp158 :displayItem.0:x 7
   580 op add *tmp160 :y 12
 
   584 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
   585 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   586 jump *label383 always
-    * label *label369
   587 label *label370
   588 op add *tmp168 :displayItem.0:x 7
   589 op add *tmp170 :y 12
 
   592 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
   593 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   594 jump *label383 always
-    * label *label371
   595 label *label372
   596 op add *tmp176 :displayItem.0:x 7
   597 draw line :displayItem.0:x :y *tmp176 :y
 
   602 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
   603 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   604 jump *label383 always
-    * label *label373
   605 label *label374
   606 op add *tmp188 :y 12
   607 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
 
   612 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
   613 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   614 jump *label383 always
-    * label *label375
   615 label *label376
   616 op add *tmp200 :displayItem.0:x 6
   617 op add *tmp203 :y 12
   618 draw line *tmp200 :y *tmp200 *tmp203
   619 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   620 jump *label383 always
-    * label *label377
   621 label *label378
   622 op sub *tmp209 :displayItem.0:x 1
   623 op sub *tmp211 :y 1
 
   626 op add *tmp213 :displayItem.0:x 7
   627 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   628 jump *label383 always
-    * label *label379
   629 label *label380
   630 op add *tmp215 :displayItem.0:x 7
   631 draw line :displayItem.0:x :y *tmp215 :y
 
   648 label *label388
   649 label *label391
   650 jump *label425 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label459 lessThan *tmp53 0
-    * jump *label459 greaterThan *tmp53 9
-    * multijump *label392 *tmp53 0 (m:*label145)
-    * multilabel *label392 (m:*label145)
-    * jump *label402 always
-    * multilabel *label393 (m:*label145)
-    * jump *label404 always
-    * multilabel *label394 (m:*label145)
-    * jump *label406 always
-    * multilabel *label395 (m:*label145)
-    * jump *label408 always
-    * multilabel *label396 (m:*label145)
-    * jump *label410 always
-    * multilabel *label397 (m:*label145)
-    * jump *label412 always
-    * multilabel *label398 (m:*label145)
-    * jump *label414 always
-    * multilabel *label399 (m:*label145)
-    * jump *label416 always
-    * multilabel *label400 (m:*label145)
-    * jump *label418 always
-    * multilabel *label401 (m:*label145)
-    * jump *label420 always
-    * label *label402
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label459 always
-    * label *label403
-    * label *label404
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label459 always
-    * label *label405
-    * label *label406
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label459 always
-    * label *label407
-    * label *label408
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label459 always
-    * label *label409
-    * label *label410
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label459 always
-    * label *label411
-    * label *label412
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label459 always
-    * label *label413
-    * label *label414
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label459 always
-    * label *label415
-    * label *label416
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label459 always
-    * label *label417
-    * label *label418
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label459 always
-    * label *label419
-    * label *label420
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
-    * label *label421
-    * label *label422
-    * label *label423
-    * label *label424
-    * jump *label459 always
   651 label *label425
   652 op mod *tmp133 :displayItem.0:amount 10
   653 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   679 op sub *tmp140 :y 1
   680 draw lineRect *tmp138 *tmp140 9 14
   681 jump *label457 always
-    * label *label437
   682 label *label438
   683 op add *tmp142 :displayItem.0:x 6
   684 op add *tmp145 :y 12
   685 draw line *tmp142 :y *tmp142 *tmp145
   686 jump *label457 always
-    * label *label439
   687 label *label440
   688 op add *tmp146 :displayItem.0:x 7
   689 draw line :displayItem.0:x :y *tmp146 :y
 
   694 draw line *tmp146 *tmp147 *tmp146 *tmp154
   695 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   696 jump *label457 always
-    * label *label441
   697 label *label442
   698 op add *tmp158 :displayItem.0:x 7
   699 op add *tmp160 :y 12
 
   703 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
   704 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   705 jump *label457 always
-    * label *label443
   706 label *label444
   707 op add *tmp168 :displayItem.0:x 7
   708 op add *tmp170 :y 12
 
   711 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
   712 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   713 jump *label457 always
-    * label *label445
   714 label *label446
   715 op add *tmp176 :displayItem.0:x 7
   716 draw line :displayItem.0:x :y *tmp176 :y
 
   721 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
   722 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   723 jump *label457 always
-    * label *label447
   724 label *label448
   725 op add *tmp188 :y 12
   726 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
 
   731 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
   732 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   733 jump *label457 always
-    * label *label449
   734 label *label450
   735 op add *tmp200 :displayItem.0:x 6
   736 op add *tmp203 :y 12
   737 draw line *tmp200 :y *tmp200 *tmp203
   738 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   739 jump *label457 always
-    * label *label451
   740 label *label452
   741 op sub *tmp209 :displayItem.0:x 1
   742 op sub *tmp211 :y 1
 
   745 op add *tmp213 :displayItem.0:x 7
   746 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   747 jump *label457 always
-    * label *label453
   748 label *label454
   749 op add *tmp215 :displayItem.0:x 7
   750 draw line :displayItem.0:x :y *tmp215 :y
 
   767 label *label462
   768 label *label465
   769 jump *label499 always
-    * # "Function: inline def drawDigitSlanted(in x, in y, in digit)"
-    * jump *label533 lessThan *tmp53 0
-    * jump *label533 greaterThan *tmp53 9
-    * multijump *label466 *tmp53 0 (m:*label145)
-    * multilabel *label466 (m:*label145)
-    * jump *label476 always
-    * multilabel *label467 (m:*label145)
-    * jump *label478 always
-    * multilabel *label468 (m:*label145)
-    * jump *label480 always
-    * multilabel *label469 (m:*label145)
-    * jump *label482 always
-    * multilabel *label470 (m:*label145)
-    * jump *label484 always
-    * multilabel *label471 (m:*label145)
-    * jump *label486 always
-    * multilabel *label472 (m:*label145)
-    * jump *label488 always
-    * multilabel *label473 (m:*label145)
-    * jump *label490 always
-    * multilabel *label474 (m:*label145)
-    * jump *label492 always
-    * multilabel *label475 (m:*label145)
-    * jump *label494 always
-    * label *label476
-    * draw lineRect *tmp58 *tmp60 9 14
-    * jump *label533 always
-    * label *label477
-    * label *label478
-    * draw line *tmp62 :y *tmp62 *tmp65
-    * jump *label533 always
-    * label *label479
-    * label *label480
-    * draw line :displayItem.0:x :y *tmp66 :y
-    * draw line :displayItem.0:x :y *tmp66 *tmp68
-    * draw line *tmp66 *tmp68 *tmp66 *tmp72
-    * draw line *tmp73 *tmp72 *tmp66 *tmp72
-    * jump *label533 always
-    * label *label481
-    * label *label482
-    * draw line :displayItem.0:x :y *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp78
-    * draw line :displayItem.0:x *tmp78 *tmp77 *tmp84
-    * draw line :displayItem.0:x *tmp84 *tmp77 *tmp84
-    * jump *label533 always
-    * label *label483
-    * label *label484
-    * draw line *tmp88 :y *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp90
-    * draw line :displayItem.0:x *tmp90 *tmp88 *tmp96
-    * jump *label533 always
-    * label *label485
-    * label *label486
-    * draw line :displayItem.0:x :y *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 *tmp97 *tmp98
-    * draw line :displayItem.0:x *tmp98 :displayItem.0:x *tmp103
-    * draw line :displayItem.0:x *tmp103 *tmp97 *tmp103
-    * jump *label533 always
-    * label *label487
-    * label *label488
-    * draw lineRect *tmp108 *tmp110 9 8
-    * draw line :displayItem.0:x *tmp111 *tmp112 *tmp113
-    * jump *label533 always
-    * label *label489
-    * label *label490
-    * draw line :displayItem.0:x :y *tmp114 *tmp115
-    * draw line :displayItem.0:x *tmp115 *tmp114 *tmp115
-    * jump *label533 always
-    * label *label491
-    * label *label492
-    * draw lineRect *tmp120 *tmp122 9 14
-    * draw line :displayItem.0:x *tmp123 *tmp124 *tmp123
-    * jump *label533 always
-    * label *label493
-    * label *label494
-    * draw lineRect *tmp127 *tmp130 9 8
-    * draw line :displayItem.0:x :y *tmp131 *tmp128
-    * label *label495
-    * label *label496
-    * label *label497
-    * label *label498
-    * jump *label533 always
   770 label *label499
   771 op mod *tmp133 :displayItem.0:amount 10
   772 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   798 op sub *tmp140 :y 1
   799 draw lineRect *tmp138 *tmp140 9 14
   800 jump *label531 always
-    * label *label511
   801 label *label512
   802 op add *tmp142 :displayItem.0:x 6
   803 op add *tmp145 :y 12
   804 draw line *tmp142 :y *tmp142 *tmp145
   805 jump *label531 always
-    * label *label513
   806 label *label514
   807 op add *tmp146 :displayItem.0:x 7
   808 draw line :displayItem.0:x :y *tmp146 :y
 
   813 draw line *tmp146 *tmp147 *tmp146 *tmp154
   814 draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
   815 jump *label531 always
-    * label *label515
   816 label *label516
   817 op add *tmp158 :displayItem.0:x 7
   818 op add *tmp160 :y 12
 
   822 draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
   823 draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
   824 jump *label531 always
-    * label *label517
   825 label *label518
   826 op add *tmp168 :displayItem.0:x 7
   827 op add *tmp170 :y 12
 
   830 draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
   831 draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
   832 jump *label531 always
-    * label *label519
   833 label *label520
   834 op add *tmp176 :displayItem.0:x 7
   835 draw line :displayItem.0:x :y *tmp176 :y
 
   840 draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
   841 draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
   842 jump *label531 always
-    * label *label521
   843 label *label522
   844 op add *tmp188 :y 12
   845 draw line :displayItem.0:x :y :displayItem.0:x *tmp188
 
   850 draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
   851 draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
   852 jump *label531 always
-    * label *label523
   853 label *label524
   854 op add *tmp200 :displayItem.0:x 6
   855 op add *tmp203 :y 12
   856 draw line *tmp200 :y *tmp200 *tmp203
   857 draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
   858 jump *label531 always
-    * label *label525
   859 label *label526
   860 op sub *tmp209 :displayItem.0:x 1
   861 op sub *tmp211 :y 1
 
   864 op add *tmp213 :displayItem.0:x 7
   865 draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
   866 jump *label531 always
-    * label *label527
   867 label *label528
   868 op add *tmp215 :displayItem.0:x 7
   869 draw line :displayItem.0:x :y *tmp215 :y
 
   894 # "Function: inline def eraseNumbers(in first_column)"
   895 draw color 0 0 80 255
   896 jump *label140 always
-    * draw rect 23 0 70 176
-    * multijump *tmp35 0 0 (m:marker1)
   897 label *label140
   898 draw rect 109 0 176 176
   899 label *label141

Modifications by Final phase, Single Step Elimination, iteration 1 (-9 instructions):
 
    87 # "Function: inline def eraseImages(in first_column)"
    88 draw color 0 0 80 255
    89 draw rect 0 0 23 176
-    * jump *label22 always
    90 label *label22
    91 label *label20
    92 # "Function: inline def eraseImages(in first_column)"
    93 draw color 0 0 80 255
-    * jump *label24 always
    94 label *label24
    95 draw rect 93 0 16 176
    96 label *label25
 
   185 # "Function: inline def eraseNumbers(in first_column)"
   186 draw color 0 0 80 255
   187 draw rect 23 0 70 176
-    * jump *label51 always
   188 label *label51
   189 label *label49
   190 set :index 0
 
   406 label *label239
   407 label *label240
   408 label *label243
-    * jump *label277 always
   409 label *label277
   410 op mod *tmp133 :displayItem.0:amount 10
   411 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   524 label *label313
   525 label *label314
   526 label *label317
-    * jump *label351 always
   527 label *label351
   528 op mod *tmp133 :displayItem.0:amount 10
   529 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   642 label *label387
   643 label *label388
   644 label *label391
-    * jump *label425 always
   645 label *label425
   646 op mod *tmp133 :displayItem.0:amount 10
   647 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   760 label *label461
   761 label *label462
   762 label *label465
-    * jump *label499 always
   763 label *label499
   764 op mod *tmp133 :displayItem.0:amount 10
   765 # "Function: inline def drawDigit(in x, in y, in digit)"
 
   886 set :x 157
   887 # "Function: inline def eraseNumbers(in first_column)"
   888 draw color 0 0 80 255
-    * jump *label140 always
   889 label *label140
   890 draw rect 109 0 176 176
   891 label *label141
 
   917 op land *tmp18 *tmp16 *tmp17
   918 jump *label539 notEqual *tmp18 false
   919 label *label19
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-14 instructions):
 
     3 set .MESSAGE null
     4 set .DISPLAY null
     5 label *label0
-    * print "Configuring storage display..."
-    * print "\n"
+    6 print "Configuring storage display...\n"
     7 set .LINKS @links
     8 set :n .LINKS
     9 label *label3
 
    11 label *label142
    12 op sub :n :n 1
    13 getlink :block :n
-    * print "Found: "
-    * print :block
-    * print "\n"
+   14 print "Found: {0}\n"
+   15 format :block
    16 sensor *tmp5 :block @type
    17 jump *label7 notEqual *tmp5 @message
    18 label *label8
 
    42 label *label4
    43 jump *label142 greaterThan :n 0
    44 label *label5
-    * print "Message: "
-    * print .MESSAGE
-    * print "\n"
-    * print "Memory: "
-    * print .MEMORY
-    * print "\n"
-    * print "Container: "
-    * print .CONTAINER
-    * print "\n"
-    * print "Display: "
-    * print .DISPLAY
-    * print "\n"
+   45 print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
+   46 format .MESSAGE
+   47 format .MEMORY
+   48 format .CONTAINER
+   49 format .DISPLAY
    50 op equal *tmp7 .CONTAINER null
    51 op equal *tmp8 .DISPLAY null
    52 op or *tmp9 *tmp7 *tmp8
    53 jump *label15 equal *tmp9 false
-    * print "No container or display."
-    * print "\n"
+   54 print "No container or display.\n"
    55 label *label15
    56 label *label16
    57 printflush .MESSAGE
 
   890 drawflush display1
   891 op sub *tmp234 @time :start
   892 op floor :elapsed *tmp234
-    * print "Storage Display"
-    * print "\n"
-    * print "Elapsed: "
-    * print :elapsed
-    * print " "
-    * print "ms"
+  893 print "Storage Display\nElapsed: {0} ms"
+  894 format :elapsed
   895 printflush message1
   896 label *label18
   897 sensor *tmp12 .CONTAINER @dead

Final code before resolving virtual instructions:

label __start__
set .CONTAINER null
set .MEMORY null
set .MESSAGE null
set .DISPLAY null
label *label0
print "Configuring storage display...\n"
set .LINKS @links
set :n .LINKS
jump *label5 lessThanEq .LINKS 0
label *label142
op sub :n :n 1
getlink :block :n
print "Found: {0}\n"
format :block
sensor *tmp5 :block @type
jump *label7 notEqual *tmp5 @message
set .MESSAGE :block
jump *label6 always
label *label7
jump *label10 equal *tmp5 @memory-bank
jump *label9 notEqual *tmp5 @memory-cell
label *label10
set .MEMORY :block
jump *label6 always
label *label9
jump *label12 equal *tmp5 @vault
jump *label12 equal *tmp5 @container
jump *label12 equal *tmp5 @core-shard
jump *label12 equal *tmp5 @core-foundation
jump *label11 notEqual *tmp5 @core-nucleus
label *label12
set .CONTAINER :block
jump *label6 always
label *label11
jump *label13 notEqual *tmp5 @large-logic-display
set .DISPLAY :block
label *label13
label *label6
jump *label142 greaterThan :n 0
label *label5
print "Message: {0}\nMemory: {0}\nContainer: {0}\nDisplay: {0}\n"
format .MESSAGE
format .MEMORY
format .CONTAINER
format .DISPLAY
op equal *tmp7 .CONTAINER null
op equal *tmp8 .DISPLAY null
op or *tmp9 *tmp7 *tmp8
jump *label15 equal *tmp9 false
print "No container or display.\n"
label *label15
printflush .MESSAGE
jump *label0 equal .CONTAINER null
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump __start__ equal *tmp18 false
label *label539
set :start @time
sensor .CAPACITY .CONTAINER @itemCapacity
op div .LIMIT .CAPACITY 5
draw stroke 2
set :x 7
set :y 152
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 0 0 23 176
# "Function: inline def eraseImages(in first_column)"
draw color 0 0 80 255
draw rect 93 0 16 176
draw color 255 255 255 255
set :index 0
set :item @sand
op add *tmp26 @counter 1
jump *label26 always
multilabel *label29
set :item @copper
op add *tmp26 @counter 1
jump *label26 always
multilabel *label30
set :item @lead
op add *tmp26 @counter 1
jump *label26 always
multilabel *label31
set :item @coal
op add *tmp26 @counter 1
jump *label26 always
multilabel *label32
set :item @titanium
op add *tmp26 @counter 1
jump *label26 always
multilabel *label33
set :item @thorium
op add *tmp26 @counter 1
jump *label26 always
multilabel *label34
set :item @scrap
op add *tmp26 @counter 1
jump *label26 always
multilabel *label35
set :item @graphite
op add *tmp26 @counter 1
jump *label26 always
multilabel *label36
set :item @metaglass
op add *tmp26 @counter 1
jump *label26 always
multilabel *label37
set :item @silicon
op add *tmp26 @counter 1
jump *label26 always
multilabel *label38
set :item @pyratite
op add *tmp26 @counter 1
jump *label26 always
multilabel *label39
set :item @blast-compound
op add *tmp26 @counter 1
jump *label26 always
multilabel *label40
set :item @plastanium
op add *tmp26 @counter 1
jump *label26 always
multilabel *label41
set :item @phase-fabric
op add *tmp26 @counter 1
jump *label26 always
multilabel *label42
set :item @surge-alloy
op add *tmp26 @counter 1
jump *label26 always
multilabel *label43
set :item @spore-pod
op add *tmp26 @counter 1
jump *label26 always
multilabel *label45
jump *label46 always
label *label26
op add *tmp27 :x 8
op add *tmp30 :y 7
draw image *tmp27 *tmp30 :item 16 0
op add :index :index 1
op sub :y :y 20
jump *label47 notEqual :index 8
set :y 152
set :x 93
draw color 255 255 255 255
label *label47
multijump *tmp26 0 0
multilabel *label44
label *label46
drawflush display1
set :x 71
set :y 152
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 23 0 70 176
set :index 0
set :item @sand
op add *tmp35 @counter 1
jump *label52 always
multilabel *label55
set :item @copper
op add *tmp35 @counter 1
jump *label52 always
multilabel *label56
set :item @lead
op add *tmp35 @counter 1
jump *label52 always
multilabel *label57
set :item @coal
op add *tmp35 @counter 1
jump *label52 always
multilabel *label58
set :item @titanium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label59
set :item @thorium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label60
set :item @scrap
op add *tmp35 @counter 1
jump *label52 always
multilabel *label61
set :item @graphite
op add *tmp35 @counter 1
jump *label52 always
multilabel *label62
set :item @metaglass
op add *tmp35 @counter 1
jump *label52 always
multilabel *label63
set :item @silicon
op add *tmp35 @counter 1
jump *label52 always
multilabel *label64
set :item @pyratite
op add *tmp35 @counter 1
jump *label52 always
multilabel *label65
set :item @blast-compound
op add *tmp35 @counter 1
jump *label52 always
multilabel *label66
set :item @plastanium
op add *tmp35 @counter 1
jump *label52 always
multilabel *label67
set :item @phase-fabric
op add *tmp35 @counter 1
jump *label52 always
multilabel *label68
set :item @surge-alloy
op add *tmp35 @counter 1
jump *label52 always
multilabel *label69
set :item @spore-pod
op add *tmp35 @counter 1
jump *label52 always
multilabel *label71
jump *label72 always
label *label52
# "Function: inline def displayItem(in index, in item, in x, in y)"
sensor :displayItem.0:amount .CONTAINER :item
op strictEqual *tmp38 .MEMORY null
jump *label74 equal *tmp38 false
jump *label76 notEqual :displayItem.0:amount .CAPACITY
draw color 0 255 0 255
jump *label203 always
label *label76
jump *label78 lessThanEq :displayItem.0:amount .LIMIT
draw color 255 255 0 255
jump *label203 always
label *label78
draw color 255 80 80 255
jump *label203 always
label *label74
read :displayItem.0:last .MEMORY :index
write :displayItem.0:amount .MEMORY :index
jump *label80 notEqual :displayItem.0:amount :displayItem.0:last
draw color 255 255 0 255
jump *label203 always
label *label80
jump *label82 greaterThanEq :displayItem.0:amount :displayItem.0:last
draw color 255 80 80 255
jump *label203 always
label *label82
draw color 0 255 0 255
jump *label203 always
label *label203
op mod *tmp133 :displayItem.0:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
jump *label234 lessThan *tmp133 0
jump *label234 greaterThan *tmp133 9
multijump *label204 *tmp133 0
multilabel *label204
jump *label214 always
multilabel *label205
jump *label216 always
multilabel *label206
jump *label218 always
multilabel *label207
jump *label220 always
multilabel *label208
jump *label222 always
multilabel *label209
jump *label224 always
multilabel *label210
jump *label226 always
multilabel *label211
jump *label228 always
multilabel *label212
jump *label230 always
multilabel *label213
jump *label232 always
label *label214
op sub *tmp138 :x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label235 always
label *label216
op add *tmp142 :x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label235 always
label *label218
op add *tmp146 :x 7
draw line :x :y *tmp146 :y
op add *tmp147 :y 6
draw line :x :y :x *tmp147
draw line :x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :x *tmp154 *tmp146 *tmp154
jump *label235 always
label *label220
op add *tmp158 :x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :x :y *tmp158 :y
op add *tmp162 :y 6
draw line :x *tmp162 *tmp158 *tmp162
draw line :x *tmp160 *tmp158 *tmp160
jump *label235 always
label *label222
op add *tmp168 :x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :x *tmp171 *tmp168 *tmp171
draw line :x *tmp171 :x *tmp170
jump *label235 always
label *label224
op add *tmp176 :x 7
draw line :x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :x *tmp179 :x *tmp184
draw line :x *tmp184 *tmp176 *tmp184
jump *label235 always
label *label226
op add *tmp188 :y 12
draw line :x :y :x *tmp188
op add *tmp189 :x 7
draw line :x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :x *tmp192 *tmp189 *tmp192
draw line :x *tmp188 *tmp189 *tmp188
jump *label235 always
label *label228
op add *tmp200 :x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :x *tmp203 *tmp200 *tmp203
jump *label235 always
label *label230
op sub *tmp209 :x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :x 7
draw line :x *tmp212 *tmp213 *tmp212
jump *label235 always
label *label232
op add *tmp215 :x 7
draw line :x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :x *tmp219 *tmp215 *tmp219
draw line :x *tmp219 :x *tmp218
draw line :x *tmp218 *tmp215 *tmp218
label *label234
label *label235
op sub :displayItem.0:x :x 11
op idiv :displayItem.0:amount :displayItem.0:amount 10
jump *label86 equal :displayItem.0:amount 0
op mod *tmp133 :displayItem.0:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
jump *label308 lessThan *tmp133 0
jump *label308 greaterThan *tmp133 9
multijump *label278 *tmp133 0
multilabel *label278
jump *label288 always
multilabel *label279
jump *label290 always
multilabel *label280
jump *label292 always
multilabel *label281
jump *label294 always
multilabel *label282
jump *label296 always
multilabel *label283
jump *label298 always
multilabel *label284
jump *label300 always
multilabel *label285
jump *label302 always
multilabel *label286
jump *label304 always
multilabel *label287
jump *label306 always
label *label288
op sub *tmp138 :displayItem.0:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label309 always
label *label290
op add *tmp142 :displayItem.0:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label309 always
label *label292
op add *tmp146 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem.0:x :y :displayItem.0:x *tmp147
draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
jump *label309 always
label *label294
op add *tmp158 :displayItem.0:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem.0:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
jump *label309 always
label *label296
op add *tmp168 :displayItem.0:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
jump *label309 always
label *label298
op add *tmp176 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
jump *label309 always
label *label300
op add *tmp188 :y 12
draw line :displayItem.0:x :y :displayItem.0:x *tmp188
op add *tmp189 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
jump *label309 always
label *label302
op add *tmp200 :displayItem.0:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
jump *label309 always
label *label304
op sub *tmp209 :displayItem.0:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem.0:x 7
draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
jump *label309 always
label *label306
op add *tmp215 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
label *label308
label *label309
op sub :displayItem.0:x :x 22
op idiv :displayItem.0:amount :displayItem.0:amount 10
jump *label86 equal :displayItem.0:amount 0
op mod *tmp133 :displayItem.0:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
jump *label382 lessThan *tmp133 0
jump *label382 greaterThan *tmp133 9
multijump *label352 *tmp133 0
multilabel *label352
jump *label362 always
multilabel *label353
jump *label364 always
multilabel *label354
jump *label366 always
multilabel *label355
jump *label368 always
multilabel *label356
jump *label370 always
multilabel *label357
jump *label372 always
multilabel *label358
jump *label374 always
multilabel *label359
jump *label376 always
multilabel *label360
jump *label378 always
multilabel *label361
jump *label380 always
label *label362
op sub *tmp138 :displayItem.0:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label383 always
label *label364
op add *tmp142 :displayItem.0:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label383 always
label *label366
op add *tmp146 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem.0:x :y :displayItem.0:x *tmp147
draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
jump *label383 always
label *label368
op add *tmp158 :displayItem.0:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem.0:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
jump *label383 always
label *label370
op add *tmp168 :displayItem.0:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
jump *label383 always
label *label372
op add *tmp176 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
jump *label383 always
label *label374
op add *tmp188 :y 12
draw line :displayItem.0:x :y :displayItem.0:x *tmp188
op add *tmp189 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
jump *label383 always
label *label376
op add *tmp200 :displayItem.0:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
jump *label383 always
label *label378
op sub *tmp209 :displayItem.0:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem.0:x 7
draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
jump *label383 always
label *label380
op add *tmp215 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
label *label382
label *label383
op sub :displayItem.0:x :x 33
op idiv :displayItem.0:amount :displayItem.0:amount 10
jump *label86 equal :displayItem.0:amount 0
op mod *tmp133 :displayItem.0:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
jump *label456 lessThan *tmp133 0
jump *label456 greaterThan *tmp133 9
multijump *label426 *tmp133 0
multilabel *label426
jump *label436 always
multilabel *label427
jump *label438 always
multilabel *label428
jump *label440 always
multilabel *label429
jump *label442 always
multilabel *label430
jump *label444 always
multilabel *label431
jump *label446 always
multilabel *label432
jump *label448 always
multilabel *label433
jump *label450 always
multilabel *label434
jump *label452 always
multilabel *label435
jump *label454 always
label *label436
op sub *tmp138 :displayItem.0:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label457 always
label *label438
op add *tmp142 :displayItem.0:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label457 always
label *label440
op add *tmp146 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem.0:x :y :displayItem.0:x *tmp147
draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
jump *label457 always
label *label442
op add *tmp158 :displayItem.0:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem.0:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
jump *label457 always
label *label444
op add *tmp168 :displayItem.0:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
jump *label457 always
label *label446
op add *tmp176 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
jump *label457 always
label *label448
op add *tmp188 :y 12
draw line :displayItem.0:x :y :displayItem.0:x *tmp188
op add *tmp189 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
jump *label457 always
label *label450
op add *tmp200 :displayItem.0:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
jump *label457 always
label *label452
op sub *tmp209 :displayItem.0:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem.0:x 7
draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
jump *label457 always
label *label454
op add *tmp215 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
label *label456
label *label457
op sub :displayItem.0:x :x 44
op idiv :displayItem.0:amount :displayItem.0:amount 10
jump *label86 equal :displayItem.0:amount 0
op mod *tmp133 :displayItem.0:amount 10
# "Function: inline def drawDigit(in x, in y, in digit)"
jump *label530 lessThan *tmp133 0
jump *label530 greaterThan *tmp133 9
multijump *label500 *tmp133 0
multilabel *label500
jump *label510 always
multilabel *label501
jump *label512 always
multilabel *label502
jump *label514 always
multilabel *label503
jump *label516 always
multilabel *label504
jump *label518 always
multilabel *label505
jump *label520 always
multilabel *label506
jump *label522 always
multilabel *label507
jump *label524 always
multilabel *label508
jump *label526 always
multilabel *label509
jump *label528 always
label *label510
op sub *tmp138 :displayItem.0:x 1
op sub *tmp140 :y 1
draw lineRect *tmp138 *tmp140 9 14
jump *label531 always
label *label512
op add *tmp142 :displayItem.0:x 6
op add *tmp145 :y 12
draw line *tmp142 :y *tmp142 *tmp145
jump *label531 always
label *label514
op add *tmp146 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp146 :y
op add *tmp147 :y 6
draw line :displayItem.0:x :y :displayItem.0:x *tmp147
draw line :displayItem.0:x *tmp147 *tmp146 *tmp147
op add *tmp154 :y 12
draw line *tmp146 *tmp147 *tmp146 *tmp154
draw line :displayItem.0:x *tmp154 *tmp146 *tmp154
jump *label531 always
label *label516
op add *tmp158 :displayItem.0:x 7
op add *tmp160 :y 12
draw line *tmp158 :y *tmp158 *tmp160
draw line :displayItem.0:x :y *tmp158 :y
op add *tmp162 :y 6
draw line :displayItem.0:x *tmp162 *tmp158 *tmp162
draw line :displayItem.0:x *tmp160 *tmp158 *tmp160
jump *label531 always
label *label518
op add *tmp168 :displayItem.0:x 7
op add *tmp170 :y 12
draw line *tmp168 :y *tmp168 *tmp170
op add *tmp171 :y 6
draw line :displayItem.0:x *tmp171 *tmp168 *tmp171
draw line :displayItem.0:x *tmp171 :displayItem.0:x *tmp170
jump *label531 always
label *label520
op add *tmp176 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp176 :y
op add *tmp179 :y 6
draw line *tmp176 :y *tmp176 *tmp179
draw line :displayItem.0:x *tmp179 *tmp176 *tmp179
op add *tmp184 :y 12
draw line :displayItem.0:x *tmp179 :displayItem.0:x *tmp184
draw line :displayItem.0:x *tmp184 *tmp176 *tmp184
jump *label531 always
label *label522
op add *tmp188 :y 12
draw line :displayItem.0:x :y :displayItem.0:x *tmp188
op add *tmp189 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp189 :y
op add *tmp192 :y 6
draw line *tmp189 :y *tmp189 *tmp192
draw line :displayItem.0:x *tmp192 *tmp189 *tmp192
draw line :displayItem.0:x *tmp188 *tmp189 *tmp188
jump *label531 always
label *label524
op add *tmp200 :displayItem.0:x 6
op add *tmp203 :y 12
draw line *tmp200 :y *tmp200 *tmp203
draw line :displayItem.0:x *tmp203 *tmp200 *tmp203
jump *label531 always
label *label526
op sub *tmp209 :displayItem.0:x 1
op sub *tmp211 :y 1
draw lineRect *tmp209 *tmp211 9 14
op add *tmp212 :y 6
op add *tmp213 :displayItem.0:x 7
draw line :displayItem.0:x *tmp212 *tmp213 *tmp212
jump *label531 always
label *label528
op add *tmp215 :displayItem.0:x 7
draw line :displayItem.0:x :y *tmp215 :y
op add *tmp218 :y 12
draw line *tmp215 :y *tmp215 *tmp218
op add *tmp219 :y 6
draw line :displayItem.0:x *tmp219 *tmp215 *tmp219
draw line :displayItem.0:x *tmp219 :displayItem.0:x *tmp218
draw line :displayItem.0:x *tmp218 *tmp215 *tmp218
label *label530
label *label531
label *label86
op add :index :index 1
op sub :y :y 20
jump *label135 notEqual :index 8
drawflush display1
set :y 152
set :x 157
# "Function: inline def eraseNumbers(in first_column)"
draw color 0 0 80 255
draw rect 109 0 176 176
label *label135
multijump *tmp35 0 0
multilabel *label70
label *label72
drawflush display1
op sub *tmp234 @time :start
op floor :elapsed *tmp234
print "Storage Display\nElapsed: {0} ms"
format :elapsed
printflush message1
sensor *tmp12 .CONTAINER @dead
op equal *tmp13 *tmp12 0
sensor *tmp14 .DISPLAY @dead
op equal *tmp15 *tmp14 0
op land *tmp16 *tmp13 *tmp15
op equal *tmp17 .LINKS @links
op land *tmp18 *tmp16 *tmp17
jump *label539 notEqual *tmp18 false
