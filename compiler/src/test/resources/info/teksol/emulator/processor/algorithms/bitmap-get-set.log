    33 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
    46 instructions eliminated by Data Flow Optimization (4 passes, 14 iterations).
     2 instructions eliminated by Loop Optimization (3 iterations).
     2 loops improved by Loop Optimization.
   204 instructions added by Loop Unrolling (5 iterations).
     2 loops unrolled by Loop Unrolling.
   185 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 975):
  * Loop Unrolling: unroll loop at line 13                       cost    46, benefit      400.0, efficiency        8.7 (+38 instructions)
    Loop Unrolling: unroll loop at line 17                       cost   132, benefit      800.0, efficiency        6.1

Pass 1: speed optimization selection (cost limit 937):
  * Loop Unrolling: unroll loop at line 17                       cost   132, benefit      800.0, efficiency        6.1 (+129 instructions)

Final code before resolving virtual instructions:

set BITS 32
set BITMAP bank1
read __tmp2 BITMAP 0
op or __tmp6 __tmp2 1
write __tmp6 BITMAP 0
op idiv __tmp3 2 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 2 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 4 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 4 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 6 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 6 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 8 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 8 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 10 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 10 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 12 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 12 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
op idiv __tmp3 14 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 14 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
read __tmp9 BITMAP 0
op and __tmp8 __tmp9 1
jump __label51 equal __tmp8 false
print 1
jump __label52 always 0 0
label __label51
print 0
label __label52
op idiv __tmp10 1 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 1 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label57 equal __tmp8 false
print 1
jump __label58 always 0 0
label __label57
print 0
label __label58
op idiv __tmp10 2 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 2 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label63 equal __tmp8 false
print 1
jump __label64 always 0 0
label __label63
print 0
label __label64
op idiv __tmp10 3 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 3 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label69 equal __tmp8 false
print 1
jump __label70 always 0 0
label __label69
print 0
label __label70
op idiv __tmp10 4 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 4 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label75 equal __tmp8 false
print 1
jump __label76 always 0 0
label __label75
print 0
label __label76
op idiv __tmp10 5 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 5 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label81 equal __tmp8 false
print 1
jump __label82 always 0 0
label __label81
print 0
label __label82
op idiv __tmp10 6 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 6 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label87 equal __tmp8 false
print 1
jump __label88 always 0 0
label __label87
print 0
label __label88
op idiv __tmp10 7 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 7 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label93 equal __tmp8 false
print 1
jump __label94 always 0 0
label __label93
print 0
label __label94
op idiv __tmp10 8 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 8 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label99 equal __tmp8 false
print 1
jump __label100 always 0 0
label __label99
print 0
label __label100
op idiv __tmp10 9 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 9 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label105 equal __tmp8 false
print 1
jump __label106 always 0 0
label __label105
print 0
label __label106
op idiv __tmp10 10 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 10 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label111 equal __tmp8 false
print 1
jump __label112 always 0 0
label __label111
print 0
label __label112
op idiv __tmp10 11 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 11 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label117 equal __tmp8 false
print 1
jump __label118 always 0 0
label __label117
print 0
label __label118
op idiv __tmp10 12 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 12 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label123 equal __tmp8 false
print 1
jump __label124 always 0 0
label __label123
print 0
label __label124
op idiv __tmp10 13 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 13 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label129 equal __tmp8 false
print 1
jump __label130 always 0 0
label __label129
print 0
label __label130
read __tmp9 BITMAP __tmp3
op and __tmp8 __tmp9 __tmp5
jump __label135 equal __tmp8 false
print 1
jump __label136 always 0 0
label __label135
print 0
label __label136
op idiv __tmp10 15 BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 15 BITS
op shl __tmp12 1 __tmp11
op and __tmp8 __tmp9 __tmp12
jump __label141 equal __tmp8 false
print 1
jump __label142 always 0 0
label __label141
print 0
label __label142
