const LENGTH = 15;
setup();
run();

assertEquals(1074, r(0, 0), "Project Euler 18");
stopProcessor();

def run()
    for row = LENGTH - 2; row >= 0; row -= 1 do
        for col = row + 1; col >= 0; col -= 1 do
            w(row, col, r(row, col) + max(r(row + 1, col), r(row + 1, col + 1)));
        end;
    end;
end;

inline def w(row, col, num)
    bank1[16 * row + col] = num; 
end;

inline def r(row, col)
    bank1[16 * row + col];
end;

def setup()
         w(0, 0,75);
         w(1, 0,95); w(1, 1,64);
         w(2, 0,17); w(2, 1,47); w(2, 2,82);
         w(3, 0,18); w(3, 1,35); w(3, 2,87); w(3, 3,10);
         w(4, 0,20); w(4, 1, 4); w(4, 2,82); w(4, 3,47); w(4, 4,65);
         w(5, 0,19); w(5, 1, 1); w(5, 2,23); w(5, 3,75); w(5, 4, 3); w(5, 5,34);
         w(6, 0,88); w(6, 1, 2); w(6, 2,77); w(6, 3,73); w(6, 4, 7); w(6, 5,63); w(6, 6,67);
         w(7, 0,99); w(7, 1,65); w(7, 2, 4); w(7, 3,28); w(7, 4, 6); w(7, 5,16); w(7, 6,70); w(7, 7,92);
         w(8, 0,41); w(8, 1,41); w(8, 2,26); w(8, 3,56); w(8, 4,83); w(8, 5,40); w(8, 6,80); w(8, 7,70); w(8, 8,33);
         w(9, 0,41); w(9, 1,48); w(9, 2,72); w(9, 3,33); w(9, 4,47); w(9, 5,32); w(9, 6,37); w(9, 7,16); w(9, 8,94); w(9, 9,29);
         w(10,0,53); w(10,1,71); w(10,2,44); w(10,3,65); w(10,4,25); w(10,5,43); w(10,6,91); w(10,7,52); w(10,8,97); w(10,9,51); w(10,10,14);
         w(11,0,70); w(11,1,11); w(11,2,33); w(11,3,28); w(11,4,77); w(11,5,73); w(11,6,17); w(11,7,78); w(11,8,39); w(11,9,68); w(11,10,17); w(11,11,57);
         w(12,0,91); w(12,1,71); w(12,2,52); w(12,3,38); w(12,4,17); w(12,5,14); w(12,6,91); w(12,7,43); w(12,8,58); w(12,9,50); w(12,10,27); w(12,11,29); w(12,12,48);
         w(13,0,63); w(13,1,66); w(13,2, 4); w(13,3,68); w(13,4,89); w(13,5,53); w(13,6,67); w(13,7,30); w(13,8,73); w(13,9,16); w(13,10,69); w(13,11,87); w(13,12,40); w(13,13,31);
         w(14,0, 4); w(14,1,62); w(14,2,98); w(14,3,27); w(14,4,23); w(14,5, 9); w(14,6,70); w(14,7,98); w(14,8,73); w(14,9,93); w(14,10,38); w(14,11,53); w(14,12,60); w(14,13, 4); w(14,14,23);
end;
