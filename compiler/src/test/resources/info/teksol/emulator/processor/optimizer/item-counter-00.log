   162 instructions before optimizations.
    25 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    14 instructions eliminated by Dead Code Elimination (6 iterations).
    10 instructions eliminated by Jump Optimization (3 iterations).
     7 instructions eliminated by Single Step Elimination (2 passes, 5 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
    10 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     4 loops improved by Loop Optimization.
     3 instructions eliminated by Jump Straightening (3 iterations).
     4 instructions eliminated by Print Merging.
    88 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 908):
  * Loop Optimization: replicate condition at line 39            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)

Final code before resolving virtual instructions:

set lastCell 0
label __label0
set MEMORY null
set FIRST_BLOCK @links
set n @links
jump __label5 lessThanEq n 0
label __label32
op sub n n 1
getlink block n
sensor __tmp5 block @type
jump __label7 notEqual __tmp5 @memory-cell
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __tmp5 @memory-bank
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __tmp5 @plastanium-conveyor
set FIRST_BLOCK n
label __label11
label __label6
jump __label32 greaterThan n 0
label __label5
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 equal MEMORY null
read total MEMORY 0
set batch 10
set startTime @time
set ratePerMin 0
op add limit total 10
control enabled switch1 0 0 0 0
sensor __tmp17 switch1 @enabled
jump __label15 notEqual __tmp17 0
label __label35
set start @time
set n FIRST_BLOCK
jump __label18 greaterThanEq FIRST_BLOCK @links
label __label33
getlink block n
op add n n 1
sensor __tmp23 block @type
jump __label19 notEqual __tmp23 @plastanium-conveyor
read prev MEMORY n
sensor curr block @totalItems
write curr MEMORY n
jump __label21 greaterThanEq curr prev
op add total total 10
write total MEMORY 0
jump __label23 lessThanEq total limit
op sub duration @time startTime
set startTime @time
op add limit limit batch
op div rate batch duration
op mul __tmp37 rate 16.666666666666668
write __tmp37 MEMORY lastCell
op idiv ratePerMin rate 0.000016666666666666667
jump __label25 greaterThan duration 2000
op add __tmp42 batch 10
op min batch __tmp42 1000
label __label25
label __label23
label __label21
label __label19
jump __label33 lessThan n @links
label __label18
op sub __tmp44 @time startTime
op floor elapsed __tmp44 0
jump __label27 lessThan elapsed 10000
op idiv __tmp48 batch 90
op mul __tmp49 __tmp48 10
op max batch __tmp49 10
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label27
print "Item Counter                  \n"
print "Total items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\nBatch size: [green]"
print batch
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp52 @time start
op floor __tmp53 __tmp52 0
print "[] ms\n[lightgray]Loop time: "
print __tmp53
print " ms"
printflush message1
sensor __tmp17 switch1 @enabled
jump __label35 equal __tmp17 0
label __label15
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
set n 0
jump __label31 greaterThanEq 0 @links
label __label34
write 0 MEMORY n
op add n n 1
jump __label34 lessThan n @links
label __label31
