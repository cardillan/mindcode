   219 instructions before optimizations.
    13 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    17 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Jump Normalization (3 iterations).
     6 instructions eliminated by Jump Optimization (3 iterations).
     6 instructions eliminated by Single Step Elimination (2 passes, 5 iterations).
    20 instructions modified by Data Flow Optimization (6 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
     8 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions updated by PropagateJumpTargets.
     1 instructions eliminated by Unreachable Code Elimination.
     4 instructions eliminated by Print Merging.
   163 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 831):
  * Loop Optimization: replicate condition at line 122           cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)

Final code before resolving virtual instructions:

set TICKS 60
set MEMORY null
set SWITCH null
set MESSAGE null
set SIZE null
set END_INDEX null
set START_INDEX null
set SENSOR null
set MAXIMUM null
set CONTAINER null
set B1 null
set G1 null
set R1 null
set B0 null
set G0 null
set R0 null
label __label0
print "Item/Liquid/Energy Level Meter"
set CONTAINER null
set MEMORY null
set n @links
jump __label5 lessThanEq n 0
label __label37
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __tmp4 block @type
jump __label7 notEqual __tmp4 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __tmp4 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label11 notEqual __tmp4 @memory-bank
set MEMORY block
set START_INDEX 264
set END_INDEX 511
set SIZE 248
jump __label6 always 0 0
label __label11
jump __label13 notEqual __tmp4 @memory-cell
set MEMORY block
set START_INDEX 40
set END_INDEX 63
set SIZE 24
jump __label6 always 0 0
label __label13
jump __label16 equal __tmp4 @vault
jump __label15 notEqual __tmp4 @container
label __label16
set CONTAINER block
set SENSOR @totalItems
set MAXIMUM @itemCapacity
set R0 0
set G0 80
set B0 0
set R1 80
set G1 255
set B1 80
jump __label6 always 0 0
label __label15
jump __label18 equal __tmp4 @battery
jump __label17 notEqual __tmp4 @battery-large
label __label18
set CONTAINER block
set SENSOR @totalPower
set MAXIMUM @powerCapacity
set R0 80
set G0 80
set B0 0
set R1 255
set G1 255
set B1 80
jump __label6 always 0 0
label __label17
jump __label20 equal __tmp4 @liquid-tank
jump __label19 notEqual __tmp4 @liquid-container
label __label20
set CONTAINER block
set SENSOR @totalLiquids
set MAXIMUM @liquidCapacity
set R0 0
set G0 0
set B0 192
set R1 192
set G1 192
set B1 255
jump __label6 always 0 0
label __label19
jump __label22 equal __tmp4 @power-node
jump __label22 equal __tmp4 @power-node-large
jump __label21 notEqual __tmp4 @surge-tower
label __label22
set CONTAINER block
set SENSOR @powerNetStored
set MAXIMUM @powerNetCapacity
set R0 80
set G0 80
set B0 0
set R1 255
set G1 255
set B1 80
label __label21
label __label6
jump __label37 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nMemory: "
print MEMORY
print "\nContainer: "
print CONTAINER
op equal __tmp6 CONTAINER null
op equal __tmp7 MEMORY null
op or __tmp8 __tmp6 __tmp7
jump __label23 equal __tmp8 false
print "\nNo memory or container."
printflush MESSAGE
jump __label0 always 0 0
label __label23
printflush MESSAGE
write START_INDEX MEMORY 0
write END_INDEX MEMORY 2
write R0 MEMORY 3
write G0 MEMORY 4
write B0 MEMORY 5
write R1 MEMORY 6
write G1 MEMORY 7
write B1 MEMORY 8
read __tmp10 MEMORY 1
op max __tmp11 START_INDEX __tmp10
op min index __tmp11 END_INDEX
set nextTick @tick
control enabled SWITCH 0 0 0 0
sensor __tmp14 SWITCH @enabled
jump __label27 notEqual __tmp14 0
label __label39
set startTime @time
set prevTick nextTick
op add nextTick nextTick TICKS
op add __tmp18 nextTick TICKS
jump __label28 lessThanEq @tick __tmp18
set prevTick @tick
op add nextTick prevTick TICKS
label __label28
jump __label32 greaterThanEq @tick nextTick
label __label38
jump __label33 greaterThanEq @tick prevTick
end
label __label33
jump __label38 lessThan @tick nextTick
label __label32
sensor amount CONTAINER SENSOR
sensor max CONTAINER MAXIMUM
op mul __tmp28 amount 150
op div __tmp29 __tmp28 max
op add scaled 10 __tmp29
op add index index 1
jump __label35 lessThanEq index END_INDEX
set index START_INDEX
label __label35
write index MEMORY 0
write scaled MEMORY index
op sub __tmp34 index SIZE
write scaled MEMORY __tmp34
print "Item/Liquid/Energy Level Meter\n"
print "StartIndex: "
print START_INDEX
print "\nIndex: "
print index
print "\nAmount: "
print amount
print "\nScaled: "
print scaled
op sub __tmp35 @time startTime
print "\nElapsed: "
print __tmp35
print "\n"
printflush MESSAGE
sensor __tmp14 SWITCH @enabled
jump __label39 equal __tmp14 0
label __label27
