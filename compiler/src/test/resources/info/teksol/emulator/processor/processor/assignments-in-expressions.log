    12 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Single Step Elimination (4 iterations).
     4 instructions eliminated by Data Flow Optimization (6 iterations).
     5 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
     0 set value 1
     1 set A value
     2 set B A
-    * op add __tmp0 A 1
-    * set A __tmp0
+    3 op add A A 1
     4 op add __tmp1 A A
     5 print __tmp1
-    * op add __tmp2 B 1
-    * set B __tmp2
+    6 op add B B 1
     7 op add __tmp3 B B
     8 print __tmp3
     9 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set value 1
     1 set A value
-    * set B A
-    * op add A A 1
+    2 set B value
+    3 op add A value 1
     4 op add __tmp1 A A
     5 print __tmp1
     6 op add B B 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
     0 set value 1
-    * set A value
     1 set B value
     2 op add A value 1
     3 op add __tmp1 A A
     4 print __tmp1
-    * op add B B 1
+    5 op add B value 1
     6 op add __tmp3 B B
     7 print __tmp3
     8 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
     0 set value 1
-    * set B value
     1 op add A value 1
     2 op add __tmp1 A A
     3 print __tmp1
     4 op add B value 1
-    * op add __tmp3 B B
-    * print __tmp3
+    5 op add __tmp3 A A
+    6 print __tmp1
     7 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-2 instructions):
 
     1 op add A value 1
     2 op add __tmp1 A A
     3 print __tmp1
-    * op add B value 1
-    * op add __tmp3 A A
     4 print __tmp1
     5 end

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
     2 op add __tmp1 A A
     3 print __tmp1
     4 print __tmp1
-    * end

Final code before resolving virtual instructions:

set value 1
op add A value 1
op add __tmp1 A A
print __tmp1
print __tmp1
