   540 instructions before optimizations.
    55 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    43 instructions eliminated by Dead Code Elimination (5 iterations).
    20 instructions eliminated by Jump Optimization (4 iterations).
    16 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     5 instructions eliminated by If Expression Optimization (3 iterations).
    26 instructions eliminated by Data Flow Optimization (2 passes, 9 iterations).
     3 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    11 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
     1 instructions updated by PropagateJumpTargets.
    10 instructions eliminated by Print Merging.
   356 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 621):
  * Loop Optimization: replicate condition at line 160           cost     1, benefit       25.0, efficiency       25.0 (-5 instructions)

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set EXPECTED_BOOST 1.5
set TYPE null
set DISPLAY null
set SWITCH null
set MESSAGE null
set CAPACITY null
set OUTPUT null
set RES3 null
set RES2 null
set RES1 null
set MUL3 null
set MUL2 null
set MUL1 null
set icon null
label __label83
print "Universal Factory Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label84
op sub n n 1
getlink block n
sensor __tmp7 block @type
jump __label7 notEqual __tmp7 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __tmp7 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __tmp7 @logic-display
jump __label11 notEqual __tmp7 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label13 notEqual __tmp7 @silicon-factory
set TYPE @silicon-factory
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @silicon
jump __label6 always 0 0
label __label13
jump __label15 notEqual __tmp7 @silicon-crucible
set TYPE @silicon-crucible
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @pyratite
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @silicon
jump __label6 always 0 0
label __label15
jump __label17 notEqual __tmp7 @kiln
set TYPE @kiln
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @lead
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @metaglass
jump __label6 always 0 0
label __label17
jump __label19 notEqual __tmp7 @phase-weaver
set TYPE @phase-weaver
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @thorium
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @phase-fabric
jump __label6 always 0 0
label __label19
jump __label21 notEqual __tmp7 @pyratite-mixer
set TYPE @pyratite-mixer
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @lead
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @pyratite
jump __label6 always 0 0
label __label21
jump __label23 notEqual __tmp7 @blast-mixer
set TYPE @blast-mixer
sensor CAPACITY block @itemCapacity
set RES1 @pyratite
set RES2 @spore-pod
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL3
set OUTPUT @blast-compound
jump __label6 always 0 0
label __label23
jump __label25 notEqual __tmp7 @plastanium-compressor
set TYPE @plastanium-compressor
sensor CAPACITY block @itemCapacity
set RES1 @titanium
set RES2 @oil
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL1 MUL3
sensor __tmp23 block @liquidCapacity
op div MUL2 250 __tmp23
set OUTPUT @plastanium
jump __label6 always 0 0
label __label25
print "\n  "
print block
print " not supported"
label __label6
jump __label84 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nDisplay: "
print DISPLAY
print "\nMonitoring: "
print TYPE
print "\nCapacity: "
print CAPACITY
print "\nResource 1: "
print RES1
print "\nResource 2: "
print RES2
print "\nResource 3: "
print RES3
print "\nOutput: "
print OUTPUT
print "\n"
op equal __tmp25 DISPLAY null
op equal __tmp26 TYPE null
op or __tmp27 __tmp25 __tmp26
jump __label27 equal __tmp27 false
print "No block to monitor or display."
label __label27
printflush MESSAGE
jump __label83 notEqual __tmp27 false
sensor __tmp29 DISPLAY @type
jump __label29 notEqual __tmp29 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op sub clw 82 2
set crw 80
set __tmp35 0
jump __label32 equal FROM_INDEX 0
op mul __tmp36 FROM_INDEX 20
op add __tmp35 2 __tmp36
label __label32
set cly __tmp35
set cry __tmp35
set __tmp39 176
jump __label34 greaterThanEq TO_INDEX 8
op mul __tmp40 TO_INDEX 20
op add __tmp39 2 __tmp40
label __label34
op sub clh __tmp39 __tmp35
set crh clh
jump __label30 always 0 0
label __label29
set OFFSET_X 5
set OFFSET_Y 4
set BAR_SPACE 88
set BAR_GAP 22
jump __label35 lessThan FROM_INDEX 8
op sub crx 93 2
op add crw 83 1
set __tmp52 0
op mod __tmp50 FROM_INDEX 8
jump __label38 equal __tmp50 0
op mul __tmp54 __tmp50 22
op add __tmp52 4 __tmp54
label __label38
set cry __tmp52
set __tmp57 176
jump __label40 greaterThanEq TO_INDEX 16
op mod __tmp58 TO_INDEX 8
op mul __tmp59 __tmp58 22
op add __tmp57 4 __tmp59
label __label40
op sub crh __tmp57 __tmp52
set clx 91
set clw 84
set cly __tmp52
set clh crh
jump __label36 always 0 0
label __label35
set clx 0
op sub clw 93 2
set __tmp65 0
jump __label42 equal FROM_INDEX 0
op mul __tmp66 FROM_INDEX 22
op add __tmp65 4 __tmp66
label __label42
set cly __tmp65
set __tmp69 176
jump __label44 greaterThanEq TO_INDEX 8
op mul __tmp70 TO_INDEX 22
op add __tmp69 4 __tmp70
label __label44
op sub clh __tmp69 __tmp65
jump __label45 lessThan TO_INDEX 8
op sub crx 93 2
op add crw 83 1
set cry 0
set __tmp81 176
jump __label48 greaterThanEq TO_INDEX 16
op mod __tmp82 TO_INDEX 8
op mul __tmp83 __tmp82 22
op add __tmp81 4 __tmp83
label __label48
set crh __tmp81
jump __label46 always 0 0
label __label45
set crx 0
set crw 91
set cry __tmp65
set crh clh
label __label46
label __label36
label __label30
control enabled SWITCH 0 0 0 0
sensor __tmp86 SWITCH @enabled
jump __label51 notEqual __tmp86 0
label __label86
set start @time
print "Universal Factory Monitor\n"
print "Monitoring: "
print TYPE
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set __tmp89 @links
set n 0
jump __label54 greaterThanEq 0 __tmp89
label __label85
jump __label54 greaterThanEq index TO_INDEX
getlink factory n
sensor __tmp93 factory @type
jump __label57 notEqual __tmp93 TYPE
set minimum 101
sensor __tmp96 factory RES1
op mul r1 MUL1 __tmp96
sensor __tmp98 factory RES2
op mul r2 MUL2 __tmp98
sensor __tmp100 factory RES3
op mul r3 MUL3 __tmp100
sensor __tmp102 factory OUTPUT
op mul output MUL1 __tmp102
sensor e factory @enabled
sensor power factory @totalPower
sensor boost factory @timescale
jump __label59 greaterThanEq r1 101
set minimum r1
set icon RES1
label __label59
jump __label61 greaterThanEq r2 minimum
set minimum r2
set icon RES2
label __label61
jump __label63 greaterThanEq r3 minimum
set minimum r3
set icon RES3
label __label63
op greaterThan __tmp113 output 33
op sub __tmp114 100 output
op lessThan __tmp115 __tmp114 minimum
op land showout __tmp113 __tmp115
jump __label65 equal showout false
set icon OUTPUT
label __label65
op idiv column index 8
op mod row index 8
op mul __tmp120 column BAR_SPACE
op add x OFFSET_X __tmp120
op mul __tmp122 row BAR_GAP
op add y OFFSET_Y __tmp122
op greaterThan __tmp124 minimum 66
op equal __tmp125 showout false
op land __tmp126 __tmp124 __tmp125
jump __label67 equal __tmp126 false
set icon TYPE
label __label67
draw color 255 255 255 255 0 0
jump __label69 equal e false
jump __label71 lessThanEq power 0
op add __tmp131 x 7
op add __tmp132 y 7
draw image __tmp131 __tmp132 icon 16 0 0
jump __label70 always 0 0
label __label71
draw color 255 80 80 255 0 0
op add __tmp133 y 3
draw rect x __tmp133 14 8 0 0
draw color 0 0 0 255 0 0
op add __tmp134 x 2
op add __tmp135 y 5
draw rect __tmp134 __tmp135 8 4 0 0
op add __tmp136 x 12
draw rect __tmp136 __tmp133 2 2 0 0
op add __tmp139 y 9
draw rect __tmp136 __tmp139 2 2 0 0
draw color 255 80 80 255 0 0
op add __tmp140 x 4
op add __tmp141 y 6
draw rect __tmp140 __tmp141 2 2 0 0
jump __label70 always 0 0
label __label69
draw color 255 80 80 255 0 0
draw stroke 3 0 0 0 0 0
op add __tmp142 x 2
op add __tmp143 y 12
op add __tmp144 x 12
op add __tmp145 y 2
draw line __tmp142 __tmp143 __tmp144 __tmp145 0 0
draw line __tmp142 __tmp145 __tmp144 __tmp143 0 0
draw color 0 0 0 255 0 0
op sub __tmp150 x 1
op sub __tmp151 y 1
draw lineRect __tmp150 __tmp151 16 16 0 0
draw stroke 2 0 0 0 0 0
label __label70
op add x x 16
op equal __tmp153 power 0
op equal __tmp154 e 0
op land __tmp155 __tmp153 __tmp154
jump __label73 equal __tmp155 false
set red 255
set green 0
set blue 0
jump __label74 always 0 0
label __label73
jump __label75 equal showout false
set red 255
set green 0
set blue 255
set minimum output
jump __label76 always 0 0
label __label75
set red 255
op greaterThanEq __tmp159 boost EXPECTED_BOOST
op land __tmp160 __tmp124 __tmp159
jump __label78 equal __tmp160 false
set red 0
label __label78
set green 0
jump __label80 lessThanEq minimum 33
set green 255
label __label80
set blue 0
label __label76
label __label74
jump __label81 lessThanEq boost EXPECTED_BOOST
op max red 192 red
op max green 192 green
op max blue 192 blue
set boost EXPECTED_BOOST
label __label81
op mul __tmp169 61 boost
op idiv length __tmp169 EXPECTED_BOOST
draw color red green blue 128 0 0
op mul __tmp171 minimum length
op idiv __tmp172 __tmp171 100
draw rect x y __tmp172 14 0 0
draw color red green blue 255 0 0
draw lineRect x y length 14 0 0
op add index index 1
label __label57
op add n n 1
jump __label85 lessThan n __tmp89
label __label54
drawflush DISPLAY
op sub __tmp174 @time start
op floor __tmp175 __tmp174 0
print "\nDraw time: "
print __tmp175
print " ms"
printflush MESSAGE
sensor __tmp86 SWITCH @enabled
jump __label86 equal __tmp86 0
label __label51
