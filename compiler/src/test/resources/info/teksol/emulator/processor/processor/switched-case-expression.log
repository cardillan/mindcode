    97 instructions before optimizations.
    11 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    13 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 5 iterations).
     1 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     2 loops improved by Loop Optimization.
     3 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    10 instructions eliminated by Jump Straightening (3 iterations).
    60 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 942):
  * Case Switching: convert case at line 16                      cost     3, benefit      625.0, efficiency      208.3 (+3 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
    18 op mod __tmp2 __fn0_n 10
    19 label __label8
    20 set __fn1_n __tmp2
-    * set __ast0 __fn1_n
-    * jump __label12 equal __ast0 0
+   21 jump __label12 equal __fn1_n 0
    22 jump __label11 always
    23 label __label12
    24 op add __tmp5 S0 1
 
    26 set __tmp4 S0
    27 jump __label10 always
    28 label __label11
-    * jump __label14 equal __ast0 1
+   29 jump __label14 equal __fn1_n 1
    30 jump __label13 always
    31 label __label14
    32 op add __tmp6 S1 1
 
    34 set __tmp4 S1
    35 jump __label10 always
    36 label __label13
-    * jump __label16 equal __ast0 2
+   37 jump __label16 equal __fn1_n 2
    38 jump __label15 always
    39 label __label16
    40 op add __tmp7 S2 1
 
    42 set __tmp4 S2
    43 jump __label10 always
    44 label __label15
-    * jump __label18 equal __ast0 3
+   45 jump __label18 equal __fn1_n 3
    46 jump __label17 always
    47 label __label18
    48 op add __tmp8 S3 1
 
    50 set __tmp4 S3
    51 jump __label10 always
    52 label __label17
-    * jump __label20 equal __ast0 4
+   53 jump __label20 equal __fn1_n 4
    54 jump __label19 always
    55 label __label20
    56 op add __tmp9 S4 1
 
    58 set __tmp4 S4
    59 jump __label10 always
    60 label __label19
-    * jump __label22 equal __ast0 5
+   61 jump __label22 equal __fn1_n 5
    62 jump __label21 always
    63 label __label22
    64 op add __tmp10 S5 1
 
    66 set __tmp4 S5
    67 jump __label10 always
    68 label __label21
-    * jump __label24 equal __ast0 6
+   69 jump __label24 equal __fn1_n 6
    70 jump __label23 always
    71 label __label24
    72 op add __tmp11 S6 1
 
    74 set __tmp4 S6
    75 jump __label10 always
    76 label __label23
-    * jump __label26 equal __ast0 7
+   77 jump __label26 equal __fn1_n 7
    78 jump __label25 always
    79 label __label26
    80 op add __tmp12 S7 1
 
    82 set __tmp4 S7
    83 jump __label10 always
    84 label __label25
-    * jump __label28 equal __ast0 8
+   85 jump __label28 equal __fn1_n 8
    86 jump __label27 always
    87 label __label28
    88 op add __tmp13 S8 1
 
    90 set __tmp4 S8
    91 jump __label10 always
    92 label __label27
-    * jump __label30 equal __ast0 9
+   93 jump __label30 equal __fn1_n 9
    94 jump __label29 always
    95 label __label30
    96 op add __tmp14 S9 1

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   100 label __label29
   101 set __tmp4 null
   102 label __label10
-    * set __tmp3 __tmp4
   103 label __label9
   104 op idiv __tmp15 __fn0_n 10
   105 set __fn0_n __tmp15
   106 label __label6
   107 jump __label5 always
   108 label __label7
-    * set __tmp0 null
   109 label __label4
   110 label __label1
   111 op add i i 1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-11 instructions):
 
    23 label __label12
    24 op add __tmp5 S0 1
    25 set S0 __tmp5
-    * set __tmp4 S0
    26 jump __label10 always
    27 label __label11
    28 jump __label14 equal __fn1_n 1
 
    30 label __label14
    31 op add __tmp6 S1 1
    32 set S1 __tmp6
-    * set __tmp4 S1
    33 jump __label10 always
    34 label __label13
    35 jump __label16 equal __fn1_n 2
 
    37 label __label16
    38 op add __tmp7 S2 1
    39 set S2 __tmp7
-    * set __tmp4 S2
    40 jump __label10 always
    41 label __label15
    42 jump __label18 equal __fn1_n 3
 
    44 label __label18
    45 op add __tmp8 S3 1
    46 set S3 __tmp8
-    * set __tmp4 S3
    47 jump __label10 always
    48 label __label17
    49 jump __label20 equal __fn1_n 4
 
    51 label __label20
    52 op add __tmp9 S4 1
    53 set S4 __tmp9
-    * set __tmp4 S4
    54 jump __label10 always
    55 label __label19
    56 jump __label22 equal __fn1_n 5
 
    58 label __label22
    59 op add __tmp10 S5 1
    60 set S5 __tmp10
-    * set __tmp4 S5
    61 jump __label10 always
    62 label __label21
    63 jump __label24 equal __fn1_n 6
 
    65 label __label24
    66 op add __tmp11 S6 1
    67 set S6 __tmp11
-    * set __tmp4 S6
    68 jump __label10 always
    69 label __label23
    70 jump __label26 equal __fn1_n 7
 
    72 label __label26
    73 op add __tmp12 S7 1
    74 set S7 __tmp12
-    * set __tmp4 S7
    75 jump __label10 always
    76 label __label25
    77 jump __label28 equal __fn1_n 8
 
    79 label __label28
    80 op add __tmp13 S8 1
    81 set S8 __tmp13
-    * set __tmp4 S8
    82 jump __label10 always
    83 label __label27
    84 jump __label30 equal __fn1_n 9
 
    86 label __label30
    87 op add __tmp14 S9 1
    88 set S9 __tmp14
-    * set __tmp4 S9
    89 jump __label10 always
    90 label __label29
-    * set __tmp4 null
    91 label __label10
    92 label __label9
    93 op idiv __tmp15 __fn0_n 10

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-11 instructions):
 
    21 jump __label12 equal __fn1_n 0
    22 jump __label11 always
    23 label __label12
-    * op add __tmp5 S0 1
-    * set S0 __tmp5
+   24 op add S0 S0 1
    25 jump __label10 always
    26 label __label11
    27 jump __label14 equal __fn1_n 1
    28 jump __label13 always
    29 label __label14
-    * op add __tmp6 S1 1
-    * set S1 __tmp6
+   30 op add S1 S1 1
    31 jump __label10 always
    32 label __label13
    33 jump __label16 equal __fn1_n 2
    34 jump __label15 always
    35 label __label16
-    * op add __tmp7 S2 1
-    * set S2 __tmp7
+   36 op add S2 S2 1
    37 jump __label10 always
    38 label __label15
    39 jump __label18 equal __fn1_n 3
    40 jump __label17 always
    41 label __label18
-    * op add __tmp8 S3 1
-    * set S3 __tmp8
+   42 op add S3 S3 1
    43 jump __label10 always
    44 label __label17
    45 jump __label20 equal __fn1_n 4
    46 jump __label19 always
    47 label __label20
-    * op add __tmp9 S4 1
-    * set S4 __tmp9
+   48 op add S4 S4 1
    49 jump __label10 always
    50 label __label19
    51 jump __label22 equal __fn1_n 5
    52 jump __label21 always
    53 label __label22
-    * op add __tmp10 S5 1
-    * set S5 __tmp10
+   54 op add S5 S5 1
    55 jump __label10 always
    56 label __label21
    57 jump __label24 equal __fn1_n 6
    58 jump __label23 always
    59 label __label24
-    * op add __tmp11 S6 1
-    * set S6 __tmp11
+   60 op add S6 S6 1
    61 jump __label10 always
    62 label __label23
    63 jump __label26 equal __fn1_n 7
    64 jump __label25 always
    65 label __label26
-    * op add __tmp12 S7 1
-    * set S7 __tmp12
+   66 op add S7 S7 1
    67 jump __label10 always
    68 label __label25
    69 jump __label28 equal __fn1_n 8
    70 jump __label27 always
    71 label __label28
-    * op add __tmp13 S8 1
-    * set S8 __tmp13
+   72 op add S8 S8 1
    73 jump __label10 always
    74 label __label27
    75 jump __label30 equal __fn1_n 9
    76 jump __label29 always
    77 label __label30
-    * op add __tmp14 S9 1
-    * set S9 __tmp14
+   78 op add S9 S9 1
    79 jump __label10 always
    80 label __label29
    81 label __label10
    82 label __label9
-    * op idiv __tmp15 __fn0_n 10
-    * set __fn0_n __tmp15
+   83 op idiv __fn0_n __fn0_n 10
    84 label __label6
    85 jump __label5 always
    86 label __label7

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
    18 op mod __tmp2 __fn0_n 10
    19 label __label8
    20 set __fn1_n __tmp2
-    * jump __label12 equal __fn1_n 0
-    * jump __label11 always
+   21 jump __label11 notEqual __fn1_n 0
    22 label __label12
    23 op add S0 S0 1
    24 jump __label10 always
    25 label __label11
-    * jump __label14 equal __fn1_n 1
-    * jump __label13 always
+   26 jump __label13 notEqual __fn1_n 1
    27 label __label14
    28 op add S1 S1 1
    29 jump __label10 always
    30 label __label13
-    * jump __label16 equal __fn1_n 2
-    * jump __label15 always
+   31 jump __label15 notEqual __fn1_n 2
    32 label __label16
    33 op add S2 S2 1
    34 jump __label10 always
    35 label __label15
-    * jump __label18 equal __fn1_n 3
-    * jump __label17 always
+   36 jump __label17 notEqual __fn1_n 3
    37 label __label18
    38 op add S3 S3 1
    39 jump __label10 always
    40 label __label17
-    * jump __label20 equal __fn1_n 4
-    * jump __label19 always
+   41 jump __label19 notEqual __fn1_n 4
    42 label __label20
    43 op add S4 S4 1
    44 jump __label10 always
    45 label __label19
-    * jump __label22 equal __fn1_n 5
-    * jump __label21 always
+   46 jump __label21 notEqual __fn1_n 5
    47 label __label22
    48 op add S5 S5 1
    49 jump __label10 always
    50 label __label21
-    * jump __label24 equal __fn1_n 6
-    * jump __label23 always
+   51 jump __label23 notEqual __fn1_n 6
    52 label __label24
    53 op add S6 S6 1
    54 jump __label10 always
    55 label __label23
-    * jump __label26 equal __fn1_n 7
-    * jump __label25 always
+   56 jump __label25 notEqual __fn1_n 7
    57 label __label26
    58 op add S7 S7 1
    59 jump __label10 always
    60 label __label25
-    * jump __label28 equal __fn1_n 8
-    * jump __label27 always
+   61 jump __label27 notEqual __fn1_n 8
    62 label __label28
    63 op add S8 S8 1
    64 jump __label10 always
    65 label __label27
-    * jump __label30 equal __fn1_n 9
-    * jump __label29 always
+   66 jump __label29 notEqual __fn1_n 9
    67 label __label30
    68 op add S9 S9 1
    69 jump __label10 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
    13 label __label3
    14 set __fn0_n i
    15 label __label5
-    * op greaterThan __tmp1 __fn0_n 0
-    * jump __label7 equal __tmp1 false
+   16 jump __label7 lessThanEq __fn0_n 0
    17 op mod __tmp2 __fn0_n 10
    18 label __label8
    19 set __fn1_n __tmp2

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
    65 jump __label29 notEqual __fn1_n 9
    66 label __label30
    67 op add S9 S9 1
-    * jump __label10 always
    68 label __label29
    69 label __label10
    70 label __label9

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set S9 0
-    * set S8 S9
-    * set S7 S8
-    * set S6 S7
-    * set S5 S6
-    * set S4 S5
-    * set S3 S4
-    * set S2 S3
-    * set S1 S2
-    * set S0 S1
+    1 set S8 0
+    2 set S7 S9
+    3 set S6 S8
+    4 set S5 S7
+    5 set S4 S6
+    6 set S3 S5
+    7 set S2 S4
+    8 set S1 S3
+    9 set S0 S2
    10 set i 1
    11 label __label0
    12 jump __label2 greaterThan i 100
 
    17 op mod __tmp2 __fn0_n 10
    18 label __label8
    19 set __fn1_n __tmp2
-    * jump __label11 notEqual __fn1_n 0
+   20 jump __label11 notEqual __tmp2 0
    21 label __label12
    22 op add S0 S0 1
    23 jump __label10 always
    24 label __label11
-    * jump __label13 notEqual __fn1_n 1
+   25 jump __label13 notEqual __tmp2 1
    26 label __label14
    27 op add S1 S1 1
    28 jump __label10 always
    29 label __label13
-    * jump __label15 notEqual __fn1_n 2
+   30 jump __label15 notEqual __tmp2 2
    31 label __label16
    32 op add S2 S2 1
    33 jump __label10 always
    34 label __label15
-    * jump __label17 notEqual __fn1_n 3
+   35 jump __label17 notEqual __tmp2 3
    36 label __label18
    37 op add S3 S3 1
    38 jump __label10 always
    39 label __label17
-    * jump __label19 notEqual __fn1_n 4
+   40 jump __label19 notEqual __tmp2 4
    41 label __label20
    42 op add S4 S4 1
    43 jump __label10 always
    44 label __label19
-    * jump __label21 notEqual __fn1_n 5
+   45 jump __label21 notEqual __tmp2 5
    46 label __label22
    47 op add S5 S5 1
    48 jump __label10 always
    49 label __label21
-    * jump __label23 notEqual __fn1_n 6
+   50 jump __label23 notEqual __tmp2 6
    51 label __label24
    52 op add S6 S6 1
    53 jump __label10 always
    54 label __label23
-    * jump __label25 notEqual __fn1_n 7
+   55 jump __label25 notEqual __tmp2 7
    56 label __label26
    57 op add S7 S7 1
    58 jump __label10 always
    59 label __label25
-    * jump __label27 notEqual __fn1_n 8
+   60 jump __label27 notEqual __tmp2 8
    61 label __label28
    62 op add S8 S8 1
    63 jump __label10 always
    64 label __label27
-    * jump __label29 notEqual __fn1_n 9
+   65 jump __label29 notEqual __tmp2 9
    66 label __label30
    67 op add S9 S9 1
    68 label __label29

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
     0 set S9 0
     1 set S8 0
-    * set S7 S9
-    * set S6 S8
-    * set S5 S7
-    * set S4 S6
-    * set S3 S5
-    * set S2 S4
-    * set S1 S3
-    * set S0 S2
+    2 set S7 0
+    3 set S6 0
+    4 set S5 S9
+    5 set S4 S8
+    6 set S3 S7
+    7 set S2 S6
+    8 set S1 S5
+    9 set S0 S4
    10 set i 1
    11 label __label0
    12 jump __label2 greaterThan i 100
 
    16 jump __label7 lessThanEq __fn0_n 0
    17 op mod __tmp2 __fn0_n 10
    18 label __label8
-    * set __fn1_n __tmp2
    19 jump __label11 notEqual __tmp2 0
    20 label __label12
    21 op add S0 S0 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
     1 set S8 0
     2 set S7 0
     3 set S6 0
-    * set S5 S9
-    * set S4 S8
-    * set S3 S7
-    * set S2 S6
-    * set S1 S5
-    * set S0 S4
+    4 set S5 0
+    5 set S4 0
+    6 set S3 0
+    7 set S2 0
+    8 set S1 S9
+    9 set S0 S8
    10 set i 1
    11 label __label0
    12 jump __label2 greaterThan i 100

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
     5 set S4 0
     6 set S3 0
     7 set S2 0
-    * set S1 S9
-    * set S0 S8
+    8 set S1 0
+    9 set S0 0
    10 set i 1
    11 label __label0
    12 jump __label2 greaterThan i 100

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     9 set S0 0
    10 set i 1
    11 label __label0
-    * jump __label2 greaterThan i 100
+   12 label __label31
    13 label __label3
    14 set __fn0_n i
    15 label __label5
    16 jump __label7 lessThanEq __fn0_n 0
+   17 label __label32
    18 op mod __tmp2 __fn0_n 10
    19 label __label8
    20 jump __label11 notEqual __tmp2 0
 
    70 label __label9
    71 op idiv __fn0_n __fn0_n 10
    72 label __label6
-    * jump __label5 always
+   73 jump __label32 greaterThan __fn0_n 0
    74 label __label7
    75 label __label4
    76 label __label1
    77 op add i i 1
-    * jump __label0 always
+   78 jump __label31 lessThanEq i 100
    79 label __label2
    80 print S0
    81 print S1

Modifications by Case Switching: convert case at line 16 (+3 instructions):
 
    17 label __label32
    18 op mod __tmp2 __fn0_n 10
    19 label __label8
-    * jump __label11 notEqual __tmp2 0
+   20 jump __label33 lessThan __tmp2 0
+   21 jump __label33 greaterThan __tmp2 9
+   22 gotooffset __label35 __tmp2 0 __label34
+   23 gotolabel __label35 __label34
+   24 jump __label12 always
+   25 gotolabel __label36 __label34
+   26 jump __label14 always
+   27 gotolabel __label37 __label34
+   28 jump __label16 always
+   29 gotolabel __label38 __label34
+   30 jump __label18 always
+   31 gotolabel __label39 __label34
+   32 jump __label20 always
+   33 gotolabel __label40 __label34
+   34 jump __label22 always
+   35 gotolabel __label41 __label34
+   36 jump __label24 always
+   37 gotolabel __label42 __label34
+   38 jump __label26 always
+   39 gotolabel __label43 __label34
+   40 jump __label28 always
+   41 gotolabel __label44 __label34
+   42 jump __label30 always
    43 label __label12
    44 op add S0 S0 1
    45 jump __label10 always
    46 label __label11
-    * jump __label13 notEqual __tmp2 1
    47 label __label14
    48 op add S1 S1 1
    49 jump __label10 always
    50 label __label13
-    * jump __label15 notEqual __tmp2 2
    51 label __label16
    52 op add S2 S2 1
    53 jump __label10 always
    54 label __label15
-    * jump __label17 notEqual __tmp2 3
    55 label __label18
    56 op add S3 S3 1
    57 jump __label10 always
    58 label __label17
-    * jump __label19 notEqual __tmp2 4
    59 label __label20
    60 op add S4 S4 1
    61 jump __label10 always
    62 label __label19
-    * jump __label21 notEqual __tmp2 5
    63 label __label22
    64 op add S5 S5 1
    65 jump __label10 always
    66 label __label21
-    * jump __label23 notEqual __tmp2 6
    67 label __label24
    68 op add S6 S6 1
    69 jump __label10 always
    70 label __label23
-    * jump __label25 notEqual __tmp2 7
    71 label __label26
    72 op add S7 S7 1
    73 jump __label10 always
    74 label __label25
-    * jump __label27 notEqual __tmp2 8
    75 label __label28
    76 op add S8 S8 1
    77 jump __label10 always
    78 label __label27
-    * jump __label29 notEqual __tmp2 9
    79 label __label30
    80 op add S9 S9 1
    81 label __label29
+   82 label __label33
    83 label __label10
    84 label __label9
    85 op idiv __fn0_n __fn0_n 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    13 label __label3
    14 set __fn0_n i
    15 label __label5
-    * jump __label7 lessThanEq __fn0_n 0
+   16 jump __label7 lessThanEq i 0
    17 label __label32
    18 op mod __tmp2 __fn0_n 10
    19 label __label8

Modifications by Final phase, Unreachable Code Elimination, iteration 1:
 
    43 label __label12
    44 op add S0 S0 1
    45 jump __label10 always
-    * label __label11
    46 label __label14
    47 op add S1 S1 1
    48 jump __label10 always
-    * label __label13
    49 label __label16
    50 op add S2 S2 1
    51 jump __label10 always
-    * label __label15
    52 label __label18
    53 op add S3 S3 1
    54 jump __label10 always
-    * label __label17
    55 label __label20
    56 op add S4 S4 1
    57 jump __label10 always
-    * label __label19
    58 label __label22
    59 op add S5 S5 1
    60 jump __label10 always
-    * label __label21
    61 label __label24
    62 op add S6 S6 1
    63 jump __label10 always
-    * label __label23
    64 label __label26
    65 op add S7 S7 1
    66 jump __label10 always
-    * label __label25
    67 label __label28
    68 op add S8 S8 1
    69 jump __label10 always
-    * label __label27
    70 label __label30
    71 op add S9 S9 1
    72 label __label29

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
    92 print S7
    93 print S8
    94 print S9
-    * end

Final code before resolving virtual instructions:

set S9 0
set S8 0
set S7 0
set S6 0
set S5 0
set S4 0
set S3 0
set S2 0
set S1 0
set S0 0
set i 1
label __label31
set __fn0_n i
jump __label7 lessThanEq i 0
label __label32
op mod __tmp2 __fn0_n 10
jump __label33 lessThan __tmp2 0
jump __label33 greaterThan __tmp2 9
gotooffset __label35 __tmp2 0 __label34
gotolabel __label35 __label34
jump __label12 always 0 0
gotolabel __label36 __label34
jump __label14 always 0 0
gotolabel __label37 __label34
jump __label16 always 0 0
gotolabel __label38 __label34
jump __label18 always 0 0
gotolabel __label39 __label34
jump __label20 always 0 0
gotolabel __label40 __label34
jump __label22 always 0 0
gotolabel __label41 __label34
jump __label24 always 0 0
gotolabel __label42 __label34
jump __label26 always 0 0
gotolabel __label43 __label34
jump __label28 always 0 0
gotolabel __label44 __label34
jump __label30 always 0 0
label __label12
op add S0 S0 1
jump __label10 always 0 0
label __label14
op add S1 S1 1
jump __label10 always 0 0
label __label16
op add S2 S2 1
jump __label10 always 0 0
label __label18
op add S3 S3 1
jump __label10 always 0 0
label __label20
op add S4 S4 1
jump __label10 always 0 0
label __label22
op add S5 S5 1
jump __label10 always 0 0
label __label24
op add S6 S6 1
jump __label10 always 0 0
label __label26
op add S7 S7 1
jump __label10 always 0 0
label __label28
op add S8 S8 1
jump __label10 always 0 0
label __label30
op add S9 S9 1
label __label33
label __label10
op idiv __fn0_n __fn0_n 10
jump __label32 greaterThan __fn0_n 0
label __label7
op add i i 1
jump __label31 lessThanEq i 100
print S0
print S1
print S2
print S3
print S4
print S5
print S6
print S7
print S8
print S9
