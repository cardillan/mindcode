    42 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     1 instructions eliminated by Jump Optimization (4 iterations).
     4 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     1 instructions modified by If Expression Optimization (3 iterations).
    39 instructions eliminated by Data Flow Optimization (4 passes, 14 iterations).
     2 instructions eliminated by Loop Optimization (3 iterations).
     2 loops improved by Loop Optimization.
    18 instructions added by Loop Unrolling (5 iterations).
     2 loops unrolled by Loop Unrolling.
     2 instructions eliminated by Print Merging.
     8 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 973):
  * Unroll loop at line 3:5                                      cost     0, benefit      200.0, efficiency   Infinity (-5 instructions)
    Unroll loop at line 3:5                                      cost     4, benefit      400.0, efficiency      100.0

Pass 1: speed optimization selection (cost limit 978):
  * Unroll loop at line 3:5                                      cost     4, benefit      400.0, efficiency      100.0 (-5 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-1 instructions):
 
    48 set __fn0_result __tmp8
    49 print "|"
    50 print __fn0_result
-    * set __tmp0 __fn0_result
    51 label __label1
    52 assertprints "6|28|Less|0" "loops in conditions"
    53 stop

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
     6 set __fn1_i 0
     7 label __label4
     8 jump __label6 greaterThanEq __fn1_i __tmp2
-    * op add __tmp3 __fn1_c __fn1_i
-    * set __fn1_c __tmp3
+    9 op add __fn1_c __fn1_c __fn1_i
    10 label __label5
    11 op add __fn1_i __fn1_i 1
    12 jump __label4 always
 
    24 set __fn2_i 0
    25 label __label9
    26 jump __label11 greaterThanEq __fn2_i __tmp5
-    * op add __tmp6 __fn2_c __fn2_i
-    * set __fn2_c __tmp6
+   27 op add __fn2_c __fn2_c __fn2_i
    28 label __label10
    29 op add __fn2_i __fn2_i 1
    30 jump __label9 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
    35 jump __label8 always
    36 set __tmp4 null
    37 label __label8
-    * op lessThan __tmp7 __tmp1 __tmp4
-    * jump __label12 equal __tmp7 false
+   38 jump __label12 greaterThanEq __tmp1 __tmp4
    39 print "Less"
    40 set __tmp8 0
    41 jump __label13 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
     2 label __label2
     3 set __fn1_n 4
     4 set __fn1_c 0
-    * set __tmp2 __fn1_n
+    5 set __tmp2 4
     6 set __fn1_i 0
     7 label __label4
-    * jump __label6 greaterThanEq __fn1_i __tmp2
+    8 jump __label6 greaterThanEq __fn1_i __fn1_n
     9 op add __fn1_c __fn1_c __fn1_i
    10 label __label5
    11 op add __fn1_i __fn1_i 1
 
    15 print "|"
    16 set __tmp1 __fn1_c
    17 jump __label3 always
-    * set __tmp1 null
    18 label __label3
    19 label __label7
    20 set __fn2_n 8
    21 set __fn2_c 0
-    * set __tmp5 __fn2_n
+   22 set __tmp5 8
    23 set __fn2_i 0
    24 label __label9
-    * jump __label11 greaterThanEq __fn2_i __tmp5
+   25 jump __label11 greaterThanEq __fn2_i __fn2_n
    26 op add __fn2_c __fn2_c __fn2_i
    27 label __label10
    28 op add __fn2_i __fn2_i 1
 
    32 print "|"
    33 set __tmp4 __fn2_c
    34 jump __label8 always
-    * set __tmp4 null
    35 label __label8
-    * jump __label12 greaterThanEq __tmp1 __tmp4
+   36 jump __label12 greaterThanEq __fn1_c __fn2_c
    37 print "Less"
    38 set __tmp8 0
    39 jump __label13 always
 
    42 label __label13
    43 set __fn0_result __tmp8
    44 print "|"
-    * print __fn0_result
+   45 print __tmp8
    46 label __label1
    47 assertprints "6|28|Less|0" "loops in conditions"
    48 stop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
     2 label __label2
     3 set __fn1_n 4
     4 set __fn1_c 0
-    * set __tmp2 4
     5 set __fn1_i 0
     6 label __label4
-    * jump __label6 greaterThanEq __fn1_i __fn1_n
+    7 jump __label6 greaterThanEq __fn1_i 4
     8 op add __fn1_c __fn1_c __fn1_i
     9 label __label5
    10 op add __fn1_i __fn1_i 1
 
    12 label __label6
    13 print __fn1_c
    14 print "|"
-    * set __tmp1 __fn1_c
    15 jump __label3 always
    16 label __label3
    17 label __label7
    18 set __fn2_n 8
    19 set __fn2_c 0
-    * set __tmp5 8
    20 set __fn2_i 0
    21 label __label9
-    * jump __label11 greaterThanEq __fn2_i __fn2_n
+   22 jump __label11 greaterThanEq __fn2_i 8
    23 op add __fn2_c __fn2_c __fn2_i
    24 label __label10
    25 op add __fn2_i __fn2_i 1
 
    27 label __label11
    28 print __fn2_c
    29 print "|"
-    * set __tmp4 __fn2_c
    30 jump __label8 always
    31 label __label8
    32 jump __label12 greaterThanEq __fn1_c __fn2_c
 
    36 label __label12
    37 set __tmp8 1
    38 label __label13
-    * set __fn0_result __tmp8
    39 print "|"
    40 print __tmp8
    41 label __label1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
     0 assertflush
     1 label __label0
     2 label __label2
-    * set __fn1_n 4
     3 set __fn1_c 0
     4 set __fn1_i 0
     5 label __label4
 
    14 jump __label3 always
    15 label __label3
    16 label __label7
-    * set __fn2_n 8
    17 set __fn2_c 0
    18 set __fn2_i 0
    19 label __label9

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
     3 set __fn1_c 0
     4 set __fn1_i 0
     5 label __label4
-    * jump __label6 greaterThanEq __fn1_i 4
+    6 label __label14
     7 op add __fn1_c __fn1_c __fn1_i
     8 label __label5
     9 op add __fn1_i __fn1_i 1
-    * jump __label4 always
+   10 jump __label14 lessThan __fn1_i 4
    11 label __label6
    12 print __fn1_c
    13 print "|"
 
    17 set __fn2_c 0
    18 set __fn2_i 0
    19 label __label9
-    * jump __label11 greaterThanEq __fn2_i 8
+   20 label __label15
    21 op add __fn2_c __fn2_c __fn2_i
    22 label __label10
    23 op add __fn2_i __fn2_i 1
-    * jump __label9 always
+   24 jump __label15 lessThan __fn2_i 8
    25 label __label11
    26 print __fn2_c
    27 print "|"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
     0 assertflush
     1 label __label0
+    2 set __tmp8 1
     3 label __label2
     4 set __fn1_c 0
     5 set __fn1_i 0
 
    28 print "|"
    29 jump __label8 always
    30 label __label8
-    * jump __label12 greaterThanEq __fn1_c __fn2_c
+   31 jump __label13 greaterThanEq __fn1_c __fn2_c
    32 print "Less"
    33 set __tmp8 0
    34 jump __label13 always
-    * label __label12
-    * set __tmp8 1
    35 label __label13
    36 print "|"
    37 print __tmp8

Modifications by Unroll loop at line 3:5 (+5 instructions):
 
     2 set __tmp8 1
     3 label __label2
     4 set __fn1_c 0
-    * set __fn1_i 0
-    * label __label4
-    * label __label14
-    * op add __fn1_c __fn1_c __fn1_i
-    * label __label5
-    * op add __fn1_i __fn1_i 1
-    * jump __label14 lessThan __fn1_i 4
-    * label __label6
+    5 set __fn1_i 0
+    6 label __label16
+    7 label __label17
+    8 op add __fn1_c __fn1_c __fn1_i
+    9 label __label18
+   10 op add __fn1_i __fn1_i 1
+   11 label __label19
+   12 op add __fn1_c __fn1_c __fn1_i
+   13 label __label20
+   14 op add __fn1_i __fn1_i 1
+   15 label __label21
+   16 op add __fn1_c __fn1_c __fn1_i
+   17 label __label22
+   18 op add __fn1_i __fn1_i 1
+   19 label __label23
+   20 op add __fn1_c __fn1_c __fn1_i
+   21 label __label24
+   22 op add __fn1_i __fn1_i 1
+   23 label __label6
    24 print __fn1_c
    25 print "|"
    26 jump __label3 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     5 set __fn1_i 0
     6 label __label16
     7 label __label17
-    * op add __fn1_c __fn1_c __fn1_i
+    8 op add __fn1_c 0 0
     9 label __label18
-    * op add __fn1_i __fn1_i 1
+   10 op add __fn1_i 0 1
    11 label __label19
-    * op add __fn1_c __fn1_c __fn1_i
+   12 op add __fn1_c 0 1
    13 label __label20
-    * op add __fn1_i __fn1_i 1
+   14 op add __fn1_i 1 1
    15 label __label21
-    * op add __fn1_c __fn1_c __fn1_i
+   16 op add __fn1_c 1 2
    17 label __label22
-    * op add __fn1_i __fn1_i 1
+   18 op add __fn1_i 2 1
    19 label __label23
-    * op add __fn1_c __fn1_c __fn1_i
+   20 op add __fn1_c 3 3
    21 label __label24
-    * op add __fn1_i __fn1_i 1
+   22 op add __fn1_i 3 1
    23 label __label6
-    * print __fn1_c
+   24 print 6
    25 print "|"
    26 jump __label3 always
    27 label __label3
 
    39 print "|"
    40 jump __label8 always
    41 label __label8
-    * jump __label13 greaterThanEq __fn1_c __fn2_c
+   42 jump __label13 greaterThanEq 6 __fn2_c
    43 print "Less"
    44 set __tmp8 0
    45 jump __label13 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
     1 label __label0
     2 set __tmp8 1
     3 label __label2
-    * set __fn1_c 0
-    * set __fn1_i 0
     4 label __label16
     5 label __label17
-    * op add __fn1_c 0 0
     6 label __label18
-    * op add __fn1_i 0 1
     7 label __label19
-    * op add __fn1_c 0 1
     8 label __label20
-    * op add __fn1_i 1 1
     9 label __label21
-    * op add __fn1_c 1 2
    10 label __label22
-    * op add __fn1_i 2 1
    11 label __label23
-    * op add __fn1_c 3 3
    12 label __label24
-    * op add __fn1_i 3 1
    13 label __label6
    14 print 6
    15 print "|"

Modifications by Unroll loop at line 3:5 (+13 instructions):
 
    17 label __label3
    18 label __label7
    19 set __fn2_c 0
-    * set __fn2_i 0
-    * label __label9
-    * label __label15
-    * op add __fn2_c __fn2_c __fn2_i
-    * label __label10
-    * op add __fn2_i __fn2_i 1
-    * jump __label15 lessThan __fn2_i 8
-    * label __label11
+   20 set __fn2_i 0
+   21 label __label25
+   22 label __label26
+   23 op add __fn2_c __fn2_c __fn2_i
+   24 label __label27
+   25 op add __fn2_i __fn2_i 1
+   26 label __label28
+   27 op add __fn2_c __fn2_c __fn2_i
+   28 label __label29
+   29 op add __fn2_i __fn2_i 1
+   30 label __label30
+   31 op add __fn2_c __fn2_c __fn2_i
+   32 label __label31
+   33 op add __fn2_i __fn2_i 1
+   34 label __label32
+   35 op add __fn2_c __fn2_c __fn2_i
+   36 label __label33
+   37 op add __fn2_i __fn2_i 1
+   38 label __label34
+   39 op add __fn2_c __fn2_c __fn2_i
+   40 label __label35
+   41 op add __fn2_i __fn2_i 1
+   42 label __label36
+   43 op add __fn2_c __fn2_c __fn2_i
+   44 label __label37
+   45 op add __fn2_i __fn2_i 1
+   46 label __label38
+   47 op add __fn2_c __fn2_c __fn2_i
+   48 label __label39
+   49 op add __fn2_i __fn2_i 1
+   50 label __label40
+   51 op add __fn2_c __fn2_c __fn2_i
+   52 label __label41
+   53 op add __fn2_i __fn2_i 1
+   54 label __label11
    55 print __fn2_c
    56 print "|"
    57 jump __label8 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    20 set __fn2_i 0
    21 label __label25
    22 label __label26
-    * op add __fn2_c __fn2_c __fn2_i
+   23 op add __fn2_c 0 0
    24 label __label27
-    * op add __fn2_i __fn2_i 1
+   25 op add __fn2_i 0 1
    26 label __label28
-    * op add __fn2_c __fn2_c __fn2_i
+   27 op add __fn2_c 0 1
    28 label __label29
-    * op add __fn2_i __fn2_i 1
+   29 op add __fn2_i 1 1
    30 label __label30
-    * op add __fn2_c __fn2_c __fn2_i
+   31 op add __fn2_c 1 2
    32 label __label31
-    * op add __fn2_i __fn2_i 1
+   33 op add __fn2_i 2 1
    34 label __label32
-    * op add __fn2_c __fn2_c __fn2_i
+   35 op add __fn2_c 3 3
    36 label __label33
-    * op add __fn2_i __fn2_i 1
+   37 op add __fn2_i 3 1
    38 label __label34
-    * op add __fn2_c __fn2_c __fn2_i
+   39 op add __fn2_c 6 4
    40 label __label35
-    * op add __fn2_i __fn2_i 1
+   41 op add __fn2_i 4 1
    42 label __label36
-    * op add __fn2_c __fn2_c __fn2_i
+   43 op add __fn2_c 10 5
    44 label __label37
-    * op add __fn2_i __fn2_i 1
+   45 op add __fn2_i 5 1
    46 label __label38
-    * op add __fn2_c __fn2_c __fn2_i
+   47 op add __fn2_c 15 6
    48 label __label39
-    * op add __fn2_i __fn2_i 1
+   49 op add __fn2_i 6 1
    50 label __label40
-    * op add __fn2_c __fn2_c __fn2_i
+   51 op add __fn2_c 21 7
    52 label __label41
-    * op add __fn2_i __fn2_i 1
+   53 op add __fn2_i 7 1
    54 label __label11
-    * print __fn2_c
+   55 print 28
    56 print "|"
    57 jump __label8 always
    58 label __label8
-    * jump __label13 greaterThanEq 6 __fn2_c
+   59 jump __label13 greaterThanEq 6 28
    60 print "Less"
    61 set __tmp8 0
    62 jump __label13 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
    16 jump __label3 always
    17 label __label3
    18 label __label7
-    * set __fn2_c 0
-    * set __fn2_i 0
    19 label __label25
    20 label __label26
-    * op add __fn2_c 0 0
    21 label __label27
-    * op add __fn2_i 0 1
    22 label __label28
-    * op add __fn2_c 0 1
    23 label __label29
-    * op add __fn2_i 1 1
    24 label __label30
-    * op add __fn2_c 1 2
    25 label __label31
-    * op add __fn2_i 2 1
    26 label __label32
-    * op add __fn2_c 3 3
    27 label __label33
-    * op add __fn2_i 3 1
    28 label __label34
-    * op add __fn2_c 6 4
    29 label __label35
-    * op add __fn2_i 4 1
    30 label __label36
-    * op add __fn2_c 10 5
    31 label __label37
-    * op add __fn2_i 5 1
    32 label __label38
-    * op add __fn2_c 15 6
    33 label __label39
-    * op add __fn2_i 6 1
    34 label __label40
-    * op add __fn2_c 21 7
    35 label __label41
-    * op add __fn2_i 7 1
    36 label __label11
    37 print 28
    38 print "|"

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-1 instructions):
 
    38 print "|"
    39 jump __label8 always
    40 label __label8
-    * jump __label13 greaterThanEq 6 28
    41 print "Less"
    42 set __tmp8 0
    43 jump __label13 always

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
    13 label __label6
    14 print 6
    15 print "|"
-    * jump __label3 always
    16 label __label3
    17 label __label7
    18 label __label25
 
    35 label __label11
    36 print 28
    37 print "|"
-    * jump __label8 always
    38 label __label8
    39 print "Less"
    40 set __tmp8 0
-    * jump __label13 always
    41 label __label13
    42 print "|"
    43 print __tmp8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
     0 assertflush
     1 label __label0
-    * set __tmp8 1
     2 label __label2
     3 label __label16
     4 label __label17
 
    39 set __tmp8 0
    40 label __label13
    41 print "|"
-    * print __tmp8
+   42 print 0
    43 label __label1
    44 assertprints "6|28|Less|0" "loops in conditions"
    45 stop

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
    36 print "|"
    37 label __label8
    38 print "Less"
-    * set __tmp8 0
    39 label __label13
    40 print "|"
    41 print 0

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
    42 label __label1
    43 assertprints "6|28|Less|0" "loops in conditions"
    44 stop
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-2 instructions):
 
    33 label __label41
    34 label __label11
    35 print 28
-    * print "|"
    36 label __label8
-    * print "Less"
    37 label __label13
-    * print "|"
+   38 print "|Less|"
    39 print 0
    40 label __label1
    41 assertprints "6|28|Less|0" "loops in conditions"

Final code before resolving virtual instructions:

assertflush
print 6
print "|"
print 28
print "|Less|"
print 0
assertprints "6|28|Less|0" "loops in conditions"
stop
