    43 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     4 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (4 iterations).
     3 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     7 instructions added by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
    33 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 971):
  * Loop Optimization: replicate condition at line 2             cost     7, benefit       25.0, efficiency        3.6 (+7 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-4 instructions):
 
    20 op equal __tmp4 __tmp3 4
    21 jump __label7 equal __tmp4 false
    22 jump __label2 always
-    * set __tmp5 null
    23 jump __label8 always
    24 label __label7
-    * set __tmp5 null
    25 label __label8
    26 print i
    27 print j
 
    33 op equal __tmp7 __tmp6 10
    34 jump __label10 equal __tmp7 false
    35 jump __label3 always
-    * set __tmp8 null
    36 jump __label11 always
    37 label __label10
-    * set __tmp8 null
    38 label __label11
    39 label __label2
    40 op add __tmp9 i 2

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
    37 label __label10
    38 label __label11
    39 label __label2
-    * op add __tmp9 i 2
-    * set i __tmp9
-    * op add __tmp10 j 1
-    * set j __tmp10
+   40 op add i i 2
+   41 op add j j 1
    42 jump __label1 always
    43 label __label3
    44 end

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-3 instructions):
 
    10 call __label0 __fn0retval
    11 gotolabel __label5 __fn0
    12 set __tmp1 __fn0retval
-    * op lessThanEq __tmp2 __tmp0 __tmp1
-    * jump __label3 equal __tmp2 false
+   13 jump __label3 greaterThan __tmp0 __tmp1
    14 set __fn0_n i
    15 setaddr __fn0retaddr __label6
    16 call __label0 __fn0retval
    17 gotolabel __label6 __fn0
    18 set __tmp3 __fn0retval
-    * op equal __tmp4 __tmp3 4
-    * jump __label7 equal __tmp4 false
+   19 jump __label7 notEqual __tmp3 4
    20 jump __label2 always
    21 jump __label8 always
    22 label __label7
 
    28 call __label0 __fn0retval
    29 gotolabel __label9 __fn0
    30 set __tmp6 __fn0retval
-    * op equal __tmp7 __tmp6 10
-    * jump __label10 equal __tmp7 false
+   31 jump __label10 notEqual __tmp6 10
    32 jump __label3 always
    33 jump __label11 always
    34 label __label10

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    18 set __tmp3 __fn0retval
    19 jump __label7 notEqual __tmp3 4
    20 jump __label2 always
-    * jump __label8 always
    21 label __label7
    22 label __label8
    23 print i
 
    29 set __tmp6 __fn0retval
    30 jump __label10 notEqual __tmp6 10
    31 jump __label3 always
-    * jump __label11 always
    32 label __label10
    33 label __label11
    34 label __label2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    10 call __label0 __fn0retval
    11 gotolabel __label5 __fn0
    12 set __tmp1 __fn0retval
-    * jump __label3 greaterThan __tmp0 __tmp1
+   13 jump __label3 greaterThan __tmp0 __fn0retval
    14 set __fn0_n i
    15 setaddr __fn0retaddr __label6
    16 call __label0 __fn0retval
    17 gotolabel __label6 __fn0
    18 set __tmp3 __fn0retval
-    * jump __label7 notEqual __tmp3 4
+   19 jump __label7 notEqual __fn0retval 4
    20 jump __label2 always
    21 label __label7
    22 label __label8
 
    27 call __label0 __fn0retval
    28 gotolabel __label9 __fn0
    29 set __tmp6 __fn0retval
-    * jump __label10 notEqual __tmp6 10
+   30 jump __label10 notEqual __fn0retval 10
    31 jump __label3 always
    32 label __label10
    33 label __label11

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
     9 setaddr __fn0retaddr __label5
    10 call __label0 __fn0retval
    11 gotolabel __label5 __fn0
-    * set __tmp1 __fn0retval
    12 jump __label3 greaterThan __tmp0 __fn0retval
    13 set __fn0_n i
    14 setaddr __fn0retaddr __label6
    15 call __label0 __fn0retval
    16 gotolabel __label6 __fn0
-    * set __tmp3 __fn0retval
    17 jump __label7 notEqual __fn0retval 4
    18 jump __label2 always
    19 label __label7
 
    24 setaddr __fn0retaddr __label9
    25 call __label0 __fn0retval
    26 gotolabel __label9 __fn0
-    * set __tmp6 __fn0retval
    27 jump __label10 notEqual __fn0retval 10
    28 jump __label3 always
    29 label __label10

Modifications by Loop Optimization: replicate condition at line 2 (+7 instructions):
 
    10 call __label0 __fn0retval
    11 gotolabel __label5 __fn0
    12 jump __label3 greaterThan __tmp0 __fn0retval
+   13 label __label13
    14 set __fn0_n i
    15 setaddr __fn0retaddr __label6
    16 call __label0 __fn0retval
 
    32 label __label2
    33 op add i i 2
    34 op add j j 1
-    * jump __label1 always
+   35 set __fn0_n i
+   36 setaddr __fn0retaddr __label14
+   37 call __label0 __fn0retval
+   38 gotolabel __label14 __fn0
+   39 set __tmp0 __fn0retval
+   40 set __fn0_n j
+   41 setaddr __fn0retaddr __label15
+   42 call __label0 __fn0retval
+   43 gotolabel __label15 __fn0
+   44 jump __label13 lessThanEq __tmp0 __fn0retval
    45 label __label3
    46 end
    47 label __label0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
     0 set i 0
     1 set j 10
     2 label __label1
-    * set __fn0_n i
+    3 set __fn0_n 0
     4 setaddr __fn0retaddr __label4
     5 call __label0 __fn0retval
     6 gotolabel __label4 __fn0
     7 set __tmp0 __fn0retval
-    * set __fn0_n j
+    8 set __fn0_n 10
     9 setaddr __fn0retaddr __label5
    10 call __label0 __fn0retval
    11 gotolabel __label5 __fn0

Modifications by Final phase, Jump Straightening, iteration 1 (-2 instructions):
 
    15 setaddr __fn0retaddr __label6
    16 call __label0 __fn0retval
    17 gotolabel __label6 __fn0
-    * jump __label7 notEqual __fn0retval 4
-    * jump __label2 always
+   18 jump __label2 equal __fn0retval 4
    19 label __label7
    20 label __label8
    21 print i
 
    24 setaddr __fn0retaddr __label9
    25 call __label0 __fn0retval
    26 gotolabel __label9 __fn0
-    * jump __label10 notEqual __fn0retval 10
-    * jump __label3 always
+   27 jump __label3 equal __fn0retval 10
    28 label __label10
    29 label __label11
    30 label __label2

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    46 set __fn0retval __fn0_n
    47 label __label12
    48 goto __fn0retaddr __fn0
-    * end

Final code before resolving virtual instructions:

set i 0
set j 10
set __fn0_n 0
setaddr __fn0retaddr __label4
call __label0 __fn0retval
gotolabel __label4 __fn0
set __tmp0 __fn0retval
set __fn0_n 10
setaddr __fn0retaddr __label5
call __label0 __fn0retval
gotolabel __label5 __fn0
jump __label3 greaterThan __tmp0 __fn0retval
label __label13
set __fn0_n i
setaddr __fn0retaddr __label6
call __label0 __fn0retval
gotolabel __label6 __fn0
jump __label2 equal __fn0retval 4
print i
print j
set __fn0_n i
setaddr __fn0retaddr __label9
call __label0 __fn0retval
gotolabel __label9 __fn0
jump __label3 equal __fn0retval 10
label __label2
op add i i 2
op add j j 1
set __fn0_n i
setaddr __fn0retaddr __label14
call __label0 __fn0retval
gotolabel __label14 __fn0
set __tmp0 __fn0retval
set __fn0_n j
setaddr __fn0retaddr __label15
call __label0 __fn0retval
gotolabel __label15 __fn0
jump __label13 lessThanEq __tmp0 __fn0retval
label __label3
end
label __label0
set __fn0retval __fn0_n
goto __fn0retaddr __fn0
