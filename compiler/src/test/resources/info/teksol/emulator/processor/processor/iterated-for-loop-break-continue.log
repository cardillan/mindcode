    49 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     5 instructions eliminated by Dead Code Elimination (3 iterations).
     3 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (4 iterations).
     3 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     7 instructions added by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
    38 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 966):
  * Replicate loop condition at line 4:5                         cost     7, benefit       25.0, efficiency        3.6 (+7 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-5 instructions):
 
    22 op equal __tmp5 __tmp4 4
    23 jump __label9 equal __tmp5 false
    24 jump __label4 always
-    * set __tmp6 null
    25 jump __label10 always
    26 label __label9
-    * set __tmp6 null
    27 label __label10
    28 print __fn1_i
    29 print "|"
 
    37 op equal __tmp8 __tmp7 10
    38 jump __label12 equal __tmp8 false
    39 jump __label5 always
-    * set __tmp9 null
    40 jump __label13 always
    41 label __label12
-    * set __tmp9 null
    42 label __label13
    43 label __label4
    44 op add __tmp10 __fn1_i 2
 
    47 set __fn1_j __tmp11
    48 jump __label3 always
    49 label __label5
-    * set __tmp0 null
    50 label __label2
    51 assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"
    52 stop

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
    41 label __label12
    42 label __label13
    43 label __label4
-    * op add __tmp10 __fn1_i 2
-    * set __fn1_i __tmp10
-    * op add __tmp11 __fn1_j 1
-    * set __fn1_j __tmp11
+   44 op add __fn1_i __fn1_i 2
+   45 op add __fn1_j __fn1_j 1
    46 jump __label3 always
    47 label __label5
    48 label __label2

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-3 instructions):
 
    12 call __label0 __fn0retval
    13 gotolabel __label7 __fn0
    14 set __tmp2 __fn0retval
-    * op lessThanEq __tmp3 __tmp1 __tmp2
-    * jump __label5 equal __tmp3 false
+   15 jump __label5 greaterThan __tmp1 __tmp2
    16 set __fn0_n __fn1_i
    17 setaddr __fn0retaddr __label8
    18 call __label0 __fn0retval
    19 gotolabel __label8 __fn0
    20 set __tmp4 __fn0retval
-    * op equal __tmp5 __tmp4 4
-    * jump __label9 equal __tmp5 false
+   21 jump __label9 notEqual __tmp4 4
    22 jump __label4 always
    23 jump __label10 always
    24 label __label9
 
    32 call __label0 __fn0retval
    33 gotolabel __label11 __fn0
    34 set __tmp7 __fn0retval
-    * op equal __tmp8 __tmp7 10
-    * jump __label12 equal __tmp8 false
+   35 jump __label12 notEqual __tmp7 10
    36 jump __label5 always
    37 jump __label13 always
    38 label __label12

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    20 set __tmp4 __fn0retval
    21 jump __label9 notEqual __tmp4 4
    22 jump __label4 always
-    * jump __label10 always
    23 label __label9
    24 label __label10
    25 print __fn1_i
 
    33 set __tmp7 __fn0retval
    34 jump __label12 notEqual __tmp7 10
    35 jump __label5 always
-    * jump __label13 always
    36 label __label12
    37 label __label13
    38 label __label4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    12 call __label0 __fn0retval
    13 gotolabel __label7 __fn0
    14 set __tmp2 __fn0retval
-    * jump __label5 greaterThan __tmp1 __tmp2
+   15 jump __label5 greaterThan __tmp1 __fn0retval
    16 set __fn0_n __fn1_i
    17 setaddr __fn0retaddr __label8
    18 call __label0 __fn0retval
    19 gotolabel __label8 __fn0
    20 set __tmp4 __fn0retval
-    * jump __label9 notEqual __tmp4 4
+   21 jump __label9 notEqual __fn0retval 4
    22 jump __label4 always
    23 label __label9
    24 label __label10
 
    31 call __label0 __fn0retval
    32 gotolabel __label11 __fn0
    33 set __tmp7 __fn0retval
-    * jump __label12 notEqual __tmp7 10
+   34 jump __label12 notEqual __fn0retval 10
    35 jump __label5 always
    36 label __label12
    37 label __label13

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    11 setaddr __fn0retaddr __label7
    12 call __label0 __fn0retval
    13 gotolabel __label7 __fn0
-    * set __tmp2 __fn0retval
    14 jump __label5 greaterThan __tmp1 __fn0retval
    15 set __fn0_n __fn1_i
    16 setaddr __fn0retaddr __label8
    17 call __label0 __fn0retval
    18 gotolabel __label8 __fn0
-    * set __tmp4 __fn0retval
    19 jump __label9 notEqual __fn0retval 4
    20 jump __label4 always
    21 label __label9
 
    28 setaddr __fn0retaddr __label11
    29 call __label0 __fn0retval
    30 gotolabel __label11 __fn0
-    * set __tmp7 __fn0retval
    31 jump __label12 notEqual __fn0retval 10
    32 jump __label5 always
    33 label __label12

Modifications by Replicate loop condition at line 4:5 (+7 instructions):
 
    12 call __label0 __fn0retval
    13 gotolabel __label7 __fn0
    14 jump __label5 greaterThan __tmp1 __fn0retval
+   15 label __label15
    16 set __fn0_n __fn1_i
    17 setaddr __fn0retaddr __label8
    18 call __label0 __fn0retval
 
    36 label __label4
    37 op add __fn1_i __fn1_i 2
    38 op add __fn1_j __fn1_j 1
-    * jump __label3 always
+   39 set __fn0_n __fn1_i
+   40 setaddr __fn0retaddr __label16
+   41 call __label0 __fn0retval
+   42 gotolabel __label16 __fn0
+   43 set __tmp1 __fn0retval
+   44 set __fn0_n __fn1_j
+   45 setaddr __fn0retaddr __label17
+   46 call __label0 __fn0retval
+   47 gotolabel __label17 __fn0
+   48 jump __label15 lessThanEq __tmp1 __fn0retval
    49 label __label5
    50 label __label2
    51 assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     2 set __fn1_i 0
     3 set __fn1_j 10
     4 label __label3
-    * set __fn0_n __fn1_i
+    5 set __fn0_n 0
     6 setaddr __fn0retaddr __label6
     7 call __label0 __fn0retval
     8 gotolabel __label6 __fn0
     9 set __tmp1 __fn0retval
-    * set __fn0_n __fn1_j
+   10 set __fn0_n 10
    11 setaddr __fn0retaddr __label7
    12 call __label0 __fn0retval
    13 gotolabel __label7 __fn0

Modifications by Final phase, Jump Straightening, iteration 1 (-2 instructions):
 
    17 setaddr __fn0retaddr __label8
    18 call __label0 __fn0retval
    19 gotolabel __label8 __fn0
-    * jump __label9 notEqual __fn0retval 4
-    * jump __label4 always
+   20 jump __label4 equal __fn0retval 4
    21 label __label9
    22 label __label10
    23 print __fn1_i
 
    28 setaddr __fn0retaddr __label11
    29 call __label0 __fn0retval
    30 gotolabel __label11 __fn0
-    * jump __label12 notEqual __fn0retval 10
-    * jump __label5 always
+   31 jump __label5 equal __fn0retval 10
    32 label __label12
    33 label __label13
    34 label __label4

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    53 set __fn0retval __fn0_n
    54 label __label14
    55 goto __fn0retaddr __fn0
-    * end

Final code before resolving virtual instructions:

assertflush
set __fn1_i 0
set __fn1_j 10
set __fn0_n 0
setaddr __fn0retaddr __label6
call __label0 __fn0retval
gotolabel __label6 __fn0
set __tmp1 __fn0retval
set __fn0_n 10
setaddr __fn0retaddr __label7
call __label0 __fn0retval
gotolabel __label7 __fn0
jump __label5 greaterThan __tmp1 __fn0retval
label __label15
set __fn0_n __fn1_i
setaddr __fn0retaddr __label8
call __label0 __fn0retval
gotolabel __label8 __fn0
jump __label4 equal __fn0retval 4
print __fn1_i
print "|"
print __fn1_j
print "|"
set __fn0_n __fn1_i
setaddr __fn0retaddr __label11
call __label0 __fn0retval
gotolabel __label11 __fn0
jump __label5 equal __fn0retval 10
label __label4
op add __fn1_i __fn1_i 2
op add __fn1_j __fn1_j 1
set __fn0_n __fn1_i
setaddr __fn0retaddr __label16
call __label0 __fn0retval
gotolabel __label16 __fn0
set __tmp1 __fn0retval
set __fn0_n __fn1_j
setaddr __fn0retaddr __label17
call __label0 __fn0retval
gotolabel __label17 __fn0
jump __label15 lessThanEq __tmp1 __fn0retval
label __label5
assertprints "0|10|2|11|6|13|8|14|10|15|" "iterated-for-loop-break-continue"
stop
end
label __label0
set __fn0retval __fn0_n
goto __fn0retaddr __fn0
