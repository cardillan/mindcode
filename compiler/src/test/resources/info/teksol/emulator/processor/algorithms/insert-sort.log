    39 instructions before optimizations.
     4 instructions eliminated by Temp Variables Elimination.
     2 instructions eliminated by Dead Code Elimination (3 iterations).
     2 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     2 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     3 instructions modified by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     1 instructions eliminated by Jump Straightening (4 iterations).
    26 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
    16 op lessThanEq __tmp5 a item
    17 jump __label6 equal __tmp5 false
    18 jump __label5 always
-    * set __tmp6 null
    19 jump __label7 always
    20 label __label6
-    * set __tmp6 null
    21 label __label7
    22 op add __tmp7 j 1
    23 write a ARRAY __tmp7

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-4 instructions):
 
     4 set i 1
     5 label __label0
     6 jump __label2 greaterThanEq i __tmp0
-    * read __tmp1 ARRAY i
-    * set item __tmp1
-    * op sub __tmp2 i 1
-    * set j __tmp2
+    7 read item ARRAY i
+    8 op sub j i 1
     9 label __label3
    10 op greaterThanEq __tmp3 j 0
    11 jump __label5 equal __tmp3 false
-    * read __tmp4 ARRAY j
-    * set a __tmp4
+   12 read a ARRAY j
    13 op lessThanEq __tmp5 a item
    14 jump __label6 equal __tmp5 false
    15 jump __label5 always
 
    18 label __label7
    19 op add __tmp7 j 1
    20 write a ARRAY __tmp7
-    * op sub __tmp8 j 1
-    * set j __tmp8
+   21 op sub j j 1
    22 label __label4
    23 jump __label3 always
    24 label __label5

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
     7 read item ARRAY i
     8 op sub j i 1
     9 label __label3
-    * op greaterThanEq __tmp3 j 0
-    * jump __label5 equal __tmp3 false
+   10 jump __label5 lessThan j 0
    11 read a ARRAY j
-    * op lessThanEq __tmp5 a item
-    * jump __label6 equal __tmp5 false
+   12 jump __label6 greaterThan a item
    13 jump __label5 always
    14 jump __label7 always
    15 label __label6

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
    11 read a ARRAY j
    12 jump __label6 greaterThan a item
    13 jump __label5 always
-    * jump __label7 always
    14 label __label6
    15 label __label7
    16 op add __tmp7 j 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 set __tmp0 SIZE
     4 set i 1
     5 label __label0
-    * jump __label2 greaterThanEq i __tmp0
+    6 jump __label2 greaterThanEq i SIZE
     7 read item ARRAY i
     8 op sub j i 1
     9 label __label3
 
    28 set __tmp10 SIZE
    29 set i 0
    30 label __label8
-    * jump __label10 greaterThanEq i __tmp10
+   31 jump __label10 greaterThanEq i SIZE
    32 read __tmp11 FINAL i
    33 read __tmp12 ARRAY i
    34 assertequals __tmp11 __tmp12 "unexpected value"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
     0 set SIZE 128
     1 set ARRAY bank2
     2 set FINAL bank3
-    * set __tmp0 SIZE
     3 set i 1
     4 label __label0
     5 jump __label2 greaterThanEq i SIZE
 
    24 op add i i 1
    25 jump __label0 always
    26 label __label2
-    * set __tmp10 SIZE
    27 set i 0
    28 label __label8
    29 jump __label10 greaterThanEq i SIZE

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     3 set i 1
     4 label __label0
     5 jump __label2 greaterThanEq i SIZE
+    6 label __label11
     7 read item ARRAY i
     8 op sub j i 1
     9 label __label3
    10 jump __label5 lessThan j 0
+   11 label __label12
    12 read a ARRAY j
    13 jump __label6 greaterThan a item
    14 jump __label5 always
 
    18 write a ARRAY __tmp7
    19 op sub j j 1
    20 label __label4
-    * jump __label3 always
+   21 jump __label12 greaterThanEq j 0
    22 label __label5
    23 op add __tmp9 j 1
    24 write item ARRAY __tmp9
    25 label __label1
    26 op add i i 1
-    * jump __label0 always
+   27 jump __label11 lessThan i SIZE
    28 label __label2
    29 set i 0
    30 label __label8
    31 jump __label10 greaterThanEq i SIZE
+   32 label __label13
    33 read __tmp11 FINAL i
    34 read __tmp12 ARRAY i
    35 assertequals __tmp11 __tmp12 "unexpected value"
    36 label __label9
    37 op add i i 1
-    * jump __label8 always
+   38 jump __label13 lessThan i SIZE
    39 label __label10
    40 stop
    41 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     2 set FINAL bank3
     3 set i 1
     4 label __label0
-    * jump __label2 greaterThanEq i SIZE
+    5 jump __label2 greaterThanEq 1 SIZE
     6 label __label11
     7 read item ARRAY i
     8 op sub j i 1
 
    28 label __label2
    29 set i 0
    30 label __label8
-    * jump __label10 greaterThanEq i SIZE
+   31 jump __label10 greaterThanEq 0 SIZE
    32 label __label13
    33 read __tmp11 FINAL i
    34 read __tmp12 ARRAY i

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
    10 jump __label5 lessThan j 0
    11 label __label12
    12 read a ARRAY j
-    * jump __label6 greaterThan a item
-    * jump __label5 always
+   13 jump __label5 lessThanEq a item
    14 label __label6
    15 label __label7
    16 op add __tmp7 j 1

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
    37 jump __label13 lessThan i SIZE
    38 label __label10
    39 stop
-    * end

Final code before resolving virtual instructions:

set SIZE 128
set ARRAY bank2
set FINAL bank3
set i 1
jump __label2 greaterThanEq 1 SIZE
label __label11
read item ARRAY i
op sub j i 1
jump __label5 lessThan j 0
label __label12
read a ARRAY j
jump __label5 lessThanEq a item
op add __tmp7 j 1
write a ARRAY __tmp7
op sub j j 1
jump __label12 greaterThanEq j 0
label __label5
op add __tmp9 j 1
write item ARRAY __tmp9
op add i i 1
jump __label11 lessThan i SIZE
label __label2
set i 0
jump __label10 greaterThanEq 0 SIZE
label __label13
read __tmp11 FINAL i
read __tmp12 ARRAY i
assertequals __tmp11 __tmp12 "unexpected value"
op add i i 1
jump __label13 lessThan i SIZE
label __label10
stop
