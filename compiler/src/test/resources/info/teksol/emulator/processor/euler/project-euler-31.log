    95 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     6 instructions eliminated by Dead Code Elimination (3 iterations).
     2 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (4 iterations).
    22 instructions eliminated by Data Flow Optimization (2 passes, 9 iterations).
     1 instructions modified by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     2 instructions added by Return Optimization (4 iterations).
     1 return statements optimized by Return Optimization.
     1 instructions eliminated by Unreachable Code Elimination.
    59 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 923):
  * Unroll iteration loop at line 4:1                            cost     0, benefit       23.0, efficiency   Infinity (-19 instructions)
    Optimize return at line 14:9                                 cost     2, benefit       13.0, efficiency        6.5

Pass 1: speed optimization selection (cost limit 942):
  * Optimize return at line 14:9                                 cost     2, benefit       13.0, efficiency        6.5 (+2 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-6 instructions):
 
    40 label __label12
    41 set __fn1_v 41
    42 print __fn1_v
-    * set __tmp2 __fn1_v
    43 label __label13
    44 set __fn0_amount 20
    45 set __fn0_index 1
 
    49 label __label15
    50 set __fn2_v __tmp3
    51 print __fn2_v
-    * set __tmp4 __fn2_v
    52 label __label16
    53 end
    54 label __label0
 
    56 jump __label18 equal __tmp5 false
    57 set __fn0retval 1
    58 jump __label17 always
-    * set __tmp6 null
    59 jump __label19 always
    60 label __label18
-    * set __tmp6 null
    61 label __label19
    62 set __fn0_result 0
    63 set __fn0_i __fn0_index
 
    85 set __tmp11 __fn0retval
    86 op add __tmp12 __fn0_result __tmp11
    87 set __fn0_result __tmp12
-    * set __tmp9 __fn0_result
    88 jump __label24 always
    89 label __label23
-    * set __tmp9 null
    90 label __label24
    91 label __label21
    92 op add __fn0_i __fn0_i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
    31 set value 1
    32 label __label2
    33 write value bank1 index
-    * op add __tmp1 index 1
-    * set index __tmp1
+   34 op add index index 1
    35 label __label1
    36 goto __tmp0 marker0
    37 gotolabel __label11 marker0
 
    62 set __fn0_i __fn0_index
    63 label __label20
    64 jump __label22 greaterThanEq __fn0_i 8
-    * read __tmp7 bank1 __fn0_i
-    * set __fn0_p __tmp7
+   65 read __fn0_p bank1 __fn0_i
    66 op lessThanEq __tmp8 __fn0_p __fn0_amount
    67 jump __label23 equal __tmp8 false
    68 op sub __tmp10 __fn0_amount __fn0_p
 
    81 pop bank1 __fn0_index
    82 pop bank1 __fn0_amount
    83 set __tmp11 __fn0retval
-    * op add __tmp12 __fn0_result __tmp11
-    * set __fn0_result __tmp12
+   84 op add __fn0_result __fn0_result __tmp11
    85 jump __label24 always
    86 label __label23
    87 label __label24

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
    51 label __label16
    52 end
    53 label __label0
-    * op equal __tmp5 __fn0_amount 0
-    * jump __label18 equal __tmp5 false
+   54 jump __label18 notEqual __fn0_amount 0
    55 set __fn0retval 1
    56 jump __label17 always
    57 jump __label19 always
 
    62 label __label20
    63 jump __label22 greaterThanEq __fn0_i 8
    64 read __fn0_p bank1 __fn0_i
-    * op lessThanEq __tmp8 __fn0_p __fn0_amount
-    * jump __label23 equal __tmp8 false
+   65 jump __label23 greaterThan __fn0_p __fn0_amount
    66 op sub __tmp10 __fn0_amount __fn0_p
    67 push bank1 __fn0_amount
    68 push bank1 __fn0_index

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    54 jump __label18 notEqual __fn0_amount 0
    55 set __fn0retval 1
    56 jump __label17 always
-    * jump __label19 always
    57 label __label18
    58 label __label19
    59 set __fn0_result 0
 
    79 pop bank1 __fn0_amount
    80 set __tmp11 __fn0retval
    81 op add __fn0_result __fn0_result __tmp11
-    * jump __label24 always
    82 label __label23
    83 label __label24
    84 label __label21

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    38 label __label3
    39 label __label12
    40 set __fn1_v 41
-    * print __fn1_v
+   41 print 41
    42 label __label13
    43 set __fn0_amount 20
    44 set __fn0_index 1
 
    46 label __label14
    47 set __tmp3 __fn0retval
    48 label __label15
-    * set __fn2_v __tmp3
-    * print __fn2_v
+   49 set __fn2_v __fn0retval
+   50 print __tmp3
    51 label __label16
    52 end
    53 label __label0
 
    68 push bank1 __fn0_result
    69 push bank1 __fn0_i
    70 push bank1 __fn0_p
-    * set __fn0_amount __tmp10
+   71 op sub __fn0_amount __fn0_amount __fn0_p
    72 set __fn0_index __fn0_i
    73 callrec bank1 __label0 __label25 __fn0retval
    74 label __label25
 
    78 pop bank1 __fn0_index
    79 pop bank1 __fn0_amount
    80 set __tmp11 __fn0retval
-    * op add __fn0_result __fn0_result __tmp11
+   81 op add __fn0_result __fn0_result __fn0retval
    82 label __label23
    83 label __label24
    84 label __label21

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    37 gotolabel __label11 marker0
    38 label __label3
    39 label __label12
-    * set __fn1_v 41
    40 print 41
    41 label __label13
    42 set __fn0_amount 20
 
    45 label __label14
    46 set __tmp3 __fn0retval
    47 label __label15
-    * set __fn2_v __fn0retval
-    * print __tmp3
+   48 print __fn0retval
    49 label __label16
    50 end
    51 label __label0
 
    60 jump __label22 greaterThanEq __fn0_i 8
    61 read __fn0_p bank1 __fn0_i
    62 jump __label23 greaterThan __fn0_p __fn0_amount
-    * op sub __tmp10 __fn0_amount __fn0_p
    63 push bank1 __fn0_amount
    64 push bank1 __fn0_index
    65 push bank1 __fn0_result
 
    74 pop bank1 __fn0_result
    75 pop bank1 __fn0_index
    76 pop bank1 __fn0_amount
-    * set __tmp11 __fn0retval
    77 op add __fn0_result __fn0_result __fn0retval
    78 label __label23
    79 label __label24

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
    43 set __fn0_index 1
    44 callrec bank1 __label0 __label14 __fn0retval
    45 label __label14
-    * set __tmp3 __fn0retval
    46 label __label15
    47 print __fn0retval
    48 label __label16

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    57 set __fn0_i __fn0_index
    58 label __label20
    59 jump __label22 greaterThanEq __fn0_i 8
+   60 label __label26
    61 read __fn0_p bank1 __fn0_i
    62 jump __label23 greaterThan __fn0_p __fn0_amount
    63 push bank1 __fn0_amount
 
    79 label __label24
    80 label __label21
    81 op add __fn0_i __fn0_i 1
-    * jump __label20 always
+   82 jump __label26 lessThan __fn0_i 8
    83 label __label22
    84 set __fn0retval __fn0_result
    85 label __label17

Modifications by Unroll iteration loop at line 4:1 (-2 instructions):
     0 set __sp 16
     1 set index 0
-    * setaddr __tmp0 __label4
-    * set value 200
-    * jump __label2 always
-    * gotolabel __label4 marker0
-    * setaddr __tmp0 __label5
-    * set value 100
-    * jump __label2 always
-    * gotolabel __label5 marker0
-    * setaddr __tmp0 __label6
-    * set value 50
-    * jump __label2 always
-    * gotolabel __label6 marker0
-    * setaddr __tmp0 __label7
-    * set value 20
-    * jump __label2 always
-    * gotolabel __label7 marker0
-    * setaddr __tmp0 __label8
-    * set value 10
-    * jump __label2 always
-    * gotolabel __label8 marker0
-    * setaddr __tmp0 __label9
-    * set value 5
-    * jump __label2 always
-    * gotolabel __label9 marker0
-    * setaddr __tmp0 __label10
-    * set value 2
-    * jump __label2 always
-    * gotolabel __label10 marker0
-    * setaddr __tmp0 __label11
-    * set value 1
-    * label __label2
-    * write value bank1 index
-    * op add index index 1
-    * label __label1
-    * goto __tmp0 marker0
-    * gotolabel __label11 marker0
-    * label __label3
+    2 set value 200
+    3 label __label27
+    4 write value bank1 index
+    5 op add index index 1
+    6 label __label28
+    7 set value 100
+    8 label __label31
+    9 write value bank1 index
+   10 op add index index 1
+   11 label __label32
+   12 set value 50
+   13 label __label35
+   14 write value bank1 index
+   15 op add index index 1
+   16 label __label36
+   17 set value 20
+   18 label __label39
+   19 write value bank1 index
+   20 op add index index 1
+   21 label __label40
+   22 set value 10
+   23 label __label43
+   24 write value bank1 index
+   25 op add index index 1
+   26 label __label44
+   27 set value 5
+   28 label __label47
+   29 write value bank1 index
+   30 op add index index 1
+   31 label __label48
+   32 set value 2
+   33 label __label51
+   34 write value bank1 index
+   35 op add index index 1
+   36 label __label52
+   37 set value 1
+   38 label __label55
+   39 write value bank1 index
+   40 op add index index 1
+   41 label __label56
+   42 label __label3
    43 label __label12
    44 print 41
    45 label __label13

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set index 0
     2 set value 200
     3 label __label27
-    * write value bank1 index
-    * op add index index 1
+    4 write 200 bank1 0
+    5 op add index 0 1
     6 label __label28
     7 set value 100
     8 label __label31
-    * write value bank1 index
-    * op add index index 1
+    9 write 100 bank1 1
+   10 op add index 1 1
    11 label __label32
    12 set value 50
    13 label __label35
-    * write value bank1 index
-    * op add index index 1
+   14 write 50 bank1 2
+   15 op add index 2 1
    16 label __label36
    17 set value 20
    18 label __label39
-    * write value bank1 index
-    * op add index index 1
+   19 write 20 bank1 3
+   20 op add index 3 1
    21 label __label40
    22 set value 10
    23 label __label43
-    * write value bank1 index
-    * op add index index 1
+   24 write 10 bank1 4
+   25 op add index 4 1
    26 label __label44
    27 set value 5
    28 label __label47
-    * write value bank1 index
-    * op add index index 1
+   29 write 5 bank1 5
+   30 op add index 5 1
    31 label __label48
    32 set value 2
    33 label __label51
-    * write value bank1 index
-    * op add index index 1
+   34 write 2 bank1 6
+   35 op add index 6 1
    36 label __label52
    37 set value 1
    38 label __label55
-    * write value bank1 index
-    * op add index index 1
+   39 write 1 bank1 7
+   40 op add index 7 1
    41 label __label56
    42 label __label3
    43 label __label12
 
    60 set __fn0_result 0
    61 set __fn0_i __fn0_index
    62 label __label20
-    * jump __label22 greaterThanEq __fn0_i 8
+   63 jump __label22 greaterThanEq __fn0_index 8
    64 label __label26
    65 read __fn0_p bank1 __fn0_i
    66 jump __label23 greaterThan __fn0_p __fn0_amount

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
     0 set __sp 16
-    * set index 0
-    * set value 200
     1 label __label27
     2 write 200 bank1 0
-    * op add index 0 1
     3 label __label28
-    * set value 100
     4 label __label31
     5 write 100 bank1 1
-    * op add index 1 1
     6 label __label32
-    * set value 50
     7 label __label35
     8 write 50 bank1 2
-    * op add index 2 1
     9 label __label36
-    * set value 20
    10 label __label39
    11 write 20 bank1 3
-    * op add index 3 1
    12 label __label40
-    * set value 10
    13 label __label43
    14 write 10 bank1 4
-    * op add index 4 1
    15 label __label44
-    * set value 5
    16 label __label47
    17 write 5 bank1 5
-    * op add index 5 1
    18 label __label48
-    * set value 2
    19 label __label51
    20 write 2 bank1 6
-    * op add index 6 1
    21 label __label52
-    * set value 1
    22 label __label55
    23 write 1 bank1 7
-    * op add index 7 1
    24 label __label56
    25 label __label3
    26 label __label12

Modifications by Optimize return at line 14:9 (+2 instructions):
 
    37 label __label0
    38 jump __label18 notEqual __fn0_amount 0
    39 set __fn0retval 1
-    * jump __label17 always
+   40 return bank1
    41 label __label18
    42 label __label19
    43 set __fn0_result 0

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    71 set __fn0retval __fn0_result
    72 label __label17
    73 return bank1
-    * end

Final code before resolving virtual instructions:

set __sp 16
write 200 bank1 0
write 100 bank1 1
write 50 bank1 2
write 20 bank1 3
write 10 bank1 4
write 5 bank1 5
write 2 bank1 6
write 1 bank1 7
print 41
set __fn0_amount 20
set __fn0_index 1
callrec bank1 __label0 __label14 __fn0retval
label __label14
print __fn0retval
end
label __label0
jump __label18 notEqual __fn0_amount 0
set __fn0retval 1
return bank1
label __label18
set __fn0_result 0
set __fn0_i __fn0_index
jump __label22 greaterThanEq __fn0_index 8
label __label26
read __fn0_p bank1 __fn0_i
jump __label23 greaterThan __fn0_p __fn0_amount
push bank1 __fn0_amount
push bank1 __fn0_index
push bank1 __fn0_result
push bank1 __fn0_i
push bank1 __fn0_p
op sub __fn0_amount __fn0_amount __fn0_p
set __fn0_index __fn0_i
callrec bank1 __label0 __label25 __fn0retval
label __label25
pop bank1 __fn0_p
pop bank1 __fn0_i
pop bank1 __fn0_result
pop bank1 __fn0_index
pop bank1 __fn0_amount
op add __fn0_result __fn0_result __fn0retval
label __label23
op add __fn0_i __fn0_i 1
jump __label26 lessThan __fn0_i 8
label __label22
set __fn0retval __fn0_result
return bank1
