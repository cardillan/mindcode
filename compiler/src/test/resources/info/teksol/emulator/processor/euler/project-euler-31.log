    91 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     4 instructions eliminated by Dead Code Elimination (3 iterations).
     2 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (4 iterations).
    20 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions modified by Loop Optimization (2 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     2 instructions added by Return Optimization (4 iterations).
     1 return statements optimized by Return Optimization.
     1 instructions eliminated by Unreachable Code Elimination.
    59 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 923):
  * Unroll iteration loop at line 4:1                            cost     0, benefit       23.0, efficiency   Infinity (-19 instructions)
    Optimize return at line 14:9                                 cost     2, benefit       13.0, efficiency        6.5

Pass 1: speed optimization selection (cost limit 942):
  * Optimize return at line 14:9                                 cost     2, benefit       13.0, efficiency        6.5 (+2 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-4 instructions):
 
    50 jump __label14 equal __tmp3 false
    51 set __fn0retval 1
    52 jump __label13 always
-    * set __tmp4 null
    53 jump __label15 always
    54 label __label14
-    * set __tmp4 null
    55 label __label15
    56 set __fn0_result 0
    57 set __fn0_i __fn0_index
 
    79 set __tmp9 __fn0retval
    80 op add __tmp10 __fn0_result __tmp9
    81 set __fn0_result __tmp10
-    * set __tmp7 __fn0_result
    82 jump __label20 always
    83 label __label19
-    * set __tmp7 null
    84 label __label20
    85 label __label17
    86 op add __fn0_i __fn0_i 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
    31 set value 1
    32 label __label2
    33 write value bank1 index
-    * op add __tmp1 index 1
-    * set index __tmp1
+   34 op add index index 1
    35 label __label1
    36 goto __tmp0 marker0
    37 gotolabel __label11 marker0
 
    56 set __fn0_i __fn0_index
    57 label __label16
    58 jump __label18 greaterThanEq __fn0_i 8
-    * read __tmp5 bank1 __fn0_i
-    * set __fn0_p __tmp5
+   59 read __fn0_p bank1 __fn0_i
    60 op lessThanEq __tmp6 __fn0_p __fn0_amount
    61 jump __label19 equal __tmp6 false
    62 op sub __tmp8 __fn0_amount __fn0_p
 
    75 pop bank1 __fn0_index
    76 pop bank1 __fn0_amount
    77 set __tmp9 __fn0retval
-    * op add __tmp10 __fn0_result __tmp9
-    * set __fn0_result __tmp10
+   78 op add __fn0_result __fn0_result __tmp9
    79 jump __label20 always
    80 label __label19
    81 label __label20

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
    45 stop
    46 end
    47 label __label0
-    * op equal __tmp3 __fn0_amount 0
-    * jump __label14 equal __tmp3 false
+   48 jump __label14 notEqual __fn0_amount 0
    49 set __fn0retval 1
    50 jump __label13 always
    51 jump __label15 always
 
    56 label __label16
    57 jump __label18 greaterThanEq __fn0_i 8
    58 read __fn0_p bank1 __fn0_i
-    * op lessThanEq __tmp6 __fn0_p __fn0_amount
-    * jump __label19 equal __tmp6 false
+   59 jump __label19 greaterThan __fn0_p __fn0_amount
    60 op sub __tmp8 __fn0_amount __fn0_p
    61 push bank1 __fn0_amount
    62 push bank1 __fn0_index

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    48 jump __label14 notEqual __fn0_amount 0
    49 set __fn0retval 1
    50 jump __label13 always
-    * jump __label15 always
    51 label __label14
    52 label __label15
    53 set __fn0_result 0
 
    73 pop bank1 __fn0_amount
    74 set __tmp9 __fn0retval
    75 op add __fn0_result __fn0_result __tmp9
-    * jump __label20 always
    76 label __label19
    77 label __label20
    78 label __label17

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    41 callrec bank1 __label0 __label12 __fn0retval
    42 label __label12
    43 set __tmp2 __fn0retval
-    * assertequals 41 __tmp2 "Project Euler 31"
+   44 assertequals 41 __fn0retval "Project Euler 31"
    45 stop
    46 end
    47 label __label0
 
    62 push bank1 __fn0_result
    63 push bank1 __fn0_i
    64 push bank1 __fn0_p
-    * set __fn0_amount __tmp8
+   65 op sub __fn0_amount __fn0_amount __fn0_p
    66 set __fn0_index __fn0_i
    67 callrec bank1 __label0 __label21 __fn0retval
    68 label __label21
 
    72 pop bank1 __fn0_index
    73 pop bank1 __fn0_amount
    74 set __tmp9 __fn0retval
-    * op add __fn0_result __fn0_result __tmp9
+   75 op add __fn0_result __fn0_result __fn0retval
    76 label __label19
    77 label __label20
    78 label __label17

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    40 set __fn0_index 1
    41 callrec bank1 __label0 __label12 __fn0retval
    42 label __label12
-    * set __tmp2 __fn0retval
    43 assertequals 41 __fn0retval "Project Euler 31"
    44 stop
    45 end
 
    55 jump __label18 greaterThanEq __fn0_i 8
    56 read __fn0_p bank1 __fn0_i
    57 jump __label19 greaterThan __fn0_p __fn0_amount
-    * op sub __tmp8 __fn0_amount __fn0_p
    58 push bank1 __fn0_amount
    59 push bank1 __fn0_index
    60 push bank1 __fn0_result
 
    69 pop bank1 __fn0_result
    70 pop bank1 __fn0_index
    71 pop bank1 __fn0_amount
-    * set __tmp9 __fn0retval
    72 op add __fn0_result __fn0_result __fn0retval
    73 label __label19
    74 label __label20

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    53 set __fn0_i __fn0_index
    54 label __label16
    55 jump __label18 greaterThanEq __fn0_i 8
+   56 label __label22
    57 read __fn0_p bank1 __fn0_i
    58 jump __label19 greaterThan __fn0_p __fn0_amount
    59 push bank1 __fn0_amount
 
    75 label __label20
    76 label __label17
    77 op add __fn0_i __fn0_i 1
-    * jump __label16 always
+   78 jump __label22 lessThan __fn0_i 8
    79 label __label18
    80 set __fn0retval __fn0_result
    81 label __label13

Modifications by Unroll iteration loop at line 4:1 (-2 instructions):
     0 set __sp 16
     1 set index 0
-    * setaddr __tmp0 __label4
-    * set value 200
-    * jump __label2 always
-    * gotolabel __label4 marker0
-    * setaddr __tmp0 __label5
-    * set value 100
-    * jump __label2 always
-    * gotolabel __label5 marker0
-    * setaddr __tmp0 __label6
-    * set value 50
-    * jump __label2 always
-    * gotolabel __label6 marker0
-    * setaddr __tmp0 __label7
-    * set value 20
-    * jump __label2 always
-    * gotolabel __label7 marker0
-    * setaddr __tmp0 __label8
-    * set value 10
-    * jump __label2 always
-    * gotolabel __label8 marker0
-    * setaddr __tmp0 __label9
-    * set value 5
-    * jump __label2 always
-    * gotolabel __label9 marker0
-    * setaddr __tmp0 __label10
-    * set value 2
-    * jump __label2 always
-    * gotolabel __label10 marker0
-    * setaddr __tmp0 __label11
-    * set value 1
-    * label __label2
-    * write value bank1 index
-    * op add index index 1
-    * label __label1
-    * goto __tmp0 marker0
-    * gotolabel __label11 marker0
-    * label __label3
+    2 set value 200
+    3 label __label23
+    4 write value bank1 index
+    5 op add index index 1
+    6 label __label24
+    7 set value 100
+    8 label __label27
+    9 write value bank1 index
+   10 op add index index 1
+   11 label __label28
+   12 set value 50
+   13 label __label31
+   14 write value bank1 index
+   15 op add index index 1
+   16 label __label32
+   17 set value 20
+   18 label __label35
+   19 write value bank1 index
+   20 op add index index 1
+   21 label __label36
+   22 set value 10
+   23 label __label39
+   24 write value bank1 index
+   25 op add index index 1
+   26 label __label40
+   27 set value 5
+   28 label __label43
+   29 write value bank1 index
+   30 op add index index 1
+   31 label __label44
+   32 set value 2
+   33 label __label47
+   34 write value bank1 index
+   35 op add index index 1
+   36 label __label48
+   37 set value 1
+   38 label __label51
+   39 write value bank1 index
+   40 op add index index 1
+   41 label __label52
+   42 label __label3
    43 set __fn0_amount 20
    44 set __fn0_index 1
    45 callrec bank1 __label0 __label12 __fn0retval

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set index 0
     2 set value 200
     3 label __label23
-    * write value bank1 index
-    * op add index index 1
+    4 write 200 bank1 0
+    5 op add index 0 1
     6 label __label24
     7 set value 100
     8 label __label27
-    * write value bank1 index
-    * op add index index 1
+    9 write 100 bank1 1
+   10 op add index 1 1
    11 label __label28
    12 set value 50
    13 label __label31
-    * write value bank1 index
-    * op add index index 1
+   14 write 50 bank1 2
+   15 op add index 2 1
    16 label __label32
    17 set value 20
    18 label __label35
-    * write value bank1 index
-    * op add index index 1
+   19 write 20 bank1 3
+   20 op add index 3 1
    21 label __label36
    22 set value 10
    23 label __label39
-    * write value bank1 index
-    * op add index index 1
+   24 write 10 bank1 4
+   25 op add index 4 1
    26 label __label40
    27 set value 5
    28 label __label43
-    * write value bank1 index
-    * op add index index 1
+   29 write 5 bank1 5
+   30 op add index 5 1
    31 label __label44
    32 set value 2
    33 label __label47
-    * write value bank1 index
-    * op add index index 1
+   34 write 2 bank1 6
+   35 op add index 6 1
    36 label __label48
    37 set value 1
    38 label __label51
-    * write value bank1 index
-    * op add index index 1
+   39 write 1 bank1 7
+   40 op add index 7 1
    41 label __label52
    42 label __label3
    43 set __fn0_amount 20
 
    56 set __fn0_result 0
    57 set __fn0_i __fn0_index
    58 label __label16
-    * jump __label18 greaterThanEq __fn0_i 8
+   59 jump __label18 greaterThanEq __fn0_index 8
    60 label __label22
    61 read __fn0_p bank1 __fn0_i
    62 jump __label19 greaterThan __fn0_p __fn0_amount

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
     0 set __sp 16
-    * set index 0
-    * set value 200
     1 label __label23
     2 write 200 bank1 0
-    * op add index 0 1
     3 label __label24
-    * set value 100
     4 label __label27
     5 write 100 bank1 1
-    * op add index 1 1
     6 label __label28
-    * set value 50
     7 label __label31
     8 write 50 bank1 2
-    * op add index 2 1
     9 label __label32
-    * set value 20
    10 label __label35
    11 write 20 bank1 3
-    * op add index 3 1
    12 label __label36
-    * set value 10
    13 label __label39
    14 write 10 bank1 4
-    * op add index 4 1
    15 label __label40
-    * set value 5
    16 label __label43
    17 write 5 bank1 5
-    * op add index 5 1
    18 label __label44
-    * set value 2
    19 label __label47
    20 write 2 bank1 6
-    * op add index 6 1
    21 label __label48
-    * set value 1
    22 label __label51
    23 write 1 bank1 7
-    * op add index 7 1
    24 label __label52
    25 label __label3
    26 set __fn0_amount 20

Modifications by Optimize return at line 14:9 (+2 instructions):
 
    33 label __label0
    34 jump __label14 notEqual __fn0_amount 0
    35 set __fn0retval 1
-    * jump __label13 always
+   36 return bank1
    37 label __label14
    38 label __label15
    39 set __fn0_result 0

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    67 set __fn0retval __fn0_result
    68 label __label13
    69 return bank1
-    * end

Final code before resolving virtual instructions:

set __sp 16
write 200 bank1 0
write 100 bank1 1
write 50 bank1 2
write 20 bank1 3
write 10 bank1 4
write 5 bank1 5
write 2 bank1 6
write 1 bank1 7
set __fn0_amount 20
set __fn0_index 1
callrec bank1 __label0 __label12 __fn0retval
label __label12
assertequals 41 __fn0retval "Project Euler 31"
stop
end
label __label0
jump __label14 notEqual __fn0_amount 0
set __fn0retval 1
return bank1
label __label14
set __fn0_result 0
set __fn0_i __fn0_index
jump __label18 greaterThanEq __fn0_index 8
label __label22
read __fn0_p bank1 __fn0_i
jump __label19 greaterThan __fn0_p __fn0_amount
push bank1 __fn0_amount
push bank1 __fn0_index
push bank1 __fn0_result
push bank1 __fn0_i
push bank1 __fn0_p
op sub __fn0_amount __fn0_amount __fn0_p
set __fn0_index __fn0_i
callrec bank1 __label0 __label21 __fn0retval
label __label21
pop bank1 __fn0_p
pop bank1 __fn0_i
pop bank1 __fn0_result
pop bank1 __fn0_index
pop bank1 __fn0_amount
op add __fn0_result __fn0_result __fn0retval
label __label19
op add __fn0_i __fn0_i 1
jump __label22 lessThan __fn0_i 8
label __label18
set __fn0retval __fn0_result
return bank1
