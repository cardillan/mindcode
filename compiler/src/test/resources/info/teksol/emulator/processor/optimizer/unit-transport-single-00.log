   581 instructions before optimizations.
    39 instructions eliminated by Temp Variables Elimination.
    84 instructions eliminated by Dead Code Elimination (6 iterations).
     5 instructions eliminated by Jump Normalization (4 iterations).
    42 instructions eliminated by Jump Optimization (4 iterations).
    29 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
     3 instructions eliminated by Data Flow Optimization (4 passes, 17 iterations).
    18 instructions added by Loop Optimization (3 iterations).
     9 loops improved by Loop Optimization.
     5 instructions eliminated by Jump Straightening (4 iterations).
     6 instructions updated by JumpThreading.
     3 instructions eliminated by Unreachable Code Elimination.
     8 instructions eliminated by Print Merging.
   379 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 614):
  * Loop Optimization: replicate condition at line 45            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 317           cost     1, benefit       12.5, efficiency       12.5

Pass 1: speed optimization selection (cost limit 613):
    Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5
  * Loop Optimization: replicate condition at line 317           cost     1, benefit       12.5, efficiency       12.5 (+1 instructions)

Pass 1: speed optimization selection (cost limit 612):
  * Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5 (+2 instructions)
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5

Pass 1: speed optimization selection (cost limit 610):
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
  * Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5 (+1 instructions)

Pass 1: speed optimization selection (cost limit 609):
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
  * Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3 (+3 instructions)

Pass 1: speed optimization selection (cost limit 606):
  * Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1 (+4 instructions)
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3

Pass 1: speed optimization selection (cost limit 602):
  * Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3 (+5 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-52 instructions):
 
    33 set __tmp10 @unit
    34 set __fn0_first_unit __tmp10
    35 jump __label10 always
-    * set __tmp9 null
    36 jump __label12 always
    37 label __label11
-    * set __tmp9 null
    38 label __label12
    39 print "[salmon]No unit of type "
    40 print UNIT
 
    47 sensor __tmp11 @unit @controller
    48 op equal __tmp12 __tmp11 @this
    49 jump __label16 equal __tmp12 false
-    * set __tmp7 null
    50 jump __label7 always
-    * set __tmp13 null
    51 jump __label17 always
    52 label __label16
-    * set __tmp13 null
    53 label __label17
    54 ubind UNIT
    55 print "[gold]Looking for old unit..."
 
    70 print "[salmon]No unit of type "
    71 print UNIT
    72 print " found. 2"
-    * set __tmp20 null
    73 jump __label24 always
    74 label __label23
    75 sensor __tmp21 @unit @controlled
 
    85 jump __label19 always
    86 set __tmp23 null
    87 label __label26
-    * set __tmp20 __tmp23
    88 label __label24
    89 printflush message1
    90 label __label21
 
    92 label __label22
    93 set __tmp18 null
    94 label __label19
-    * set __tmp7 __tmp18
    95 label __label7
    96 label __label4
    97 jump __label3 always
 
   120 jump __label33 equal __tmp32 false
   121 set DROP_TARGET CONTAINER
   122 set CONTAINER block
-    * set __tmp33 CONTAINER
   123 jump __label34 always
   124 label __label33
-    * set __tmp33 null
   125 label __label34
   126 label __label31
   127 jump __label30 always
 
   130 jump __label35 equal __tmp34 false
   131 print "[salmon]No destination."
   132 print "\n"
-    * set __tmp35 "[salmon]No destination."
   133 jump __label36 always
   134 label __label35
   135 op notEqual __tmp36 DROP_TARGET null
 
   150 jump __label29 always
   151 set __tmp40 null
   152 label __label38
-    * set __tmp35 __tmp40
   153 label __label36
   154 printflush message1
   155 label __label28
 
   164 printflush message1
   165 ulocate building core false @copper CORE_X CORE_Y __tmp44 __tmp43
   166 set CORE __tmp43
-    * set __tmp42 CORE
   167 jump __label40 always
   168 label __label39
   169 print "[gold]Locating vault #"
 
   220 label __label44
   221 set __tmp52 null
   222 label __label45
-    * set __tmp42 __tmp52
   223 label __label40
   224 op equal __tmp65 CORE null
   225 jump __label51 equal __tmp65 false
   226 end
-    * set __tmp66 null
   227 jump __label52 always
   228 label __label51
-    * set __tmp66 null
   229 label __label52
   230 set SORTER sorter1
   231 sensor __tmp67 SORTER @type
 
   241 jump __label56 equal __tmp71 false
   242 print "Block found: "
   243 print SORTER
-    * set __tmp72 SORTER
   244 jump __label57 always
   245 label __label56
-    * set __tmp72 null
   246 label __label57
   247 printflush message1
   248 set SORTER sorter1
 
   277 set __tmp84 "[] from vault #"
   278 label __label61
   279 set DIRECTION __tmp84
-    * set __tmp75 DIRECTION
   280 jump __label59 always
   281 label __label58
   282 op greaterThan __tmp85 LINK_ID 0
 
   307 set __tmp97 "[] to vault #"
   308 label __label63
   309 set DIRECTION __tmp97
-    * set __tmp75 DIRECTION
   310 label __label59
   311 op equal __tmp98 LINK_ID 0
   312 jump __label64 equal __tmp98 false
 
   329 set DROP_TARGET CORE
   330 set DROP_X CORE_X
   331 set DROP_Y CORE_Y
-    * set __tmp105 DROP_Y
   332 jump __label67 always
   333 label __label66
   334 sensor __tmp106 DROP_TARGET @x
   335 set DROP_X __tmp106
   336 sensor __tmp107 DROP_TARGET @y
   337 set DROP_Y __tmp107
-    * set __tmp105 DROP_Y
   338 label __label67
   339 set LAST_ITEM @mono
   340 set iter 0
 
   360 print "[salmon]No unit of type "
   361 print UNIT
   362 print " found. 2"
-    * set __tmp117 null
   363 jump __label79 always
   364 label __label78
   365 sensor __tmp118 @unit @controlled
 
   371 set __tmp120 null
   372 jump __label81 always
   373 label __label80
-    * set __tmp115 null
   374 jump __label74 always
   375 set __tmp120 null
   376 label __label81
-    * set __tmp117 __tmp120
   377 label __label79
   378 printflush message1
   379 label __label76
   380 jump __label75 always
   381 label __label77
-    * set __tmp115 null
   382 label __label74
   383 ucontrol flag 1
   384 set state 1
-    * set __tmp114 state
   385 jump __label72 always
   386 label __label71
-    * set __tmp114 null
   387 label __label72
   388 sensor __tmp121 SORTER @config
   389 set ITEM __tmp121
 
   401 label __label86
   402 set LAST_ITEM ITEM
   403 set state 1
-    * set __tmp123 state
   404 jump __label83 always
   405 label __label82
-    * set __tmp123 null
   406 label __label83
   407 set show_state 0
   408 op equal __tmp126 state 1
 
   435 label __label92
   436 set __tmp130 __tmp133
   437 label __label90
-    * set __tmp127 __tmp130
   438 jump __label88 always
   439 label __label87
-    * set __tmp127 null
   440 label __label88
   441 op equal __tmp136 state 2
   442 jump __label95 equal __tmp136 false
 
   465 set show_state 2
   466 set __tmp139 show_state
   467 label __label98
-    * set __tmp137 __tmp139
   468 jump __label96 always
   469 label __label95
-    * set __tmp137 null
   470 label __label96
   471 op equal __tmp146 state 3
   472 jump __label101 equal __tmp146 false
 
   496 set show_state 3
   497 set __tmp149 show_state
   498 label __label104
-    * set __tmp147 __tmp149
   499 jump __label102 always
   500 label __label101
-    * set __tmp147 null
   501 label __label102
   502 op greaterThan __tmp156 iter 3
   503 jump __label107 equal __tmp156 false
 
   516 print " (limit [orange]"
   517 print LOCAL_MARGIN
   518 print "[])"
-    * set __tmp160 null
   519 jump __label110 always
   520 label __label109
-    * set __tmp160 null
   521 label __label110
   522 jump __label111 equal SHOW_REMOTE_LEVEL false
   523 sensor __tmp162 CORE ITEM
 
   534 label __label113
   535 set __tmp164 null
   536 label __label114
-    * set __tmp161 __tmp164
   537 jump __label112 always
   538 label __label111
-    * set __tmp161 null
   539 label __label112
   540 sensor __tmp165 @unit @totalItems
   541 print MSG
 
   554 print "[]  arriving in [gold]"
   555 print __tmp174
   556 print " sec[]\n"
-    * set __tmp167 null
   557 jump __label116 always
   558 label __label115
   559 op equal __tmp175 show_state 3
 
   573 label __label117
   574 set __tmp176 null
   575 label __label118
-    * set __tmp167 __tmp176
   576 label __label116
   577 op floor __tmp184 loop_time
   578 print "[lightgray]Loop time: "
 
   584 op equal __tmp186 __tmp185 0
   585 jump __label119 equal __tmp186 false
   586 jump __label70 always
-    * set __tmp187 null
   587 jump __label120 always
   588 label __label119
-    * set __tmp187 null
   589 label __label120
   590 sensor __tmp188 SRC @dead
   591 op notEqual __tmp189 __tmp188 0
   592 jump __label121 equal __tmp189 false
   593 jump __label70 always
-    * set __tmp190 null
   594 jump __label122 always
   595 label __label121
-    * set __tmp190 null
   596 label __label122
   597 sensor __tmp191 DST @dead
   598 op notEqual __tmp192 __tmp191 0
   599 jump __label123 equal __tmp192 false
   600 jump __label70 always
-    * set __tmp193 null
   601 jump __label124 always
   602 label __label123
-    * set __tmp193 null
   603 label __label124
   604 sensor __tmp194 SORTER @dead
   605 op notEqual __tmp195 __tmp194 0
 
   610 label __label125
   611 set __tmp196 null
   612 label __label126
-    * set __tmp157 __tmp196
   613 jump __label108 always
   614 label __label107
   615 op add __tmp197 iter 1
   616 set iter __tmp197
-    * set __tmp157 iter
   617 label __label108
   618 op sub __tmp198 @time start
   619 set loop_time __tmp198
 
   657 label __label133
   658 jump __label132 always
   659 label __label134
-    * set __tmp209 null
   660 jump __label131 always
   661 label __label130
-    * set __tmp209 null
   662 label __label131
   663 end

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
    78 print "[salmon]Looking for a free "
    79 print UNIT
    80 print "..."
-    * set __tmp23 null
    81 jump __label26 always
    82 label __label25
-    * set __tmp18 null
    83 jump __label19 always
-    * set __tmp23 null
    84 label __label26
    85 label __label24
    86 printflush message1
    87 label __label21
    88 jump __label20 always
    89 label __label22
-    * set __tmp18 null
    90 label __label19
    91 label __label7
    92 label __label4
 
   140 print DROP_TARGET
   141 print "\n"
   142 print "[salmon]Item dump must be a container or a vault!"
-    * set __tmp40 null
   143 jump __label38 always
   144 label __label37
   145 jump __label29 always
-    * set __tmp40 null
   146 label __label38
   147 label __label36
   148 printflush message1
 
   209 label __label49
   210 set __tmp64 null
   211 label __label50
-    * set __tmp52 __tmp64
   212 jump __label45 always
   213 label __label44
-    * set __tmp52 null
   214 label __label45
   215 label __label40
   216 op equal __tmp65 CORE null
 
   360 print "[salmon]Looking for a free "
   361 print UNIT
   362 print "..."
-    * set __tmp120 null
   363 jump __label81 always
   364 label __label80
   365 jump __label74 always
-    * set __tmp120 null
   366 label __label81
   367 label __label79
   368 printflush message1
 
   401 op equal __tmp129 __tmp128 ITEM
   402 jump __label89 equal __tmp129 false
   403 set state 3
-    * set __tmp130 state
   404 jump __label90 always
   405 label __label89
   406 sensor __tmp131 @unit @totalItems
 
   422 label __label94
   423 set __tmp133 __tmp135
   424 label __label92
-    * set __tmp130 __tmp133
   425 label __label90
   426 jump __label88 always
   427 label __label87
 
   445 set MSG "\nLoading items: [green]"
   446 set __tmp145 MSG
   447 label __label100
-    * set __tmp139 __tmp145
   448 jump __label98 always
   449 label __label97
   450 ucontrol approach SRC_X SRC_Y 6
   451 set MSG "\nGoing to source: [green]"
   452 set show_state 2
-    * set __tmp139 show_state
   453 label __label98
   454 jump __label96 always
   455 label __label95
 
   474 set MSG "\nDropping items: [green]"
   475 set __tmp155 MSG
   476 label __label106
-    * set __tmp149 __tmp155
   477 jump __label104 always
   478 label __label103
   479 ucontrol approach DST_X DST_Y 6
   480 set MSG "\nGoing to destination: [green]"
   481 set show_state 3
-    * set __tmp149 show_state
   482 label __label104
   483 jump __label102 always
   484 label __label101
 
   513 print " (limit [orange]"
   514 print REMOTE_MARGIN
   515 print "[])"
-    * set __tmp164 null
   516 jump __label114 always
   517 label __label113
-    * set __tmp164 null
   518 label __label114
   519 jump __label112 always
   520 label __label111
 
   550 print "[]  arriving in [gold]"
   551 print __tmp183
   552 print " sec[]\n"
-    * set __tmp176 null
   553 jump __label118 always
   554 label __label117
-    * set __tmp176 null
   555 label __label118
   556 label __label116
   557 op floor __tmp184 loop_time
 
   585 op notEqual __tmp195 __tmp194 0
   586 jump __label125 equal __tmp195 false
   587 jump __label70 always
-    * set __tmp196 null
   588 jump __label126 always
   589 label __label125
-    * set __tmp196 null
   590 label __label126
   591 jump __label108 always
   592 label __label107

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
   204 op notEqual __tmp63 b_type @vault
   205 jump __label49 equal __tmp63 false
   206 set CORE null
-    * set __tmp64 CORE
   207 jump __label50 always
   208 label __label49
-    * set __tmp64 null
   209 label __label50
   210 jump __label45 always
   211 label __label44
 
   405 op equal __tmp132 __tmp131 0
   406 jump __label91 equal __tmp132 false
   407 set state 2
-    * set __tmp133 state
   408 jump __label92 always
   409 label __label91
   410 set MSG "\nUnloading previous items: [green]"
 
   417 label __label93
   418 set __tmp135 null
   419 label __label94
-    * set __tmp133 __tmp135
   420 label __label92
   421 label __label90
   422 jump __label88 always
 
   435 op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
   436 jump __label99 equal __tmp144 false
   437 set state 3
-    * set __tmp145 state
   438 jump __label100 always
   439 label __label99
   440 set MSG "\nLoading items: [green]"
-    * set __tmp145 MSG
   441 label __label100
   442 jump __label98 always
   443 label __label97
 
   462 jump __label105 equal __tmp154 false
   463 set state 2
   464 ucontrol approach SRC_X SRC_Y 6
-    * set __tmp155 null
   465 jump __label106 always
   466 label __label105
   467 set MSG "\nDropping items: [green]"
-    * set __tmp155 MSG
   468 label __label106
   469 jump __label104 always
   470 label __label103

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   412 ucontrol within DROP_X DROP_Y 8 __tmp134
   413 jump __label93 equal __tmp134 false
   414 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * set __tmp135 null
   415 jump __label94 always
   416 label __label93
-    * set __tmp135 null
   417 label __label94
   418 label __label92
   419 label __label90

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-39 instructions):
 
     1 set LINK_ID 0
     2 set LOCAL_LIMIT 100
     3 set REMOTE_LIMIT 100
-    * op max __tmp0 LOCAL_LIMIT 20
-    * set EFF_LOCAL_LIMIT __tmp0
-    * op max __tmp1 REMOTE_LIMIT 20
-    * set EFF_REMOTE_LIMIT __tmp1
+    4 op max EFF_LOCAL_LIMIT LOCAL_LIMIT 20
+    5 op max EFF_REMOTE_LIMIT REMOTE_LIMIT 20
     6 set MSG null
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
 
    28 ubind UNIT
    29 op notEqual __tmp8 @unit null
    30 jump __label11 equal __tmp8 false
-    * set __tmp10 @unit
-    * set __fn0_first_unit __tmp10
+   31 set __fn0_first_unit @unit
    32 jump __label10 always
    33 jump __label12 always
    34 label __label11
 
    89 label __label4
    90 jump __label3 always
    91 label __label5
-    * sensor __tmp24 @unit @itemCapacity
-    * set UNIT_CAPACITY __tmp24
+   92 sensor UNIT_CAPACITY @unit @itemCapacity
    93 sensor __tmp25 @unit @speed
-    * op div __tmp26 __tmp25 10
-    * set SPEED_SEC __tmp26
+   94 op div SPEED_SEC __tmp25 10
    95 ucontrol flag 1
    96 label __label27
    97 jump __label29 equal true false
    98 set CONTAINER null
    99 set DROP_TARGET null
-    * set __tmp27 @links
-    * set n __tmp27
+  100 set n @links
   101 label __label30
   102 op greaterThan __tmp28 n 0
   103 jump __label32 equal __tmp28 false
-    * op sub __tmp29 n 1
-    * set n __tmp29
-    * getlink __tmp30 n
-    * set block __tmp30
+  104 op sub n n 1
+  105 getlink block n
   106 sensor __tmp31 block @itemCapacity
   107 op greaterThan __tmp32 __tmp31 0
   108 jump __label33 equal __tmp32 false
 
   148 jump __label39 equal __tmp41 false
   149 print "[gold]Locating core..."
   150 printflush message1
-    * ulocate building core false @copper CORE_X CORE_Y __tmp44 __tmp43
-    * set CORE __tmp43
+  151 ulocate building core false @copper CORE_X CORE_Y 0 CORE
   152 jump __label40 always
   153 label __label39
   154 print "[gold]Locating vault #"
   155 print LINK_ID
   156 print "..."
   157 printflush message1
-    * op add __tmp45 99999900 LINK_ID
-    * set QUERY_FLAG __tmp45
+  158 op add QUERY_FLAG 99999900 LINK_ID
   159 set flag QUERY_FLAG
   160 ucontrol flag flag
   161 label __label41
 
   165 op land __tmp49 __tmp46 __tmp48
   166 jump __label43 equal __tmp49 false
   167 ucontrol stop
-    * sensor __tmp50 @unit @flag
-    * set flag __tmp50
+  168 sensor flag @unit @flag
   169 label __label42
   170 jump __label41 always
   171 label __label43
   172 op notEqual __tmp51 flag QUERY_FLAG
   173 jump __label44 equal __tmp51 false
-    * op idiv __tmp53 flag 100
-    * set position __tmp53
-    * op mod __tmp54 position @mapw
-    * set CORE_X __tmp54
-    * op idiv __tmp55 position @mapw
-    * set CORE_Y __tmp55
+  174 op idiv position flag 100
+  175 op mod CORE_X position @mapw
+  176 op idiv CORE_Y position @mapw
   177 label __label46
   178 ucontrol within CORE_X CORE_Y 8 __tmp56
   179 op equal __tmp57 __tmp56 false
 
   185 label __label47
   186 jump __label46 always
   187 label __label48
-    * ucontrol getBlock CORE_X CORE_Y b_type __tmp61 __tmp62
-    * set CORE __tmp61
+  188 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   189 op notEqual __tmp63 b_type @vault
   190 jump __label49 equal __tmp63 false
   191 set CORE null
 
   203 label __label51
   204 label __label52
   205 set SORTER sorter1
-    * sensor __tmp67 SORTER @type
-    * set sorter_type __tmp67
+  206 sensor sorter_type SORTER @type
   207 label __label53
   208 op notEqual __tmp68 sorter_type @sorter
   209 op notEqual __tmp69 sorter_type @inverted-sorter
 
   220 label __label57
   221 printflush message1
   222 set SORTER sorter1
-    * sensor __tmp73 SORTER @type
-    * set sorter_type __tmp73
+  223 sensor sorter_type SORTER @type
   224 label __label54
   225 jump __label53 always
   226 label __label55
 
   229 set SHOW_REMOTE_LEVEL true
   230 set SRC CORE
   231 set DST CONTAINER
-    * sensor __tmp76 SRC @itemCapacity
-    * set src_capacity __tmp76
-    * sensor __tmp77 DST @itemCapacity
-    * set dst_capacity __tmp77
+  232 sensor src_capacity SRC @itemCapacity
+  233 sensor dst_capacity DST @itemCapacity
   234 op sub __tmp78 100 EFF_REMOTE_LIMIT
   235 op mul __tmp79 src_capacity __tmp78
-    * op idiv __tmp80 __tmp79 100
-    * set LOAD_LEVEL __tmp80
+  236 op idiv LOAD_LEVEL __tmp79 100
   237 op mul __tmp81 dst_capacity EFF_LOCAL_LIMIT
-    * op idiv __tmp82 __tmp81 100
-    * set DROP_LEVEL __tmp82
+  238 op idiv DROP_LEVEL __tmp81 100
   239 set LOCAL_MARGIN DROP_LEVEL
   240 set REMOTE_MARGIN LOAD_LEVEL
   241 op equal __tmp83 LINK_ID 0
 
   248 set DIRECTION __tmp84
   249 jump __label59 always
   250 label __label58
-    * op greaterThan __tmp85 LINK_ID 0
-    * set SHOW_REMOTE_LEVEL __tmp85
+  251 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
   252 set SRC CONTAINER
   253 set DST CORE
-    * sensor __tmp86 SRC @itemCapacity
-    * set src_capacity __tmp86
-    * sensor __tmp87 DST @itemCapacity
-    * set dst_capacity __tmp87
+  254 sensor src_capacity SRC @itemCapacity
+  255 sensor dst_capacity DST @itemCapacity
   256 op sub __tmp88 100 EFF_LOCAL_LIMIT
   257 op mul __tmp89 src_capacity __tmp88
-    * op idiv __tmp90 __tmp89 100
-    * set LOAD_LEVEL __tmp90
+  258 op idiv LOAD_LEVEL __tmp89 100
   259 op mul __tmp91 dst_capacity EFF_REMOTE_LIMIT
   260 op idiv __tmp92 __tmp91 100
   261 op equal __tmp93 LINK_ID 0
   262 op mul __tmp94 __tmp93 UNIT_CAPACITY
-    * op add __tmp95 __tmp92 __tmp94
-    * set DROP_LEVEL __tmp95
+  263 op add DROP_LEVEL __tmp92 __tmp94
   264 set LOCAL_MARGIN LOAD_LEVEL
   265 set REMOTE_MARGIN DROP_LEVEL
   266 op equal __tmp96 LINK_ID 0
 
   280 set __tmp99 LINK_ID
   281 label __label65
   282 set LINK_TXT __tmp99
-    * sensor __tmp100 SRC @x
-    * set SRC_X __tmp100
-    * sensor __tmp101 SRC @y
-    * set SRC_Y __tmp101
-    * sensor __tmp102 DST @x
-    * set DST_X __tmp102
-    * sensor __tmp103 DST @y
-    * set DST_Y __tmp103
+  283 sensor SRC_X SRC @x
+  284 sensor SRC_Y SRC @y
+  285 sensor DST_X DST @x
+  286 sensor DST_Y DST @y
   287 op equal __tmp104 DROP_TARGET null
   288 jump __label66 equal __tmp104 false
   289 set DROP_TARGET CORE
 
   291 set DROP_Y CORE_Y
   292 jump __label67 always
   293 label __label66
-    * sensor __tmp106 DROP_TARGET @x
-    * set DROP_X __tmp106
-    * sensor __tmp107 DROP_TARGET @y
-    * set DROP_Y __tmp107
+  294 sensor DROP_X DROP_TARGET @x
+  295 sensor DROP_Y DROP_TARGET @y
   296 label __label67
   297 set LAST_ITEM @mono
   298 set iter 0
 
   301 ucontrol stop
   302 label __label68
   303 jump __label70 equal true false
-    * set __tmp108 @time
-    * set start __tmp108
+  304 set start @time
   305 sensor __tmp109 @unit @dead
   306 op strictEqual __tmp110 __tmp109 0
   307 sensor __tmp111 @unit @controller
 
   340 jump __label72 always
   341 label __label71
   342 label __label72
-    * sensor __tmp121 SORTER @config
-    * set ITEM __tmp121
+  343 sensor ITEM SORTER @config
   344 op notEqual __tmp122 ITEM LAST_ITEM
   345 jump __label82 equal __tmp122 false
   346 label __label84
 
   348 jump __label86 equal __tmp124 false
   349 print "[salmon]No item type selected for transport."
   350 printflush message1
-    * sensor __tmp125 SORTER @config
-    * set ITEM __tmp125
+  351 sensor ITEM SORTER @config
   352 label __label85
   353 jump __label84 always
   354 label __label86
 
   391 jump __label97 equal __tmp138 false
   392 sensor __tmp140 SRC ITEM
   393 op sub __tmp141 __tmp140 LOAD_LEVEL
-    * op max __tmp142 __tmp141 0
-    * set max_load __tmp142
+  394 op max max_load __tmp141 0
   395 ucontrol itemTake SRC ITEM max_load
   396 sensor __tmp143 @unit @totalItems
   397 op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
 
   416 jump __label103 equal __tmp148 false
   417 sensor __tmp150 DST ITEM
   418 op sub __tmp151 DROP_LEVEL __tmp150
-    * op max __tmp152 __tmp151 0
-    * set max_drop __tmp152
+  419 op max max_drop __tmp151 0
   420 ucontrol itemDrop DST max_drop
   421 sensor __tmp153 @unit @totalItems
   422 op lessThanEq __tmp154 __tmp153 0
 
   543 label __label126
   544 jump __label108 always
   545 label __label107
-    * op add __tmp197 iter 1
-    * set iter __tmp197
+  546 op add iter iter 1
   547 label __label108
-    * op sub __tmp198 @time start
-    * set loop_time __tmp198
+  548 op sub loop_time @time start
   549 label __label69
   550 jump __label68 always
   551 label __label70

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-5 instructions):
 
    24 label __label6
    25 set __fn0_first_unit null
    26 label __label8
-    * jump __label10 equal true false
    27 ubind UNIT
    28 op notEqual __tmp8 @unit null
    29 jump __label11 equal __tmp8 false
 
    59 label __label15
    60 label __label18
    61 label __label20
-    * jump __label22 equal true false
    62 ubind UNIT
    63 op equal __tmp19 @unit null
    64 jump __label23 equal __tmp19 false
 
    92 op div SPEED_SEC __tmp25 10
    93 ucontrol flag 1
    94 label __label27
-    * jump __label29 equal true false
    95 set CONTAINER null
    96 set DROP_TARGET null
    97 set n @links
 
   297 set state 1
   298 ucontrol stop
   299 label __label68
-    * jump __label70 equal true false
   300 set start @time
   301 sensor __tmp109 @unit @dead
   302 op strictEqual __tmp110 __tmp109 0
 
   306 jump __label71 equal __tmp113 false
   307 label __label73
   308 label __label75
-    * jump __label77 equal true false
   309 ubind UNIT
   310 op equal __tmp116 @unit null
   311 jump __label78 equal __tmp116 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-42 instructions):
 
     6 set MSG null
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
-    * op equal __tmp3 __tmp2 false
-    * jump __label2 equal __tmp3 false
+    9 jump __label2 notEqual __tmp2 false
    10 print "Unit Transport - Single"
    11 print "\n"
    12 print "Activate switch to start."
 
    18 label __label3
    19 sensor __tmp4 @unit @dead
    20 op strictEqual __tmp5 __tmp4 0
-    * op equal __tmp6 __tmp5 false
-    * jump __label5 equal __tmp6 false
+   21 jump __label5 notEqual __tmp5 false
    22 label __label6
    23 set __fn0_first_unit null
    24 label __label8
    25 ubind UNIT
-    * op notEqual __tmp8 @unit null
-    * jump __label11 equal __tmp8 false
+   26 jump __label11 equal @unit null
    27 set __fn0_first_unit @unit
    28 jump __label10 always
    29 jump __label12 always
 
    38 label __label10
    39 label __label13
    40 sensor __tmp11 @unit @controller
-    * op equal __tmp12 __tmp11 @this
-    * jump __label16 equal __tmp12 false
+   41 jump __label16 notEqual __tmp11 @this
    42 jump __label7 always
    43 jump __label17 always
    44 label __label16
 
    56 label __label18
    57 label __label20
    58 ubind UNIT
-    * op equal __tmp19 @unit null
-    * jump __label23 equal __tmp19 false
+   59 jump __label23 notEqual @unit null
    60 print "[salmon]No unit of type "
    61 print UNIT
    62 print " found. 2"
    63 jump __label24 always
    64 label __label23
    65 sensor __tmp21 @unit @controlled
-    * op notEqual __tmp22 __tmp21 0
-    * jump __label25 equal __tmp22 false
+   66 jump __label25 equal __tmp21 0
    67 print "[salmon]Looking for a free "
    68 print UNIT
    69 print "..."
 
    90 set DROP_TARGET null
    91 set n @links
    92 label __label30
-    * op greaterThan __tmp28 n 0
-    * jump __label32 equal __tmp28 false
+   93 jump __label32 lessThanEq n 0
    94 op sub n n 1
    95 getlink block n
    96 sensor __tmp31 block @itemCapacity
-    * op greaterThan __tmp32 __tmp31 0
-    * jump __label33 equal __tmp32 false
+   97 jump __label33 lessThanEq __tmp31 0
    98 set DROP_TARGET CONTAINER
    99 set CONTAINER block
   100 jump __label34 always
 
   103 label __label31
   104 jump __label30 always
   105 label __label32
-    * op equal __tmp34 CONTAINER null
-    * jump __label35 equal __tmp34 false
+  106 jump __label35 notEqual CONTAINER null
   107 print "[salmon]No destination."
   108 print "\n"
   109 jump __label36 always
 
   132 set CORE_Y null
   133 set CORE_X CORE_Y
   134 set CORE CORE_X
-    * op equal __tmp41 LINK_ID 0
-    * jump __label39 equal __tmp41 false
+  135 jump __label39 notEqual LINK_ID 0
   136 print "[gold]Locating core..."
   137 printflush message1
   138 ulocate building core false @copper CORE_X CORE_Y 0 CORE
 
   156 label __label42
   157 jump __label41 always
   158 label __label43
-    * op notEqual __tmp51 flag QUERY_FLAG
-    * jump __label44 equal __tmp51 false
+  159 jump __label44 equal flag QUERY_FLAG
   160 op idiv position flag 100
   161 op mod CORE_X position @mapw
   162 op idiv CORE_Y position @mapw
 
   172 jump __label46 always
   173 label __label48
   174 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
-    * op notEqual __tmp63 b_type @vault
-    * jump __label49 equal __tmp63 false
+  175 jump __label49 equal b_type @vault
   176 set CORE null
   177 jump __label50 always
   178 label __label49
 
   181 label __label44
   182 label __label45
   183 label __label40
-    * op equal __tmp65 CORE null
-    * jump __label51 equal __tmp65 false
+  184 jump __label51 notEqual CORE null
   185 end
   186 jump __label52 always
   187 label __label51
 
   195 jump __label55 equal __tmp70 false
   196 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   197 print "\n"
-    * op notEqual __tmp71 SORTER null
-    * jump __label56 equal __tmp71 false
+  198 jump __label56 equal SORTER null
   199 print "Block found: "
   200 print SORTER
   201 jump __label57 always
 
   207 label __label54
   208 jump __label53 always
   209 label __label55
-    * op equal __tmp74 sorter_type @sorter
-    * jump __label58 equal __tmp74 false
+  210 jump __label58 notEqual sorter_type @sorter
   211 set SHOW_REMOTE_LEVEL true
   212 set SRC CORE
   213 set DST CONTAINER
 
   220 op idiv DROP_LEVEL __tmp81 100
   221 set LOCAL_MARGIN DROP_LEVEL
   222 set REMOTE_MARGIN LOAD_LEVEL
-    * op equal __tmp83 LINK_ID 0
-    * jump __label60 equal __tmp83 false
+  223 jump __label60 notEqual LINK_ID 0
   224 set __tmp84 "[] from core"
   225 jump __label61 always
   226 label __label60
 
   244 op add DROP_LEVEL __tmp92 __tmp94
   245 set LOCAL_MARGIN LOAD_LEVEL
   246 set REMOTE_MARGIN DROP_LEVEL
-    * op equal __tmp96 LINK_ID 0
-    * jump __label62 equal __tmp96 false
+  247 jump __label62 notEqual LINK_ID 0
   248 set __tmp97 "[] to core"
   249 jump __label63 always
   250 label __label62
 
   252 label __label63
   253 set DIRECTION __tmp97
   254 label __label59
-    * op equal __tmp98 LINK_ID 0
-    * jump __label64 equal __tmp98 false
+  255 jump __label64 notEqual LINK_ID 0
   256 set __tmp99 ""
   257 jump __label65 always
   258 label __label64
 
   263 sensor SRC_Y SRC @y
   264 sensor DST_X DST @x
   265 sensor DST_Y DST @y
-    * op equal __tmp104 DROP_TARGET null
-    * jump __label66 equal __tmp104 false
+  266 jump __label66 notEqual DROP_TARGET null
   267 set DROP_TARGET CORE
   268 set DROP_X CORE_X
   269 set DROP_Y CORE_Y
 
   283 op strictEqual __tmp110 __tmp109 0
   284 sensor __tmp111 @unit @controller
   285 op notEqual __tmp112 __tmp111 @this
-    * op lessThanEq __tmp113 __tmp110 __tmp112
-    * jump __label71 equal __tmp113 false
+  286 jump __label71 greaterThan __tmp110 __tmp112
   287 label __label73
   288 label __label75
   289 ubind UNIT
-    * op equal __tmp116 @unit null
-    * jump __label78 equal __tmp116 false
+  290 jump __label78 notEqual @unit null
   291 print "[salmon]No unit of type "
   292 print UNIT
   293 print " found. 2"
   294 jump __label79 always
   295 label __label78
   296 sensor __tmp118 @unit @controlled
-    * op notEqual __tmp119 __tmp118 0
-    * jump __label80 equal __tmp119 false
+  297 jump __label80 equal __tmp118 0
   298 print "[salmon]Looking for a free "
   299 print UNIT
   300 print "..."
 
   314 label __label71
   315 label __label72
   316 sensor ITEM SORTER @config
-    * op notEqual __tmp122 ITEM LAST_ITEM
-    * jump __label82 equal __tmp122 false
+  317 jump __label82 equal ITEM LAST_ITEM
   318 label __label84
-    * op equal __tmp124 ITEM null
-    * jump __label86 equal __tmp124 false
+  319 jump __label86 notEqual ITEM null
   320 print "[salmon]No item type selected for transport."
   321 printflush message1
   322 sensor ITEM SORTER @config
 
   329 label __label82
   330 label __label83
   331 set show_state 0
-    * op equal __tmp126 state 1
-    * jump __label87 equal __tmp126 false
+  332 jump __label87 notEqual state 1
   333 sensor __tmp128 @unit @firstItem
-    * op equal __tmp129 __tmp128 ITEM
-    * jump __label89 equal __tmp129 false
+  334 jump __label89 notEqual __tmp128 ITEM
   335 set state 3
   336 jump __label90 always
   337 label __label89
   338 sensor __tmp131 @unit @totalItems
-    * op equal __tmp132 __tmp131 0
-    * jump __label91 equal __tmp132 false
+  339 jump __label91 notEqual __tmp131 0
   340 set state 2
   341 jump __label92 always
   342 label __label91
 
   353 jump __label88 always
   354 label __label87
   355 label __label88
-    * op equal __tmp136 state 2
-    * jump __label95 equal __tmp136 false
+  356 jump __label95 notEqual state 2
   357 ucontrol within SRC_X SRC_Y 8 __tmp138
   358 jump __label97 equal __tmp138 false
   359 sensor __tmp140 SRC ITEM
 
   361 op max max_load __tmp141 0
   362 ucontrol itemTake SRC ITEM max_load
   363 sensor __tmp143 @unit @totalItems
-    * op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
-    * jump __label99 equal __tmp144 false
+  364 jump __label99 lessThan __tmp143 UNIT_CAPACITY
   365 set state 3
   366 jump __label100 always
   367 label __label99
 
   376 jump __label96 always
   377 label __label95
   378 label __label96
-    * op equal __tmp146 state 3
-    * jump __label101 equal __tmp146 false
+  379 jump __label101 notEqual state 3
   380 ucontrol within DST_X DST_Y 8 __tmp148
   381 jump __label103 equal __tmp148 false
   382 sensor __tmp150 DST ITEM
 
   384 op max max_drop __tmp151 0
   385 ucontrol itemDrop DST max_drop
   386 sensor __tmp153 @unit @totalItems
-    * op lessThanEq __tmp154 __tmp153 0
-    * jump __label105 equal __tmp154 false
+  387 jump __label105 greaterThan __tmp153 0
   388 set state 2
   389 ucontrol approach SRC_X SRC_Y 6
   390 jump __label106 always
 
   400 jump __label102 always
   401 label __label101
   402 label __label102
-    * op greaterThan __tmp156 iter 3
-    * jump __label107 equal __tmp156 false
+  403 jump __label107 lessThanEq iter 3
   404 set iter 0
   405 print "Moving [green]"
   406 print ITEM
 
   411 print "Local items: [gold]"
   412 print __tmp158
   413 print "[]"
-    * op lessThan __tmp159 EFF_LOCAL_LIMIT 100
-    * jump __label109 equal __tmp159 false
+  414 jump __label109 greaterThanEq EFF_LOCAL_LIMIT 100
   415 print " (limit [orange]"
   416 print LOCAL_MARGIN
   417 print "[])"
 
   423 print "\nRemote items: [gold]"
   424 print __tmp162
   425 print "[]"
-    * op lessThan __tmp163 EFF_REMOTE_LIMIT 100
-    * jump __label113 equal __tmp163 false
+  426 jump __label113 greaterThanEq EFF_REMOTE_LIMIT 100
   427 print " (limit [orange]"
   428 print REMOTE_MARGIN
   429 print "[])"
 
   438 print __tmp165
   439 print "[]"
   440 print "\n"
-    * op equal __tmp166 show_state 2
-    * jump __label115 equal __tmp166 false
+  441 jump __label115 notEqual show_state 2
   442 sensor __tmp168 @unit @x
   443 op sub __tmp169 SRC_X __tmp168
   444 sensor __tmp170 @unit @y
 
   451 print " sec[]\n"
   452 jump __label116 always
   453 label __label115
-    * op equal __tmp175 show_state 3
-    * jump __label117 equal __tmp175 false
+  454 jump __label117 notEqual show_state 3
   455 sensor __tmp177 @unit @x
   456 op sub __tmp178 DST_X __tmp177
   457 sensor __tmp179 @unit @y
 
   473 print "\n"
   474 printflush message1
   475 sensor __tmp185 switch1 @enabled
-    * op equal __tmp186 __tmp185 0
-    * jump __label119 equal __tmp186 false
+  476 jump __label119 notEqual __tmp185 0
   477 jump __label70 always
   478 jump __label120 always
   479 label __label119
   480 label __label120
   481 sensor __tmp188 SRC @dead
-    * op notEqual __tmp189 __tmp188 0
-    * jump __label121 equal __tmp189 false
+  482 jump __label121 equal __tmp188 0
   483 jump __label70 always
   484 jump __label122 always
   485 label __label121
   486 label __label122
   487 sensor __tmp191 DST @dead
-    * op notEqual __tmp192 __tmp191 0
-    * jump __label123 equal __tmp192 false
+  488 jump __label123 equal __tmp191 0
   489 jump __label70 always
   490 jump __label124 always
   491 label __label123
   492 label __label124
   493 sensor __tmp194 SORTER @dead
-    * op notEqual __tmp195 __tmp194 0
-    * jump __label125 equal __tmp195 false
+  494 jump __label125 equal __tmp194 0
   495 jump __label70 always
   496 jump __label126 always
   497 label __label125
 
   507 label __label127
   508 sensor __tmp199 SORTER @dead
   509 op strictEqual __tmp200 __tmp199 0
-    * op equal __tmp201 __tmp200 false
-    * jump __label129 equal __tmp201 false
+  510 jump __label129 notEqual __tmp200 false
   511 print "[salmon]sorter1 is missing!"
   512 print "\n"
   513 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   529 control enabled switch1 false
   530 label __label132
   531 sensor __tmp210 switch1 @enabled
-    * op equal __tmp211 __tmp210 false
-    * jump __label134 equal __tmp211 false
+  532 jump __label134 notEqual __tmp210 false
   533 print "[salmon]Local or remote container became invalid."
   534 print "\n"
   535 print "[gold]Please fix and press button to reinitialize."

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-22 instructions):
 
    26 jump __label11 equal @unit null
    27 set __fn0_first_unit @unit
    28 jump __label10 always
-    * jump __label12 always
    29 label __label11
    30 label __label12
    31 print "[salmon]No unit of type "
 
    39 sensor __tmp11 @unit @controller
    40 jump __label16 notEqual __tmp11 @this
    41 jump __label7 always
-    * jump __label17 always
    42 label __label16
    43 label __label17
    44 ubind UNIT
 
    95 jump __label33 lessThanEq __tmp31 0
    96 set DROP_TARGET CONTAINER
    97 set CONTAINER block
-    * jump __label34 always
    98 label __label33
    99 label __label34
   100 label __label31
 
   171 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   172 jump __label49 equal b_type @vault
   173 set CORE null
-    * jump __label50 always
   174 label __label49
   175 label __label50
-    * jump __label45 always
   176 label __label44
   177 label __label45
   178 label __label40
   179 jump __label51 notEqual CORE null
   180 end
-    * jump __label52 always
   181 label __label51
   182 label __label52
   183 set SORTER sorter1
 
   192 jump __label56 equal SORTER null
   193 print "Block found: "
   194 print SORTER
-    * jump __label57 always
   195 label __label56
   196 label __label57
   197 printflush message1
 
   303 label __label74
   304 ucontrol flag 1
   305 set state 1
-    * jump __label72 always
   306 label __label71
   307 label __label72
   308 sensor ITEM SORTER @config
 
   317 label __label86
   318 set LAST_ITEM ITEM
   319 set state 1
-    * jump __label83 always
   320 label __label82
   321 label __label83
   322 set show_state 0
 
   336 ucontrol within DROP_X DROP_Y 8 __tmp134
   337 jump __label93 equal __tmp134 false
   338 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * jump __label94 always
   339 label __label93
   340 label __label94
   341 label __label92
   342 label __label90
-    * jump __label88 always
   343 label __label87
   344 label __label88
   345 jump __label95 notEqual state 2
 
   362 set MSG "\nGoing to source: [green]"
   363 set show_state 2
   364 label __label98
-    * jump __label96 always
   365 label __label95
   366 label __label96
   367 jump __label101 notEqual state 3
 
   385 set MSG "\nGoing to destination: [green]"
   386 set show_state 3
   387 label __label104
-    * jump __label102 always
   388 label __label101
   389 label __label102
   390 jump __label107 lessThanEq iter 3
 
   402 print " (limit [orange]"
   403 print LOCAL_MARGIN
   404 print "[])"
-    * jump __label110 always
   405 label __label109
   406 label __label110
   407 jump __label111 equal SHOW_REMOTE_LEVEL false
 
   413 print " (limit [orange]"
   414 print REMOTE_MARGIN
   415 print "[])"
-    * jump __label114 always
   416 label __label113
   417 label __label114
-    * jump __label112 always
   418 label __label111
   419 label __label112
   420 sensor __tmp165 @unit @totalItems
 
   446 print "[]  arriving in [gold]"
   447 print __tmp183
   448 print " sec[]\n"
-    * jump __label118 always
   449 label __label117
   450 label __label118
   451 label __label116
 
   458 sensor __tmp185 switch1 @enabled
   459 jump __label119 notEqual __tmp185 0
   460 jump __label70 always
-    * jump __label120 always
   461 label __label119
   462 label __label120
   463 sensor __tmp188 SRC @dead
   464 jump __label121 equal __tmp188 0
   465 jump __label70 always
-    * jump __label122 always
   466 label __label121
   467 label __label122
   468 sensor __tmp191 DST @dead
   469 jump __label123 equal __tmp191 0
   470 jump __label70 always
-    * jump __label124 always
   471 label __label123
   472 label __label124
   473 sensor __tmp194 SORTER @dead
   474 jump __label125 equal __tmp194 0
   475 jump __label70 always
-    * jump __label126 always
   476 label __label125
   477 label __label126
   478 jump __label108 always
 
   518 label __label133
   519 jump __label132 always
   520 label __label134
-    * jump __label131 always
   521 label __label130
   522 label __label131
   523 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   127 jump __label27 always
   128 label __label29
   129 set CORE_Y null
-    * set CORE_X CORE_Y
-    * set CORE CORE_X
+  130 set CORE_X null
+  131 set CORE CORE_Y
   132 jump __label39 notEqual LINK_ID 0
   133 print "[gold]Locating core..."
   134 printflush message1
 
   141 printflush message1
   142 op add QUERY_FLAG 99999900 LINK_ID
   143 set flag QUERY_FLAG
-    * ucontrol flag flag
+  144 ucontrol flag QUERY_FLAG
   145 label __label41
   146 op equal __tmp46 flag QUERY_FLAG
   147 sensor __tmp47 @unit @dead
 
   181 label __label51
   182 label __label52
   183 set SORTER sorter1
-    * sensor sorter_type SORTER @type
+  184 sensor sorter_type sorter1 @type
   185 label __label53
   186 op notEqual __tmp68 sorter_type @sorter
   187 op notEqual __tmp69 sorter_type @inverted-sorter
 
   196 label __label57
   197 printflush message1
   198 set SORTER sorter1
-    * sensor sorter_type SORTER @type
+  199 sensor sorter_type sorter1 @type
   200 label __label54
   201 jump __label53 always
   202 label __label55
 
   204 set SHOW_REMOTE_LEVEL true
   205 set SRC CORE
   206 set DST CONTAINER
-    * sensor src_capacity SRC @itemCapacity
-    * sensor dst_capacity DST @itemCapacity
+  207 sensor src_capacity CORE @itemCapacity
+  208 sensor dst_capacity CONTAINER @itemCapacity
   209 op sub __tmp78 100 EFF_REMOTE_LIMIT
   210 op mul __tmp79 src_capacity __tmp78
   211 op idiv LOAD_LEVEL __tmp79 100
 
   225 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
   226 set SRC CONTAINER
   227 set DST CORE
-    * sensor src_capacity SRC @itemCapacity
-    * sensor dst_capacity DST @itemCapacity
+  228 sensor src_capacity CONTAINER @itemCapacity
+  229 sensor dst_capacity CORE @itemCapacity
   230 op sub __tmp88 100 EFF_LOCAL_LIMIT
   231 op mul __tmp89 src_capacity __tmp88
   232 op idiv LOAD_LEVEL __tmp89 100
 
   392 print "Moving [green]"
   393 print ITEM
   394 print DIRECTION
-    * print LINK_TXT
+  395 print __tmp99
   396 print "\n"
   397 sensor __tmp158 CONTAINER ITEM
   398 print "Local items: [gold]"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   128 label __label29
   129 set CORE_Y null
   130 set CORE_X null
-    * set CORE CORE_Y
+  131 set CORE null
   132 jump __label39 notEqual LINK_ID 0
   133 print "[gold]Locating core..."
   134 printflush message1
 
   251 label __label64
   252 set __tmp99 LINK_ID
   253 label __label65
-    * set LINK_TXT __tmp99
   254 sensor SRC_X SRC @x
   255 sensor SRC_Y SRC @y
   256 sensor DST_X DST @x

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    89 set n @links
    90 label __label30
    91 jump __label32 lessThanEq n 0
+   92 label __label135
    93 op sub n n 1
    94 getlink block n
    95 sensor __tmp31 block @itemCapacity
 
    99 label __label33
   100 label __label34
   101 label __label31
-    * jump __label30 always
+  102 jump __label135 greaterThan n 0
   103 label __label32
   104 jump __label35 notEqual CONTAINER null
   105 print "[salmon]No destination."
 
   309 jump __label82 equal ITEM LAST_ITEM
   310 label __label84
   311 jump __label86 notEqual ITEM null
+  312 label __label136
   313 print "[salmon]No item type selected for transport."
   314 printflush message1
   315 sensor ITEM SORTER @config
   316 label __label85
-    * jump __label84 always
+  317 jump __label136 equal ITEM null
   318 label __label86
   319 set LAST_ITEM ITEM
   320 set state 1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   214 op idiv DROP_LEVEL __tmp81 100
   215 set LOCAL_MARGIN DROP_LEVEL
   216 set REMOTE_MARGIN LOAD_LEVEL
-    * jump __label60 notEqual LINK_ID 0
-    * set __tmp84 "[] from core"
+  217 set DIRECTION "[] from vault #"
+  218 jump __label61 notEqual LINK_ID 0
+  219 set DIRECTION "[] from core"
   220 jump __label61 always
-    * label __label60
-    * set __tmp84 "[] from vault #"
   221 label __label61
-    * set DIRECTION __tmp84
   222 jump __label59 always
   223 label __label58
   224 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
 
   236 op add DROP_LEVEL __tmp92 __tmp94
   237 set LOCAL_MARGIN LOAD_LEVEL
   238 set REMOTE_MARGIN DROP_LEVEL
-    * jump __label62 notEqual LINK_ID 0
-    * set __tmp97 "[] to core"
+  239 set DIRECTION "[] to vault #"
+  240 jump __label63 notEqual LINK_ID 0
+  241 set DIRECTION "[] to core"
   242 jump __label63 always
-    * label __label62
-    * set __tmp97 "[] to vault #"
   243 label __label63
-    * set DIRECTION __tmp97
   244 label __label59
-    * jump __label64 notEqual LINK_ID 0
+  245 set __tmp99 LINK_ID
+  246 jump __label65 notEqual LINK_ID 0
   247 set __tmp99 ""
   248 jump __label65 always
-    * label __label64
-    * set __tmp99 LINK_ID
   249 label __label65
   250 sensor SRC_X SRC @x
   251 sensor SRC_Y SRC @y

Modifications by Loop Optimization: replicate condition at line 45 (+1 instructions):
 
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
     9 jump __label2 notEqual __tmp2 false
+   10 label __label137
    11 print "Unit Transport - Single"
    12 print "\n"
    13 print "Activate switch to start."
    14 print "\n"
    15 printflush message1
    16 label __label1
-    * jump __label0 always
+   17 sensor __tmp2 switch1 @enabled
+   18 jump __label137 equal __tmp2 false
    19 label __label2
    20 label __label3
    21 sensor __tmp4 @unit @dead

Modifications by Loop Optimization: replicate condition at line 317 (+1 instructions):
 
   507 label __label132
   508 sensor __tmp210 switch1 @enabled
   509 jump __label134 notEqual __tmp210 false
+  510 label __label138
   511 print "[salmon]Local or remote container became invalid."
   512 print "\n"
   513 print "[gold]Please fix and press button to reinitialize."
 
   515 printflush message1
   516 printflush message2
   517 label __label133
-    * jump __label132 always
+  518 sensor __tmp210 switch1 @enabled
+  519 jump __label138 equal __tmp210 false
   520 label __label134
   521 label __label130
   522 label __label131

Modifications by Loop Optimization: replicate condition at line 53 (+2 instructions):
 
    21 sensor __tmp4 @unit @dead
    22 op strictEqual __tmp5 __tmp4 0
    23 jump __label5 notEqual __tmp5 false
+   24 label __label139
    25 label __label6
    26 set __fn0_first_unit null
    27 label __label8
 
    80 label __label19
    81 label __label7
    82 label __label4
-    * jump __label3 always
+   83 sensor __tmp4 @unit @dead
+   84 op strictEqual __tmp5 __tmp4 0
+   85 jump __label139 equal __tmp5 false
    86 label __label5
    87 sensor UNIT_CAPACITY @unit @itemCapacity
    88 sensor __tmp25 @unit @speed

Modifications by Loop Optimization: replicate condition at line 307 (+2 instructions):
 
   488 sensor __tmp199 SORTER @dead
   489 op strictEqual __tmp200 __tmp199 0
   490 jump __label129 notEqual __tmp200 false
+  491 label __label140
   492 print "[salmon]sorter1 is missing!"
   493 print "\n"
   494 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   497 printflush message2
   498 set SORTER sorter1
   499 label __label128
-    * jump __label127 always
+  500 sensor __tmp199 SORTER @dead
+  501 op strictEqual __tmp200 __tmp199 0
+  502 jump __label140 equal __tmp200 false
   503 label __label129
   504 sensor __tmp202 SRC @dead
   505 op strictEqual __tmp203 __tmp202 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   497 printflush message2
   498 set SORTER sorter1
   499 label __label128
-    * sensor __tmp199 SORTER @dead
+  500 sensor __tmp199 sorter1 @dead
   501 op strictEqual __tmp200 __tmp199 0
   502 jump __label140 equal __tmp200 false
   503 label __label129

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   495 print "\n"
   496 printflush message1
   497 printflush message2
-    * set SORTER sorter1
   498 label __label128
   499 sensor __tmp199 sorter1 @dead
   500 op strictEqual __tmp200 __tmp199 0

Modifications by Loop Optimization: replicate condition at line 132 (+3 instructions):
 
   193 op notEqual __tmp69 sorter_type @inverted-sorter
   194 op land __tmp70 __tmp68 __tmp69
   195 jump __label55 equal __tmp70 false
+  196 label __label141
   197 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   198 print "\n"
   199 jump __label56 equal SORTER null
 
   205 set SORTER sorter1
   206 sensor sorter_type sorter1 @type
   207 label __label54
-    * jump __label53 always
+  208 op notEqual __tmp68 sorter_type @sorter
+  209 op notEqual __tmp69 sorter_type @inverted-sorter
+  210 op land __tmp70 __tmp68 __tmp69
+  211 jump __label141 notEqual __tmp70 false
   212 label __label55
   213 jump __label58 notEqual sorter_type @sorter
   214 set SHOW_REMOTE_LEVEL true

Modifications by Loop Optimization: replicate condition at line 104 (+4 instructions):
 
   154 op strictEqual __tmp48 __tmp47 0
   155 op land __tmp49 __tmp46 __tmp48
   156 jump __label43 equal __tmp49 false
+  157 label __label142
   158 ucontrol stop
   159 sensor flag @unit @flag
   160 label __label42
-    * jump __label41 always
+  161 op equal __tmp46 flag QUERY_FLAG
+  162 sensor __tmp47 @unit @dead
+  163 op strictEqual __tmp48 __tmp47 0
+  164 op land __tmp49 __tmp46 __tmp48
+  165 jump __label142 notEqual __tmp49 false
   166 label __label43
   167 jump __label44 equal flag QUERY_FLAG
   168 op idiv position flag 100

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   149 set flag QUERY_FLAG
   150 ucontrol flag QUERY_FLAG
   151 label __label41
-    * op equal __tmp46 flag QUERY_FLAG
+  152 op equal __tmp46 QUERY_FLAG QUERY_FLAG
   153 sensor __tmp47 @unit @dead
   154 op strictEqual __tmp48 __tmp47 0
   155 op land __tmp49 __tmp46 __tmp48

Modifications by Loop Optimization: replicate condition at line 113 (+5 instructions):
 
   175 op equal __tmp59 __tmp58 0
   176 op land __tmp60 __tmp57 __tmp59
   177 jump __label48 equal __tmp60 false
+  178 label __label143
   179 ucontrol approach CORE_X CORE_Y 6
   180 label __label47
-    * jump __label46 always
+  181 ucontrol within CORE_X CORE_Y 8 __tmp56
+  182 op equal __tmp57 __tmp56 false
+  183 sensor __tmp58 @unit @dead
+  184 op equal __tmp59 __tmp58 0
+  185 op land __tmp60 __tmp57 __tmp59
+  186 jump __label143 notEqual __tmp60 false
   187 label __label48
   188 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   189 jump __label49 equal b_type @vault

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
   237 set DIRECTION "[] from vault #"
   238 jump __label61 notEqual LINK_ID 0
   239 set DIRECTION "[] from core"
-    * jump __label61 always
   240 label __label61
   241 jump __label59 always
   242 label __label58
 
   258 set DIRECTION "[] to vault #"
   259 jump __label63 notEqual LINK_ID 0
   260 set DIRECTION "[] to core"
-    * jump __label63 always
   261 label __label63
   262 label __label59
   263 set __tmp99 LINK_ID
   264 jump __label65 notEqual LINK_ID 0
   265 set __tmp99 ""
-    * jump __label65 always
   266 label __label65
   267 sensor SRC_X SRC @x
   268 sensor SRC_Y SRC @y

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   149 set flag QUERY_FLAG
   150 ucontrol flag QUERY_FLAG
   151 label __label41
-    * op equal __tmp46 QUERY_FLAG QUERY_FLAG
+  152 set __tmp46 true
   153 sensor __tmp47 @unit @dead
   154 op strictEqual __tmp48 __tmp47 0
   155 op land __tmp49 __tmp46 __tmp48

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   152 set __tmp46 true
   153 sensor __tmp47 @unit @dead
   154 op strictEqual __tmp48 __tmp47 0
-    * op land __tmp49 __tmp46 __tmp48
+  155 op land __tmp49 true __tmp48
   156 jump __label43 equal __tmp49 false
   157 label __label142
   158 ucontrol stop

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   149 set flag QUERY_FLAG
   150 ucontrol flag QUERY_FLAG
   151 label __label41
-    * set __tmp46 true
   152 sensor __tmp47 @unit @dead
   153 op strictEqual __tmp48 __tmp47 0
   154 op land __tmp49 true __tmp48

Modifications by Final phase, Jump Straightening, iteration 1 (-5 instructions):
 
    40 label __label10
    41 label __label13
    42 sensor __tmp11 @unit @controller
-    * jump __label16 notEqual __tmp11 @this
-    * jump __label7 always
+   43 jump __label7 equal __tmp11 @this
    44 label __label16
    45 label __label17
    46 ubind UNIT
 
   467 print "\n"
   468 printflush message1
   469 sensor __tmp185 switch1 @enabled
-    * jump __label119 notEqual __tmp185 0
-    * jump __label70 always
+  470 jump __label70 equal __tmp185 0
   471 label __label119
   472 label __label120
   473 sensor __tmp188 SRC @dead
-    * jump __label121 equal __tmp188 0
-    * jump __label70 always
+  474 jump __label70 notEqual __tmp188 0
   475 label __label121
   476 label __label122
   477 sensor __tmp191 DST @dead
-    * jump __label123 equal __tmp191 0
-    * jump __label70 always
+  478 jump __label70 notEqual __tmp191 0
   479 label __label123
   480 label __label124
   481 sensor __tmp194 SORTER @dead
-    * jump __label125 equal __tmp194 0
-    * jump __label70 always
+  482 jump __label70 notEqual __tmp194 0
   483 label __label125
   484 label __label126
   485 jump __label108 always

Modifications by Final phase, Jump Threading, iteration 1:
 
    63 jump __label24 always
    64 label __label23
    65 sensor __tmp21 @unit @controlled
-    * jump __label25 equal __tmp21 0
+   66 jump __label19 equal __tmp21 0
    67 print "[salmon]Looking for a free "
    68 print UNIT
    69 print "..."
 
   114 sensor __tmp37 DROP_TARGET @itemCapacity
   115 op lessThan __tmp38 __tmp37 300
   116 op land __tmp39 __tmp36 __tmp38
-    * jump __label37 equal __tmp39 false
+  117 jump __label29 equal __tmp39 false
   118 print "Destination: "
   119 print CONTAINER
   120 print "\n"
 
   233 set LOCAL_MARGIN DROP_LEVEL
   234 set REMOTE_MARGIN LOAD_LEVEL
   235 set DIRECTION "[] from vault #"
-    * jump __label61 notEqual LINK_ID 0
+  236 jump __label59 notEqual LINK_ID 0
   237 set DIRECTION "[] from core"
   238 label __label61
   239 jump __label59 always
 
   297 jump __label79 always
   298 label __label78
   299 sensor __tmp118 @unit @controlled
-    * jump __label80 equal __tmp118 0
+  300 jump __label74 equal __tmp118 0
   301 print "[salmon]Looking for a free "
   302 print UNIT
   303 print "..."
 
   363 sensor __tmp143 @unit @totalItems
   364 jump __label99 lessThan __tmp143 UNIT_CAPACITY
   365 set state 3
-    * jump __label100 always
+  366 jump __label98 always
   367 label __label99
   368 set MSG "\nLoading items: [green]"
   369 label __label100
 
   386 jump __label105 greaterThan __tmp153 0
   387 set state 2
   388 ucontrol approach SRC_X SRC_Y 6
-    * jump __label106 always
+  389 jump __label104 always
   390 label __label105
   391 set MSG "\nDropping items: [green]"
   392 label __label106

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-3 instructions):
 
    68 print UNIT
    69 print "..."
    70 jump __label26 always
-    * label __label25
-    * jump __label19 always
    71 label __label26
    72 label __label24
    73 printflush message1
    74 label __label21
    75 jump __label20 always
-    * label __label22
    76 label __label19
    77 label __label7
    78 label __label4
 
   120 print "\n"
   121 print "[salmon]Item dump must be a container or a vault!"
   122 jump __label38 always
-    * label __label37
-    * jump __label29 always
   123 label __label38
   124 label __label36
   125 printflush message1
 
   297 print UNIT
   298 print "..."
   299 jump __label81 always
-    * label __label80
-    * jump __label74 always
   300 label __label81
   301 label __label79
   302 printflush message1
   303 label __label76
   304 jump __label75 always
-    * label __label77
   305 label __label74
   306 ucontrol flag 1
   307 set state 1

Modifications by Final phase, Single Step Elimination, iteration 1 (-4 instructions):
 
    67 print "[salmon]Looking for a free "
    68 print UNIT
    69 print "..."
-    * jump __label26 always
    70 label __label26
    71 label __label24
    72 printflush message1
 
   118 print DROP_TARGET
   119 print "\n"
   120 print "[salmon]Item dump must be a container or a vault!"
-    * jump __label38 always
   121 label __label38
   122 label __label36
   123 printflush message1
 
   294 print "[salmon]Looking for a free "
   295 print UNIT
   296 print "..."
-    * jump __label81 always
   297 label __label81
   298 label __label79
   299 printflush message1
 
   520 label __label134
   521 label __label130
   522 label __label131
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-8 instructions):
 
     8 sensor __tmp2 switch1 @enabled
     9 jump __label2 notEqual __tmp2 false
    10 label __label137
-    * print "Unit Transport - Single"
-    * print "\n"
-    * print "Activate switch to start."
-    * print "\n"
+   11 print "Unit Transport - Single\n"
+   12 print "Activate switch to start.\n"
    13 printflush message1
    14 label __label1
    15 sensor __tmp2 switch1 @enabled
 
   100 jump __label135 greaterThan n 0
   101 label __label32
   102 jump __label35 notEqual CONTAINER null
-    * print "[salmon]No destination."
-    * print "\n"
+  103 print "[salmon]No destination.\n"
   104 jump __label36 always
   105 label __label35
   106 op notEqual __tmp36 DROP_TARGET null
 
   110 jump __label29 equal __tmp39 false
   111 print "Destination: "
   112 print CONTAINER
-    * print "\n"
-    * print "Item dump: "
+  113 print "\nItem dump: "
   114 print DROP_TARGET
   115 print "\n"
   116 print "[salmon]Item dump must be a container or a vault!"
 
   389 print ITEM
   390 print DIRECTION
   391 print __tmp99
-    * print "\n"
   392 sensor __tmp158 CONTAINER ITEM
-    * print "Local items: [gold]"
+  393 print "\nLocal items: [gold]"
   394 print __tmp158
   395 print "[]"
   396 jump __label109 greaterThanEq EFF_LOCAL_LIMIT 100
 
   415 sensor __tmp165 @unit @totalItems
   416 print MSG
   417 print __tmp165
-    * print "[]"
-    * print "\n"
+  418 print "[]\n"
   419 jump __label115 notEqual show_state 2
   420 sensor __tmp168 @unit @x
   421 op sub __tmp169 SRC_X __tmp168
 
   446 op floor __tmp184 loop_time
   447 print "[lightgray]Loop time: "
   448 print __tmp184
-    * print " ms[]"
-    * print "\n"
+  449 print " ms[]\n"
   450 printflush message1
   451 sensor __tmp185 switch1 @enabled
   452 jump __label70 equal __tmp185 0
 
   477 op strictEqual __tmp200 __tmp199 0
   478 jump __label129 notEqual __tmp200 false
   479 label __label140
-    * print "[salmon]sorter1 is missing!"
-    * print "\n"
+  480 print "[salmon]sorter1 is missing!\n"
   481 print "[gold]Please place and link sorter or inverted sorter to the processor."
   482 print "\n"
   483 printflush message1

Final code before resolving virtual instructions:

set UNIT @mega
set LINK_ID 0
set LOCAL_LIMIT 100
set REMOTE_LIMIT 100
op max EFF_LOCAL_LIMIT LOCAL_LIMIT 20
op max EFF_REMOTE_LIMIT REMOTE_LIMIT 20
set MSG null
sensor __tmp2 switch1 @enabled
jump __label2 notEqual __tmp2 false
label __label137
print "Unit Transport - Single\n"
print "Activate switch to start.\n"
printflush message1
sensor __tmp2 switch1 @enabled
jump __label137 equal __tmp2 false
label __label2
sensor __tmp4 @unit @dead
op strictEqual __tmp5 __tmp4 0
jump __label5 notEqual __tmp5 false
label __label139
set __fn0_first_unit null
label __label8
ubind UNIT
jump __label11 equal @unit null
set __fn0_first_unit @unit
jump __label10 always 0 0
label __label11
print "[salmon]No unit of type "
print UNIT
print " found. 1"
printflush message1
jump __label8 always 0 0
label __label10
label __label13
sensor __tmp11 @unit @controller
jump __label7 equal __tmp11 @this
ubind UNIT
print "[gold]Looking for old unit..."
printflush message1
op notEqual __tmp14 @unit __fn0_first_unit
sensor __tmp15 __fn0_first_unit @dead
op strictEqual __tmp16 __tmp15 0
op land __tmp17 __tmp14 __tmp16
jump __label13 notEqual __tmp17 false
label __label20
ubind UNIT
jump __label23 notEqual @unit null
print "[salmon]No unit of type "
print UNIT
print " found. 2"
jump __label24 always 0 0
label __label23
sensor __tmp21 @unit @controlled
jump __label19 equal __tmp21 0
print "[salmon]Looking for a free "
print UNIT
print "..."
label __label24
printflush message1
jump __label20 always 0 0
label __label19
label __label7
sensor __tmp4 @unit @dead
op strictEqual __tmp5 __tmp4 0
jump __label139 equal __tmp5 false
label __label5
sensor UNIT_CAPACITY @unit @itemCapacity
sensor __tmp25 @unit @speed
op div SPEED_SEC __tmp25 10
ucontrol flag 1 0 0 0 0
label __label27
set CONTAINER null
set DROP_TARGET null
set n @links
jump __label32 lessThanEq n 0
label __label135
op sub n n 1
getlink block n
sensor __tmp31 block @itemCapacity
jump __label33 lessThanEq __tmp31 0
set DROP_TARGET CONTAINER
set CONTAINER block
label __label33
jump __label135 greaterThan n 0
label __label32
jump __label35 notEqual CONTAINER null
print "[salmon]No destination.\n"
jump __label36 always 0 0
label __label35
op notEqual __tmp36 DROP_TARGET null
sensor __tmp37 DROP_TARGET @itemCapacity
op lessThan __tmp38 __tmp37 300
op land __tmp39 __tmp36 __tmp38
jump __label29 equal __tmp39 false
print "Destination: "
print CONTAINER
print "\nItem dump: "
print DROP_TARGET
print "\n"
print "[salmon]Item dump must be a container or a vault!"
label __label36
printflush message1
jump __label27 always 0 0
label __label29
set CORE_Y null
set CORE_X null
set CORE null
jump __label39 notEqual LINK_ID 0
print "[gold]Locating core..."
printflush message1
ulocate building core false @copper CORE_X CORE_Y 0 CORE
jump __label40 always 0 0
label __label39
print "[gold]Locating vault #"
print LINK_ID
print "..."
printflush message1
op add QUERY_FLAG 99999900 LINK_ID
set flag QUERY_FLAG
ucontrol flag QUERY_FLAG 0 0 0 0
sensor __tmp47 @unit @dead
op strictEqual __tmp48 __tmp47 0
op land __tmp49 true __tmp48
jump __label43 equal __tmp49 false
label __label142
ucontrol stop 0 0 0 0 0
sensor flag @unit @flag
op equal __tmp46 flag QUERY_FLAG
sensor __tmp47 @unit @dead
op strictEqual __tmp48 __tmp47 0
op land __tmp49 __tmp46 __tmp48
jump __label142 notEqual __tmp49 false
label __label43
jump __label44 equal flag QUERY_FLAG
op idiv position flag 100
op mod CORE_X position @mapw
op idiv CORE_Y position @mapw
ucontrol within CORE_X CORE_Y 8 __tmp56 0
op equal __tmp57 __tmp56 false
sensor __tmp58 @unit @dead
op equal __tmp59 __tmp58 0
op land __tmp60 __tmp57 __tmp59
jump __label48 equal __tmp60 false
label __label143
ucontrol approach CORE_X CORE_Y 6 0 0
ucontrol within CORE_X CORE_Y 8 __tmp56 0
op equal __tmp57 __tmp56 false
sensor __tmp58 @unit @dead
op equal __tmp59 __tmp58 0
op land __tmp60 __tmp57 __tmp59
jump __label143 notEqual __tmp60 false
label __label48
ucontrol getBlock CORE_X CORE_Y b_type CORE 0
jump __label49 equal b_type @vault
set CORE null
label __label49
label __label44
label __label40
jump __label51 notEqual CORE null
end
label __label51
set SORTER sorter1
sensor sorter_type sorter1 @type
op notEqual __tmp68 sorter_type @sorter
op notEqual __tmp69 sorter_type @inverted-sorter
op land __tmp70 __tmp68 __tmp69
jump __label55 equal __tmp70 false
label __label141
print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
print "\n"
jump __label56 equal SORTER null
print "Block found: "
print SORTER
label __label56
printflush message1
set SORTER sorter1
sensor sorter_type sorter1 @type
op notEqual __tmp68 sorter_type @sorter
op notEqual __tmp69 sorter_type @inverted-sorter
op land __tmp70 __tmp68 __tmp69
jump __label141 notEqual __tmp70 false
label __label55
jump __label58 notEqual sorter_type @sorter
set SHOW_REMOTE_LEVEL true
set SRC CORE
set DST CONTAINER
sensor src_capacity CORE @itemCapacity
sensor dst_capacity CONTAINER @itemCapacity
op sub __tmp78 100 EFF_REMOTE_LIMIT
op mul __tmp79 src_capacity __tmp78
op idiv LOAD_LEVEL __tmp79 100
op mul __tmp81 dst_capacity EFF_LOCAL_LIMIT
op idiv DROP_LEVEL __tmp81 100
set LOCAL_MARGIN DROP_LEVEL
set REMOTE_MARGIN LOAD_LEVEL
set DIRECTION "[] from vault #"
jump __label59 notEqual LINK_ID 0
set DIRECTION "[] from core"
jump __label59 always 0 0
label __label58
op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
set SRC CONTAINER
set DST CORE
sensor src_capacity CONTAINER @itemCapacity
sensor dst_capacity CORE @itemCapacity
op sub __tmp88 100 EFF_LOCAL_LIMIT
op mul __tmp89 src_capacity __tmp88
op idiv LOAD_LEVEL __tmp89 100
op mul __tmp91 dst_capacity EFF_REMOTE_LIMIT
op idiv __tmp92 __tmp91 100
op equal __tmp93 LINK_ID 0
op mul __tmp94 __tmp93 UNIT_CAPACITY
op add DROP_LEVEL __tmp92 __tmp94
set LOCAL_MARGIN LOAD_LEVEL
set REMOTE_MARGIN DROP_LEVEL
set DIRECTION "[] to vault #"
jump __label63 notEqual LINK_ID 0
set DIRECTION "[] to core"
label __label63
label __label59
set __tmp99 LINK_ID
jump __label65 notEqual LINK_ID 0
set __tmp99 ""
label __label65
sensor SRC_X SRC @x
sensor SRC_Y SRC @y
sensor DST_X DST @x
sensor DST_Y DST @y
jump __label66 notEqual DROP_TARGET null
set DROP_TARGET CORE
set DROP_X CORE_X
set DROP_Y CORE_Y
jump __label67 always 0 0
label __label66
sensor DROP_X DROP_TARGET @x
sensor DROP_Y DROP_TARGET @y
label __label67
set LAST_ITEM @mono
set iter 0
set loop_time 0
set state 1
ucontrol stop 0 0 0 0 0
label __label68
set start @time
sensor __tmp109 @unit @dead
op strictEqual __tmp110 __tmp109 0
sensor __tmp111 @unit @controller
op notEqual __tmp112 __tmp111 @this
jump __label71 greaterThan __tmp110 __tmp112
label __label75
ubind UNIT
jump __label78 notEqual @unit null
print "[salmon]No unit of type "
print UNIT
print " found. 2"
jump __label79 always 0 0
label __label78
sensor __tmp118 @unit @controlled
jump __label74 equal __tmp118 0
print "[salmon]Looking for a free "
print UNIT
print "..."
label __label79
printflush message1
jump __label75 always 0 0
label __label74
ucontrol flag 1 0 0 0 0
set state 1
label __label71
sensor ITEM SORTER @config
jump __label82 equal ITEM LAST_ITEM
jump __label86 notEqual ITEM null
label __label136
print "[salmon]No item type selected for transport."
printflush message1
sensor ITEM SORTER @config
jump __label136 equal ITEM null
label __label86
set LAST_ITEM ITEM
set state 1
label __label82
set show_state 0
jump __label87 notEqual state 1
sensor __tmp128 @unit @firstItem
jump __label89 notEqual __tmp128 ITEM
set state 3
jump __label90 always 0 0
label __label89
sensor __tmp131 @unit @totalItems
jump __label91 notEqual __tmp131 0
set state 2
jump __label92 always 0 0
label __label91
set MSG "\nUnloading previous items: [green]"
ucontrol approach DROP_X DROP_Y 6 0 0
ucontrol within DROP_X DROP_Y 8 __tmp134 0
jump __label93 equal __tmp134 false
ucontrol itemDrop DROP_TARGET UNIT_CAPACITY 0 0 0
label __label93
label __label92
label __label90
label __label87
jump __label95 notEqual state 2
ucontrol within SRC_X SRC_Y 8 __tmp138 0
jump __label97 equal __tmp138 false
sensor __tmp140 SRC ITEM
op sub __tmp141 __tmp140 LOAD_LEVEL
op max max_load __tmp141 0
ucontrol itemTake SRC ITEM max_load 0 0
sensor __tmp143 @unit @totalItems
jump __label99 lessThan __tmp143 UNIT_CAPACITY
set state 3
jump __label98 always 0 0
label __label99
set MSG "\nLoading items: [green]"
jump __label98 always 0 0
label __label97
ucontrol approach SRC_X SRC_Y 6 0 0
set MSG "\nGoing to source: [green]"
set show_state 2
label __label98
label __label95
jump __label101 notEqual state 3
ucontrol within DST_X DST_Y 8 __tmp148 0
jump __label103 equal __tmp148 false
sensor __tmp150 DST ITEM
op sub __tmp151 DROP_LEVEL __tmp150
op max max_drop __tmp151 0
ucontrol itemDrop DST max_drop 0 0 0
sensor __tmp153 @unit @totalItems
jump __label105 greaterThan __tmp153 0
set state 2
ucontrol approach SRC_X SRC_Y 6 0 0
jump __label104 always 0 0
label __label105
set MSG "\nDropping items: [green]"
jump __label104 always 0 0
label __label103
ucontrol approach DST_X DST_Y 6 0 0
set MSG "\nGoing to destination: [green]"
set show_state 3
label __label104
label __label101
jump __label107 lessThanEq iter 3
set iter 0
print "Moving [green]"
print ITEM
print DIRECTION
print __tmp99
sensor __tmp158 CONTAINER ITEM
print "\nLocal items: [gold]"
print __tmp158
print "[]"
jump __label109 greaterThanEq EFF_LOCAL_LIMIT 100
print " (limit [orange]"
print LOCAL_MARGIN
print "[])"
label __label109
jump __label111 equal SHOW_REMOTE_LEVEL false
sensor __tmp162 CORE ITEM
print "\nRemote items: [gold]"
print __tmp162
print "[]"
jump __label113 greaterThanEq EFF_REMOTE_LIMIT 100
print " (limit [orange]"
print REMOTE_MARGIN
print "[])"
label __label113
label __label111
sensor __tmp165 @unit @totalItems
print MSG
print __tmp165
print "[]\n"
jump __label115 notEqual show_state 2
sensor __tmp168 @unit @x
op sub __tmp169 SRC_X __tmp168
sensor __tmp170 @unit @y
op sub __tmp171 SRC_Y __tmp170
op len __tmp172 __tmp169 __tmp171
op idiv __tmp173 __tmp172 SPEED_SEC
op div __tmp174 __tmp173 10
print "[]  arriving in [gold]"
print __tmp174
print " sec[]\n"
jump __label116 always 0 0
label __label115
jump __label117 notEqual show_state 3
sensor __tmp177 @unit @x
op sub __tmp178 DST_X __tmp177
sensor __tmp179 @unit @y
op sub __tmp180 DST_Y __tmp179
op len __tmp181 __tmp178 __tmp180
op idiv __tmp182 __tmp181 SPEED_SEC
op div __tmp183 __tmp182 10
print "[]  arriving in [gold]"
print __tmp183
print " sec[]\n"
label __label117
label __label116
op floor __tmp184 loop_time 0
print "[lightgray]Loop time: "
print __tmp184
print " ms[]\n"
printflush message1
sensor __tmp185 switch1 @enabled
jump __label70 equal __tmp185 0
sensor __tmp188 SRC @dead
jump __label70 notEqual __tmp188 0
sensor __tmp191 DST @dead
jump __label70 notEqual __tmp191 0
sensor __tmp194 SORTER @dead
jump __label70 notEqual __tmp194 0
jump __label108 always 0 0
label __label107
op add iter iter 1
label __label108
op sub loop_time @time start
jump __label68 always 0 0
label __label70
sensor __tmp199 SORTER @dead
op strictEqual __tmp200 __tmp199 0
jump __label129 notEqual __tmp200 false
label __label140
print "[salmon]sorter1 is missing!\n"
print "[gold]Please place and link sorter or inverted sorter to the processor."
print "\n"
printflush message1
printflush message2
sensor __tmp199 sorter1 @dead
op strictEqual __tmp200 __tmp199 0
jump __label140 equal __tmp200 false
label __label129
sensor __tmp202 SRC @dead
op strictEqual __tmp203 __tmp202 0
op equal __tmp204 __tmp203 false
sensor __tmp205 DST @dead
op strictEqual __tmp206 __tmp205 0
op equal __tmp207 __tmp206 false
op or __tmp208 __tmp204 __tmp207
jump __label130 equal __tmp208 false
control enabled switch1 false 0 0 0
sensor __tmp210 switch1 @enabled
jump __label134 notEqual __tmp210 false
label __label138
print "[salmon]Local or remote container became invalid."
print "\n"
print "[gold]Please fix and press button to reinitialize."
print "\n"
printflush message1
printflush message2
sensor __tmp210 switch1 @enabled
jump __label138 equal __tmp210 false
label __label134
label __label130
