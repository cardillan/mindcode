   579 instructions before optimizations.
    39 instructions eliminated by Temp Variables Elimination.
    86 instructions eliminated by Dead Code Elimination (2 passes, 7 iterations).
     9 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    42 instructions eliminated by Jump Optimization (5 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (2 passes, 4 iterations).
    27 instructions eliminated by Data Flow Optimization (4 passes, 21 iterations).
    18 instructions added by Loop Optimization (4 iterations).
     9 loops improved by Loop Optimization.
     5 instructions eliminated by Jump Straightening (5 iterations).
     5 instructions updated by JumpThreading.
    48 instructions eliminated by Unreachable Code Elimination.
     9 instructions eliminated by Print Merging.
   300 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 634):
  * Loop Optimization: replicate condition at line 45            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 317           cost     1, benefit       12.5, efficiency       12.5

Pass 1: speed optimization selection (cost limit 633):
    Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5
  * Loop Optimization: replicate condition at line 317           cost     1, benefit       12.5, efficiency       12.5 (+1 instructions)

Pass 1: speed optimization selection (cost limit 632):
  * Loop Optimization: replicate condition at line 53            cost     2, benefit       25.0, efficiency       12.5 (+2 instructions)
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5

Pass 1: speed optimization selection (cost limit 630):
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
    Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3
  * Loop Optimization: replicate condition at line 307           cost     2, benefit       25.0, efficiency       12.5 (+1 instructions)

Pass 1: speed optimization selection (cost limit 629):
    Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3
  * Loop Optimization: replicate condition at line 132           cost     3, benefit       25.0, efficiency        8.3 (+3 instructions)

Pass 1: speed optimization selection (cost limit 626):
  * Loop Optimization: replicate condition at line 104           cost     4, benefit       12.5, efficiency        3.1 (+4 instructions)
    Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3

Pass 1: speed optimization selection (cost limit 622):
  * Loop Optimization: replicate condition at line 113           cost     5, benefit        6.3, efficiency        1.3 (+5 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-52 instructions):
 
    33 set __tmp10 @unit
    34 set __fn0_first_unit __tmp10
    35 jump __label10 always
-    * set __tmp9 null
    36 jump __label12 always
    37 label __label11
-    * set __tmp9 null
    38 label __label12
    39 print "[salmon]No unit of type "
    40 print UNIT
 
    47 sensor __tmp11 @unit @controller
    48 op equal __tmp12 __tmp11 @this
    49 jump __label16 equal __tmp12 false
-    * set __tmp7 null
    50 jump __label7 always
-    * set __tmp13 null
    51 jump __label17 always
    52 label __label16
-    * set __tmp13 null
    53 label __label17
    54 ubind UNIT
    55 print "[gold]Looking for old unit..."
 
    70 print "[salmon]No unit of type "
    71 print UNIT
    72 print " found. 2"
-    * set __tmp20 null
    73 jump __label24 always
    74 label __label23
    75 sensor __tmp21 @unit @controlled
 
    85 jump __label19 always
    86 set __tmp23 null
    87 label __label26
-    * set __tmp20 __tmp23
    88 label __label24
    89 printflush message1
    90 label __label21
 
    92 label __label22
    93 set __tmp18 null
    94 label __label19
-    * set __tmp7 __tmp18
    95 label __label7
    96 label __label4
    97 jump __label3 always
 
   120 jump __label33 equal __tmp32 false
   121 set DROP_TARGET CONTAINER
   122 set CONTAINER block
-    * set __tmp33 CONTAINER
   123 jump __label34 always
   124 label __label33
-    * set __tmp33 null
   125 label __label34
   126 label __label31
   127 jump __label30 always
 
   130 jump __label35 equal __tmp34 false
   131 print "[salmon]No destination."
   132 print "\n"
-    * set __tmp35 "[salmon]No destination."
   133 jump __label36 always
   134 label __label35
   135 op notEqual __tmp36 DROP_TARGET null
 
   150 jump __label29 always
   151 set __tmp40 null
   152 label __label38
-    * set __tmp35 __tmp40
   153 label __label36
   154 printflush message1
   155 label __label28
 
   162 printflush message1
   163 ulocate building core false @copper CORE_X CORE_Y __tmp44 __tmp43
   164 set CORE __tmp43
-    * set __tmp42 CORE
   165 jump __label40 always
   166 label __label39
   167 print "[gold]Locating vault #"
 
   218 label __label44
   219 set __tmp52 null
   220 label __label45
-    * set __tmp42 __tmp52
   221 label __label40
   222 op equal __tmp65 CORE null
   223 jump __label51 equal __tmp65 false
   224 end
-    * set __tmp66 null
   225 jump __label52 always
   226 label __label51
-    * set __tmp66 null
   227 label __label52
   228 set SORTER sorter1
   229 sensor __tmp67 SORTER @type
 
   239 jump __label56 equal __tmp71 false
   240 print "Block found: "
   241 print SORTER
-    * set __tmp72 SORTER
   242 jump __label57 always
   243 label __label56
-    * set __tmp72 null
   244 label __label57
   245 printflush message1
   246 set SORTER sorter1
 
   275 set __tmp84 "[] from vault #"
   276 label __label61
   277 set DIRECTION __tmp84
-    * set __tmp75 DIRECTION
   278 jump __label59 always
   279 label __label58
   280 op greaterThan __tmp85 LINK_ID 0
 
   305 set __tmp97 "[] to vault #"
   306 label __label63
   307 set DIRECTION __tmp97
-    * set __tmp75 DIRECTION
   308 label __label59
   309 op equal __tmp98 LINK_ID 0
   310 jump __label64 equal __tmp98 false
 
   327 set DROP_TARGET CORE
   328 set DROP_X CORE_X
   329 set DROP_Y CORE_Y
-    * set __tmp105 DROP_Y
   330 jump __label67 always
   331 label __label66
   332 sensor __tmp106 DROP_TARGET @x
   333 set DROP_X __tmp106
   334 sensor __tmp107 DROP_TARGET @y
   335 set DROP_Y __tmp107
-    * set __tmp105 DROP_Y
   336 label __label67
   337 set LAST_ITEM @mono
   338 set iter 0
 
   358 print "[salmon]No unit of type "
   359 print UNIT
   360 print " found. 2"
-    * set __tmp117 null
   361 jump __label79 always
   362 label __label78
   363 sensor __tmp118 @unit @controlled
 
   369 set __tmp120 null
   370 jump __label81 always
   371 label __label80
-    * set __tmp115 null
   372 jump __label74 always
   373 set __tmp120 null
   374 label __label81
-    * set __tmp117 __tmp120
   375 label __label79
   376 printflush message1
   377 label __label76
   378 jump __label75 always
   379 label __label77
-    * set __tmp115 null
   380 label __label74
   381 ucontrol flag 1
   382 set state 1
-    * set __tmp114 state
   383 jump __label72 always
   384 label __label71
-    * set __tmp114 null
   385 label __label72
   386 sensor __tmp121 SORTER @config
   387 set ITEM __tmp121
 
   399 label __label86
   400 set LAST_ITEM ITEM
   401 set state 1
-    * set __tmp123 state
   402 jump __label83 always
   403 label __label82
-    * set __tmp123 null
   404 label __label83
   405 set show_state 0
   406 op equal __tmp126 state 1
 
   433 label __label92
   434 set __tmp130 __tmp133
   435 label __label90
-    * set __tmp127 __tmp130
   436 jump __label88 always
   437 label __label87
-    * set __tmp127 null
   438 label __label88
   439 op equal __tmp136 state 2
   440 jump __label95 equal __tmp136 false
 
   463 set show_state 2
   464 set __tmp139 show_state
   465 label __label98
-    * set __tmp137 __tmp139
   466 jump __label96 always
   467 label __label95
-    * set __tmp137 null
   468 label __label96
   469 op equal __tmp146 state 3
   470 jump __label101 equal __tmp146 false
 
   494 set show_state 3
   495 set __tmp149 show_state
   496 label __label104
-    * set __tmp147 __tmp149
   497 jump __label102 always
   498 label __label101
-    * set __tmp147 null
   499 label __label102
   500 op greaterThan __tmp156 iter 3
   501 jump __label107 equal __tmp156 false
 
   514 print " (limit [orange]"
   515 print LOCAL_MARGIN
   516 print "[])"
-    * set __tmp160 null
   517 jump __label110 always
   518 label __label109
-    * set __tmp160 null
   519 label __label110
   520 jump __label111 equal SHOW_REMOTE_LEVEL false
   521 sensor __tmp162 CORE ITEM
 
   532 label __label113
   533 set __tmp164 null
   534 label __label114
-    * set __tmp161 __tmp164
   535 jump __label112 always
   536 label __label111
-    * set __tmp161 null
   537 label __label112
   538 sensor __tmp165 @unit @totalItems
   539 print MSG
 
   552 print "[]  arriving in [gold]"
   553 print __tmp174
   554 print " sec[]\n"
-    * set __tmp167 null
   555 jump __label116 always
   556 label __label115
   557 op equal __tmp175 show_state 3
 
   571 label __label117
   572 set __tmp176 null
   573 label __label118
-    * set __tmp167 __tmp176
   574 label __label116
   575 op floor __tmp184 loop_time
   576 print "[lightgray]Loop time: "
 
   582 op equal __tmp186 __tmp185 0
   583 jump __label119 equal __tmp186 false
   584 jump __label70 always
-    * set __tmp187 null
   585 jump __label120 always
   586 label __label119
-    * set __tmp187 null
   587 label __label120
   588 sensor __tmp188 SRC @dead
   589 op notEqual __tmp189 __tmp188 0
   590 jump __label121 equal __tmp189 false
   591 jump __label70 always
-    * set __tmp190 null
   592 jump __label122 always
   593 label __label121
-    * set __tmp190 null
   594 label __label122
   595 sensor __tmp191 DST @dead
   596 op notEqual __tmp192 __tmp191 0
   597 jump __label123 equal __tmp192 false
   598 jump __label70 always
-    * set __tmp193 null
   599 jump __label124 always
   600 label __label123
-    * set __tmp193 null
   601 label __label124
   602 sensor __tmp194 SORTER @dead
   603 op notEqual __tmp195 __tmp194 0
 
   608 label __label125
   609 set __tmp196 null
   610 label __label126
-    * set __tmp157 __tmp196
   611 jump __label108 always
   612 label __label107
   613 op add __tmp197 iter 1
   614 set iter __tmp197
-    * set __tmp157 iter
   615 label __label108
   616 op sub __tmp198 @time start
   617 set loop_time __tmp198
 
   655 label __label133
   656 jump __label132 always
   657 label __label134
-    * set __tmp209 null
   658 jump __label131 always
   659 label __label130
-    * set __tmp209 null
   660 label __label131
   661 end

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
    78 print "[salmon]Looking for a free "
    79 print UNIT
    80 print "..."
-    * set __tmp23 null
    81 jump __label26 always
    82 label __label25
-    * set __tmp18 null
    83 jump __label19 always
-    * set __tmp23 null
    84 label __label26
    85 label __label24
    86 printflush message1
    87 label __label21
    88 jump __label20 always
    89 label __label22
-    * set __tmp18 null
    90 label __label19
    91 label __label7
    92 label __label4
 
   140 print DROP_TARGET
   141 print "\n"
   142 print "[salmon]Item dump must be a container or a vault!"
-    * set __tmp40 null
   143 jump __label38 always
   144 label __label37
   145 jump __label29 always
-    * set __tmp40 null
   146 label __label38
   147 label __label36
   148 printflush message1
 
   207 label __label49
   208 set __tmp64 null
   209 label __label50
-    * set __tmp52 __tmp64
   210 jump __label45 always
   211 label __label44
-    * set __tmp52 null
   212 label __label45
   213 label __label40
   214 op equal __tmp65 CORE null
 
   358 print "[salmon]Looking for a free "
   359 print UNIT
   360 print "..."
-    * set __tmp120 null
   361 jump __label81 always
   362 label __label80
   363 jump __label74 always
-    * set __tmp120 null
   364 label __label81
   365 label __label79
   366 printflush message1
 
   399 op equal __tmp129 __tmp128 ITEM
   400 jump __label89 equal __tmp129 false
   401 set state 3
-    * set __tmp130 state
   402 jump __label90 always
   403 label __label89
   404 sensor __tmp131 @unit @totalItems
 
   420 label __label94
   421 set __tmp133 __tmp135
   422 label __label92
-    * set __tmp130 __tmp133
   423 label __label90
   424 jump __label88 always
   425 label __label87
 
   443 set MSG "\nLoading items: [green]"
   444 set __tmp145 MSG
   445 label __label100
-    * set __tmp139 __tmp145
   446 jump __label98 always
   447 label __label97
   448 ucontrol approach SRC_X SRC_Y 6
   449 set MSG "\nGoing to source: [green]"
   450 set show_state 2
-    * set __tmp139 show_state
   451 label __label98
   452 jump __label96 always
   453 label __label95
 
   472 set MSG "\nDropping items: [green]"
   473 set __tmp155 MSG
   474 label __label106
-    * set __tmp149 __tmp155
   475 jump __label104 always
   476 label __label103
   477 ucontrol approach DST_X DST_Y 6
   478 set MSG "\nGoing to destination: [green]"
   479 set show_state 3
-    * set __tmp149 show_state
   480 label __label104
   481 jump __label102 always
   482 label __label101
 
   511 print " (limit [orange]"
   512 print REMOTE_MARGIN
   513 print "[])"
-    * set __tmp164 null
   514 jump __label114 always
   515 label __label113
-    * set __tmp164 null
   516 label __label114
   517 jump __label112 always
   518 label __label111
 
   548 print "[]  arriving in [gold]"
   549 print __tmp183
   550 print " sec[]\n"
-    * set __tmp176 null
   551 jump __label118 always
   552 label __label117
-    * set __tmp176 null
   553 label __label118
   554 label __label116
   555 op floor __tmp184 loop_time
 
   583 op notEqual __tmp195 __tmp194 0
   584 jump __label125 equal __tmp195 false
   585 jump __label70 always
-    * set __tmp196 null
   586 jump __label126 always
   587 label __label125
-    * set __tmp196 null
   588 label __label126
   589 jump __label108 always
   590 label __label107

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
   202 op notEqual __tmp63 b_type @vault
   203 jump __label49 equal __tmp63 false
   204 set CORE null
-    * set __tmp64 CORE
   205 jump __label50 always
   206 label __label49
-    * set __tmp64 null
   207 label __label50
   208 jump __label45 always
   209 label __label44
 
   403 op equal __tmp132 __tmp131 0
   404 jump __label91 equal __tmp132 false
   405 set state 2
-    * set __tmp133 state
   406 jump __label92 always
   407 label __label91
   408 set MSG "\nUnloading previous items: [green]"
 
   415 label __label93
   416 set __tmp135 null
   417 label __label94
-    * set __tmp133 __tmp135
   418 label __label92
   419 label __label90
   420 jump __label88 always
 
   433 op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
   434 jump __label99 equal __tmp144 false
   435 set state 3
-    * set __tmp145 state
   436 jump __label100 always
   437 label __label99
   438 set MSG "\nLoading items: [green]"
-    * set __tmp145 MSG
   439 label __label100
   440 jump __label98 always
   441 label __label97
 
   460 jump __label105 equal __tmp154 false
   461 set state 2
   462 ucontrol approach SRC_X SRC_Y 6
-    * set __tmp155 null
   463 jump __label106 always
   464 label __label105
   465 set MSG "\nDropping items: [green]"
-    * set __tmp155 MSG
   466 label __label106
   467 jump __label104 always
   468 label __label103

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   410 ucontrol within DROP_X DROP_Y 8 __tmp134
   411 jump __label93 equal __tmp134 false
   412 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * set __tmp135 null
   413 jump __label94 always
   414 label __label93
-    * set __tmp135 null
   415 label __label94
   416 label __label92
   417 label __label90

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-39 instructions):
 
     1 set LINK_ID 0
     2 set LOCAL_LIMIT 100
     3 set REMOTE_LIMIT 100
-    * op max __tmp0 LOCAL_LIMIT 20
-    * set LOCAL_LIMIT __tmp0
-    * op max __tmp1 REMOTE_LIMIT 20
-    * set REMOTE_LIMIT __tmp1
+    4 op max LOCAL_LIMIT LOCAL_LIMIT 20
+    5 op max REMOTE_LIMIT REMOTE_LIMIT 20
     6 set MSG null
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
 
    28 ubind UNIT
    29 op notEqual __tmp8 @unit null
    30 jump __label11 equal __tmp8 false
-    * set __tmp10 @unit
-    * set __fn0_first_unit __tmp10
+   31 set __fn0_first_unit @unit
    32 jump __label10 always
    33 jump __label12 always
    34 label __label11
 
    89 label __label4
    90 jump __label3 always
    91 label __label5
-    * sensor __tmp24 @unit @itemCapacity
-    * set UNIT_CAPACITY __tmp24
+   92 sensor UNIT_CAPACITY @unit @itemCapacity
    93 sensor __tmp25 @unit @speed
-    * op div __tmp26 __tmp25 10
-    * set SPEED_SEC __tmp26
+   94 op div SPEED_SEC __tmp25 10
    95 ucontrol flag 1
    96 label __label27
    97 jump __label29 equal true false
    98 set CONTAINER null
    99 set DROP_TARGET null
-    * set __tmp27 @links
-    * set n __tmp27
+  100 set n @links
   101 label __label30
   102 op greaterThan __tmp28 n 0
   103 jump __label32 equal __tmp28 false
-    * op sub __tmp29 n 1
-    * set n __tmp29
-    * getlink __tmp30 n
-    * set block __tmp30
+  104 op sub n n 1
+  105 getlink block n
   106 sensor __tmp31 block @itemCapacity
   107 op greaterThan __tmp32 __tmp31 0
   108 jump __label33 equal __tmp32 false
 
   146 jump __label39 equal __tmp41 false
   147 print "[gold]Locating core..."
   148 printflush message1
-    * ulocate building core false @copper CORE_X CORE_Y __tmp44 __tmp43
-    * set CORE __tmp43
+  149 ulocate building core false @copper CORE_X CORE_Y 0 CORE
   150 jump __label40 always
   151 label __label39
   152 print "[gold]Locating vault #"
   153 print LINK_ID
   154 print "..."
   155 printflush message1
-    * op add __tmp45 99999900 LINK_ID
-    * set QUERY_FLAG __tmp45
+  156 op add QUERY_FLAG 99999900 LINK_ID
   157 set flag QUERY_FLAG
   158 ucontrol flag flag
   159 label __label41
 
   163 op land __tmp49 __tmp46 __tmp48
   164 jump __label43 equal __tmp49 false
   165 ucontrol stop
-    * sensor __tmp50 @unit @flag
-    * set flag __tmp50
+  166 sensor flag @unit @flag
   167 label __label42
   168 jump __label41 always
   169 label __label43
   170 op notEqual __tmp51 flag QUERY_FLAG
   171 jump __label44 equal __tmp51 false
-    * op idiv __tmp53 flag 100
-    * set position __tmp53
-    * op mod __tmp54 position @mapw
-    * set CORE_X __tmp54
-    * op idiv __tmp55 position @mapw
-    * set CORE_Y __tmp55
+  172 op idiv position flag 100
+  173 op mod CORE_X position @mapw
+  174 op idiv CORE_Y position @mapw
   175 label __label46
   176 ucontrol within CORE_X CORE_Y 8 __tmp56
   177 op equal __tmp57 __tmp56 false
 
   183 label __label47
   184 jump __label46 always
   185 label __label48
-    * ucontrol getBlock CORE_X CORE_Y b_type __tmp61 __tmp62
-    * set CORE __tmp61
+  186 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   187 op notEqual __tmp63 b_type @vault
   188 jump __label49 equal __tmp63 false
   189 set CORE null
 
   201 label __label51
   202 label __label52
   203 set SORTER sorter1
-    * sensor __tmp67 SORTER @type
-    * set sorter_type __tmp67
+  204 sensor sorter_type SORTER @type
   205 label __label53
   206 op notEqual __tmp68 sorter_type @sorter
   207 op notEqual __tmp69 sorter_type @inverted-sorter
 
   218 label __label57
   219 printflush message1
   220 set SORTER sorter1
-    * sensor __tmp73 SORTER @type
-    * set sorter_type __tmp73
+  221 sensor sorter_type SORTER @type
   222 label __label54
   223 jump __label53 always
   224 label __label55
 
   227 set SHOW_REMOTE_LEVEL true
   228 set SRC CORE
   229 set DST CONTAINER
-    * sensor __tmp76 SRC @itemCapacity
-    * set src_capacity __tmp76
-    * sensor __tmp77 DST @itemCapacity
-    * set dst_capacity __tmp77
+  230 sensor src_capacity SRC @itemCapacity
+  231 sensor dst_capacity DST @itemCapacity
   232 op sub __tmp78 100 REMOTE_LIMIT
   233 op mul __tmp79 src_capacity __tmp78
-    * op idiv __tmp80 __tmp79 100
-    * set LOAD_LEVEL __tmp80
+  234 op idiv LOAD_LEVEL __tmp79 100
   235 op mul __tmp81 dst_capacity LOCAL_LIMIT
-    * op idiv __tmp82 __tmp81 100
-    * set DROP_LEVEL __tmp82
+  236 op idiv DROP_LEVEL __tmp81 100
   237 set LOCAL_MARGIN DROP_LEVEL
   238 set REMOTE_MARGIN LOAD_LEVEL
   239 op equal __tmp83 LINK_ID 0
 
   246 set DIRECTION __tmp84
   247 jump __label59 always
   248 label __label58
-    * op greaterThan __tmp85 LINK_ID 0
-    * set SHOW_REMOTE_LEVEL __tmp85
+  249 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
   250 set SRC CONTAINER
   251 set DST CORE
-    * sensor __tmp86 SRC @itemCapacity
-    * set src_capacity __tmp86
-    * sensor __tmp87 DST @itemCapacity
-    * set dst_capacity __tmp87
+  252 sensor src_capacity SRC @itemCapacity
+  253 sensor dst_capacity DST @itemCapacity
   254 op sub __tmp88 100 LOCAL_LIMIT
   255 op mul __tmp89 src_capacity __tmp88
-    * op idiv __tmp90 __tmp89 100
-    * set LOAD_LEVEL __tmp90
+  256 op idiv LOAD_LEVEL __tmp89 100
   257 op mul __tmp91 dst_capacity REMOTE_LIMIT
   258 op idiv __tmp92 __tmp91 100
   259 op equal __tmp93 LINK_ID 0
   260 op mul __tmp94 __tmp93 UNIT_CAPACITY
-    * op add __tmp95 __tmp92 __tmp94
-    * set DROP_LEVEL __tmp95
+  261 op add DROP_LEVEL __tmp92 __tmp94
   262 set LOCAL_MARGIN LOAD_LEVEL
   263 set REMOTE_MARGIN DROP_LEVEL
   264 op equal __tmp96 LINK_ID 0
 
   278 set __tmp99 LINK_ID
   279 label __label65
   280 set LINK_TXT __tmp99
-    * sensor __tmp100 SRC @x
-    * set SRC_X __tmp100
-    * sensor __tmp101 SRC @y
-    * set SRC_Y __tmp101
-    * sensor __tmp102 DST @x
-    * set DST_X __tmp102
-    * sensor __tmp103 DST @y
-    * set DST_Y __tmp103
+  281 sensor SRC_X SRC @x
+  282 sensor SRC_Y SRC @y
+  283 sensor DST_X DST @x
+  284 sensor DST_Y DST @y
   285 op equal __tmp104 DROP_TARGET null
   286 jump __label66 equal __tmp104 false
   287 set DROP_TARGET CORE
 
   289 set DROP_Y CORE_Y
   290 jump __label67 always
   291 label __label66
-    * sensor __tmp106 DROP_TARGET @x
-    * set DROP_X __tmp106
-    * sensor __tmp107 DROP_TARGET @y
-    * set DROP_Y __tmp107
+  292 sensor DROP_X DROP_TARGET @x
+  293 sensor DROP_Y DROP_TARGET @y
   294 label __label67
   295 set LAST_ITEM @mono
   296 set iter 0
 
   299 ucontrol stop
   300 label __label68
   301 jump __label70 equal true false
-    * set __tmp108 @time
-    * set start __tmp108
+  302 set start @time
   303 sensor __tmp109 @unit @dead
   304 op strictEqual __tmp110 __tmp109 0
   305 sensor __tmp111 @unit @controller
 
   338 jump __label72 always
   339 label __label71
   340 label __label72
-    * sensor __tmp121 SORTER @config
-    * set ITEM __tmp121
+  341 sensor ITEM SORTER @config
   342 op notEqual __tmp122 ITEM LAST_ITEM
   343 jump __label82 equal __tmp122 false
   344 label __label84
 
   346 jump __label86 equal __tmp124 false
   347 print "[salmon]No item type selected for transport."
   348 printflush message1
-    * sensor __tmp125 SORTER @config
-    * set ITEM __tmp125
+  349 sensor ITEM SORTER @config
   350 label __label85
   351 jump __label84 always
   352 label __label86
 
   389 jump __label97 equal __tmp138 false
   390 sensor __tmp140 SRC ITEM
   391 op sub __tmp141 __tmp140 LOAD_LEVEL
-    * op max __tmp142 __tmp141 0
-    * set max_load __tmp142
+  392 op max max_load __tmp141 0
   393 ucontrol itemTake SRC ITEM max_load
   394 sensor __tmp143 @unit @totalItems
   395 op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
 
   414 jump __label103 equal __tmp148 false
   415 sensor __tmp150 DST ITEM
   416 op sub __tmp151 DROP_LEVEL __tmp150
-    * op max __tmp152 __tmp151 0
-    * set max_drop __tmp152
+  417 op max max_drop __tmp151 0
   418 ucontrol itemDrop DST max_drop
   419 sensor __tmp153 @unit @totalItems
   420 op lessThanEq __tmp154 __tmp153 0
 
   541 label __label126
   542 jump __label108 always
   543 label __label107
-    * op add __tmp197 iter 1
-    * set iter __tmp197
+  544 op add iter iter 1
   545 label __label108
-    * op sub __tmp198 @time start
-    * set loop_time __tmp198
+  546 op sub loop_time @time start
   547 label __label69
   548 jump __label68 always
   549 label __label70

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-5 instructions):
 
    24 label __label6
    25 set __fn0_first_unit null
    26 label __label8
-    * jump __label10 equal true false
    27 ubind UNIT
    28 op notEqual __tmp8 @unit null
    29 jump __label11 equal __tmp8 false
 
    59 label __label15
    60 label __label18
    61 label __label20
-    * jump __label22 equal true false
    62 ubind UNIT
    63 op equal __tmp19 @unit null
    64 jump __label23 equal __tmp19 false
 
    92 op div SPEED_SEC __tmp25 10
    93 ucontrol flag 1
    94 label __label27
-    * jump __label29 equal true false
    95 set CONTAINER null
    96 set DROP_TARGET null
    97 set n @links
 
   295 set state 1
   296 ucontrol stop
   297 label __label68
-    * jump __label70 equal true false
   298 set start @time
   299 sensor __tmp109 @unit @dead
   300 op strictEqual __tmp110 __tmp109 0
 
   304 jump __label71 equal __tmp113 false
   305 label __label73
   306 label __label75
-    * jump __label77 equal true false
   307 ubind UNIT
   308 op equal __tmp116 @unit null
   309 jump __label78 equal __tmp116 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-42 instructions):
 
     6 set MSG null
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
-    * op equal __tmp3 __tmp2 false
-    * jump __label2 equal __tmp3 false
+    9 jump __label2 notEqual __tmp2 false
    10 print "Unit Transport - Single"
    11 print "\n"
    12 print "Activate switch to start."
 
    18 label __label3
    19 sensor __tmp4 @unit @dead
    20 op strictEqual __tmp5 __tmp4 0
-    * op equal __tmp6 __tmp5 false
-    * jump __label5 equal __tmp6 false
+   21 jump __label5 notEqual __tmp5 false
    22 label __label6
    23 set __fn0_first_unit null
    24 label __label8
    25 ubind UNIT
-    * op notEqual __tmp8 @unit null
-    * jump __label11 equal __tmp8 false
+   26 jump __label11 equal @unit null
    27 set __fn0_first_unit @unit
    28 jump __label10 always
    29 jump __label12 always
 
    38 label __label10
    39 label __label13
    40 sensor __tmp11 @unit @controller
-    * op equal __tmp12 __tmp11 @this
-    * jump __label16 equal __tmp12 false
+   41 jump __label16 notEqual __tmp11 @this
    42 jump __label7 always
    43 jump __label17 always
    44 label __label16
 
    56 label __label18
    57 label __label20
    58 ubind UNIT
-    * op equal __tmp19 @unit null
-    * jump __label23 equal __tmp19 false
+   59 jump __label23 notEqual @unit null
    60 print "[salmon]No unit of type "
    61 print UNIT
    62 print " found. 2"
    63 jump __label24 always
    64 label __label23
    65 sensor __tmp21 @unit @controlled
-    * op notEqual __tmp22 __tmp21 0
-    * jump __label25 equal __tmp22 false
+   66 jump __label25 equal __tmp21 0
    67 print "[salmon]Looking for a free "
    68 print UNIT
    69 print "..."
 
    90 set DROP_TARGET null
    91 set n @links
    92 label __label30
-    * op greaterThan __tmp28 n 0
-    * jump __label32 equal __tmp28 false
+   93 jump __label32 lessThanEq n 0
    94 op sub n n 1
    95 getlink block n
    96 sensor __tmp31 block @itemCapacity
-    * op greaterThan __tmp32 __tmp31 0
-    * jump __label33 equal __tmp32 false
+   97 jump __label33 lessThanEq __tmp31 0
    98 set DROP_TARGET CONTAINER
    99 set CONTAINER block
   100 jump __label34 always
 
   103 label __label31
   104 jump __label30 always
   105 label __label32
-    * op equal __tmp34 CONTAINER null
-    * jump __label35 equal __tmp34 false
+  106 jump __label35 notEqual CONTAINER null
   107 print "[salmon]No destination."
   108 print "\n"
   109 jump __label36 always
 
   130 jump __label27 always
   131 label __label29
   132 set CORE null
-    * op equal __tmp41 LINK_ID 0
-    * jump __label39 equal __tmp41 false
+  133 jump __label39 notEqual LINK_ID 0
   134 print "[gold]Locating core..."
   135 printflush message1
   136 ulocate building core false @copper CORE_X CORE_Y 0 CORE
 
   154 label __label42
   155 jump __label41 always
   156 label __label43
-    * op notEqual __tmp51 flag QUERY_FLAG
-    * jump __label44 equal __tmp51 false
+  157 jump __label44 equal flag QUERY_FLAG
   158 op idiv position flag 100
   159 op mod CORE_X position @mapw
   160 op idiv CORE_Y position @mapw
 
   170 jump __label46 always
   171 label __label48
   172 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
-    * op notEqual __tmp63 b_type @vault
-    * jump __label49 equal __tmp63 false
+  173 jump __label49 equal b_type @vault
   174 set CORE null
   175 jump __label50 always
   176 label __label49
 
   179 label __label44
   180 label __label45
   181 label __label40
-    * op equal __tmp65 CORE null
-    * jump __label51 equal __tmp65 false
+  182 jump __label51 notEqual CORE null
   183 end
   184 jump __label52 always
   185 label __label51
 
   193 jump __label55 equal __tmp70 false
   194 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   195 print "\n"
-    * op notEqual __tmp71 SORTER null
-    * jump __label56 equal __tmp71 false
+  196 jump __label56 equal SORTER null
   197 print "Block found: "
   198 print SORTER
   199 jump __label57 always
 
   205 label __label54
   206 jump __label53 always
   207 label __label55
-    * op equal __tmp74 sorter_type @sorter
-    * jump __label58 equal __tmp74 false
+  208 jump __label58 notEqual sorter_type @sorter
   209 set SHOW_REMOTE_LEVEL true
   210 set SRC CORE
   211 set DST CONTAINER
 
   218 op idiv DROP_LEVEL __tmp81 100
   219 set LOCAL_MARGIN DROP_LEVEL
   220 set REMOTE_MARGIN LOAD_LEVEL
-    * op equal __tmp83 LINK_ID 0
-    * jump __label60 equal __tmp83 false
+  221 jump __label60 notEqual LINK_ID 0
   222 set __tmp84 "[] from core"
   223 jump __label61 always
   224 label __label60
 
   242 op add DROP_LEVEL __tmp92 __tmp94
   243 set LOCAL_MARGIN LOAD_LEVEL
   244 set REMOTE_MARGIN DROP_LEVEL
-    * op equal __tmp96 LINK_ID 0
-    * jump __label62 equal __tmp96 false
+  245 jump __label62 notEqual LINK_ID 0
   246 set __tmp97 "[] to core"
   247 jump __label63 always
   248 label __label62
 
   250 label __label63
   251 set DIRECTION __tmp97
   252 label __label59
-    * op equal __tmp98 LINK_ID 0
-    * jump __label64 equal __tmp98 false
+  253 jump __label64 notEqual LINK_ID 0
   254 set __tmp99 ""
   255 jump __label65 always
   256 label __label64
 
   261 sensor SRC_Y SRC @y
   262 sensor DST_X DST @x
   263 sensor DST_Y DST @y
-    * op equal __tmp104 DROP_TARGET null
-    * jump __label66 equal __tmp104 false
+  264 jump __label66 notEqual DROP_TARGET null
   265 set DROP_TARGET CORE
   266 set DROP_X CORE_X
   267 set DROP_Y CORE_Y
 
   281 op strictEqual __tmp110 __tmp109 0
   282 sensor __tmp111 @unit @controller
   283 op notEqual __tmp112 __tmp111 @this
-    * op lessThanEq __tmp113 __tmp110 __tmp112
-    * jump __label71 equal __tmp113 false
+  284 jump __label71 greaterThan __tmp110 __tmp112
   285 label __label73
   286 label __label75
   287 ubind UNIT
-    * op equal __tmp116 @unit null
-    * jump __label78 equal __tmp116 false
+  288 jump __label78 notEqual @unit null
   289 print "[salmon]No unit of type "
   290 print UNIT
   291 print " found. 2"
   292 jump __label79 always
   293 label __label78
   294 sensor __tmp118 @unit @controlled
-    * op notEqual __tmp119 __tmp118 0
-    * jump __label80 equal __tmp119 false
+  295 jump __label80 equal __tmp118 0
   296 print "[salmon]Looking for a free "
   297 print UNIT
   298 print "..."
 
   312 label __label71
   313 label __label72
   314 sensor ITEM SORTER @config
-    * op notEqual __tmp122 ITEM LAST_ITEM
-    * jump __label82 equal __tmp122 false
+  315 jump __label82 equal ITEM LAST_ITEM
   316 label __label84
-    * op equal __tmp124 ITEM null
-    * jump __label86 equal __tmp124 false
+  317 jump __label86 notEqual ITEM null
   318 print "[salmon]No item type selected for transport."
   319 printflush message1
   320 sensor ITEM SORTER @config
 
   327 label __label82
   328 label __label83
   329 set show_state 0
-    * op equal __tmp126 state 1
-    * jump __label87 equal __tmp126 false
+  330 jump __label87 notEqual state 1
   331 sensor __tmp128 @unit @firstItem
-    * op equal __tmp129 __tmp128 ITEM
-    * jump __label89 equal __tmp129 false
+  332 jump __label89 notEqual __tmp128 ITEM
   333 set state 3
   334 jump __label90 always
   335 label __label89
   336 sensor __tmp131 @unit @totalItems
-    * op equal __tmp132 __tmp131 0
-    * jump __label91 equal __tmp132 false
+  337 jump __label91 notEqual __tmp131 0
   338 set state 2
   339 jump __label92 always
   340 label __label91
 
   351 jump __label88 always
   352 label __label87
   353 label __label88
-    * op equal __tmp136 state 2
-    * jump __label95 equal __tmp136 false
+  354 jump __label95 notEqual state 2
   355 ucontrol within SRC_X SRC_Y 8 __tmp138
   356 jump __label97 equal __tmp138 false
   357 sensor __tmp140 SRC ITEM
 
   359 op max max_load __tmp141 0
   360 ucontrol itemTake SRC ITEM max_load
   361 sensor __tmp143 @unit @totalItems
-    * op greaterThanEq __tmp144 __tmp143 UNIT_CAPACITY
-    * jump __label99 equal __tmp144 false
+  362 jump __label99 lessThan __tmp143 UNIT_CAPACITY
   363 set state 3
   364 jump __label100 always
   365 label __label99
 
   374 jump __label96 always
   375 label __label95
   376 label __label96
-    * op equal __tmp146 state 3
-    * jump __label101 equal __tmp146 false
+  377 jump __label101 notEqual state 3
   378 ucontrol within DST_X DST_Y 8 __tmp148
   379 jump __label103 equal __tmp148 false
   380 sensor __tmp150 DST ITEM
 
   382 op max max_drop __tmp151 0
   383 ucontrol itemDrop DST max_drop
   384 sensor __tmp153 @unit @totalItems
-    * op lessThanEq __tmp154 __tmp153 0
-    * jump __label105 equal __tmp154 false
+  385 jump __label105 greaterThan __tmp153 0
   386 set state 2
   387 ucontrol approach SRC_X SRC_Y 6
   388 jump __label106 always
 
   398 jump __label102 always
   399 label __label101
   400 label __label102
-    * op greaterThan __tmp156 iter 3
-    * jump __label107 equal __tmp156 false
+  401 jump __label107 lessThanEq iter 3
   402 set iter 0
   403 print "Moving [green]"
   404 print ITEM
 
   409 print "Local items: [gold]"
   410 print __tmp158
   411 print "[]"
-    * op lessThan __tmp159 LOCAL_LIMIT 100
-    * jump __label109 equal __tmp159 false
+  412 jump __label109 greaterThanEq LOCAL_LIMIT 100
   413 print " (limit [orange]"
   414 print LOCAL_MARGIN
   415 print "[])"
 
   421 print "\nRemote items: [gold]"
   422 print __tmp162
   423 print "[]"
-    * op lessThan __tmp163 REMOTE_LIMIT 100
-    * jump __label113 equal __tmp163 false
+  424 jump __label113 greaterThanEq REMOTE_LIMIT 100
   425 print " (limit [orange]"
   426 print REMOTE_MARGIN
   427 print "[])"
 
   436 print __tmp165
   437 print "[]"
   438 print "\n"
-    * op equal __tmp166 show_state 2
-    * jump __label115 equal __tmp166 false
+  439 jump __label115 notEqual show_state 2
   440 sensor __tmp168 @unit @x
   441 op sub __tmp169 SRC_X __tmp168
   442 sensor __tmp170 @unit @y
 
   449 print " sec[]\n"
   450 jump __label116 always
   451 label __label115
-    * op equal __tmp175 show_state 3
-    * jump __label117 equal __tmp175 false
+  452 jump __label117 notEqual show_state 3
   453 sensor __tmp177 @unit @x
   454 op sub __tmp178 DST_X __tmp177
   455 sensor __tmp179 @unit @y
 
   471 print "\n"
   472 printflush message1
   473 sensor __tmp185 switch1 @enabled
-    * op equal __tmp186 __tmp185 0
-    * jump __label119 equal __tmp186 false
+  474 jump __label119 notEqual __tmp185 0
   475 jump __label70 always
   476 jump __label120 always
   477 label __label119
   478 label __label120
   479 sensor __tmp188 SRC @dead
-    * op notEqual __tmp189 __tmp188 0
-    * jump __label121 equal __tmp189 false
+  480 jump __label121 equal __tmp188 0
   481 jump __label70 always
   482 jump __label122 always
   483 label __label121
   484 label __label122
   485 sensor __tmp191 DST @dead
-    * op notEqual __tmp192 __tmp191 0
-    * jump __label123 equal __tmp192 false
+  486 jump __label123 equal __tmp191 0
   487 jump __label70 always
   488 jump __label124 always
   489 label __label123
   490 label __label124
   491 sensor __tmp194 SORTER @dead
-    * op notEqual __tmp195 __tmp194 0
-    * jump __label125 equal __tmp195 false
+  492 jump __label125 equal __tmp194 0
   493 jump __label70 always
   494 jump __label126 always
   495 label __label125
 
   505 label __label127
   506 sensor __tmp199 SORTER @dead
   507 op strictEqual __tmp200 __tmp199 0
-    * op equal __tmp201 __tmp200 false
-    * jump __label129 equal __tmp201 false
+  508 jump __label129 notEqual __tmp200 false
   509 print "[salmon]sorter1 is missing!"
   510 print "\n"
   511 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   527 control enabled switch1 false
   528 label __label132
   529 sensor __tmp210 switch1 @enabled
-    * op equal __tmp211 __tmp210 false
-    * jump __label134 equal __tmp211 false
+  530 jump __label134 notEqual __tmp210 false
   531 print "[salmon]Local or remote container became invalid."
   532 print "\n"
   533 print "[gold]Please fix and press button to reinitialize."

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-22 instructions):
 
    26 jump __label11 equal @unit null
    27 set __fn0_first_unit @unit
    28 jump __label10 always
-    * jump __label12 always
    29 label __label11
    30 label __label12
    31 print "[salmon]No unit of type "
 
    39 sensor __tmp11 @unit @controller
    40 jump __label16 notEqual __tmp11 @this
    41 jump __label7 always
-    * jump __label17 always
    42 label __label16
    43 label __label17
    44 ubind UNIT
 
    95 jump __label33 lessThanEq __tmp31 0
    96 set DROP_TARGET CONTAINER
    97 set CONTAINER block
-    * jump __label34 always
    98 label __label33
    99 label __label34
   100 label __label31
 
   169 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   170 jump __label49 equal b_type @vault
   171 set CORE null
-    * jump __label50 always
   172 label __label49
   173 label __label50
-    * jump __label45 always
   174 label __label44
   175 label __label45
   176 label __label40
   177 jump __label51 notEqual CORE null
   178 end
-    * jump __label52 always
   179 label __label51
   180 label __label52
   181 set SORTER sorter1
 
   190 jump __label56 equal SORTER null
   191 print "Block found: "
   192 print SORTER
-    * jump __label57 always
   193 label __label56
   194 label __label57
   195 printflush message1
 
   301 label __label74
   302 ucontrol flag 1
   303 set state 1
-    * jump __label72 always
   304 label __label71
   305 label __label72
   306 sensor ITEM SORTER @config
 
   315 label __label86
   316 set LAST_ITEM ITEM
   317 set state 1
-    * jump __label83 always
   318 label __label82
   319 label __label83
   320 set show_state 0
 
   334 ucontrol within DROP_X DROP_Y 8 __tmp134
   335 jump __label93 equal __tmp134 false
   336 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * jump __label94 always
   337 label __label93
   338 label __label94
   339 label __label92
   340 label __label90
-    * jump __label88 always
   341 label __label87
   342 label __label88
   343 jump __label95 notEqual state 2
 
   360 set MSG "\nGoing to source: [green]"
   361 set show_state 2
   362 label __label98
-    * jump __label96 always
   363 label __label95
   364 label __label96
   365 jump __label101 notEqual state 3
 
   383 set MSG "\nGoing to destination: [green]"
   384 set show_state 3
   385 label __label104
-    * jump __label102 always
   386 label __label101
   387 label __label102
   388 jump __label107 lessThanEq iter 3
 
   400 print " (limit [orange]"
   401 print LOCAL_MARGIN
   402 print "[])"
-    * jump __label110 always
   403 label __label109
   404 label __label110
   405 jump __label111 equal SHOW_REMOTE_LEVEL false
 
   411 print " (limit [orange]"
   412 print REMOTE_MARGIN
   413 print "[])"
-    * jump __label114 always
   414 label __label113
   415 label __label114
-    * jump __label112 always
   416 label __label111
   417 label __label112
   418 sensor __tmp165 @unit @totalItems
 
   444 print "[]  arriving in [gold]"
   445 print __tmp183
   446 print " sec[]\n"
-    * jump __label118 always
   447 label __label117
   448 label __label118
   449 label __label116
 
   456 sensor __tmp185 switch1 @enabled
   457 jump __label119 notEqual __tmp185 0
   458 jump __label70 always
-    * jump __label120 always
   459 label __label119
   460 label __label120
   461 sensor __tmp188 SRC @dead
   462 jump __label121 equal __tmp188 0
   463 jump __label70 always
-    * jump __label122 always
   464 label __label121
   465 label __label122
   466 sensor __tmp191 DST @dead
   467 jump __label123 equal __tmp191 0
   468 jump __label70 always
-    * jump __label124 always
   469 label __label123
   470 label __label124
   471 sensor __tmp194 SORTER @dead
   472 jump __label125 equal __tmp194 0
   473 jump __label70 always
-    * jump __label126 always
   474 label __label125
   475 label __label126
   476 jump __label108 always
 
   516 label __label133
   517 jump __label132 always
   518 label __label134
-    * jump __label131 always
   519 label __label130
   520 label __label131
   521 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     1 set LINK_ID 0
     2 set LOCAL_LIMIT 100
     3 set REMOTE_LIMIT 100
-    * op max LOCAL_LIMIT LOCAL_LIMIT 20
-    * op max REMOTE_LIMIT REMOTE_LIMIT 20
+    4 op max LOCAL_LIMIT 100 20
+    5 op max REMOTE_LIMIT 100 20
     6 set MSG null
     7 label __label0
     8 sensor __tmp2 switch1 @enabled
 
    22 label __label6
    23 set __fn0_first_unit null
    24 label __label8
-    * ubind UNIT
+   25 ubind @mega
    26 jump __label11 equal @unit null
    27 set __fn0_first_unit @unit
    28 jump __label10 always
    29 label __label11
    30 label __label12
    31 print "[salmon]No unit of type "
-    * print UNIT
+   32 print @mega
    33 print " found. 1"
    34 printflush message1
    35 label __label9
 
    41 jump __label7 always
    42 label __label16
    43 label __label17
-    * ubind UNIT
+   44 ubind @mega
    45 print "[gold]Looking for old unit..."
    46 printflush message1
    47 label __label14
 
    53 label __label15
    54 label __label18
    55 label __label20
-    * ubind UNIT
+   56 ubind @mega
    57 jump __label23 notEqual @unit null
    58 print "[salmon]No unit of type "
-    * print UNIT
+   59 print @mega
    60 print " found. 2"
    61 jump __label24 always
    62 label __label23
    63 sensor __tmp21 @unit @controlled
    64 jump __label25 equal __tmp21 0
    65 print "[salmon]Looking for a free "
-    * print UNIT
+   66 print @mega
    67 print "..."
    68 jump __label26 always
    69 label __label25
 
   126 label __label28
   127 jump __label27 always
   128 label __label29
-    * set CORE null
-    * jump __label39 notEqual LINK_ID 0
+  129 jump __label39 notEqual 0 0
   130 print "[gold]Locating core..."
   131 printflush message1
   132 ulocate building core false @copper CORE_X CORE_Y 0 CORE
 
   178 label __label51
   179 label __label52
   180 set SORTER sorter1
-    * sensor sorter_type SORTER @type
+  181 sensor sorter_type sorter1 @type
   182 label __label53
   183 op notEqual __tmp68 sorter_type @sorter
   184 op notEqual __tmp69 sorter_type @inverted-sorter
 
   193 label __label57
   194 printflush message1
   195 set SORTER sorter1
-    * sensor sorter_type SORTER @type
+  196 sensor sorter_type sorter1 @type
   197 label __label54
   198 jump __label53 always
   199 label __label55
 
   201 set SHOW_REMOTE_LEVEL true
   202 set SRC CORE
   203 set DST CONTAINER
-    * sensor src_capacity SRC @itemCapacity
-    * sensor dst_capacity DST @itemCapacity
-    * op sub __tmp78 100 REMOTE_LIMIT
-    * op mul __tmp79 src_capacity __tmp78
+  204 sensor src_capacity CORE @itemCapacity
+  205 sensor dst_capacity CONTAINER @itemCapacity
+  206 op sub __tmp78 100 100
+  207 op mul __tmp79 src_capacity 0
   208 op idiv LOAD_LEVEL __tmp79 100
-    * op mul __tmp81 dst_capacity LOCAL_LIMIT
+  209 op mul __tmp81 dst_capacity 100
   210 op idiv DROP_LEVEL __tmp81 100
   211 set LOCAL_MARGIN DROP_LEVEL
   212 set REMOTE_MARGIN LOAD_LEVEL
-    * jump __label60 notEqual LINK_ID 0
+  213 jump __label60 notEqual 0 0
   214 set __tmp84 "[] from core"
   215 jump __label61 always
   216 label __label60
   217 set __tmp84 "[] from vault #"
   218 label __label61
-    * set DIRECTION __tmp84
+  219 set DIRECTION "[] from core"
   220 jump __label59 always
   221 label __label58
-    * op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
+  222 op greaterThan SHOW_REMOTE_LEVEL 0 0
   223 set SRC CONTAINER
   224 set DST CORE
-    * sensor src_capacity SRC @itemCapacity
-    * sensor dst_capacity DST @itemCapacity
-    * op sub __tmp88 100 LOCAL_LIMIT
-    * op mul __tmp89 src_capacity __tmp88
+  225 sensor src_capacity CONTAINER @itemCapacity
+  226 sensor dst_capacity CORE @itemCapacity
+  227 op sub __tmp88 100 100
+  228 op mul __tmp89 src_capacity 0
   229 op idiv LOAD_LEVEL __tmp89 100
-    * op mul __tmp91 dst_capacity REMOTE_LIMIT
+  230 op mul __tmp91 dst_capacity 100
   231 op idiv __tmp92 __tmp91 100
-    * op equal __tmp93 LINK_ID 0
-    * op mul __tmp94 __tmp93 UNIT_CAPACITY
+  232 op equal __tmp93 0 0
+  233 op mul __tmp94 true UNIT_CAPACITY
   234 op add DROP_LEVEL __tmp92 __tmp94
   235 set LOCAL_MARGIN LOAD_LEVEL
   236 set REMOTE_MARGIN DROP_LEVEL
-    * jump __label62 notEqual LINK_ID 0
+  237 jump __label62 notEqual 0 0
   238 set __tmp97 "[] to core"
   239 jump __label63 always
   240 label __label62
   241 set __tmp97 "[] to vault #"
   242 label __label63
-    * set DIRECTION __tmp97
+  243 set DIRECTION "[] to core"
   244 label __label59
-    * jump __label64 notEqual LINK_ID 0
+  245 jump __label64 notEqual 0 0
   246 set __tmp99 ""
   247 jump __label65 always
   248 label __label64
   249 set __tmp99 LINK_ID
   250 label __label65
-    * set LINK_TXT __tmp99
+  251 set LINK_TXT ""
   252 sensor SRC_X SRC @x
   253 sensor SRC_Y SRC @y
   254 sensor DST_X DST @x
 
   276 jump __label71 greaterThan __tmp110 __tmp112
   277 label __label73
   278 label __label75
-    * ubind UNIT
+  279 ubind @mega
   280 jump __label78 notEqual @unit null
   281 print "[salmon]No unit of type "
-    * print UNIT
+  282 print @mega
   283 print " found. 2"
   284 jump __label79 always
   285 label __label78
   286 sensor __tmp118 @unit @controlled
   287 jump __label80 equal __tmp118 0
   288 print "[salmon]Looking for a free "
-    * print UNIT
+  289 print @mega
   290 print "..."
   291 jump __label81 always
   292 label __label80
 
   389 print "Moving [green]"
   390 print ITEM
   391 print DIRECTION
-    * print LINK_TXT
+  392 print __tmp99
   393 print "\n"
   394 sensor __tmp158 CONTAINER ITEM
   395 print "Local items: [gold]"
   396 print __tmp158
   397 print "[]"
-    * jump __label109 greaterThanEq LOCAL_LIMIT 100
+  398 jump __label109 greaterThanEq 100 100
   399 print " (limit [orange]"
   400 print LOCAL_MARGIN
   401 print "[])"
 
   406 print "\nRemote items: [gold]"
   407 print __tmp162
   408 print "[]"
-    * jump __label113 greaterThanEq REMOTE_LIMIT 100
+  409 jump __label113 greaterThanEq 100 100
   410 print " (limit [orange]"
   411 print REMOTE_MARGIN
   412 print "[])"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-16 instructions):
-    * set UNIT @mega
-    * set LINK_ID 0
-    * set LOCAL_LIMIT 100
-    * set REMOTE_LIMIT 100
-    * op max LOCAL_LIMIT 100 20
-    * op max REMOTE_LIMIT 100 20
     0 set MSG null
     1 label __label0
     2 sensor __tmp2 switch1 @enabled
 
   197 set DST CONTAINER
   198 sensor src_capacity CORE @itemCapacity
   199 sensor dst_capacity CONTAINER @itemCapacity
-    * op sub __tmp78 100 100
   200 op mul __tmp79 src_capacity 0
   201 op idiv LOAD_LEVEL __tmp79 100
   202 op mul __tmp81 dst_capacity 100
   203 op idiv DROP_LEVEL __tmp81 100
-    * set LOCAL_MARGIN DROP_LEVEL
-    * set REMOTE_MARGIN LOAD_LEVEL
   204 jump __label60 notEqual 0 0
-    * set __tmp84 "[] from core"
   205 jump __label61 always
   206 label __label60
   207 set __tmp84 "[] from vault #"
 
   214 set DST CORE
   215 sensor src_capacity CONTAINER @itemCapacity
   216 sensor dst_capacity CORE @itemCapacity
-    * op sub __tmp88 100 100
   217 op mul __tmp89 src_capacity 0
   218 op idiv LOAD_LEVEL __tmp89 100
   219 op mul __tmp91 dst_capacity 100
   220 op idiv __tmp92 __tmp91 100
-    * op equal __tmp93 0 0
   221 op mul __tmp94 true UNIT_CAPACITY
   222 op add DROP_LEVEL __tmp92 __tmp94
-    * set LOCAL_MARGIN LOAD_LEVEL
-    * set REMOTE_MARGIN DROP_LEVEL
   223 jump __label62 notEqual 0 0
-    * set __tmp97 "[] to core"
   224 jump __label63 always
   225 label __label62
   226 set __tmp97 "[] to vault #"
 
   233 label __label64
   234 set __tmp99 LINK_ID
   235 label __label65
-    * set LINK_TXT ""
   236 sensor SRC_X SRC @x
   237 sensor SRC_Y SRC @y
   238 sensor DST_X DST @x
 
   373 print "Moving [green]"
   374 print ITEM
   375 print DIRECTION
-    * print __tmp99
+  376 print ""
   377 print "\n"
   378 sensor __tmp158 CONTAINER ITEM
   379 print "Local items: [gold]"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
   204 jump __label60 notEqual 0 0
   205 jump __label61 always
   206 label __label60
-    * set __tmp84 "[] from vault #"
   207 label __label61
   208 set DIRECTION "[] from core"
   209 jump __label59 always
 
   222 jump __label62 notEqual 0 0
   223 jump __label63 always
   224 label __label62
-    * set __tmp97 "[] to vault #"
   225 label __label63
   226 set DIRECTION "[] to core"
   227 label __label59
   228 jump __label64 notEqual 0 0
-    * set __tmp99 ""
   229 jump __label65 always
   230 label __label64
   231 set __tmp99 LINK_ID

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
   228 jump __label64 notEqual 0 0
   229 jump __label65 always
   230 label __label64
-    * set __tmp99 LINK_ID
   231 label __label65
   232 sensor SRC_X SRC @x
   233 sensor SRC_Y SRC @y

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    83 set n @links
    84 label __label30
    85 jump __label32 lessThanEq n 0
+   86 label __label135
    87 op sub n n 1
    88 getlink block n
    89 sensor __tmp31 block @itemCapacity
 
    93 label __label33
    94 label __label34
    95 label __label31
-    * jump __label30 always
+   96 jump __label135 greaterThan n 0
    97 label __label32
    98 jump __label35 notEqual CONTAINER null
    99 print "[salmon]No destination."
 
   287 jump __label82 equal ITEM LAST_ITEM
   288 label __label84
   289 jump __label86 notEqual ITEM null
+  290 label __label136
   291 print "[salmon]No item type selected for transport."
   292 printflush message1
   293 sensor ITEM SORTER @config
   294 label __label85
-    * jump __label84 always
+  295 jump __label136 equal ITEM null
   296 label __label86
   297 set LAST_ITEM ITEM
   298 set state 1

Modifications by Loop Optimization: replicate condition at line 45 (+1 instructions):
 
     1 label __label0
     2 sensor __tmp2 switch1 @enabled
     3 jump __label2 notEqual __tmp2 false
+    4 label __label137
     5 print "Unit Transport - Single"
     6 print "\n"
     7 print "Activate switch to start."
     8 print "\n"
     9 printflush message1
    10 label __label1
-    * jump __label0 always
+   11 sensor __tmp2 switch1 @enabled
+   12 jump __label137 equal __tmp2 false
    13 label __label2
    14 label __label3
    15 sensor __tmp4 @unit @dead

Modifications by Loop Optimization: replicate condition at line 317 (+1 instructions):
 
   490 label __label132
   491 sensor __tmp210 switch1 @enabled
   492 jump __label134 notEqual __tmp210 false
+  493 label __label138
   494 print "[salmon]Local or remote container became invalid."
   495 print "\n"
   496 print "[gold]Please fix and press button to reinitialize."
 
   498 printflush message1
   499 printflush message2
   500 label __label133
-    * jump __label132 always
+  501 sensor __tmp210 switch1 @enabled
+  502 jump __label138 equal __tmp210 false
   503 label __label134
   504 label __label130
   505 label __label131

Modifications by Loop Optimization: replicate condition at line 53 (+2 instructions):
 
    15 sensor __tmp4 @unit @dead
    16 op strictEqual __tmp5 __tmp4 0
    17 jump __label5 notEqual __tmp5 false
+   18 label __label139
    19 label __label6
    20 set __fn0_first_unit null
    21 label __label8
 
    74 label __label19
    75 label __label7
    76 label __label4
-    * jump __label3 always
+   77 sensor __tmp4 @unit @dead
+   78 op strictEqual __tmp5 __tmp4 0
+   79 jump __label139 equal __tmp5 false
    80 label __label5
    81 sensor UNIT_CAPACITY @unit @itemCapacity
    82 sensor __tmp25 @unit @speed

Modifications by Loop Optimization: replicate condition at line 307 (+2 instructions):
 
   471 sensor __tmp199 SORTER @dead
   472 op strictEqual __tmp200 __tmp199 0
   473 jump __label129 notEqual __tmp200 false
+  474 label __label140
   475 print "[salmon]sorter1 is missing!"
   476 print "\n"
   477 print "[gold]Please place and link sorter or inverted sorter to the processor."
 
   480 printflush message2
   481 set SORTER sorter1
   482 label __label128
-    * jump __label127 always
+  483 sensor __tmp199 SORTER @dead
+  484 op strictEqual __tmp200 __tmp199 0
+  485 jump __label140 equal __tmp200 false
   486 label __label129
   487 sensor __tmp202 SRC @dead
   488 op strictEqual __tmp203 __tmp202 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   480 printflush message2
   481 set SORTER sorter1
   482 label __label128
-    * sensor __tmp199 SORTER @dead
+  483 sensor __tmp199 sorter1 @dead
   484 op strictEqual __tmp200 __tmp199 0
   485 jump __label140 equal __tmp200 false
   486 label __label129

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   478 print "\n"
   479 printflush message1
   480 printflush message2
-    * set SORTER sorter1
   481 label __label128
   482 sensor __tmp199 sorter1 @dead
   483 op strictEqual __tmp200 __tmp199 0

Modifications by Loop Optimization: replicate condition at line 132 (+3 instructions):
 
   184 op notEqual __tmp69 sorter_type @inverted-sorter
   185 op land __tmp70 __tmp68 __tmp69
   186 jump __label55 equal __tmp70 false
+  187 label __label141
   188 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   189 print "\n"
   190 jump __label56 equal SORTER null
 
   196 set SORTER sorter1
   197 sensor sorter_type sorter1 @type
   198 label __label54
-    * jump __label53 always
+  199 op notEqual __tmp68 sorter_type @sorter
+  200 op notEqual __tmp69 sorter_type @inverted-sorter
+  201 op land __tmp70 __tmp68 __tmp69
+  202 jump __label141 notEqual __tmp70 false
   203 label __label55
   204 jump __label58 notEqual sorter_type @sorter
   205 set SHOW_REMOTE_LEVEL true

Modifications by Loop Optimization: replicate condition at line 104 (+4 instructions):
 
   145 op strictEqual __tmp48 __tmp47 0
   146 op land __tmp49 __tmp46 __tmp48
   147 jump __label43 equal __tmp49 false
+  148 label __label142
   149 ucontrol stop
   150 sensor flag @unit @flag
   151 label __label42
-    * jump __label41 always
+  152 op equal __tmp46 flag QUERY_FLAG
+  153 sensor __tmp47 @unit @dead
+  154 op strictEqual __tmp48 __tmp47 0
+  155 op land __tmp49 __tmp46 __tmp48
+  156 jump __label142 notEqual __tmp49 false
   157 label __label43
   158 jump __label44 equal flag QUERY_FLAG
   159 op idiv position flag 100

Modifications by Loop Optimization: replicate condition at line 113 (+5 instructions):
 
   166 op equal __tmp59 __tmp58 0
   167 op land __tmp60 __tmp57 __tmp59
   168 jump __label48 equal __tmp60 false
+  169 label __label143
   170 ucontrol approach CORE_X CORE_Y 6
   171 label __label47
-    * jump __label46 always
+  172 ucontrol within CORE_X CORE_Y 8 __tmp56
+  173 op equal __tmp57 __tmp56 false
+  174 sensor __tmp58 @unit @dead
+  175 op equal __tmp59 __tmp58 0
+  176 op land __tmp60 __tmp57 __tmp59
+  177 jump __label143 notEqual __tmp60 false
   178 label __label48
   179 ucontrol getBlock CORE_X CORE_Y b_type CORE 0
   180 jump __label49 equal b_type @vault

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-4 instructions):
 
   126 label __label28
   127 jump __label27 always
   128 label __label29
-    * jump __label39 notEqual 0 0
   129 print "[gold]Locating core..."
   130 printflush message1
   131 ulocate building core false @copper CORE_X CORE_Y 0 CORE
 
   221 op idiv LOAD_LEVEL __tmp79 100
   222 op mul __tmp81 dst_capacity 100
   223 op idiv DROP_LEVEL __tmp81 100
-    * jump __label60 notEqual 0 0
   224 jump __label61 always
   225 label __label60
   226 label __label61
 
   238 op idiv __tmp92 __tmp91 100
   239 op mul __tmp94 true UNIT_CAPACITY
   240 op add DROP_LEVEL __tmp92 __tmp94
-    * jump __label62 notEqual 0 0
   241 jump __label63 always
   242 label __label62
   243 label __label63
   244 set DIRECTION "[] to core"
   245 label __label59
-    * jump __label64 notEqual 0 0
   246 jump __label65 always
   247 label __label64
   248 label __label65
 
   393 print "Local items: [gold]"
   394 print __tmp158
   395 print "[]"
-    * jump __label109 greaterThanEq 100 100
+  396 jump __label109 always
   397 print " (limit [orange]"
   398 print LOCAL_MARGIN
   399 print "[])"
 
   404 print "\nRemote items: [gold]"
   405 print __tmp162
   406 print "[]"
-    * jump __label113 greaterThanEq 100 100
+  407 jump __label113 always
   408 print " (limit [orange]"
   409 print REMOTE_MARGIN
   410 print "[])"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
   221 op idiv LOAD_LEVEL __tmp79 100
   222 op mul __tmp81 dst_capacity 100
   223 op idiv DROP_LEVEL __tmp81 100
-    * jump __label61 always
   224 label __label60
   225 label __label61
   226 set DIRECTION "[] from core"
 
   237 op idiv __tmp92 __tmp91 100
   238 op mul __tmp94 true UNIT_CAPACITY
   239 op add DROP_LEVEL __tmp92 __tmp94
-    * jump __label63 always
   240 label __label62
   241 label __label63
   242 set DIRECTION "[] to core"
   243 label __label59
-    * jump __label65 always
   244 label __label64
   245 label __label65
   246 sensor SRC_X SRC @x

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   217 set DST CONTAINER
   218 sensor src_capacity CORE @itemCapacity
   219 sensor dst_capacity CONTAINER @itemCapacity
-    * op mul __tmp79 src_capacity 0
+  220 set __tmp79 0
   221 op idiv LOAD_LEVEL __tmp79 100
   222 op mul __tmp81 dst_capacity 100
   223 op idiv DROP_LEVEL __tmp81 100
 
   231 set DST CORE
   232 sensor src_capacity CONTAINER @itemCapacity
   233 sensor dst_capacity CORE @itemCapacity
-    * op mul __tmp89 src_capacity 0
+  234 set __tmp89 0
   235 op idiv LOAD_LEVEL __tmp89 100
   236 op mul __tmp91 dst_capacity 100
   237 op idiv __tmp92 __tmp91 100

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   218 sensor src_capacity CORE @itemCapacity
   219 sensor dst_capacity CONTAINER @itemCapacity
   220 set __tmp79 0
-    * op idiv LOAD_LEVEL __tmp79 100
+  221 op idiv LOAD_LEVEL 0 100
   222 op mul __tmp81 dst_capacity 100
   223 op idiv DROP_LEVEL __tmp81 100
   224 label __label60
 
   232 sensor src_capacity CONTAINER @itemCapacity
   233 sensor dst_capacity CORE @itemCapacity
   234 set __tmp89 0
-    * op idiv LOAD_LEVEL __tmp89 100
+  235 op idiv LOAD_LEVEL 0 100
   236 op mul __tmp91 dst_capacity 100
   237 op idiv __tmp92 __tmp91 100
   238 op mul __tmp94 true UNIT_CAPACITY
 
   338 ucontrol within SRC_X SRC_Y 8 __tmp138
   339 jump __label97 equal __tmp138 false
   340 sensor __tmp140 SRC ITEM
-    * op sub __tmp141 __tmp140 LOAD_LEVEL
+  341 op sub __tmp141 __tmp140 0
   342 op max max_load __tmp141 0
   343 ucontrol itemTake SRC ITEM max_load
   344 sensor __tmp143 @unit @totalItems

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
   217 set DST CONTAINER
   218 sensor src_capacity CORE @itemCapacity
   219 sensor dst_capacity CONTAINER @itemCapacity
-    * set __tmp79 0
-    * op idiv LOAD_LEVEL 0 100
   220 op mul __tmp81 dst_capacity 100
   221 op idiv DROP_LEVEL __tmp81 100
   222 label __label60
 
   229 set DST CORE
   230 sensor src_capacity CONTAINER @itemCapacity
   231 sensor dst_capacity CORE @itemCapacity
-    * set __tmp89 0
-    * op idiv LOAD_LEVEL 0 100
   232 op mul __tmp91 dst_capacity 100
   233 op idiv __tmp92 __tmp91 100
   234 op mul __tmp94 true UNIT_CAPACITY

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1:
 
   334 ucontrol within SRC_X SRC_Y 8 __tmp138
   335 jump __label97 equal __tmp138 false
   336 sensor __tmp140 SRC ITEM
-    * op sub __tmp141 __tmp140 0
+  337 set __tmp141 __tmp140
   338 op max max_load __tmp141 0
   339 ucontrol itemTake SRC ITEM max_load
   340 sensor __tmp143 @unit @totalItems

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1:
 
   335 jump __label97 equal __tmp138 false
   336 sensor __tmp140 SRC ITEM
   337 set __tmp141 __tmp140
-    * op max max_load __tmp141 0
+  338 op max max_load __tmp140 0
   339 ucontrol itemTake SRC ITEM max_load
   340 sensor __tmp143 @unit @totalItems
   341 jump __label99 lessThan __tmp143 UNIT_CAPACITY

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 2 (-1 instructions):
 
   334 ucontrol within SRC_X SRC_Y 8 __tmp138
   335 jump __label97 equal __tmp138 false
   336 sensor __tmp140 SRC ITEM
-    * set __tmp141 __tmp140
   337 op max max_load __tmp140 0
   338 ucontrol itemTake SRC ITEM max_load
   339 sensor __tmp143 @unit @totalItems

Modifications by Final phase, Jump Straightening, iteration 1 (-5 instructions):
 
    34 label __label10
    35 label __label13
    36 sensor __tmp11 @unit @controller
-    * jump __label16 notEqual __tmp11 @this
-    * jump __label7 always
+   37 jump __label7 equal __tmp11 @this
    38 label __label16
    39 label __label17
    40 ubind @mega
 
   442 print "\n"
   443 printflush message1
   444 sensor __tmp185 switch1 @enabled
-    * jump __label119 notEqual __tmp185 0
-    * jump __label70 always
+  445 jump __label70 equal __tmp185 0
   446 label __label119
   447 label __label120
   448 sensor __tmp188 SRC @dead
-    * jump __label121 equal __tmp188 0
-    * jump __label70 always
+  449 jump __label70 notEqual __tmp188 0
   450 label __label121
   451 label __label122
   452 sensor __tmp191 DST @dead
-    * jump __label123 equal __tmp191 0
-    * jump __label70 always
+  453 jump __label70 notEqual __tmp191 0
   454 label __label123
   455 label __label124
   456 sensor __tmp194 SORTER @dead
-    * jump __label125 equal __tmp194 0
-    * jump __label70 always
+  457 jump __label70 notEqual __tmp194 0
   458 label __label125
   459 label __label126
   460 jump __label108 always

Modifications by Final phase, Jump Threading, iteration 1:
 
    57 jump __label24 always
    58 label __label23
    59 sensor __tmp21 @unit @controlled
-    * jump __label25 equal __tmp21 0
+   60 jump __label19 equal __tmp21 0
    61 print "[salmon]Looking for a free "
    62 print @mega
    63 print "..."
 
   108 sensor __tmp37 DROP_TARGET @itemCapacity
   109 op lessThan __tmp38 __tmp37 300
   110 op land __tmp39 __tmp36 __tmp38
-    * jump __label37 equal __tmp39 false
+  111 jump __label29 equal __tmp39 false
   112 print "Destination: "
   113 print CONTAINER
   114 print "\n"
 
   273 jump __label79 always
   274 label __label78
   275 sensor __tmp118 @unit @controlled
-    * jump __label80 equal __tmp118 0
+  276 jump __label74 equal __tmp118 0
   277 print "[salmon]Looking for a free "
   278 print @mega
   279 print "..."
 
   338 sensor __tmp143 @unit @totalItems
   339 jump __label99 lessThan __tmp143 UNIT_CAPACITY
   340 set state 3
-    * jump __label100 always
+  341 jump __label98 always
   342 label __label99
   343 set MSG "\nLoading items: [green]"
   344 label __label100
 
   361 jump __label105 greaterThan __tmp153 0
   362 set state 2
   363 ucontrol approach SRC_X SRC_Y 6
-    * jump __label106 always
+  364 jump __label104 always
   365 label __label105
   366 set MSG "\nDropping items: [green]"
   367 label __label106

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-48 instructions):
 
    62 print @mega
    63 print "..."
    64 jump __label26 always
-    * label __label25
-    * jump __label19 always
    65 label __label26
    66 label __label24
    67 printflush message1
    68 label __label21
    69 jump __label20 always
-    * label __label22
    70 label __label19
    71 label __label7
    72 label __label4
 
   114 print "\n"
   115 print "[salmon]Item dump must be a container or a vault!"
   116 jump __label38 always
-    * label __label37
-    * jump __label29 always
   117 label __label38
   118 label __label36
   119 printflush message1
 
   124 printflush message1
   125 ulocate building core false @copper CORE_X CORE_Y 0 CORE
   126 jump __label40 always
-    * label __label39
-    * print "[gold]Locating vault #"
-    * print LINK_ID
-    * print "..."
-    * printflush message1
-    * op add QUERY_FLAG 99999900 LINK_ID
-    * set flag QUERY_FLAG
-    * ucontrol flag flag
-    * label __label41
-    * op equal __tmp46 flag QUERY_FLAG
-    * sensor __tmp47 @unit @dead
-    * op strictEqual __tmp48 __tmp47 0
-    * op land __tmp49 __tmp46 __tmp48
-    * jump __label43 equal __tmp49 false
-    * label __label142
-    * ucontrol stop
-    * sensor flag @unit @flag
-    * label __label42
-    * op equal __tmp46 flag QUERY_FLAG
-    * sensor __tmp47 @unit @dead
-    * op strictEqual __tmp48 __tmp47 0
-    * op land __tmp49 __tmp46 __tmp48
-    * jump __label142 notEqual __tmp49 false
-    * label __label43
-    * jump __label44 equal flag QUERY_FLAG
-    * op idiv position flag 100
-    * op mod CORE_X position @mapw
-    * op idiv CORE_Y position @mapw
-    * label __label46
-    * ucontrol within CORE_X CORE_Y 8 __tmp56
-    * op equal __tmp57 __tmp56 false
-    * sensor __tmp58 @unit @dead
-    * op equal __tmp59 __tmp58 0
-    * op land __tmp60 __tmp57 __tmp59
-    * jump __label48 equal __tmp60 false
-    * label __label143
-    * ucontrol approach CORE_X CORE_Y 6
-    * label __label47
-    * ucontrol within CORE_X CORE_Y 8 __tmp56
-    * op equal __tmp57 __tmp56 false
-    * sensor __tmp58 @unit @dead
-    * op equal __tmp59 __tmp58 0
-    * op land __tmp60 __tmp57 __tmp59
-    * jump __label143 notEqual __tmp60 false
-    * label __label48
-    * ucontrol getBlock CORE_X CORE_Y b_type CORE 0
-    * jump __label49 equal b_type @vault
-    * set CORE null
-    * label __label49
-    * label __label50
-    * label __label44
-    * label __label45
   127 label __label40
   128 jump __label51 notEqual CORE null
   129 end
 
   221 print @mega
   222 print "..."
   223 jump __label81 always
-    * label __label80
-    * jump __label74 always
   224 label __label81
   225 label __label79
   226 printflush message1
   227 label __label76
   228 jump __label75 always
-    * label __label77
   229 label __label74
   230 ucontrol flag 1
   231 set state 1
 
   325 print __tmp158
   326 print "[]"
   327 jump __label109 always
-    * print " (limit [orange]"
-    * print LOCAL_MARGIN
-    * print "[])"
   328 label __label109
   329 label __label110
   330 jump __label111 equal SHOW_REMOTE_LEVEL false
 
   333 print __tmp162
   334 print "[]"
   335 jump __label113 always
-    * print " (limit [orange]"
-    * print REMOTE_MARGIN
-    * print "[])"
   336 label __label113
   337 label __label114
   338 label __label111

Modifications by Final phase, Dead Code Elimination, iteration 1 (-2 instructions):
 
   157 set SHOW_REMOTE_LEVEL true
   158 set SRC CORE
   159 set DST CONTAINER
-    * sensor src_capacity CORE @itemCapacity
   160 sensor dst_capacity CONTAINER @itemCapacity
   161 op mul __tmp81 dst_capacity 100
   162 op idiv DROP_LEVEL __tmp81 100
 
   168 op greaterThan SHOW_REMOTE_LEVEL 0 0
   169 set SRC CONTAINER
   170 set DST CORE
-    * sensor src_capacity CONTAINER @itemCapacity
   171 sensor dst_capacity CORE @itemCapacity
   172 op mul __tmp91 dst_capacity 100
   173 op idiv __tmp92 __tmp91 100

Modifications by Final phase, Single Step Elimination, iteration 1 (-7 instructions):
 
    61 print "[salmon]Looking for a free "
    62 print @mega
    63 print "..."
-    * jump __label26 always
    64 label __label26
    65 label __label24
    66 printflush message1
 
   112 print DROP_TARGET
   113 print "\n"
   114 print "[salmon]Item dump must be a container or a vault!"
-    * jump __label38 always
   115 label __label38
   116 label __label36
   117 printflush message1
 
   121 print "[gold]Locating core..."
   122 printflush message1
   123 ulocate building core false @copper CORE_X CORE_Y 0 CORE
-    * jump __label40 always
   124 label __label40
   125 jump __label51 notEqual CORE null
   126 end
 
   215 print "[salmon]Looking for a free "
   216 print @mega
   217 print "..."
-    * jump __label81 always
   218 label __label81
   219 label __label79
   220 printflush message1
 
   318 print "Local items: [gold]"
   319 print __tmp158
   320 print "[]"
-    * jump __label109 always
   321 label __label109
   322 label __label110
   323 jump __label111 equal SHOW_REMOTE_LEVEL false
 
   325 print "\nRemote items: [gold]"
   326 print __tmp162
   327 print "[]"
-    * jump __label113 always
   328 label __label113
   329 label __label114
   330 label __label111
 
   432 label __label134
   433 label __label130
   434 label __label131
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-9 instructions):
 
     2 sensor __tmp2 switch1 @enabled
     3 jump __label2 notEqual __tmp2 false
     4 label __label137
-    * print "Unit Transport - Single"
-    * print "\n"
-    * print "Activate switch to start."
-    * print "\n"
+    5 print "Unit Transport - Single\n"
+    6 print "Activate switch to start.\n"
     7 printflush message1
     8 label __label1
     9 sensor __tmp2 switch1 @enabled
 
    94 jump __label135 greaterThan n 0
    95 label __label32
    96 jump __label35 notEqual CONTAINER null
-    * print "[salmon]No destination."
-    * print "\n"
+   97 print "[salmon]No destination.\n"
    98 jump __label36 always
    99 label __label35
   100 op notEqual __tmp36 DROP_TARGET null
 
   104 jump __label29 equal __tmp39 false
   105 print "Destination: "
   106 print CONTAINER
-    * print "\n"
-    * print "Item dump: "
+  107 print "\nItem dump: "
   108 print DROP_TARGET
   109 print "\n"
   110 print "[salmon]Item dump must be a container or a vault!"
 
   308 print "Moving [green]"
   309 print ITEM
   310 print DIRECTION
-    * print ""
-    * print "\n"
   311 sensor __tmp158 CONTAINER ITEM
-    * print "Local items: [gold]"
+  312 print "\nLocal items: [gold]"
   313 print __tmp158
   314 print "[]"
   315 label __label109
 
   326 sensor __tmp165 @unit @totalItems
   327 print MSG
   328 print __tmp165
-    * print "[]"
-    * print "\n"
+  329 print "[]\n"
   330 jump __label115 notEqual show_state 2
   331 sensor __tmp168 @unit @x
   332 op sub __tmp169 SRC_X __tmp168
 
   357 op floor __tmp184 loop_time
   358 print "[lightgray]Loop time: "
   359 print __tmp184
-    * print " ms[]"
-    * print "\n"
+  360 print " ms[]\n"
   361 printflush message1
   362 sensor __tmp185 switch1 @enabled
   363 jump __label70 equal __tmp185 0
 
   388 op strictEqual __tmp200 __tmp199 0
   389 jump __label129 notEqual __tmp200 false
   390 label __label140
-    * print "[salmon]sorter1 is missing!"
-    * print "\n"
+  391 print "[salmon]sorter1 is missing!\n"
   392 print "[gold]Please place and link sorter or inverted sorter to the processor."
   393 print "\n"
   394 printflush message1

Final code before resolving virtual instructions:

set MSG null
sensor __tmp2 switch1 @enabled
jump __label2 notEqual __tmp2 false
label __label137
print "Unit Transport - Single\n"
print "Activate switch to start.\n"
printflush message1
sensor __tmp2 switch1 @enabled
jump __label137 equal __tmp2 false
label __label2
sensor __tmp4 @unit @dead
op strictEqual __tmp5 __tmp4 0
jump __label5 notEqual __tmp5 false
label __label139
set __fn0_first_unit null
label __label8
ubind @mega
jump __label11 equal @unit null
set __fn0_first_unit @unit
jump __label10 always 0 0
label __label11
print "[salmon]No unit of type "
print @mega
print " found. 1"
printflush message1
jump __label8 always 0 0
label __label10
label __label13
sensor __tmp11 @unit @controller
jump __label7 equal __tmp11 @this
ubind @mega
print "[gold]Looking for old unit..."
printflush message1
op notEqual __tmp14 @unit __fn0_first_unit
sensor __tmp15 __fn0_first_unit @dead
op strictEqual __tmp16 __tmp15 0
op land __tmp17 __tmp14 __tmp16
jump __label13 notEqual __tmp17 false
label __label20
ubind @mega
jump __label23 notEqual @unit null
print "[salmon]No unit of type "
print @mega
print " found. 2"
jump __label24 always 0 0
label __label23
sensor __tmp21 @unit @controlled
jump __label19 equal __tmp21 0
print "[salmon]Looking for a free "
print @mega
print "..."
label __label24
printflush message1
jump __label20 always 0 0
label __label19
label __label7
sensor __tmp4 @unit @dead
op strictEqual __tmp5 __tmp4 0
jump __label139 equal __tmp5 false
label __label5
sensor UNIT_CAPACITY @unit @itemCapacity
sensor __tmp25 @unit @speed
op div SPEED_SEC __tmp25 10
ucontrol flag 1 0 0 0 0
label __label27
set CONTAINER null
set DROP_TARGET null
set n @links
jump __label32 lessThanEq n 0
label __label135
op sub n n 1
getlink block n
sensor __tmp31 block @itemCapacity
jump __label33 lessThanEq __tmp31 0
set DROP_TARGET CONTAINER
set CONTAINER block
label __label33
jump __label135 greaterThan n 0
label __label32
jump __label35 notEqual CONTAINER null
print "[salmon]No destination.\n"
jump __label36 always 0 0
label __label35
op notEqual __tmp36 DROP_TARGET null
sensor __tmp37 DROP_TARGET @itemCapacity
op lessThan __tmp38 __tmp37 300
op land __tmp39 __tmp36 __tmp38
jump __label29 equal __tmp39 false
print "Destination: "
print CONTAINER
print "\nItem dump: "
print DROP_TARGET
print "\n"
print "[salmon]Item dump must be a container or a vault!"
label __label36
printflush message1
jump __label27 always 0 0
label __label29
print "[gold]Locating core..."
printflush message1
ulocate building core false @copper CORE_X CORE_Y 0 CORE
jump __label51 notEqual CORE null
end
label __label51
set SORTER sorter1
sensor sorter_type sorter1 @type
op notEqual __tmp68 sorter_type @sorter
op notEqual __tmp69 sorter_type @inverted-sorter
op land __tmp70 __tmp68 __tmp69
jump __label55 equal __tmp70 false
label __label141
print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
print "\n"
jump __label56 equal SORTER null
print "Block found: "
print SORTER
label __label56
printflush message1
set SORTER sorter1
sensor sorter_type sorter1 @type
op notEqual __tmp68 sorter_type @sorter
op notEqual __tmp69 sorter_type @inverted-sorter
op land __tmp70 __tmp68 __tmp69
jump __label141 notEqual __tmp70 false
label __label55
jump __label58 notEqual sorter_type @sorter
set SHOW_REMOTE_LEVEL true
set SRC CORE
set DST CONTAINER
sensor dst_capacity CONTAINER @itemCapacity
op mul __tmp81 dst_capacity 100
op idiv DROP_LEVEL __tmp81 100
set DIRECTION "[] from core"
jump __label59 always 0 0
label __label58
op greaterThan SHOW_REMOTE_LEVEL 0 0
set SRC CONTAINER
set DST CORE
sensor dst_capacity CORE @itemCapacity
op mul __tmp91 dst_capacity 100
op idiv __tmp92 __tmp91 100
op mul __tmp94 true UNIT_CAPACITY
op add DROP_LEVEL __tmp92 __tmp94
set DIRECTION "[] to core"
label __label59
sensor SRC_X SRC @x
sensor SRC_Y SRC @y
sensor DST_X DST @x
sensor DST_Y DST @y
jump __label66 notEqual DROP_TARGET null
set DROP_TARGET CORE
set DROP_X CORE_X
set DROP_Y CORE_Y
jump __label67 always 0 0
label __label66
sensor DROP_X DROP_TARGET @x
sensor DROP_Y DROP_TARGET @y
label __label67
set LAST_ITEM @mono
set iter 0
set loop_time 0
set state 1
ucontrol stop 0 0 0 0 0
label __label68
set start @time
sensor __tmp109 @unit @dead
op strictEqual __tmp110 __tmp109 0
sensor __tmp111 @unit @controller
op notEqual __tmp112 __tmp111 @this
jump __label71 greaterThan __tmp110 __tmp112
label __label75
ubind @mega
jump __label78 notEqual @unit null
print "[salmon]No unit of type "
print @mega
print " found. 2"
jump __label79 always 0 0
label __label78
sensor __tmp118 @unit @controlled
jump __label74 equal __tmp118 0
print "[salmon]Looking for a free "
print @mega
print "..."
label __label79
printflush message1
jump __label75 always 0 0
label __label74
ucontrol flag 1 0 0 0 0
set state 1
label __label71
sensor ITEM SORTER @config
jump __label82 equal ITEM LAST_ITEM
jump __label86 notEqual ITEM null
label __label136
print "[salmon]No item type selected for transport."
printflush message1
sensor ITEM SORTER @config
jump __label136 equal ITEM null
label __label86
set LAST_ITEM ITEM
set state 1
label __label82
set show_state 0
jump __label87 notEqual state 1
sensor __tmp128 @unit @firstItem
jump __label89 notEqual __tmp128 ITEM
set state 3
jump __label90 always 0 0
label __label89
sensor __tmp131 @unit @totalItems
jump __label91 notEqual __tmp131 0
set state 2
jump __label92 always 0 0
label __label91
set MSG "\nUnloading previous items: [green]"
ucontrol approach DROP_X DROP_Y 6 0 0
ucontrol within DROP_X DROP_Y 8 __tmp134 0
jump __label93 equal __tmp134 false
ucontrol itemDrop DROP_TARGET UNIT_CAPACITY 0 0 0
label __label93
label __label92
label __label90
label __label87
jump __label95 notEqual state 2
ucontrol within SRC_X SRC_Y 8 __tmp138 0
jump __label97 equal __tmp138 false
sensor __tmp140 SRC ITEM
op max max_load __tmp140 0
ucontrol itemTake SRC ITEM max_load 0 0
sensor __tmp143 @unit @totalItems
jump __label99 lessThan __tmp143 UNIT_CAPACITY
set state 3
jump __label98 always 0 0
label __label99
set MSG "\nLoading items: [green]"
jump __label98 always 0 0
label __label97
ucontrol approach SRC_X SRC_Y 6 0 0
set MSG "\nGoing to source: [green]"
set show_state 2
label __label98
label __label95
jump __label101 notEqual state 3
ucontrol within DST_X DST_Y 8 __tmp148 0
jump __label103 equal __tmp148 false
sensor __tmp150 DST ITEM
op sub __tmp151 DROP_LEVEL __tmp150
op max max_drop __tmp151 0
ucontrol itemDrop DST max_drop 0 0 0
sensor __tmp153 @unit @totalItems
jump __label105 greaterThan __tmp153 0
set state 2
ucontrol approach SRC_X SRC_Y 6 0 0
jump __label104 always 0 0
label __label105
set MSG "\nDropping items: [green]"
jump __label104 always 0 0
label __label103
ucontrol approach DST_X DST_Y 6 0 0
set MSG "\nGoing to destination: [green]"
set show_state 3
label __label104
label __label101
jump __label107 lessThanEq iter 3
set iter 0
print "Moving [green]"
print ITEM
print DIRECTION
sensor __tmp158 CONTAINER ITEM
print "\nLocal items: [gold]"
print __tmp158
print "[]"
jump __label111 equal SHOW_REMOTE_LEVEL false
sensor __tmp162 CORE ITEM
print "\nRemote items: [gold]"
print __tmp162
print "[]"
label __label111
sensor __tmp165 @unit @totalItems
print MSG
print __tmp165
print "[]\n"
jump __label115 notEqual show_state 2
sensor __tmp168 @unit @x
op sub __tmp169 SRC_X __tmp168
sensor __tmp170 @unit @y
op sub __tmp171 SRC_Y __tmp170
op len __tmp172 __tmp169 __tmp171
op idiv __tmp173 __tmp172 SPEED_SEC
op div __tmp174 __tmp173 10
print "[]  arriving in [gold]"
print __tmp174
print " sec[]\n"
jump __label116 always 0 0
label __label115
jump __label117 notEqual show_state 3
sensor __tmp177 @unit @x
op sub __tmp178 DST_X __tmp177
sensor __tmp179 @unit @y
op sub __tmp180 DST_Y __tmp179
op len __tmp181 __tmp178 __tmp180
op idiv __tmp182 __tmp181 SPEED_SEC
op div __tmp183 __tmp182 10
print "[]  arriving in [gold]"
print __tmp183
print " sec[]\n"
label __label117
label __label116
op floor __tmp184 loop_time 0
print "[lightgray]Loop time: "
print __tmp184
print " ms[]\n"
printflush message1
sensor __tmp185 switch1 @enabled
jump __label70 equal __tmp185 0
sensor __tmp188 SRC @dead
jump __label70 notEqual __tmp188 0
sensor __tmp191 DST @dead
jump __label70 notEqual __tmp191 0
sensor __tmp194 SORTER @dead
jump __label70 notEqual __tmp194 0
jump __label108 always 0 0
label __label107
op add iter iter 1
label __label108
op sub loop_time @time start
jump __label68 always 0 0
label __label70
sensor __tmp199 SORTER @dead
op strictEqual __tmp200 __tmp199 0
jump __label129 notEqual __tmp200 false
label __label140
print "[salmon]sorter1 is missing!\n"
print "[gold]Please place and link sorter or inverted sorter to the processor."
print "\n"
printflush message1
printflush message2
sensor __tmp199 sorter1 @dead
op strictEqual __tmp200 __tmp199 0
jump __label140 equal __tmp200 false
label __label129
sensor __tmp202 SRC @dead
op strictEqual __tmp203 __tmp202 0
op equal __tmp204 __tmp203 false
sensor __tmp205 DST @dead
op strictEqual __tmp206 __tmp205 0
op equal __tmp207 __tmp206 false
op or __tmp208 __tmp204 __tmp207
jump __label130 equal __tmp208 false
control enabled switch1 false 0 0 0
sensor __tmp210 switch1 @enabled
jump __label134 notEqual __tmp210 false
label __label138
print "[salmon]Local or remote container became invalid."
print "\n"
print "[gold]Please fix and press button to reinitialize."
print "\n"
printflush message1
printflush message2
sensor __tmp210 switch1 @enabled
jump __label138 equal __tmp210 false
label __label134
label __label130
