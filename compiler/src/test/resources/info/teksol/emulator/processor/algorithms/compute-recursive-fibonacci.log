    44 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (2 iterations).
     4 instructions eliminated by Data Flow Optimization (4 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
     4 instructions eliminated by Stack Optimization.
    31 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
    27 pop bank1 __tmp4
    28 pop bank1 __fn0_n
    29 set __tmp6 __fn0retval
-    * op add __tmp7 __tmp4 __tmp6
-    * set __tmp2 __tmp7
+   30 op add __tmp2 __tmp4 __tmp6
    31 label __label4
    32 set __fn0retval __tmp2
    33 label __label2

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
     6 stop
     7 end
     8 label __label0
-    * op lessThan __tmp1 __fn0_n 2
-    * jump __label3 equal __tmp1 false
+    9 jump __label3 greaterThanEq __fn0_n 2
    10 set __tmp2 __fn0_n
    11 jump __label4 always
    12 label __label3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     2 callrec bank1 __label0 __label1 __fn0retval
     3 label __label1
     4 set __tmp0 __fn0retval
-    * assertequals 55 __tmp0 "fib(10)"
+    5 assertequals 55 __fn0retval "fib(10)"
     6 stop
     7 end
     8 label __label0
 
    12 label __label3
    13 op sub __tmp3 __fn0_n 1
    14 push bank1 __fn0_n
-    * set __fn0_n __tmp3
+   15 op sub __fn0_n __fn0_n 1
    16 callrec bank1 __label0 __label5 __fn0retval
    17 label __label5
    18 pop bank1 __fn0_n
 
    20 op sub __tmp5 __fn0_n 2
    21 push bank1 __fn0_n
    22 push bank1 __tmp4
-    * set __fn0_n __tmp5
+   23 op sub __fn0_n __fn0_n 2
    24 callrec bank1 __label0 __label6 __fn0retval
    25 label __label6
    26 pop bank1 __tmp4
    27 pop bank1 __fn0_n
    28 set __tmp6 __fn0retval
-    * op add __tmp2 __tmp4 __tmp6
+   29 op add __tmp2 __tmp4 __fn0retval
    30 label __label4
    31 set __fn0retval __tmp2
    32 label __label2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
     1 set __fn0_n 10
     2 callrec bank1 __label0 __label1 __fn0retval
     3 label __label1
-    * set __tmp0 __fn0retval
     4 assertequals 55 __fn0retval "fib(10)"
     5 stop
     6 end
 
     9 set __tmp2 __fn0_n
    10 jump __label4 always
    11 label __label3
-    * op sub __tmp3 __fn0_n 1
    12 push bank1 __fn0_n
    13 op sub __fn0_n __fn0_n 1
    14 callrec bank1 __label0 __label5 __fn0retval
    15 label __label5
    16 pop bank1 __fn0_n
    17 set __tmp4 __fn0retval
-    * op sub __tmp5 __fn0_n 2
    18 push bank1 __fn0_n
    19 push bank1 __tmp4
    20 op sub __fn0_n __fn0_n 2
 
    22 label __label6
    23 pop bank1 __tmp4
    24 pop bank1 __fn0_n
-    * set __tmp6 __fn0retval
    25 op add __tmp2 __tmp4 __fn0retval
    26 label __label4
    27 set __fn0retval __tmp2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
     5 stop
     6 end
     7 label __label0
-    * jump __label3 greaterThanEq __fn0_n 2
-    * set __tmp2 __fn0_n
-    * jump __label4 always
+    8 set __fn0retval __fn0_n
+    9 jump __label4 lessThan __fn0_n 2
    10 label __label3
    11 push bank1 __fn0_n
    12 op sub __fn0_n __fn0_n 1
 
    21 label __label6
    22 pop bank1 __tmp4
    23 pop bank1 __fn0_n
-    * op add __tmp2 __tmp4 __fn0retval
+   24 op add __fn0retval __tmp4 __fn0retval
    25 label __label4
-    * set __fn0retval __tmp2
    26 label __label2
    27 return bank1
    28 end

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    25 label __label4
    26 label __label2
    27 return bank1
-    * end

Modifications by Final phase, Stack Optimization, iteration 1 (-4 instructions):
 
    14 label __label5
    15 pop bank1 __fn0_n
    16 set __tmp4 __fn0retval
-    * push bank1 __fn0_n
    17 push bank1 __tmp4
    18 op sub __fn0_n __fn0_n 2
    19 callrec bank1 __label0 __label6 __fn0retval
    20 label __label6
    21 pop bank1 __tmp4
-    * pop bank1 __fn0_n
    22 op add __fn0retval __tmp4 __fn0retval
    23 label __label4
    24 label __label2

Final code before resolving virtual instructions:

set __sp 0
set __fn0_n 10
callrec bank1 __label0 __label1 __fn0retval
label __label1
assertequals 55 __fn0retval "fib(10)"
stop
end
label __label0
set __fn0retval __fn0_n
jump __label4 lessThan __fn0_n 2
push bank1 __fn0_n
op sub __fn0_n __fn0_n 1
callrec bank1 __label0 __label5 __fn0retval
label __label5
pop bank1 __fn0_n
set __tmp4 __fn0retval
push bank1 __tmp4
op sub __fn0_n __fn0_n 2
callrec bank1 __label0 __label6 __fn0retval
label __label6
pop bank1 __tmp4
op add __fn0retval __tmp4 __fn0retval
label __label4
return bank1
