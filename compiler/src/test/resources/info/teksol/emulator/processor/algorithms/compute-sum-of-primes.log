   115 instructions before optimizations.
    17 instructions eliminated by Temp Variables Elimination.
    15 instructions eliminated by Dead Code Elimination (2 passes, 5 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     6 instructions eliminated by Jump Optimization (4 iterations).
    11 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
   564 instructions eliminated by Data Flow Optimization (9 passes, 30 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   938 instructions added by Loop Unrolling (12 iterations).
     7 loops unrolled by Loop Unrolling.
    17 instructions added by Function Inlining (12 iterations).
     5 function calls inlined by Function Inlining.
    16 instructions eliminated by Unreachable Code Elimination.
   439 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 938):
    Loop Unrolling: unroll loop at line 29                       cost    33, benefit      300.0, efficiency        9.1
    Function Inlining: inline function testAndSetMultiples       cost    16, benefit      200.0, efficiency       12.5
  * Function Inlining: inline function getBit                    cost     7, benefit      350.0, efficiency       50.0 (+2 instructions)
    Function Inlining: inline function call at line 30           cost    17, benefit      100.0, efficiency        5.9
    Function Inlining: inline function call at line 34           cost    17, benefit      100.0, efficiency        5.9
    Function Inlining: inline function call at line 41           cost     4, benefit       87.5, efficiency       21.9
    Function Inlining: inline function call at line 45           cost     4, benefit       87.5, efficiency       21.9
    Function Inlining: inline function call at line 15           cost     4, benefit      175.0, efficiency       43.8

Pass 1: speed optimization selection (cost limit 936):
    Loop Unrolling: unroll loop at line 29                       cost    33, benefit      300.0, efficiency        9.1
  * Function Inlining: inline function testAndSetMultiples       cost    19, benefit      200.0, efficiency       10.5 (+7 instructions)
    Function Inlining: inline function call at line 30           cost    20, benefit      100.0, efficiency        5.0
    Function Inlining: inline function call at line 34           cost    20, benefit      100.0, efficiency        5.0

Pass 1: speed optimization selection (cost limit 929):
  * Loop Unrolling: unroll loop at line 29                       cost   123, benefit      300.0, efficiency        2.4 (+83 instructions)

Pass 1: speed optimization selection (cost limit 846):
    Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3
    Loop Unrolling: unroll loop at line 17                       cost   188, benefit      825.0, efficiency        4.4
    Loop Unrolling: unroll loop at line 17                       cost    98, benefit      450.0, efficiency        4.6
    Loop Unrolling: unroll loop at line 17                       cost    68, benefit      325.0, efficiency        4.8
    Loop Unrolling: unroll loop at line 17                       cost    32, benefit      175.0, efficiency        5.5
  * Loop Unrolling: unroll loop at line 17                       cost    14, benefit      100.0, efficiency        7.1 (+2 instructions)
  ! Loop Unrolling: unroll loop at line 40                       cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 844):
    Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3
    Loop Unrolling: unroll loop at line 17                       cost   188, benefit      825.0, efficiency        4.4
    Loop Unrolling: unroll loop at line 17                       cost    98, benefit      450.0, efficiency        4.6
    Loop Unrolling: unroll loop at line 17                       cost    68, benefit      325.0, efficiency        4.8
  * Loop Unrolling: unroll loop at line 17                       cost    32, benefit      175.0, efficiency        5.5 (+11 instructions)
  ! Loop Unrolling: unroll loop at line 40                       cost  1322, benefit     5925.0, efficiency        4.5

Pass 1: speed optimization selection (cost limit 833):
    Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3
    Loop Unrolling: unroll loop at line 17                       cost   188, benefit      825.0, efficiency        4.4
    Loop Unrolling: unroll loop at line 17                       cost    98, benefit      450.0, efficiency        4.6
  * Loop Unrolling: unroll loop at line 17                       cost    68, benefit      325.0, efficiency        4.8 (+29 instructions)

Pass 1: speed optimization selection (cost limit 804):
    Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3
    Loop Unrolling: unroll loop at line 17                       cost   188, benefit      825.0, efficiency        4.4
  * Loop Unrolling: unroll loop at line 17                       cost    98, benefit      450.0, efficiency        4.6 (+44 instructions)

Pass 1: speed optimization selection (cost limit 760):
    Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3
  * Loop Unrolling: unroll loop at line 17                       cost   188, benefit      825.0, efficiency        4.4 (+89 instructions)

Pass 1: speed optimization selection (cost limit 671):
  * Loop Unrolling: unroll loop at line 17                       cost   278, benefit     1200.0, efficiency        4.3 (+134 instructions)

Final code before resolving virtual instructions:

set BITMAP bank1
set __fn2_sum 5
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 4
op equal __fn0_result __fn1retval false
jump __label78 equal __fn0_result false
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 4096
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 131072
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 4194304
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 134217728
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 4294967296
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 137438953472
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 4398046511104
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 140737488355328
write __tmp39 BITMAP 0
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 16
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 512
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 16384
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 524288
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 16777216
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 536870912
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 17179869184
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 549755813888
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 17592186044416
write __tmp39 BITMAP 1
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 64
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2048
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 65536
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2097152
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 67108864
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2147483648
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 68719476736
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2199023255552
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 70368744177664
write __tmp39 BITMAP 2
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 256
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8192
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 262144
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8388608
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 268435456
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8589934592
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 274877906944
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8796093022208
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 32
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1024
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 32768
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1048576
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 33554432
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1073741824
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 34359738368
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1099511627776
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 35184372088832
write __tmp39 BITMAP 4
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 4
write __tmp39 BITMAP 5
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 128
write __tmp39 BITMAP 5
label __label78
jump __label81 equal __fn0_result false
op add __fn2_sum 5 5
label __label81
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 8
op equal __fn0_result __fn1retval false
jump __label92 equal __fn0_result false
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 16777216
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 2147483648
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 274877906944
write __tmp39 BITMAP 0
read __tmp35 BITMAP 0
op or __tmp39 __tmp35 35184372088832
write __tmp39 BITMAP 0
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 16
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 2048
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 262144
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 33554432
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 4294967296
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 549755813888
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 70368744177664
write __tmp39 BITMAP 1
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 32
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 4096
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 524288
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 67108864
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 8589934592
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 1099511627776
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 140737488355328
write __tmp39 BITMAP 2
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 64
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 8192
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 1048576
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 134217728
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 17179869184
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 2199023255552
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 128
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 16384
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 2097152
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 268435456
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 34359738368
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 4398046511104
write __tmp39 BITMAP 4
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 2
write __tmp39 BITMAP 5
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 256
write __tmp39 BITMAP 5
label __label92
jump __label95 equal __fn0_result false
op add __fn2_sum __fn2_sum 7
label __label95
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 32
op equal __fn0_result __fn1retval false
jump __label108 equal __fn0_result false
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 4096
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 8388608
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 17179869184
write __tmp39 BITMAP 1
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 35184372088832
write __tmp39 BITMAP 1
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 256
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 524288
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 1073741824
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2199023255552
write __tmp39 BITMAP 2
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 16
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 32768
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 67108864
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 137438953472
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 2048
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 4194304
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 8589934592
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 17592186044416
write __tmp39 BITMAP 4
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 128
write __tmp39 BITMAP 5
label __label108
jump __label111 equal __fn0_result false
op add __fn2_sum __fn2_sum 11
label __label111
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 64
op equal __fn0_result __fn1retval false
jump __label122 equal __fn0_result false
read __tmp35 BITMAP 1
op or __tmp39 __tmp35 68719476736
write __tmp39 BITMAP 1
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 2
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 16384
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 134217728
write __tmp39 BITMAP 2
read __tmp35 BITMAP 2
op or __tmp39 __tmp35 1099511627776
write __tmp39 BITMAP 2
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 32
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 262144
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 2147483648
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 17592186044416
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 512
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 4194304
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 34359738368
write __tmp39 BITMAP 4
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 1
write __tmp39 BITMAP 5
label __label122
jump __label125 equal __fn0_result false
op add __fn2_sum __fn2_sum 13
label __label125
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 256
op equal __fn0_result __fn1retval false
jump __label138 equal __fn0_result false
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 1
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 131072
write __tmp39 BITMAP 3
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 17179869184
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 8
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 1048576
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 137438953472
write __tmp39 BITMAP 4
read __tmp35 BITMAP 5
op or __tmp39 __tmp35 64
write __tmp39 BITMAP 5
label __label138
jump __label141 equal __fn0_result false
op add __fn2_sum __fn2_sum 17
label __label141
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 512
op equal __fn0_result __fn1retval false
jump __label152 equal __fn0_result false
read __tmp35 BITMAP 3
op or __tmp39 __tmp35 68719476736
write __tmp39 BITMAP 3
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 128
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 67108864
write __tmp39 BITMAP 4
read __tmp35 BITMAP 4
op or __tmp39 __tmp35 35184372088832
write __tmp39 BITMAP 4
label __label152
jump __label155 equal __fn0_result false
op add __fn2_sum __fn2_sum 19
label __label155
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 2048
op equal __fn0_result __fn1retval false
jump __label171 equal __fn0_result false
op add __fn2_sum __fn2_sum 23
label __label171
read __tmp42 BITMAP 0
op and __fn1retval __tmp42 4096
op equal __fn0_result __fn1retval false
jump __label185 equal __fn0_result false
op add __fn2_sum __fn2_sum 25
label __label185
op add __fn2_i 25 4
label __label35
op idiv __fn1_bitIndex __fn2_i 2
op idiv __tmp43 __fn1_bitIndex 48
read __tmp42 BITMAP __tmp43
op mod __tmp44 __fn1_bitIndex 48
op shl __tmp45 1 __tmp44
op and __fn1retval __tmp42 __tmp45
jump __label17 notEqual __fn1retval false
op add __fn2_sum __fn2_sum __fn2_i
label __label17
op add __fn2_i __fn2_i 2
op idiv __fn1_bitIndex __fn2_i 2
op idiv __tmp43 __fn1_bitIndex 48
read __tmp42 BITMAP __tmp43
op mod __tmp44 __fn1_bitIndex 48
op shl __tmp45 1 __tmp44
op and __fn1retval __tmp42 __tmp45
jump __label20 notEqual __fn1retval false
jump __label22 greaterThan __fn2_i 500
op add __fn2_sum __fn2_sum __fn2_i
label __label22
label __label20
op add __fn2_i __fn2_i 4
jump __label35 lessThanEq __fn2_i 500
print __fn2_sum
