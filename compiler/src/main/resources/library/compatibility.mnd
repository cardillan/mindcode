// Mindcode system library for Mindustry Logic version 8
// System-generated library for compatibility testing purposes
//
//* To use the Compatibility library, use the `require compatibility;` statement.

module compatibility;

linked message1;

/**
 * This function runs the compatibility test on a Mindustry Logic processor. The compatibility test verifies that the
 * compiler's metadata corresponding to the current target are identical to the actual data in the Mindustry processor.
 * The test needs to be run on a logic processor (a microprocessor can also be used, but it takes a bit longer to finish
 * the test) with a message block linked as `message1`. The result of the test is output on the message block.
 *
 * The function never returns: when the test finishes, the processor loops indefinitely. This test isn't meant to be
 *  incorporated into a larger program. Typically, a program for running the test will look like this:
 *
 * ```
 * // Set the target appropriately
 * #set target = 8;
 *
 * require compatibility;
 *
 * runCompatibilityTest();
 * ```
 *
 * If the test fails, the message will suggest compiler options to use to avoid compatibility issues. By using the
 * suggested compiler options, Mindcode will generate code that should run correctly on the logic processor on which
 * the test was performed, avoiding the compatibility issues.
 *
 * Note: The Mindcode processor emulator currently isn't able to run this function.
 */
inline void runCompatibilityTest()
    if __TARGET_MAJOR__ == 6 then
        _compatibilityTest6();
    elsif __TARGET_MAJOR__ == 7 then
        _compatibilityTest7();
    else
        _compatibilityTest8();
    end;
end;

inline void _compatibilityTest6()
    print("Testing...");
    printflush(message1);
    mlog("jump", "general", "notEqual", "@ctrlProcessor", 1);
    mlog("jump", "general", "notEqual", "@ctrlPlayer", 2);
    mlog("jump", "general", "notEqual", "@ctrlFormation", 3);


    mlog("print", in
        "[green]No compatibility issues encountered. Mindcode is fully compatible with this Mindustry version.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("general:");
    mlog("print", in
        "[salmon]Mindcode metadata of stable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = none;[]\n" +
        "to avoid incompatibility issues.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("specific:");
    mlog("print", in
        "[salmon]Mindcode metadata of unstable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = compatible;[]\n" +
        "to avoid incompatibility issues.");
    mlogLabel("finish:");
    printflush(message1);
    do while true;
end;

inline void _compatibilityTest7()
    print("Testing...");
    printflush(message1);
    mlog("op", "strictEqual", "result", "@pi", 3.1415927410125732);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@e", 2.7182817459106445);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@degToRad", 0.01745329238474369);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@radToDeg", 57.2957763671875);
    mlog("jump", "general", "equal", "result", "false");
    mlog("jump", "general", "notEqual", "@ctrlProcessor", 1);
    mlog("jump", "general", "notEqual", "@ctrlPlayer", 2);
    mlog("jump", "general", "notEqual", "@ctrlCommand", 3);
    mlog("op", "strictEqual", "result", "@colorTan", %d2b48cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSky", %87ceebff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorPink", %ff69b4ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLightgrey", %bfbfbfff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorWhite", %ffffffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLightgray", %bfbfbfff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorMagenta", %ff00ffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSalmon", %fa8072ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCoral", %ff7f50ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGrey", %7f7f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorDarkgrey", %3f3f3fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLime", %32cd32ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBrown", %8b4513ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBlue", %4169e1ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGreen", %38d667ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorTeal", %007f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorForest", %228b22ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBlack", %000000ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGold", %ffd700ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBrick", %b22222ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGray", %7f7f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCyan", %00ffffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorRoyal", %4169e1ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorViolet", %ee82eeff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorYellow", %ffff00ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorOrange", %ffa500ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorMaroon", %b03060ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorRed", %e55454ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorDarkgray", %3f3f3fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorNavy", %00007fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorScarlet", %ff341cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSlate", %708090ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorOlive", %6b8e23ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorPurple", %a020f0ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorAcid", %7fff00ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGoldenrod", %daa520ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCrimson", %dc143cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorAccent", %ffd37fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorUnlaunched", %8982edff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorHighlight", %ffe0a5ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorStat", %ffd37fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorNegstat", %e55454ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("sensor", "id", "@graphite-press", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@multi-press", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@silicon-smelter", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@silicon-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@kiln", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@plastanium-compressor", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@phase-weaver", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@cryofluid-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@pyratite-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@blast-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@melter", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@separator", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@disassembler", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@spore-press", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@pulverizer", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@coal-centrifuge", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@incinerator", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@copper-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 17);
    mlog("sensor", "id", "@copper-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 18);
    mlog("sensor", "id", "@titanium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 19);
    mlog("sensor", "id", "@titanium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 20);
    mlog("sensor", "id", "@plastanium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 21);
    mlog("sensor", "id", "@plastanium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 22);
    mlog("sensor", "id", "@thorium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 23);
    mlog("sensor", "id", "@thorium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 24);
    mlog("sensor", "id", "@phase-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 25);
    mlog("sensor", "id", "@phase-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 26);
    mlog("sensor", "id", "@surge-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 27);
    mlog("sensor", "id", "@surge-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 28);
    mlog("sensor", "id", "@door", "@id");
    mlog("jump", "general", "notEqual", "id", 29);
    mlog("sensor", "id", "@door-large", "@id");
    mlog("jump", "general", "notEqual", "id", 30);
    mlog("sensor", "id", "@scrap-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 31);
    mlog("sensor", "id", "@scrap-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 32);
    mlog("sensor", "id", "@scrap-wall-huge", "@id");
    mlog("jump", "general", "notEqual", "id", 33);
    mlog("sensor", "id", "@scrap-wall-gigantic", "@id");
    mlog("jump", "general", "notEqual", "id", 34);
    mlog("sensor", "id", "@mender", "@id");
    mlog("jump", "general", "notEqual", "id", 35);
    mlog("sensor", "id", "@mend-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 36);
    mlog("sensor", "id", "@overdrive-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 37);
    mlog("sensor", "id", "@overdrive-dome", "@id");
    mlog("jump", "general", "notEqual", "id", 38);
    mlog("sensor", "id", "@force-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 39);
    mlog("sensor", "id", "@shock-mine", "@id");
    mlog("jump", "general", "notEqual", "id", 40);
    mlog("sensor", "id", "@conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 41);
    mlog("sensor", "id", "@titanium-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 42);
    mlog("sensor", "id", "@plastanium-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 43);
    mlog("sensor", "id", "@armored-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 44);
    mlog("sensor", "id", "@junction", "@id");
    mlog("jump", "general", "notEqual", "id", 45);
    mlog("sensor", "id", "@bridge-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 46);
    mlog("sensor", "id", "@phase-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 47);
    mlog("sensor", "id", "@sorter", "@id");
    mlog("jump", "general", "notEqual", "id", 48);
    mlog("sensor", "id", "@inverted-sorter", "@id");
    mlog("jump", "general", "notEqual", "id", 49);
    mlog("sensor", "id", "@router", "@id");
    mlog("jump", "general", "notEqual", "id", 50);
    mlog("sensor", "id", "@distributor", "@id");
    mlog("jump", "general", "notEqual", "id", 51);
    mlog("sensor", "id", "@overflow-gate", "@id");
    mlog("jump", "general", "notEqual", "id", 52);
    mlog("sensor", "id", "@underflow-gate", "@id");
    mlog("jump", "general", "notEqual", "id", 53);
    mlog("sensor", "id", "@mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 54);
    mlog("sensor", "id", "@duct", "@id");
    mlog("jump", "general", "notEqual", "id", 55);
    mlog("sensor", "id", "@duct-router", "@id");
    mlog("jump", "general", "notEqual", "id", 56);
    mlog("sensor", "id", "@duct-bridge", "@id");
    mlog("jump", "general", "notEqual", "id", 57);
    mlog("sensor", "id", "@mechanical-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 58);
    mlog("sensor", "id", "@rotary-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 59);
    mlog("sensor", "id", "@conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 60);
    mlog("sensor", "id", "@pulse-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 61);
    mlog("sensor", "id", "@plated-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 62);
    mlog("sensor", "id", "@liquid-router", "@id");
    mlog("jump", "general", "notEqual", "id", 63);
    mlog("sensor", "id", "@liquid-tank", "@id");
    mlog("jump", "general", "notEqual", "id", 64);
    mlog("sensor", "id", "@liquid-junction", "@id");
    mlog("jump", "general", "notEqual", "id", 65);
    mlog("sensor", "id", "@bridge-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 66);
    mlog("sensor", "id", "@phase-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 67);
    mlog("sensor", "id", "@power-node", "@id");
    mlog("jump", "general", "notEqual", "id", 68);
    mlog("sensor", "id", "@power-node-large", "@id");
    mlog("jump", "general", "notEqual", "id", 69);
    mlog("sensor", "id", "@surge-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 70);
    mlog("sensor", "id", "@diode", "@id");
    mlog("jump", "general", "notEqual", "id", 71);
    mlog("sensor", "id", "@battery", "@id");
    mlog("jump", "general", "notEqual", "id", 72);
    mlog("sensor", "id", "@battery-large", "@id");
    mlog("jump", "general", "notEqual", "id", 73);
    mlog("sensor", "id", "@combustion-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 74);
    mlog("sensor", "id", "@thermal-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 75);
    mlog("sensor", "id", "@steam-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 76);
    mlog("sensor", "id", "@differential-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 77);
    mlog("sensor", "id", "@rtg-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 78);
    mlog("sensor", "id", "@solar-panel", "@id");
    mlog("jump", "general", "notEqual", "id", 79);
    mlog("sensor", "id", "@solar-panel-large", "@id");
    mlog("jump", "general", "notEqual", "id", 80);
    mlog("sensor", "id", "@thorium-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 81);
    mlog("sensor", "id", "@impact-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 82);
    mlog("sensor", "id", "@mechanical-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 83);
    mlog("sensor", "id", "@pneumatic-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 84);
    mlog("sensor", "id", "@laser-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 85);
    mlog("sensor", "id", "@blast-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 86);
    mlog("sensor", "id", "@water-extractor", "@id");
    mlog("jump", "general", "notEqual", "id", 87);
    mlog("sensor", "id", "@cultivator", "@id");
    mlog("jump", "general", "notEqual", "id", 88);
    mlog("sensor", "id", "@oil-extractor", "@id");
    mlog("jump", "general", "notEqual", "id", 89);
    mlog("sensor", "id", "@core-shard", "@id");
    mlog("jump", "general", "notEqual", "id", 90);
    mlog("sensor", "id", "@core-foundation", "@id");
    mlog("jump", "general", "notEqual", "id", 91);
    mlog("sensor", "id", "@core-nucleus", "@id");
    mlog("jump", "general", "notEqual", "id", 92);
    mlog("sensor", "id", "@vault", "@id");
    mlog("jump", "general", "notEqual", "id", 93);
    mlog("sensor", "id", "@container", "@id");
    mlog("jump", "general", "notEqual", "id", 94);
    mlog("sensor", "id", "@unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 95);
    mlog("sensor", "id", "@duo", "@id");
    mlog("jump", "general", "notEqual", "id", 96);
    mlog("sensor", "id", "@scatter", "@id");
    mlog("jump", "general", "notEqual", "id", 97);
    mlog("sensor", "id", "@scorch", "@id");
    mlog("jump", "general", "notEqual", "id", 98);
    mlog("sensor", "id", "@hail", "@id");
    mlog("jump", "general", "notEqual", "id", 99);
    mlog("sensor", "id", "@wave", "@id");
    mlog("jump", "general", "notEqual", "id", 100);
    mlog("sensor", "id", "@lancer", "@id");
    mlog("jump", "general", "notEqual", "id", 101);
    mlog("sensor", "id", "@arc", "@id");
    mlog("jump", "general", "notEqual", "id", 102);
    mlog("sensor", "id", "@parallax", "@id");
    mlog("jump", "general", "notEqual", "id", 103);
    mlog("sensor", "id", "@swarmer", "@id");
    mlog("jump", "general", "notEqual", "id", 104);
    mlog("sensor", "id", "@salvo", "@id");
    mlog("jump", "general", "notEqual", "id", 105);
    mlog("sensor", "id", "@segment", "@id");
    mlog("jump", "general", "notEqual", "id", 106);
    mlog("sensor", "id", "@tsunami", "@id");
    mlog("jump", "general", "notEqual", "id", 107);
    mlog("sensor", "id", "@fuse", "@id");
    mlog("jump", "general", "notEqual", "id", 108);
    mlog("sensor", "id", "@ripple", "@id");
    mlog("jump", "general", "notEqual", "id", 109);
    mlog("sensor", "id", "@cyclone", "@id");
    mlog("jump", "general", "notEqual", "id", 110);
    mlog("sensor", "id", "@foreshadow", "@id");
    mlog("jump", "general", "notEqual", "id", 111);
    mlog("sensor", "id", "@spectre", "@id");
    mlog("jump", "general", "notEqual", "id", 112);
    mlog("sensor", "id", "@meltdown", "@id");
    mlog("jump", "general", "notEqual", "id", 113);
    mlog("sensor", "id", "@ground-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 115);
    mlog("sensor", "id", "@air-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 116);
    mlog("sensor", "id", "@naval-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 117);
    mlog("sensor", "id", "@additive-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 118);
    mlog("sensor", "id", "@multiplicative-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 119);
    mlog("sensor", "id", "@exponential-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 120);
    mlog("sensor", "id", "@tetrative-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 121);
    mlog("sensor", "id", "@repair-point", "@id");
    mlog("jump", "general", "notEqual", "id", 122);
    mlog("sensor", "id", "@repair-turret", "@id");
    mlog("jump", "general", "notEqual", "id", 123);
    mlog("sensor", "id", "@payload-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 124);
    mlog("sensor", "id", "@payload-router", "@id");
    mlog("jump", "general", "notEqual", "id", 125);
    mlog("sensor", "id", "@power-source", "@id");
    mlog("jump", "general", "notEqual", "id", 126);
    mlog("sensor", "id", "@power-void", "@id");
    mlog("jump", "general", "notEqual", "id", 127);
    mlog("sensor", "id", "@item-source", "@id");
    mlog("jump", "general", "notEqual", "id", 128);
    mlog("sensor", "id", "@item-void", "@id");
    mlog("jump", "general", "notEqual", "id", 129);
    mlog("sensor", "id", "@liquid-source", "@id");
    mlog("jump", "general", "notEqual", "id", 130);
    mlog("sensor", "id", "@liquid-void", "@id");
    mlog("jump", "general", "notEqual", "id", 131);
    mlog("sensor", "id", "@payload-void", "@id");
    mlog("jump", "general", "notEqual", "id", 132);
    mlog("sensor", "id", "@payload-source", "@id");
    mlog("jump", "general", "notEqual", "id", 133);
    mlog("sensor", "id", "@illuminator", "@id");
    mlog("jump", "general", "notEqual", "id", 134);
    mlog("sensor", "id", "@launch-pad", "@id");
    mlog("jump", "general", "notEqual", "id", 135);
    mlog("sensor", "id", "@interplanetary-accelerator", "@id");
    mlog("jump", "general", "notEqual", "id", 136);
    mlog("sensor", "id", "@message", "@id");
    mlog("jump", "general", "notEqual", "id", 137);
    mlog("sensor", "id", "@switch", "@id");
    mlog("jump", "general", "notEqual", "id", 138);
    mlog("sensor", "id", "@micro-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 139);
    mlog("sensor", "id", "@logic-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 140);
    mlog("sensor", "id", "@hyper-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 141);
    mlog("sensor", "id", "@memory-cell", "@id");
    mlog("jump", "general", "notEqual", "id", 142);
    mlog("sensor", "id", "@memory-bank", "@id");
    mlog("jump", "general", "notEqual", "id", 143);
    mlog("sensor", "id", "@logic-display", "@id");
    mlog("jump", "general", "notEqual", "id", 144);
    mlog("sensor", "id", "@large-logic-display", "@id");
    mlog("jump", "general", "notEqual", "id", 145);
    mlog("sensor", "id", "@liquid-container", "@id");
    mlog("jump", "general", "notEqual", "id", 146);
    mlog("sensor", "id", "@deconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 147);
    mlog("sensor", "id", "@constructor", "@id");
    mlog("jump", "general", "notEqual", "id", 148);
    mlog("sensor", "id", "@thruster", "@id");
    mlog("jump", "general", "notEqual", "id", 149);
    mlog("sensor", "id", "@large-constructor", "@id");
    mlog("jump", "general", "notEqual", "id", 150);
    mlog("sensor", "id", "@payload-loader", "@id");
    mlog("jump", "general", "notEqual", "id", 151);
    mlog("sensor", "id", "@payload-unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 152);
    mlog("sensor", "id", "@silicon-arc-furnace", "@id");
    mlog("jump", "general", "notEqual", "id", 153);
    mlog("sensor", "id", "@cliff-crusher", "@id");
    mlog("jump", "general", "notEqual", "id", 154);
    mlog("sensor", "id", "@plasma-bore", "@id");
    mlog("jump", "general", "notEqual", "id", 155);
    mlog("sensor", "id", "@reinforced-liquid-junction", "@id");
    mlog("jump", "general", "notEqual", "id", 156);
    mlog("sensor", "id", "@breach", "@id");
    mlog("jump", "general", "notEqual", "id", 157);
    mlog("sensor", "id", "@core-bastion", "@id");
    mlog("jump", "general", "notEqual", "id", 158);
    mlog("sensor", "id", "@turbine-condenser", "@id");
    mlog("jump", "general", "notEqual", "id", 159);
    mlog("sensor", "id", "@beam-node", "@id");
    mlog("jump", "general", "notEqual", "id", 160);
    mlog("sensor", "id", "@beam-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 161);
    mlog("sensor", "id", "@build-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 162);
    mlog("sensor", "id", "@impact-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 163);
    mlog("sensor", "id", "@carbide-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 164);
    mlog("sensor", "id", "@surge-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 165);
    mlog("sensor", "id", "@duct-unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 166);
    mlog("sensor", "id", "@surge-router", "@id");
    mlog("jump", "general", "notEqual", "id", 167);
    mlog("sensor", "id", "@reinforced-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 168);
    mlog("sensor", "id", "@reinforced-liquid-router", "@id");
    mlog("jump", "general", "notEqual", "id", 169);
    mlog("sensor", "id", "@reinforced-liquid-container", "@id");
    mlog("jump", "general", "notEqual", "id", 170);
    mlog("sensor", "id", "@reinforced-liquid-tank", "@id");
    mlog("jump", "general", "notEqual", "id", 171);
    mlog("sensor", "id", "@reinforced-bridge-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 172);
    mlog("sensor", "id", "@core-citadel", "@id");
    mlog("jump", "general", "notEqual", "id", 173);
    mlog("sensor", "id", "@core-acropolis", "@id");
    mlog("jump", "general", "notEqual", "id", 174);
    mlog("sensor", "id", "@heat-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 175);
    mlog("sensor", "id", "@impulse-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 176);
    mlog("sensor", "id", "@reinforced-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 177);
    mlog("sensor", "id", "@electrolyzer", "@id");
    mlog("jump", "general", "notEqual", "id", 178);
    mlog("sensor", "id", "@oxidation-chamber", "@id");
    mlog("jump", "general", "notEqual", "id", 179);
    mlog("sensor", "id", "@surge-smelter", "@id");
    mlog("jump", "general", "notEqual", "id", 180);
    mlog("sensor", "id", "@surge-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 181);
    mlog("sensor", "id", "@overflow-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 182);
    mlog("sensor", "id", "@large-plasma-bore", "@id");
    mlog("jump", "general", "notEqual", "id", 183);
    mlog("sensor", "id", "@cyanogen-synthesizer", "@id");
    mlog("jump", "general", "notEqual", "id", 184);
    mlog("sensor", "id", "@slag-centrifuge", "@id");
    mlog("jump", "general", "notEqual", "id", 185);
    mlog("sensor", "id", "@electric-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 186);
    mlog("sensor", "id", "@slag-incinerator", "@id");
    mlog("jump", "general", "notEqual", "id", 187);
    mlog("sensor", "id", "@phase-synthesizer", "@id");
    mlog("jump", "general", "notEqual", "id", 188);
    mlog("sensor", "id", "@sublimate", "@id");
    mlog("jump", "general", "notEqual", "id", 189);
    mlog("sensor", "id", "@reinforced-container", "@id");
    mlog("jump", "general", "notEqual", "id", 190);
    mlog("sensor", "id", "@reinforced-vault", "@id");
    mlog("jump", "general", "notEqual", "id", 191);
    mlog("sensor", "id", "@atmospheric-concentrator", "@id");
    mlog("jump", "general", "notEqual", "id", 192);
    mlog("sensor", "id", "@unit-cargo-loader", "@id");
    mlog("jump", "general", "notEqual", "id", 193);
    mlog("sensor", "id", "@unit-cargo-unload-point", "@id");
    mlog("jump", "general", "notEqual", "id", 194);
    mlog("sensor", "id", "@chemical-combustion-chamber", "@id");
    mlog("jump", "general", "notEqual", "id", 195);
    mlog("sensor", "id", "@pyrolysis-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 196);
    mlog("sensor", "id", "@regen-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 197);
    mlog("sensor", "id", "@titan", "@id");
    mlog("jump", "general", "notEqual", "id", 198);
    mlog("sensor", "id", "@small-deconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 199);
    mlog("sensor", "id", "@vent-condenser", "@id");
    mlog("jump", "general", "notEqual", "id", 200);
    mlog("sensor", "id", "@phase-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 201);
    mlog("sensor", "id", "@heat-redirector", "@id");
    mlog("jump", "general", "notEqual", "id", 202);
    mlog("sensor", "id", "@tungsten-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 203);
    mlog("sensor", "id", "@tungsten-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 204);
    mlog("sensor", "id", "@tank-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 205);
    mlog("sensor", "id", "@beryllium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 206);
    mlog("sensor", "id", "@beryllium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 207);
    mlog("sensor", "id", "@eruption-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 208);
    mlog("sensor", "id", "@ship-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 209);
    mlog("sensor", "id", "@mech-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 210);
    mlog("sensor", "id", "@shield-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 211);
    mlog("sensor", "id", "@beam-link", "@id");
    mlog("jump", "general", "notEqual", "id", 212);
    mlog("sensor", "id", "@world-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 213);
    mlog("sensor", "id", "@reinforced-payload-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 214);
    mlog("sensor", "id", "@reinforced-payload-router", "@id");
    mlog("jump", "general", "notEqual", "id", 215);
    mlog("sensor", "id", "@disperse", "@id");
    mlog("jump", "general", "notEqual", "id", 216);
    mlog("sensor", "id", "@large-shield-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 217);
    mlog("sensor", "id", "@payload-mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 218);
    mlog("sensor", "id", "@world-cell", "@id");
    mlog("jump", "general", "notEqual", "id", 219);
    mlog("sensor", "id", "@carbide-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 220);
    mlog("sensor", "id", "@carbide-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 221);
    mlog("sensor", "id", "@tank-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 222);
    mlog("sensor", "id", "@mech-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 223);
    mlog("sensor", "id", "@ship-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 224);
    mlog("sensor", "id", "@reinforced-surge-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 225);
    mlog("sensor", "id", "@radar", "@id");
    mlog("jump", "general", "notEqual", "id", 226);
    mlog("sensor", "id", "@blast-door", "@id");
    mlog("jump", "general", "notEqual", "id", 227);
    mlog("sensor", "id", "@canvas", "@id");
    mlog("jump", "general", "notEqual", "id", 228);
    mlog("sensor", "id", "@armored-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 229);
    mlog("sensor", "id", "@unit-repair-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 230);
    mlog("sensor", "id", "@diffuse", "@id");
    mlog("jump", "general", "notEqual", "id", 231);
    mlog("sensor", "id", "@prime-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 232);
    mlog("sensor", "id", "@basic-assembler-module", "@id");
    mlog("jump", "general", "notEqual", "id", 233);
    mlog("sensor", "id", "@reinforced-surge-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 234);
    mlog("sensor", "id", "@tank-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 235);
    mlog("sensor", "id", "@mech-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 236);
    mlog("sensor", "id", "@ship-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 237);
    mlog("sensor", "id", "@slag-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 238);
    mlog("sensor", "id", "@afflict", "@id");
    mlog("jump", "general", "notEqual", "id", 239);
    mlog("sensor", "id", "@shielded-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 240);
    mlog("sensor", "id", "@lustre", "@id");
    mlog("jump", "general", "notEqual", "id", 241);
    mlog("sensor", "id", "@scathe", "@id");
    mlog("jump", "general", "notEqual", "id", 242);
    mlog("sensor", "id", "@smite", "@id");
    mlog("jump", "general", "notEqual", "id", 243);
    mlog("sensor", "id", "@underflow-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 244);
    mlog("sensor", "id", "@malign", "@id");
    mlog("jump", "general", "notEqual", "id", 245);
    mlog("sensor", "id", "@shockwave-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 246);
    mlog("sensor", "id", "@heat-source", "@id");
    mlog("jump", "general", "notEqual", "id", 247);
    mlog("sensor", "id", "@flux-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 248);
    mlog("sensor", "id", "@neoplasia-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 249);
    mlog("sensor", "id", "@heat-router", "@id");
    mlog("jump", "general", "notEqual", "id", 250);
    mlog("sensor", "id", "@large-payload-mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 251);
    mlog("sensor", "id", "@reinforced-message", "@id");
    mlog("jump", "general", "notEqual", "id", 252);
    mlog("sensor", "id", "@world-message", "@id");
    mlog("jump", "general", "notEqual", "id", 253);
    mlog("sensor", "id", "@dagger", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@mace", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@fortress", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@scepter", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@reign", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@nova", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@pulsar", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@quasar", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@vela", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@corvus", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@crawler", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@atrax", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@spiroct", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@arkyid", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@toxopid", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@flare", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@horizon", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@zenith", "@id");
    mlog("jump", "general", "notEqual", "id", 17);
    mlog("sensor", "id", "@antumbra", "@id");
    mlog("jump", "general", "notEqual", "id", 18);
    mlog("sensor", "id", "@eclipse", "@id");
    mlog("jump", "general", "notEqual", "id", 19);
    mlog("sensor", "id", "@mono", "@id");
    mlog("jump", "general", "notEqual", "id", 20);
    mlog("sensor", "id", "@poly", "@id");
    mlog("jump", "general", "notEqual", "id", 21);
    mlog("sensor", "id", "@mega", "@id");
    mlog("jump", "general", "notEqual", "id", 22);
    mlog("sensor", "id", "@quad", "@id");
    mlog("jump", "general", "notEqual", "id", 23);
    mlog("sensor", "id", "@oct", "@id");
    mlog("jump", "general", "notEqual", "id", 24);
    mlog("sensor", "id", "@risso", "@id");
    mlog("jump", "general", "notEqual", "id", 25);
    mlog("sensor", "id", "@minke", "@id");
    mlog("jump", "general", "notEqual", "id", 26);
    mlog("sensor", "id", "@bryde", "@id");
    mlog("jump", "general", "notEqual", "id", 27);
    mlog("sensor", "id", "@sei", "@id");
    mlog("jump", "general", "notEqual", "id", 28);
    mlog("sensor", "id", "@omura", "@id");
    mlog("jump", "general", "notEqual", "id", 29);
    mlog("sensor", "id", "@retusa", "@id");
    mlog("jump", "general", "notEqual", "id", 30);
    mlog("sensor", "id", "@oxynoe", "@id");
    mlog("jump", "general", "notEqual", "id", 31);
    mlog("sensor", "id", "@cyerce", "@id");
    mlog("jump", "general", "notEqual", "id", 32);
    mlog("sensor", "id", "@aegires", "@id");
    mlog("jump", "general", "notEqual", "id", 33);
    mlog("sensor", "id", "@navanax", "@id");
    mlog("jump", "general", "notEqual", "id", 34);
    mlog("sensor", "id", "@alpha", "@id");
    mlog("jump", "general", "notEqual", "id", 35);
    mlog("sensor", "id", "@beta", "@id");
    mlog("jump", "general", "notEqual", "id", 36);
    mlog("sensor", "id", "@gamma", "@id");
    mlog("jump", "general", "notEqual", "id", 37);
    mlog("sensor", "id", "@stell", "@id");
    mlog("jump", "general", "notEqual", "id", 38);
    mlog("sensor", "id", "@locus", "@id");
    mlog("jump", "general", "notEqual", "id", 39);
    mlog("sensor", "id", "@precept", "@id");
    mlog("jump", "general", "notEqual", "id", 40);
    mlog("sensor", "id", "@vanquish", "@id");
    mlog("jump", "general", "notEqual", "id", 41);
    mlog("sensor", "id", "@conquer", "@id");
    mlog("jump", "general", "notEqual", "id", 42);
    mlog("sensor", "id", "@merui", "@id");
    mlog("jump", "general", "notEqual", "id", 43);
    mlog("sensor", "id", "@cleroi", "@id");
    mlog("jump", "general", "notEqual", "id", 44);
    mlog("sensor", "id", "@anthicus", "@id");
    mlog("jump", "general", "notEqual", "id", 45);
    mlog("sensor", "id", "@tecta", "@id");
    mlog("jump", "general", "notEqual", "id", 46);
    mlog("sensor", "id", "@collaris", "@id");
    mlog("jump", "general", "notEqual", "id", 47);
    mlog("sensor", "id", "@elude", "@id");
    mlog("jump", "general", "notEqual", "id", 48);
    mlog("sensor", "id", "@avert", "@id");
    mlog("jump", "general", "notEqual", "id", 49);
    mlog("sensor", "id", "@obviate", "@id");
    mlog("jump", "general", "notEqual", "id", 50);
    mlog("sensor", "id", "@quell", "@id");
    mlog("jump", "general", "notEqual", "id", 51);
    mlog("sensor", "id", "@disrupt", "@id");
    mlog("jump", "general", "notEqual", "id", 52);
    mlog("sensor", "id", "@evoke", "@id");
    mlog("jump", "general", "notEqual", "id", 53);
    mlog("sensor", "id", "@incite", "@id");
    mlog("jump", "general", "notEqual", "id", 54);
    mlog("sensor", "id", "@emanate", "@id");
    mlog("jump", "general", "notEqual", "id", 55);
    mlog("sensor", "id", "@copper", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@lead", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@metaglass", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@graphite", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@sand", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@coal", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@titanium", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@thorium", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@scrap", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@silicon", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@plastanium", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@phase-fabric", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@surge-alloy", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@spore-pod", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@blast-compound", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@pyratite", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@beryllium", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@water", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@slag", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@oil", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@cryofluid", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@neoplasm", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@hydrogen", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@ozone", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@cyanogen", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@gallium", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@nitrogen", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@arkycite", "@id");
    mlog("jump", "general", "notEqual", "id", 10);

    mlog("jump", "specific", "notEqual", "@blockCount", 254);
    mlog("jump", "specific", "notEqual", "@unitCount", 56);
    mlog("jump", "specific", "notEqual", "@itemCount", 22);
    mlog("jump", "specific", "notEqual", "@liquidCount", 11);
    mlog("sensor", "id", "@fissile-matter", "@id");
    mlog("jump", "specific", "notEqual", "id", 17);
    mlog("sensor", "id", "@dormant-cyst", "@id");
    mlog("jump", "specific", "notEqual", "id", 18);
    mlog("sensor", "id", "@tungsten", "@id");
    mlog("jump", "specific", "notEqual", "id", 19);
    mlog("sensor", "id", "@carbide", "@id");
    mlog("jump", "specific", "notEqual", "id", 20);
    mlog("sensor", "id", "@oxide", "@id");
    mlog("jump", "specific", "notEqual", "id", 21);

    mlog("print", in
        "[green]No compatibility issues encountered. Mindcode is fully compatible with this Mindustry version.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("general:");
    mlog("print", in
        "[salmon]Mindcode metadata of stable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = none;[]\n" +
        "to avoid incompatibility issues.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("specific:");
    mlog("print", in
        "[salmon]Mindcode metadata of unstable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = compatible;[]\n" +
        "to avoid incompatibility issues.");
    mlogLabel("finish:");
    printflush(message1);
    do while true;
end;

inline void _compatibilityTest8()
    print("Testing...");
    printflush(message1);
    mlog("op", "strictEqual", "result", "@colorAccent", %ffd37fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorAcid", %7fff00ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBlack", %000000ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBlue", %4169e1ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBrick", %b22222ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorBrown", %8b4513ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCoral", %ff7f50ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCrimson", %dc143cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorCyan", %00ffffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorDarkgray", %3f3f3fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorDarkgrey", %3f3f3fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorForest", %228b22ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGold", %ffd700ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGoldenrod", %daa520ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGray", %7f7f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGreen", %38d667ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorGrey", %7f7f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorHighlight", %ffe0a5ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLightgray", %bfbfbfff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLightgrey", %bfbfbfff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorLime", %32cd32ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorMagenta", %ff00ffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorMaroon", %b03060ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorNavy", %00007fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorNegstat", %e55454ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorOlive", %6b8e23ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorOrange", %ffa500ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorPink", %ff69b4ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorPurple", %a020f0ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorRed", %e55454ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorRoyal", %4169e1ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSalmon", %fa8072ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorScarlet", %ff341cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSky", %87ceebff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorSlate", %708090ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorStat", %ffd37fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorTan", %d2b48cff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorTeal", %007f7fff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorUnlaunched", %8982edff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorViolet", %ee82eeff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorWhite", %ffffffff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@colorYellow", %ffff00ff);
    mlog("jump", "general", "equal", "result", "false");
    mlog("jump", "general", "notEqual", "@ctrlCommand", 3);
    mlog("jump", "general", "notEqual", "@ctrlPlayer", 2);
    mlog("jump", "general", "notEqual", "@ctrlProcessor", 1);
    mlog("op", "strictEqual", "result", "@degToRad", 0.01745329238474369);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@e", 2.7182817459106445);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@pi", 3.1415927410125732);
    mlog("jump", "general", "equal", "result", "false");
    mlog("op", "strictEqual", "result", "@radToDeg", 57.2957763671875);
    mlog("jump", "general", "equal", "result", "false");
    mlog("jump", "general", "notEqual", "@sfx-back", 1);
    mlog("jump", "general", "notEqual", "@sfx-bang", 2);
    mlog("jump", "general", "notEqual", "@sfx-beam", 3);
    mlog("jump", "general", "notEqual", "@sfx-bigshot", 4);
    mlog("jump", "general", "notEqual", "@sfx-bioLoop", 5);
    mlog("jump", "general", "notEqual", "@sfx-blaster", 6);
    mlog("jump", "general", "notEqual", "@sfx-bolt", 7);
    mlog("jump", "general", "notEqual", "@sfx-boom", 8);
    mlog("jump", "general", "notEqual", "@sfx-break", 9);
    mlog("jump", "general", "notEqual", "@sfx-build", 10);
    mlog("jump", "general", "notEqual", "@sfx-buttonClick", 11);
    mlog("jump", "general", "notEqual", "@sfx-cannon", 12);
    mlog("jump", "general", "notEqual", "@sfx-chatMessage", 13);
    mlog("jump", "general", "notEqual", "@sfx-click", 14);
    mlog("jump", "general", "notEqual", "@sfx-combustion", 15);
    mlog("jump", "general", "notEqual", "@sfx-conveyor", 16);
    mlog("jump", "general", "notEqual", "@sfx-corexplode", 17);
    mlog("jump", "general", "notEqual", "@sfx-cutter", 18);
    mlog("jump", "general", "notEqual", "@sfx-door", 19);
    mlog("jump", "general", "notEqual", "@sfx-drill", 20);
    mlog("jump", "general", "notEqual", "@sfx-drillCharge", 21);
    mlog("jump", "general", "notEqual", "@sfx-drillImpact", 22);
    mlog("jump", "general", "notEqual", "@sfx-dullExplosion", 23);
    mlog("jump", "general", "notEqual", "@sfx-electricHum", 24);
    mlog("jump", "general", "notEqual", "@sfx-explosion", 25);
    mlog("jump", "general", "notEqual", "@sfx-explosionbig", 26);
    mlog("jump", "general", "notEqual", "@sfx-extractLoop", 27);
    mlog("jump", "general", "notEqual", "@sfx-fire", 28);
    mlog("jump", "general", "notEqual", "@sfx-flame", 29);
    mlog("jump", "general", "notEqual", "@sfx-flame2", 30);
    mlog("jump", "general", "notEqual", "@sfx-flux", 31);
    mlog("jump", "general", "notEqual", "@sfx-glow", 32);
    mlog("jump", "general", "notEqual", "@sfx-grinding", 33);
    mlog("jump", "general", "notEqual", "@sfx-hum", 34);
    mlog("jump", "general", "notEqual", "@sfx-largeCannon", 35);
    mlog("jump", "general", "notEqual", "@sfx-largeExplosion", 36);
    mlog("jump", "general", "notEqual", "@sfx-laser", 37);
    mlog("jump", "general", "notEqual", "@sfx-laserbeam", 38);
    mlog("jump", "general", "notEqual", "@sfx-laserbig", 39);
    mlog("jump", "general", "notEqual", "@sfx-laserblast", 40);
    mlog("jump", "general", "notEqual", "@sfx-lasercharge", 41);
    mlog("jump", "general", "notEqual", "@sfx-lasercharge2", 42);
    mlog("jump", "general", "notEqual", "@sfx-lasershoot", 43);
    mlog("jump", "general", "notEqual", "@sfx-machine", 44);
    mlog("jump", "general", "notEqual", "@sfx-malignShoot", 45);
    mlog("jump", "general", "notEqual", "@sfx-mediumCannon", 46);
    mlog("jump", "general", "notEqual", "@sfx-message", 47);
    mlog("jump", "general", "notEqual", "@sfx-mineDeploy", 48);
    mlog("jump", "general", "notEqual", "@sfx-minebeam", 49);
    mlog("jump", "general", "notEqual", "@sfx-missile", 50);
    mlog("jump", "general", "notEqual", "@sfx-missileLarge", 51);
    mlog("jump", "general", "notEqual", "@sfx-missileLaunch", 52);
    mlog("jump", "general", "notEqual", "@sfx-missileSmall", 53);
    mlog("jump", "general", "notEqual", "@sfx-missileTrail", 54);
    mlog("jump", "general", "notEqual", "@sfx-mud", 55);
    mlog("jump", "general", "notEqual", "@sfx-noammo", 56);
    mlog("jump", "general", "notEqual", "@sfx-pew", 57);
    mlog("jump", "general", "notEqual", "@sfx-place", 58);
    mlog("jump", "general", "notEqual", "@sfx-plantBreak", 59);
    mlog("jump", "general", "notEqual", "@sfx-plasmaboom", 60);
    mlog("jump", "general", "notEqual", "@sfx-plasmadrop", 61);
    mlog("jump", "general", "notEqual", "@sfx-press", 62);
    mlog("jump", "general", "notEqual", "@sfx-pulse", 63);
    mlog("jump", "general", "notEqual", "@sfx-pulseBlast", 64);
    mlog("jump", "general", "notEqual", "@sfx-railgun", 65);
    mlog("jump", "general", "notEqual", "@sfx-rain", 66);
    mlog("jump", "general", "notEqual", "@sfx-release", 67);
    mlog("jump", "general", "notEqual", "@sfx-respawn", 68);
    mlog("jump", "general", "notEqual", "@sfx-respawning", 69);
    mlog("jump", "general", "notEqual", "@sfx-rockBreak", 70);
    mlog("jump", "general", "notEqual", "@sfx-sap", 71);
    mlog("jump", "general", "notEqual", "@sfx-shield", 72);
    mlog("jump", "general", "notEqual", "@sfx-shockBlast", 73);
    mlog("jump", "general", "notEqual", "@sfx-shoot", 74);
    mlog("jump", "general", "notEqual", "@sfx-shootAlt", 75);
    mlog("jump", "general", "notEqual", "@sfx-shootAltLong", 76);
    mlog("jump", "general", "notEqual", "@sfx-shootBig", 77);
    mlog("jump", "general", "notEqual", "@sfx-shootSmite", 78);
    mlog("jump", "general", "notEqual", "@sfx-shootSnap", 79);
    mlog("jump", "general", "notEqual", "@sfx-shotgun", 80);
    mlog("jump", "general", "notEqual", "@sfx-smelter", 81);
    mlog("jump", "general", "notEqual", "@sfx-spark", 82);
    mlog("jump", "general", "notEqual", "@sfx-spellLoop", 83);
    mlog("jump", "general", "notEqual", "@sfx-splash", 84);
    mlog("jump", "general", "notEqual", "@sfx-spray", 85);
    mlog("jump", "general", "notEqual", "@sfx-steam", 86);
    mlog("jump", "general", "notEqual", "@sfx-techloop", 88);
    mlog("jump", "general", "notEqual", "@sfx-thruster", 89);
    mlog("jump", "general", "notEqual", "@sfx-titanExplosion", 90);
    mlog("jump", "general", "notEqual", "@sfx-torch", 91);
    mlog("jump", "general", "notEqual", "@sfx-tractorbeam", 92);
    mlog("jump", "general", "notEqual", "@sfx-unlock", 93);
    mlog("jump", "general", "notEqual", "@sfx-wave", 94);
    mlog("jump", "general", "notEqual", "@sfx-wind", 95);
    mlog("jump", "general", "notEqual", "@sfx-wind2", 96);
    mlog("jump", "general", "notEqual", "@sfx-wind3", 97);
    mlog("jump", "general", "notEqual", "@sfx-windhowl", 98);
    mlog("sensor", "id", "@graphite-press", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@multi-press", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@silicon-smelter", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@silicon-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@kiln", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@plastanium-compressor", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@phase-weaver", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@cryofluid-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@pyratite-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@blast-mixer", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@melter", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@separator", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@disassembler", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@spore-press", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@pulverizer", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@coal-centrifuge", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@incinerator", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@copper-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 17);
    mlog("sensor", "id", "@copper-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 18);
    mlog("sensor", "id", "@titanium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 19);
    mlog("sensor", "id", "@titanium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 20);
    mlog("sensor", "id", "@plastanium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 21);
    mlog("sensor", "id", "@plastanium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 22);
    mlog("sensor", "id", "@thorium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 23);
    mlog("sensor", "id", "@thorium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 24);
    mlog("sensor", "id", "@phase-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 25);
    mlog("sensor", "id", "@phase-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 26);
    mlog("sensor", "id", "@surge-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 27);
    mlog("sensor", "id", "@surge-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 28);
    mlog("sensor", "id", "@door", "@id");
    mlog("jump", "general", "notEqual", "id", 29);
    mlog("sensor", "id", "@door-large", "@id");
    mlog("jump", "general", "notEqual", "id", 30);
    mlog("sensor", "id", "@scrap-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 31);
    mlog("sensor", "id", "@scrap-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 32);
    mlog("sensor", "id", "@scrap-wall-huge", "@id");
    mlog("jump", "general", "notEqual", "id", 33);
    mlog("sensor", "id", "@scrap-wall-gigantic", "@id");
    mlog("jump", "general", "notEqual", "id", 34);
    mlog("sensor", "id", "@mender", "@id");
    mlog("jump", "general", "notEqual", "id", 35);
    mlog("sensor", "id", "@mend-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 36);
    mlog("sensor", "id", "@overdrive-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 37);
    mlog("sensor", "id", "@overdrive-dome", "@id");
    mlog("jump", "general", "notEqual", "id", 38);
    mlog("sensor", "id", "@force-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 39);
    mlog("sensor", "id", "@shock-mine", "@id");
    mlog("jump", "general", "notEqual", "id", 40);
    mlog("sensor", "id", "@conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 41);
    mlog("sensor", "id", "@titanium-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 42);
    mlog("sensor", "id", "@plastanium-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 43);
    mlog("sensor", "id", "@armored-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 44);
    mlog("sensor", "id", "@junction", "@id");
    mlog("jump", "general", "notEqual", "id", 45);
    mlog("sensor", "id", "@bridge-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 46);
    mlog("sensor", "id", "@phase-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 47);
    mlog("sensor", "id", "@sorter", "@id");
    mlog("jump", "general", "notEqual", "id", 48);
    mlog("sensor", "id", "@inverted-sorter", "@id");
    mlog("jump", "general", "notEqual", "id", 49);
    mlog("sensor", "id", "@router", "@id");
    mlog("jump", "general", "notEqual", "id", 50);
    mlog("sensor", "id", "@distributor", "@id");
    mlog("jump", "general", "notEqual", "id", 51);
    mlog("sensor", "id", "@overflow-gate", "@id");
    mlog("jump", "general", "notEqual", "id", 52);
    mlog("sensor", "id", "@underflow-gate", "@id");
    mlog("jump", "general", "notEqual", "id", 53);
    mlog("sensor", "id", "@mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 54);
    mlog("sensor", "id", "@duct", "@id");
    mlog("jump", "general", "notEqual", "id", 55);
    mlog("sensor", "id", "@duct-router", "@id");
    mlog("jump", "general", "notEqual", "id", 56);
    mlog("sensor", "id", "@duct-bridge", "@id");
    mlog("jump", "general", "notEqual", "id", 57);
    mlog("sensor", "id", "@mechanical-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 58);
    mlog("sensor", "id", "@rotary-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 59);
    mlog("sensor", "id", "@conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 60);
    mlog("sensor", "id", "@pulse-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 61);
    mlog("sensor", "id", "@plated-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 62);
    mlog("sensor", "id", "@liquid-router", "@id");
    mlog("jump", "general", "notEqual", "id", 63);
    mlog("sensor", "id", "@liquid-tank", "@id");
    mlog("jump", "general", "notEqual", "id", 64);
    mlog("sensor", "id", "@liquid-junction", "@id");
    mlog("jump", "general", "notEqual", "id", 65);
    mlog("sensor", "id", "@bridge-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 66);
    mlog("sensor", "id", "@phase-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 67);
    mlog("sensor", "id", "@power-node", "@id");
    mlog("jump", "general", "notEqual", "id", 68);
    mlog("sensor", "id", "@power-node-large", "@id");
    mlog("jump", "general", "notEqual", "id", 69);
    mlog("sensor", "id", "@surge-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 70);
    mlog("sensor", "id", "@diode", "@id");
    mlog("jump", "general", "notEqual", "id", 71);
    mlog("sensor", "id", "@battery", "@id");
    mlog("jump", "general", "notEqual", "id", 72);
    mlog("sensor", "id", "@battery-large", "@id");
    mlog("jump", "general", "notEqual", "id", 73);
    mlog("sensor", "id", "@combustion-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 74);
    mlog("sensor", "id", "@thermal-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 75);
    mlog("sensor", "id", "@steam-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 76);
    mlog("sensor", "id", "@differential-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 77);
    mlog("sensor", "id", "@rtg-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 78);
    mlog("sensor", "id", "@solar-panel", "@id");
    mlog("jump", "general", "notEqual", "id", 79);
    mlog("sensor", "id", "@solar-panel-large", "@id");
    mlog("jump", "general", "notEqual", "id", 80);
    mlog("sensor", "id", "@thorium-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 81);
    mlog("sensor", "id", "@impact-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 82);
    mlog("sensor", "id", "@mechanical-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 83);
    mlog("sensor", "id", "@pneumatic-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 84);
    mlog("sensor", "id", "@laser-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 85);
    mlog("sensor", "id", "@blast-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 86);
    mlog("sensor", "id", "@water-extractor", "@id");
    mlog("jump", "general", "notEqual", "id", 87);
    mlog("sensor", "id", "@cultivator", "@id");
    mlog("jump", "general", "notEqual", "id", 88);
    mlog("sensor", "id", "@oil-extractor", "@id");
    mlog("jump", "general", "notEqual", "id", 89);
    mlog("sensor", "id", "@core-shard", "@id");
    mlog("jump", "general", "notEqual", "id", 90);
    mlog("sensor", "id", "@core-foundation", "@id");
    mlog("jump", "general", "notEqual", "id", 91);
    mlog("sensor", "id", "@core-nucleus", "@id");
    mlog("jump", "general", "notEqual", "id", 92);
    mlog("sensor", "id", "@vault", "@id");
    mlog("jump", "general", "notEqual", "id", 93);
    mlog("sensor", "id", "@container", "@id");
    mlog("jump", "general", "notEqual", "id", 94);
    mlog("sensor", "id", "@unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 95);
    mlog("sensor", "id", "@duo", "@id");
    mlog("jump", "general", "notEqual", "id", 96);
    mlog("sensor", "id", "@scatter", "@id");
    mlog("jump", "general", "notEqual", "id", 97);
    mlog("sensor", "id", "@scorch", "@id");
    mlog("jump", "general", "notEqual", "id", 98);
    mlog("sensor", "id", "@hail", "@id");
    mlog("jump", "general", "notEqual", "id", 99);
    mlog("sensor", "id", "@wave", "@id");
    mlog("jump", "general", "notEqual", "id", 100);
    mlog("sensor", "id", "@lancer", "@id");
    mlog("jump", "general", "notEqual", "id", 101);
    mlog("sensor", "id", "@arc", "@id");
    mlog("jump", "general", "notEqual", "id", 102);
    mlog("sensor", "id", "@parallax", "@id");
    mlog("jump", "general", "notEqual", "id", 103);
    mlog("sensor", "id", "@swarmer", "@id");
    mlog("jump", "general", "notEqual", "id", 104);
    mlog("sensor", "id", "@salvo", "@id");
    mlog("jump", "general", "notEqual", "id", 105);
    mlog("sensor", "id", "@segment", "@id");
    mlog("jump", "general", "notEqual", "id", 106);
    mlog("sensor", "id", "@tsunami", "@id");
    mlog("jump", "general", "notEqual", "id", 107);
    mlog("sensor", "id", "@fuse", "@id");
    mlog("jump", "general", "notEqual", "id", 108);
    mlog("sensor", "id", "@ripple", "@id");
    mlog("jump", "general", "notEqual", "id", 109);
    mlog("sensor", "id", "@cyclone", "@id");
    mlog("jump", "general", "notEqual", "id", 110);
    mlog("sensor", "id", "@foreshadow", "@id");
    mlog("jump", "general", "notEqual", "id", 111);
    mlog("sensor", "id", "@spectre", "@id");
    mlog("jump", "general", "notEqual", "id", 112);
    mlog("sensor", "id", "@meltdown", "@id");
    mlog("jump", "general", "notEqual", "id", 113);
    mlog("sensor", "id", "@ground-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 115);
    mlog("sensor", "id", "@air-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 116);
    mlog("sensor", "id", "@naval-factory", "@id");
    mlog("jump", "general", "notEqual", "id", 117);
    mlog("sensor", "id", "@additive-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 118);
    mlog("sensor", "id", "@multiplicative-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 119);
    mlog("sensor", "id", "@exponential-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 120);
    mlog("sensor", "id", "@tetrative-reconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 121);
    mlog("sensor", "id", "@repair-point", "@id");
    mlog("jump", "general", "notEqual", "id", 122);
    mlog("sensor", "id", "@repair-turret", "@id");
    mlog("jump", "general", "notEqual", "id", 123);
    mlog("sensor", "id", "@payload-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 124);
    mlog("sensor", "id", "@payload-router", "@id");
    mlog("jump", "general", "notEqual", "id", 125);
    mlog("sensor", "id", "@power-source", "@id");
    mlog("jump", "general", "notEqual", "id", 126);
    mlog("sensor", "id", "@power-void", "@id");
    mlog("jump", "general", "notEqual", "id", 127);
    mlog("sensor", "id", "@item-source", "@id");
    mlog("jump", "general", "notEqual", "id", 128);
    mlog("sensor", "id", "@item-void", "@id");
    mlog("jump", "general", "notEqual", "id", 129);
    mlog("sensor", "id", "@liquid-source", "@id");
    mlog("jump", "general", "notEqual", "id", 130);
    mlog("sensor", "id", "@liquid-void", "@id");
    mlog("jump", "general", "notEqual", "id", 131);
    mlog("sensor", "id", "@payload-void", "@id");
    mlog("jump", "general", "notEqual", "id", 132);
    mlog("sensor", "id", "@payload-source", "@id");
    mlog("jump", "general", "notEqual", "id", 133);
    mlog("sensor", "id", "@illuminator", "@id");
    mlog("jump", "general", "notEqual", "id", 134);
    mlog("sensor", "id", "@launch-pad", "@id");
    mlog("jump", "general", "notEqual", "id", 135);
    mlog("sensor", "id", "@interplanetary-accelerator", "@id");
    mlog("jump", "general", "notEqual", "id", 136);
    mlog("sensor", "id", "@message", "@id");
    mlog("jump", "general", "notEqual", "id", 137);
    mlog("sensor", "id", "@switch", "@id");
    mlog("jump", "general", "notEqual", "id", 138);
    mlog("sensor", "id", "@micro-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 139);
    mlog("sensor", "id", "@logic-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 140);
    mlog("sensor", "id", "@hyper-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 141);
    mlog("sensor", "id", "@memory-cell", "@id");
    mlog("jump", "general", "notEqual", "id", 142);
    mlog("sensor", "id", "@memory-bank", "@id");
    mlog("jump", "general", "notEqual", "id", 143);
    mlog("sensor", "id", "@logic-display", "@id");
    mlog("jump", "general", "notEqual", "id", 144);
    mlog("sensor", "id", "@large-logic-display", "@id");
    mlog("jump", "general", "notEqual", "id", 145);
    mlog("sensor", "id", "@liquid-container", "@id");
    mlog("jump", "general", "notEqual", "id", 146);
    mlog("sensor", "id", "@deconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 147);
    mlog("sensor", "id", "@constructor", "@id");
    mlog("jump", "general", "notEqual", "id", 148);
    mlog("sensor", "id", "@thruster", "@id");
    mlog("jump", "general", "notEqual", "id", 149);
    mlog("sensor", "id", "@large-constructor", "@id");
    mlog("jump", "general", "notEqual", "id", 150);
    mlog("sensor", "id", "@payload-loader", "@id");
    mlog("jump", "general", "notEqual", "id", 151);
    mlog("sensor", "id", "@payload-unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 152);
    mlog("sensor", "id", "@silicon-arc-furnace", "@id");
    mlog("jump", "general", "notEqual", "id", 153);
    mlog("sensor", "id", "@cliff-crusher", "@id");
    mlog("jump", "general", "notEqual", "id", 154);
    mlog("sensor", "id", "@plasma-bore", "@id");
    mlog("jump", "general", "notEqual", "id", 155);
    mlog("sensor", "id", "@reinforced-liquid-junction", "@id");
    mlog("jump", "general", "notEqual", "id", 156);
    mlog("sensor", "id", "@breach", "@id");
    mlog("jump", "general", "notEqual", "id", 157);
    mlog("sensor", "id", "@core-bastion", "@id");
    mlog("jump", "general", "notEqual", "id", 158);
    mlog("sensor", "id", "@turbine-condenser", "@id");
    mlog("jump", "general", "notEqual", "id", 159);
    mlog("sensor", "id", "@beam-node", "@id");
    mlog("jump", "general", "notEqual", "id", 160);
    mlog("sensor", "id", "@beam-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 161);
    mlog("sensor", "id", "@build-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 162);
    mlog("sensor", "id", "@impact-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 163);
    mlog("sensor", "id", "@carbide-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 164);
    mlog("sensor", "id", "@surge-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 165);
    mlog("sensor", "id", "@duct-unloader", "@id");
    mlog("jump", "general", "notEqual", "id", 166);
    mlog("sensor", "id", "@surge-router", "@id");
    mlog("jump", "general", "notEqual", "id", 167);
    mlog("sensor", "id", "@reinforced-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 168);
    mlog("sensor", "id", "@reinforced-liquid-router", "@id");
    mlog("jump", "general", "notEqual", "id", 169);
    mlog("sensor", "id", "@reinforced-liquid-container", "@id");
    mlog("jump", "general", "notEqual", "id", 170);
    mlog("sensor", "id", "@reinforced-liquid-tank", "@id");
    mlog("jump", "general", "notEqual", "id", 171);
    mlog("sensor", "id", "@reinforced-bridge-conduit", "@id");
    mlog("jump", "general", "notEqual", "id", 172);
    mlog("sensor", "id", "@core-citadel", "@id");
    mlog("jump", "general", "notEqual", "id", 173);
    mlog("sensor", "id", "@core-acropolis", "@id");
    mlog("jump", "general", "notEqual", "id", 174);
    mlog("sensor", "id", "@heat-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 175);
    mlog("sensor", "id", "@impulse-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 176);
    mlog("sensor", "id", "@reinforced-pump", "@id");
    mlog("jump", "general", "notEqual", "id", 177);
    mlog("sensor", "id", "@electrolyzer", "@id");
    mlog("jump", "general", "notEqual", "id", 178);
    mlog("sensor", "id", "@oxidation-chamber", "@id");
    mlog("jump", "general", "notEqual", "id", 179);
    mlog("sensor", "id", "@surge-smelter", "@id");
    mlog("jump", "general", "notEqual", "id", 180);
    mlog("sensor", "id", "@surge-crucible", "@id");
    mlog("jump", "general", "notEqual", "id", 181);
    mlog("sensor", "id", "@overflow-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 182);
    mlog("sensor", "id", "@large-plasma-bore", "@id");
    mlog("jump", "general", "notEqual", "id", 183);
    mlog("sensor", "id", "@cyanogen-synthesizer", "@id");
    mlog("jump", "general", "notEqual", "id", 184);
    mlog("sensor", "id", "@slag-centrifuge", "@id");
    mlog("jump", "general", "notEqual", "id", 185);
    mlog("sensor", "id", "@electric-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 186);
    mlog("sensor", "id", "@slag-incinerator", "@id");
    mlog("jump", "general", "notEqual", "id", 187);
    mlog("sensor", "id", "@phase-synthesizer", "@id");
    mlog("jump", "general", "notEqual", "id", 188);
    mlog("sensor", "id", "@sublimate", "@id");
    mlog("jump", "general", "notEqual", "id", 189);
    mlog("sensor", "id", "@reinforced-container", "@id");
    mlog("jump", "general", "notEqual", "id", 190);
    mlog("sensor", "id", "@reinforced-vault", "@id");
    mlog("jump", "general", "notEqual", "id", 191);
    mlog("sensor", "id", "@atmospheric-concentrator", "@id");
    mlog("jump", "general", "notEqual", "id", 192);
    mlog("sensor", "id", "@unit-cargo-loader", "@id");
    mlog("jump", "general", "notEqual", "id", 193);
    mlog("sensor", "id", "@unit-cargo-unload-point", "@id");
    mlog("jump", "general", "notEqual", "id", 194);
    mlog("sensor", "id", "@chemical-combustion-chamber", "@id");
    mlog("jump", "general", "notEqual", "id", 195);
    mlog("sensor", "id", "@pyrolysis-generator", "@id");
    mlog("jump", "general", "notEqual", "id", 196);
    mlog("sensor", "id", "@regen-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 197);
    mlog("sensor", "id", "@titan", "@id");
    mlog("jump", "general", "notEqual", "id", 198);
    mlog("sensor", "id", "@small-deconstructor", "@id");
    mlog("jump", "general", "notEqual", "id", 199);
    mlog("sensor", "id", "@vent-condenser", "@id");
    mlog("jump", "general", "notEqual", "id", 200);
    mlog("sensor", "id", "@phase-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 201);
    mlog("sensor", "id", "@heat-redirector", "@id");
    mlog("jump", "general", "notEqual", "id", 202);
    mlog("sensor", "id", "@tungsten-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 203);
    mlog("sensor", "id", "@tungsten-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 204);
    mlog("sensor", "id", "@tank-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 205);
    mlog("sensor", "id", "@beryllium-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 206);
    mlog("sensor", "id", "@beryllium-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 207);
    mlog("sensor", "id", "@eruption-drill", "@id");
    mlog("jump", "general", "notEqual", "id", 208);
    mlog("sensor", "id", "@ship-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 209);
    mlog("sensor", "id", "@mech-assembler", "@id");
    mlog("jump", "general", "notEqual", "id", 210);
    mlog("sensor", "id", "@shield-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 211);
    mlog("sensor", "id", "@beam-link", "@id");
    mlog("jump", "general", "notEqual", "id", 212);
    mlog("sensor", "id", "@world-processor", "@id");
    mlog("jump", "general", "notEqual", "id", 213);
    mlog("sensor", "id", "@reinforced-payload-conveyor", "@id");
    mlog("jump", "general", "notEqual", "id", 214);
    mlog("sensor", "id", "@reinforced-payload-router", "@id");
    mlog("jump", "general", "notEqual", "id", 215);
    mlog("sensor", "id", "@disperse", "@id");
    mlog("jump", "general", "notEqual", "id", 216);
    mlog("sensor", "id", "@large-shield-projector", "@id");
    mlog("jump", "general", "notEqual", "id", 217);
    mlog("sensor", "id", "@payload-mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 218);
    mlog("sensor", "id", "@world-cell", "@id");
    mlog("jump", "general", "notEqual", "id", 219);
    mlog("sensor", "id", "@carbide-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 220);
    mlog("sensor", "id", "@carbide-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 221);
    mlog("sensor", "id", "@tank-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 222);
    mlog("sensor", "id", "@mech-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 223);
    mlog("sensor", "id", "@ship-fabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 224);
    mlog("sensor", "id", "@reinforced-surge-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 225);
    mlog("sensor", "id", "@radar", "@id");
    mlog("jump", "general", "notEqual", "id", 226);
    mlog("sensor", "id", "@blast-door", "@id");
    mlog("jump", "general", "notEqual", "id", 227);
    mlog("sensor", "id", "@canvas", "@id");
    mlog("jump", "general", "notEqual", "id", 228);
    mlog("sensor", "id", "@armored-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 229);
    mlog("sensor", "id", "@unit-repair-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 230);
    mlog("sensor", "id", "@diffuse", "@id");
    mlog("jump", "general", "notEqual", "id", 231);
    mlog("sensor", "id", "@prime-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 232);
    mlog("sensor", "id", "@basic-assembler-module", "@id");
    mlog("jump", "general", "notEqual", "id", 233);
    mlog("sensor", "id", "@reinforced-surge-wall-large", "@id");
    mlog("jump", "general", "notEqual", "id", 234);
    mlog("sensor", "id", "@tank-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 235);
    mlog("sensor", "id", "@mech-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 236);
    mlog("sensor", "id", "@ship-refabricator", "@id");
    mlog("jump", "general", "notEqual", "id", 237);
    mlog("sensor", "id", "@slag-heater", "@id");
    mlog("jump", "general", "notEqual", "id", 238);
    mlog("sensor", "id", "@afflict", "@id");
    mlog("jump", "general", "notEqual", "id", 239);
    mlog("sensor", "id", "@shielded-wall", "@id");
    mlog("jump", "general", "notEqual", "id", 240);
    mlog("sensor", "id", "@lustre", "@id");
    mlog("jump", "general", "notEqual", "id", 241);
    mlog("sensor", "id", "@scathe", "@id");
    mlog("jump", "general", "notEqual", "id", 242);
    mlog("sensor", "id", "@smite", "@id");
    mlog("jump", "general", "notEqual", "id", 243);
    mlog("sensor", "id", "@underflow-duct", "@id");
    mlog("jump", "general", "notEqual", "id", 244);
    mlog("sensor", "id", "@malign", "@id");
    mlog("jump", "general", "notEqual", "id", 245);
    mlog("sensor", "id", "@shockwave-tower", "@id");
    mlog("jump", "general", "notEqual", "id", 246);
    mlog("sensor", "id", "@heat-source", "@id");
    mlog("jump", "general", "notEqual", "id", 247);
    mlog("sensor", "id", "@flux-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 248);
    mlog("sensor", "id", "@neoplasia-reactor", "@id");
    mlog("jump", "general", "notEqual", "id", 249);
    mlog("sensor", "id", "@heat-router", "@id");
    mlog("jump", "general", "notEqual", "id", 250);
    mlog("sensor", "id", "@large-payload-mass-driver", "@id");
    mlog("jump", "general", "notEqual", "id", 251);
    mlog("sensor", "id", "@reinforced-message", "@id");
    mlog("jump", "general", "notEqual", "id", 252);
    mlog("sensor", "id", "@world-message", "@id");
    mlog("jump", "general", "notEqual", "id", 253);
    mlog("sensor", "id", "@world-switch", "@id");
    mlog("jump", "general", "notEqual", "id", 254);
    mlog("sensor", "id", "@small-heat-redirector", "@id");
    mlog("jump", "general", "notEqual", "id", 255);
    mlog("sensor", "id", "@large-cliff-crusher", "@id");
    mlog("jump", "general", "notEqual", "id", 256);
    mlog("sensor", "id", "@advanced-launch-pad", "@id");
    mlog("jump", "general", "notEqual", "id", 257);
    mlog("sensor", "id", "@landing-pad", "@id");
    mlog("jump", "general", "notEqual", "id", 258);
    mlog("sensor", "id", "@tile-logic-display", "@id");
    mlog("jump", "general", "notEqual", "id", 259);
    mlog("sensor", "id", "@dagger", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@mace", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@fortress", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@scepter", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@reign", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@nova", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@pulsar", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@quasar", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@vela", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@corvus", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@crawler", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@atrax", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@spiroct", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@arkyid", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@toxopid", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@flare", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@horizon", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@zenith", "@id");
    mlog("jump", "general", "notEqual", "id", 17);
    mlog("sensor", "id", "@antumbra", "@id");
    mlog("jump", "general", "notEqual", "id", 18);
    mlog("sensor", "id", "@eclipse", "@id");
    mlog("jump", "general", "notEqual", "id", 19);
    mlog("sensor", "id", "@mono", "@id");
    mlog("jump", "general", "notEqual", "id", 20);
    mlog("sensor", "id", "@poly", "@id");
    mlog("jump", "general", "notEqual", "id", 21);
    mlog("sensor", "id", "@mega", "@id");
    mlog("jump", "general", "notEqual", "id", 22);
    mlog("sensor", "id", "@quad", "@id");
    mlog("jump", "general", "notEqual", "id", 23);
    mlog("sensor", "id", "@oct", "@id");
    mlog("jump", "general", "notEqual", "id", 24);
    mlog("sensor", "id", "@risso", "@id");
    mlog("jump", "general", "notEqual", "id", 25);
    mlog("sensor", "id", "@minke", "@id");
    mlog("jump", "general", "notEqual", "id", 26);
    mlog("sensor", "id", "@bryde", "@id");
    mlog("jump", "general", "notEqual", "id", 27);
    mlog("sensor", "id", "@sei", "@id");
    mlog("jump", "general", "notEqual", "id", 28);
    mlog("sensor", "id", "@omura", "@id");
    mlog("jump", "general", "notEqual", "id", 29);
    mlog("sensor", "id", "@retusa", "@id");
    mlog("jump", "general", "notEqual", "id", 30);
    mlog("sensor", "id", "@oxynoe", "@id");
    mlog("jump", "general", "notEqual", "id", 31);
    mlog("sensor", "id", "@cyerce", "@id");
    mlog("jump", "general", "notEqual", "id", 32);
    mlog("sensor", "id", "@aegires", "@id");
    mlog("jump", "general", "notEqual", "id", 33);
    mlog("sensor", "id", "@navanax", "@id");
    mlog("jump", "general", "notEqual", "id", 34);
    mlog("sensor", "id", "@alpha", "@id");
    mlog("jump", "general", "notEqual", "id", 35);
    mlog("sensor", "id", "@beta", "@id");
    mlog("jump", "general", "notEqual", "id", 36);
    mlog("sensor", "id", "@gamma", "@id");
    mlog("jump", "general", "notEqual", "id", 37);
    mlog("sensor", "id", "@stell", "@id");
    mlog("jump", "general", "notEqual", "id", 38);
    mlog("sensor", "id", "@locus", "@id");
    mlog("jump", "general", "notEqual", "id", 39);
    mlog("sensor", "id", "@precept", "@id");
    mlog("jump", "general", "notEqual", "id", 40);
    mlog("sensor", "id", "@vanquish", "@id");
    mlog("jump", "general", "notEqual", "id", 41);
    mlog("sensor", "id", "@conquer", "@id");
    mlog("jump", "general", "notEqual", "id", 42);
    mlog("sensor", "id", "@merui", "@id");
    mlog("jump", "general", "notEqual", "id", 43);
    mlog("sensor", "id", "@cleroi", "@id");
    mlog("jump", "general", "notEqual", "id", 44);
    mlog("sensor", "id", "@anthicus", "@id");
    mlog("jump", "general", "notEqual", "id", 45);
    mlog("sensor", "id", "@tecta", "@id");
    mlog("jump", "general", "notEqual", "id", 46);
    mlog("sensor", "id", "@collaris", "@id");
    mlog("jump", "general", "notEqual", "id", 47);
    mlog("sensor", "id", "@elude", "@id");
    mlog("jump", "general", "notEqual", "id", 48);
    mlog("sensor", "id", "@avert", "@id");
    mlog("jump", "general", "notEqual", "id", 49);
    mlog("sensor", "id", "@obviate", "@id");
    mlog("jump", "general", "notEqual", "id", 50);
    mlog("sensor", "id", "@quell", "@id");
    mlog("jump", "general", "notEqual", "id", 51);
    mlog("sensor", "id", "@disrupt", "@id");
    mlog("jump", "general", "notEqual", "id", 52);
    mlog("sensor", "id", "@evoke", "@id");
    mlog("jump", "general", "notEqual", "id", 53);
    mlog("sensor", "id", "@incite", "@id");
    mlog("jump", "general", "notEqual", "id", 54);
    mlog("sensor", "id", "@emanate", "@id");
    mlog("jump", "general", "notEqual", "id", 55);
    mlog("sensor", "id", "@copper", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@lead", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@metaglass", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@graphite", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@sand", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@coal", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@titanium", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@thorium", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@scrap", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@silicon", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@plastanium", "@id");
    mlog("jump", "general", "notEqual", "id", 10);
    mlog("sensor", "id", "@phase-fabric", "@id");
    mlog("jump", "general", "notEqual", "id", 11);
    mlog("sensor", "id", "@surge-alloy", "@id");
    mlog("jump", "general", "notEqual", "id", 12);
    mlog("sensor", "id", "@spore-pod", "@id");
    mlog("jump", "general", "notEqual", "id", 13);
    mlog("sensor", "id", "@blast-compound", "@id");
    mlog("jump", "general", "notEqual", "id", 14);
    mlog("sensor", "id", "@pyratite", "@id");
    mlog("jump", "general", "notEqual", "id", 15);
    mlog("sensor", "id", "@beryllium", "@id");
    mlog("jump", "general", "notEqual", "id", 16);
    mlog("sensor", "id", "@water", "@id");
    mlog("jump", "general", "notEqual", "id", 0);
    mlog("sensor", "id", "@slag", "@id");
    mlog("jump", "general", "notEqual", "id", 1);
    mlog("sensor", "id", "@oil", "@id");
    mlog("jump", "general", "notEqual", "id", 2);
    mlog("sensor", "id", "@cryofluid", "@id");
    mlog("jump", "general", "notEqual", "id", 3);
    mlog("sensor", "id", "@neoplasm", "@id");
    mlog("jump", "general", "notEqual", "id", 4);
    mlog("sensor", "id", "@hydrogen", "@id");
    mlog("jump", "general", "notEqual", "id", 5);
    mlog("sensor", "id", "@ozone", "@id");
    mlog("jump", "general", "notEqual", "id", 6);
    mlog("sensor", "id", "@cyanogen", "@id");
    mlog("jump", "general", "notEqual", "id", 7);
    mlog("sensor", "id", "@gallium", "@id");
    mlog("jump", "general", "notEqual", "id", 8);
    mlog("sensor", "id", "@nitrogen", "@id");
    mlog("jump", "general", "notEqual", "id", 9);
    mlog("sensor", "id", "@arkycite", "@id");
    mlog("jump", "general", "notEqual", "id", 10);

    mlog("jump", "specific", "notEqual", "@blockCount", 260);
    mlog("jump", "specific", "notEqual", "@itemCount", 20);
    mlog("jump", "specific", "notEqual", "@liquidCount", 11);
    mlog("jump", "specific", "notEqual", "@unitCount", 56);
    mlog("sensor", "id", "@tungsten", "@id");
    mlog("jump", "specific", "notEqual", "id", 17);
    mlog("sensor", "id", "@oxide", "@id");
    mlog("jump", "specific", "notEqual", "id", 18);
    mlog("sensor", "id", "@carbide", "@id");
    mlog("jump", "specific", "notEqual", "id", 19);

    mlog("print", in
        "[green]No compatibility issues encountered. Mindcode is fully compatible with this Mindustry version.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("general:");
    mlog("print", in
        "[salmon]Mindcode metadata of stable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = none;[]\n" +
        "to avoid incompatibility issues.");
    mlog("jump", "finish", "always", 0, 0);
    mlogLabel("specific:");
    mlog("print", in
        "[salmon]Mindcode metadata of unstable built-ins are not compatible with this Mindustry version.[]\n" +
        "Please report the problem, and use [gold]#set builtin-evaluation = compatible;[]\n" +
        "to avoid incompatibility issues.");
    mlogLabel("finish:");
    printflush(message1);
    do while true;
end;
