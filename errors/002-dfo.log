File 002-dfo.mnd: number of reported ambiguities: 10
Active optimizations:
    case-expression-optimization = none,
    case-switching = none,
    data-flow-optimization = advanced,
    dead-code-elimination = none,
    expression-optimization = none,
    function-inlining = advanced,
    if-expression-optimization = advanced,
    jump-normalization = advanced,
    jump-optimization = none,
    jump-straightening = none,
    jump-threading = none,
    loop-hoisting = advanced,
    loop-optimization = none,
    loop-unrolling = none,
    print-merging = none,
    return-optimization = none,
    single-step-elimination = none,
    stack-optimization = none,
    temp-variables-elimination = none,
    unreachable-code-elimination = none

    43 instructions before optimizations.
     2 instructions eliminated by Jump Normalization (4 iterations).
    28 instructions eliminated by Data Flow Optimization (9 iterations).
    13 instructions after optimizations.

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-4 instructions):
 
     2 set __fn0_j 1
     3 label __label3
     4 label __label6
-    * set __fn1_n __fn0_j
+    5 set __fn1_n 1
     6 set __fn1_gt 0
-    * set __fn1_lt __fn1_gt
+    7 set __fn1_lt 0
     8 setaddr __tmp3 __label11
     9 set __fn1_i 1
    10 label __label9
-    * op lessThan __tmp4 __fn1_i __fn1_n
+   11 op lessThan __tmp4 1 __fn0_j
    12 jump __label12 equal __tmp4 false
    13 op add __tmp6 __fn1_lt 1
-    * set __fn1_lt __tmp6
-    * set __tmp5 __fn1_lt
+   14 op add __fn1_lt __fn1_lt 1
+   15 set __tmp5 __tmp6
    16 jump __label13 always
    17 label __label12
-    * op greaterThan __tmp7 __fn1_i __fn1_n
+   18 op greaterThan __tmp7 1 __fn0_j
    19 jump __label14 equal __tmp7 false
    20 op add __tmp9 __fn1_gt 1
-    * set __fn1_gt __tmp9
-    * set __tmp8 __fn1_gt
+   21 op add __fn1_gt __fn1_gt 1
+   22 set __tmp8 __tmp9
    23 jump __label15 always
    24 label __label14
    25 set __tmp8 null
    26 label __label15
-    * set __tmp5 __tmp8
    27 label __label13
    28 label __label8
    29 goto __tmp3 marker1
 
    31 label __label10
    32 op sub __tmp10 __fn1_gt __fn1_lt
    33 op abs __tmp11 __tmp10
-    * set __fn1_dif __tmp11
    34 op add __tmp12 __fn1_gt __fn1_lt
    35 op sub __tmp13 1 1
-    * op greaterThanEq __tmp14 __tmp12 __tmp13
+   36 op greaterThanEq __tmp14 __tmp12 0
    37 jump __label16 equal __tmp14 false
    38 set __tmp15 true
    39 jump __label17 always
 
    42 label __label17
    43 set __tmp2 __tmp15
    44 label __label7
-    * jump __label18 equal __tmp2 false
-    * set __tmp0 __fn0_j
+   45 jump __label18 equal __tmp15 false
+   46 set __tmp0 1
    47 jump __label1 always
-    * set __tmp16 null
    48 jump __label19 always
    49 label __label18
-    * set __tmp16 null
    50 label __label19
    51 label __label2
    52 goto __tmp1 marker0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
     2 set __fn0_j 1
     3 label __label3
     4 label __label6
-    * set __fn1_n 1
     5 set __fn1_gt 0
     6 set __fn1_lt 0
     7 setaddr __tmp3 __label11
-    * set __fn1_i 1
     8 label __label9
-    * op lessThan __tmp4 1 __fn0_j
-    * jump __label12 equal __tmp4 false
+    9 op lessThan __tmp4 1 1
+   10 jump __label12 equal false false
    11 op add __tmp6 __fn1_lt 1
    12 op add __fn1_lt __fn1_lt 1
-    * set __tmp5 __tmp6
    13 jump __label13 always
    14 label __label12
-    * op greaterThan __tmp7 1 __fn0_j
-    * jump __label14 equal __tmp7 false
+   15 op greaterThan __tmp7 1 1
+   16 jump __label14 equal false false
    17 op add __tmp9 __fn1_gt 1
    18 op add __fn1_gt __fn1_gt 1
-    * set __tmp8 __tmp9
    19 jump __label15 always
    20 label __label14
-    * set __tmp8 null
    21 label __label15
    22 label __label13
    23 label __label8
 
    25 gotolabel __label11 marker1
    26 label __label10
    27 op sub __tmp10 __fn1_gt __fn1_lt
-    * op abs __tmp11 __tmp10
    28 op add __tmp12 __fn1_gt __fn1_lt
-    * op sub __tmp13 1 1
    29 op greaterThanEq __tmp14 __tmp12 0
    30 jump __label16 equal __tmp14 false
    31 set __tmp15 true
 
    33 label __label16
    34 set __tmp15 false
    35 label __label17
-    * set __tmp2 __tmp15
    36 label __label7
    37 jump __label18 equal __tmp15 false
    38 set __tmp0 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
     0 label __label0
     1 setaddr __tmp1 __label5
-    * set __fn0_j 1
     2 label __label3
     3 label __label6
     4 set __fn1_gt 0
     5 set __fn1_lt 0
     6 setaddr __tmp3 __label11
     7 label __label9
-    * op lessThan __tmp4 1 1
     8 jump __label12 equal false false
-    * op add __tmp6 __fn1_lt 1
-    * op add __fn1_lt __fn1_lt 1
+    9 op add __tmp6 0 1
+   10 op add __fn1_lt 0 1
    11 jump __label13 always
    12 label __label12
-    * op greaterThan __tmp7 1 1
    13 jump __label14 equal false false
-    * op add __tmp9 __fn1_gt 1
-    * op add __fn1_gt __fn1_gt 1
+   14 op add __tmp9 0 1
+   15 op add __fn1_gt 0 1
    16 jump __label15 always
    17 label __label14
    18 label __label15
 
    21 goto __tmp3 marker1
    22 gotolabel __label11 marker1
    23 label __label10
-    * op sub __tmp10 __fn1_gt __fn1_lt
-    * op add __tmp12 __fn1_gt __fn1_lt
-    * op greaterThanEq __tmp14 __tmp12 0
-    * jump __label16 equal __tmp14 false
+   24 op sub __tmp10 0 0
+   25 op add __tmp12 0 0
+   26 op greaterThanEq __tmp14 0 0
+   27 jump __label16 equal true false
    28 set __tmp15 true
    29 jump __label17 always
    30 label __label16
    31 set __tmp15 false
    32 label __label17
    33 label __label7
-    * jump __label18 equal __tmp15 false
+   34 jump __label18 equal true false
    35 set __tmp0 1
    36 jump __label1 always
    37 jump __label19 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-11 instructions):
 
     1 setaddr __tmp1 __label5
     2 label __label3
     3 label __label6
-    * set __fn1_gt 0
-    * set __fn1_lt 0
     4 setaddr __tmp3 __label11
     5 label __label9
     6 jump __label12 equal false false
-    * op add __tmp6 0 1
-    * op add __fn1_lt 0 1
     7 jump __label13 always
     8 label __label12
     9 jump __label14 equal false false
-    * op add __tmp9 0 1
-    * op add __fn1_gt 0 1
    10 jump __label15 always
    11 label __label14
    12 label __label15
 
    15 goto __tmp3 marker1
    16 gotolabel __label11 marker1
    17 label __label10
-    * op sub __tmp10 0 0
-    * op add __tmp12 0 0
-    * op greaterThanEq __tmp14 0 0
    18 jump __label16 equal true false
-    * set __tmp15 true
    19 jump __label17 always
    20 label __label16
-    * set __tmp15 false
    21 label __label17
    22 label __label7
    23 jump __label18 equal true false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-1 instructions):
 
    21 label __label17
    22 label __label7
    23 jump __label18 equal true false
-    * set __tmp0 1
    24 jump __label1 always
    25 jump __label19 always
    26 label __label18
 
    31 label __label4
    32 set __tmp0 "Error"
    33 label __label1
-    * print __tmp0
+   34 print "Error"
    35 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-1 instructions):
 
    29 goto __tmp1 marker0
    30 gotolabel __label5 marker0
    31 label __label4
-    * set __tmp0 "Error"
    32 label __label1
    33 print "Error"
    34 end

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
     3 label __label6
     4 setaddr __tmp3 __label11
     5 label __label9
-    * jump __label12 equal false false
+    6 jump __label12 always
     7 jump __label13 always
     8 label __label12
-    * jump __label14 equal false false
+    9 jump __label14 always
    10 jump __label15 always
    11 label __label14
    12 label __label15
 
    15 goto __tmp3 marker1
    16 gotolabel __label11 marker1
    17 label __label10
-    * jump __label16 equal true false
    18 jump __label17 always
    19 label __label16
    20 label __label17
    21 label __label7
-    * jump __label18 equal true false
    22 jump __label1 always
    23 jump __label19 always
    24 label __label18

Final code before resolving virtual instructions:

    0:  setaddr __tmp1 __label5                                      for j in y do
    1:  setaddr __tmp3 __label11                                     for i in x do
    2:  jump __label12 always 0 0                                    if i < n then
    3:  jump __label13 always 0 0                                    ...
        label __label12                                              ...
    4:  jump __label14 always 0 0                                    elsif i > n then
    5:  jump __label15 always 0 0                                    ...
        label __label14                                              ...
        label __label15                                              ...
        label __label13                                              if i < n then
    6:  goto __tmp3 marker1                                          for i in x do
        gotolabel __label11 marker1                                  ...
    7:  jump __label17 always 0 0                                    if gt + lt >= length(x) - 1 then
        label __label17                                              ...
    8:  jump __label1 always 0 0                                     return j;
    9:  jump __label19 always 0 0                                    if bar(j, y) then
        label __label19                                              ...
   10:  goto __tmp1 marker0                                          for j in y do
        gotolabel __label5 marker0                                   ...
        label __label1                                               print(foo(1));
   11:  print "Error"                                                ...
   12:  end


Performance: parsed in 342 ms, compiled in 127 ms, optimized in 68 ms, run in 2 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (9 steps):
Error
