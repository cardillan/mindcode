# Source code
#source = math.mnd
#source = printing.mnd
#source = quick-sort.mnd
#source = bubble-sort.mnd
#source = impact-reactor-logic.mnd
source = vela.mnd
#source = C:\\Home\\golem\\mindcode\\unit-transport.mnd
#source = C:\\Home\\golem\\mindcode\\mandelbrot-compute.mnd
#source = C:\\Home\\golem\\mindcode\\factory-monitor.mnd
#source = C:\\Home\\golem\\mindcode\\breakout.mnd

# Number of samples (when not specified or commented out, all combinations are tested)
samples = 100000

# Run the compiled program (true/false).
# Running the program evaluates assertions; when assertions aren't present, running doesn't make sense.
#run = true
run = false

# Number of concurrent threads
parallelism = 24

# Optimization levels to test for each optimizer
# If no levels are configured for an optimizer, it will be set to `none` in all tests
case-expression-optimization = none, basic
case-switching = none, basic
data-flow-optimization = none, basic, advanced, experimental
dead-code-elimination = none, basic, advanced
expression-optimization = none, basic, advanced
function-inlining = none, basic, advanced
if-expression-optimization = none, basic, experimental
jump-normalization = none, basic
jump-optimization = none, basic
jump-straightening = none, basic
jump-threading = none, basic, advanced
loop-hoisting = none, basic, advanced
loop-optimization = none, basic
loop-unrolling = none, basic, advanced
print-merging = none, basic, advanced, experimental
return-optimization = none, basic
single-step-elimination = none, basic, advanced, experimental
stack-optimization = none, basic
temp-variables-elimination = none, basic
unreachable-code-elimination = none, basic, advanced
