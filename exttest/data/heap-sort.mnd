param SIZE = 512;
param ARRAY = bank2;

def up(index)
    while index > 0 do
        parent = (index - 1) \ 2;
        iv = ARRAY[index];
        pv = ARRAY[parent];
        if pv < iv then
            ARRAY[index] = pv;
            ARRAY[parent] = iv;
            index = parent;
        else
            break;
        end;
    end;
end;

def down(index)
    parent = 0;
    while (child = parent * 2 + 1) <= index do
        cv = ARRAY[child];
        if child < index then
            if cv < ARRAY[child + 1] then
                child += 1;
                cv = ARRAY[child];
            end;
        end;
        pv = ARRAY[parent];
        if pv < cv then
            ARRAY[parent] = cv;
            ARRAY[child] = pv;
            parent = child;
        else
            break;
        end;
    end;
end;

const prime = 987660893;
counter = 155;
sum = 0;
for i in 0 .. SIZE - 1 do
    sum += counter;
    ARRAY[i] = counter;
    counter = (counter + prime) % 10000;
end;

// Build a heap
for i in 1 ... SIZE do
    up(i);
    //output(i);
end;

// Repeatedly use the heap's greatest value to sort the array
index = SIZE - 1;
while index > 0 do
    x = ARRAY[0];
    ARRAY[0] = ARRAY[index];
    ARRAY[index] = x;
    index -= 1;
    down(index);
end;


sum2 = 0;
for i in 0 .. SIZE - 1 do
    sum2 += ARRAY[i];
end;

assertEquals(sum, sum2, "Array content modified.");

for i in 1 .. SIZE - 1 do
    if ARRAY[i] < ARRAY[i - 1] then
        assertEquals(true, false, "Array not sorted");
        break;
    end;
end;

stopProcessor();


def bbb(y)
    ccc(y);
end;

def ccc(z)
    print(z);
end;
