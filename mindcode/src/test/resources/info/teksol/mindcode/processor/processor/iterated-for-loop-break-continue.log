    66 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     4 instructions eliminated by Dead Code Elimination (3 iterations).
     4 instructions eliminated by Jump Optimization (4 iterations).
     3 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
     5 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     9 instructions added by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Jump Straightening (4 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
     4 instructions eliminated by Stack Optimization.
    48 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 953):
  * Loop Optimization: replicate condition at line 3             cost   9, benefit       25.0, efficiency        2.8 (+9 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
    38 set __tmp8 null
    39 label __label11
    40 label __label2
-    * op add __tmp9 i 2
-    * set i __tmp9
-    * op add __tmp10 j 1
-    * set j __tmp10
+   41 op add i i 2
+   42 noop
+   43 op add j j 1
+   44 noop
    45 jump __label1 always
    46 label __label3
    47 end
 
    55 label __label15
    56 pop bank1 __fn0_n
    57 set __tmp14 __fn0retval
-    * op mul __tmp15 -1 __tmp14
-    * set __tmp12 __tmp15
+   58 op mul __tmp12 -1 __tmp14
+   59 noop
    60 jump __label14 always
    61 label __label13
    62 set __tmp12 __fn0_n

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-4 instructions):
 
    18 op equal __tmp4 __tmp3 4
    19 jump __label7 equal __tmp4 false
    20 jump __label2 always
-    * set __tmp5 null
+   21 noop
    22 jump __label8 always
    23 label __label7
-    * set __tmp5 null
+   24 noop
    25 label __label8
    26 print i
    27 print j
 
    32 op equal __tmp7 __tmp6 10
    33 jump __label10 equal __tmp7 false
    34 jump __label3 always
-    * set __tmp8 null
+   35 noop
    36 jump __label11 always
    37 label __label10
-    * set __tmp8 null
+   38 noop
    39 label __label11
    40 label __label2
    41 op add i i 2

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-4 instructions):
 
     9 callrec bank1 __label0 __label5
    10 label __label5
    11 set __tmp1 __fn0retval
-    * op lessThanEq __tmp2 __tmp0 __tmp1
-    * jump __label3 equal __tmp2 false
+   12 jump __label3 greaterThan __tmp0 __tmp1
    13 set __fn0_n i
    14 callrec bank1 __label0 __label6
    15 label __label6
    16 set __tmp3 __fn0retval
-    * op equal __tmp4 __tmp3 4
-    * jump __label7 equal __tmp4 false
+   17 jump __label7 notEqual __tmp3 4
    18 jump __label2 always
    19 noop
    20 jump __label8 always
 
    27 callrec bank1 __label0 __label9
    28 label __label9
    29 set __tmp6 __fn0retval
-    * op equal __tmp7 __tmp6 10
-    * jump __label10 equal __tmp7 false
+   30 jump __label10 notEqual __tmp6 10
    31 jump __label3 always
    32 noop
    33 jump __label11 always
 
    43 label __label3
    44 end
    45 label __label0
-    * op greaterThan __tmp11 __fn0_n 0
-    * jump __label13 equal __tmp11 false
+   46 jump __label13 lessThanEq __fn0_n 0
    47 op mul __tmp13 -1 __fn0_n
    48 push bank1 __fn0_n
    49 set __fn0_n __tmp13

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    17 jump __label7 notEqual __tmp3 4
    18 jump __label2 always
    19 noop
-    * jump __label8 always
+   20 noop
    21 label __label7
    22 noop
    23 label __label8
 
    30 jump __label10 notEqual __tmp6 10
    31 jump __label3 always
    32 noop
-    * jump __label11 always
+   33 noop
    34 label __label10
    35 noop
    36 label __label11

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    43 label __label3
    44 end
    45 label __label0
-    * jump __label13 lessThanEq __fn0_n 0
+   46 set __fn0retval __fn0_n
+   47 jump __label14 lessThanEq __fn0_n 0
    48 op mul __tmp13 -1 __fn0_n
    49 push bank1 __fn0_n
    50 set __fn0_n __tmp13
 
    52 label __label15
    53 pop bank1 __fn0_n
    54 set __tmp14 __fn0retval
-    * op mul __tmp12 -1 __tmp14
+   55 op mul __fn0retval -1 __tmp14
    56 noop
    57 jump __label14 always
-    * label __label13
-    * set __tmp12 __fn0_n
    58 label __label14
-    * set __fn0retval __tmp12
    59 label __label12
    60 return bank1
    61 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     9 callrec bank1 __label0 __label5
    10 label __label5
    11 set __tmp1 __fn0retval
-    * jump __label3 greaterThan __tmp0 __tmp1
+   12 jump __label3 greaterThan __tmp0 __fn0retval
    13 set __fn0_n i
    14 callrec bank1 __label0 __label6
    15 label __label6
    16 set __tmp3 __fn0retval
-    * jump __label7 notEqual __tmp3 4
+   17 jump __label7 notEqual __fn0retval 4
    18 jump __label2 always
    19 noop
    20 noop
 
    27 callrec bank1 __label0 __label9
    28 label __label9
    29 set __tmp6 __fn0retval
-    * jump __label10 notEqual __tmp6 10
+   30 jump __label10 notEqual __fn0retval 10
    31 jump __label3 always
    32 noop
    33 noop
 
    47 jump __label14 lessThanEq __fn0_n 0
    48 op mul __tmp13 -1 __fn0_n
    49 push bank1 __fn0_n
-    * set __fn0_n __tmp13
+   50 op mul __fn0_n -1 __fn0_n
    51 callrec bank1 __label0 __label15
    52 label __label15
    53 pop bank1 __fn0_n
    54 set __tmp14 __fn0retval
-    * op mul __fn0retval -1 __tmp14
+   55 op mul __fn0retval -1 __fn0retval
    56 noop
    57 jump __label14 always
    58 label __label14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
     8 set __fn0_n j
     9 callrec bank1 __label0 __label5
    10 label __label5
-    * set __tmp1 __fn0retval
    11 jump __label3 greaterThan __tmp0 __fn0retval
    12 set __fn0_n i
    13 callrec bank1 __label0 __label6
    14 label __label6
-    * set __tmp3 __fn0retval
    15 jump __label7 notEqual __fn0retval 4
    16 jump __label2 always
    17 noop
 
    24 set __fn0_n i
    25 callrec bank1 __label0 __label9
    26 label __label9
-    * set __tmp6 __fn0retval
    27 jump __label10 notEqual __fn0retval 10
    28 jump __label3 always
    29 noop
 
    42 label __label0
    43 set __fn0retval __fn0_n
    44 jump __label14 lessThanEq __fn0_n 0
-    * op mul __tmp13 -1 __fn0_n
    45 push bank1 __fn0_n
    46 op mul __fn0_n -1 __fn0_n
    47 callrec bank1 __label0 __label15
    48 label __label15
    49 pop bank1 __fn0_n
-    * set __tmp14 __fn0retval
    50 op mul __fn0retval -1 __fn0retval
    51 noop
    52 jump __label14 always

Modifications by Loop Optimization: replicate condition at line 3 (+9 instructions):
 
     9 callrec bank1 __label0 __label5
    10 label __label5
    11 jump __label3 greaterThan __tmp0 __fn0retval
+   12 label __label16
    13 set __fn0_n i
    14 callrec bank1 __label0 __label6
    15 label __label6
 
    37 noop
    38 op add j j 1
    39 noop
-    * jump __label1 always
+   40 set __fn0_n i
+   41 callrec bank1 __label0 __label17
+   42 label __label17
+   43 set __tmp0 __fn0retval
+   44 set __fn0_n j
+   45 callrec bank1 __label0 __label18
+   46 label __label18
+   47 jump __label16 lessThanEq __tmp0 __fn0retval
    48 label __label3
    49 end
    50 label __label0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set i 0
     2 set j 10
     3 label __label1
-    * set __fn0_n i
+    4 set __fn0_n 0
     5 callrec bank1 __label0 __label4
     6 label __label4
     7 set __tmp0 __fn0retval
-    * set __fn0_n j
+    8 set __fn0_n 10
     9 callrec bank1 __label0 __label5
    10 label __label5
    11 jump __label3 greaterThan __tmp0 __fn0retval

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
    57 pop bank1 __fn0_n
    58 op mul __fn0retval -1 __fn0retval
    59 noop
-    * jump __label14 always
+   60 noop
    61 label __label14
    62 label __label12
    63 return bank1

Modifications by Final phase, Jump Straightening, iteration 1 (-2 instructions):
 
    13 set __fn0_n i
    14 callrec bank1 __label0 __label6
    15 label __label6
-    * jump __label7 notEqual __fn0retval 4
-    * jump __label2 always
+   16 jump __label2 equal __fn0retval 4
+   17 noop
    18 noop
    19 noop
    20 label __label7
 
    25 set __fn0_n i
    26 callrec bank1 __label0 __label9
    27 label __label9
-    * jump __label10 notEqual __fn0retval 10
-    * jump __label3 always
+   28 jump __label3 equal __fn0retval 10
+   29 noop
    30 noop
    31 noop
    32 label __label10

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    61 label __label14
    62 label __label12
    63 return bank1
-    * end

Modifications by Final phase, Stack Optimization, iteration 1 (-4 instructions):
 
    50 label __label0
    51 set __fn0retval __fn0_n
    52 jump __label14 lessThanEq __fn0_n 0
-    * push bank1 __fn0_n
    53 op mul __fn0_n -1 __fn0_n
    54 callrec bank1 __label0 __label15
    55 label __label15
-    * pop bank1 __fn0_n
    56 op mul __fn0retval -1 __fn0retval
    57 noop
    58 noop

Final code before resolving virtual instructions:

set __sp 0
set i 0
set j 10
set __fn0_n 0
callrec bank1 __label0 __label4
label __label4
set __tmp0 __fn0retval
set __fn0_n 10
callrec bank1 __label0 __label5
label __label5
jump __label3 greaterThan __tmp0 __fn0retval
label __label16
set __fn0_n i
callrec bank1 __label0 __label6
label __label6
jump __label2 equal __fn0retval 4
print i
print j
set __fn0_n i
callrec bank1 __label0 __label9
label __label9
jump __label3 equal __fn0retval 10
label __label2
op add i i 2
op add j j 1
set __fn0_n i
callrec bank1 __label0 __label17
label __label17
set __tmp0 __fn0retval
set __fn0_n j
callrec bank1 __label0 __label18
label __label18
jump __label16 lessThanEq __tmp0 __fn0retval
label __label3
end
label __label0
set __fn0retval __fn0_n
jump __label14 lessThanEq __fn0_n 0
op mul __fn0_n -1 __fn0_n
callrec bank1 __label0 __label15
label __label15
op mul __fn0retval -1 __fn0retval
label __label14
return bank1
