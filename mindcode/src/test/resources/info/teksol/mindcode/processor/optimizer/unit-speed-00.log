    97 instructions before optimizations.
     6 instructions eliminated by Temp Variables Elimination.
     6 instructions eliminated by Jump Optimization (3 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
     5 instructions added by Loop Optimization (2 iterations).
     6 loops improved by Loop Optimization.
     3 instructions eliminated by Print Merging.
    86 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 916):
  * Loop Optimization: replicate condition at line 17            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 24            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 32            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 45            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 58            cost   1, benefit       25.0, efficiency       25.0

Pass 1: speed optimization selection (cost limit 915):
  * Loop Optimization: replicate condition at line 24            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 32            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 45            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 58            cost   1, benefit       25.0, efficiency       25.0

Pass 1: speed optimization selection (cost limit 914):
  * Loop Optimization: replicate condition at line 32            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 45            cost   1, benefit       25.0, efficiency       25.0
    Loop Optimization: replicate condition at line 58            cost   1, benefit       25.0, efficiency       25.0

Pass 1: speed optimization selection (cost limit 913):
  * Loop Optimization: replicate condition at line 45            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Optimization: replicate condition at line 58            cost   1, benefit       25.0, efficiency       25.0

Pass 1: speed optimization selection (cost limit 912):
  * Loop Optimization: replicate condition at line 58            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-6 instructions):
 
     1 set SX 10
     2 set SY 10
     3 set DX 10
-    * op sub __tmp0 @maph 10
-    * set DY __tmp0
+    4 op sub DY @maph 10
+    5 noop
     6 op sub __tmp1 DX SX
     7 op sub __tmp2 DY SY
     8 op len __tmp3 __tmp1 __tmp2
 
    10 op add __tmp5 __tmp4 0.5
    11 op floor __tmp6 __tmp5
    12 op div __tmp7 __tmp6 100
-    * op sub __tmp8 __tmp7 2
-    * set distance __tmp8
+   13 op sub distance __tmp7 2
+   14 noop
    15 ubind UNIT
    16 label __label0
    17 op equal __tmp9 @unit null
 
    59 label __label11
    60 print "Moving to destination"
    61 printflush message1
-    * set __tmp16 @time
-    * set start __tmp16
+   62 set start @time
+   63 noop
    64 ucontrol move DX DY
    65 label __label12
    66 ucontrol within DX DY 1 __tmp17
 
    70 label __label13
    71 jump __label12 always
    72 label __label14
-    * set __tmp19 @time
-    * set finish __tmp19
+   73 set finish @time
+   74 noop
    75 op sub __tmp20 SX DX
    76 op abs __tmp21 __tmp20
    77 op div __tmp22 __tmp21 2
 
    80 op div __tmp25 __tmp24 2
    81 ucontrol move __tmp22 __tmp25
    82 ucontrol flag 0
-    * op sub __tmp26 finish start
-    * set elapsed __tmp26
+   83 op sub elapsed finish start
+   84 noop
    85 op div __tmp27 distance elapsed
    86 op mul __tmp28 __tmp27 100000
    87 op floor __tmp29 __tmp28
-    * op div __tmp30 __tmp29 100
-    * set speed __tmp30
+   88 op div speed __tmp29 100
+   89 noop
    90 label __label15
    91 sensor __tmp31 switch1 @enabled
    92 op equal __tmp32 __tmp31 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
    14 noop
    15 ubind UNIT
    16 label __label0
-    * op equal __tmp9 @unit null
-    * jump __label2 equal __tmp9 false
+   17 jump __label2 notEqual @unit null
    18 print UNIT
    19 print ": no active unit found."
    20 printflush message1
 
    24 label __label2
    25 label __label3
    26 sensor __tmp10 switch1 @enabled
-    * op equal __tmp11 __tmp10 false
-    * jump __label5 equal __tmp11 false
+   27 jump __label5 notEqual __tmp10 false
    28 print "Press button to start measuring "
    29 print UNIT
    30 print " speed."
 
    35 control enabled switch1 false
    36 label __label6
    37 sensor __tmp12 @unit @controlled
-    * op notEqual __tmp13 __tmp12 0
-    * jump __label8 equal __tmp13 false
+   38 jump __label8 equal __tmp12 0
    39 print "Searching free "
    40 print UNIT
    41 printflush message1
 
    46 ucontrol flag 1
    47 label __label9
    48 ucontrol within SX SY 1 __tmp14
-    * op equal __tmp15 __tmp14 false
-    * jump __label11 equal __tmp15 false
+   49 jump __label11 notEqual __tmp14 false
    50 print "Moving to start"
    51 printflush message1
    52 ucontrol move SX SY
 
    60 ucontrol move DX DY
    61 label __label12
    62 ucontrol within DX DY 1 __tmp17
-    * op equal __tmp18 __tmp17 false
-    * jump __label14 equal __tmp18 false
+   63 jump __label14 notEqual __tmp17 false
    64 ucontrol move DX DY
    65 label __label13
    66 jump __label12 always
 
    84 noop
    85 label __label15
    86 sensor __tmp31 switch1 @enabled
-    * op equal __tmp32 __tmp31 false
-    * jump __label17 equal __tmp32 false
+   87 jump __label17 notEqual __tmp31 false
    88 print "Measurement results ("
    89 print UNIT
    90 print "):"

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    78 op sub elapsed finish start
    79 noop
    80 op div __tmp27 distance elapsed
-    * op mul __tmp28 __tmp27 100000
-    * op floor __tmp29 __tmp28
+   81 noop
+   82 op idiv __tmp29 __tmp27 0.00001
    83 op div speed __tmp29 100
    84 noop
    85 label __label15

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    15 ubind UNIT
    16 label __label0
    17 jump __label2 notEqual @unit null
+   18 label __label18
    19 print UNIT
    20 print ": no active unit found."
    21 printflush message1
    22 ubind UNIT
    23 label __label1
-    * jump __label0 always
+   24 jump __label18 equal @unit null
    25 label __label2
    26 label __label3
    27 sensor __tmp10 switch1 @enabled

Modifications by Loop Optimization: replicate condition at line 17 (+1 instructions):
 
    26 label __label3
    27 sensor __tmp10 switch1 @enabled
    28 jump __label5 notEqual __tmp10 false
+   29 label __label19
    30 print "Press button to start measuring "
    31 print UNIT
    32 print " speed."
    33 printflush message1
    34 label __label4
-    * jump __label3 always
+   35 sensor __tmp10 switch1 @enabled
+   36 jump __label19 equal __tmp10 false
    37 label __label5
    38 control enabled switch1 false
    39 label __label6

Modifications by Loop Optimization: replicate condition at line 24 (+1 instructions):
 
    39 label __label6
    40 sensor __tmp12 @unit @controlled
    41 jump __label8 equal __tmp12 0
+   42 label __label20
    43 print "Searching free "
    44 print UNIT
    45 printflush message1
    46 ubind UNIT
    47 label __label7
-    * jump __label6 always
+   48 sensor __tmp12 @unit @controlled
+   49 jump __label20 notEqual __tmp12 0
    50 label __label8
    51 ucontrol flag 1
    52 label __label9

Modifications by Loop Optimization: replicate condition at line 32 (+1 instructions):
 
    52 label __label9
    53 ucontrol within SX SY 1 __tmp14
    54 jump __label11 notEqual __tmp14 false
+   55 label __label21
    56 print "Moving to start"
    57 printflush message1
    58 ucontrol move SX SY
    59 label __label10
-    * jump __label9 always
+   60 ucontrol within SX SY 1 __tmp14
+   61 jump __label21 equal __tmp14 false
    62 label __label11
    63 print "Moving to destination"
    64 printflush message1

Modifications by Loop Optimization: replicate condition at line 45 (+1 instructions):
 
    68 label __label12
    69 ucontrol within DX DY 1 __tmp17
    70 jump __label14 notEqual __tmp17 false
+   71 label __label22
    72 ucontrol move DX DY
    73 label __label13
-    * jump __label12 always
+   74 ucontrol within DX DY 1 __tmp17
+   75 jump __label22 equal __tmp17 false
    76 label __label14
    77 set finish @time
    78 noop

Modifications by Loop Optimization: replicate condition at line 58 (+1 instructions):
 
    94 label __label15
    95 sensor __tmp31 switch1 @enabled
    96 jump __label17 notEqual __tmp31 false
+   97 label __label23
    98 print "Measurement results ("
    99 print UNIT
   100 print "):"
 
   113 print "\nPress button to repeat"
   114 printflush message1
   115 label __label16
-    * jump __label15 always
+  116 sensor __tmp31 switch1 @enabled
+  117 jump __label23 equal __tmp31 false
   118 label __label17
   119 end

Modifications by Final phase, Print Merging, iteration 1 (-3 instructions):
 
    97 label __label23
    98 print "Measurement results ("
    99 print UNIT
-    * print "):"
-    * print "\nMap dimensions: "
+  100 print "):\nMap dimensions: "
   101 print @mapw
   102 print "x"
   103 print @maph
   104 print "\nElapsed time: "
   105 print elapsed
-    * print "ms"
-    * print "\nDistance travelled: "
+  106 print "ms\nDistance travelled: "
   107 print distance
   108 print "\nSpeed: "
   109 print speed
-    * print "tiles/s"
-    * print "\nPress button to repeat"
+  110 print "tiles/s\nPress button to repeat"
   111 printflush message1
   112 label __label16
   113 sensor __tmp31 switch1 @enabled

Final code before resolving virtual instructions:

set UNIT @flare
set SX 10
set SY 10
set DX 10
op sub DY @maph 10
op sub __tmp1 DX SX
op sub __tmp2 DY SY
op len __tmp3 __tmp1 __tmp2
op mul __tmp4 100 __tmp3
op add __tmp5 __tmp4 0.5
op floor __tmp6 __tmp5 0
op div __tmp7 __tmp6 100
op sub distance __tmp7 2
ubind UNIT
jump __label2 notEqual @unit null
label __label18
print UNIT
print ": no active unit found."
printflush message1
ubind UNIT
jump __label18 equal @unit null
label __label2
sensor __tmp10 switch1 @enabled
jump __label5 notEqual __tmp10 false
label __label19
print "Press button to start measuring "
print UNIT
print " speed."
printflush message1
sensor __tmp10 switch1 @enabled
jump __label19 equal __tmp10 false
label __label5
control enabled switch1 false 0 0 0
sensor __tmp12 @unit @controlled
jump __label8 equal __tmp12 0
label __label20
print "Searching free "
print UNIT
printflush message1
ubind UNIT
sensor __tmp12 @unit @controlled
jump __label20 notEqual __tmp12 0
label __label8
ucontrol flag 1 0 0 0 0
ucontrol within SX SY 1 __tmp14 0
jump __label11 notEqual __tmp14 false
label __label21
print "Moving to start"
printflush message1
ucontrol move SX SY 0 0 0
ucontrol within SX SY 1 __tmp14 0
jump __label21 equal __tmp14 false
label __label11
print "Moving to destination"
printflush message1
set start @time
ucontrol move DX DY 0 0 0
ucontrol within DX DY 1 __tmp17 0
jump __label14 notEqual __tmp17 false
label __label22
ucontrol move DX DY 0 0 0
ucontrol within DX DY 1 __tmp17 0
jump __label22 equal __tmp17 false
label __label14
set finish @time
op sub __tmp20 SX DX
op abs __tmp21 __tmp20 0
op div __tmp22 __tmp21 2
op sub __tmp23 SY DY
op abs __tmp24 __tmp23 0
op div __tmp25 __tmp24 2
ucontrol move __tmp22 __tmp25 0 0 0
ucontrol flag 0 0 0 0 0
op sub elapsed finish start
op div __tmp27 distance elapsed
op idiv __tmp29 __tmp27 0.00001
op div speed __tmp29 100
sensor __tmp31 switch1 @enabled
jump __label17 notEqual __tmp31 false
label __label23
print "Measurement results ("
print UNIT
print "):\nMap dimensions: "
print @mapw
print "x"
print @maph
print "\nElapsed time: "
print elapsed
print "ms\nDistance travelled: "
print distance
print "\nSpeed: "
print speed
print "tiles/s\nPress button to repeat"
printflush message1
sensor __tmp31 switch1 @enabled
jump __label23 equal __tmp31 false
label __label17
end
