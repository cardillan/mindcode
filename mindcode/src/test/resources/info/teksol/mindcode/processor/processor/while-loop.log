    43 instructions before optimizations.
     5 instructions eliminated by Temp Variables Elimination.
     2 instructions eliminated by Jump Optimization (4 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
     2 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     1 instructions eliminated by Unreachable Code Elimination.
     4 instructions eliminated by Stack Optimization.
    27 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-5 instructions):
 
     1 set __fn0_n 0
     2 callrec bank1 __label0 __label1
     3 label __label1
-    * set __tmp0 __fn0retval
-    * set j __tmp0
+    4 set j __fn0retval
+    5 noop
     6 set __fn0_n j
     7 callrec bank1 __label0 __label2
     8 label __label2
-    * set __tmp1 __fn0retval
-    * set i __tmp1
+    9 set i __fn0retval
+   10 noop
    11 label __label3
    12 op lessThan __tmp2 i 10
    13 jump __label5 equal __tmp2 false
-    * op add __tmp3 j i
-    * set j __tmp3
+   14 op add j j i
+   15 noop
    16 print j
-    * op add __tmp4 i 1
-    * set i __tmp4
+   17 op add i i 1
+   18 noop
    19 label __label4
    20 jump __label3 always
    21 label __label5
 
    30 label __label9
    31 pop bank1 __fn0_n
    32 set __tmp8 __fn0retval
-    * op mul __tmp9 -1 __tmp8
-    * set __tmp6 __tmp9
+   33 op mul __tmp6 -1 __tmp8
+   34 noop
    35 jump __label8 always
    36 label __label7
    37 set __tmp6 __fn0_n

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-2 instructions):
 
     9 set i __fn0retval
    10 noop
    11 label __label3
-    * op lessThan __tmp2 i 10
-    * jump __label5 equal __tmp2 false
+   12 jump __label5 greaterThanEq i 10
    13 op add j j i
    14 noop
    15 print j
 
    20 label __label5
    21 end
    22 label __label0
-    * op greaterThan __tmp5 __fn0_n 0
-    * jump __label7 equal __tmp5 false
+   23 jump __label7 lessThanEq __fn0_n 0
    24 op mul __tmp7 -1 __fn0_n
    25 push bank1 __fn0_n
    26 set __fn0_n __tmp7

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    20 label __label5
    21 end
    22 label __label0
-    * jump __label7 lessThanEq __fn0_n 0
+   23 set __fn0retval __fn0_n
+   24 jump __label8 lessThanEq __fn0_n 0
    25 op mul __tmp7 -1 __fn0_n
    26 push bank1 __fn0_n
    27 set __fn0_n __tmp7
 
    29 label __label9
    30 pop bank1 __fn0_n
    31 set __tmp8 __fn0retval
-    * op mul __tmp6 -1 __tmp8
+   32 op mul __fn0retval -1 __tmp8
    33 noop
    34 jump __label8 always
-    * label __label7
-    * set __tmp6 __fn0_n
    35 label __label8
-    * set __fn0retval __tmp6
    36 label __label6
    37 return bank1
    38 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 label __label1
     4 set j __fn0retval
     5 noop
-    * set __fn0_n j
+    6 set __fn0_n __fn0retval
     7 callrec bank1 __label0 __label2
     8 label __label2
     9 set i __fn0retval
 
    24 jump __label8 lessThanEq __fn0_n 0
    25 op mul __tmp7 -1 __fn0_n
    26 push bank1 __fn0_n
-    * set __fn0_n __tmp7
+   27 op mul __fn0_n -1 __fn0_n
    28 callrec bank1 __label0 __label9
    29 label __label9
    30 pop bank1 __fn0_n
    31 set __tmp8 __fn0retval
-    * op mul __fn0retval -1 __tmp8
+   32 op mul __fn0retval -1 __fn0retval
    33 noop
    34 jump __label8 always
    35 label __label8

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    22 label __label0
    23 set __fn0retval __fn0_n
    24 jump __label8 lessThanEq __fn0_n 0
-    * op mul __tmp7 -1 __fn0_n
    25 push bank1 __fn0_n
    26 op mul __fn0_n -1 __fn0_n
    27 callrec bank1 __label0 __label9
    28 label __label9
    29 pop bank1 __fn0_n
-    * set __tmp8 __fn0retval
    30 op mul __fn0retval -1 __fn0retval
    31 noop
    32 jump __label8 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    10 noop
    11 label __label3
    12 jump __label5 greaterThanEq i 10
+   13 label __label10
    14 op add j j i
    15 noop
    16 print j
    17 op add i i 1
    18 noop
    19 label __label4
-    * jump __label3 always
+   20 jump __label10 lessThan i 10
    21 label __label5
    22 end
    23 label __label0

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
    30 pop bank1 __fn0_n
    31 op mul __fn0retval -1 __fn0retval
    32 noop
-    * jump __label8 always
+   33 noop
    34 label __label8
    35 label __label6
    36 return bank1

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     9 set i __fn0retval
    10 noop
    11 label __label3
-    * jump __label5 greaterThanEq i 10
+   12 jump __label5 greaterThanEq __fn0retval 10
    13 label __label10
    14 op add j j i
    15 noop

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    34 label __label8
    35 label __label6
    36 return bank1
-    * end

Modifications by Final phase, Stack Optimization, iteration 1 (-4 instructions):
 
    23 label __label0
    24 set __fn0retval __fn0_n
    25 jump __label8 lessThanEq __fn0_n 0
-    * push bank1 __fn0_n
    26 op mul __fn0_n -1 __fn0_n
    27 callrec bank1 __label0 __label9
    28 label __label9
-    * pop bank1 __fn0_n
    29 op mul __fn0retval -1 __fn0retval
    30 noop
    31 noop

Final code before resolving virtual instructions:

set __sp 0
set __fn0_n 0
callrec bank1 __label0 __label1
label __label1
set j __fn0retval
set __fn0_n __fn0retval
callrec bank1 __label0 __label2
label __label2
set i __fn0retval
jump __label5 greaterThanEq __fn0retval 10
label __label10
op add j j i
print j
op add i i 1
jump __label10 lessThan i 10
label __label5
end
label __label0
set __fn0retval __fn0_n
jump __label8 lessThanEq __fn0_n 0
op mul __fn0_n -1 __fn0_n
callrec bank1 __label0 __label9
label __label9
op mul __fn0retval -1 __fn0retval
label __label8
return bank1
