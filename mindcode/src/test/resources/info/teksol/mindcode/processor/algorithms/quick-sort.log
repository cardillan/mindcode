   126 instructions before optimizations.
     5 instructions eliminated by Temp Variables Elimination.
    11 instructions eliminated by Dead Code Elimination (2 passes, 4 iterations).
     5 instructions eliminated by Jump Optimization (4 iterations).
     6 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     3 instructions eliminated by Expression Optimization (2 passes, 3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
     7 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     2 instructions modified by Loop Optimization (3 iterations).
     2 loops improved by Loop Optimization.
     1 instructions eliminated by Unreachable Code Elimination.
    24 instructions eliminated by Stack Optimization.
    63 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-5 instructions):
 
    22 jump __label6 equal __tmp4 false
    23 op sub __tmp6 __fn0_right __fn0_left
    24 op idiv __tmp7 __tmp6 2
-    * op add __tmp8 __fn0_left __tmp7
-    * set __fn0_pivot_index __tmp8
+   25 op add __fn0_pivot_index __fn0_left __tmp7
    26 label __label8
    27 set __fn1_left __fn0_left
    28 set __fn1_right __fn0_right
    29 set __fn1_pivot_index __fn0_pivot_index
-    * read __tmp10 ARRAY __fn1_pivot_index
-    * set __fn1_pivot __tmp10
+   30 read __fn1_pivot ARRAY __fn1_pivot_index
    31 op notEqual __tmp11 __fn1_pivot_index __fn1_right
    32 jump __label10 equal __tmp11 false
    33 read __tmp13 ARRAY __fn1_right
 
    43 set __fn1_i __fn1_left
    44 label __label12
    45 jump __label14 greaterThanEq __fn1_i __tmp14
-    * read __tmp15 ARRAY __fn1_i
-    * set __fn1_curr __tmp15
+   46 read __fn1_curr ARRAY __fn1_i
    47 op lessThan __tmp16 __fn1_curr __fn1_pivot
    48 jump __label15 equal __tmp16 false
    49 op notEqual __tmp18 __fn1_i __fn1_index
 
    56 label __label17
    57 set __tmp19 null
    58 label __label18
-    * op add __tmp21 __fn1_index 1
-    * set __fn1_index __tmp21
+   59 op add __fn1_index __fn1_index 1
    60 set __tmp17 __fn1_index
    61 jump __label16 always
    62 label __label15
 
   108 pop bank1 __fn0_pivot_index
   109 pop bank1 __fn0_right
   110 pop bank1 __fn0_left
-    * set __tmp28 __fn0retval
-    * set __tmp5 __tmp28
+  111 set __tmp5 __fn0retval
   112 jump __label7 always
   113 label __label6
   114 set __tmp5 null

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-10 instructions):
 
     5 set __fn0_right __tmp0
     6 callrec bank1 __label0 __label1
     7 label __label1
-    * set __tmp1 __fn0retval
     8 set __tmp2 SIZE
     9 set i 0
    10 label __label2
 
    32 read __tmp13 ARRAY __fn1_right
    33 write __tmp13 ARRAY __fn1_pivot_index
    34 write __fn1_pivot ARRAY __fn1_right
-    * set __tmp12 __fn1_pivot
    35 jump __label11 always
    36 label __label10
-    * set __tmp12 null
    37 label __label11
    38 set __fn1_index __fn1_left
    39 set __tmp14 __fn1_right
 
    48 read __tmp20 ARRAY __fn1_index
    49 write __tmp20 ARRAY __fn1_i
    50 write __fn1_curr ARRAY __fn1_index
-    * set __tmp19 __fn1_curr
    51 jump __label18 always
    52 label __label17
-    * set __tmp19 null
    53 label __label18
    54 op add __fn1_index __fn1_index 1
-    * set __tmp17 __fn1_index
    55 jump __label16 always
    56 label __label15
-    * set __tmp17 null
    57 label __label16
    58 label __label13
    59 op add __fn1_i __fn1_i 1
 
    64 read __tmp24 ARRAY __fn1_index
    65 write __tmp24 ARRAY __fn1_right
    66 write __fn1_pivot ARRAY __fn1_index
-    * set __tmp23 __fn1_pivot
    67 jump __label20 always
    68 label __label19
-    * set __tmp23 null
    69 label __label20
    70 set __tmp9 __fn1_index
    71 jump __label9 always
 
    85 pop bank1 __fn0_pivot_index
    86 pop bank1 __fn0_right
    87 pop bank1 __fn0_left
-    * set __tmp26 __fn0retval
    88 op add __tmp27 __fn0_new_pivot_index 1
    89 push bank1 __fn0_left
    90 push bank1 __fn0_right

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-5 instructions):
 
    17 label __label4
    18 end
    19 label __label0
-    * op greaterThan __tmp4 __fn0_right __fn0_left
-    * jump __label6 equal __tmp4 false
+   20 jump __label6 lessThanEq __fn0_right __fn0_left
    21 op sub __tmp6 __fn0_right __fn0_left
    22 op idiv __tmp7 __tmp6 2
    23 op add __fn0_pivot_index __fn0_left __tmp7
 
    26 set __fn1_right __fn0_right
    27 set __fn1_pivot_index __fn0_pivot_index
    28 read __fn1_pivot ARRAY __fn1_pivot_index
-    * op notEqual __tmp11 __fn1_pivot_index __fn1_right
-    * jump __label10 equal __tmp11 false
+   29 jump __label10 equal __fn1_pivot_index __fn1_right
    30 read __tmp13 ARRAY __fn1_right
    31 write __tmp13 ARRAY __fn1_pivot_index
    32 write __fn1_pivot ARRAY __fn1_right
 
    39 label __label12
    40 jump __label14 greaterThanEq __fn1_i __tmp14
    41 read __fn1_curr ARRAY __fn1_i
-    * op lessThan __tmp16 __fn1_curr __fn1_pivot
-    * jump __label15 equal __tmp16 false
-    * op notEqual __tmp18 __fn1_i __fn1_index
-    * jump __label17 equal __tmp18 false
+   42 jump __label15 greaterThanEq __fn1_curr __fn1_pivot
+   43 jump __label17 equal __fn1_i __fn1_index
    44 read __tmp20 ARRAY __fn1_index
    45 write __tmp20 ARRAY __fn1_i
    46 write __fn1_curr ARRAY __fn1_index
 
    55 op add __fn1_i __fn1_i 1
    56 jump __label12 always
    57 label __label14
-    * op notEqual __tmp22 __fn1_index __fn1_right
-    * jump __label19 equal __tmp22 false
+   58 jump __label19 equal __fn1_index __fn1_right
    59 read __tmp24 ARRAY __fn1_index
    60 write __tmp24 ARRAY __fn1_right
    61 write __fn1_pivot ARRAY __fn1_index

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
    30 read __tmp13 ARRAY __fn1_right
    31 write __tmp13 ARRAY __fn1_pivot_index
    32 write __fn1_pivot ARRAY __fn1_right
-    * jump __label11 always
    33 label __label10
    34 label __label11
    35 set __fn1_index __fn1_left
 
    43 read __tmp20 ARRAY __fn1_index
    44 write __tmp20 ARRAY __fn1_i
    45 write __fn1_curr ARRAY __fn1_index
-    * jump __label18 always
    46 label __label17
    47 label __label18
    48 op add __fn1_index __fn1_index 1
-    * jump __label16 always
    49 label __label15
    50 label __label16
    51 label __label13
 
    56 read __tmp24 ARRAY __fn1_index
    57 write __tmp24 ARRAY __fn1_right
    58 write __fn1_pivot ARRAY __fn1_index
-    * jump __label20 always
    59 label __label19
    60 label __label20
    61 set __tmp9 __fn1_index

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
    68 push bank1 __fn0_right
    69 push bank1 __fn0_pivot_index
    70 push bank1 __fn0_new_pivot_index
-    * set __fn0_left __fn0_left
    71 set __fn0_right __tmp25
    72 callrec bank1 __label0 __label21
    73 label __label21
 
    81 push bank1 __fn0_pivot_index
    82 push bank1 __fn0_new_pivot_index
    83 set __fn0_left __tmp27
-    * set __fn0_right __fn0_right
    84 callrec bank1 __label0 __label22
    85 label __label22
    86 pop bank1 __fn0_new_pivot_index

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    17 label __label4
    18 end
    19 label __label0
-    * jump __label6 lessThanEq __fn0_right __fn0_left
+   20 set __fn0retval null
+   21 jump __label7 lessThanEq __fn0_right __fn0_left
    22 op sub __tmp6 __fn0_right __fn0_left
    23 op idiv __tmp7 __tmp6 2
    24 op add __fn0_pivot_index __fn0_left __tmp7
 
    88 pop bank1 __fn0_pivot_index
    89 pop bank1 __fn0_right
    90 pop bank1 __fn0_left
-    * set __tmp5 __fn0retval
+   91 set __fn0retval __fn0retval
    92 jump __label7 always
-    * label __label6
-    * set __tmp5 null
    93 label __label7
-    * set __fn0retval __tmp5
    94 label __label5
    95 return bank1
    96 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     8 set __tmp2 SIZE
     9 set i 0
    10 label __label2
-    * jump __label4 greaterThanEq i __tmp2
+   11 jump __label4 greaterThanEq i SIZE
    12 read __tmp3 ARRAY i
    13 print __tmp3
    14 label __label3
 
    26 set __fn1_left __fn0_left
    27 set __fn1_right __fn0_right
    28 set __fn1_pivot_index __fn0_pivot_index
-    * read __fn1_pivot ARRAY __fn1_pivot_index
-    * jump __label10 equal __fn1_pivot_index __fn1_right
-    * read __tmp13 ARRAY __fn1_right
-    * write __tmp13 ARRAY __fn1_pivot_index
-    * write __fn1_pivot ARRAY __fn1_right
+   29 read __fn1_pivot ARRAY __fn0_pivot_index
+   30 jump __label10 equal __fn0_pivot_index __fn0_right
+   31 read __tmp13 ARRAY __fn0_right
+   32 write __tmp13 ARRAY __fn0_pivot_index
+   33 write __fn1_pivot ARRAY __fn0_right
    34 label __label10
    35 label __label11
-    * set __fn1_index __fn1_left
-    * set __tmp14 __fn1_right
-    * set __fn1_i __fn1_left
+   36 set __fn1_index __fn0_left
+   37 set __tmp14 __fn0_right
+   38 set __fn1_i __fn0_left
    39 label __label12
-    * jump __label14 greaterThanEq __fn1_i __tmp14
+   40 jump __label14 greaterThanEq __fn1_i __fn1_right
    41 read __fn1_curr ARRAY __fn1_i
    42 jump __label15 greaterThanEq __fn1_curr __fn1_pivot
    43 jump __label17 equal __fn1_i __fn1_index
 
    53 op add __fn1_i __fn1_i 1
    54 jump __label12 always
    55 label __label14
-    * jump __label19 equal __fn1_index __fn1_right
+   56 jump __label19 equal __fn1_index __fn0_right
    57 read __tmp24 ARRAY __fn1_index
-    * write __tmp24 ARRAY __fn1_right
+   58 write __tmp24 ARRAY __fn0_right
    59 write __fn1_pivot ARRAY __fn1_index
    60 label __label19
    61 label __label20
    62 set __tmp9 __fn1_index
    63 jump __label9 always
-    * set __tmp9 null
    64 label __label9
-    * set __fn0_new_pivot_index __tmp9
-    * op sub __tmp25 __fn0_new_pivot_index 1
+   65 set __fn0_new_pivot_index __fn1_index
+   66 op sub __tmp25 __tmp9 1
    67 push bank1 __fn0_left
    68 push bank1 __fn0_right
    69 push bank1 __fn0_pivot_index

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
     5 set __fn0_right __tmp0
     6 callrec bank1 __label0 __label1
     7 label __label1
-    * set __tmp2 SIZE
     8 set i 0
     9 label __label2
    10 jump __label4 greaterThanEq i SIZE
 
    22 op idiv __tmp7 __tmp6 2
    23 op add __fn0_pivot_index __fn0_left __tmp7
    24 label __label8
-    * set __fn1_left __fn0_left
    25 set __fn1_right __fn0_right
-    * set __fn1_pivot_index __fn0_pivot_index
    26 read __fn1_pivot ARRAY __fn0_pivot_index
    27 jump __label10 equal __fn0_pivot_index __fn0_right
    28 read __tmp13 ARRAY __fn0_right
 
    31 label __label10
    32 label __label11
    33 set __fn1_index __fn0_left
-    * set __tmp14 __fn0_right
    34 set __fn1_i __fn0_left
    35 label __label12
-    * jump __label14 greaterThanEq __fn1_i __fn1_right
+   36 jump __label14 greaterThanEq __fn1_i __fn0_right
    37 read __fn1_curr ARRAY __fn1_i
    38 jump __label15 greaterThanEq __fn1_curr __fn1_pivot
    39 jump __label17 equal __fn1_i __fn1_index
 
    59 jump __label9 always
    60 label __label9
    61 set __fn0_new_pivot_index __fn1_index
-    * op sub __tmp25 __tmp9 1
+   62 op sub __tmp25 __fn1_index 1
    63 push bank1 __fn0_left
    64 push bank1 __fn0_right
    65 push bank1 __fn0_pivot_index

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
    22 op idiv __tmp7 __tmp6 2
    23 op add __fn0_pivot_index __fn0_left __tmp7
    24 label __label8
-    * set __fn1_right __fn0_right
    25 read __fn1_pivot ARRAY __fn0_pivot_index
    26 jump __label10 equal __fn0_pivot_index __fn0_right
    27 read __tmp13 ARRAY __fn0_right
 
    54 write __fn1_pivot ARRAY __fn1_index
    55 label __label19
    56 label __label20
-    * set __tmp9 __fn1_index
    57 jump __label9 always
    58 label __label9
    59 set __fn0_new_pivot_index __fn1_index

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     8 set i 0
     9 label __label2
    10 jump __label4 greaterThanEq i SIZE
+   11 label __label23
    12 read __tmp3 ARRAY i
    13 print __tmp3
    14 label __label3
    15 op add i i 1
-    * jump __label2 always
+   16 jump __label23 lessThan i SIZE
    17 label __label4
    18 end
    19 label __label0
 
    34 set __fn1_i __fn0_left
    35 label __label12
    36 jump __label14 greaterThanEq __fn1_i __fn0_right
+   37 label __label24
    38 read __fn1_curr ARRAY __fn1_i
    39 jump __label15 greaterThanEq __fn1_curr __fn1_pivot
    40 jump __label17 equal __fn1_i __fn1_index
 
    48 label __label16
    49 label __label13
    50 op add __fn1_i __fn1_i 1
-    * jump __label12 always
+   51 jump __label24 lessThan __fn1_i __fn0_right
    52 label __label14
    53 jump __label19 equal __fn1_index __fn0_right
    54 read __tmp24 ARRAY __fn1_index

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
    56 write __fn1_pivot ARRAY __fn1_index
    57 label __label19
    58 label __label20
-    * jump __label9 always
    59 label __label9
    60 set __fn0_new_pivot_index __fn1_index
    61 op sub __tmp25 __fn1_index 1
 
    83 pop bank1 __fn0_right
    84 pop bank1 __fn0_left
    85 set __fn0retval __fn0retval
-    * jump __label7 always
    86 label __label7
    87 label __label5
    88 return bank1

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-1 instructions):
 
    82 pop bank1 __fn0_pivot_index
    83 pop bank1 __fn0_right
    84 pop bank1 __fn0_left
-    * set __fn0retval __fn0retval
    85 label __label7
    86 label __label5
    87 return bank1

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     7 label __label1
     8 set i 0
     9 label __label2
-    * jump __label4 greaterThanEq i SIZE
+   10 jump __label4 greaterThanEq 0 SIZE
    11 label __label23
    12 read __tmp3 ARRAY i
    13 print __tmp3
 
    33 set __fn1_index __fn0_left
    34 set __fn1_i __fn0_left
    35 label __label12
-    * jump __label14 greaterThanEq __fn1_i __fn0_right
+   36 jump __label14 greaterThanEq __fn0_left __fn0_right
    37 label __label24
    38 read __fn1_curr ARRAY __fn1_i
    39 jump __label15 greaterThanEq __fn1_curr __fn1_pivot

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    85 label __label7
    86 label __label5
    87 return bank1
-    * end

Modifications by Final phase, Dead Code Elimination, iteration 1 (-1 instructions):
 
    17 label __label4
    18 end
    19 label __label0
-    * set __fn0retval null
    20 jump __label7 lessThanEq __fn0_right __fn0_left
    21 op sub __tmp6 __fn0_right __fn0_left
    22 op idiv __tmp7 __tmp6 2

Modifications by Final phase, Stack Optimization, iteration 1 (-24 instructions):
 
    58 label __label9
    59 set __fn0_new_pivot_index __fn1_index
    60 op sub __tmp25 __fn1_index 1
-    * push bank1 __fn0_left
    61 push bank1 __fn0_right
-    * push bank1 __fn0_pivot_index
    62 push bank1 __fn0_new_pivot_index
    63 set __fn0_right __tmp25
    64 callrec bank1 __label0 __label21
    65 label __label21
    66 pop bank1 __fn0_new_pivot_index
-    * pop bank1 __fn0_pivot_index
    67 pop bank1 __fn0_right
-    * pop bank1 __fn0_left
    68 op add __tmp27 __fn0_new_pivot_index 1
-    * push bank1 __fn0_left
-    * push bank1 __fn0_right
-    * push bank1 __fn0_pivot_index
-    * push bank1 __fn0_new_pivot_index
    69 set __fn0_left __tmp27
    70 callrec bank1 __label0 __label22
    71 label __label22
-    * pop bank1 __fn0_new_pivot_index
-    * pop bank1 __fn0_pivot_index
-    * pop bank1 __fn0_right
-    * pop bank1 __fn0_left
    72 label __label7
    73 label __label5
    74 return bank1

Final code before resolving virtual instructions:

set SIZE 512
set __sp 0
set ARRAY bank2
op sub __tmp0 SIZE 1
set __fn0_left 0
set __fn0_right __tmp0
callrec bank1 __label0 __label1
label __label1
set i 0
jump __label4 greaterThanEq 0 SIZE
label __label23
read __tmp3 ARRAY i
print __tmp3
op add i i 1
jump __label23 lessThan i SIZE
label __label4
end
label __label0
jump __label7 lessThanEq __fn0_right __fn0_left
op sub __tmp6 __fn0_right __fn0_left
op idiv __tmp7 __tmp6 2
op add __fn0_pivot_index __fn0_left __tmp7
read __fn1_pivot ARRAY __fn0_pivot_index
jump __label10 equal __fn0_pivot_index __fn0_right
read __tmp13 ARRAY __fn0_right
write __tmp13 ARRAY __fn0_pivot_index
write __fn1_pivot ARRAY __fn0_right
label __label10
set __fn1_index __fn0_left
set __fn1_i __fn0_left
jump __label14 greaterThanEq __fn0_left __fn0_right
label __label24
read __fn1_curr ARRAY __fn1_i
jump __label15 greaterThanEq __fn1_curr __fn1_pivot
jump __label17 equal __fn1_i __fn1_index
read __tmp20 ARRAY __fn1_index
write __tmp20 ARRAY __fn1_i
write __fn1_curr ARRAY __fn1_index
label __label17
op add __fn1_index __fn1_index 1
label __label15
op add __fn1_i __fn1_i 1
jump __label24 lessThan __fn1_i __fn0_right
label __label14
jump __label19 equal __fn1_index __fn0_right
read __tmp24 ARRAY __fn1_index
write __tmp24 ARRAY __fn0_right
write __fn1_pivot ARRAY __fn1_index
label __label19
set __fn0_new_pivot_index __fn1_index
op sub __tmp25 __fn1_index 1
push bank1 __fn0_right
push bank1 __fn0_new_pivot_index
set __fn0_right __tmp25
callrec bank1 __label0 __label21
label __label21
pop bank1 __fn0_new_pivot_index
pop bank1 __fn0_right
op add __tmp27 __fn0_new_pivot_index 1
set __fn0_left __tmp27
callrec bank1 __label0 __label22
label __label22
label __label7
return bank1
