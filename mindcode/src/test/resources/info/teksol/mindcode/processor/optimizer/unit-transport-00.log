  1120 instructions before optimizations.
   120 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
   126 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions eliminated by Jump Normalization (4 iterations).
    62 instructions eliminated by Jump Optimization (4 iterations).
    51 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     2 instructions eliminated by Expression Optimization (3 iterations).
     4 instructions eliminated by If Expression Optimization (3 iterations).
     8 instructions eliminated by Data Flow Optimization (3 passes, 15 iterations).
    17 instructions added by Loop Optimization (3 iterations).
    13 loops improved by Loop Optimization.
    21 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
     7 instructions updated by PropagateJumpTargets.
     2 instructions eliminated by Unreachable Code Elimination.
     1 instructions eliminated by Print Merging.
   737 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 267):
  * Loop Optimization: replicate condition at line 171           cost   1, benefit      312.5, efficiency      312.5 (+0 instructions)
    Loop Optimization: replicate condition at line 175           cost   4, benefit      312.5, efficiency       78.1
    Loop Optimization: replicate condition at line 184           cost   5, benefit      156.3, efficiency       31.3
    Loop Optimization: replicate condition at line 203           cost   3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 692           cost   2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2

Pass 1: speed optimization selection (cost limit 267):
  * Loop Optimization: replicate condition at line 175           cost   4, benefit      312.5, efficiency       78.1 (+4 instructions)
    Loop Optimization: replicate condition at line 184           cost   5, benefit      156.3, efficiency       31.3
    Loop Optimization: replicate condition at line 203           cost   3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 692           cost   2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2

Pass 1: speed optimization selection (cost limit 263):
  * Loop Optimization: replicate condition at line 184           cost   5, benefit      156.3, efficiency       31.3 (+5 instructions)
    Loop Optimization: replicate condition at line 203           cost   3, benefit       25.0, efficiency        8.3
    Loop Optimization: replicate condition at line 692           cost   2, benefit       25.0, efficiency       12.5
    Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2

Pass 1: speed optimization selection (cost limit 258):
    Loop Optimization: replicate condition at line 203           cost   3, benefit       25.0, efficiency        8.3
  * Loop Optimization: replicate condition at line 692           cost   2, benefit       25.0, efficiency       12.5 (+2 instructions)
    Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2

Pass 1: speed optimization selection (cost limit 256):
  * Loop Optimization: replicate condition at line 203           cost   3, benefit       25.0, efficiency        8.3 (+3 instructions)
    Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2

Pass 1: speed optimization selection (cost limit 253):
  * Loop Optimization: replicate condition at line 700           cost   3, benefit       12.5, efficiency        4.2 (+3 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-120 instructions):
 
    13 read __tmp2 cell1 0
    14 op equal __tmp3 __tmp2 2
    15 jump __label2 equal __tmp3 false
-    * read __tmp5 cell1 1
-    * set LINK_ID __tmp5
-    * read __tmp6 cell1 2
-    * set AUTO_ALLOCATION __tmp6
-    * read __tmp7 cell1 3
-    * set MAX_UNITS __tmp7
-    * read __tmp8 cell1 4
-    * set HOUSEKEEPING __tmp8
-    * read __tmp9 cell1 5
-    * set LOCAL_LIMIT __tmp9
-    * read __tmp10 cell1 6
-    * set REMOTE_LIMIT __tmp10
-    * read __tmp11 cell1 7
-    * set OVERALLOCATION_LOW __tmp11
-    * read __tmp12 cell1 8
-    * set OVERALLOCATION_HIGH __tmp12
-    * read __tmp13 cell1 9
-    * set STABILIZATION __tmp13
+   16 read LINK_ID cell1 1
+   17 noop
+   18 read AUTO_ALLOCATION cell1 2
+   19 noop
+   20 read MAX_UNITS cell1 3
+   21 noop
+   22 read HOUSEKEEPING cell1 4
+   23 noop
+   24 read LOCAL_LIMIT cell1 5
+   25 noop
+   26 read REMOTE_LIMIT cell1 6
+   27 noop
+   28 read OVERALLOCATION_LOW cell1 7
+   29 noop
+   30 read OVERALLOCATION_HIGH cell1 8
+   31 noop
+   32 read STABILIZATION cell1 9
+   33 noop
    34 set MESSAGE "[green]Settings restored from memory.[]\n"
    35 set __tmp4 MESSAGE
    36 jump __label3 always
 
    53 label __label0
    54 set __tmp1 null
    55 label __label1
-    * op max __tmp14 LOCAL_LIMIT 20
-    * set LOCAL_LIMIT __tmp14
-    * op max __tmp15 REMOTE_LIMIT 20
-    * set REMOTE_LIMIT __tmp15
+   56 op max LOCAL_LIMIT LOCAL_LIMIT 20
+   57 noop
+   58 op max REMOTE_LIMIT REMOTE_LIMIT 20
+   59 noop
    60 set TRIGGER_LEVEL 0.9
-    * op mul __tmp16 -1 HOUSEKEEPING
-    * set S_UNUSED __tmp16
+   61 op mul S_UNUSED -1 HOUSEKEEPING
+   62 noop
    63 set LOOPS 1
    64 op mul __tmp17 LOOPS 1000
-    * op div __tmp18 __tmp17 60
-    * set LOOPS_TICKS_TO_MS __tmp18
+   65 op div LOOPS_TICKS_TO_MS __tmp17 60
+   66 noop
    67 set INC_OVERALLOCATION OVERALLOCATION_LOW
-    * op add __tmp19 1 OVERALLOCATION_HIGH
-    * set DEC_OVERALLOCATION __tmp19
+   68 op add DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
+   69 noop
    70 set TRIGGER_BOOST 2
    71 set INC_MAX 6
    72 set DEC_MAX -1
 
    82 label __label5
    83 jump __label4 always
    84 label __label6
-    * set __tmp21 @unit
-    * set first_unit __tmp21
+   85 set first_unit @unit
+   86 noop
    87 sensor __tmp22 @unit @speed
-    * op div __tmp23 __tmp22 10
-    * set SPEED_SEC __tmp23
+   88 op div SPEED_SEC __tmp22 10
+   89 noop
    90 sensor __tmp24 @unit @speed
-    * op div __tmp25 __tmp24 1000
-    * set SPEED __tmp25
+   91 op div SPEED __tmp24 1000
+   92 noop
    93 set TARGET 0
    94 set repeat true
    95 label __label7
 
    97 sensor __tmp26 @unit @controller
    98 op equal __tmp27 __tmp26 @this
    99 jump __label10 equal __tmp27 false
-    * sensor __tmp29 @unit @flag
-    * set state __tmp29
+  100 sensor state @unit @flag
+  101 noop
   102 op greaterThanEq __tmp30 state 1
   103 op lessThan __tmp31 state 6
   104 op land __tmp32 __tmp30 __tmp31
-    * op add __tmp33 TARGET __tmp32
-    * set TARGET __tmp33
+  105 op add TARGET TARGET __tmp32
+  106 noop
   107 set __tmp28 TARGET
   108 jump __label11 always
   109 label __label10
 
   113 op notEqual __tmp34 @unit first_unit
   114 sensor __tmp35 first_unit @dead
   115 op strictEqual __tmp36 __tmp35 0
-    * op land __tmp37 __tmp34 __tmp36
-    * set repeat __tmp37
+  116 op land repeat __tmp34 __tmp36
+  117 noop
   118 label __label8
   119 jump __label7 always
   120 label __label9
 
   122 set active TARGET
   123 set DEC_LIMIT 0
   124 set INC_LIMIT 0
-    * sensor __tmp38 @unit @itemCapacity
-    * set UNIT_CAPACITY __tmp38
+  125 sensor UNIT_CAPACITY @unit @itemCapacity
+  126 noop
   127 set first_unit null
   128 label __label12
   129 jump __label14 equal true false
   130 set CONTAINER null
   131 set DROP_TARGET null
-    * set __tmp39 @links
-    * set n __tmp39
+  132 set n @links
+  133 noop
   134 label __label15
   135 op greaterThan __tmp40 n 0
   136 jump __label17 equal __tmp40 false
-    * op sub __tmp41 n 1
-    * set n __tmp41
-    * getlink __tmp42 n
-    * set block __tmp42
-    * sensor __tmp43 block @type
-    * set __ast0 __tmp43
+  137 op sub n n 1
+  138 noop
+  139 getlink block n
+  140 noop
+  141 sensor __ast0 block @type
+  142 noop
   143 jump __label20 equal __ast0 @vault
   144 jump __label20 equal __ast0 @container
   145 jump __label19 always
 
   180 sensor __tmp50 @unit @controlled
   181 op equal __tmp51 __tmp50 0
   182 jump __label28 equal __tmp51 false
-    * ulocate building core false @copper CORE_X CORE_Y __tmp54 __tmp53
-    * set CORE __tmp53
+  183 ulocate building core false @copper CORE_X CORE_Y __tmp54 CORE
+  184 noop
   185 ucontrol flag S_UNUSED
   186 set __tmp52 null
   187 jump __label29 always
 
   203 label __label30
   204 op equal __tmp55 CORE null
   205 jump __label32 equal __tmp55 false
-    * op add __tmp56 99999900 LINK_ID
-    * set QUERY_FLAG __tmp56
+  206 op add QUERY_FLAG 99999900 LINK_ID
+  207 noop
   208 set flag QUERY_FLAG
   209 ubind UNIT
   210 label __label33
 
   223 op land __tmp62 __tmp59 __tmp61
   224 jump __label38 equal __tmp62 false
   225 ucontrol stop
-    * sensor __tmp63 @unit @flag
-    * set flag __tmp63
+  226 sensor flag @unit @flag
+  227 noop
   228 label __label37
   229 jump __label36 always
   230 label __label38
   231 op notEqual __tmp64 flag QUERY_FLAG
   232 jump __label39 equal __tmp64 false
-    * op idiv __tmp66 flag 100
-    * set position __tmp66
-    * op mod __tmp67 position @mapw
-    * set CORE_X __tmp67
-    * op idiv __tmp68 position @mapw
-    * set CORE_Y __tmp68
+  233 op idiv position flag 100
+  234 noop
+  235 op mod CORE_X position @mapw
+  236 noop
+  237 op idiv CORE_Y position @mapw
+  238 noop
   239 label __label41
   240 sensor __tmp69 @unit @dead
   241 op equal __tmp70 __tmp69 0
 
   247 label __label42
   248 jump __label41 always
   249 label __label43
-    * ucontrol getBlock CORE_X CORE_Y b_type __tmp74 __tmp75
-    * set CORE __tmp74
+  250 ucontrol getBlock CORE_X CORE_Y b_type CORE __tmp75
+  251 noop
   252 op notEqual __tmp76 b_type @vault
   253 jump __label44 equal __tmp76 false
   254 print "[salmon]Building at "
 
   276 set __tmp48 DISCARD_UNIT_MAX_ITEMS
   277 label __label24
   278 set SORTER sorter1
-    * sensor __tmp78 SORTER @type
-    * set sorter_type __tmp78
+  279 sensor sorter_type SORTER @type
+  280 noop
   281 label __label46
   282 op notEqual __tmp79 sorter_type @sorter
   283 op notEqual __tmp80 sorter_type @inverted-sorter
 
   296 label __label50
   297 printflush message1
   298 set SORTER sorter1
-    * sensor __tmp84 SORTER @type
-    * set sorter_type __tmp84
+  299 sensor sorter_type SORTER @type
+  300 noop
   301 label __label47
   302 jump __label46 always
   303 label __label48
 
   306 set SHOW_REMOTE_LEVEL true
   307 set SRC CORE
   308 set DST CONTAINER
-    * sensor __tmp87 SRC @itemCapacity
-    * set src_capacity __tmp87
-    * sensor __tmp88 DST @itemCapacity
-    * set dst_capacity __tmp88
+  309 sensor src_capacity SRC @itemCapacity
+  310 noop
+  311 sensor dst_capacity DST @itemCapacity
+  312 noop
   313 op sub __tmp89 100 REMOTE_LIMIT
   314 op mul __tmp90 src_capacity __tmp89
-    * op idiv __tmp91 __tmp90 100
-    * set LOAD_LEVEL __tmp91
+  315 op idiv LOAD_LEVEL __tmp90 100
+  316 noop
   317 op mul __tmp92 dst_capacity LOCAL_LIMIT
-    * op idiv __tmp93 __tmp92 100
-    * set DROP_LEVEL __tmp93
+  318 op idiv DROP_LEVEL __tmp92 100
+  319 noop
   320 set LOCAL_MARGIN DROP_LEVEL
   321 set REMOTE_MARGIN LOAD_LEVEL
   322 op sub __tmp94 1 TRIGGER_LEVEL
-    * op mul __tmp95 dst_capacity __tmp94
-    * set LOW_LEVEL_TRIGGER __tmp95
+  323 op mul LOW_LEVEL_TRIGGER dst_capacity __tmp94
+  324 noop
   325 set HIGH_LEVEL_TRIGGER dst_capacity
   326 set FLOW_CORR_SIGN 1
   327 set SRC_REMOTE_WAIT 1
 
   337 set __tmp86 DIRECTION
   338 jump __label52 always
   339 label __label51
-    * op greaterThan __tmp98 LINK_ID 0
-    * set SHOW_REMOTE_LEVEL __tmp98
+  340 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
+  341 noop
   342 set SRC CONTAINER
   343 set DST CORE
-    * sensor __tmp99 SRC @itemCapacity
-    * set src_capacity __tmp99
-    * sensor __tmp100 DST @itemCapacity
-    * set dst_capacity __tmp100
+  344 sensor src_capacity SRC @itemCapacity
+  345 noop
+  346 sensor dst_capacity DST @itemCapacity
+  347 noop
   348 op sub __tmp101 100 LOCAL_LIMIT
   349 op mul __tmp102 src_capacity __tmp101
-    * op idiv __tmp103 __tmp102 100
-    * set LOAD_LEVEL __tmp103
+  350 op idiv LOAD_LEVEL __tmp102 100
+  351 noop
   352 op mul __tmp104 dst_capacity REMOTE_LIMIT
   353 op idiv __tmp105 __tmp104 100
   354 op equal __tmp106 LINK_ID 0
   355 op mul __tmp107 __tmp106 UNIT_CAPACITY
-    * op add __tmp108 __tmp105 __tmp107
-    * set DROP_LEVEL __tmp108
+  356 op add DROP_LEVEL __tmp105 __tmp107
+  357 noop
   358 set LOCAL_MARGIN LOAD_LEVEL
   359 set REMOTE_MARGIN DROP_LEVEL
-    * op mul __tmp109 src_capacity TRIGGER_LEVEL
-    * set HIGH_LEVEL_TRIGGER __tmp109
+  360 op mul HIGH_LEVEL_TRIGGER src_capacity TRIGGER_LEVEL
+  361 noop
   362 set LOW_LEVEL_TRIGGER 0
   363 set FLOW_CORR_SIGN -1
   364 set SRC_REMOTE_WAIT 0
 
   382 label __label58
   383 set LINK_TXT __tmp113
   384 op sub __tmp114 src_capacity LOAD_LEVEL
-    * op min __tmp115 UNIT_CAPACITY __tmp114
-    * set LOAD_PACK __tmp115
-    * op min __tmp116 UNIT_CAPACITY DROP_LEVEL
-    * set DROP_PACK __tmp116
-    * sensor __tmp117 SRC @x
-    * set SRC_X __tmp117
-    * sensor __tmp118 SRC @y
-    * set SRC_Y __tmp118
-    * sensor __tmp119 DST @x
-    * set DST_X __tmp119
-    * sensor __tmp120 DST @y
-    * set DST_Y __tmp120
+  385 op min LOAD_PACK UNIT_CAPACITY __tmp114
+  386 noop
+  387 op min DROP_PACK UNIT_CAPACITY DROP_LEVEL
+  388 noop
+  389 sensor SRC_X SRC @x
+  390 noop
+  391 sensor SRC_Y SRC @y
+  392 noop
+  393 sensor DST_X DST @x
+  394 noop
+  395 sensor DST_Y DST @y
+  396 noop
   397 op sub __tmp121 DST_X SRC_X
   398 op sub __tmp122 DST_Y SRC_Y
   399 op len __tmp123 __tmp121 __tmp122
   400 op sub __tmp124 __tmp123 6
-    * op sub __tmp125 __tmp124 8
-    * set DISTANCE __tmp125
+  401 op sub DISTANCE __tmp124 8
+  402 noop
   403 op max __tmp126 DISTANCE 10
   404 op mul __tmp127 2 __tmp126
-    * op div __tmp128 __tmp127 SPEED
-    * set TRAVEL_TIME __tmp128
+  405 op div TRAVEL_TIME __tmp127 SPEED
+  406 noop
   407 op sub __tmp129 DST_X SRC_X
   408 op sub __tmp130 DST_Y SRC_Y
   409 op len __tmp131 __tmp129 __tmp130
   410 op sub __tmp132 __tmp131 6
-    * op div __tmp133 __tmp132 100
-    * set DISTANCE __tmp133
+  411 op div DISTANCE __tmp132 100
+  412 noop
   413 op equal __tmp134 DROP_TARGET null
   414 jump __label59 equal __tmp134 false
   415 set DROP_TARGET CORE
 
   423 label __label61
   424 set __tmp138 -15
   425 label __label62
-    * op add __tmp139 CORE_X __tmp138
-    * set PARK_X __tmp139
+  426 op add PARK_X CORE_X __tmp138
+  427 noop
   428 sensor __tmp140 CONTAINER @y
   429 op lessThan __tmp141 __tmp140 CORE_Y
   430 jump __label63 equal __tmp141 false
 
   433 label __label63
   434 set __tmp142 -15
   435 label __label64
-    * op add __tmp143 CORE_Y __tmp142
-    * set PARK_Y __tmp143
+  436 op add PARK_Y CORE_Y __tmp142
+  437 noop
   438 op equal __tmp144 LINK_ID 0
-    * op mul __tmp145 __tmp144 UNIT_CAPACITY
-    * set PARK_ITEM_LIMIT __tmp145
+  439 op mul PARK_ITEM_LIMIT __tmp144 UNIT_CAPACITY
+  440 noop
   441 set __tmp135 PARK_ITEM_LIMIT
   442 jump __label60 always
   443 label __label59
-    * sensor __tmp146 DROP_TARGET @x
-    * set DROP_X __tmp146
-    * sensor __tmp147 DROP_TARGET @y
-    * set DROP_Y __tmp147
+  444 sensor DROP_X DROP_TARGET @x
+  445 noop
+  446 sensor DROP_Y DROP_TARGET @y
+  447 noop
   448 set PARK_X DROP_X
   449 set PARK_Y DROP_Y
   450 set PARK_ITEM_LIMIT 0
   451 set __tmp135 PARK_ITEM_LIMIT
   452 label __label60
-    * set __tmp148 @tick
-    * set TRANSFER_START __tmp148
-    * op sub __tmp149 @tick 60
-    * set LOOP_START __tmp149
+  453 set TRANSFER_START @tick
+  454 noop
+  455 op sub LOOP_START @tick 60
+  456 noop
   457 set LAST_ITEM @mono
-    * op add __tmp150 @tick 600
-    * set MESSAGE_TIMEOUT __tmp150
+  458 op add MESSAGE_TIMEOUT @tick 600
+  459 noop
   460 set WAIT_LIMIT 30000
   461 set items_in_transit 0
   462 set items_per_min_unit "--"
 
   508 set AUTO_ALLOCATION false
   509 set AUTO_ALLOCATION_TXT ""
   510 op add __tmp155 TARGET 1
-    * op min __tmp156 __tmp155 MAX_UNITS
-    * set TARGET __tmp156
+  511 op min TARGET __tmp155 MAX_UNITS
+  512 noop
   513 set CORR_SIGN "[]"
   514 set corr_per_min ""
   515 set SPEED_UNIT_TXT "/min"
 
   536 label __label77
   537 set AUTO_ALLOCATION false
   538 op sub __tmp161 TARGET 1
-    * op max __tmp162 __tmp161 0
-    * set TARGET __tmp162
+  539 op max TARGET __tmp161 0
+  540 noop
   541 set CORR_SIGN "[]"
   542 set corr_per_min ""
   543 set SPEED_UNIT_TXT "/min"
 
   558 set __tmp158 null
   559 label __label76
   560 sensor __tmp165 first_unit @dead
-    * op strictEqual __tmp166 __tmp165 0
-    * set alive __tmp166
+  561 op strictEqual alive __tmp165 0
+  562 noop
   563 op strictEqual __tmp167 @unit first_unit
   564 op lessThanEq __tmp168 alive __tmp167
   565 jump __label81 equal __tmp168 false
 
   573 label __label84
   574 printflush message2
   575 set STATE_LIMIT 6
-    * sensor __tmp172 SORTER @config
-    * set ITEM __tmp172
+  576 sensor ITEM SORTER @config
+  577 noop
   578 op notEqual __tmp173 ITEM LAST_ITEM
   579 jump __label85 equal __tmp173 false
   580 label __label87
 
   582 jump __label89 equal __tmp175 false
   583 print "[salmon]No item type selected for transport.[]"
   584 printflush message1
-    * sensor __tmp176 SORTER @config
-    * set ITEM __tmp176
+  585 sensor ITEM SORTER @config
+  586 noop
   587 label __label88
   588 jump __label87 always
   589 label __label89
 
   693 label __label91
   694 set ITEM_ICON __tmp177
   695 set STATE_LIMIT 1
-    * sensor __tmp179 CONTAINER ITEM
-    * set last_level __tmp179
+  696 sensor last_level CONTAINER ITEM
+  697 noop
   698 set min_level 999999
   699 set max_level 0
   700 set __tmp174 max_level
 
   702 label __label85
   703 set __tmp174 null
   704 label __label86
-    * sensor __tmp180 CONTAINER ITEM
-    * set container_items __tmp180
-    * op min __tmp181 min_level container_items
-    * set min_level __tmp181
-    * op max __tmp182 max_level container_items
-    * set max_level __tmp182
-    * op sub __tmp183 @tick LOOP_START
-    * set loop_time __tmp183
-    * set __tmp184 @tick
-    * set LOOP_START __tmp184
+  705 sensor container_items CONTAINER ITEM
+  706 noop
+  707 op min min_level min_level container_items
+  708 noop
+  709 op max max_level max_level container_items
+  710 noop
+  711 op sub loop_time @tick LOOP_START
+  712 noop
+  713 set LOOP_START @tick
+  714 noop
   715 op mul __tmp185 loop_time 100
-    * op idiv __tmp186 __tmp185 6
-    * set loop_time_ms __tmp186
+  716 op idiv loop_time_ms __tmp185 6
+  717 noop
   718 op greaterThanEq __tmp187 transfers active
   719 op greaterThan __tmp188 wait_time WAIT_LIMIT
   720 op or __tmp189 __tmp187 __tmp188
   721 jump __label125 equal __tmp189 false
   722 op div __tmp191 wait_time 100
   723 op ceil __tmp192 __tmp191
-    * op div __tmp193 __tmp192 10
-    * set wait_time_str __tmp193
-    * op sub __tmp194 @tick TRANSFER_START
-    * set elapsed_ticks __tmp194
-    * set __tmp195 @tick
-    * set TRANSFER_START __tmp195
-    * op div __tmp196 elapsed_ticks 0.06
-    * set elapsed_ms __tmp196
+  724 op div wait_time_str __tmp192 10
+  725 noop
+  726 op sub elapsed_ticks @tick TRANSFER_START
+  727 noop
+  728 set TRANSFER_START @tick
+  729 noop
+  730 op div elapsed_ms elapsed_ticks 0.06
+  731 noop
   732 op idiv __tmp197 elapsed_ms 100
-    * op div __tmp198 __tmp197 10
-    * set elapsed_str __tmp198
-    * op div __tmp199 transferred elapsed_ms
-    * set items_per_ms __tmp199
-    * op idiv __tmp200 items_per_ms 0.000016666666666666667
-    * set items_per_min __tmp200
+  733 op div elapsed_str __tmp197 10
+  734 noop
+  735 op div items_per_ms transferred elapsed_ms
+  736 noop
+  737 op idiv items_per_min items_per_ms 0.000016666666666666667
+  738 noop
   739 set transferred 0
   740 set transfers 0
   741 jump __label127 equal AUTO_ALLOCATION false
   742 set AUTO_ALLOCATION_TXT "\n=== [gold]Unit auto allocation[] ==="
   743 op mul __tmp202 LOOPS_TICKS_TO_MS loop_time
-    * op add __tmp203 TRAVEL_TIME __tmp202
-    * set turnaround_ms __tmp203
-    * op mul __tmp204 turnaround_ms DEC_OVERALLOCATION
-    * set WAIT_LIMIT __tmp204
+  744 op add turnaround_ms TRAVEL_TIME __tmp202
+  745 noop
+  746 op mul WAIT_LIMIT turnaround_ms DEC_OVERALLOCATION
+  747 noop
   748 op idiv __tmp205 turnaround_ms 100
-    * op div __tmp206 __tmp205 10
-    * set turnaround_str __tmp206
-    * op div __tmp207 UNIT_CAPACITY turnaround_ms
-    * set items_per_ms_unit __tmp207
+  749 op div turnaround_str __tmp205 10
+  750 noop
+  751 op div items_per_ms_unit UNIT_CAPACITY turnaround_ms
+  752 noop
   753 op mul __tmp208 items_per_ms_unit 60000
-    * op floor __tmp209 __tmp208
-    * set items_per_min_unit __tmp209
+  754 op floor items_per_min_unit __tmp208
+  755 noop
   756 op add __tmp210 min_level max_level
-    * op div __tmp211 __tmp210 2
-    * set this_level __tmp211
+  757 op div this_level __tmp210 2
+  758 noop
   759 op sub __tmp212 last_level this_level
-    * op mul __tmp213 __tmp212 FLOW_CORR_SIGN
-    * set corr __tmp213
-    * op div __tmp214 corr elapsed_ms
-    * set corr_per_ms __tmp214
+  760 op mul corr __tmp212 FLOW_CORR_SIGN
+  761 noop
+  762 op div corr_per_ms corr elapsed_ms
+  763 noop
   764 set last_level this_level
-    * op add __tmp215 items_per_ms corr_per_ms
-    * set total_flow_per_ms __tmp215
+  765 op add total_flow_per_ms items_per_ms corr_per_ms
+  766 noop
   767 op mul __tmp216 60000 corr_per_ms
-    * op floor __tmp217 __tmp216
-    * set corr_per_min __tmp217
+  768 op floor corr_per_min __tmp216
+  769 noop
   770 set CORR_SIGN "[]([green]"
   771 op greaterThanEq __tmp218 corr_per_min 0
   772 jump __label129 equal __tmp218 false
 
   780 jump __label131 equal alive false
   781 op lessThan __tmp221 min_level LOW_LEVEL_TRIGGER
   782 op greaterThan __tmp222 max_level HIGH_LEVEL_TRIGGER
-    * op or __tmp223 __tmp221 __tmp222
-    * set trigger __tmp223
+  783 op or trigger __tmp221 __tmp222
+  784 noop
   785 op equal __tmp224 wait_time 0
   786 op greaterThan __tmp225 trigger remote_wait_time
   787 op or __tmp226 __tmp224 __tmp225
 
   792 set total_flow_1 total_flow_per_ms
   793 op add __tmp229 total_flow_3 total_flow_2
   794 op add __tmp230 __tmp229 total_flow_1
-    * op div __tmp231 __tmp230 3
-    * set total_flow_per_ms __tmp231
+  795 op div total_flow_per_ms __tmp230 3
+  796 noop
   797 set __tmp228 total_flow_per_ms
   798 jump __label136 always
   799 label __label135
 
   801 label __label136
   802 op div __tmp232 total_flow_per_ms items_per_ms_unit
   803 op add __tmp233 __tmp232 INC_OVERALLOCATION
-    * op ceil __tmp234 __tmp233
-    * set new_target __tmp234
-    * op mul __tmp235 TRIGGER_BOOST trigger
-    * set level_boost __tmp235
+  804 op ceil new_target __tmp233
+  805 noop
+  806 op mul level_boost TRIGGER_BOOST trigger
+  807 noop
   808 op add __tmp236 new_target level_boost
-    * op min __tmp237 __tmp236 MAX_UNITS
-    * set new_target __tmp237
+  809 op min new_target __tmp236 MAX_UNITS
+  810 noop
   811 op sub __tmp238 new_target active
   812 op max __tmp239 __tmp238 0
-    * op min __tmp240 __tmp239 INC_LIMIT
-    * set new_change __tmp240
+  813 op min new_change __tmp239 INC_LIMIT
+  814 noop
   815 set INC_LIMIT INC_MAX
   816 op lessThanEq __tmp241 new_change 0
-    * op mul __tmp242 __tmp241 DEC_MAX
-    * set DEC_LIMIT __tmp242
+  817 op mul DEC_LIMIT __tmp241 DEC_MAX
+  818 noop
   819 set __tmp227 DEC_LIMIT
   820 jump __label134 always
   821 label __label133
   822 op idiv __tmp243 wait_time WAIT_LIMIT
   823 op mul __tmp244 -1 __tmp243
-    * op max __tmp245 __tmp244 DEC_LIMIT
-    * set new_change __tmp245
+  824 op max new_change __tmp244 DEC_LIMIT
+  825 noop
   826 op greaterThanEq __tmp246 new_change 0
-    * op mul __tmp247 __tmp246 INC_MAX
-    * set INC_LIMIT __tmp247
+  827 op mul INC_LIMIT __tmp246 INC_MAX
+  828 noop
   829 set DEC_LIMIT DEC_MAX
   830 set __tmp227 DEC_LIMIT
   831 label __label134
   832 op add __tmp248 active new_change
-    * op max __tmp249 __tmp248 1
-    * set TARGET __tmp249
+  833 op max TARGET __tmp248 1
+  834 noop
   835 set __tmp220 TARGET
   836 jump __label132 always
   837 label __label131
 
   919 set __tmp259 null
   920 label __label146
   921 jump __label147 equal SHOW_REMOTE_LEVEL false
-    * sensor __tmp261 CORE ITEM
-    * set remote_level __tmp261
+  922 sensor remote_level CORE ITEM
+  923 noop
   924 print "\n[]Remote items: [gold]"
   925 print remote_level
   926 op lessThan __tmp262 REMOTE_LIMIT 100
 
   974 print loop_time_ms
   975 print " ms"
   976 printflush message1
-    * op sub __tmp267 TARGET active
-    * set CHANGE __tmp267
+  977 op sub CHANGE TARGET active
+  978 noop
   979 set active 0
-    * set __tmp268 @unit
-    * set first_unit __tmp268
+  980 set first_unit @unit
+  981 noop
   982 set items_in_transit 0
   983 print "Unit status:"
   984 sensor __tmp269 SRC @dead
 
  1027 sensor __tmp283 @unit @controlled
  1028 op equal __tmp284 __tmp283 0
  1029 jump __label165 equal __tmp284 false
-    * op sub __tmp286 CHANGE 1
-    * set CHANGE __tmp286
+ 1030 op sub CHANGE CHANGE 1
+ 1031 noop
  1032 ucontrol flag 1
  1033 set __tmp285 null
  1034 jump __label166 always
 
  1043 sensor __tmp287 @unit @controller
  1044 op equal __tmp288 __tmp287 @this
  1045 jump __label167 equal __tmp288 false
-    * sensor __tmp290 @unit @flag
-    * set state __tmp290
+ 1046 sensor state @unit @flag
+ 1047 noop
  1048 op notEqual __tmp291 state S_UNUSED
  1049 jump __label169 equal __tmp291 false
  1050 op max __tmp293 state 1
-    * op min __tmp294 __tmp293 STATE_LIMIT
-    * set state __tmp294
+ 1051 op min state __tmp293 STATE_LIMIT
+ 1052 noop
  1053 op lessThan __tmp295 CHANGE 0
  1054 jump __label171 equal __tmp295 false
  1055 op notEqual __tmp297 state 6
 
  1057 sensor __tmp299 @unit @totalItems
  1058 op lessThanEq __tmp300 __tmp299 DISCARD_UNIT_MAX_ITEMS
  1059 jump __label175 equal __tmp300 false
-    * op add __tmp302 CHANGE 1
-    * set CHANGE __tmp302
+ 1060 op add CHANGE CHANGE 1
+ 1061 noop
  1062 set state 6
  1063 set __tmp301 state
  1064 jump __label176 always
 
  1139 op equal __tmp324 state 3
  1140 jump __label189 equal __tmp324 false
  1141 sensor __tmp326 SRC ITEM
-    * op sub __tmp327 __tmp326 LOAD_LEVEL
-    * set max_load __tmp327
+ 1142 op sub max_load __tmp326 LOAD_LEVEL
+ 1143 noop
  1144 op greaterThanEq __tmp328 max_load LOAD_PACK
  1145 jump __label191 equal __tmp328 false
  1146 ucontrol itemTake SRC ITEM max_load
 
  1158 label __label193
  1159 print "[]\nWaiting at source: [green]"
  1160 ucontrol approach SRC_X SRC_Y 6
-    * op add __tmp333 wait_time loop_time_ms
-    * set wait_time __tmp333
+ 1161 op add wait_time wait_time loop_time_ms
+ 1162 noop
  1163 op mul __tmp334 loop_time_ms SRC_REMOTE_WAIT
-    * op add __tmp335 remote_wait_time __tmp334
-    * set remote_wait_time __tmp335
+ 1164 op add remote_wait_time remote_wait_time __tmp334
+ 1165 noop
  1166 set __tmp332 remote_wait_time
  1167 label __label194
  1168 set __tmp325 __tmp332
 
  1176 ucontrol within DST_X DST_Y 8 __tmp338
  1177 jump __label197 equal __tmp338 false
  1178 sensor __tmp340 @unit @totalItems
-    * op add __tmp341 transferred __tmp340
-    * set transferred __tmp341
-    * op add __tmp342 transfers 1
-    * set transfers __tmp342
+ 1179 op add transferred transferred __tmp340
+ 1180 noop
+ 1181 op add transfers transfers 1
+ 1182 noop
  1183 set state 5
  1184 set __tmp339 state
  1185 jump __label198 always
 
  1204 op equal __tmp350 state 5
  1205 jump __label199 equal __tmp350 false
  1206 sensor __tmp352 DST ITEM
-    * op sub __tmp353 DROP_LEVEL __tmp352
-    * set max_drop __tmp353
+ 1207 op sub max_drop DROP_LEVEL __tmp352
+ 1208 noop
  1209 op greaterThanEq __tmp354 max_drop DROP_PACK
  1210 jump __label201 equal __tmp354 false
  1211 ucontrol itemDrop DST max_drop
 
  1234 label __label203
  1235 print "[]\nWaiting at destination: [green]"
  1236 ucontrol approach DST_X DST_Y 6
-    * op add __tmp366 wait_time loop_time_ms
-    * set wait_time __tmp366
+ 1237 op add wait_time wait_time loop_time_ms
+ 1238 noop
  1239 op mul __tmp367 loop_time_ms DST_REMOTE_WAIT
-    * op add __tmp368 remote_wait_time __tmp367
-    * set remote_wait_time __tmp368
+ 1240 op add remote_wait_time remote_wait_time __tmp367
+ 1241 noop
  1242 set __tmp358 remote_wait_time
  1243 label __label204
  1244 set __tmp351 __tmp358
 
  1246 label __label199
  1247 set __tmp351 null
  1248 label __label200
-    * sensor __tmp369 @unit @totalItems
-    * set items __tmp369
-    * op add __tmp370 items_in_transit items
-    * set items_in_transit __tmp370
+ 1249 sensor items @unit @totalItems
+ 1250 noop
+ 1251 op add items_in_transit items_in_transit items
+ 1252 noop
  1253 op equal __tmp371 state 6
  1254 jump __label205 equal __tmp371 false
  1255 print "[]\nParking: [green]"
 
  1257 ucontrol within DROP_X DROP_Y 8 __tmp373
  1258 jump __label207 equal __tmp373 false
  1259 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * sensor __tmp375 @unit @totalItems
-    * set items __tmp375
+ 1260 sensor items @unit @totalItems
+ 1261 noop
  1262 op lessThanEq __tmp376 items PARK_ITEM_LIMIT
  1263 jump __label209 equal __tmp376 false
  1264 ucontrol move PARK_X PARK_Y
 
  1276 set __tmp372 __tmp374
  1277 jump __label206 always
  1278 label __label205
-    * op add __tmp378 active 1
-    * set active __tmp378
+ 1279 op add active active 1
+ 1280 noop
  1281 set __tmp372 active
  1282 label __label206
  1283 print items

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   590 set LAST_ITEM ITEM
   591 label __label90
   592 set __fn0_itemType ITEM
-    * set __ast1 __fn0_itemType
-    * jump __label94 equal __ast1 @blast-compound
+  593 jump __label94 equal __fn0_itemType @blast-compound
   594 jump __label93 always
   595 label __label94
   596 set __tmp178 "[]"
   597 jump __label92 always
   598 label __label93
-    * jump __label96 equal __ast1 @coal
+  599 jump __label96 equal __fn0_itemType @coal
   600 jump __label95 always
   601 label __label96
   602 set __tmp178 "[]"
   603 jump __label92 always
   604 label __label95
-    * jump __label98 equal __ast1 @copper
+  605 jump __label98 equal __fn0_itemType @copper
   606 jump __label97 always
   607 label __label98
   608 set __tmp178 "[]"
   609 jump __label92 always
   610 label __label97
-    * jump __label100 equal __ast1 @graphite
+  611 jump __label100 equal __fn0_itemType @graphite
   612 jump __label99 always
   613 label __label100
   614 set __tmp178 "[]"
   615 jump __label92 always
   616 label __label99
-    * jump __label102 equal __ast1 @lead
+  617 jump __label102 equal __fn0_itemType @lead
   618 jump __label101 always
   619 label __label102
   620 set __tmp178 "[]"
   621 jump __label92 always
   622 label __label101
-    * jump __label104 equal __ast1 @metaglass
+  623 jump __label104 equal __fn0_itemType @metaglass
   624 jump __label103 always
   625 label __label104
   626 set __tmp178 "[]"
   627 jump __label92 always
   628 label __label103
-    * jump __label106 equal __ast1 @phase-fabric
+  629 jump __label106 equal __fn0_itemType @phase-fabric
   630 jump __label105 always
   631 label __label106
   632 set __tmp178 "[]"
   633 jump __label92 always
   634 label __label105
-    * jump __label108 equal __ast1 @plastanium
+  635 jump __label108 equal __fn0_itemType @plastanium
   636 jump __label107 always
   637 label __label108
   638 set __tmp178 "[]"
   639 jump __label92 always
   640 label __label107
-    * jump __label110 equal __ast1 @pyratite
+  641 jump __label110 equal __fn0_itemType @pyratite
   642 jump __label109 always
   643 label __label110
   644 set __tmp178 "[]"
   645 jump __label92 always
   646 label __label109
-    * jump __label112 equal __ast1 @sand
+  647 jump __label112 equal __fn0_itemType @sand
   648 jump __label111 always
   649 label __label112
   650 set __tmp178 "[]"
   651 jump __label92 always
   652 label __label111
-    * jump __label114 equal __ast1 @scrap
+  653 jump __label114 equal __fn0_itemType @scrap
   654 jump __label113 always
   655 label __label114
   656 set __tmp178 "[]"
   657 jump __label92 always
   658 label __label113
-    * jump __label116 equal __ast1 @silicon
+  659 jump __label116 equal __fn0_itemType @silicon
   660 jump __label115 always
   661 label __label116
   662 set __tmp178 "[]"
   663 jump __label92 always
   664 label __label115
-    * jump __label118 equal __ast1 @spore-pod
+  665 jump __label118 equal __fn0_itemType @spore-pod
   666 jump __label117 always
   667 label __label118
   668 set __tmp178 "[]"
   669 jump __label92 always
   670 label __label117
-    * jump __label120 equal __ast1 @surge-alloy
+  671 jump __label120 equal __fn0_itemType @surge-alloy
   672 jump __label119 always
   673 label __label120
   674 set __tmp178 "[]"
   675 jump __label92 always
   676 label __label119
-    * jump __label122 equal __ast1 @thorium
+  677 jump __label122 equal __fn0_itemType @thorium
   678 jump __label121 always
   679 label __label122
   680 set __tmp178 "[]"
   681 jump __label92 always
   682 label __label121
-    * jump __label124 equal __ast1 @titanium
+  683 jump __label124 equal __fn0_itemType @titanium
   684 jump __label123 always
   685 label __label124
   686 set __tmp178 "[]"

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-90 instructions):
 
    48 set MESSAGE "[green]Settings saved to memory.[]\n"
    49 set __tmp4 MESSAGE
    50 label __label3
-    * set __tmp1 __tmp4
+   51 noop
    52 jump __label1 always
    53 label __label0
-    * set __tmp1 null
+   54 noop
    55 label __label1
    56 op max LOCAL_LIMIT LOCAL_LIMIT 20
    57 noop
 
   104 op land __tmp32 __tmp30 __tmp31
   105 op add TARGET TARGET __tmp32
   106 noop
-    * set __tmp28 TARGET
+  107 noop
   108 jump __label11 always
   109 label __label10
-    * set __tmp28 null
+  110 noop
   111 label __label11
   112 ubind UNIT
   113 op notEqual __tmp34 @unit first_unit
 
   147 set DROP_TARGET CONTAINER
   148 set CONTAINER block
   149 set CONTAINER_INDEX n
-    * set __tmp44 CONTAINER_INDEX
+  150 noop
   151 jump __label18 always
   152 label __label19
-    * set __tmp44 null
+  153 noop
   154 label __label18
   155 label __label16
   156 jump __label15 always
 
   159 jump __label21 equal __tmp45 false
   160 print "[salmon]No vault or container."
   161 printflush message1
-    * set __tmp46 null
+  162 noop
   163 jump __label22 always
   164 label __label21
   165 jump __label14 always
-    * set __tmp46 null
+  166 noop
   167 label __label22
   168 label __label13
   169 jump __label12 always
 
   183 ulocate building core false @copper CORE_X CORE_Y __tmp54 CORE
   184 noop
   185 ucontrol flag S_UNUSED
-    * set __tmp52 null
+  186 noop
   187 jump __label29 always
   188 label __label28
-    * set __tmp52 null
+  189 noop
   190 label __label29
   191 label __label26
   192 jump __label25 always
   193 label __label27
   194 set DISCARD_UNIT_MAX_ITEMS UNIT_CAPACITY
-    * set __tmp48 DISCARD_UNIT_MAX_ITEMS
+  195 noop
   196 jump __label24 always
   197 label __label23
   198 printflush message2
 
   263 label __label44
   264 set __tmp77 null
   265 label __label45
-    * set __tmp65 __tmp77
+  266 noop
   267 jump __label40 always
   268 label __label39
-    * set __tmp65 null
+  269 noop
   270 label __label40
   271 ucontrol flag S_UNUSED
   272 label __label31
   273 jump __label30 always
   274 label __label32
   275 set DISCARD_UNIT_MAX_ITEMS 0
-    * set __tmp48 DISCARD_UNIT_MAX_ITEMS
+  276 noop
   277 label __label24
   278 set SORTER sorter1
   279 sensor sorter_type SORTER @type
 
   289 jump __label49 equal __tmp82 false
   290 print "Block found: "
   291 print SORTER
-    * set __tmp83 SORTER
+  292 noop
   293 jump __label50 always
   294 label __label49
-    * set __tmp83 null
+  295 noop
   296 label __label50
   297 printflush message1
   298 set SORTER sorter1
 
   334 set __tmp97 " from vault #"
   335 label __label54
   336 set DIRECTION __tmp97
-    * set __tmp86 DIRECTION
+  337 noop
   338 jump __label52 always
   339 label __label51
   340 op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
 
   371 set __tmp111 " to vault #"
   372 label __label56
   373 set DIRECTION __tmp111
-    * set __tmp86 DIRECTION
+  374 noop
   375 label __label52
   376 op equal __tmp112 LINK_ID 0
   377 jump __label57 equal __tmp112 false
 
   438 op equal __tmp144 LINK_ID 0
   439 op mul PARK_ITEM_LIMIT __tmp144 UNIT_CAPACITY
   440 noop
-    * set __tmp135 PARK_ITEM_LIMIT
+  441 noop
   442 jump __label60 always
   443 label __label59
   444 sensor DROP_X DROP_TARGET @x
 
   448 set PARK_X DROP_X
   449 set PARK_Y DROP_Y
   450 set PARK_ITEM_LIMIT 0
-    * set __tmp135 PARK_ITEM_LIMIT
+  451 noop
   452 label __label60
   453 set TRANSFER_START @tick
   454 noop
 
   479 set corr_per_min 0
   480 set SPEED_UNIT_TXT "[])/min"
   481 set AUTO_ALLOCATION_TXT "\n=== [gold]Gathering statistics[] ==="
-    * set __tmp151 AUTO_ALLOCATION_TXT
+  482 noop
   483 jump __label66 always
   484 label __label65
   485 set CORR_SIGN "[]"
   486 set corr_per_min ""
   487 set SPEED_UNIT_TXT "/min"
   488 set AUTO_ALLOCATION_TXT ""
-    * set __tmp151 AUTO_ALLOCATION_TXT
+  489 noop
   490 label __label66
   491 label __label67
   492 jump __label69 equal true false
 
   514 set corr_per_min ""
   515 set SPEED_UNIT_TXT "/min"
   516 set WAIT_LIMIT 30000
-    * set __tmp154 WAIT_LIMIT
+  517 noop
   518 jump __label74 always
   519 label __label73
-    * set __tmp154 null
+  520 noop
   521 label __label74
   522 sensor __tmp157 switch2 @enabled
   523 jump __label75 equal __tmp157 false
 
   531 set CORR_SIGN "[]([green]+"
   532 set corr_per_min 0
   533 set SPEED_UNIT_TXT "[])/min"
-    * set __tmp160 SPEED_UNIT_TXT
+  534 noop
   535 jump __label78 always
   536 label __label77
   537 set AUTO_ALLOCATION false
 
   549 set __tmp164 ""
   550 label __label80
   551 set AUTO_ALLOCATION_TXT __tmp164
-    * set __tmp160 AUTO_ALLOCATION_TXT
+  552 noop
   553 label __label78
   554 set WAIT_LIMIT 30000
-    * set __tmp158 WAIT_LIMIT
+  555 noop
   556 jump __label76 always
   557 label __label75
-    * set __tmp158 null
+  558 noop
   559 label __label76
   560 sensor __tmp165 first_unit @dead
   561 op strictEqual alive __tmp165 0
 
   566 op equal __tmp170 active 0
   567 jump __label83 equal __tmp170 false
   568 print "\n[salmon]No active units.[]"
-    * set __tmp171 "\n[salmon]No active units.[]"
+  569 noop
   570 jump __label84 always
   571 label __label83
-    * set __tmp171 null
+  572 noop
   573 label __label84
   574 printflush message2
   575 set STATE_LIMIT 6
 
   696 noop
   697 set min_level 999999
   698 set max_level 0
-    * set __tmp174 max_level
+  699 noop
   700 jump __label86 always
   701 label __label85
-    * set __tmp174 null
+  702 noop
   703 label __label86
   704 sensor container_items CONTAINER ITEM
   705 noop
 
   770 op greaterThanEq __tmp218 corr_per_min 0
   771 jump __label129 equal __tmp218 false
   772 set CORR_SIGN "[]([green]+"
-    * set __tmp219 CORR_SIGN
+  773 noop
   774 jump __label130 always
   775 label __label129
-    * set __tmp219 null
+  776 noop
   777 label __label130
   778 set SPEED_UNIT_TXT "[])/min"
   779 jump __label131 equal alive false
 
   793 op add __tmp230 __tmp229 total_flow_1
   794 op div total_flow_per_ms __tmp230 3
   795 noop
-    * set __tmp228 total_flow_per_ms
+  796 noop
   797 jump __label136 always
   798 label __label135
-    * set __tmp228 null
+  799 noop
   800 label __label136
   801 op div __tmp232 total_flow_per_ms items_per_ms_unit
   802 op add __tmp233 __tmp232 INC_OVERALLOCATION
 
   815 op lessThanEq __tmp241 new_change 0
   816 op mul DEC_LIMIT __tmp241 DEC_MAX
   817 noop
-    * set __tmp227 DEC_LIMIT
+  818 noop
   819 jump __label134 always
   820 label __label133
   821 op idiv __tmp243 wait_time WAIT_LIMIT
 
   826 op mul INC_LIMIT __tmp246 INC_MAX
   827 noop
   828 set DEC_LIMIT DEC_MAX
-    * set __tmp227 DEC_LIMIT
+  829 noop
   830 label __label134
   831 op add __tmp248 active new_change
   832 op max TARGET __tmp248 1
   833 noop
-    * set __tmp220 TARGET
+  834 noop
   835 jump __label132 always
   836 label __label131
   837 set INC_LIMIT 0
   838 set DEC_LIMIT 0
-    * set __tmp220 DEC_LIMIT
+  839 noop
   840 label __label132
   841 set min_level 999999
   842 set max_level 0
-    * set __tmp201 max_level
+  843 noop
   844 jump __label128 always
   845 label __label127
-    * set __tmp201 null
+  846 noop
   847 label __label128
   848 set wait_time 0
   849 set remote_wait_time 0
 
   855 label __label137
   856 set __tmp251 null
   857 label __label138
-    * set __tmp190 __tmp251
+  858 noop
   859 jump __label126 always
   860 label __label125
-    * set __tmp190 null
+  861 noop
   862 label __label126
   863 print MESSAGE
   864 print "Moving [green]"
 
   879 print UNIT
   880 print ") [gold]+"
   881 print items_in_transit
-    * set __tmp255 null
+  882 noop
   883 jump __label142 always
   884 label __label141
   885 print "\nUsing [salmon]"
 
   890 print UNIT
   891 print ") [gold]+"
   892 print items_in_transit
-    * set __tmp255 null
+  893 noop
   894 label __label142
   895 op greaterThan __tmp256 CHANGE 0
   896 jump __label143 equal __tmp256 false
 
   900 label __label143
   901 set __tmp257 null
   902 label __label144
-    * set __tmp253 __tmp257
+  903 noop
   904 jump __label140 always
   905 label __label139
-    * set __tmp253 null
+  906 noop
   907 label __label140
   908 print "\n[]Local items: [gold]"
   909 print container_items
 
   912 print "[] (limit [orange]"
   913 print LOCAL_MARGIN
   914 print "[])"
-    * set __tmp259 null
+  915 noop
   916 jump __label146 always
   917 label __label145
-    * set __tmp259 null
+  918 noop
   919 label __label146
   920 jump __label147 equal SHOW_REMOTE_LEVEL false
   921 sensor remote_level CORE ITEM
 
   932 label __label149
   933 set __tmp263 null
   934 label __label150
-    * set __tmp260 __tmp263
+  935 noop
   936 jump __label148 always
   937 label __label147
-    * set __tmp260 null
+  938 noop
   939 label __label148
   940 op greaterThan __tmp264 TARGET 0
   941 jump __label151 equal __tmp264 false
 
   953 print "[]/[green]"
   954 print elapsed_str
   955 print "[] s"
-    * set __tmp266 null
+  956 noop
   957 jump __label154 always
   958 label __label153
   959 print "\nLast round: [green]"
   960 print elapsed_str
   961 print "[] s"
-    * set __tmp266 null
+  962 noop
   963 label __label154
   964 print "\nTotal wait time: [green]"
   965 print wait_time_str
   966 print "[] s"
-    * set __tmp265 null
+  967 noop
   968 jump __label152 always
   969 label __label151
-    * set __tmp265 null
+  970 noop
   971 label __label152
   972 print "\n[lightgray]Loop: "
   973 print loop_time_ms
 
   984 op notEqual __tmp270 __tmp269 0
   985 jump __label155 equal __tmp270 false
   986 jump __label69 always
-    * set __tmp271 null
+  987 noop
   988 jump __label156 always
   989 label __label155
-    * set __tmp271 null
+  990 noop
   991 label __label156
   992 sensor __tmp272 DST @dead
   993 op notEqual __tmp273 __tmp272 0
   994 jump __label157 equal __tmp273 false
   995 jump __label69 always
-    * set __tmp274 null
+  996 noop
   997 jump __label158 always
   998 label __label157
-    * set __tmp274 null
+  999 noop
  1000 label __label158
  1001 sensor __tmp275 SORTER @dead
  1002 op notEqual __tmp276 __tmp275 0
  1003 jump __label159 equal __tmp276 false
  1004 jump __label69 always
-    * set __tmp277 null
+ 1005 noop
  1006 jump __label160 always
  1007 label __label159
-    * set __tmp277 null
+ 1008 noop
  1009 label __label160
  1010 getlink __tmp278 CONTAINER_INDEX
  1011 op notEqual __tmp279 CONTAINER __tmp278
 
  1016 label __label161
  1017 set __tmp280 null
  1018 label __label162
-    * set __tmp169 __tmp280
+ 1019 noop
  1020 jump __label82 always
  1021 label __label81
-    * set __tmp169 null
+ 1022 noop
  1023 label __label82
  1024 op greaterThan __tmp281 CHANGE 0
  1025 jump __label163 equal __tmp281 false
 
  1034 label __label165
  1035 set __tmp285 null
  1036 label __label166
-    * set __tmp282 __tmp285
+ 1037 noop
  1038 jump __label164 always
  1039 label __label163
-    * set __tmp282 null
+ 1040 noop
  1041 label __label164
  1042 sensor __tmp287 @unit @controller
  1043 op equal __tmp288 __tmp287 @this
 
  1069 label __label173
  1070 set __tmp298 null
  1071 label __label174
-    * set __tmp296 __tmp298
+ 1072 noop
  1073 jump __label172 always
  1074 label __label171
-    * set __tmp296 null
+ 1075 noop
  1076 label __label172
  1077 op equal __tmp303 state 1
  1078 jump __label177 equal __tmp303 false
 
  1094 ucontrol within DROP_X DROP_Y 8 __tmp311
  1095 jump __label183 equal __tmp311 false
  1096 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
-    * set __tmp312 null
+ 1097 noop
  1098 jump __label184 always
  1099 label __label183
-    * set __tmp312 null
+ 1100 noop
  1101 label __label184
  1102 print "[]\nUnloading previous items: [green]"
  1103 set __tmp310 null
  1104 label __label182
  1105 set __tmp307 __tmp310
  1106 label __label180
-    * set __tmp304 __tmp307
+ 1107 noop
  1108 jump __label178 always
  1109 label __label177
-    * set __tmp304 null
+ 1110 noop
  1111 label __label178
  1112 op equal __tmp313 state 2
  1113 jump __label185 equal __tmp313 false
 
  1130 print " sec[] to source: [green]"
  1131 set __tmp316 null
  1132 label __label188
-    * set __tmp314 __tmp316
+ 1133 noop
  1134 jump __label186 always
  1135 label __label185
-    * set __tmp314 null
+ 1136 noop
  1137 label __label186
  1138 op equal __tmp324 state 3
  1139 jump __label189 equal __tmp324 false
 
  1143 op greaterThanEq __tmp328 max_load LOAD_PACK
  1144 jump __label191 equal __tmp328 false
  1145 ucontrol itemTake SRC ITEM max_load
-    * set __tmp329 null
+ 1146 noop
  1147 jump __label192 always
  1148 label __label191
-    * set __tmp329 null
+ 1149 noop
  1150 label __label192
  1151 sensor __tmp330 @unit @totalItems
  1152 op greaterThanEq __tmp331 __tmp330 UNIT_CAPACITY
 
  1164 noop
  1165 set __tmp332 remote_wait_time
  1166 label __label194
-    * set __tmp325 __tmp332
+ 1167 noop
  1168 jump __label190 always
  1169 label __label189
-    * set __tmp325 null
+ 1170 noop
  1171 label __label190
  1172 op equal __tmp336 state 4
  1173 jump __label195 equal __tmp336 false
 
  1195 print " sec[] to destination: [green]"
  1196 set __tmp339 null
  1197 label __label198
-    * set __tmp337 __tmp339
+ 1198 noop
  1199 jump __label196 always
  1200 label __label195
-    * set __tmp337 null
+ 1201 noop
  1202 label __label196
  1203 op equal __tmp350 state 5
  1204 jump __label199 equal __tmp350 false
 
  1208 op greaterThanEq __tmp354 max_drop DROP_PACK
  1209 jump __label201 equal __tmp354 false
  1210 ucontrol itemDrop DST max_drop
-    * set __tmp355 null
+ 1211 noop
  1212 jump __label202 always
  1213 label __label201
-    * set __tmp355 null
+ 1214 noop
  1215 label __label202
  1216 sensor __tmp356 @unit @totalItems
  1217 op lessThanEq __tmp357 __tmp356 0
 
  1240 noop
  1241 set __tmp358 remote_wait_time
  1242 label __label204
-    * set __tmp351 __tmp358
+ 1243 noop
  1244 jump __label200 always
  1245 label __label199
-    * set __tmp351 null
+ 1246 noop
  1247 label __label200
  1248 sensor items @unit @totalItems
  1249 noop
 
  1272 label __label207
  1273 set __tmp374 null
  1274 label __label208
-    * set __tmp372 __tmp374
+ 1275 noop
  1276 jump __label206 always
  1277 label __label205
  1278 op add active active 1
  1279 noop
-    * set __tmp372 active
+ 1280 noop
  1281 label __label206
  1282 print items
  1283 print ITEM_ICON
 
  1287 label __label169
  1288 set __tmp292 null
  1289 label __label170
-    * set __tmp289 __tmp292
+ 1290 noop
  1291 jump __label168 always
  1292 label __label167
-    * set __tmp289 null
+ 1293 noop
  1294 label __label168
  1295 label __label68
  1296 jump __label67 always
 
  1327 label __label217
  1328 jump __label216 always
  1329 label __label218
-    * set __tmp389 null
+ 1330 noop
  1331 jump __label215 always
  1332 label __label214
-    * set __tmp389 null
+ 1333 noop
  1334 label __label215
  1335 control enabled switch1 false
  1336 control enabled switch2 false

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-30 instructions):
 
    32 read STABILIZATION cell1 9
    33 noop
    34 set MESSAGE "[green]Settings restored from memory.[]\n"
-    * set __tmp4 MESSAGE
+   35 noop
    36 jump __label3 always
    37 label __label2
    38 write 2 cell1 0
 
    46 write OVERALLOCATION_HIGH cell1 8
    47 write STABILIZATION cell1 9
    48 set MESSAGE "[green]Settings saved to memory.[]\n"
-    * set __tmp4 MESSAGE
+   49 noop
    50 label __label3
    51 noop
    52 jump __label1 always
 
   258 print " is not a vault!"
   259 printflush message2
   260 set CORE null
-    * set __tmp77 CORE
+  261 noop
   262 jump __label45 always
   263 label __label44
-    * set __tmp77 null
+  264 noop
   265 label __label45
   266 noop
   267 jump __label40 always
 
   850 op greaterThanEq __tmp250 @tick MESSAGE_TIMEOUT
   851 jump __label137 equal __tmp250 false
   852 set MESSAGE ""
-    * set __tmp251 MESSAGE
+  853 noop
   854 jump __label138 always
   855 label __label137
-    * set __tmp251 null
+  856 noop
   857 label __label138
   858 noop
   859 jump __label126 always
 
   895 op greaterThan __tmp256 CHANGE 0
   896 jump __label143 equal __tmp256 false
   897 print "\n[][salmon]Cannot acquire additional units![]"
-    * set __tmp257 "\n[][salmon]Cannot acquire additional units![]"
+  898 noop
   899 jump __label144 always
   900 label __label143
-    * set __tmp257 null
+  901 noop
   902 label __label144
   903 noop
   904 jump __label140 always
 
   927 print "[] (limit [orange]"
   928 print REMOTE_MARGIN
   929 print "[])"
-    * set __tmp263 null
+  930 noop
   931 jump __label150 always
   932 label __label149
-    * set __tmp263 null
+  933 noop
   934 label __label150
   935 noop
   936 jump __label148 always
 
  1011 op notEqual __tmp279 CONTAINER __tmp278
  1012 jump __label161 equal __tmp279 false
  1013 jump __label69 always
-    * set __tmp280 null
+ 1014 noop
  1015 jump __label162 always
  1016 label __label161
-    * set __tmp280 null
+ 1017 noop
  1018 label __label162
  1019 noop
  1020 jump __label82 always
 
  1029 op sub CHANGE CHANGE 1
  1030 noop
  1031 ucontrol flag 1
-    * set __tmp285 null
+ 1032 noop
  1033 jump __label166 always
  1034 label __label165
-    * set __tmp285 null
+ 1035 noop
  1036 label __label166
  1037 noop
  1038 jump __label164 always
 
  1064 label __label175
  1065 set __tmp301 null
  1066 label __label176
-    * set __tmp298 __tmp301
+ 1067 noop
  1068 jump __label174 always
  1069 label __label173
-    * set __tmp298 null
+ 1070 noop
  1071 label __label174
  1072 noop
  1073 jump __label172 always
 
  1080 op equal __tmp306 __tmp305 0
  1081 jump __label179 equal __tmp306 false
  1082 set state 2
-    * set __tmp307 state
+ 1083 noop
  1084 jump __label180 always
  1085 label __label179
  1086 sensor __tmp308 @unit @firstItem
 
  1102 print "[]\nUnloading previous items: [green]"
  1103 set __tmp310 null
  1104 label __label182
-    * set __tmp307 __tmp310
+ 1105 noop
  1106 label __label180
  1107 noop
  1108 jump __label178 always
 
  1115 ucontrol within SRC_X SRC_Y 8 __tmp315
  1116 jump __label187 equal __tmp315 false
  1117 set state 3
-    * set __tmp316 state
+ 1118 noop
  1119 jump __label188 always
  1120 label __label187
  1121 sensor __tmp317 @unit @x
 
  1128 print "[]\n[gold]"
  1129 print __tmp323
  1130 print " sec[] to source: [green]"
-    * set __tmp316 null
+ 1131 noop
  1132 label __label188
  1133 noop
  1134 jump __label186 always
 
  1152 op greaterThanEq __tmp331 __tmp330 UNIT_CAPACITY
  1153 jump __label193 equal __tmp331 false
  1154 set state 4
-    * set __tmp332 state
+ 1155 noop
  1156 jump __label194 always
  1157 label __label193
  1158 print "[]\nWaiting at source: [green]"
 
  1162 op mul __tmp334 loop_time_ms SRC_REMOTE_WAIT
  1163 op add remote_wait_time remote_wait_time __tmp334
  1164 noop
-    * set __tmp332 remote_wait_time
+ 1165 noop
  1166 label __label194
  1167 noop
  1168 jump __label190 always
 
  1180 op add transfers transfers 1
  1181 noop
  1182 set state 5
-    * set __tmp339 state
+ 1183 noop
  1184 jump __label198 always
  1185 label __label197
  1186 sensor __tmp343 @unit @x
 
  1193 print "[]\n[gold]"
  1194 print __tmp349
  1195 print " sec[] to destination: [green]"
-    * set __tmp339 null
+ 1196 noop
  1197 label __label198
  1198 noop
  1199 jump __label196 always
 
  1228 print "[]\n[gold]"
  1229 print __tmp365
  1230 print " sec[] to source: [green]"
-    * set __tmp358 null
+ 1231 noop
  1232 jump __label204 always
  1233 label __label203
  1234 print "[]\nWaiting at destination: [green]"
 
  1238 op mul __tmp367 loop_time_ms DST_REMOTE_WAIT
  1239 op add remote_wait_time remote_wait_time __tmp367
  1240 noop
-    * set __tmp358 remote_wait_time
+ 1241 noop
  1242 label __label204
  1243 noop
  1244 jump __label200 always
 
  1267 label __label209
  1268 set __tmp377 null
  1269 label __label210
-    * set __tmp374 __tmp377
+ 1270 noop
  1271 jump __label208 always
  1272 label __label207
-    * set __tmp374 null
+ 1273 noop
  1274 label __label208
  1275 noop
  1276 jump __label206 always
 
  1282 print items
  1283 print ITEM_ICON
  1284 ucontrol flag state
-    * set __tmp292 null
+ 1285 noop
  1286 jump __label170 always
  1287 label __label169
-    * set __tmp292 null
+ 1288 noop
  1289 label __label170
  1290 noop
  1291 jump __label168 always

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
  1059 op add CHANGE CHANGE 1
  1060 noop
  1061 set state 6
-    * set __tmp301 state
+ 1062 noop
  1063 jump __label176 always
  1064 label __label175
-    * set __tmp301 null
+ 1065 noop
  1066 label __label176
  1067 noop
  1068 jump __label174 always
 
  1087 op equal __tmp309 __tmp308 ITEM
  1088 jump __label181 equal __tmp309 false
  1089 set state 4
-    * set __tmp310 state
+ 1090 noop
  1091 jump __label182 always
  1092 label __label181
  1093 ucontrol approach DROP_X DROP_Y 6
 
  1100 noop
  1101 label __label184
  1102 print "[]\nUnloading previous items: [green]"
-    * set __tmp310 null
+ 1103 noop
  1104 label __label182
  1105 noop
  1106 label __label180
 
  1262 jump __label209 equal __tmp376 false
  1263 ucontrol move PARK_X PARK_Y
  1264 set state S_UNUSED
-    * set __tmp377 state
+ 1265 noop
  1266 jump __label210 always
  1267 label __label209
-    * set __tmp377 null
+ 1268 noop
  1269 label __label210
  1270 noop
  1271 jump __label208 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   126 noop
   127 set first_unit null
   128 label __label12
-    * jump __label14 equal true false
+  129 noop
   130 set CONTAINER null
   131 set DROP_TARGET null
   132 set n @links
 
   489 noop
   490 label __label66
   491 label __label67
-    * jump __label69 equal true false
+  492 noop
   493 ubind UNIT
   494 label __label70
   495 op equal __tmp152 @unit null

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-17 instructions):
 
   141 sensor __ast0 block @type
   142 noop
   143 jump __label20 equal __ast0 @vault
-    * jump __label20 equal __ast0 @container
-    * jump __label19 always
+  144 jump __label19 notEqual __ast0 @container
+  145 noop
   146 label __label20
   147 set DROP_TARGET CONTAINER
   148 set CONTAINER block
 
   590 set LAST_ITEM ITEM
   591 label __label90
   592 set __fn0_itemType ITEM
-    * jump __label94 equal __fn0_itemType @blast-compound
-    * jump __label93 always
+  593 jump __label93 notEqual __fn0_itemType @blast-compound
+  594 noop
   595 label __label94
   596 set __tmp178 "[]"
   597 jump __label92 always
   598 label __label93
-    * jump __label96 equal __fn0_itemType @coal
-    * jump __label95 always
+  599 jump __label95 notEqual __fn0_itemType @coal
+  600 noop
   601 label __label96
   602 set __tmp178 "[]"
   603 jump __label92 always
   604 label __label95
-    * jump __label98 equal __fn0_itemType @copper
-    * jump __label97 always
+  605 jump __label97 notEqual __fn0_itemType @copper
+  606 noop
   607 label __label98
   608 set __tmp178 "[]"
   609 jump __label92 always
   610 label __label97
-    * jump __label100 equal __fn0_itemType @graphite
-    * jump __label99 always
+  611 jump __label99 notEqual __fn0_itemType @graphite
+  612 noop
   613 label __label100
   614 set __tmp178 "[]"
   615 jump __label92 always
   616 label __label99
-    * jump __label102 equal __fn0_itemType @lead
-    * jump __label101 always
+  617 jump __label101 notEqual __fn0_itemType @lead
+  618 noop
   619 label __label102
   620 set __tmp178 "[]"
   621 jump __label92 always
   622 label __label101
-    * jump __label104 equal __fn0_itemType @metaglass
-    * jump __label103 always
+  623 jump __label103 notEqual __fn0_itemType @metaglass
+  624 noop
   625 label __label104
   626 set __tmp178 "[]"
   627 jump __label92 always
   628 label __label103
-    * jump __label106 equal __fn0_itemType @phase-fabric
-    * jump __label105 always
+  629 jump __label105 notEqual __fn0_itemType @phase-fabric
+  630 noop
   631 label __label106
   632 set __tmp178 "[]"
   633 jump __label92 always
   634 label __label105
-    * jump __label108 equal __fn0_itemType @plastanium
-    * jump __label107 always
+  635 jump __label107 notEqual __fn0_itemType @plastanium
+  636 noop
   637 label __label108
   638 set __tmp178 "[]"
   639 jump __label92 always
   640 label __label107
-    * jump __label110 equal __fn0_itemType @pyratite
-    * jump __label109 always
+  641 jump __label109 notEqual __fn0_itemType @pyratite
+  642 noop
   643 label __label110
   644 set __tmp178 "[]"
   645 jump __label92 always
   646 label __label109
-    * jump __label112 equal __fn0_itemType @sand
-    * jump __label111 always
+  647 jump __label111 notEqual __fn0_itemType @sand
+  648 noop
   649 label __label112
   650 set __tmp178 "[]"
   651 jump __label92 always
   652 label __label111
-    * jump __label114 equal __fn0_itemType @scrap
-    * jump __label113 always
+  653 jump __label113 notEqual __fn0_itemType @scrap
+  654 noop
   655 label __label114
   656 set __tmp178 "[]"
   657 jump __label92 always
   658 label __label113
-    * jump __label116 equal __fn0_itemType @silicon
-    * jump __label115 always
+  659 jump __label115 notEqual __fn0_itemType @silicon
+  660 noop
   661 label __label116
   662 set __tmp178 "[]"
   663 jump __label92 always
   664 label __label115
-    * jump __label118 equal __fn0_itemType @spore-pod
-    * jump __label117 always
+  665 jump __label117 notEqual __fn0_itemType @spore-pod
+  666 noop
   667 label __label118
   668 set __tmp178 "[]"
   669 jump __label92 always
   670 label __label117
-    * jump __label120 equal __fn0_itemType @surge-alloy
-    * jump __label119 always
+  671 jump __label119 notEqual __fn0_itemType @surge-alloy
+  672 noop
   673 label __label120
   674 set __tmp178 "[]"
   675 jump __label92 always
   676 label __label119
-    * jump __label122 equal __fn0_itemType @thorium
-    * jump __label121 always
+  677 jump __label121 notEqual __fn0_itemType @thorium
+  678 noop
   679 label __label122
   680 set __tmp178 "[]"
   681 jump __label92 always
   682 label __label121
-    * jump __label124 equal __fn0_itemType @titanium
-    * jump __label123 always
+  683 jump __label123 notEqual __fn0_itemType @titanium
+  684 noop
   685 label __label124
   686 set __tmp178 "[]"
   687 jump __label92 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-62 instructions):
 
     8 set OVERALLOCATION_HIGH 0.75
     9 set STABILIZATION false
    10 set MESSAGE ""
-    * op notEqual __tmp0 cell1 null
-    * jump __label0 equal __tmp0 false
+   11 jump __label0 equal cell1 null
    12 read __tmp2 cell1 0
-    * op equal __tmp3 __tmp2 2
-    * jump __label2 equal __tmp3 false
+   13 jump __label2 notEqual __tmp2 2
    14 read LINK_ID cell1 1
    15 noop
    16 read AUTO_ALLOCATION cell1 2
 
    70 set DEC_MAX -1
    71 ubind UNIT
    72 label __label4
-    * op equal __tmp20 @unit null
-    * jump __label6 equal __tmp20 false
+   73 jump __label6 notEqual @unit null
    74 print "[salmon]No unit of type "
    75 print UNIT
    76 print " found."
 
    92 label __label7
    93 jump __label9 equal repeat false
    94 sensor __tmp26 @unit @controller
-    * op equal __tmp27 __tmp26 @this
-    * jump __label10 equal __tmp27 false
+   95 jump __label10 notEqual __tmp26 @this
    96 sensor state @unit @flag
    97 noop
    98 op greaterThanEq __tmp30 state 1
 
   128 set n @links
   129 noop
   130 label __label15
-    * op greaterThan __tmp40 n 0
-    * jump __label17 equal __tmp40 false
+  131 jump __label17 lessThanEq n 0
   132 op sub n n 1
   133 noop
   134 getlink block n
 
   150 label __label16
   151 jump __label15 always
   152 label __label17
-    * op equal __tmp45 CONTAINER null
-    * jump __label21 equal __tmp45 false
+  153 jump __label21 notEqual CONTAINER null
   154 print "[salmon]No vault or container."
   155 printflush message1
   156 noop
 
   163 jump __label12 always
   164 label __label14
   165 set CORE null
-    * op equal __tmp47 LINK_ID 0
-    * jump __label23 equal __tmp47 false
+  166 jump __label23 notEqual LINK_ID 0
   167 label __label25
-    * op equal __tmp49 CORE null
-    * jump __label27 equal __tmp49 false
+  168 jump __label27 notEqual CORE null
   169 print "[green]Locating core..."
   170 printflush message1
   171 ubind UNIT
   172 sensor __tmp50 @unit @controlled
-    * op equal __tmp51 __tmp50 0
-    * jump __label28 equal __tmp51 false
+  173 jump __label28 notEqual __tmp50 0
   174 ulocate building core false @copper CORE_X CORE_Y __tmp54 CORE
   175 noop
   176 ucontrol flag S_UNUSED
 
   192 print "..."
   193 printflush message1
   194 label __label30
-    * op equal __tmp55 CORE null
-    * jump __label32 equal __tmp55 false
+  195 jump __label32 notEqual CORE null
   196 op add QUERY_FLAG 99999900 LINK_ID
   197 noop
   198 set flag QUERY_FLAG
   199 ubind UNIT
   200 label __label33
   201 sensor __tmp57 @unit @controlled
-    * op notEqual __tmp58 __tmp57 0
-    * jump __label35 equal __tmp58 false
+  202 jump __label35 equal __tmp57 0
   203 ubind UNIT
   204 label __label34
   205 jump __label33 always
 
   217 label __label37
   218 jump __label36 always
   219 label __label38
-    * op notEqual __tmp64 flag QUERY_FLAG
-    * jump __label39 equal __tmp64 false
+  220 jump __label39 equal flag QUERY_FLAG
   221 op idiv position flag 100
   222 noop
   223 op mod CORE_X position @mapw
 
   237 label __label43
   238 ucontrol getBlock CORE_X CORE_Y b_type CORE __tmp75
   239 noop
-    * op notEqual __tmp76 b_type @vault
-    * jump __label44 equal __tmp76 false
+  240 jump __label44 equal b_type @vault
   241 print "[salmon]Building at "
   242 print CORE_X
   243 print ", "
 
   272 jump __label48 equal __tmp81 false
   273 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   274 print "\n"
-    * op notEqual __tmp82 SORTER null
-    * jump __label49 equal __tmp82 false
+  275 jump __label49 equal SORTER null
   276 print "Block found: "
   277 print SORTER
   278 noop
 
   287 label __label47
   288 jump __label46 always
   289 label __label48
-    * op equal __tmp85 sorter_type @sorter
-    * jump __label51 equal __tmp85 false
+  290 jump __label51 notEqual sorter_type @sorter
   291 set SHOW_REMOTE_LEVEL true
   292 set SRC CORE
   293 set DST CONTAINER
 
   311 set FLOW_CORR_SIGN 1
   312 set SRC_REMOTE_WAIT 1
   313 set DST_REMOTE_WAIT 0
-    * op equal __tmp96 LINK_ID 0
-    * jump __label53 equal __tmp96 false
+  314 jump __label53 notEqual LINK_ID 0
   315 set __tmp97 " from core"
   316 jump __label54 always
   317 label __label53
 
   347 set FLOW_CORR_SIGN -1
   348 set SRC_REMOTE_WAIT 0
   349 set DST_REMOTE_WAIT 1
-    * op equal __tmp110 LINK_ID 0
-    * jump __label55 equal __tmp110 false
+  350 jump __label55 notEqual LINK_ID 0
   351 set __tmp111 " to core"
   352 jump __label56 always
   353 label __label55
 
   356 set DIRECTION __tmp111
   357 noop
   358 label __label52
-    * op equal __tmp112 LINK_ID 0
-    * jump __label57 equal __tmp112 false
+  359 jump __label57 notEqual LINK_ID 0
   360 set __tmp113 ""
   361 jump __label58 always
   362 label __label57
 
   392 op sub __tmp132 __tmp131 6
   393 op div DISTANCE __tmp132 100
   394 noop
-    * op equal __tmp134 DROP_TARGET null
-    * jump __label59 equal __tmp134 false
+  395 jump __label59 notEqual DROP_TARGET null
   396 set DROP_TARGET CORE
   397 set DROP_X CORE_X
   398 set DROP_Y CORE_Y
   399 sensor __tmp136 CONTAINER @x
-    * op lessThan __tmp137 __tmp136 CORE_X
-    * jump __label61 equal __tmp137 false
+  400 jump __label61 greaterThanEq __tmp136 CORE_X
   401 set __tmp138 15
   402 jump __label62 always
   403 label __label61
 
   406 op add PARK_X CORE_X __tmp138
   407 noop
   408 sensor __tmp140 CONTAINER @y
-    * op lessThan __tmp141 __tmp140 CORE_Y
-    * jump __label63 equal __tmp141 false
+  409 jump __label63 greaterThanEq __tmp140 CORE_Y
   410 set __tmp142 15
   411 jump __label64 always
   412 label __label63
 
   471 noop
   472 ubind UNIT
   473 label __label70
-    * op equal __tmp152 @unit null
-    * jump __label72 equal __tmp152 false
+  474 jump __label72 notEqual @unit null
   475 print "No unit of type "
   476 print UNIT
   477 print " found."
 
   500 sensor __tmp157 switch2 @enabled
   501 jump __label75 equal __tmp157 false
   502 control enabled switch2 false
-    * op lessThan __tmp159 TARGET 1
-    * jump __label77 equal __tmp159 false
+  503 jump __label77 greaterThanEq TARGET 1
   504 set AUTO_ALLOCATION true
   505 set TARGET 1
   506 set DEC_LIMIT 0
 
   518 set CORR_SIGN "[]"
   519 set corr_per_min ""
   520 set SPEED_UNIT_TXT "/min"
-    * op equal __tmp163 TARGET 0
-    * jump __label79 equal __tmp163 false
+  521 jump __label79 notEqual TARGET 0
   522 set __tmp164 "\n=== [salmon]Transport deactivated[] ==="
   523 jump __label80 always
   524 label __label79
 
   537 op strictEqual alive __tmp165 0
   538 noop
   539 op strictEqual __tmp167 @unit first_unit
-    * op lessThanEq __tmp168 alive __tmp167
-    * jump __label81 equal __tmp168 false
-    * op equal __tmp170 active 0
-    * jump __label83 equal __tmp170 false
+  540 jump __label81 greaterThan alive __tmp167
+  541 jump __label83 notEqual active 0
   542 print "\n[salmon]No active units.[]"
   543 noop
   544 jump __label84 always
 
   549 set STATE_LIMIT 6
   550 sensor ITEM SORTER @config
   551 noop
-    * op notEqual __tmp173 ITEM LAST_ITEM
-    * jump __label85 equal __tmp173 false
+  552 jump __label85 equal ITEM LAST_ITEM
   553 label __label87
-    * op equal __tmp175 ITEM null
-    * jump __label89 equal __tmp175 false
+  554 jump __label89 notEqual ITEM null
   555 print "[salmon]No item type selected for transport.[]"
   556 printflush message1
   557 sensor ITEM SORTER @config
 
   739 op floor corr_per_min __tmp216
   740 noop
   741 set CORR_SIGN "[]([green]"
-    * op greaterThanEq __tmp218 corr_per_min 0
-    * jump __label129 equal __tmp218 false
+  742 jump __label129 lessThan corr_per_min 0
   743 set CORR_SIGN "[]([green]+"
   744 noop
   745 jump __label130 always
 
   818 label __label128
   819 set wait_time 0
   820 set remote_wait_time 0
-    * op greaterThanEq __tmp250 @tick MESSAGE_TIMEOUT
-    * jump __label137 equal __tmp250 false
+  821 jump __label137 lessThan @tick MESSAGE_TIMEOUT
   822 set MESSAGE ""
   823 noop
   824 jump __label138 always
 
   837 print DIRECTION
   838 print LINK_TXT
   839 print AUTO_ALLOCATION_TXT
-    * op greaterThan __tmp252 TARGET 0
-    * jump __label139 equal __tmp252 false
-    * op greaterThanEq __tmp254 active TARGET
-    * jump __label141 equal __tmp254 false
+  840 jump __label139 lessThanEq TARGET 0
+  841 jump __label141 lessThan active TARGET
   842 print "\nUsing [green]"
   843 print active
   844 print "/"
 
   860 print items_in_transit
   861 noop
   862 label __label142
-    * op greaterThan __tmp256 CHANGE 0
-    * jump __label143 equal __tmp256 false
+  863 jump __label143 lessThanEq CHANGE 0
   864 print "\n[][salmon]Cannot acquire additional units![]"
   865 noop
   866 jump __label144 always
 
   874 label __label140
   875 print "\n[]Local items: [gold]"
   876 print container_items
-    * op lessThan __tmp258 LOCAL_LIMIT 100
-    * jump __label145 equal __tmp258 false
+  877 jump __label145 greaterThanEq LOCAL_LIMIT 100
   878 print "[] (limit [orange]"
   879 print LOCAL_MARGIN
   880 print "[])"
 
   888 noop
   889 print "\n[]Remote items: [gold]"
   890 print remote_level
-    * op lessThan __tmp262 REMOTE_LIMIT 100
-    * jump __label149 equal __tmp262 false
+  891 jump __label149 greaterThanEq REMOTE_LIMIT 100
   892 print "[] (limit [orange]"
   893 print REMOTE_MARGIN
   894 print "[])"
 
   902 label __label147
   903 noop
   904 label __label148
-    * op greaterThan __tmp264 TARGET 0
-    * jump __label151 equal __tmp264 false
+  905 jump __label151 lessThanEq TARGET 0
   906 print "\n[]Speed: [green]"
   907 print items_per_min
   908 print CORR_SIGN
 
   945 set items_in_transit 0
   946 print "Unit status:"
   947 sensor __tmp269 SRC @dead
-    * op notEqual __tmp270 __tmp269 0
-    * jump __label155 equal __tmp270 false
+  948 jump __label155 equal __tmp269 0
   949 jump __label69 always
   950 noop
   951 jump __label156 always
 
   953 noop
   954 label __label156
   955 sensor __tmp272 DST @dead
-    * op notEqual __tmp273 __tmp272 0
-    * jump __label157 equal __tmp273 false
+  956 jump __label157 equal __tmp272 0
   957 jump __label69 always
   958 noop
   959 jump __label158 always
 
   961 noop
   962 label __label158
   963 sensor __tmp275 SORTER @dead
-    * op notEqual __tmp276 __tmp275 0
-    * jump __label159 equal __tmp276 false
+  964 jump __label159 equal __tmp275 0
   965 jump __label69 always
   966 noop
   967 jump __label160 always
 
   969 noop
   970 label __label160
   971 getlink __tmp278 CONTAINER_INDEX
-    * op notEqual __tmp279 CONTAINER __tmp278
-    * jump __label161 equal __tmp279 false
+  972 jump __label161 equal CONTAINER __tmp278
   973 jump __label69 always
   974 noop
   975 jump __label162 always
 
   981 label __label81
   982 noop
   983 label __label82
-    * op greaterThan __tmp281 CHANGE 0
-    * jump __label163 equal __tmp281 false
+  984 jump __label163 lessThanEq CHANGE 0
   985 sensor __tmp283 @unit @controlled
-    * op equal __tmp284 __tmp283 0
-    * jump __label165 equal __tmp284 false
+  986 jump __label165 notEqual __tmp283 0
   987 op sub CHANGE CHANGE 1
   988 noop
   989 ucontrol flag 1
 
   998 noop
   999 label __label164
  1000 sensor __tmp287 @unit @controller
-    * op equal __tmp288 __tmp287 @this
-    * jump __label167 equal __tmp288 false
+ 1001 jump __label167 notEqual __tmp287 @this
  1002 sensor state @unit @flag
  1003 noop
-    * op notEqual __tmp291 state S_UNUSED
-    * jump __label169 equal __tmp291 false
+ 1004 jump __label169 equal state S_UNUSED
  1005 op max __tmp293 state 1
  1006 op min state __tmp293 STATE_LIMIT
  1007 noop
-    * op lessThan __tmp295 CHANGE 0
-    * jump __label171 equal __tmp295 false
-    * op notEqual __tmp297 state 6
-    * jump __label173 equal __tmp297 false
+ 1008 jump __label171 greaterThanEq CHANGE 0
+ 1009 jump __label173 equal state 6
  1010 sensor __tmp299 @unit @totalItems
-    * op lessThanEq __tmp300 __tmp299 DISCARD_UNIT_MAX_ITEMS
-    * jump __label175 equal __tmp300 false
+ 1011 jump __label175 greaterThan __tmp299 DISCARD_UNIT_MAX_ITEMS
  1012 op add CHANGE CHANGE 1
  1013 noop
  1014 set state 6
 
  1027 label __label171
  1028 noop
  1029 label __label172
-    * op equal __tmp303 state 1
-    * jump __label177 equal __tmp303 false
+ 1030 jump __label177 notEqual state 1
  1031 sensor __tmp305 @unit @totalItems
-    * op equal __tmp306 __tmp305 0
-    * jump __label179 equal __tmp306 false
+ 1032 jump __label179 notEqual __tmp305 0
  1033 set state 2
  1034 noop
  1035 jump __label180 always
  1036 label __label179
  1037 sensor __tmp308 @unit @firstItem
-    * op equal __tmp309 __tmp308 ITEM
-    * jump __label181 equal __tmp309 false
+ 1038 jump __label181 notEqual __tmp308 ITEM
  1039 set state 4
  1040 noop
  1041 jump __label182 always
 
  1059 label __label177
  1060 noop
  1061 label __label178
-    * op equal __tmp313 state 2
-    * jump __label185 equal __tmp313 false
+ 1062 jump __label185 notEqual state 2
  1063 ucontrol approach SRC_X SRC_Y 6
  1064 ucontrol within SRC_X SRC_Y 8 __tmp315
  1065 jump __label187 equal __tmp315 false
 
  1084 label __label185
  1085 noop
  1086 label __label186
-    * op equal __tmp324 state 3
-    * jump __label189 equal __tmp324 false
+ 1087 jump __label189 notEqual state 3
  1088 sensor __tmp326 SRC ITEM
  1089 op sub max_load __tmp326 LOAD_LEVEL
  1090 noop
-    * op greaterThanEq __tmp328 max_load LOAD_PACK
-    * jump __label191 equal __tmp328 false
+ 1091 jump __label191 lessThan max_load LOAD_PACK
  1092 ucontrol itemTake SRC ITEM max_load
  1093 noop
  1094 jump __label192 always
 
  1096 noop
  1097 label __label192
  1098 sensor __tmp330 @unit @totalItems
-    * op greaterThanEq __tmp331 __tmp330 UNIT_CAPACITY
-    * jump __label193 equal __tmp331 false
+ 1099 jump __label193 lessThan __tmp330 UNIT_CAPACITY
  1100 set state 4
  1101 noop
  1102 jump __label194 always
 
  1115 label __label189
  1116 noop
  1117 label __label190
-    * op equal __tmp336 state 4
-    * jump __label195 equal __tmp336 false
+ 1118 jump __label195 notEqual state 4
  1119 ucontrol approach DST_X DST_Y 6
  1120 ucontrol within DST_X DST_Y 8 __tmp338
  1121 jump __label197 equal __tmp338 false
 
  1145 label __label195
  1146 noop
  1147 label __label196
-    * op equal __tmp350 state 5
-    * jump __label199 equal __tmp350 false
+ 1148 jump __label199 notEqual state 5
  1149 sensor __tmp352 DST ITEM
  1150 op sub max_drop DROP_LEVEL __tmp352
  1151 noop
-    * op greaterThanEq __tmp354 max_drop DROP_PACK
-    * jump __label201 equal __tmp354 false
+ 1152 jump __label201 lessThan max_drop DROP_PACK
  1153 ucontrol itemDrop DST max_drop
  1154 noop
  1155 jump __label202 always
 
  1157 noop
  1158 label __label202
  1159 sensor __tmp356 @unit @totalItems
-    * op lessThanEq __tmp357 __tmp356 0
-    * jump __label203 equal __tmp357 false
+ 1160 jump __label203 greaterThan __tmp356 0
  1161 set state 2
  1162 ucontrol approach SRC_X SRC_Y 6
  1163 sensor __tmp359 @unit @x
 
  1191 noop
  1192 op add items_in_transit items_in_transit items
  1193 noop
-    * op equal __tmp371 state 6
-    * jump __label205 equal __tmp371 false
+ 1194 jump __label205 notEqual state 6
  1195 print "[]\nParking: [green]"
  1196 ucontrol approach DROP_X DROP_Y 6
  1197 ucontrol within DROP_X DROP_Y 8 __tmp373
 
  1199 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
  1200 sensor items @unit @totalItems
  1201 noop
-    * op lessThanEq __tmp376 items PARK_ITEM_LIMIT
-    * jump __label209 equal __tmp376 false
+ 1202 jump __label209 greaterThan items PARK_ITEM_LIMIT
  1203 ucontrol move PARK_X PARK_Y
  1204 set state S_UNUSED
  1205 noop
 
  1238 label __label211
  1239 sensor __tmp379 SORTER @dead
  1240 op strictEqual __tmp380 __tmp379 0
-    * op equal __tmp381 __tmp380 false
-    * jump __label213 equal __tmp381 false
+ 1241 jump __label213 notEqual __tmp380 false
  1242 print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
  1243 printflush message1
  1244 printflush message2
 
  1258 sensor __tmp390 switch1 @enabled
  1259 sensor __tmp391 switch2 @enabled
  1260 op or __tmp392 __tmp390 __tmp391
-    * op equal __tmp393 __tmp392 false
-    * jump __label218 equal __tmp393 false
+ 1261 jump __label218 notEqual __tmp392 false
  1262 print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
  1263 printflush message1
  1264 printflush message2

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-45 instructions):
 
    47 noop
    48 label __label3
    49 noop
-    * jump __label1 always
+   50 noop
    51 label __label0
    52 noop
    53 label __label1
 
   101 op add TARGET TARGET __tmp32
   102 noop
   103 noop
-    * jump __label11 always
+  104 noop
   105 label __label10
   106 noop
   107 label __label11
 
   143 set CONTAINER block
   144 set CONTAINER_INDEX n
   145 noop
-    * jump __label18 always
+  146 noop
   147 label __label19
   148 noop
   149 label __label18
 
   175 noop
   176 ucontrol flag S_UNUSED
   177 noop
-    * jump __label29 always
+  178 noop
   179 label __label28
   180 noop
   181 label __label29
 
   246 printflush message2
   247 set CORE null
   248 noop
-    * jump __label45 always
+  249 noop
   250 label __label44
   251 noop
   252 label __label45
   253 noop
-    * jump __label40 always
+  254 noop
   255 label __label39
   256 noop
   257 label __label40
 
   276 print "Block found: "
   277 print SORTER
   278 noop
-    * jump __label50 always
+  279 noop
   280 label __label49
   281 noop
   282 label __label50
 
   493 set SPEED_UNIT_TXT "/min"
   494 set WAIT_LIMIT 30000
   495 noop
-    * jump __label74 always
+  496 noop
   497 label __label73
   498 noop
   499 label __label74
 
   529 label __label78
   530 set WAIT_LIMIT 30000
   531 noop
-    * jump __label76 always
+  532 noop
   533 label __label75
   534 noop
   535 label __label76
 
   541 jump __label83 notEqual active 0
   542 print "\n[salmon]No active units.[]"
   543 noop
-    * jump __label84 always
+  544 noop
   545 label __label83
   546 noop
   547 label __label84
 
   669 set min_level 999999
   670 set max_level 0
   671 noop
-    * jump __label86 always
+  672 noop
   673 label __label85
   674 noop
   675 label __label86
 
   742 jump __label129 lessThan corr_per_min 0
   743 set CORR_SIGN "[]([green]+"
   744 noop
-    * jump __label130 always
+  745 noop
   746 label __label129
   747 noop
   748 label __label130
 
   765 op div total_flow_per_ms __tmp230 3
   766 noop
   767 noop
-    * jump __label136 always
+  768 noop
   769 label __label135
   770 noop
   771 label __label136
 
   812 set min_level 999999
   813 set max_level 0
   814 noop
-    * jump __label128 always
+  815 noop
   816 label __label127
   817 noop
   818 label __label128
 
   821 jump __label137 lessThan @tick MESSAGE_TIMEOUT
   822 set MESSAGE ""
   823 noop
-    * jump __label138 always
+  824 noop
   825 label __label137
   826 noop
   827 label __label138
   828 noop
-    * jump __label126 always
+  829 noop
   830 label __label125
   831 noop
   832 label __label126
 
   863 jump __label143 lessThanEq CHANGE 0
   864 print "\n[][salmon]Cannot acquire additional units![]"
   865 noop
-    * jump __label144 always
+  866 noop
   867 label __label143
   868 noop
   869 label __label144
   870 noop
-    * jump __label140 always
+  871 noop
   872 label __label139
   873 noop
   874 label __label140
 
   879 print LOCAL_MARGIN
   880 print "[])"
   881 noop
-    * jump __label146 always
+  882 noop
   883 label __label145
   884 noop
   885 label __label146
 
   893 print REMOTE_MARGIN
   894 print "[])"
   895 noop
-    * jump __label150 always
+  896 noop
   897 label __label149
   898 noop
   899 label __label150
   900 noop
-    * jump __label148 always
+  901 noop
   902 label __label147
   903 noop
   904 label __label148
 
   929 print wait_time_str
   930 print "[] s"
   931 noop
-    * jump __label152 always
+  932 noop
   933 label __label151
   934 noop
   935 label __label152
 
   948 jump __label155 equal __tmp269 0
   949 jump __label69 always
   950 noop
-    * jump __label156 always
+  951 noop
   952 label __label155
   953 noop
   954 label __label156
 
   956 jump __label157 equal __tmp272 0
   957 jump __label69 always
   958 noop
-    * jump __label158 always
+  959 noop
   960 label __label157
   961 noop
   962 label __label158
 
   964 jump __label159 equal __tmp275 0
   965 jump __label69 always
   966 noop
-    * jump __label160 always
+  967 noop
   968 label __label159
   969 noop
   970 label __label160
 
   972 jump __label161 equal CONTAINER __tmp278
   973 jump __label69 always
   974 noop
-    * jump __label162 always
+  975 noop
   976 label __label161
   977 noop
   978 label __label162
   979 noop
-    * jump __label82 always
+  980 noop
   981 label __label81
   982 noop
   983 label __label82
 
   988 noop
   989 ucontrol flag 1
   990 noop
-    * jump __label166 always
+  991 noop
   992 label __label165
   993 noop
   994 label __label166
   995 noop
-    * jump __label164 always
+  996 noop
   997 label __label163
   998 noop
   999 label __label164
 
  1013 noop
  1014 set state 6
  1015 noop
-    * jump __label176 always
+ 1016 noop
  1017 label __label175
  1018 noop
  1019 label __label176
  1020 noop
-    * jump __label174 always
+ 1021 noop
  1022 label __label173
  1023 noop
  1024 label __label174
  1025 noop
-    * jump __label172 always
+ 1026 noop
  1027 label __label171
  1028 noop
  1029 label __label172
 
  1045 jump __label183 equal __tmp311 false
  1046 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
  1047 noop
-    * jump __label184 always
+ 1048 noop
  1049 label __label183
  1050 noop
  1051 label __label184
 
  1055 noop
  1056 label __label180
  1057 noop
-    * jump __label178 always
+ 1058 noop
  1059 label __label177
  1060 noop
  1061 label __label178
 
  1080 noop
  1081 label __label188
  1082 noop
-    * jump __label186 always
+ 1083 noop
  1084 label __label185
  1085 noop
  1086 label __label186
 
  1091 jump __label191 lessThan max_load LOAD_PACK
  1092 ucontrol itemTake SRC ITEM max_load
  1093 noop
-    * jump __label192 always
+ 1094 noop
  1095 label __label191
  1096 noop
  1097 label __label192
 
  1111 noop
  1112 label __label194
  1113 noop
-    * jump __label190 always
+ 1114 noop
  1115 label __label189
  1116 noop
  1117 label __label190
 
  1141 noop
  1142 label __label198
  1143 noop
-    * jump __label196 always
+ 1144 noop
  1145 label __label195
  1146 noop
  1147 label __label196
 
  1152 jump __label201 lessThan max_drop DROP_PACK
  1153 ucontrol itemDrop DST max_drop
  1154 noop
-    * jump __label202 always
+ 1155 noop
  1156 label __label201
  1157 noop
  1158 label __label202
 
  1183 noop
  1184 label __label204
  1185 noop
-    * jump __label200 always
+ 1186 noop
  1187 label __label199
  1188 noop
  1189 label __label200
 
  1203 ucontrol move PARK_X PARK_Y
  1204 set state S_UNUSED
  1205 noop
-    * jump __label210 always
+ 1206 noop
  1207 label __label209
  1208 noop
  1209 label __label210
  1210 noop
-    * jump __label208 always
+ 1211 noop
  1212 label __label207
  1213 noop
  1214 label __label208
 
  1223 print ITEM_ICON
  1224 ucontrol flag state
  1225 noop
-    * jump __label170 always
+ 1226 noop
  1227 label __label169
  1228 noop
  1229 label __label170
  1230 noop
-    * jump __label168 always
+ 1231 noop
  1232 label __label167
  1233 noop
  1234 label __label168
 
  1266 jump __label216 always
  1267 label __label218
  1268 noop
-    * jump __label215 always
+ 1269 noop
  1270 label __label214
  1271 noop
  1272 label __label215

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   721 noop
   722 op div items_per_ms_unit UNIT_CAPACITY turnaround_ms
   723 noop
-    * op mul __tmp208 items_per_ms_unit 60000
-    * op floor items_per_min_unit __tmp208
+  724 noop
+  725 op idiv items_per_min_unit items_per_ms_unit 0.000016666666666666667
   726 noop
   727 op add __tmp210 min_level max_level
   728 op div this_level __tmp210 2
 
   735 set last_level this_level
   736 op add total_flow_per_ms items_per_ms corr_per_ms
   737 noop
-    * op mul __tmp216 60000 corr_per_ms
-    * op floor corr_per_min __tmp216
+  738 noop
+  739 op idiv corr_per_min corr_per_ms 0.000016666666666666667
   740 noop
   741 set CORR_SIGN "[]([green]"
   742 jump __label129 lessThan corr_per_min 0

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-4 instructions):
 
   311 set FLOW_CORR_SIGN 1
   312 set SRC_REMOTE_WAIT 1
   313 set DST_REMOTE_WAIT 0
-    * jump __label53 notEqual LINK_ID 0
-    * set __tmp97 " from core"
+  314 set DIRECTION " from vault #"
+  315 jump __label54 notEqual LINK_ID 0
+  316 set DIRECTION " from core"
   317 jump __label54 always
-    * label __label53
-    * set __tmp97 " from vault #"
   318 label __label54
-    * set DIRECTION __tmp97
   319 noop
   320 jump __label52 always
   321 label __label51
 
   345 set FLOW_CORR_SIGN -1
   346 set SRC_REMOTE_WAIT 0
   347 set DST_REMOTE_WAIT 1
-    * jump __label55 notEqual LINK_ID 0
-    * set __tmp111 " to core"
+  348 set DIRECTION " to vault #"
+  349 jump __label56 notEqual LINK_ID 0
+  350 set DIRECTION " to core"
   351 jump __label56 always
-    * label __label55
-    * set __tmp111 " to vault #"
   352 label __label56
-    * set DIRECTION __tmp111
   353 noop
   354 label __label52
-    * jump __label57 notEqual LINK_ID 0
-    * set __tmp113 ""
+  355 set LINK_TXT LINK_ID
+  356 jump __label58 notEqual LINK_ID 0
+  357 set LINK_TXT ""
   358 jump __label58 always
-    * label __label57
-    * set __tmp113 LINK_ID
   359 label __label58
-    * set LINK_TXT __tmp113
   360 op sub __tmp114 src_capacity LOAD_LEVEL
   361 op min LOAD_PACK UNIT_CAPACITY __tmp114
   362 noop
 
   390 set DROP_TARGET CORE
   391 set DROP_X CORE_X
   392 set DROP_Y CORE_Y
+  393 set __tmp138 -15
   394 sensor __tmp136 CONTAINER @x
-    * jump __label61 greaterThanEq __tmp136 CORE_X
+  395 jump __label62 greaterThanEq __tmp136 CORE_X
   396 set __tmp138 15
   397 jump __label62 always
-    * label __label61
-    * set __tmp138 -15
   398 label __label62
   399 op add PARK_X CORE_X __tmp138
   400 noop
+  401 set __tmp142 -15
   402 sensor __tmp140 CONTAINER @y
-    * jump __label63 greaterThanEq __tmp140 CORE_Y
+  403 jump __label64 greaterThanEq __tmp140 CORE_Y
   404 set __tmp142 15
   405 jump __label64 always
-    * label __label63
-    * set __tmp142 -15
   406 label __label64
   407 op add PARK_Y CORE_Y __tmp142
   408 noop
 
   510 set CORR_SIGN "[]"
   511 set corr_per_min ""
   512 set SPEED_UNIT_TXT "/min"
-    * jump __label79 notEqual TARGET 0
-    * set __tmp164 "\n=== [salmon]Transport deactivated[] ==="
+  513 set AUTO_ALLOCATION_TXT ""
+  514 jump __label80 notEqual TARGET 0
+  515 set AUTO_ALLOCATION_TXT "\n=== [salmon]Transport deactivated[] ==="
   516 jump __label80 always
-    * label __label79
-    * set __tmp164 ""
   517 label __label80
-    * set AUTO_ALLOCATION_TXT __tmp164
   518 noop
   519 label __label78
   520 set WAIT_LIMIT 30000

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    60 noop
    61 set LOOPS 1
    62 op mul __tmp17 LOOPS 1000
-    * op div LOOPS_TICKS_TO_MS __tmp17 60
+   63 op div LOOPS_TICKS_TO_MS LOOPS 0.06
    64 noop
    65 set INC_OVERALLOCATION OVERALLOCATION_LOW
    66 op add DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
 
   204 label __label34
   205 jump __label33 always
   206 label __label35
-    * ucontrol flag flag
+  207 ucontrol flag QUERY_FLAG
   208 label __label36
   209 op equal __tmp59 flag QUERY_FLAG
   210 sensor __tmp60 @unit @dead
 
   374 op sub __tmp122 DST_Y SRC_Y
   375 op len __tmp123 __tmp121 __tmp122
   376 op sub __tmp124 __tmp123 6
-    * op sub DISTANCE __tmp124 8
+  377 op sub DISTANCE __tmp123 14
   378 noop
   379 op max __tmp126 DISTANCE 10
   380 op mul __tmp127 2 __tmp126
 
   382 noop
   383 op sub __tmp129 DST_X SRC_X
   384 op sub __tmp130 DST_Y SRC_Y
-    * op len __tmp131 __tmp129 __tmp130
-    * op sub __tmp132 __tmp131 6
-    * op div DISTANCE __tmp132 100
+  385 op len __tmp131 __tmp121 __tmp122
+  386 op sub __tmp132 __tmp123 6
+  387 op div DISTANCE __tmp124 100
   388 noop
   389 jump __label59 notEqual DROP_TARGET null
   390 set DROP_TARGET CORE
 
   436 set elapsed_str "--"
   437 set wait_time_str 0
   438 set wait_time 0
-    * set transfers wait_time
-    * set transferred transfers
-    * set total_flow_2 transferred
-    * set total_flow_1 total_flow_2
-    * set remote_wait_time total_flow_1
-    * set min_level remote_wait_time
-    * set max_level min_level
-    * set loop_time_ms max_level
-    * set last_level loop_time_ms
+  439 set transfers 0
+  440 set transferred wait_time
+  441 set total_flow_2 transfers
+  442 set total_flow_1 transferred
+  443 set remote_wait_time total_flow_2
+  444 set min_level total_flow_1
+  445 set max_level remote_wait_time
+  446 set loop_time_ms min_level
+  447 set last_level max_level
   448 jump __label65 equal AUTO_ALLOCATION false
   449 set CORR_SIGN "[]([green]+"
   450 set corr_per_min 0
 
   552 set LAST_ITEM ITEM
   553 label __label90
   554 set __fn0_itemType ITEM
-    * jump __label93 notEqual __fn0_itemType @blast-compound
+  555 jump __label93 notEqual ITEM @blast-compound
   556 noop
   557 label __label94
   558 set __tmp178 "[]"
   559 jump __label92 always
   560 label __label93
-    * jump __label95 notEqual __fn0_itemType @coal
+  561 jump __label95 notEqual ITEM @coal
   562 noop
   563 label __label96
   564 set __tmp178 "[]"
   565 jump __label92 always
   566 label __label95
-    * jump __label97 notEqual __fn0_itemType @copper
+  567 jump __label97 notEqual ITEM @copper
   568 noop
   569 label __label98
   570 set __tmp178 "[]"
   571 jump __label92 always
   572 label __label97
-    * jump __label99 notEqual __fn0_itemType @graphite
+  573 jump __label99 notEqual ITEM @graphite
   574 noop
   575 label __label100
   576 set __tmp178 "[]"
   577 jump __label92 always
   578 label __label99
-    * jump __label101 notEqual __fn0_itemType @lead
+  579 jump __label101 notEqual ITEM @lead
   580 noop
   581 label __label102
   582 set __tmp178 "[]"
   583 jump __label92 always
   584 label __label101
-    * jump __label103 notEqual __fn0_itemType @metaglass
+  585 jump __label103 notEqual ITEM @metaglass
   586 noop
   587 label __label104
   588 set __tmp178 "[]"
   589 jump __label92 always
   590 label __label103
-    * jump __label105 notEqual __fn0_itemType @phase-fabric
+  591 jump __label105 notEqual ITEM @phase-fabric
   592 noop
   593 label __label106
   594 set __tmp178 "[]"
   595 jump __label92 always
   596 label __label105
-    * jump __label107 notEqual __fn0_itemType @plastanium
+  597 jump __label107 notEqual ITEM @plastanium
   598 noop
   599 label __label108
   600 set __tmp178 "[]"
   601 jump __label92 always
   602 label __label107
-    * jump __label109 notEqual __fn0_itemType @pyratite
+  603 jump __label109 notEqual ITEM @pyratite
   604 noop
   605 label __label110
   606 set __tmp178 "[]"
   607 jump __label92 always
   608 label __label109
-    * jump __label111 notEqual __fn0_itemType @sand
+  609 jump __label111 notEqual ITEM @sand
   610 noop
   611 label __label112
   612 set __tmp178 "[]"
   613 jump __label92 always
   614 label __label111
-    * jump __label113 notEqual __fn0_itemType @scrap
+  615 jump __label113 notEqual ITEM @scrap
   616 noop
   617 label __label114
   618 set __tmp178 "[]"
   619 jump __label92 always
   620 label __label113
-    * jump __label115 notEqual __fn0_itemType @silicon
+  621 jump __label115 notEqual ITEM @silicon
   622 noop
   623 label __label116
   624 set __tmp178 "[]"
   625 jump __label92 always
   626 label __label115
-    * jump __label117 notEqual __fn0_itemType @spore-pod
+  627 jump __label117 notEqual ITEM @spore-pod
   628 noop
   629 label __label118
   630 set __tmp178 "[]"
   631 jump __label92 always
   632 label __label117
-    * jump __label119 notEqual __fn0_itemType @surge-alloy
+  633 jump __label119 notEqual ITEM @surge-alloy
   634 noop
   635 label __label120
   636 set __tmp178 "[]"
   637 jump __label92 always
   638 label __label119
-    * jump __label121 notEqual __fn0_itemType @thorium
+  639 jump __label121 notEqual ITEM @thorium
   640 noop
   641 label __label122
   642 set __tmp178 "[]"
   643 jump __label92 always
   644 label __label121
-    * jump __label123 notEqual __fn0_itemType @titanium
+  645 jump __label123 notEqual ITEM @titanium
   646 noop
   647 label __label124
   648 set __tmp178 "[]"
 
   652 label __label92
   653 set __tmp177 __tmp178
   654 label __label91
-    * set ITEM_ICON __tmp177
+  655 set ITEM_ICON __tmp178
   656 set STATE_LIMIT 1
   657 sensor last_level CONTAINER ITEM
   658 noop
 
   751 set total_flow_2 total_flow_1
   752 set total_flow_1 total_flow_per_ms
   753 op add __tmp229 total_flow_3 total_flow_2
-    * op add __tmp230 __tmp229 total_flow_1
+  754 op add __tmp230 __tmp229 total_flow_per_ms
   755 op div total_flow_per_ms __tmp230 3
   756 noop
   757 noop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
    59 op mul S_UNUSED -1 HOUSEKEEPING
    60 noop
    61 set LOOPS 1
-    * op mul __tmp17 LOOPS 1000
    62 op div LOOPS_TICKS_TO_MS LOOPS 0.06
    63 noop
    64 set INC_OVERALLOCATION OVERALLOCATION_LOW
 
   379 op mul __tmp127 2 __tmp126
   380 op div TRAVEL_TIME __tmp127 SPEED
   381 noop
-    * op sub __tmp129 DST_X SRC_X
-    * op sub __tmp130 DST_Y SRC_Y
-    * op len __tmp131 __tmp121 __tmp122
-    * op sub __tmp132 __tmp123 6
   382 op div DISTANCE __tmp124 100
   383 noop
   384 jump __label59 notEqual DROP_TARGET null
 
   432 set wait_time_str 0
   433 set wait_time 0
   434 set transfers 0
-    * set transferred wait_time
-    * set total_flow_2 transfers
-    * set total_flow_1 transferred
-    * set remote_wait_time total_flow_2
-    * set min_level total_flow_1
-    * set max_level remote_wait_time
-    * set loop_time_ms min_level
-    * set last_level max_level
+  435 set transferred 0
+  436 set total_flow_2 0
+  437 set total_flow_1 wait_time
+  438 set remote_wait_time transfers
+  439 set min_level transferred
+  440 set max_level total_flow_2
+  441 set loop_time_ms total_flow_1
+  442 set last_level remote_wait_time
   443 jump __label65 equal AUTO_ALLOCATION false
   444 set CORR_SIGN "[]([green]+"
   445 set corr_per_min 0
 
   546 label __label89
   547 set LAST_ITEM ITEM
   548 label __label90
-    * set __fn0_itemType ITEM
   549 jump __label93 notEqual ITEM @blast-compound
   550 noop
   551 label __label94
 
   644 label __label123
   645 set __tmp178 null
   646 label __label92
-    * set __tmp177 __tmp178
   647 label __label91
   648 set ITEM_ICON __tmp178
   649 set STATE_LIMIT 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
   434 set transfers 0
   435 set transferred 0
   436 set total_flow_2 0
-    * set total_flow_1 wait_time
-    * set remote_wait_time transfers
-    * set min_level transferred
-    * set max_level total_flow_2
-    * set loop_time_ms total_flow_1
-    * set last_level remote_wait_time
+  437 set total_flow_1 0
+  438 set remote_wait_time 0
+  439 set min_level 0
+  440 set max_level 0
+  441 set loop_time_ms wait_time
+  442 set last_level transfers
   443 jump __label65 equal AUTO_ALLOCATION false
   444 set CORR_SIGN "[]([green]+"
   445 set corr_per_min 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4:
 
   438 set remote_wait_time 0
   439 set min_level 0
   440 set max_level 0
-    * set loop_time_ms wait_time
-    * set last_level transfers
+  441 set loop_time_ms 0
+  442 set last_level 0
   443 jump __label65 equal AUTO_ALLOCATION false
   444 set CORR_SIGN "[]([green]+"
   445 set corr_per_min 0

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
    70 ubind UNIT
    71 label __label4
    72 jump __label6 notEqual @unit null
+   73 label __label219
    74 print "[salmon]No unit of type "
    75 print UNIT
    76 print " found."
    77 printflush message1
    78 ubind UNIT
    79 label __label5
-    * jump __label4 always
+   80 jump __label219 equal @unit null
    81 label __label6
    82 set first_unit @unit
    83 noop
 
    90 set TARGET 0
    91 set repeat true
    92 label __label7
-    * jump __label9 equal repeat false
+   93 label __label220
    94 sensor __tmp26 @unit @controller
    95 jump __label10 notEqual __tmp26 @this
    96 sensor state @unit @flag
 
   112 op land repeat __tmp34 __tmp36
   113 noop
   114 label __label8
-    * jump __label7 always
+  115 jump __label220 notEqual repeat false
   116 label __label9
   117 set CHANGE 0
   118 set active TARGET
 
   129 noop
   130 label __label15
   131 jump __label17 lessThanEq n 0
+  132 label __label221
   133 op sub n n 1
   134 noop
   135 getlink block n
 
   149 noop
   150 label __label18
   151 label __label16
-    * jump __label15 always
+  152 jump __label221 greaterThan n 0
   153 label __label17
   154 jump __label21 notEqual CONTAINER null
   155 print "[salmon]No vault or container."
 
   167 jump __label23 notEqual LINK_ID 0
   168 label __label25
   169 jump __label27 notEqual CORE null
+  170 label __label222
   171 print "[green]Locating core..."
   172 printflush message1
   173 ubind UNIT
 
   182 noop
   183 label __label29
   184 label __label26
-    * jump __label25 always
+  185 jump __label222 equal CORE null
   186 label __label27
   187 set DISCARD_UNIT_MAX_ITEMS UNIT_CAPACITY
   188 noop
 
   195 printflush message1
   196 label __label30
   197 jump __label32 notEqual CORE null
+  198 label __label223
   199 op add QUERY_FLAG 99999900 LINK_ID
   200 noop
   201 set flag QUERY_FLAG
 
   260 label __label40
   261 ucontrol flag S_UNUSED
   262 label __label31
-    * jump __label30 always
+  263 jump __label223 equal CORE null
   264 label __label32
   265 set DISCARD_UNIT_MAX_ITEMS 0
   266 noop
 
   463 ubind UNIT
   464 label __label70
   465 jump __label72 notEqual @unit null
+  466 label __label224
   467 print "No unit of type "
   468 print UNIT
   469 print " found."
   470 printflush message1
   471 ubind UNIT
   472 label __label71
-    * jump __label70 always
+  473 jump __label224 equal @unit null
   474 label __label72
   475 sensor __tmp153 switch1 @enabled
   476 jump __label73 equal __tmp153 false
 
   542 jump __label85 equal ITEM LAST_ITEM
   543 label __label87
   544 jump __label89 notEqual ITEM null
+  545 label __label225
   546 print "[salmon]No item type selected for transport.[]"
   547 printflush message1
   548 sensor ITEM SORTER @config
   549 noop
   550 label __label88
-    * jump __label87 always
+  551 jump __label225 equal ITEM null
   552 label __label89
   553 set LAST_ITEM ITEM
   554 label __label90

Modifications by Loop Optimization: replicate condition at line 171 (+1 instructions):
 
   203 label __label33
   204 sensor __tmp57 @unit @controlled
   205 jump __label35 equal __tmp57 0
+  206 label __label226
   207 ubind UNIT
   208 label __label34
-    * jump __label33 always
+  209 sensor __tmp57 @unit @controlled
+  210 jump __label226 notEqual __tmp57 0
   211 label __label35
   212 ucontrol flag QUERY_FLAG
   213 label __label36

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    88 op div SPEED __tmp24 1000
    89 noop
    90 set TARGET 0
-    * set repeat true
    91 label __label7
    92 label __label220
    93 sensor __tmp26 @unit @controller

Modifications by Loop Optimization: replicate condition at line 175 (+4 instructions):
 
   215 op strictEqual __tmp61 __tmp60 0
   216 op land __tmp62 __tmp59 __tmp61
   217 jump __label38 equal __tmp62 false
+  218 label __label227
   219 ucontrol stop
   220 sensor flag @unit @flag
   221 noop
   222 label __label37
-    * jump __label36 always
+  223 op equal __tmp59 flag QUERY_FLAG
+  224 sensor __tmp60 @unit @dead
+  225 op strictEqual __tmp61 __tmp60 0
+  226 op land __tmp62 __tmp59 __tmp61
+  227 jump __label227 notEqual __tmp62 false
   228 label __label38
   229 jump __label39 equal flag QUERY_FLAG
   230 op idiv position flag 100

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   210 label __label35
   211 ucontrol flag QUERY_FLAG
   212 label __label36
-    * op equal __tmp59 flag QUERY_FLAG
+  213 op equal __tmp59 QUERY_FLAG QUERY_FLAG
   214 sensor __tmp60 @unit @dead
   215 op strictEqual __tmp61 __tmp60 0
   216 op land __tmp62 __tmp59 __tmp61

Modifications by Loop Optimization: replicate condition at line 184 (+5 instructions):
 
   240 op equal __tmp72 __tmp71 false
   241 op land __tmp73 __tmp70 __tmp72
   242 jump __label43 equal __tmp73 false
+  243 label __label228
   244 ucontrol approach CORE_X CORE_Y 6
   245 label __label42
-    * jump __label41 always
+  246 sensor __tmp69 @unit @dead
+  247 op equal __tmp70 __tmp69 0
+  248 ucontrol within CORE_X CORE_Y 8 __tmp71
+  249 op equal __tmp72 __tmp71 false
+  250 op land __tmp73 __tmp70 __tmp72
+  251 jump __label228 notEqual __tmp73 false
   252 label __label43
   253 ucontrol getBlock CORE_X CORE_Y b_type CORE __tmp75
   254 noop

Modifications by Loop Optimization: replicate condition at line 692 (+2 instructions):
 
  1240 sensor __tmp379 SORTER @dead
  1241 op strictEqual __tmp380 __tmp379 0
  1242 jump __label213 notEqual __tmp380 false
+ 1243 label __label229
  1244 print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
  1245 printflush message1
  1246 printflush message2
  1247 set SORTER sorter1
  1248 label __label212
-    * jump __label211 always
+ 1249 sensor __tmp379 SORTER @dead
+ 1250 op strictEqual __tmp380 __tmp379 0
+ 1251 jump __label229 equal __tmp380 false
  1252 label __label213
  1253 sensor __tmp382 SRC @dead
  1254 op strictEqual __tmp383 __tmp382 0

Modifications by Loop Optimization: replicate condition at line 203 (+3 instructions):
 
   285 op notEqual __tmp80 sorter_type @inverted-sorter
   286 op land __tmp81 __tmp79 __tmp80
   287 jump __label48 equal __tmp81 false
+  288 label __label230
   289 print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
   290 print "\n"
   291 jump __label49 equal SORTER null
 
   301 sensor sorter_type SORTER @type
   302 noop
   303 label __label47
-    * jump __label46 always
+  304 op notEqual __tmp79 sorter_type @sorter
+  305 op notEqual __tmp80 sorter_type @inverted-sorter
+  306 op land __tmp81 __tmp79 __tmp80
+  307 jump __label230 notEqual __tmp81 false
   308 label __label48
   309 jump __label51 notEqual sorter_type @sorter
   310 set SHOW_REMOTE_LEVEL true

Modifications by Loop Optimization: replicate condition at line 700 (+3 instructions):
 
  1267 sensor __tmp391 switch2 @enabled
  1268 op or __tmp392 __tmp390 __tmp391
  1269 jump __label218 notEqual __tmp392 false
+ 1270 label __label231
  1271 print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
  1272 printflush message1
  1273 printflush message2
  1274 label __label217
-    * jump __label216 always
+ 1275 sensor __tmp390 switch1 @enabled
+ 1276 sensor __tmp391 switch2 @enabled
+ 1277 op or __tmp392 __tmp390 __tmp391
+ 1278 jump __label231 equal __tmp392 false
  1279 label __label218
  1280 noop
  1281 noop

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   333 set DIRECTION " from vault #"
   334 jump __label54 notEqual LINK_ID 0
   335 set DIRECTION " from core"
-    * jump __label54 always
+  336 noop
   337 label __label54
   338 noop
   339 jump __label52 always
 
   367 set DIRECTION " to vault #"
   368 jump __label56 notEqual LINK_ID 0
   369 set DIRECTION " to core"
-    * jump __label56 always
+  370 noop
   371 label __label56
   372 noop
   373 label __label52
   374 set LINK_TXT LINK_ID
   375 jump __label58 notEqual LINK_ID 0
   376 set LINK_TXT ""
-    * jump __label58 always
+  377 noop
   378 label __label58
   379 op sub __tmp114 src_capacity LOAD_LEVEL
   380 op min LOAD_PACK UNIT_CAPACITY __tmp114
 
   409 sensor __tmp136 CONTAINER @x
   410 jump __label62 greaterThanEq __tmp136 CORE_X
   411 set __tmp138 15
-    * jump __label62 always
+  412 noop
   413 label __label62
   414 op add PARK_X CORE_X __tmp138
   415 noop
 
   417 sensor __tmp140 CONTAINER @y
   418 jump __label64 greaterThanEq __tmp140 CORE_Y
   419 set __tmp142 15
-    * jump __label64 always
+  420 noop
   421 label __label64
   422 op add PARK_Y CORE_Y __tmp142
   423 noop
 
   529 set AUTO_ALLOCATION_TXT ""
   530 jump __label80 notEqual TARGET 0
   531 set AUTO_ALLOCATION_TXT "\n=== [salmon]Transport deactivated[] ==="
-    * jump __label80 always
+  532 noop
   533 label __label80
   534 noop
   535 label __label78

Modifications by Final phase, Jump Straightening, iteration 1 (-4 instructions):
 
   950 set items_in_transit 0
   951 print "Unit status:"
   952 sensor __tmp269 SRC @dead
-    * jump __label155 equal __tmp269 0
-    * jump __label69 always
+  953 jump __label69 notEqual __tmp269 0
+  954 noop
   955 noop
   956 noop
   957 label __label155
   958 noop
   959 label __label156
   960 sensor __tmp272 DST @dead
-    * jump __label157 equal __tmp272 0
-    * jump __label69 always
+  961 jump __label69 notEqual __tmp272 0
+  962 noop
   963 noop
   964 noop
   965 label __label157
   966 noop
   967 label __label158
   968 sensor __tmp275 SORTER @dead
-    * jump __label159 equal __tmp275 0
-    * jump __label69 always
+  969 jump __label69 notEqual __tmp275 0
+  970 noop
   971 noop
   972 noop
   973 label __label159
   974 noop
   975 label __label160
   976 getlink __tmp278 CONTAINER_INDEX
-    * jump __label161 equal CONTAINER __tmp278
-    * jump __label69 always
+  977 jump __label69 notEqual CONTAINER __tmp278
+  978 noop
   979 noop
   980 noop
   981 label __label161

Modifications by Final phase, Jump Threading, iteration 1:
 
   150 label __label16
   151 jump __label221 greaterThan n 0
   152 label __label17
-    * jump __label21 notEqual CONTAINER null
+  153 jump __label14 notEqual CONTAINER null
   154 print "[salmon]No vault or container."
   155 printflush message1
   156 noop
-    * jump __label22 always
+  157 jump __label12 always
   158 label __label21
   159 jump __label14 always
   160 noop
 
   331 set SRC_REMOTE_WAIT 1
   332 set DST_REMOTE_WAIT 0
   333 set DIRECTION " from vault #"
-    * jump __label54 notEqual LINK_ID 0
+  334 jump __label52 notEqual LINK_ID 0
   335 set DIRECTION " from core"
   336 noop
   337 label __label54
 
  1003 noop
  1004 label __label164
  1005 sensor __tmp287 @unit @controller
-    * jump __label167 notEqual __tmp287 @this
+ 1006 jump __label67 notEqual __tmp287 @this
  1007 sensor state @unit @flag
  1008 noop
-    * jump __label169 equal state S_UNUSED
+ 1009 jump __label67 equal state S_UNUSED
  1010 op max __tmp293 state 1
  1011 op min state __tmp293 STATE_LIMIT
  1012 noop
 
  1200 print "[]\nParking: [green]"
  1201 ucontrol approach DROP_X DROP_Y 6
  1202 ucontrol within DROP_X DROP_Y 8 __tmp373
-    * jump __label207 equal __tmp373 false
+ 1203 jump __label206 equal __tmp373 false
  1204 ucontrol itemDrop DROP_TARGET UNIT_CAPACITY
  1205 sensor items @unit @totalItems
  1206 noop
-    * jump __label209 greaterThan items PARK_ITEM_LIMIT
+ 1207 jump __label206 greaterThan items PARK_ITEM_LIMIT
  1208 ucontrol move PARK_X PARK_Y
  1209 set state S_UNUSED
  1210 noop

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-2 instructions):
 
   155 printflush message1
   156 noop
   157 jump __label12 always
-    * label __label21
-    * jump __label14 always
-    * noop
-    * label __label22
-    * label __label13
-    * jump __label12 always
   158 label __label14
   159 set CORE null
   160 jump __label23 notEqual LINK_ID 0

Modifications by Final phase, Print Merging, iteration 1 (-1 instructions):
 
   910 jump __label153 equal AUTO_ALLOCATION false
   911 print "\nUnit throughput: [green]"
   912 print items_per_min_unit
-    * print "[]/min"
-    * print "\nMin/last round: [green]"
+  913 print "[]/min\nMin/last round: [green]"
   914 print turnaround_str
   915 print "[]/[green]"
   916 print elapsed_str

Final code before resolving virtual instructions:

set UNIT @mega
set LINK_ID 0
set AUTO_ALLOCATION true
set MAX_UNITS 24
set HOUSEKEEPING true
set LOCAL_LIMIT 100
set REMOTE_LIMIT 100
set OVERALLOCATION_LOW 0.25
set OVERALLOCATION_HIGH 0.75
set STABILIZATION false
set MESSAGE ""
jump __label0 equal cell1 null
read __tmp2 cell1 0
jump __label2 notEqual __tmp2 2
read LINK_ID cell1 1
read AUTO_ALLOCATION cell1 2
read MAX_UNITS cell1 3
read HOUSEKEEPING cell1 4
read LOCAL_LIMIT cell1 5
read REMOTE_LIMIT cell1 6
read OVERALLOCATION_LOW cell1 7
read OVERALLOCATION_HIGH cell1 8
read STABILIZATION cell1 9
set MESSAGE "[green]Settings restored from memory.[]\n"
jump __label3 always 0 0
label __label2
write 2 cell1 0
write LINK_ID cell1 1
write AUTO_ALLOCATION cell1 2
write MAX_UNITS cell1 3
write HOUSEKEEPING cell1 4
write LOCAL_LIMIT cell1 5
write REMOTE_LIMIT cell1 6
write OVERALLOCATION_LOW cell1 7
write OVERALLOCATION_HIGH cell1 8
write STABILIZATION cell1 9
set MESSAGE "[green]Settings saved to memory.[]\n"
label __label3
label __label0
op max LOCAL_LIMIT LOCAL_LIMIT 20
op max REMOTE_LIMIT REMOTE_LIMIT 20
set TRIGGER_LEVEL 0.9
op mul S_UNUSED -1 HOUSEKEEPING
set LOOPS 1
op div LOOPS_TICKS_TO_MS LOOPS 0.06
set INC_OVERALLOCATION OVERALLOCATION_LOW
op add DEC_OVERALLOCATION 1 OVERALLOCATION_HIGH
set TRIGGER_BOOST 2
set INC_MAX 6
set DEC_MAX -1
ubind UNIT
jump __label6 notEqual @unit null
label __label219
print "[salmon]No unit of type "
print UNIT
print " found."
printflush message1
ubind UNIT
jump __label219 equal @unit null
label __label6
set first_unit @unit
sensor __tmp22 @unit @speed
op div SPEED_SEC __tmp22 10
sensor __tmp24 @unit @speed
op div SPEED __tmp24 1000
set TARGET 0
label __label220
sensor __tmp26 @unit @controller
jump __label10 notEqual __tmp26 @this
sensor state @unit @flag
op greaterThanEq __tmp30 state 1
op lessThan __tmp31 state 6
op land __tmp32 __tmp30 __tmp31
op add TARGET TARGET __tmp32
label __label10
ubind UNIT
op notEqual __tmp34 @unit first_unit
sensor __tmp35 first_unit @dead
op strictEqual __tmp36 __tmp35 0
op land repeat __tmp34 __tmp36
jump __label220 notEqual repeat false
set CHANGE 0
set active TARGET
set DEC_LIMIT 0
set INC_LIMIT 0
sensor UNIT_CAPACITY @unit @itemCapacity
set first_unit null
label __label12
set CONTAINER null
set DROP_TARGET null
set n @links
jump __label17 lessThanEq n 0
label __label221
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label20 equal __ast0 @vault
jump __label19 notEqual __ast0 @container
label __label20
set DROP_TARGET CONTAINER
set CONTAINER block
set CONTAINER_INDEX n
label __label19
jump __label221 greaterThan n 0
label __label17
jump __label14 notEqual CONTAINER null
print "[salmon]No vault or container."
printflush message1
jump __label12 always 0 0
label __label14
set CORE null
jump __label23 notEqual LINK_ID 0
jump __label27 notEqual CORE null
label __label222
print "[green]Locating core..."
printflush message1
ubind UNIT
sensor __tmp50 @unit @controlled
jump __label28 notEqual __tmp50 0
ulocate building core false @copper CORE_X CORE_Y __tmp54 CORE
ucontrol flag S_UNUSED 0 0 0 0
label __label28
jump __label222 equal CORE null
label __label27
set DISCARD_UNIT_MAX_ITEMS UNIT_CAPACITY
jump __label24 always 0 0
label __label23
printflush message2
print "[green]Locating vault #"
print LINK_ID
print "..."
printflush message1
jump __label32 notEqual CORE null
label __label223
op add QUERY_FLAG 99999900 LINK_ID
set flag QUERY_FLAG
ubind UNIT
sensor __tmp57 @unit @controlled
jump __label35 equal __tmp57 0
label __label226
ubind UNIT
sensor __tmp57 @unit @controlled
jump __label226 notEqual __tmp57 0
label __label35
ucontrol flag QUERY_FLAG 0 0 0 0
op equal __tmp59 QUERY_FLAG QUERY_FLAG
sensor __tmp60 @unit @dead
op strictEqual __tmp61 __tmp60 0
op land __tmp62 __tmp59 __tmp61
jump __label38 equal __tmp62 false
label __label227
ucontrol stop 0 0 0 0 0
sensor flag @unit @flag
op equal __tmp59 flag QUERY_FLAG
sensor __tmp60 @unit @dead
op strictEqual __tmp61 __tmp60 0
op land __tmp62 __tmp59 __tmp61
jump __label227 notEqual __tmp62 false
label __label38
jump __label39 equal flag QUERY_FLAG
op idiv position flag 100
op mod CORE_X position @mapw
op idiv CORE_Y position @mapw
sensor __tmp69 @unit @dead
op equal __tmp70 __tmp69 0
ucontrol within CORE_X CORE_Y 8 __tmp71 0
op equal __tmp72 __tmp71 false
op land __tmp73 __tmp70 __tmp72
jump __label43 equal __tmp73 false
label __label228
ucontrol approach CORE_X CORE_Y 6 0 0
sensor __tmp69 @unit @dead
op equal __tmp70 __tmp69 0
ucontrol within CORE_X CORE_Y 8 __tmp71 0
op equal __tmp72 __tmp71 false
op land __tmp73 __tmp70 __tmp72
jump __label228 notEqual __tmp73 false
label __label43
ucontrol getBlock CORE_X CORE_Y b_type CORE __tmp75
jump __label44 equal b_type @vault
print "[salmon]Building at "
print CORE_X
print ", "
print CORE_Y
print " is not a vault!"
printflush message2
set CORE null
label __label44
label __label39
ucontrol flag S_UNUSED 0 0 0 0
jump __label223 equal CORE null
label __label32
set DISCARD_UNIT_MAX_ITEMS 0
label __label24
set SORTER sorter1
sensor sorter_type SORTER @type
op notEqual __tmp79 sorter_type @sorter
op notEqual __tmp80 sorter_type @inverted-sorter
op land __tmp81 __tmp79 __tmp80
jump __label48 equal __tmp81 false
label __label230
print "[salmon]Block sorter1 is neither a sorter, nor an inverted sorter."
print "\n"
jump __label49 equal SORTER null
print "Block found: "
print SORTER
label __label49
printflush message1
set SORTER sorter1
sensor sorter_type SORTER @type
op notEqual __tmp79 sorter_type @sorter
op notEqual __tmp80 sorter_type @inverted-sorter
op land __tmp81 __tmp79 __tmp80
jump __label230 notEqual __tmp81 false
label __label48
jump __label51 notEqual sorter_type @sorter
set SHOW_REMOTE_LEVEL true
set SRC CORE
set DST CONTAINER
sensor src_capacity SRC @itemCapacity
sensor dst_capacity DST @itemCapacity
op sub __tmp89 100 REMOTE_LIMIT
op mul __tmp90 src_capacity __tmp89
op idiv LOAD_LEVEL __tmp90 100
op mul __tmp92 dst_capacity LOCAL_LIMIT
op idiv DROP_LEVEL __tmp92 100
set LOCAL_MARGIN DROP_LEVEL
set REMOTE_MARGIN LOAD_LEVEL
op sub __tmp94 1 TRIGGER_LEVEL
op mul LOW_LEVEL_TRIGGER dst_capacity __tmp94
set HIGH_LEVEL_TRIGGER dst_capacity
set FLOW_CORR_SIGN 1
set SRC_REMOTE_WAIT 1
set DST_REMOTE_WAIT 0
set DIRECTION " from vault #"
jump __label52 notEqual LINK_ID 0
set DIRECTION " from core"
jump __label52 always 0 0
label __label51
op greaterThan SHOW_REMOTE_LEVEL LINK_ID 0
set SRC CONTAINER
set DST CORE
sensor src_capacity SRC @itemCapacity
sensor dst_capacity DST @itemCapacity
op sub __tmp101 100 LOCAL_LIMIT
op mul __tmp102 src_capacity __tmp101
op idiv LOAD_LEVEL __tmp102 100
op mul __tmp104 dst_capacity REMOTE_LIMIT
op idiv __tmp105 __tmp104 100
op equal __tmp106 LINK_ID 0
op mul __tmp107 __tmp106 UNIT_CAPACITY
op add DROP_LEVEL __tmp105 __tmp107
set LOCAL_MARGIN LOAD_LEVEL
set REMOTE_MARGIN DROP_LEVEL
op mul HIGH_LEVEL_TRIGGER src_capacity TRIGGER_LEVEL
set LOW_LEVEL_TRIGGER 0
set FLOW_CORR_SIGN -1
set SRC_REMOTE_WAIT 0
set DST_REMOTE_WAIT 1
set DIRECTION " to vault #"
jump __label56 notEqual LINK_ID 0
set DIRECTION " to core"
label __label56
label __label52
set LINK_TXT LINK_ID
jump __label58 notEqual LINK_ID 0
set LINK_TXT ""
label __label58
op sub __tmp114 src_capacity LOAD_LEVEL
op min LOAD_PACK UNIT_CAPACITY __tmp114
op min DROP_PACK UNIT_CAPACITY DROP_LEVEL
sensor SRC_X SRC @x
sensor SRC_Y SRC @y
sensor DST_X DST @x
sensor DST_Y DST @y
op sub __tmp121 DST_X SRC_X
op sub __tmp122 DST_Y SRC_Y
op len __tmp123 __tmp121 __tmp122
op sub __tmp124 __tmp123 6
op sub DISTANCE __tmp123 14
op max __tmp126 DISTANCE 10
op mul __tmp127 2 __tmp126
op div TRAVEL_TIME __tmp127 SPEED
op div DISTANCE __tmp124 100
jump __label59 notEqual DROP_TARGET null
set DROP_TARGET CORE
set DROP_X CORE_X
set DROP_Y CORE_Y
set __tmp138 -15
sensor __tmp136 CONTAINER @x
jump __label62 greaterThanEq __tmp136 CORE_X
set __tmp138 15
label __label62
op add PARK_X CORE_X __tmp138
set __tmp142 -15
sensor __tmp140 CONTAINER @y
jump __label64 greaterThanEq __tmp140 CORE_Y
set __tmp142 15
label __label64
op add PARK_Y CORE_Y __tmp142
op equal __tmp144 LINK_ID 0
op mul PARK_ITEM_LIMIT __tmp144 UNIT_CAPACITY
jump __label60 always 0 0
label __label59
sensor DROP_X DROP_TARGET @x
sensor DROP_Y DROP_TARGET @y
set PARK_X DROP_X
set PARK_Y DROP_Y
set PARK_ITEM_LIMIT 0
label __label60
set TRANSFER_START @tick
op sub LOOP_START @tick 60
set LAST_ITEM @mono
op add MESSAGE_TIMEOUT @tick 600
set WAIT_LIMIT 30000
set items_in_transit 0
set items_per_min_unit "--"
set items_per_min "-- "
set turnaround_str "--"
set elapsed_str "--"
set wait_time_str 0
set wait_time 0
set transfers 0
set transferred 0
set total_flow_2 0
set total_flow_1 0
set remote_wait_time 0
set min_level 0
set max_level 0
set loop_time_ms 0
set last_level 0
jump __label65 equal AUTO_ALLOCATION false
set CORR_SIGN "[]([green]+"
set corr_per_min 0
set SPEED_UNIT_TXT "[])/min"
set AUTO_ALLOCATION_TXT "\n=== [gold]Gathering statistics[] ==="
jump __label66 always 0 0
label __label65
set CORR_SIGN "[]"
set corr_per_min ""
set SPEED_UNIT_TXT "/min"
set AUTO_ALLOCATION_TXT ""
label __label66
label __label67
ubind UNIT
jump __label72 notEqual @unit null
label __label224
print "No unit of type "
print UNIT
print " found."
printflush message1
ubind UNIT
jump __label224 equal @unit null
label __label72
sensor __tmp153 switch1 @enabled
jump __label73 equal __tmp153 false
control enabled switch1 false 0 0 0
set AUTO_ALLOCATION false
set AUTO_ALLOCATION_TXT ""
op add __tmp155 TARGET 1
op min TARGET __tmp155 MAX_UNITS
set CORR_SIGN "[]"
set corr_per_min ""
set SPEED_UNIT_TXT "/min"
set WAIT_LIMIT 30000
label __label73
sensor __tmp157 switch2 @enabled
jump __label75 equal __tmp157 false
control enabled switch2 false 0 0 0
jump __label77 greaterThanEq TARGET 1
set AUTO_ALLOCATION true
set TARGET 1
set DEC_LIMIT 0
set INC_LIMIT 0
set CORR_SIGN "[]([green]+"
set corr_per_min 0
set SPEED_UNIT_TXT "[])/min"
jump __label78 always 0 0
label __label77
set AUTO_ALLOCATION false
op sub __tmp161 TARGET 1
op max TARGET __tmp161 0
set CORR_SIGN "[]"
set corr_per_min ""
set SPEED_UNIT_TXT "/min"
set AUTO_ALLOCATION_TXT ""
jump __label80 notEqual TARGET 0
set AUTO_ALLOCATION_TXT "\n=== [salmon]Transport deactivated[] ==="
label __label80
label __label78
set WAIT_LIMIT 30000
label __label75
sensor __tmp165 first_unit @dead
op strictEqual alive __tmp165 0
op strictEqual __tmp167 @unit first_unit
jump __label81 greaterThan alive __tmp167
jump __label83 notEqual active 0
print "\n[salmon]No active units.[]"
label __label83
printflush message2
set STATE_LIMIT 6
sensor ITEM SORTER @config
jump __label85 equal ITEM LAST_ITEM
jump __label89 notEqual ITEM null
label __label225
print "[salmon]No item type selected for transport.[]"
printflush message1
sensor ITEM SORTER @config
jump __label225 equal ITEM null
label __label89
set LAST_ITEM ITEM
jump __label93 notEqual ITEM @blast-compound
set __tmp178 "[]"
jump __label92 always 0 0
label __label93
jump __label95 notEqual ITEM @coal
set __tmp178 "[]"
jump __label92 always 0 0
label __label95
jump __label97 notEqual ITEM @copper
set __tmp178 "[]"
jump __label92 always 0 0
label __label97
jump __label99 notEqual ITEM @graphite
set __tmp178 "[]"
jump __label92 always 0 0
label __label99
jump __label101 notEqual ITEM @lead
set __tmp178 "[]"
jump __label92 always 0 0
label __label101
jump __label103 notEqual ITEM @metaglass
set __tmp178 "[]"
jump __label92 always 0 0
label __label103
jump __label105 notEqual ITEM @phase-fabric
set __tmp178 "[]"
jump __label92 always 0 0
label __label105
jump __label107 notEqual ITEM @plastanium
set __tmp178 "[]"
jump __label92 always 0 0
label __label107
jump __label109 notEqual ITEM @pyratite
set __tmp178 "[]"
jump __label92 always 0 0
label __label109
jump __label111 notEqual ITEM @sand
set __tmp178 "[]"
jump __label92 always 0 0
label __label111
jump __label113 notEqual ITEM @scrap
set __tmp178 "[]"
jump __label92 always 0 0
label __label113
jump __label115 notEqual ITEM @silicon
set __tmp178 "[]"
jump __label92 always 0 0
label __label115
jump __label117 notEqual ITEM @spore-pod
set __tmp178 "[]"
jump __label92 always 0 0
label __label117
jump __label119 notEqual ITEM @surge-alloy
set __tmp178 "[]"
jump __label92 always 0 0
label __label119
jump __label121 notEqual ITEM @thorium
set __tmp178 "[]"
jump __label92 always 0 0
label __label121
jump __label123 notEqual ITEM @titanium
set __tmp178 "[]"
jump __label92 always 0 0
label __label123
set __tmp178 null
label __label92
set ITEM_ICON __tmp178
set STATE_LIMIT 1
sensor last_level CONTAINER ITEM
set min_level 999999
set max_level 0
label __label85
sensor container_items CONTAINER ITEM
op min min_level min_level container_items
op max max_level max_level container_items
op sub loop_time @tick LOOP_START
set LOOP_START @tick
op mul __tmp185 loop_time 100
op idiv loop_time_ms __tmp185 6
op greaterThanEq __tmp187 transfers active
op greaterThan __tmp188 wait_time WAIT_LIMIT
op or __tmp189 __tmp187 __tmp188
jump __label125 equal __tmp189 false
op div __tmp191 wait_time 100
op ceil __tmp192 __tmp191 0
op div wait_time_str __tmp192 10
op sub elapsed_ticks @tick TRANSFER_START
set TRANSFER_START @tick
op div elapsed_ms elapsed_ticks 0.06
op idiv __tmp197 elapsed_ms 100
op div elapsed_str __tmp197 10
op div items_per_ms transferred elapsed_ms
op idiv items_per_min items_per_ms 0.000016666666666666667
set transferred 0
set transfers 0
jump __label127 equal AUTO_ALLOCATION false
set AUTO_ALLOCATION_TXT "\n=== [gold]Unit auto allocation[] ==="
op mul __tmp202 LOOPS_TICKS_TO_MS loop_time
op add turnaround_ms TRAVEL_TIME __tmp202
op mul WAIT_LIMIT turnaround_ms DEC_OVERALLOCATION
op idiv __tmp205 turnaround_ms 100
op div turnaround_str __tmp205 10
op div items_per_ms_unit UNIT_CAPACITY turnaround_ms
op idiv items_per_min_unit items_per_ms_unit 0.000016666666666666667
op add __tmp210 min_level max_level
op div this_level __tmp210 2
op sub __tmp212 last_level this_level
op mul corr __tmp212 FLOW_CORR_SIGN
op div corr_per_ms corr elapsed_ms
set last_level this_level
op add total_flow_per_ms items_per_ms corr_per_ms
op idiv corr_per_min corr_per_ms 0.000016666666666666667
set CORR_SIGN "[]([green]"
jump __label129 lessThan corr_per_min 0
set CORR_SIGN "[]([green]+"
label __label129
set SPEED_UNIT_TXT "[])/min"
jump __label131 equal alive false
op lessThan __tmp221 min_level LOW_LEVEL_TRIGGER
op greaterThan __tmp222 max_level HIGH_LEVEL_TRIGGER
op or trigger __tmp221 __tmp222
op equal __tmp224 wait_time 0
op greaterThan __tmp225 trigger remote_wait_time
op or __tmp226 __tmp224 __tmp225
jump __label133 equal __tmp226 false
jump __label135 equal STABILIZATION false
set total_flow_3 total_flow_2
set total_flow_2 total_flow_1
set total_flow_1 total_flow_per_ms
op add __tmp229 total_flow_3 total_flow_2
op add __tmp230 __tmp229 total_flow_per_ms
op div total_flow_per_ms __tmp230 3
label __label135
op div __tmp232 total_flow_per_ms items_per_ms_unit
op add __tmp233 __tmp232 INC_OVERALLOCATION
op ceil new_target __tmp233 0
op mul level_boost TRIGGER_BOOST trigger
op add __tmp236 new_target level_boost
op min new_target __tmp236 MAX_UNITS
op sub __tmp238 new_target active
op max __tmp239 __tmp238 0
op min new_change __tmp239 INC_LIMIT
set INC_LIMIT INC_MAX
op lessThanEq __tmp241 new_change 0
op mul DEC_LIMIT __tmp241 DEC_MAX
jump __label134 always 0 0
label __label133
op idiv __tmp243 wait_time WAIT_LIMIT
op mul __tmp244 -1 __tmp243
op max new_change __tmp244 DEC_LIMIT
op greaterThanEq __tmp246 new_change 0
op mul INC_LIMIT __tmp246 INC_MAX
set DEC_LIMIT DEC_MAX
label __label134
op add __tmp248 active new_change
op max TARGET __tmp248 1
jump __label132 always 0 0
label __label131
set INC_LIMIT 0
set DEC_LIMIT 0
label __label132
set min_level 999999
set max_level 0
label __label127
set wait_time 0
set remote_wait_time 0
jump __label137 lessThan @tick MESSAGE_TIMEOUT
set MESSAGE ""
label __label137
label __label125
print MESSAGE
print "Moving [green]"
print ITEM
print "[]"
print DIRECTION
print LINK_TXT
print AUTO_ALLOCATION_TXT
jump __label139 lessThanEq TARGET 0
jump __label141 lessThan active TARGET
print "\nUsing [green]"
print active
print "/"
print TARGET
print "[] units ("
print UNIT
print ") [gold]+"
print items_in_transit
jump __label142 always 0 0
label __label141
print "\nUsing [salmon]"
print active
print "/"
print TARGET
print "[] units ("
print UNIT
print ") [gold]+"
print items_in_transit
label __label142
jump __label143 lessThanEq CHANGE 0
print "\n[][salmon]Cannot acquire additional units![]"
label __label143
label __label139
print "\n[]Local items: [gold]"
print container_items
jump __label145 greaterThanEq LOCAL_LIMIT 100
print "[] (limit [orange]"
print LOCAL_MARGIN
print "[])"
label __label145
jump __label147 equal SHOW_REMOTE_LEVEL false
sensor remote_level CORE ITEM
print "\n[]Remote items: [gold]"
print remote_level
jump __label149 greaterThanEq REMOTE_LIMIT 100
print "[] (limit [orange]"
print REMOTE_MARGIN
print "[])"
label __label149
label __label147
jump __label151 lessThanEq TARGET 0
print "\n[]Speed: [green]"
print items_per_min
print CORR_SIGN
print corr_per_min
print SPEED_UNIT_TXT
jump __label153 equal AUTO_ALLOCATION false
print "\nUnit throughput: [green]"
print items_per_min_unit
print "[]/min\nMin/last round: [green]"
print turnaround_str
print "[]/[green]"
print elapsed_str
print "[] s"
jump __label154 always 0 0
label __label153
print "\nLast round: [green]"
print elapsed_str
print "[] s"
label __label154
print "\nTotal wait time: [green]"
print wait_time_str
print "[] s"
label __label151
print "\n[lightgray]Loop: "
print loop_time_ms
print " ms"
printflush message1
op sub CHANGE TARGET active
set active 0
set first_unit @unit
set items_in_transit 0
print "Unit status:"
sensor __tmp269 SRC @dead
jump __label69 notEqual __tmp269 0
sensor __tmp272 DST @dead
jump __label69 notEqual __tmp272 0
sensor __tmp275 SORTER @dead
jump __label69 notEqual __tmp275 0
getlink __tmp278 CONTAINER_INDEX
jump __label69 notEqual CONTAINER __tmp278
label __label81
jump __label163 lessThanEq CHANGE 0
sensor __tmp283 @unit @controlled
jump __label165 notEqual __tmp283 0
op sub CHANGE CHANGE 1
ucontrol flag 1 0 0 0 0
label __label165
label __label163
sensor __tmp287 @unit @controller
jump __label67 notEqual __tmp287 @this
sensor state @unit @flag
jump __label67 equal state S_UNUSED
op max __tmp293 state 1
op min state __tmp293 STATE_LIMIT
jump __label171 greaterThanEq CHANGE 0
jump __label173 equal state 6
sensor __tmp299 @unit @totalItems
jump __label175 greaterThan __tmp299 DISCARD_UNIT_MAX_ITEMS
op add CHANGE CHANGE 1
set state 6
label __label175
label __label173
label __label171
jump __label177 notEqual state 1
sensor __tmp305 @unit @totalItems
jump __label179 notEqual __tmp305 0
set state 2
jump __label180 always 0 0
label __label179
sensor __tmp308 @unit @firstItem
jump __label181 notEqual __tmp308 ITEM
set state 4
jump __label182 always 0 0
label __label181
ucontrol approach DROP_X DROP_Y 6 0 0
ucontrol within DROP_X DROP_Y 8 __tmp311 0
jump __label183 equal __tmp311 false
ucontrol itemDrop DROP_TARGET UNIT_CAPACITY 0 0 0
label __label183
print "[]\nUnloading previous items: [green]"
label __label182
label __label180
label __label177
jump __label185 notEqual state 2
ucontrol approach SRC_X SRC_Y 6 0 0
ucontrol within SRC_X SRC_Y 8 __tmp315 0
jump __label187 equal __tmp315 false
set state 3
jump __label188 always 0 0
label __label187
sensor __tmp317 @unit @x
op sub __tmp318 SRC_X __tmp317
sensor __tmp319 @unit @y
op sub __tmp320 SRC_Y __tmp319
op len __tmp321 __tmp318 __tmp320
op idiv __tmp322 __tmp321 SPEED_SEC
op div __tmp323 __tmp322 10
print "[]\n[gold]"
print __tmp323
print " sec[] to source: [green]"
label __label188
label __label185
jump __label189 notEqual state 3
sensor __tmp326 SRC ITEM
op sub max_load __tmp326 LOAD_LEVEL
jump __label191 lessThan max_load LOAD_PACK
ucontrol itemTake SRC ITEM max_load 0 0
label __label191
sensor __tmp330 @unit @totalItems
jump __label193 lessThan __tmp330 UNIT_CAPACITY
set state 4
jump __label194 always 0 0
label __label193
print "[]\nWaiting at source: [green]"
ucontrol approach SRC_X SRC_Y 6 0 0
op add wait_time wait_time loop_time_ms
op mul __tmp334 loop_time_ms SRC_REMOTE_WAIT
op add remote_wait_time remote_wait_time __tmp334
label __label194
label __label189
jump __label195 notEqual state 4
ucontrol approach DST_X DST_Y 6 0 0
ucontrol within DST_X DST_Y 8 __tmp338 0
jump __label197 equal __tmp338 false
sensor __tmp340 @unit @totalItems
op add transferred transferred __tmp340
op add transfers transfers 1
set state 5
jump __label198 always 0 0
label __label197
sensor __tmp343 @unit @x
op sub __tmp344 DST_X __tmp343
sensor __tmp345 @unit @y
op sub __tmp346 DST_Y __tmp345
op len __tmp347 __tmp344 __tmp346
op idiv __tmp348 __tmp347 SPEED_SEC
op div __tmp349 __tmp348 10
print "[]\n[gold]"
print __tmp349
print " sec[] to destination: [green]"
label __label198
label __label195
jump __label199 notEqual state 5
sensor __tmp352 DST ITEM
op sub max_drop DROP_LEVEL __tmp352
jump __label201 lessThan max_drop DROP_PACK
ucontrol itemDrop DST max_drop 0 0 0
label __label201
sensor __tmp356 @unit @totalItems
jump __label203 greaterThan __tmp356 0
set state 2
ucontrol approach SRC_X SRC_Y 6 0 0
sensor __tmp359 @unit @x
op sub __tmp360 SRC_X __tmp359
sensor __tmp361 @unit @y
op sub __tmp362 SRC_Y __tmp361
op len __tmp363 __tmp360 __tmp362
op idiv __tmp364 __tmp363 SPEED_SEC
op div __tmp365 __tmp364 10
print "[]\n[gold]"
print __tmp365
print " sec[] to source: [green]"
jump __label204 always 0 0
label __label203
print "[]\nWaiting at destination: [green]"
ucontrol approach DST_X DST_Y 6 0 0
op add wait_time wait_time loop_time_ms
op mul __tmp367 loop_time_ms DST_REMOTE_WAIT
op add remote_wait_time remote_wait_time __tmp367
label __label204
label __label199
sensor items @unit @totalItems
op add items_in_transit items_in_transit items
jump __label205 notEqual state 6
print "[]\nParking: [green]"
ucontrol approach DROP_X DROP_Y 6 0 0
ucontrol within DROP_X DROP_Y 8 __tmp373 0
jump __label206 equal __tmp373 false
ucontrol itemDrop DROP_TARGET UNIT_CAPACITY 0 0 0
sensor items @unit @totalItems
jump __label206 greaterThan items PARK_ITEM_LIMIT
ucontrol move PARK_X PARK_Y 0 0 0
set state S_UNUSED
jump __label206 always 0 0
label __label205
op add active active 1
label __label206
print items
print ITEM_ICON
ucontrol flag state 0 0 0 0
jump __label67 always 0 0
label __label69
sensor __tmp379 SORTER @dead
op strictEqual __tmp380 __tmp379 0
jump __label213 notEqual __tmp380 false
label __label229
print "[salmon]sorter1 is missing![]\nPlease place and link sorter or inverted sorter to the processor."
printflush message1
printflush message2
set SORTER sorter1
sensor __tmp379 SORTER @dead
op strictEqual __tmp380 __tmp379 0
jump __label229 equal __tmp380 false
label __label213
sensor __tmp382 SRC @dead
op strictEqual __tmp383 __tmp382 0
op equal __tmp384 __tmp383 false
sensor __tmp385 DST @dead
op strictEqual __tmp386 __tmp385 0
op equal __tmp387 __tmp386 false
op or __tmp388 __tmp384 __tmp387
jump __label214 equal __tmp388 false
sensor __tmp390 switch1 @enabled
sensor __tmp391 switch2 @enabled
op or __tmp392 __tmp390 __tmp391
jump __label218 notEqual __tmp392 false
label __label231
print "[salmon]Local or remote container became invalid.\nPlease fix and press any button to reinitialize."
printflush message1
printflush message2
sensor __tmp390 switch1 @enabled
sensor __tmp391 switch2 @enabled
op or __tmp392 __tmp390 __tmp391
jump __label231 equal __tmp392 false
label __label218
label __label214
control enabled switch1 false 0 0 0
control enabled switch2 false 0 0 0
end
