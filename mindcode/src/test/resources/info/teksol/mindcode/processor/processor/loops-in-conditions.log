    35 instructions before optimizations.
     2 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Jump Normalization (4 iterations).
     1 instructions eliminated by Jump Optimization (4 iterations).
     3 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
    38 instructions eliminated by Data Flow Optimization (3 passes, 12 iterations).
     2 instructions eliminated by Loop Optimization (3 iterations).
     2 loops improved by Loop Optimization.
    18 instructions added by Loop Unrolling (5 iterations).
     2 loops unrolled by Loop Unrolling.
     5 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 979):
  * Loop Unrolling: unroll loop at line 3                        cost   4, benefit      200.0, efficiency       50.0 (-5 instructions)
    Loop Unrolling: unroll loop at line 3                        cost   8, benefit      400.0, efficiency       50.0

Pass 1: speed optimization selection (cost limit 984):
  * Loop Unrolling: unroll loop at line 3                        cost   8, benefit      400.0, efficiency       50.0 (-7 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-2 instructions):
 
     4 set __fn0_i 0
     5 label __label2
     6 jump __label4 greaterThanEq __fn0_i __tmp1
-    * op add __tmp2 __fn0_c __fn0_i
-    * set __fn0_c __tmp2
+    7 op add __fn0_c __fn0_c __fn0_i
+    8 noop
     9 label __label3
    10 op add __fn0_i __fn0_i 1
    11 jump __label2 always
 
    22 set __fn1_i 0
    23 label __label7
    24 jump __label9 greaterThanEq __fn1_i __tmp4
-    * op add __tmp5 __fn1_c __fn1_i
-    * set __fn1_c __tmp5
+   25 op add __fn1_c __fn1_c __fn1_i
+   26 noop
    27 label __label8
    28 op add __fn1_i __fn1_i 1
    29 jump __label7 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
    33 jump __label6 always
    34 set __tmp3 null
    35 label __label6
-    * op lessThan __tmp6 __tmp0 __tmp3
-    * jump __label10 equal __tmp6 false
+   36 jump __label10 greaterThanEq __tmp0 __tmp3
    37 print "Less"
    38 set __tmp7 0
    39 jump __label11 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
+    0 set result 1
     1 label __label0
     2 set __fn0_n 4
     3 set __fn0_c 0
 
    34 jump __label6 always
    35 set __tmp3 null
    36 label __label6
-    * jump __label10 greaterThanEq __tmp0 __tmp3
+   37 jump __label11 greaterThanEq __tmp0 __tmp3
    38 print "Less"
-    * set __tmp7 0
+   39 set result 0
    40 jump __label11 always
-    * label __label10
-    * set __tmp7 1
    41 label __label11
-    * set result __tmp7
    42 print result
    43 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
     1 label __label0
     2 set __fn0_n 4
     3 set __fn0_c 0
-    * set __tmp1 __fn0_n
+    4 set __tmp1 4
     5 set __fn0_i 0
     6 label __label2
-    * jump __label4 greaterThanEq __fn0_i __tmp1
+    7 jump __label4 greaterThanEq __fn0_i __fn0_n
     8 op add __fn0_c __fn0_c __fn0_i
     9 noop
    10 label __label3
 
    14 print __fn0_c
    15 set __tmp0 __fn0_c
    16 jump __label1 always
-    * set __tmp0 null
    17 label __label1
    18 label __label5
    19 set __fn1_n 8
    20 set __fn1_c 0
-    * set __tmp4 __fn1_n
+   21 set __tmp4 8
    22 set __fn1_i 0
    23 label __label7
-    * jump __label9 greaterThanEq __fn1_i __tmp4
+   24 jump __label9 greaterThanEq __fn1_i __fn1_n
    25 op add __fn1_c __fn1_c __fn1_i
    26 noop
    27 label __label8
 
    31 print __fn1_c
    32 set __tmp3 __fn1_c
    33 jump __label6 always
-    * set __tmp3 null
    34 label __label6
-    * jump __label11 greaterThanEq __tmp0 __tmp3
+   35 jump __label11 greaterThanEq __fn0_c __fn1_c
    36 print "Less"
    37 set result 0
    38 jump __label11 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
     1 label __label0
     2 set __fn0_n 4
     3 set __fn0_c 0
-    * set __tmp1 4
     4 set __fn0_i 0
     5 label __label2
-    * jump __label4 greaterThanEq __fn0_i __fn0_n
+    6 jump __label4 greaterThanEq __fn0_i 4
     7 op add __fn0_c __fn0_c __fn0_i
     8 noop
     9 label __label3
 
    11 jump __label2 always
    12 label __label4
    13 print __fn0_c
-    * set __tmp0 __fn0_c
    14 jump __label1 always
    15 label __label1
    16 label __label5
    17 set __fn1_n 8
    18 set __fn1_c 0
-    * set __tmp4 8
    19 set __fn1_i 0
    20 label __label7
-    * jump __label9 greaterThanEq __fn1_i __fn1_n
+   21 jump __label9 greaterThanEq __fn1_i 8
    22 op add __fn1_c __fn1_c __fn1_i
    23 noop
    24 label __label8
 
    26 jump __label7 always
    27 label __label9
    28 print __fn1_c
-    * set __tmp3 __fn1_c
    29 jump __label6 always
    30 label __label6
    31 jump __label11 greaterThanEq __fn0_c __fn1_c

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
     0 set result 1
     1 label __label0
-    * set __fn0_n 4
     2 set __fn0_c 0
     3 set __fn0_i 0
     4 label __label2
 
    13 jump __label1 always
    14 label __label1
    15 label __label5
-    * set __fn1_n 8
    16 set __fn1_c 0
    17 set __fn1_i 0
    18 label __label7

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
     2 set __fn0_c 0
     3 set __fn0_i 0
     4 label __label2
-    * jump __label4 greaterThanEq __fn0_i 4
+    5 label __label12
     6 op add __fn0_c __fn0_c __fn0_i
     7 noop
     8 label __label3
     9 op add __fn0_i __fn0_i 1
-    * jump __label2 always
+   10 jump __label12 lessThan __fn0_i 4
    11 label __label4
    12 print __fn0_c
    13 jump __label1 always
 
    16 set __fn1_c 0
    17 set __fn1_i 0
    18 label __label7
-    * jump __label9 greaterThanEq __fn1_i 8
+   19 label __label13
    20 op add __fn1_c __fn1_c __fn1_i
    21 noop
    22 label __label8
    23 op add __fn1_i __fn1_i 1
-    * jump __label7 always
+   24 jump __label13 lessThan __fn1_i 8
    25 label __label9
    26 print __fn1_c
    27 jump __label6 always

Modifications by Loop Unrolling: unroll loop at line 3 (+5 instructions):
     0 set result 1
     1 label __label0
     2 set __fn0_c 0
-    * set __fn0_i 0
-    * label __label2
-    * label __label12
-    * op add __fn0_c __fn0_c __fn0_i
-    * noop
-    * label __label3
-    * op add __fn0_i __fn0_i 1
-    * jump __label12 lessThan __fn0_i 4
-    * label __label4
+    3 set __fn0_i 0
+    4 label __label14
+    5 label __label15
+    6 op add __fn0_c __fn0_c __fn0_i
+    7 noop
+    8 label __label16
+    9 op add __fn0_i __fn0_i 1
+   10 label __label17
+   11 op add __fn0_c __fn0_c __fn0_i
+   12 noop
+   13 label __label18
+   14 op add __fn0_i __fn0_i 1
+   15 label __label19
+   16 op add __fn0_c __fn0_c __fn0_i
+   17 noop
+   18 label __label20
+   19 op add __fn0_i __fn0_i 1
+   20 label __label21
+   21 op add __fn0_c __fn0_c __fn0_i
+   22 noop
+   23 label __label22
+   24 op add __fn0_i __fn0_i 1
+   25 label __label4
    26 print __fn0_c
    27 jump __label1 always
    28 label __label1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 set __fn0_i 0
     4 label __label14
     5 label __label15
-    * op add __fn0_c __fn0_c __fn0_i
+    6 op add __fn0_c 0 0
     7 noop
     8 label __label16
-    * op add __fn0_i __fn0_i 1
+    9 op add __fn0_i 0 1
    10 label __label17
-    * op add __fn0_c __fn0_c __fn0_i
+   11 op add __fn0_c 0 1
    12 noop
    13 label __label18
-    * op add __fn0_i __fn0_i 1
+   14 op add __fn0_i 1 1
    15 label __label19
-    * op add __fn0_c __fn0_c __fn0_i
+   16 op add __fn0_c 1 2
    17 noop
    18 label __label20
-    * op add __fn0_i __fn0_i 1
+   19 op add __fn0_i 2 1
    20 label __label21
-    * op add __fn0_c __fn0_c __fn0_i
+   21 op add __fn0_c 3 3
    22 noop
    23 label __label22
-    * op add __fn0_i __fn0_i 1
+   24 op add __fn0_i 3 1
    25 label __label4
-    * print __fn0_c
+   26 print 6
    27 jump __label1 always
    28 label __label1
    29 label __label5
 
    40 print __fn1_c
    41 jump __label6 always
    42 label __label6
-    * jump __label11 greaterThanEq __fn0_c __fn1_c
+   43 jump __label11 greaterThanEq 6 __fn1_c
    44 print "Less"
    45 set result 0
    46 jump __label11 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
     0 set result 1
     1 label __label0
-    * set __fn0_c 0
-    * set __fn0_i 0
     2 label __label14
     3 label __label15
-    * op add __fn0_c 0 0
     4 noop
     5 label __label16
-    * op add __fn0_i 0 1
     6 label __label17
-    * op add __fn0_c 0 1
     7 noop
     8 label __label18
-    * op add __fn0_i 1 1
     9 label __label19
-    * op add __fn0_c 1 2
    10 noop
    11 label __label20
-    * op add __fn0_i 2 1
    12 label __label21
-    * op add __fn0_c 3 3
    13 noop
    14 label __label22
-    * op add __fn0_i 3 1
    15 label __label4
    16 print 6
    17 jump __label1 always

Modifications by Loop Unrolling: unroll loop at line 3 (+13 instructions):
 
    18 label __label1
    19 label __label5
    20 set __fn1_c 0
-    * set __fn1_i 0
-    * label __label7
-    * label __label13
-    * op add __fn1_c __fn1_c __fn1_i
-    * noop
-    * label __label8
-    * op add __fn1_i __fn1_i 1
-    * jump __label13 lessThan __fn1_i 8
-    * label __label9
+   21 set __fn1_i 0
+   22 label __label23
+   23 label __label24
+   24 op add __fn1_c __fn1_c __fn1_i
+   25 noop
+   26 label __label25
+   27 op add __fn1_i __fn1_i 1
+   28 label __label26
+   29 op add __fn1_c __fn1_c __fn1_i
+   30 noop
+   31 label __label27
+   32 op add __fn1_i __fn1_i 1
+   33 label __label28
+   34 op add __fn1_c __fn1_c __fn1_i
+   35 noop
+   36 label __label29
+   37 op add __fn1_i __fn1_i 1
+   38 label __label30
+   39 op add __fn1_c __fn1_c __fn1_i
+   40 noop
+   41 label __label31
+   42 op add __fn1_i __fn1_i 1
+   43 label __label32
+   44 op add __fn1_c __fn1_c __fn1_i
+   45 noop
+   46 label __label33
+   47 op add __fn1_i __fn1_i 1
+   48 label __label34
+   49 op add __fn1_c __fn1_c __fn1_i
+   50 noop
+   51 label __label35
+   52 op add __fn1_i __fn1_i 1
+   53 label __label36
+   54 op add __fn1_c __fn1_c __fn1_i
+   55 noop
+   56 label __label37
+   57 op add __fn1_i __fn1_i 1
+   58 label __label38
+   59 op add __fn1_c __fn1_c __fn1_i
+   60 noop
+   61 label __label39
+   62 op add __fn1_i __fn1_i 1
+   63 label __label9
    64 print __fn1_c
    65 jump __label6 always
    66 label __label6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
-    * set result 1
     0 label __label0
     1 label __label14
     2 label __label15
 
    20 set __fn1_i 0
    21 label __label23
    22 label __label24
-    * op add __fn1_c __fn1_c __fn1_i
+   23 op add __fn1_c 0 0
    24 noop
    25 label __label25
-    * op add __fn1_i __fn1_i 1
+   26 op add __fn1_i 0 1
    27 label __label26
-    * op add __fn1_c __fn1_c __fn1_i
+   28 op add __fn1_c 0 1
    29 noop
    30 label __label27
-    * op add __fn1_i __fn1_i 1
+   31 op add __fn1_i 1 1
    32 label __label28
-    * op add __fn1_c __fn1_c __fn1_i
+   33 op add __fn1_c 1 2
    34 noop
    35 label __label29
-    * op add __fn1_i __fn1_i 1
+   36 op add __fn1_i 2 1
    37 label __label30
-    * op add __fn1_c __fn1_c __fn1_i
+   38 op add __fn1_c 3 3
    39 noop
    40 label __label31
-    * op add __fn1_i __fn1_i 1
+   41 op add __fn1_i 3 1
    42 label __label32
-    * op add __fn1_c __fn1_c __fn1_i
+   43 op add __fn1_c 6 4
    44 noop
    45 label __label33
-    * op add __fn1_i __fn1_i 1
+   46 op add __fn1_i 4 1
    47 label __label34
-    * op add __fn1_c __fn1_c __fn1_i
+   48 op add __fn1_c 10 5
    49 noop
    50 label __label35
-    * op add __fn1_i __fn1_i 1
+   51 op add __fn1_i 5 1
    52 label __label36
-    * op add __fn1_c __fn1_c __fn1_i
+   53 op add __fn1_c 15 6
    54 noop
    55 label __label37
-    * op add __fn1_i __fn1_i 1
+   56 op add __fn1_i 6 1
    57 label __label38
-    * op add __fn1_c __fn1_c __fn1_i
+   58 op add __fn1_c 21 7
    59 noop
    60 label __label39
-    * op add __fn1_i __fn1_i 1
+   61 op add __fn1_i 7 1
    62 label __label9
-    * print __fn1_c
+   63 print 28
    64 jump __label6 always
    65 label __label6
-    * jump __label11 greaterThanEq 6 __fn1_c
+   66 jump __label11 greaterThanEq 6 28
    67 print "Less"
    68 set result 0
    69 jump __label11 always
    70 label __label11
-    * print result
+   71 print 0
    72 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
    16 jump __label1 always
    17 label __label1
    18 label __label5
-    * set __fn1_c 0
-    * set __fn1_i 0
    19 label __label23
    20 label __label24
-    * op add __fn1_c 0 0
    21 noop
    22 label __label25
-    * op add __fn1_i 0 1
    23 label __label26
-    * op add __fn1_c 0 1
    24 noop
    25 label __label27
-    * op add __fn1_i 1 1
    26 label __label28
-    * op add __fn1_c 1 2
    27 noop
    28 label __label29
-    * op add __fn1_i 2 1
    29 label __label30
-    * op add __fn1_c 3 3
    30 noop
    31 label __label31
-    * op add __fn1_i 3 1
    32 label __label32
-    * op add __fn1_c 6 4
    33 noop
    34 label __label33
-    * op add __fn1_i 4 1
    35 label __label34
-    * op add __fn1_c 10 5
    36 noop
    37 label __label35
-    * op add __fn1_i 5 1
    38 label __label36
-    * op add __fn1_c 15 6
    39 noop
    40 label __label37
-    * op add __fn1_i 6 1
    41 label __label38
-    * op add __fn1_c 21 7
    42 noop
    43 label __label39
-    * op add __fn1_i 7 1
    44 label __label9
    45 print 28
    46 jump __label6 always
    47 label __label6
    48 jump __label11 greaterThanEq 6 28
    49 print "Less"
-    * set result 0
    50 jump __label11 always
    51 label __label11
    52 print 0

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-1 instructions):
 
    45 print 28
    46 jump __label6 always
    47 label __label6
-    * jump __label11 greaterThanEq 6 28
+   48 noop
    49 print "Less"
    50 jump __label11 always
    51 label __label11

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
    13 label __label22
    14 label __label4
    15 print 6
-    * jump __label1 always
+   16 noop
    17 label __label1
    18 label __label5
    19 label __label23
 
    43 label __label39
    44 label __label9
    45 print 28
-    * jump __label6 always
+   46 noop
    47 label __label6
    48 noop
    49 print "Less"
-    * jump __label11 always
+   50 noop
    51 label __label11
    52 print 0
    53 end

Final code before resolving virtual instructions:

print 6
print 28
print "Less"
print 0
end
