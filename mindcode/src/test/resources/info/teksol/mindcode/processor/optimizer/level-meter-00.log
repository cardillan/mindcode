   221 instructions before optimizations.
    22 instructions eliminated by Temp Variables Elimination.
    17 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Jump Normalization (3 iterations).
     6 instructions eliminated by Jump Optimization (3 iterations).
     5 instructions eliminated by Single Step Elimination (2 passes, 5 iterations).
    17 instructions modified by Data Flow Optimization (6 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
     8 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions updated by PropagateJumpTargets.
     1 instructions eliminated by Unreachable Code Elimination.
     4 instructions eliminated by Print Merging.
   158 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 837):
  * Loop Optimization: replicate condition at line 116           cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-22 instructions):
     0 set TICKS 60
     1 set M_START_INDEX 0
-    * op add __tmp0 M_START_INDEX 1
-    * set M_CURRENT_INDEX __tmp0
-    * op add __tmp1 M_CURRENT_INDEX 1
-    * set M_END_INDEX __tmp1
-    * op add __tmp2 M_END_INDEX 1
-    * set M_R0 __tmp2
-    * op add __tmp3 M_R0 1
-    * set M_G0 __tmp3
-    * op add __tmp4 M_G0 1
-    * set M_B0 __tmp4
-    * op add __tmp5 M_B0 1
-    * set M_R1 __tmp5
-    * op add __tmp6 M_R1 1
-    * set M_G1 __tmp6
-    * op add __tmp7 M_G1 1
-    * set M_B1 __tmp7
+    2 op add M_CURRENT_INDEX M_START_INDEX 1
+    3 noop
+    4 op add M_END_INDEX M_CURRENT_INDEX 1
+    5 noop
+    6 op add M_R0 M_END_INDEX 1
+    7 noop
+    8 op add M_G0 M_R0 1
+    9 noop
+   10 op add M_B0 M_G0 1
+   11 noop
+   12 op add M_R1 M_B0 1
+   13 noop
+   14 op add M_G1 M_R1 1
+   15 noop
+   16 op add M_B1 M_G1 1
+   17 noop
    18 label __label0
    19 jump __label2 equal true false
    20 print "Item/Liquid/Energy Level Meter"
    21 set CONTAINER null
    22 set MEMORY null
-    * set __tmp8 @links
-    * set n __tmp8
+   23 set n @links
+   24 noop
    25 label __label3
    26 op greaterThan __tmp9 n 0
    27 jump __label5 equal __tmp9 false
-    * op sub __tmp10 n 1
-    * set n __tmp10
-    * getlink __tmp11 n
-    * set block __tmp11
+   28 op sub n n 1
+   29 noop
+   30 getlink block n
+   31 noop
    32 print "\nFound: "
    33 print block
-    * sensor __tmp12 block @type
-    * set __ast0 __tmp12
+   34 sensor __ast0 block @type
+   35 noop
    36 jump __label8 equal __ast0 @message
    37 jump __label7 always
    38 label __label8
 
   171 write B1 MEMORY M_B1
   172 read __tmp18 MEMORY M_CURRENT_INDEX
   173 op max __tmp19 START_INDEX __tmp18
-    * op min __tmp20 __tmp19 END_INDEX
-    * set index __tmp20
-    * set __tmp21 @tick
-    * set nextTick __tmp21
+  174 op min index __tmp19 END_INDEX
+  175 noop
+  176 set nextTick @tick
+  177 noop
   178 control enabled SWITCH 0
   179 label __label25
   180 sensor __tmp22 SWITCH @enabled
   181 op equal __tmp23 __tmp22 0
   182 jump __label27 equal __tmp23 false
-    * set __tmp24 @time
-    * set startTime __tmp24
+  183 set startTime @time
+  184 noop
   185 set prevTick nextTick
-    * op add __tmp25 nextTick TICKS
-    * set nextTick __tmp25
+  186 op add nextTick nextTick TICKS
+  187 noop
   188 op add __tmp26 nextTick TICKS
   189 op greaterThan __tmp27 @tick __tmp26
   190 jump __label28 equal __tmp27 false
-    * set __tmp29 @tick
-    * set prevTick __tmp29
-    * op add __tmp30 prevTick TICKS
-    * set nextTick __tmp30
+  191 set prevTick @tick
+  192 noop
+  193 op add nextTick prevTick TICKS
+  194 noop
   195 set __tmp28 nextTick
   196 jump __label29 always
   197 label __label28
 
   211 label __label31
   212 jump __label30 always
   213 label __label32
-    * sensor __tmp34 CONTAINER SENSOR
-    * set amount __tmp34
-    * sensor __tmp35 CONTAINER MAXIMUM
-    * set max __tmp35
+  214 sensor amount CONTAINER SENSOR
+  215 noop
+  216 sensor max CONTAINER MAXIMUM
+  217 noop
   218 op mul __tmp36 amount 150
   219 op div __tmp37 __tmp36 max
-    * op add __tmp38 10 __tmp37
-    * set scaled __tmp38
-    * op add __tmp39 index 1
-    * set index __tmp39
+  220 op add scaled 10 __tmp37
+  221 noop
+  222 op add index index 1
+  223 noop
   224 op greaterThan __tmp40 index END_INDEX
   225 jump __label35 equal __tmp40 false
   226 set index START_INDEX

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-17 instructions):
 
    37 jump __label7 always
    38 label __label8
    39 set MESSAGE block
-    * set __tmp13 MESSAGE
+   40 noop
    41 jump __label6 always
    42 label __label7
    43 jump __label10 equal __ast0 @switch
    44 jump __label9 always
    45 label __label10
    46 set SWITCH block
-    * set __tmp13 SWITCH
+   47 noop
    48 jump __label6 always
    49 label __label9
    50 jump __label12 equal __ast0 @memory-bank
 
    54 set START_INDEX 264
    55 set END_INDEX 511
    56 set SIZE 248
-    * set __tmp13 SIZE
+   57 noop
    58 jump __label6 always
    59 label __label11
    60 jump __label14 equal __ast0 @memory-cell
 
    64 set START_INDEX 40
    65 set END_INDEX 63
    66 set SIZE 24
-    * set __tmp13 SIZE
+   67 noop
    68 jump __label6 always
    69 label __label13
    70 jump __label16 equal __ast0 @vault
 
    80 set R1 80
    81 set G1 255
    82 set B1 80
-    * set __tmp13 B1
+   83 noop
    84 jump __label6 always
    85 label __label15
    86 jump __label18 equal __ast0 @battery
 
    96 set R1 255
    97 set G1 255
    98 set B1 80
-    * set __tmp13 B1
+   99 noop
   100 jump __label6 always
   101 label __label17
   102 jump __label20 equal __ast0 @liquid-tank
 
   112 set R1 192
   113 set G1 192
   114 set B1 255
-    * set __tmp13 B1
+  115 noop
   116 jump __label6 always
   117 label __label19
   118 jump __label22 equal __ast0 @power-node
 
   129 set R1 255
   130 set G1 255
   131 set B1 80
-    * set __tmp13 B1
+  132 noop
   133 jump __label6 always
   134 label __label21
-    * set __tmp13 null
+  135 noop
   136 label __label6
   137 label __label4
   138 jump __label3 always
 
   151 jump __label23 equal __tmp16 false
   152 print "\nNo memory or container."
   153 printflush MESSAGE
-    * set __tmp17 null
+  154 noop
   155 jump __label24 always
   156 label __label23
   157 printflush MESSAGE
   158 jump __label2 always
-    * set __tmp17 null
+  159 noop
   160 label __label24
   161 label __label1
   162 jump __label0 always
 
   192 noop
   193 op add nextTick prevTick TICKS
   194 noop
-    * set __tmp28 nextTick
+  195 noop
   196 jump __label29 always
   197 label __label28
-    * set __tmp28 null
+  198 noop
   199 label __label29
   200 label __label30
   201 op lessThan __tmp31 @tick nextTick
 
   203 op lessThan __tmp32 @tick prevTick
   204 jump __label33 equal __tmp32 false
   205 end
-    * set __tmp33 null
+  206 noop
   207 jump __label34 always
   208 label __label33
-    * set __tmp33 null
+  209 noop
   210 label __label34
   211 label __label31
   212 jump __label30 always
 
   224 op greaterThan __tmp40 index END_INDEX
   225 jump __label35 equal __tmp40 false
   226 set index START_INDEX
-    * set __tmp41 index
+  227 noop
   228 jump __label36 always
   229 label __label35
-    * set __tmp41 null
+  230 noop
   231 label __label36
   232 write index MEMORY M_START_INDEX
   233 write scaled MEMORY index

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    16 op add M_B1 M_G1 1
    17 noop
    18 label __label0
-    * jump __label2 equal true false
+   19 noop
    20 print "Item/Liquid/Energy Level Meter"
    21 set CONTAINER null
    22 set MEMORY null

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-8 instructions):
 
    33 print block
    34 sensor __ast0 block @type
    35 noop
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   36 jump __label7 notEqual __ast0 @message
+   37 noop
    38 label __label8
    39 set MESSAGE block
    40 noop
    41 jump __label6 always
    42 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   43 jump __label9 notEqual __ast0 @switch
+   44 noop
    45 label __label10
    46 set SWITCH block
    47 noop
    48 jump __label6 always
    49 label __label9
-    * jump __label12 equal __ast0 @memory-bank
-    * jump __label11 always
+   50 jump __label11 notEqual __ast0 @memory-bank
+   51 noop
    52 label __label12
    53 set MEMORY block
    54 set START_INDEX 264
 
    57 noop
    58 jump __label6 always
    59 label __label11
-    * jump __label14 equal __ast0 @memory-cell
-    * jump __label13 always
+   60 jump __label13 notEqual __ast0 @memory-cell
+   61 noop
    62 label __label14
    63 set MEMORY block
    64 set START_INDEX 40
 
    68 jump __label6 always
    69 label __label13
    70 jump __label16 equal __ast0 @vault
-    * jump __label16 equal __ast0 @container
-    * jump __label15 always
+   71 jump __label15 notEqual __ast0 @container
+   72 noop
    73 label __label16
    74 set CONTAINER block
    75 set SENSOR @totalItems
 
    84 jump __label6 always
    85 label __label15
    86 jump __label18 equal __ast0 @battery
-    * jump __label18 equal __ast0 @battery-large
-    * jump __label17 always
+   87 jump __label17 notEqual __ast0 @battery-large
+   88 noop
    89 label __label18
    90 set CONTAINER block
    91 set SENSOR @totalPower
 
   100 jump __label6 always
   101 label __label17
   102 jump __label20 equal __ast0 @liquid-tank
-    * jump __label20 equal __ast0 @liquid-container
-    * jump __label19 always
+  103 jump __label19 notEqual __ast0 @liquid-container
+  104 noop
   105 label __label20
   106 set CONTAINER block
   107 set SENSOR @totalLiquids
 
   117 label __label19
   118 jump __label22 equal __ast0 @power-node
   119 jump __label22 equal __ast0 @power-node-large
-    * jump __label22 equal __ast0 @surge-tower
-    * jump __label21 always
+  120 jump __label21 notEqual __ast0 @surge-tower
+  121 noop
   122 label __label22
   123 set CONTAINER block
   124 set SENSOR @powerNetStored

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-6 instructions):
 
    23 set n @links
    24 noop
    25 label __label3
-    * op greaterThan __tmp9 n 0
-    * jump __label5 equal __tmp9 false
+   26 jump __label5 lessThanEq n 0
    27 op sub n n 1
    28 noop
    29 getlink block n
 
   177 control enabled SWITCH 0
   178 label __label25
   179 sensor __tmp22 SWITCH @enabled
-    * op equal __tmp23 __tmp22 0
-    * jump __label27 equal __tmp23 false
+  180 jump __label27 notEqual __tmp22 0
   181 set startTime @time
   182 noop
   183 set prevTick nextTick
   184 op add nextTick nextTick TICKS
   185 noop
   186 op add __tmp26 nextTick TICKS
-    * op greaterThan __tmp27 @tick __tmp26
-    * jump __label28 equal __tmp27 false
+  187 jump __label28 lessThanEq @tick __tmp26
   188 set prevTick @tick
   189 noop
   190 op add nextTick prevTick TICKS
 
   195 noop
   196 label __label29
   197 label __label30
-    * op lessThan __tmp31 @tick nextTick
-    * jump __label32 equal __tmp31 false
-    * op lessThan __tmp32 @tick prevTick
-    * jump __label33 equal __tmp32 false
+  198 jump __label32 greaterThanEq @tick nextTick
+  199 jump __label33 greaterThanEq @tick prevTick
   200 end
   201 noop
   202 jump __label34 always
 
   216 noop
   217 op add index index 1
   218 noop
-    * op greaterThan __tmp40 index END_INDEX
-    * jump __label35 equal __tmp40 false
+  219 jump __label35 lessThanEq index END_INDEX
   220 set index START_INDEX
   221 noop
   222 jump __label36 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-4 instructions):
 
   129 set G1 255
   130 set B1 80
   131 noop
-    * jump __label6 always
+  132 noop
   133 label __label21
   134 noop
   135 label __label6
 
   190 op add nextTick prevTick TICKS
   191 noop
   192 noop
-    * jump __label29 always
+  193 noop
   194 label __label28
   195 noop
   196 label __label29
 
   199 jump __label33 greaterThanEq @tick prevTick
   200 end
   201 noop
-    * jump __label34 always
+  202 noop
   203 label __label33
   204 noop
   205 label __label34
 
   219 jump __label35 lessThanEq index END_INDEX
   220 set index START_INDEX
   221 noop
-    * jump __label36 always
+  222 noop
   223 label __label35
   224 noop
   225 label __label36

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set M_START_INDEX 0
     2 op add M_CURRENT_INDEX M_START_INDEX 1
     3 noop
-    * op add M_END_INDEX M_CURRENT_INDEX 1
+    4 op add M_END_INDEX M_START_INDEX 2
     5 noop
-    * op add M_R0 M_END_INDEX 1
+    6 op add M_R0 M_CURRENT_INDEX 2
     7 noop
-    * op add M_G0 M_R0 1
+    8 op add M_G0 M_END_INDEX 2
     9 noop
-    * op add M_B0 M_G0 1
+   10 op add M_B0 M_R0 2
    11 noop
-    * op add M_R1 M_B0 1
+   12 op add M_R1 M_G0 2
    13 noop
-    * op add M_G1 M_R1 1
+   14 op add M_G1 M_B0 2
    15 noop
-    * op add M_B1 M_G1 1
+   16 op add M_B1 M_R1 2
    17 noop
    18 label __label0
    19 noop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2:
 
     3 noop
     4 op add M_END_INDEX M_START_INDEX 2
     5 noop
-    * op add M_R0 M_CURRENT_INDEX 2
+    6 op add M_R0 M_START_INDEX 3
     7 noop
-    * op add M_G0 M_END_INDEX 2
+    8 op add M_G0 M_START_INDEX 4
     9 noop
-    * op add M_B0 M_R0 2
+   10 op add M_B0 M_CURRENT_INDEX 4
    11 noop
-    * op add M_R1 M_G0 2
+   12 op add M_R1 M_END_INDEX 4
    13 noop
-    * op add M_G1 M_B0 2
+   14 op add M_G1 M_R0 4
    15 noop
-    * op add M_B1 M_R1 2
+   16 op add M_B1 M_G0 4
    17 noop
    18 label __label0
    19 noop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
     7 noop
     8 op add M_G0 M_START_INDEX 4
     9 noop
-    * op add M_B0 M_CURRENT_INDEX 4
+   10 op add M_B0 M_START_INDEX 5
    11 noop
-    * op add M_R1 M_END_INDEX 4
+   12 op add M_R1 M_START_INDEX 6
    13 noop
-    * op add M_G1 M_R0 4
+   14 op add M_G1 M_START_INDEX 7
    15 noop
-    * op add M_B1 M_G0 4
+   16 op add M_B1 M_START_INDEX 8
    17 noop
    18 label __label0
    19 noop

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    24 noop
    25 label __label3
    26 jump __label5 lessThanEq n 0
+   27 label __label37
    28 op sub n n 1
    29 noop
    30 getlink block n
 
   135 noop
   136 label __label6
   137 label __label4
-    * jump __label3 always
+  138 jump __label37 greaterThan n 0
   139 label __label5
   140 print "\nMessage: "
   141 print MESSAGE
 
   197 label __label29
   198 label __label30
   199 jump __label32 greaterThanEq @tick nextTick
+  200 label __label38
   201 jump __label33 greaterThanEq @tick prevTick
   202 end
   203 noop
 
   206 noop
   207 label __label34
   208 label __label31
-    * jump __label30 always
+  209 jump __label38 lessThan @tick nextTick
   210 label __label32
   211 sensor amount CONTAINER SENSOR
   212 noop

Modifications by Loop Optimization: replicate condition at line 116 (+1 instructions):
 
   179 label __label25
   180 sensor __tmp22 SWITCH @enabled
   181 jump __label27 notEqual __tmp22 0
+  182 label __label39
   183 set startTime @time
   184 noop
   185 set prevTick nextTick
 
   249 print "\n"
   250 printflush MESSAGE
   251 label __label26
-    * jump __label25 always
+  252 sensor __tmp22 SWITCH @enabled
+  253 jump __label39 equal __tmp22 0
   254 label __label27
   255 end

Modifications by Final phase, Jump Threading, iteration 1:
 
   152 print "\nNo memory or container."
   153 printflush MESSAGE
   154 noop
-    * jump __label24 always
+  155 jump __label0 always
   156 label __label23
   157 printflush MESSAGE
   158 jump __label2 always

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
   156 label __label23
   157 printflush MESSAGE
   158 jump __label2 always
-    * noop
-    * label __label24
-    * label __label1
-    * jump __label0 always
   159 label __label2
   160 write START_INDEX MEMORY M_START_INDEX
   161 write END_INDEX MEMORY M_END_INDEX
 
   197 label __label38
   198 jump __label33 greaterThanEq @tick prevTick
   199 end
-    * noop
-    * noop
   200 label __label33
   201 noop
   202 label __label34

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
   155 jump __label0 always
   156 label __label23
   157 printflush MESSAGE
-    * jump __label2 always
+  158 noop
   159 label __label2
   160 write START_INDEX MEMORY M_START_INDEX
   161 write END_INDEX MEMORY M_END_INDEX

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   227 print "Item/Liquid/Energy Level Meter\n"
   228 print "StartIndex: "
   229 print START_INDEX
-    * print "\n"
-    * print "Index: "
+  230 print "\nIndex: "
   231 print index
-    * print "\n"
-    * print "Amount: "
+  232 print "\nAmount: "
   233 print amount
-    * print "\n"
-    * print "Scaled: "
+  234 print "\nScaled: "
   235 print scaled
-    * print "\n"
   236 op sub __tmp43 @time startTime
-    * print "Elapsed: "
+  237 print "\nElapsed: "
   238 print __tmp43
   239 print "\n"
   240 printflush MESSAGE

Final code before resolving virtual instructions:

set TICKS 60
set M_START_INDEX 0
op add M_CURRENT_INDEX M_START_INDEX 1
op add M_END_INDEX M_START_INDEX 2
op add M_R0 M_START_INDEX 3
op add M_G0 M_START_INDEX 4
op add M_B0 M_START_INDEX 5
op add M_R1 M_START_INDEX 6
op add M_G1 M_START_INDEX 7
op add M_B1 M_START_INDEX 8
label __label0
print "Item/Liquid/Energy Level Meter"
set CONTAINER null
set MEMORY null
set n @links
jump __label5 lessThanEq n 0
label __label37
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label11 notEqual __ast0 @memory-bank
set MEMORY block
set START_INDEX 264
set END_INDEX 511
set SIZE 248
jump __label6 always 0 0
label __label11
jump __label13 notEqual __ast0 @memory-cell
set MEMORY block
set START_INDEX 40
set END_INDEX 63
set SIZE 24
jump __label6 always 0 0
label __label13
jump __label16 equal __ast0 @vault
jump __label15 notEqual __ast0 @container
label __label16
set CONTAINER block
set SENSOR @totalItems
set MAXIMUM @itemCapacity
set R0 0
set G0 80
set B0 0
set R1 80
set G1 255
set B1 80
jump __label6 always 0 0
label __label15
jump __label18 equal __ast0 @battery
jump __label17 notEqual __ast0 @battery-large
label __label18
set CONTAINER block
set SENSOR @totalPower
set MAXIMUM @powerCapacity
set R0 80
set G0 80
set B0 0
set R1 255
set G1 255
set B1 80
jump __label6 always 0 0
label __label17
jump __label20 equal __ast0 @liquid-tank
jump __label19 notEqual __ast0 @liquid-container
label __label20
set CONTAINER block
set SENSOR @totalLiquids
set MAXIMUM @liquidCapacity
set R0 0
set G0 0
set B0 192
set R1 192
set G1 192
set B1 255
jump __label6 always 0 0
label __label19
jump __label22 equal __ast0 @power-node
jump __label22 equal __ast0 @power-node-large
jump __label21 notEqual __ast0 @surge-tower
label __label22
set CONTAINER block
set SENSOR @powerNetStored
set MAXIMUM @powerNetCapacity
set R0 80
set G0 80
set B0 0
set R1 255
set G1 255
set B1 80
label __label21
label __label6
jump __label37 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nMemory: "
print MEMORY
print "\nContainer: "
print CONTAINER
op equal __tmp14 CONTAINER null
op equal __tmp15 MEMORY null
op or __tmp16 __tmp14 __tmp15
jump __label23 equal __tmp16 false
print "\nNo memory or container."
printflush MESSAGE
jump __label0 always 0 0
label __label23
printflush MESSAGE
write START_INDEX MEMORY M_START_INDEX
write END_INDEX MEMORY M_END_INDEX
write R0 MEMORY M_R0
write G0 MEMORY M_G0
write B0 MEMORY M_B0
write R1 MEMORY M_R1
write G1 MEMORY M_G1
write B1 MEMORY M_B1
read __tmp18 MEMORY M_CURRENT_INDEX
op max __tmp19 START_INDEX __tmp18
op min index __tmp19 END_INDEX
set nextTick @tick
control enabled SWITCH 0 0 0 0
sensor __tmp22 SWITCH @enabled
jump __label27 notEqual __tmp22 0
label __label39
set startTime @time
set prevTick nextTick
op add nextTick nextTick TICKS
op add __tmp26 nextTick TICKS
jump __label28 lessThanEq @tick __tmp26
set prevTick @tick
op add nextTick prevTick TICKS
label __label28
jump __label32 greaterThanEq @tick nextTick
label __label38
jump __label33 greaterThanEq @tick prevTick
end
label __label33
jump __label38 lessThan @tick nextTick
label __label32
sensor amount CONTAINER SENSOR
sensor max CONTAINER MAXIMUM
op mul __tmp36 amount 150
op div __tmp37 __tmp36 max
op add scaled 10 __tmp37
op add index index 1
jump __label35 lessThanEq index END_INDEX
set index START_INDEX
label __label35
write index MEMORY M_START_INDEX
write scaled MEMORY index
op sub __tmp42 index SIZE
write scaled MEMORY __tmp42
print "Item/Liquid/Energy Level Meter\n"
print "StartIndex: "
print START_INDEX
print "\nIndex: "
print index
print "\nAmount: "
print amount
print "\nScaled: "
print scaled
op sub __tmp43 @time startTime
print "\nElapsed: "
print __tmp43
print "\n"
printflush MESSAGE
sensor __tmp22 SWITCH @enabled
jump __label39 equal __tmp22 0
label __label27
end
