   162 instructions before optimizations.
    26 instructions eliminated by Temp Variables Elimination.
    14 instructions eliminated by Dead Code Elimination (6 iterations).
    10 instructions eliminated by Jump Optimization (3 iterations).
     6 instructions eliminated by Single Step Elimination (4 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
     3 instructions modified by Data Flow Optimization (2 passes, 5 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     4 loops improved by Loop Optimization.
     3 instructions eliminated by Jump Straightening (3 iterations).
     4 instructions eliminated by Print Merging.
    99 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 898):
  * Loop Optimization: replicate condition at line 39            cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-26 instructions):
 
     2 set lastCell 0
     3 label __label0
     4 set MEMORY null
-    * set __tmp0 @links
-    * set FIRST_BLOCK __tmp0
-    * set __tmp1 @links
-    * set n __tmp1
+    5 set FIRST_BLOCK @links
+    6 noop
+    7 set n @links
+    8 noop
     9 label __label3
    10 op greaterThan __tmp2 n 0
    11 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   12 op sub n n 1
+   13 noop
+   14 getlink block n
+   15 noop
+   16 sensor __ast0 block @type
+   17 noop
    18 jump __label8 equal __ast0 @memory-cell
    19 jump __label7 always
    20 label __label8
 
    49 op equal __tmp7 MEMORY null
    50 jump __label0 notEqual __tmp7 false
    51 label __label2
-    * read __tmp8 MEMORY 0
-    * set total __tmp8
+   52 read total MEMORY 0
+   53 noop
    54 set BATCH_DURATION 2000
    55 op max __tmp9 MIN_BATCH 10
    56 op idiv __tmp10 __tmp9 10
-    * op mul __tmp11 __tmp10 10
-    * set MIN_BATCH __tmp11
+   57 op mul MIN_BATCH __tmp10 10
+   58 noop
    59 op max __tmp12 MAX_BATCH MIN_BATCH
    60 op idiv __tmp13 __tmp12 10
-    * op mul __tmp14 __tmp13 10
-    * set MAX_BATCH __tmp14
+   61 op mul MAX_BATCH __tmp13 10
+   62 noop
    63 set BATCH_STEP 10
    64 set batch MIN_BATCH
-    * set __tmp15 @time
-    * set startTime __tmp15
+   65 set startTime @time
+   66 noop
    67 set ratePerMin 0
-    * op add __tmp16 total batch
-    * set limit __tmp16
+   68 op add limit total batch
+   69 noop
    70 control enabled switch1 0
    71 label __label13
    72 sensor __tmp17 switch1 @enabled
    73 op equal __tmp18 __tmp17 0
    74 jump __label15 equal __tmp18 false
-    * set __tmp19 @time
-    * set start __tmp19
+   75 set start @time
+   76 noop
    77 set n FIRST_BLOCK
    78 label __label16
    79 op lessThan __tmp20 n @links
    80 jump __label18 equal __tmp20 false
-    * getlink __tmp21 n
-    * set block __tmp21
-    * op add __tmp22 n 1
-    * set n __tmp22
+   81 getlink block n
+   82 noop
+   83 op add n n 1
+   84 noop
    85 sensor __tmp23 block @type
    86 op equal __tmp24 __tmp23 @plastanium-conveyor
    87 jump __label19 equal __tmp24 false
-    * read __tmp26 MEMORY n
-    * set prev __tmp26
-    * sensor __tmp27 block @totalItems
-    * set curr __tmp27
+   88 read prev MEMORY n
+   89 noop
+   90 sensor curr block @totalItems
+   91 noop
    92 write curr MEMORY n
    93 op lessThan __tmp28 curr prev
    94 jump __label21 equal __tmp28 false
-    * op add __tmp30 total 10
-    * set total __tmp30
+   95 op add total total 10
+   96 noop
    97 write total MEMORY 0
    98 op greaterThan __tmp31 total limit
    99 jump __label23 equal __tmp31 false
-    * op sub __tmp33 @time startTime
-    * set duration __tmp33
-    * set __tmp34 @time
-    * set startTime __tmp34
-    * op add __tmp35 limit batch
-    * set limit __tmp35
-    * op div __tmp36 batch duration
-    * set rate __tmp36
+  100 op sub duration @time startTime
+  101 noop
+  102 set startTime @time
+  103 noop
+  104 op add limit limit batch
+  105 noop
+  106 op div rate batch duration
+  107 noop
   108 op mul __tmp37 rate 16.666666666666668
   109 write __tmp37 MEMORY lastCell
   110 op mul __tmp38 rate 60000
-    * op floor __tmp39 __tmp38
-    * set ratePerMin __tmp39
+  111 op floor ratePerMin __tmp38
+  112 noop
   113 op lessThanEq __tmp40 duration BATCH_DURATION
   114 jump __label25 equal __tmp40 false
   115 op add __tmp42 batch BATCH_STEP
-    * op min __tmp43 __tmp42 MAX_BATCH
-    * set batch __tmp43
+  116 op min batch __tmp42 MAX_BATCH
+  117 noop
   118 set __tmp41 batch
   119 jump __label26 always
   120 label __label25
 
   139 jump __label16 always
   140 label __label18
   141 op sub __tmp44 @time startTime
-    * op floor __tmp45 __tmp44
-    * set elapsed __tmp45
+  142 op floor elapsed __tmp44
+  143 noop
   144 op greaterThanEq __tmp46 elapsed 10000
   145 jump __label27 equal __tmp46 false
   146 op idiv __tmp48 batch 90
   147 op mul __tmp49 __tmp48 10
-    * op max __tmp50 __tmp49 MIN_BATCH
-    * set batch __tmp50
+  148 op max batch __tmp49 MIN_BATCH
+  149 noop
   150 write 0 MEMORY lastCell
   151 set ratePerMin 0
-    * set __tmp51 @time
-    * set startTime __tmp51
+  152 set startTime @time
+  153 noop
   154 set __tmp47 startTime
   155 jump __label28 always
   156 label __label27
 
   185 op lessThan __tmp54 n @links
   186 jump __label31 equal __tmp54 false
   187 write 0 MEMORY n
-    * op add __tmp55 n 1
-    * set n __tmp55
+  188 op add n n 1
+  189 noop
   190 label __label30
   191 jump __label29 always
   192 label __label31

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-8 instructions):
 
    20 label __label8
    21 set MEMORY block
    22 set lastCell 63
-    * set __tmp6 lastCell
+   23 noop
    24 jump __label6 always
    25 label __label7
    26 jump __label10 equal __ast0 @memory-bank
 
    28 label __label10
    29 set MEMORY block
    30 set lastCell 511
-    * set __tmp6 lastCell
+   31 noop
    32 jump __label6 always
    33 label __label9
    34 jump __label12 equal __ast0 @plastanium-conveyor
    35 jump __label11 always
    36 label __label12
    37 set FIRST_BLOCK n
-    * set __tmp6 FIRST_BLOCK
+   38 noop
    39 jump __label6 always
    40 label __label11
-    * set __tmp6 null
+   41 noop
    42 label __label6
    43 label __label4
    44 jump __label3 always
 
   130 label __label21
   131 set __tmp29 null
   132 label __label22
-    * set __tmp25 __tmp29
+  133 noop
   134 jump __label20 always
   135 label __label19
-    * set __tmp25 null
+  136 noop
   137 label __label20
   138 label __label17
   139 jump __label16 always
 
   151 set ratePerMin 0
   152 set startTime @time
   153 noop
-    * set __tmp47 startTime
+  154 noop
   155 jump __label28 always
   156 label __label27
-    * set __tmp47 null
+  157 noop
   158 label __label28
   159 print "Item Counter                  \n"
   160 print "Total items: [gold]"

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   125 label __label23
   126 set __tmp32 null
   127 label __label24
-    * set __tmp29 __tmp32
+  128 noop
   129 jump __label22 always
   130 label __label21
-    * set __tmp29 null
+  131 noop
   132 label __label22
   133 noop
   134 jump __label20 always

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   120 label __label25
   121 set __tmp41 null
   122 label __label26
-    * set __tmp32 __tmp41
+  123 noop
   124 jump __label24 always
   125 label __label23
-    * set __tmp32 null
+  126 noop
   127 label __label24
   128 noop
   129 jump __label22 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   115 op add __tmp42 batch BATCH_STEP
   116 op min batch __tmp42 MAX_BATCH
   117 noop
-    * set __tmp41 batch
+  118 noop
   119 jump __label26 always
   120 label __label25
-    * set __tmp41 null
+  121 noop
   122 label __label26
   123 noop
   124 jump __label24 always

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-3 instructions):
 
    15 noop
    16 sensor __ast0 block @type
    17 noop
-    * jump __label8 equal __ast0 @memory-cell
-    * jump __label7 always
+   18 jump __label7 notEqual __ast0 @memory-cell
+   19 noop
    20 label __label8
    21 set MEMORY block
    22 set lastCell 63
    23 noop
    24 jump __label6 always
    25 label __label7
-    * jump __label10 equal __ast0 @memory-bank
-    * jump __label9 always
+   26 jump __label9 notEqual __ast0 @memory-bank
+   27 noop
    28 label __label10
    29 set MEMORY block
    30 set lastCell 511
    31 noop
    32 jump __label6 always
    33 label __label9
-    * jump __label12 equal __ast0 @plastanium-conveyor
-    * jump __label11 always
+   34 jump __label11 notEqual __ast0 @plastanium-conveyor
+   35 noop
    36 label __label12
    37 set FIRST_BLOCK n
    38 noop

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-10 instructions):
 
     7 set n @links
     8 noop
     9 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+   10 jump __label5 lessThanEq n 0
    11 op sub n n 1
    12 noop
    13 getlink block n
 
    45 print "Item Counter\n[salmon]No memory attached."
    46 printflush message1
    47 label __label1
-    * op equal __tmp7 MEMORY null
-    * jump __label0 notEqual __tmp7 false
+   48 jump __label0 equal MEMORY null
    49 label __label2
    50 read total MEMORY 0
    51 noop
 
    68 control enabled switch1 0
    69 label __label13
    70 sensor __tmp17 switch1 @enabled
-    * op equal __tmp18 __tmp17 0
-    * jump __label15 equal __tmp18 false
+   71 jump __label15 notEqual __tmp17 0
    72 set start @time
    73 noop
    74 set n FIRST_BLOCK
    75 label __label16
-    * op lessThan __tmp20 n @links
-    * jump __label18 equal __tmp20 false
+   76 jump __label18 greaterThanEq n @links
    77 getlink block n
    78 noop
    79 op add n n 1
    80 noop
    81 sensor __tmp23 block @type
-    * op equal __tmp24 __tmp23 @plastanium-conveyor
-    * jump __label19 equal __tmp24 false
+   82 jump __label19 notEqual __tmp23 @plastanium-conveyor
    83 read prev MEMORY n
    84 noop
    85 sensor curr block @totalItems
    86 noop
    87 write curr MEMORY n
-    * op lessThan __tmp28 curr prev
-    * jump __label21 equal __tmp28 false
+   88 jump __label21 greaterThanEq curr prev
    89 op add total total 10
    90 noop
    91 write total MEMORY 0
-    * op greaterThan __tmp31 total limit
-    * jump __label23 equal __tmp31 false
+   92 jump __label23 lessThanEq total limit
    93 op sub duration @time startTime
    94 noop
    95 set startTime @time
 
   103 op mul __tmp38 rate 60000
   104 op floor ratePerMin __tmp38
   105 noop
-    * op lessThanEq __tmp40 duration BATCH_DURATION
-    * jump __label25 equal __tmp40 false
+  106 jump __label25 greaterThan duration BATCH_DURATION
   107 op add __tmp42 batch BATCH_STEP
   108 op min batch __tmp42 MAX_BATCH
   109 noop
 
   133 op sub __tmp44 @time startTime
   134 op floor elapsed __tmp44
   135 noop
-    * op greaterThanEq __tmp46 elapsed 10000
-    * jump __label27 equal __tmp46 false
+  136 jump __label27 lessThan elapsed 10000
   137 op idiv __tmp48 batch 90
   138 op mul __tmp49 __tmp48 10
   139 op max batch __tmp49 MIN_BATCH
 
   173 write 0 MEMORY lastCell
   174 set n 0
   175 label __label29
-    * op lessThan __tmp54 n @links
-    * jump __label31 equal __tmp54 false
+  176 jump __label31 greaterThanEq n @links
   177 write 0 MEMORY n
   178 op add n n 1
   179 noop

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    35 label __label12
    36 set FIRST_BLOCK n
    37 noop
-    * jump __label6 always
+   38 noop
    39 label __label11
    40 noop
    41 label __label6
 
   108 op min batch __tmp42 MAX_BATCH
   109 noop
   110 noop
-    * jump __label26 always
+  111 noop
   112 label __label25
   113 noop
   114 label __label26
   115 noop
-    * jump __label24 always
+  116 noop
   117 label __label23
   118 noop
   119 label __label24
   120 noop
-    * jump __label22 always
+  121 noop
   122 label __label21
   123 noop
   124 label __label22
   125 noop
-    * jump __label20 always
+  126 noop
   127 label __label19
   128 noop
   129 label __label20
 
   143 set startTime @time
   144 noop
   145 noop
-    * jump __label28 always
+  146 noop
   147 label __label27
   148 noop
   149 label __label28

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   100 noop
   101 op mul __tmp37 rate 16.666666666666668
   102 write __tmp37 MEMORY lastCell
-    * op mul __tmp38 rate 60000
-    * op floor ratePerMin __tmp38
+  103 noop
+  104 op idiv ratePerMin rate 0.000016666666666666667
   105 noop
   106 jump __label25 greaterThan duration BATCH_DURATION
   107 op add __tmp42 batch BATCH_STEP

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    63 set startTime @time
    64 noop
    65 set ratePerMin 0
-    * op add limit total batch
+   66 op add limit total MIN_BATCH
    67 noop
    68 control enabled switch1 0
    69 label __label13

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     8 noop
     9 label __label3
    10 jump __label5 lessThanEq n 0
+   11 label __label32
    12 op sub n n 1
    13 noop
    14 getlink block n
 
    41 noop
    42 label __label6
    43 label __label4
-    * jump __label3 always
+   44 jump __label32 greaterThan n 0
    45 label __label5
    46 print "Item Counter\n[salmon]No memory attached."
    47 printflush message1
 
    75 set n FIRST_BLOCK
    76 label __label16
    77 jump __label18 greaterThanEq n @links
+   78 label __label33
    79 getlink block n
    80 noop
    81 op add n n 1
 
   130 noop
   131 label __label20
   132 label __label17
-    * jump __label16 always
+  133 jump __label33 lessThan n @links
   134 label __label18
   135 op sub __tmp44 @time startTime
   136 op floor elapsed __tmp44
 
   176 set n 0
   177 label __label29
   178 jump __label31 greaterThanEq n @links
+  179 label __label34
   180 write 0 MEMORY n
   181 op add n n 1
   182 noop
   183 label __label30
-    * jump __label29 always
+  184 jump __label34 lessThan n @links
   185 label __label31
   186 end

Modifications by Loop Optimization: replicate condition at line 39 (+1 instructions):
 
    70 label __label13
    71 sensor __tmp17 switch1 @enabled
    72 jump __label15 notEqual __tmp17 0
+   73 label __label35
    74 set start @time
    75 noop
    76 set n FIRST_BLOCK
 
   170 print " ms"
   171 printflush message1
   172 label __label14
-    * jump __label13 always
+  173 sensor __tmp17 switch1 @enabled
+  174 jump __label35 equal __tmp17 0
   175 label __label15
   176 control enabled switch1 0
   177 write 0 MEMORY lastCell

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    75 noop
    76 set n FIRST_BLOCK
    77 label __label16
-    * jump __label18 greaterThanEq n @links
+   78 jump __label18 greaterThanEq FIRST_BLOCK @links
    79 label __label33
    80 getlink block n
    81 noop
 
   177 write 0 MEMORY lastCell
   178 set n 0
   179 label __label29
-    * jump __label31 greaterThanEq n @links
+  180 jump __label31 greaterThanEq 0 @links
   181 label __label34
   182 write 0 MEMORY n
   183 op add n n 1

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   153 print "Item Counter                  \n"
   154 print "Total items: [gold]"
   155 print total
-    * print "[]\n"
-    * print "Rate: [green]"
+  156 print "[]\nRate: [green]"
   157 print ratePerMin
-    * print "[] items/min\n"
-    * print "Batch size: [green]"
+  158 print "[] items/min\nBatch size: [green]"
   159 print batch
-    * print "[]\n"
-    * print "Batch time: [gold]"
+  160 print "[]\nBatch time: [gold]"
   161 print elapsed
-    * print "[] ms\n"
   162 op sub __tmp52 @time start
   163 op floor __tmp53 __tmp52
-    * print "[lightgray]Loop time: "
+  164 print "[] ms\n[lightgray]Loop time: "
   165 print __tmp53
   166 print " ms"
   167 printflush message1

Final code before resolving virtual instructions:

set MIN_BATCH 10
set MAX_BATCH 1000
set lastCell 0
label __label0
set MEMORY null
set FIRST_BLOCK @links
set n @links
jump __label5 lessThanEq n 0
label __label32
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @memory-cell
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @memory-bank
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __ast0 @plastanium-conveyor
set FIRST_BLOCK n
label __label11
label __label6
jump __label32 greaterThan n 0
label __label5
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 equal MEMORY null
read total MEMORY 0
set BATCH_DURATION 2000
op max __tmp9 MIN_BATCH 10
op idiv __tmp10 __tmp9 10
op mul MIN_BATCH __tmp10 10
op max __tmp12 MAX_BATCH MIN_BATCH
op idiv __tmp13 __tmp12 10
op mul MAX_BATCH __tmp13 10
set BATCH_STEP 10
set batch MIN_BATCH
set startTime @time
set ratePerMin 0
op add limit total MIN_BATCH
control enabled switch1 0 0 0 0
sensor __tmp17 switch1 @enabled
jump __label15 notEqual __tmp17 0
label __label35
set start @time
set n FIRST_BLOCK
jump __label18 greaterThanEq FIRST_BLOCK @links
label __label33
getlink block n
op add n n 1
sensor __tmp23 block @type
jump __label19 notEqual __tmp23 @plastanium-conveyor
read prev MEMORY n
sensor curr block @totalItems
write curr MEMORY n
jump __label21 greaterThanEq curr prev
op add total total 10
write total MEMORY 0
jump __label23 lessThanEq total limit
op sub duration @time startTime
set startTime @time
op add limit limit batch
op div rate batch duration
op mul __tmp37 rate 16.666666666666668
write __tmp37 MEMORY lastCell
op idiv ratePerMin rate 0.000016666666666666667
jump __label25 greaterThan duration BATCH_DURATION
op add __tmp42 batch BATCH_STEP
op min batch __tmp42 MAX_BATCH
label __label25
label __label23
label __label21
label __label19
jump __label33 lessThan n @links
label __label18
op sub __tmp44 @time startTime
op floor elapsed __tmp44 0
jump __label27 lessThan elapsed 10000
op idiv __tmp48 batch 90
op mul __tmp49 __tmp48 10
op max batch __tmp49 MIN_BATCH
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label27
print "Item Counter                  \n"
print "Total items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\nBatch size: [green]"
print batch
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp52 @time start
op floor __tmp53 __tmp52 0
print "[] ms\n[lightgray]Loop time: "
print __tmp53
print " ms"
printflush message1
sensor __tmp17 switch1 @enabled
jump __label35 equal __tmp17 0
label __label15
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
set n 0
jump __label31 greaterThanEq 0 @links
label __label34
write 0 MEMORY n
op add n n 1
jump __label34 lessThan n @links
label __label31
end
