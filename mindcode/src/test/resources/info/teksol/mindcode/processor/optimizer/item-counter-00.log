   162 instructions before optimizations.
    26 instructions eliminated by Temp Variables Elimination.
    14 instructions eliminated by Dead Code Elimination (6 iterations).
    10 instructions eliminated by Jump Optimization (3 iterations).
     6 instructions eliminated by Single Step Elimination (4 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
    10 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     4 loops improved by Loop Optimization.
     3 instructions eliminated by Jump Straightening (3 iterations).
     4 instructions eliminated by Print Merging.
    89 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 908):
  * Loop Optimization: replicate condition at line 39            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-26 instructions):
 
     2 set lastCell 0
     3 label __label0
     4 set MEMORY null
-    * set __tmp0 @links
-    * set FIRST_BLOCK __tmp0
-    * set __tmp1 @links
-    * set n __tmp1
+    5 set FIRST_BLOCK @links
+    6 set n @links
     7 label __label3
     8 op greaterThan __tmp2 n 0
     9 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   10 op sub n n 1
+   11 getlink block n
+   12 sensor __ast0 block @type
    13 jump __label8 equal __ast0 @memory-cell
    14 jump __label7 always
    15 label __label8
 
    44 op equal __tmp7 MEMORY null
    45 jump __label0 notEqual __tmp7 false
    46 label __label2
-    * read __tmp8 MEMORY 0
-    * set total __tmp8
+   47 read total MEMORY 0
    48 set BATCH_DURATION 2000
    49 op max __tmp9 MIN_BATCH 10
    50 op idiv __tmp10 __tmp9 10
-    * op mul __tmp11 __tmp10 10
-    * set MIN_BATCH __tmp11
+   51 op mul MIN_BATCH __tmp10 10
    52 op max __tmp12 MAX_BATCH MIN_BATCH
    53 op idiv __tmp13 __tmp12 10
-    * op mul __tmp14 __tmp13 10
-    * set MAX_BATCH __tmp14
+   54 op mul MAX_BATCH __tmp13 10
    55 set BATCH_STEP 10
    56 set batch MIN_BATCH
-    * set __tmp15 @time
-    * set startTime __tmp15
+   57 set startTime @time
    58 set ratePerMin 0
-    * op add __tmp16 total batch
-    * set limit __tmp16
+   59 op add limit total batch
    60 control enabled switch1 0
    61 label __label13
    62 sensor __tmp17 switch1 @enabled
    63 op equal __tmp18 __tmp17 0
    64 jump __label15 equal __tmp18 false
-    * set __tmp19 @time
-    * set start __tmp19
+   65 set start @time
    66 set n FIRST_BLOCK
    67 label __label16
    68 op lessThan __tmp20 n @links
    69 jump __label18 equal __tmp20 false
-    * getlink __tmp21 n
-    * set block __tmp21
-    * op add __tmp22 n 1
-    * set n __tmp22
+   70 getlink block n
+   71 op add n n 1
    72 sensor __tmp23 block @type
    73 op equal __tmp24 __tmp23 @plastanium-conveyor
    74 jump __label19 equal __tmp24 false
-    * read __tmp26 MEMORY n
-    * set prev __tmp26
-    * sensor __tmp27 block @totalItems
-    * set curr __tmp27
+   75 read prev MEMORY n
+   76 sensor curr block @totalItems
    77 write curr MEMORY n
    78 op lessThan __tmp28 curr prev
    79 jump __label21 equal __tmp28 false
-    * op add __tmp30 total 10
-    * set total __tmp30
+   80 op add total total 10
    81 write total MEMORY 0
    82 op greaterThan __tmp31 total limit
    83 jump __label23 equal __tmp31 false
-    * op sub __tmp33 @time startTime
-    * set duration __tmp33
-    * set __tmp34 @time
-    * set startTime __tmp34
-    * op add __tmp35 limit batch
-    * set limit __tmp35
-    * op div __tmp36 batch duration
-    * set rate __tmp36
+   84 op sub duration @time startTime
+   85 set startTime @time
+   86 op add limit limit batch
+   87 op div rate batch duration
    88 op mul __tmp37 rate 16.666666666666668
    89 write __tmp37 MEMORY lastCell
    90 op mul __tmp38 rate 60000
-    * op floor __tmp39 __tmp38
-    * set ratePerMin __tmp39
+   91 op floor ratePerMin __tmp38
    92 op lessThanEq __tmp40 duration BATCH_DURATION
    93 jump __label25 equal __tmp40 false
    94 op add __tmp42 batch BATCH_STEP
-    * op min __tmp43 __tmp42 MAX_BATCH
-    * set batch __tmp43
+   95 op min batch __tmp42 MAX_BATCH
    96 set __tmp41 batch
    97 jump __label26 always
    98 label __label25
 
   117 jump __label16 always
   118 label __label18
   119 op sub __tmp44 @time startTime
-    * op floor __tmp45 __tmp44
-    * set elapsed __tmp45
+  120 op floor elapsed __tmp44
   121 op greaterThanEq __tmp46 elapsed 10000
   122 jump __label27 equal __tmp46 false
   123 op idiv __tmp48 batch 90
   124 op mul __tmp49 __tmp48 10
-    * op max __tmp50 __tmp49 MIN_BATCH
-    * set batch __tmp50
+  125 op max batch __tmp49 MIN_BATCH
   126 write 0 MEMORY lastCell
   127 set ratePerMin 0
-    * set __tmp51 @time
-    * set startTime __tmp51
+  128 set startTime @time
   129 set __tmp47 startTime
   130 jump __label28 always
   131 label __label27
 
   160 op lessThan __tmp54 n @links
   161 jump __label31 equal __tmp54 false
   162 write 0 MEMORY n
-    * op add __tmp55 n 1
-    * set n __tmp55
+  163 op add n n 1
   164 label __label30
   165 jump __label29 always
   166 label __label31

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-8 instructions):
 
    15 label __label8
    16 set MEMORY block
    17 set lastCell 63
-    * set __tmp6 lastCell
    18 jump __label6 always
    19 label __label7
    20 jump __label10 equal __ast0 @memory-bank
 
    22 label __label10
    23 set MEMORY block
    24 set lastCell 511
-    * set __tmp6 lastCell
    25 jump __label6 always
    26 label __label9
    27 jump __label12 equal __ast0 @plastanium-conveyor
    28 jump __label11 always
    29 label __label12
    30 set FIRST_BLOCK n
-    * set __tmp6 FIRST_BLOCK
    31 jump __label6 always
    32 label __label11
-    * set __tmp6 null
    33 label __label6
    34 label __label4
    35 jump __label3 always
 
   104 label __label21
   105 set __tmp29 null
   106 label __label22
-    * set __tmp25 __tmp29
   107 jump __label20 always
   108 label __label19
-    * set __tmp25 null
   109 label __label20
   110 label __label17
   111 jump __label16 always
 
   120 write 0 MEMORY lastCell
   121 set ratePerMin 0
   122 set startTime @time
-    * set __tmp47 startTime
   123 jump __label28 always
   124 label __label27
-    * set __tmp47 null
   125 label __label28
   126 print "Item Counter                  \n"
   127 print "Total items: [gold]"

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    99 label __label23
   100 set __tmp32 null
   101 label __label24
-    * set __tmp29 __tmp32
   102 jump __label22 always
   103 label __label21
-    * set __tmp29 null
   104 label __label22
   105 jump __label20 always
   106 label __label19

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
    94 label __label25
    95 set __tmp41 null
    96 label __label26
-    * set __tmp32 __tmp41
    97 jump __label24 always
    98 label __label23
-    * set __tmp32 null
    99 label __label24
   100 jump __label22 always
   101 label __label21

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
    89 jump __label25 equal __tmp40 false
    90 op add __tmp42 batch BATCH_STEP
    91 op min batch __tmp42 MAX_BATCH
-    * set __tmp41 batch
    92 jump __label26 always
    93 label __label25
-    * set __tmp41 null
    94 label __label26
    95 jump __label24 always
    96 label __label23

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-3 instructions):
 
    10 op sub n n 1
    11 getlink block n
    12 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @memory-cell
-    * jump __label7 always
+   13 jump __label7 notEqual __ast0 @memory-cell
    14 label __label8
    15 set MEMORY block
    16 set lastCell 63
    17 jump __label6 always
    18 label __label7
-    * jump __label10 equal __ast0 @memory-bank
-    * jump __label9 always
+   19 jump __label9 notEqual __ast0 @memory-bank
    20 label __label10
    21 set MEMORY block
    22 set lastCell 511
    23 jump __label6 always
    24 label __label9
-    * jump __label12 equal __ast0 @plastanium-conveyor
-    * jump __label11 always
+   25 jump __label11 notEqual __ast0 @plastanium-conveyor
    26 label __label12
    27 set FIRST_BLOCK n
    28 jump __label6 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-10 instructions):
 
     5 set FIRST_BLOCK @links
     6 set n @links
     7 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+    8 jump __label5 lessThanEq n 0
     9 op sub n n 1
    10 getlink block n
    11 sensor __ast0 block @type
 
    33 print "Item Counter\n[salmon]No memory attached."
    34 printflush message1
    35 label __label1
-    * op equal __tmp7 MEMORY null
-    * jump __label0 notEqual __tmp7 false
+   36 jump __label0 equal MEMORY null
    37 label __label2
    38 read total MEMORY 0
    39 set BATCH_DURATION 2000
 
    51 control enabled switch1 0
    52 label __label13
    53 sensor __tmp17 switch1 @enabled
-    * op equal __tmp18 __tmp17 0
-    * jump __label15 equal __tmp18 false
+   54 jump __label15 notEqual __tmp17 0
    55 set start @time
    56 set n FIRST_BLOCK
    57 label __label16
-    * op lessThan __tmp20 n @links
-    * jump __label18 equal __tmp20 false
+   58 jump __label18 greaterThanEq n @links
    59 getlink block n
    60 op add n n 1
    61 sensor __tmp23 block @type
-    * op equal __tmp24 __tmp23 @plastanium-conveyor
-    * jump __label19 equal __tmp24 false
+   62 jump __label19 notEqual __tmp23 @plastanium-conveyor
    63 read prev MEMORY n
    64 sensor curr block @totalItems
    65 write curr MEMORY n
-    * op lessThan __tmp28 curr prev
-    * jump __label21 equal __tmp28 false
+   66 jump __label21 greaterThanEq curr prev
    67 op add total total 10
    68 write total MEMORY 0
-    * op greaterThan __tmp31 total limit
-    * jump __label23 equal __tmp31 false
+   69 jump __label23 lessThanEq total limit
    70 op sub duration @time startTime
    71 set startTime @time
    72 op add limit limit batch
 
    75 write __tmp37 MEMORY lastCell
    76 op mul __tmp38 rate 60000
    77 op floor ratePerMin __tmp38
-    * op lessThanEq __tmp40 duration BATCH_DURATION
-    * jump __label25 equal __tmp40 false
+   78 jump __label25 greaterThan duration BATCH_DURATION
    79 op add __tmp42 batch BATCH_STEP
    80 op min batch __tmp42 MAX_BATCH
    81 jump __label26 always
 
    95 label __label18
    96 op sub __tmp44 @time startTime
    97 op floor elapsed __tmp44
-    * op greaterThanEq __tmp46 elapsed 10000
-    * jump __label27 equal __tmp46 false
+   98 jump __label27 lessThan elapsed 10000
    99 op idiv __tmp48 batch 90
   100 op mul __tmp49 __tmp48 10
   101 op max batch __tmp49 MIN_BATCH
 
   131 write 0 MEMORY lastCell
   132 set n 0
   133 label __label29
-    * op lessThan __tmp54 n @links
-    * jump __label31 equal __tmp54 false
+  134 jump __label31 greaterThanEq n @links
   135 write 0 MEMORY n
   136 op add n n 1
   137 label __label30

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    24 jump __label11 notEqual __ast0 @plastanium-conveyor
    25 label __label12
    26 set FIRST_BLOCK n
-    * jump __label6 always
    27 label __label11
    28 label __label6
    29 label __label4
 
    77 jump __label25 greaterThan duration BATCH_DURATION
    78 op add __tmp42 batch BATCH_STEP
    79 op min batch __tmp42 MAX_BATCH
-    * jump __label26 always
    80 label __label25
    81 label __label26
-    * jump __label24 always
    82 label __label23
    83 label __label24
-    * jump __label22 always
    84 label __label21
    85 label __label22
-    * jump __label20 always
    86 label __label19
    87 label __label20
    88 label __label17
 
    97 write 0 MEMORY lastCell
    98 set ratePerMin 0
    99 set startTime @time
-    * jump __label28 always
   100 label __label27
   101 label __label28
   102 print "Item Counter                  \n"

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    72 op div rate batch duration
    73 op mul __tmp37 rate 16.666666666666668
    74 write __tmp37 MEMORY lastCell
-    * op mul __tmp38 rate 60000
-    * op floor ratePerMin __tmp38
+   75 op idiv ratePerMin rate 0.000016666666666666667
    76 jump __label25 greaterThan duration BATCH_DURATION
    77 op add __tmp42 batch BATCH_STEP
    78 op min batch __tmp42 MAX_BATCH

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    36 label __label2
    37 read total MEMORY 0
    38 set BATCH_DURATION 2000
-    * op max __tmp9 MIN_BATCH 10
-    * op idiv __tmp10 __tmp9 10
-    * op mul MIN_BATCH __tmp10 10
-    * op max __tmp12 MAX_BATCH MIN_BATCH
-    * op idiv __tmp13 __tmp12 10
-    * op mul MAX_BATCH __tmp13 10
+   39 op max __tmp9 10 10
+   40 op idiv __tmp10 10 10
+   41 op mul MIN_BATCH 1 10
+   42 op max __tmp12 1000 10
+   43 op idiv __tmp13 1000 10
+   44 op mul MAX_BATCH 100 10
    45 set BATCH_STEP 10
-    * set batch MIN_BATCH
+   46 set batch 10
    47 set startTime @time
    48 set ratePerMin 0
-    * op add limit total batch
+   49 op add limit total MIN_BATCH
    50 control enabled switch1 0
    51 label __label13
    52 sensor __tmp17 switch1 @enabled
 
    73 op mul __tmp37 rate 16.666666666666668
    74 write __tmp37 MEMORY lastCell
    75 op idiv ratePerMin rate 0.000016666666666666667
-    * jump __label25 greaterThan duration BATCH_DURATION
-    * op add __tmp42 batch BATCH_STEP
-    * op min batch __tmp42 MAX_BATCH
+   76 jump __label25 greaterThan duration 2000
+   77 op add __tmp42 batch 10
+   78 op min batch __tmp42 1000
    79 label __label25
    80 label __label26
    81 label __label23
 
    92 jump __label27 lessThan elapsed 10000
    93 op idiv __tmp48 batch 90
    94 op mul __tmp49 __tmp48 10
-    * op max batch __tmp49 MIN_BATCH
+   95 op max batch __tmp49 10
    96 write 0 MEMORY lastCell
    97 set ratePerMin 0
    98 set startTime @time

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
-    * set MIN_BATCH 10
-    * set MAX_BATCH 1000
     0 set lastCell 0
     1 label __label0
     2 set MEMORY null
 
    33 jump __label0 equal MEMORY null
    34 label __label2
    35 read total MEMORY 0
-    * set BATCH_DURATION 2000
-    * op max __tmp9 10 10
-    * op idiv __tmp10 10 10
    36 op mul MIN_BATCH 1 10
-    * op max __tmp12 1000 10
-    * op idiv __tmp13 1000 10
-    * op mul MAX_BATCH 100 10
-    * set BATCH_STEP 10
    37 set batch 10
    38 set startTime @time
    39 set ratePerMin 0
-    * op add limit total MIN_BATCH
+   40 op add limit total 10
    41 control enabled switch1 0
    42 label __label13
    43 sensor __tmp17 switch1 @enabled

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
    33 jump __label0 equal MEMORY null
    34 label __label2
    35 read total MEMORY 0
-    * op mul MIN_BATCH 1 10
    36 set batch 10
    37 set startTime @time
    38 set ratePerMin 0

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     4 set n @links
     5 label __label3
     6 jump __label5 lessThanEq n 0
+    7 label __label32
     8 op sub n n 1
     9 getlink block n
    10 sensor __ast0 block @type
 
    26 label __label11
    27 label __label6
    28 label __label4
-    * jump __label3 always
+   29 jump __label32 greaterThan n 0
    30 label __label5
    31 print "Item Counter\n[salmon]No memory attached."
    32 printflush message1
 
    46 set n FIRST_BLOCK
    47 label __label16
    48 jump __label18 greaterThanEq n @links
+   49 label __label33
    50 getlink block n
    51 op add n n 1
    52 sensor __tmp23 block @type
 
    77 label __label19
    78 label __label20
    79 label __label17
-    * jump __label16 always
+   80 jump __label33 lessThan n @links
    81 label __label18
    82 op sub __tmp44 @time startTime
    83 op floor elapsed __tmp44
 
   117 set n 0
   118 label __label29
   119 jump __label31 greaterThanEq n @links
+  120 label __label34
   121 write 0 MEMORY n
   122 op add n n 1
   123 label __label30
-    * jump __label29 always
+  124 jump __label34 lessThan n @links
   125 label __label31
   126 end

Modifications by Loop Optimization: replicate condition at line 39 (+1 instructions):
 
    42 label __label13
    43 sensor __tmp17 switch1 @enabled
    44 jump __label15 notEqual __tmp17 0
+   45 label __label35
    46 set start @time
    47 set n FIRST_BLOCK
    48 label __label16
 
   111 print " ms"
   112 printflush message1
   113 label __label14
-    * jump __label13 always
+  114 sensor __tmp17 switch1 @enabled
+  115 jump __label35 equal __tmp17 0
   116 label __label15
   117 control enabled switch1 0
   118 write 0 MEMORY lastCell

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    46 set start @time
    47 set n FIRST_BLOCK
    48 label __label16
-    * jump __label18 greaterThanEq n @links
+   49 jump __label18 greaterThanEq FIRST_BLOCK @links
    50 label __label33
    51 getlink block n
    52 op add n n 1
 
   118 write 0 MEMORY lastCell
   119 set n 0
   120 label __label29
-    * jump __label31 greaterThanEq n @links
+  121 jump __label31 greaterThanEq 0 @links
   122 label __label34
   123 write 0 MEMORY n
   124 op add n n 1

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
    94 print "Item Counter                  \n"
    95 print "Total items: [gold]"
    96 print total
-    * print "[]\n"
-    * print "Rate: [green]"
+   97 print "[]\nRate: [green]"
    98 print ratePerMin
-    * print "[] items/min\n"
-    * print "Batch size: [green]"
+   99 print "[] items/min\nBatch size: [green]"
   100 print batch
-    * print "[]\n"
-    * print "Batch time: [gold]"
+  101 print "[]\nBatch time: [gold]"
   102 print elapsed
-    * print "[] ms\n"
   103 op sub __tmp52 @time start
   104 op floor __tmp53 __tmp52
-    * print "[lightgray]Loop time: "
+  105 print "[] ms\n[lightgray]Loop time: "
   106 print __tmp53
   107 print " ms"
   108 printflush message1

Final code before resolving virtual instructions:

set lastCell 0
label __label0
set MEMORY null
set FIRST_BLOCK @links
set n @links
jump __label5 lessThanEq n 0
label __label32
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @memory-cell
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @memory-bank
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __ast0 @plastanium-conveyor
set FIRST_BLOCK n
label __label11
label __label6
jump __label32 greaterThan n 0
label __label5
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 equal MEMORY null
read total MEMORY 0
set batch 10
set startTime @time
set ratePerMin 0
op add limit total 10
control enabled switch1 0 0 0 0
sensor __tmp17 switch1 @enabled
jump __label15 notEqual __tmp17 0
label __label35
set start @time
set n FIRST_BLOCK
jump __label18 greaterThanEq FIRST_BLOCK @links
label __label33
getlink block n
op add n n 1
sensor __tmp23 block @type
jump __label19 notEqual __tmp23 @plastanium-conveyor
read prev MEMORY n
sensor curr block @totalItems
write curr MEMORY n
jump __label21 greaterThanEq curr prev
op add total total 10
write total MEMORY 0
jump __label23 lessThanEq total limit
op sub duration @time startTime
set startTime @time
op add limit limit batch
op div rate batch duration
op mul __tmp37 rate 16.666666666666668
write __tmp37 MEMORY lastCell
op idiv ratePerMin rate 0.000016666666666666667
jump __label25 greaterThan duration 2000
op add __tmp42 batch 10
op min batch __tmp42 1000
label __label25
label __label23
label __label21
label __label19
jump __label33 lessThan n @links
label __label18
op sub __tmp44 @time startTime
op floor elapsed __tmp44 0
jump __label27 lessThan elapsed 10000
op idiv __tmp48 batch 90
op mul __tmp49 __tmp48 10
op max batch __tmp49 10
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label27
print "Item Counter                  \n"
print "Total items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\nBatch size: [green]"
print batch
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp52 @time start
op floor __tmp53 __tmp52 0
print "[] ms\n[lightgray]Loop time: "
print __tmp53
print " ms"
printflush message1
sensor __tmp17 switch1 @enabled
jump __label35 equal __tmp17 0
label __label15
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
set n 0
jump __label31 greaterThanEq 0 @links
label __label34
write 0 MEMORY n
op add n n 1
jump __label34 lessThan n @links
label __label31
end
