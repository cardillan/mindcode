   313 instructions before optimizations.
    37 instructions eliminated by Temp Variables Elimination.
    25 instructions eliminated by Dead Code Elimination (5 iterations).
    22 instructions eliminated by Jump Optimization (4 iterations).
    11 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     6 instructions eliminated by If Expression Optimization (3 iterations).
     6 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
     4 instructions eliminated by Jump Straightening (4 iterations).
     6 instructions eliminated by Print Merging.
   197 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 794):
  * Loop Optimization: replicate condition at line 90            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-37 instructions):
 
     8 jump __label2 equal __tmp0 false
     9 print "Mass Driver Monitor"
    10 print "\n"
-    * set __tmp1 @links
-    * set n __tmp1
+   11 set n @links
+   12 noop
    13 label __label3
    14 op greaterThan __tmp2 n 0
    15 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
+   16 op sub n n 1
+   17 noop
+   18 getlink block n
+   19 noop
    20 print "Found: "
    21 print block
    22 print "\n"
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   23 sensor __ast0 block @type
+   24 noop
    25 jump __label8 equal __ast0 @message
    26 jump __label7 always
    27 label __label8
 
    94 set clx 0
    95 set crx clx
    96 op add __tmp12 OFFSET_X BAR_SPACE
-    * op sub __tmp13 __tmp12 2
-    * set clw __tmp13
+   97 op sub clw __tmp12 2
+   98 noop
    99 set crw clw
   100 op equal __tmp14 FROM_INDEX 0
   101 jump __label19 equal __tmp14 false
 
   103 jump __label20 always
   104 label __label19
   105 op mul __tmp16 FROM_INDEX BAR_GAP
-    * op add __tmp17 OFFSET_Y __tmp16
-    * set __tmp15 __tmp17
+  106 op add __tmp15 OFFSET_Y __tmp16
+  107 noop
   108 label __label20
   109 set cly __tmp15
   110 set cry cly
   111 op lessThan __tmp18 TO_INDEX 8
   112 jump __label21 equal __tmp18 false
   113 op mul __tmp20 TO_INDEX BAR_GAP
-    * op add __tmp21 OFFSET_Y __tmp20
-    * set __tmp19 __tmp21
+  114 op add __tmp19 OFFSET_Y __tmp20
+  115 noop
   116 jump __label22 always
   117 label __label21
   118 set __tmp19 176
   119 label __label22
-    * op sub __tmp22 __tmp19 cly
-    * set clh __tmp22
+  120 op sub clh __tmp19 cly
+  121 noop
   122 set crh clh
   123 set __tmp11 crh
   124 jump __label18 always
 
   132 op greaterThanEq __tmp23 FROM_INDEX 8
   133 jump __label23 equal __tmp23 false
   134 op add __tmp25 OFFSET_X BAR_SPACE
-    * op sub __tmp26 __tmp25 2
-    * set clx __tmp26
+  135 op sub clx __tmp25 2
+  136 noop
   137 set crx clx
   138 op add __tmp27 OFFSET_X BAR_SPACE
   139 op sub __tmp28 176 __tmp27
-    * op add __tmp29 __tmp28 1
-    * set clw __tmp29
+  140 op add clw __tmp28 1
+  141 noop
   142 set crw clw
   143 op mod __tmp30 FROM_INDEX 8
   144 op equal __tmp31 __tmp30 0
 
   148 label __label25
   149 op mod __tmp33 FROM_INDEX 8
   150 op mul __tmp34 __tmp33 BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp34
-    * set __tmp32 __tmp35
+  151 op add __tmp32 OFFSET_Y __tmp34
+  152 noop
   153 label __label26
   154 set cly __tmp32
   155 set cry cly
 
   157 jump __label27 equal __tmp36 false
   158 op mod __tmp38 TO_INDEX 8
   159 op mul __tmp39 __tmp38 BAR_GAP
-    * op add __tmp40 OFFSET_Y __tmp39
-    * set __tmp37 __tmp40
+  160 op add __tmp37 OFFSET_Y __tmp39
+  161 noop
   162 jump __label28 always
   163 label __label27
   164 set __tmp37 176
   165 label __label28
-    * op sub __tmp41 __tmp37 cry
-    * set clh __tmp41
+  166 op sub clh __tmp37 cry
+  167 noop
   168 set crh clh
   169 set __tmp24 crh
   170 jump __label24 always
 
   172 set clx 0
   173 set crx clx
   174 op add __tmp42 OFFSET_X BAR_SPACE
-    * op sub __tmp43 __tmp42 2
-    * set clw __tmp43
+  175 op sub clw __tmp42 2
+  176 noop
   177 set crw clw
   178 op equal __tmp44 FROM_INDEX 0
   179 jump __label29 equal __tmp44 false
 
   181 jump __label30 always
   182 label __label29
   183 op mul __tmp46 FROM_INDEX BAR_GAP
-    * op add __tmp47 OFFSET_Y __tmp46
-    * set __tmp45 __tmp47
+  184 op add __tmp45 OFFSET_Y __tmp46
+  185 noop
   186 label __label30
   187 set cly __tmp45
   188 set cry cly
   189 op lessThan __tmp48 TO_INDEX 8
   190 jump __label31 equal __tmp48 false
   191 op mul __tmp50 TO_INDEX BAR_GAP
-    * op add __tmp51 OFFSET_Y __tmp50
-    * set __tmp49 __tmp51
+  192 op add __tmp49 OFFSET_Y __tmp50
+  193 noop
   194 jump __label32 always
   195 label __label31
   196 set __tmp49 176
   197 label __label32
-    * op sub __tmp52 __tmp49 cly
-    * set clh __tmp52
+  198 op sub clh __tmp49 cly
+  199 noop
   200 set crh clh
   201 op greaterThanEq __tmp53 TO_INDEX 8
   202 jump __label33 equal __tmp53 false
   203 op add __tmp55 OFFSET_X BAR_SPACE
-    * op sub __tmp56 __tmp55 2
-    * set crx __tmp56
+  204 op sub crx __tmp55 2
+  205 noop
   206 op add __tmp57 OFFSET_X BAR_SPACE
   207 op sub __tmp58 176 __tmp57
-    * op add __tmp59 __tmp58 1
-    * set crw __tmp59
+  208 op add crw __tmp58 1
+  209 noop
   210 set cry 0
   211 op lessThan __tmp60 TO_INDEX 16
   212 jump __label35 equal __tmp60 false
   213 op mod __tmp62 TO_INDEX 8
   214 op mul __tmp63 __tmp62 BAR_GAP
-    * op add __tmp64 OFFSET_Y __tmp63
-    * set __tmp61 __tmp64
+  215 op add __tmp61 OFFSET_Y __tmp63
+  216 noop
   217 jump __label36 always
   218 label __label35
   219 set __tmp61 176
   220 label __label36
-    * op sub __tmp65 __tmp61 cry
-    * set crh __tmp65
+  221 op sub crh __tmp61 cry
+  222 noop
   223 set __tmp54 crh
   224 jump __label34 always
   225 label __label33
 
   229 label __label24
   230 set __tmp11 __tmp24
   231 label __label18
-    * op idiv __tmp66 BAR_LENGTH 2
-    * set HALF_BAR __tmp66
+  232 op idiv HALF_BAR BAR_LENGTH 2
+  233 noop
   234 set MAX CAPACITY
-    * op div __tmp67 BAR_LENGTH MAX
-    * set MUL __tmp67
+  235 op div MUL BAR_LENGTH MAX
+  236 noop
   237 op notEqual __tmp68 MEMORY null
   238 jump __label37 equal __tmp68 false
   239 set n 0
 
   242 jump __label41 equal __tmp70 false
   243 write 0 MEMORY n
   244 label __label40
-    * op add __tmp71 n 1
-    * set n __tmp71
+  245 op add n n 1
+  246 noop
   247 jump __label39 always
   248 label __label41
   249 set __tmp69 null
 
   256 sensor __tmp72 SWITCH @enabled
   257 op equal __tmp73 __tmp72 0
   258 jump __label44 equal __tmp73 false
-    * set __tmp74 @time
-    * set start __tmp74
+  259 set start @time
+  260 noop
   261 draw color 0 0 80 255
   262 draw rect clx cly clw clh
   263 draw rect crx cry crw crh
 
   267 label __label45
   268 op lessThan __tmp75 n @links
   269 jump __label47 equal __tmp75 false
-    * getlink __tmp76 n
-    * set driver __tmp76
+  270 getlink driver n
+  271 noop
   272 sensor __tmp77 driver @type
   273 op equal __tmp78 __tmp77 @mass-driver
   274 jump __label48 equal __tmp78 false
-    * op idiv __tmp80 index COLUMN_SIZE
-    * set column __tmp80
-    * op mod __tmp81 index COLUMN_SIZE
-    * set row __tmp81
+  275 op idiv column index COLUMN_SIZE
+  276 noop
+  277 op mod row index COLUMN_SIZE
+  278 noop
   279 op mul __tmp82 column BAR_SPACE
-    * op add __tmp83 OFFSET_X __tmp82
-    * set x __tmp83
+  280 op add x OFFSET_X __tmp82
+  281 noop
   282 op mul __tmp84 row BAR_GAP
-    * op add __tmp85 OFFSET_Y __tmp84
-    * set y __tmp85
+  283 op add y OFFSET_Y __tmp84
+  284 noop
   285 draw color 0 0 80 255
   286 op sub __tmp86 x 1
   287 op sub __tmp87 y 1
 
   290 op add __tmp88 x 7
   291 op add __tmp89 y 7
   292 draw image __tmp88 __tmp89 @mass-driver 16 0
-    * op add __tmp90 x 16
-    * set x __tmp90
-    * sensor __tmp91 driver @totalItems
-    * set items __tmp91
+  293 op add x x 16
+  294 noop
+  295 sensor items driver @totalItems
+  296 noop
   297 read __tmp92 MEMORY n
-    * op max __tmp93 __tmp92 items
-    * set maxx __tmp93
+  298 op max maxx __tmp92 items
+  299 noop
   300 write maxx MEMORY n
   301 op greaterThan __tmp94 maxx MAX
   302 jump __label50 equal __tmp94 false
-    * op mul __tmp96 2 CAPACITY
-    * set MAX __tmp96
-    * op div __tmp97 BAR_LENGTH MAX
-    * set MUL __tmp97
+  303 op mul MAX 2 CAPACITY
+  304 noop
+  305 op div MUL BAR_LENGTH MAX
+  306 noop
   307 set __tmp95 MUL
   308 jump __label51 always
   309 label __label50
 
   343 draw lineRect __tmp106 y HALF_BAR BAR_WIDTH
   344 set __tmp105 null
   345 label __label57
-    * op add __tmp107 index 1
-    * set index __tmp107
+  346 op add index index 1
+  347 noop
   348 set __tmp79 index
   349 jump __label49 always
   350 label __label48
   351 set __tmp79 null
   352 label __label49
   353 label __label46
-    * op add __tmp108 n 1
-    * set n __tmp108
+  354 op add n n 1
+  355 noop
   356 jump __label45 always
   357 label __label47
   358 drawflush DISPLAY

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-21 instructions):
 
    26 jump __label7 always
    27 label __label8
    28 set MESSAGE block
-    * set __tmp6 MESSAGE
+   29 noop
    30 jump __label6 always
    31 label __label7
    32 jump __label10 equal __ast0 @switch
    33 jump __label9 always
    34 label __label10
    35 set SWITCH block
-    * set __tmp6 SWITCH
+   36 noop
    37 jump __label6 always
    38 label __label9
    39 jump __label12 equal __ast0 @logic-display
 
    41 jump __label11 always
    42 label __label12
    43 set DISPLAY block
-    * set __tmp6 DISPLAY
+   44 noop
    45 jump __label6 always
    46 label __label11
    47 jump __label14 equal __ast0 @memory-bank
 
    49 jump __label13 always
    50 label __label14
    51 set MEMORY block
-    * set __tmp6 MEMORY
+   52 noop
    53 jump __label6 always
    54 label __label13
-    * set __tmp6 null
+   55 noop
    56 label __label6
    57 label __label4
    58 jump __label3 always
 
    73 jump __label15 equal __tmp7 false
    74 print "No display."
    75 print "\n"
-    * set __tmp8 "No display."
+   76 noop
    77 jump __label16 always
    78 label __label15
-    * set __tmp8 null
+   79 noop
    80 label __label16
    81 printflush MESSAGE
    82 label __label1
 
   120 op sub clh __tmp19 cly
   121 noop
   122 set crh clh
-    * set __tmp11 crh
+  123 noop
   124 jump __label18 always
   125 label __label17
   126 set OFFSET_X 5
 
   227 label __label34
   228 set __tmp24 __tmp54
   229 label __label24
-    * set __tmp11 __tmp24
+  230 noop
   231 label __label18
   232 op idiv HALF_BAR BAR_LENGTH 2
   233 noop
 
   246 noop
   247 jump __label39 always
   248 label __label41
-    * set __tmp69 null
+  249 noop
   250 jump __label38 always
   251 label __label37
-    * set __tmp69 null
+  252 noop
   253 label __label38
   254 control enabled SWITCH 0
   255 label __label42
 
   304 noop
   305 op div MUL BAR_LENGTH MAX
   306 noop
-    * set __tmp95 MUL
+  307 noop
   308 jump __label51 always
   309 label __label50
-    * set __tmp95 null
+  310 noop
   311 label __label51
   312 op lessThanEq __tmp98 MAX CAPACITY
   313 jump __label52 equal __tmp98 false
   314 draw color 0 128 0 255
-    * set __tmp99 null
+  315 noop
   316 jump __label53 always
   317 label __label52
   318 draw color 128 128 0 255
-    * set __tmp99 null
+  319 noop
   320 label __label53
   321 op mul __tmp100 items MUL
   322 draw rect x y __tmp100 BAR_WIDTH
 
   325 draw color 220 220 220 255
   326 op mul __tmp103 maxx MUL
   327 draw lineRect x y __tmp103 BAR_WIDTH
-    * set __tmp102 null
+  328 noop
   329 jump __label55 always
   330 label __label54
-    * set __tmp102 null
+  331 noop
   332 label __label55
   333 op lessThanEq __tmp104 MAX CAPACITY
   334 jump __label56 equal __tmp104 false
   335 draw color 0 255 0 255
   336 draw lineRect x y BAR_LENGTH BAR_WIDTH
-    * set __tmp105 null
+  337 noop
   338 jump __label57 always
   339 label __label56
   340 draw color 255 255 0 255
   341 draw lineRect x y HALF_BAR BAR_WIDTH
   342 op add __tmp106 x HALF_BAR
   343 draw lineRect __tmp106 y HALF_BAR BAR_WIDTH
-    * set __tmp105 null
+  344 noop
   345 label __label57
   346 op add index index 1
   347 noop
-    * set __tmp79 index
+  348 noop
   349 jump __label49 always
   350 label __label48
-    * set __tmp79 null
+  351 noop
   352 label __label49
   353 label __label46
   354 op add n n 1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   166 op sub clh __tmp37 cry
   167 noop
   168 set crh clh
-    * set __tmp24 crh
+  169 noop
   170 jump __label24 always
   171 label __label23
   172 set clx 0
 
   225 label __label33
   226 set __tmp54 null
   227 label __label34
-    * set __tmp24 __tmp54
+  228 noop
   229 label __label24
   230 noop
   231 label __label18

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   220 label __label36
   221 op sub crh __tmp61 cry
   222 noop
-    * set __tmp54 crh
+  223 noop
   224 jump __label34 always
   225 label __label33
-    * set __tmp54 null
+  226 noop
   227 label __label34
   228 noop
   229 label __label24

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-4 instructions):
 
    22 print "\n"
    23 sensor __ast0 block @type
    24 noop
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   25 jump __label7 notEqual __ast0 @message
+   26 noop
    27 label __label8
    28 set MESSAGE block
    29 noop
    30 jump __label6 always
    31 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   32 jump __label9 notEqual __ast0 @switch
+   33 noop
    34 label __label10
    35 set SWITCH block
    36 noop
    37 jump __label6 always
    38 label __label9
    39 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   40 jump __label11 notEqual __ast0 @large-logic-display
+   41 noop
    42 label __label12
    43 set DISPLAY block
    44 noop
    45 jump __label6 always
    46 label __label11
    47 jump __label14 equal __ast0 @memory-bank
-    * jump __label14 equal __ast0 @memory-cell
-    * jump __label13 always
+   48 jump __label13 notEqual __ast0 @memory-cell
+   49 noop
    50 label __label14
    51 set MEMORY block
    52 noop

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-22 instructions):
 
     4 set DISPLAY null
     5 set MEMORY null
     6 label __label0
-    * op equal __tmp0 DISPLAY null
-    * jump __label2 equal __tmp0 false
+    7 jump __label2 notEqual DISPLAY null
     8 print "Mass Driver Monitor"
     9 print "\n"
    10 set n @links
    11 noop
    12 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+   13 jump __label5 lessThanEq n 0
    14 op sub n n 1
    15 noop
    16 getlink block n
 
    67 print "Display: "
    68 print DISPLAY
    69 print "\n"
-    * op equal __tmp7 DISPLAY null
-    * jump __label15 equal __tmp7 false
+   70 jump __label15 notEqual DISPLAY null
    71 print "No display."
    72 print "\n"
    73 noop
 
    80 jump __label0 always
    81 label __label2
    82 sensor __tmp9 DISPLAY @type
-    * op equal __tmp10 __tmp9 @logic-display
-    * jump __label17 equal __tmp10 false
+   83 jump __label17 notEqual __tmp9 @logic-display
    84 set OFFSET_X 2
    85 set OFFSET_Y 2
    86 set BAR_WIDTH 14
 
    93 op sub clw __tmp12 2
    94 noop
    95 set crw clw
-    * op equal __tmp14 FROM_INDEX 0
-    * jump __label19 equal __tmp14 false
+   96 jump __label19 notEqual FROM_INDEX 0
    97 set __tmp15 0
    98 jump __label20 always
    99 label __label19
 
   103 label __label20
   104 set cly __tmp15
   105 set cry cly
-    * op lessThan __tmp18 TO_INDEX 8
-    * jump __label21 equal __tmp18 false
+  106 jump __label21 greaterThanEq TO_INDEX 8
   107 op mul __tmp20 TO_INDEX BAR_GAP
   108 op add __tmp19 OFFSET_Y __tmp20
   109 noop
 
   123 set BAR_LENGTH 60
   124 set BAR_SPACE 88
   125 set BAR_GAP 22
-    * op greaterThanEq __tmp23 FROM_INDEX 8
-    * jump __label23 equal __tmp23 false
+  126 jump __label23 lessThan FROM_INDEX 8
   127 op add __tmp25 OFFSET_X BAR_SPACE
   128 op sub clx __tmp25 2
   129 noop
 
   134 noop
   135 set crw clw
   136 op mod __tmp30 FROM_INDEX 8
-    * op equal __tmp31 __tmp30 0
-    * jump __label25 equal __tmp31 false
+  137 jump __label25 notEqual __tmp30 0
   138 set __tmp32 0
   139 jump __label26 always
   140 label __label25
 
   145 label __label26
   146 set cly __tmp32
   147 set cry cly
-    * op lessThan __tmp36 TO_INDEX 16
-    * jump __label27 equal __tmp36 false
+  148 jump __label27 greaterThanEq TO_INDEX 16
   149 op mod __tmp38 TO_INDEX 8
   150 op mul __tmp39 __tmp38 BAR_GAP
   151 op add __tmp37 OFFSET_Y __tmp39
 
   166 op sub clw __tmp42 2
   167 noop
   168 set crw clw
-    * op equal __tmp44 FROM_INDEX 0
-    * jump __label29 equal __tmp44 false
+  169 jump __label29 notEqual FROM_INDEX 0
   170 set __tmp45 0
   171 jump __label30 always
   172 label __label29
 
   176 label __label30
   177 set cly __tmp45
   178 set cry cly
-    * op lessThan __tmp48 TO_INDEX 8
-    * jump __label31 equal __tmp48 false
+  179 jump __label31 greaterThanEq TO_INDEX 8
   180 op mul __tmp50 TO_INDEX BAR_GAP
   181 op add __tmp49 OFFSET_Y __tmp50
   182 noop
 
   187 op sub clh __tmp49 cly
   188 noop
   189 set crh clh
-    * op greaterThanEq __tmp53 TO_INDEX 8
-    * jump __label33 equal __tmp53 false
+  190 jump __label33 lessThan TO_INDEX 8
   191 op add __tmp55 OFFSET_X BAR_SPACE
   192 op sub crx __tmp55 2
   193 noop
 
   196 op add crw __tmp58 1
   197 noop
   198 set cry 0
-    * op lessThan __tmp60 TO_INDEX 16
-    * jump __label35 equal __tmp60 false
+  199 jump __label35 greaterThanEq TO_INDEX 16
   200 op mod __tmp62 TO_INDEX 8
   201 op mul __tmp63 __tmp62 BAR_GAP
   202 op add __tmp61 OFFSET_Y __tmp63
 
   221 set MAX CAPACITY
   222 op div MUL BAR_LENGTH MAX
   223 noop
-    * op notEqual __tmp68 MEMORY null
-    * jump __label37 equal __tmp68 false
+  224 jump __label37 equal MEMORY null
   225 set n 0
   226 label __label39
-    * op lessThan __tmp70 n @links
-    * jump __label41 equal __tmp70 false
+  227 jump __label41 greaterThanEq n @links
   228 write 0 MEMORY n
   229 label __label40
   230 op add n n 1
 
   239 control enabled SWITCH 0
   240 label __label42
   241 sensor __tmp72 SWITCH @enabled
-    * op equal __tmp73 __tmp72 0
-    * jump __label44 equal __tmp73 false
+  242 jump __label44 notEqual __tmp72 0
   243 set start @time
   244 noop
   245 draw color 0 0 80 255
 
   249 set index FROM_INDEX
   250 set n 0
   251 label __label45
-    * op lessThan __tmp75 n @links
-    * jump __label47 equal __tmp75 false
+  252 jump __label47 greaterThanEq n @links
   253 getlink driver n
   254 noop
   255 sensor __tmp77 driver @type
-    * op equal __tmp78 __tmp77 @mass-driver
-    * jump __label48 equal __tmp78 false
+  256 jump __label48 notEqual __tmp77 @mass-driver
   257 op idiv column index COLUMN_SIZE
   258 noop
   259 op mod row index COLUMN_SIZE
 
   280 op max maxx __tmp92 items
   281 noop
   282 write maxx MEMORY n
-    * op greaterThan __tmp94 maxx MAX
-    * jump __label50 equal __tmp94 false
+  283 jump __label50 lessThanEq maxx MAX
   284 op mul MAX 2 CAPACITY
   285 noop
   286 op div MUL BAR_LENGTH MAX
 
   290 label __label50
   291 noop
   292 label __label51
-    * op lessThanEq __tmp98 MAX CAPACITY
-    * jump __label52 equal __tmp98 false
+  293 jump __label52 greaterThan MAX CAPACITY
   294 draw color 0 128 0 255
   295 noop
   296 jump __label53 always
 
   300 label __label53
   301 op mul __tmp100 items MUL
   302 draw rect x y __tmp100 BAR_WIDTH
-    * op notEqual __tmp101 MEMORY null
-    * jump __label54 equal __tmp101 false
+  303 jump __label54 equal MEMORY null
   304 draw color 220 220 220 255
   305 op mul __tmp103 maxx MUL
   306 draw lineRect x y __tmp103 BAR_WIDTH
 
   309 label __label54
   310 noop
   311 label __label55
-    * op lessThanEq __tmp104 MAX CAPACITY
-    * jump __label56 equal __tmp104 false
+  312 jump __label56 greaterThan MAX CAPACITY
   313 draw color 0 255 0 255
   314 draw lineRect x y BAR_LENGTH BAR_WIDTH
   315 noop

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-7 instructions):
 
    48 label __label14
    49 set MEMORY block
    50 noop
-    * jump __label6 always
+   51 noop
    52 label __label13
    53 noop
    54 label __label6
 
    71 print "No display."
    72 print "\n"
    73 noop
-    * jump __label16 always
+   74 noop
    75 label __label15
    76 noop
    77 label __label16
 
   208 op sub crh __tmp61 cry
   209 noop
   210 noop
-    * jump __label34 always
+  211 noop
   212 label __label33
   213 noop
   214 label __label34
 
   232 jump __label39 always
   233 label __label41
   234 noop
-    * jump __label38 always
+  235 noop
   236 label __label37
   237 noop
   238 label __label38
 
   286 op div MUL BAR_LENGTH MAX
   287 noop
   288 noop
-    * jump __label51 always
+  289 noop
   290 label __label50
   291 noop
   292 label __label51
 
   305 op mul __tmp103 maxx MUL
   306 draw lineRect x y __tmp103 BAR_WIDTH
   307 noop
-    * jump __label55 always
+  308 noop
   309 label __label54
   310 noop
   311 label __label55
 
   324 op add index index 1
   325 noop
   326 noop
-    * jump __label49 always
+  327 noop
   328 label __label48
   329 noop
   330 label __label49

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-6 instructions):
 
    93 op sub clw __tmp12 2
    94 noop
    95 set crw clw
-    * jump __label19 notEqual FROM_INDEX 0
-    * set __tmp15 0
-    * jump __label20 always
+   96 set cly 0
+   97 jump __label20 equal FROM_INDEX 0
    98 label __label19
    99 op mul __tmp16 FROM_INDEX BAR_GAP
-    * op add __tmp15 OFFSET_Y __tmp16
+  100 op add cly OFFSET_Y __tmp16
   101 noop
   102 label __label20
-    * set cly __tmp15
   103 set cry cly
-    * jump __label21 greaterThanEq TO_INDEX 8
+  104 set __tmp19 176
+  105 jump __label22 greaterThanEq TO_INDEX 8
   106 op mul __tmp20 TO_INDEX BAR_GAP
   107 op add __tmp19 OFFSET_Y __tmp20
   108 noop
   109 jump __label22 always
-    * label __label21
-    * set __tmp19 176
   110 label __label22
   111 op sub clh __tmp19 cly
   112 noop
 
   130 op add clw __tmp28 1
   131 noop
   132 set crw clw
+  133 set cly 0
   134 op mod __tmp30 FROM_INDEX 8
-    * jump __label25 notEqual __tmp30 0
-    * set __tmp32 0
-    * jump __label26 always
+  135 jump __label26 equal __tmp30 0
   136 label __label25
   137 op mod __tmp33 FROM_INDEX 8
   138 op mul __tmp34 __tmp33 BAR_GAP
-    * op add __tmp32 OFFSET_Y __tmp34
+  139 op add cly OFFSET_Y __tmp34
   140 noop
   141 label __label26
-    * set cly __tmp32
   142 set cry cly
-    * jump __label27 greaterThanEq TO_INDEX 16
+  143 set __tmp37 176
+  144 jump __label28 greaterThanEq TO_INDEX 16
   145 op mod __tmp38 TO_INDEX 8
   146 op mul __tmp39 __tmp38 BAR_GAP
   147 op add __tmp37 OFFSET_Y __tmp39
   148 noop
   149 jump __label28 always
-    * label __label27
-    * set __tmp37 176
   150 label __label28
   151 op sub clh __tmp37 cry
   152 noop
 
   160 op sub clw __tmp42 2
   161 noop
   162 set crw clw
-    * jump __label29 notEqual FROM_INDEX 0
-    * set __tmp45 0
-    * jump __label30 always
+  163 set cly 0
+  164 jump __label30 equal FROM_INDEX 0
   165 label __label29
   166 op mul __tmp46 FROM_INDEX BAR_GAP
-    * op add __tmp45 OFFSET_Y __tmp46
+  167 op add cly OFFSET_Y __tmp46
   168 noop
   169 label __label30
-    * set cly __tmp45
   170 set cry cly
-    * jump __label31 greaterThanEq TO_INDEX 8
+  171 set __tmp49 176
+  172 jump __label32 greaterThanEq TO_INDEX 8
   173 op mul __tmp50 TO_INDEX BAR_GAP
   174 op add __tmp49 OFFSET_Y __tmp50
   175 noop
   176 jump __label32 always
-    * label __label31
-    * set __tmp49 176
   177 label __label32
   178 op sub clh __tmp49 cly
   179 noop
 
   187 op add crw __tmp58 1
   188 noop
   189 set cry 0
-    * jump __label35 greaterThanEq TO_INDEX 16
+  190 set __tmp61 176
+  191 jump __label36 greaterThanEq TO_INDEX 16
   192 op mod __tmp62 TO_INDEX 8
   193 op mul __tmp63 __tmp62 BAR_GAP
   194 op add __tmp61 OFFSET_Y __tmp63
   195 noop
   196 jump __label36 always
-    * label __label35
-    * set __tmp61 176
   197 label __label36
   198 op sub crh __tmp61 cry
   199 noop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    88 set BAR_SPACE 80
    89 set BAR_GAP 20
    90 set clx 0
-    * set crx clx
+   91 set crx 0
    92 op add __tmp12 OFFSET_X BAR_SPACE
    93 op sub clw __tmp12 2
    94 noop
 
   126 noop
   127 set crx clx
   128 op add __tmp27 OFFSET_X BAR_SPACE
-    * op sub __tmp28 176 __tmp27
-    * op add clw __tmp28 1
+  129 op sub __tmp28 176 __tmp25
+  130 op sub clw 177 __tmp27
   131 noop
   132 set crw clw
   133 set cly 0
 
   135 jump __label26 equal __tmp30 0
   136 label __label25
   137 op mod __tmp33 FROM_INDEX 8
-    * op mul __tmp34 __tmp33 BAR_GAP
+  138 op mul __tmp34 __tmp30 BAR_GAP
   139 op add cly OFFSET_Y __tmp34
   140 noop
   141 label __label26
 
   148 noop
   149 jump __label28 always
   150 label __label28
-    * op sub clh __tmp37 cry
+  151 op sub clh __tmp37 cly
   152 noop
   153 set crh clh
   154 noop
   155 jump __label24 always
   156 label __label23
   157 set clx 0
-    * set crx clx
+  158 set crx 0
   159 op add __tmp42 OFFSET_X BAR_SPACE
   160 op sub clw __tmp42 2
   161 noop
 
   180 set crh clh
   181 jump __label33 lessThan TO_INDEX 8
   182 op add __tmp55 OFFSET_X BAR_SPACE
-    * op sub crx __tmp55 2
+  183 op sub crx __tmp42 2
   184 noop
   185 op add __tmp57 OFFSET_X BAR_SPACE
-    * op sub __tmp58 176 __tmp57
-    * op add crw __tmp58 1
+  186 op sub __tmp58 176 __tmp42
+  187 op sub crw 177 __tmp57
   188 noop
   189 set cry 0
   190 set __tmp61 176
 
   195 noop
   196 jump __label36 always
   197 label __label36
-    * op sub crh __tmp61 cry
+  198 op sub crh __tmp61 0
   199 noop
   200 noop
   201 noop

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   126 noop
   127 set crx clx
   128 op add __tmp27 OFFSET_X BAR_SPACE
-    * op sub __tmp28 176 __tmp25
-    * op sub clw 177 __tmp27
+  129 op sub clw 177 __tmp25
   130 noop
   131 set crw clw
   132 set cly 0
   133 op mod __tmp30 FROM_INDEX 8
   134 jump __label26 equal __tmp30 0
   135 label __label25
-    * op mod __tmp33 FROM_INDEX 8
   136 op mul __tmp34 __tmp30 BAR_GAP
   137 op add cly OFFSET_Y __tmp34
   138 noop
 
   177 noop
   178 set crh clh
   179 jump __label33 lessThan TO_INDEX 8
-    * op add __tmp55 OFFSET_X BAR_SPACE
   180 op sub crx __tmp42 2
   181 noop
   182 op add __tmp57 OFFSET_X BAR_SPACE
-    * op sub __tmp58 176 __tmp42
-    * op sub crw 177 __tmp57
+  183 op sub crw 177 __tmp42
   184 noop
   185 set cry 0
   186 set __tmp61 176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
   125 op sub clx __tmp25 2
   126 noop
   127 set crx clx
-    * op add __tmp27 OFFSET_X BAR_SPACE
   128 op sub clw 177 __tmp25
   129 noop
   130 set crw clw
 
   178 jump __label33 lessThan TO_INDEX 8
   179 op sub crx __tmp42 2
   180 noop
-    * op add __tmp57 OFFSET_X BAR_SPACE
   181 op sub crw 177 __tmp42
   182 noop
   183 set cry 0

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     5 set MEMORY null
     6 label __label0
     7 jump __label2 notEqual DISPLAY null
+    8 label __label58
     9 print "Mass Driver Monitor"
    10 print "\n"
    11 set n @links
    12 noop
    13 label __label3
    14 jump __label5 lessThanEq n 0
+   15 label __label59
    16 op sub n n 1
    17 noop
    18 getlink block n
 
    55 noop
    56 label __label6
    57 label __label4
-    * jump __label3 always
+   58 jump __label59 greaterThan n 0
    59 label __label5
    60 print "Message: "
    61 print MESSAGE
 
    79 label __label16
    80 printflush MESSAGE
    81 label __label1
-    * jump __label0 always
+   82 jump __label58 equal DISPLAY null
    83 label __label2
    84 sensor __tmp9 DISPLAY @type
    85 jump __label17 notEqual __tmp9 @logic-display
 
   211 set n 0
   212 label __label39
   213 jump __label41 greaterThanEq n @links
+  214 label __label60
   215 write 0 MEMORY n
   216 label __label40
   217 op add n n 1
   218 noop
-    * jump __label39 always
+  219 jump __label60 lessThan n @links
   220 label __label41
   221 noop
   222 noop
 
   237 set n 0
   238 label __label45
   239 jump __label47 greaterThanEq n @links
+  240 label __label61
   241 getlink driver n
   242 noop
   243 sensor __tmp77 driver @type
 
   319 label __label46
   320 op add n n 1
   321 noop
-    * jump __label45 always
+  322 jump __label61 lessThan n @links
   323 label __label47
   324 drawflush DISPLAY
   325 print "Mass Driver Monitor"

Modifications by Loop Optimization: replicate condition at line 90 (+1 instructions):
 
   227 label __label42
   228 sensor __tmp72 SWITCH @enabled
   229 jump __label44 notEqual __tmp72 0
+  230 label __label62
   231 set start @time
   232 noop
   233 draw color 0 0 80 255
 
   332 print " ms"
   333 printflush MESSAGE
   334 label __label43
-    * jump __label42 always
+  335 sensor __tmp72 SWITCH @enabled
+  336 jump __label62 equal __tmp72 0
   337 label __label44
   338 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   210 jump __label37 equal MEMORY null
   211 set n 0
   212 label __label39
-    * jump __label41 greaterThanEq n @links
+  213 jump __label41 greaterThanEq 0 @links
   214 label __label60
   215 write 0 MEMORY n
   216 label __label40
 
   237 set index FROM_INDEX
   238 set n 0
   239 label __label45
-    * jump __label47 greaterThanEq n @links
+  240 jump __label47 greaterThanEq 0 @links
   241 label __label61
   242 getlink driver n
   243 noop

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
   108 op mul __tmp20 TO_INDEX BAR_GAP
   109 op add __tmp19 OFFSET_Y __tmp20
   110 noop
-    * jump __label22 always
+  111 noop
   112 label __label22
   113 op sub clh __tmp19 cly
   114 noop
 
   145 op mul __tmp39 __tmp38 BAR_GAP
   146 op add __tmp37 OFFSET_Y __tmp39
   147 noop
-    * jump __label28 always
+  148 noop
   149 label __label28
   150 op sub clh __tmp37 cly
   151 noop
 
   172 op mul __tmp50 TO_INDEX BAR_GAP
   173 op add __tmp49 OFFSET_Y __tmp50
   174 noop
-    * jump __label32 always
+  175 noop
   176 label __label32
   177 op sub clh __tmp49 cly
   178 noop
 
   189 op mul __tmp63 __tmp62 BAR_GAP
   190 op add __tmp61 OFFSET_Y __tmp63
   191 noop
-    * jump __label36 always
+  192 noop
   193 label __label36
   194 op sub crh __tmp61 0
   195 noop

Modifications by Final phase, Print Merging, iteration 1 (-6 instructions):
 
     6 label __label0
     7 jump __label2 notEqual DISPLAY null
     8 label __label58
-    * print "Mass Driver Monitor"
-    * print "\n"
+    9 print "Mass Driver Monitor\n"
    10 set n @links
    11 noop
    12 label __label3
 
    58 label __label5
    59 print "Message: "
    60 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+   61 print "\nSwitch: "
    62 print SWITCH
-    * print "\n"
-    * print "Memory: "
+   63 print "\nMemory: "
    64 print MEMORY
-    * print "\n"
-    * print "Display: "
+   65 print "\nDisplay: "
    66 print DISPLAY
    67 print "\n"
    68 jump __label15 notEqual DISPLAY null
-    * print "No display."
-    * print "\n"
+   69 print "No display.\n"
    70 noop
    71 noop
    72 label __label15
 
   318 jump __label61 lessThan n @links
   319 label __label47
   320 drawflush DISPLAY
-    * print "Mass Driver Monitor"
-    * print "\n"
+  321 print "Mass Driver Monitor\n"
   322 op sub __tmp109 @time start
   323 op floor __tmp110 __tmp109
   324 print "[lightgray]Draw time: "

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set CAPACITY 120
set COLUMN_SIZE 8
set DISPLAY null
set MEMORY null
jump __label2 notEqual DISPLAY null
label __label58
print "Mass Driver Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label59
op sub n n 1
getlink block n
print "Found: "
print block
print "\n"
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label14 equal __ast0 @memory-bank
jump __label13 notEqual __ast0 @memory-cell
label __label14
set MEMORY block
label __label13
label __label6
jump __label59 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nMemory: "
print MEMORY
print "\nDisplay: "
print DISPLAY
print "\n"
jump __label15 notEqual DISPLAY null
print "No display.\n"
label __label15
printflush MESSAGE
jump __label58 equal DISPLAY null
label __label2
sensor __tmp9 DISPLAY @type
jump __label17 notEqual __tmp9 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 60
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp12 OFFSET_X BAR_SPACE
op sub clw __tmp12 2
set crw clw
set cly 0
jump __label20 equal FROM_INDEX 0
op mul __tmp16 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp16
label __label20
set cry cly
set __tmp19 176
jump __label22 greaterThanEq TO_INDEX 8
op mul __tmp20 TO_INDEX BAR_GAP
op add __tmp19 OFFSET_Y __tmp20
label __label22
op sub clh __tmp19 cly
set crh clh
jump __label18 always 0 0
label __label17
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 60
set BAR_SPACE 88
set BAR_GAP 22
jump __label23 lessThan FROM_INDEX 8
op add __tmp25 OFFSET_X BAR_SPACE
op sub clx __tmp25 2
set crx clx
op sub clw 177 __tmp25
set crw clw
set cly 0
op mod __tmp30 FROM_INDEX 8
jump __label26 equal __tmp30 0
op mul __tmp34 __tmp30 BAR_GAP
op add cly OFFSET_Y __tmp34
label __label26
set cry cly
set __tmp37 176
jump __label28 greaterThanEq TO_INDEX 16
op mod __tmp38 TO_INDEX 8
op mul __tmp39 __tmp38 BAR_GAP
op add __tmp37 OFFSET_Y __tmp39
label __label28
op sub clh __tmp37 cly
set crh clh
jump __label24 always 0 0
label __label23
set clx 0
set crx 0
op add __tmp42 OFFSET_X BAR_SPACE
op sub clw __tmp42 2
set crw clw
set cly 0
jump __label30 equal FROM_INDEX 0
op mul __tmp46 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp46
label __label30
set cry cly
set __tmp49 176
jump __label32 greaterThanEq TO_INDEX 8
op mul __tmp50 TO_INDEX BAR_GAP
op add __tmp49 OFFSET_Y __tmp50
label __label32
op sub clh __tmp49 cly
set crh clh
jump __label33 lessThan TO_INDEX 8
op sub crx __tmp42 2
op sub crw 177 __tmp42
set cry 0
set __tmp61 176
jump __label36 greaterThanEq TO_INDEX 16
op mod __tmp62 TO_INDEX 8
op mul __tmp63 __tmp62 BAR_GAP
op add __tmp61 OFFSET_Y __tmp63
label __label36
op sub crh __tmp61 0
label __label33
label __label24
label __label18
op idiv HALF_BAR BAR_LENGTH 2
set MAX CAPACITY
op div MUL BAR_LENGTH MAX
jump __label37 equal MEMORY null
set n 0
jump __label41 greaterThanEq 0 @links
label __label60
write 0 MEMORY n
op add n n 1
jump __label60 lessThan n @links
label __label41
label __label37
control enabled SWITCH 0 0 0 0
sensor __tmp72 SWITCH @enabled
jump __label44 notEqual __tmp72 0
label __label62
set start @time
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set n 0
jump __label47 greaterThanEq 0 @links
label __label61
getlink driver n
sensor __tmp77 driver @type
jump __label48 notEqual __tmp77 @mass-driver
op idiv column index COLUMN_SIZE
op mod row index COLUMN_SIZE
op mul __tmp82 column BAR_SPACE
op add x OFFSET_X __tmp82
op mul __tmp84 row BAR_GAP
op add y OFFSET_Y __tmp84
draw color 0 0 80 255 0 0
op sub __tmp86 x 1
op sub __tmp87 y 1
draw rect __tmp86 __tmp87 BAR_SPACE 16 0 0
draw color 255 255 255 255 0 0
op add __tmp88 x 7
op add __tmp89 y 7
draw image __tmp88 __tmp89 @mass-driver 16 0 0
op add x x 16
sensor items driver @totalItems
read __tmp92 MEMORY n
op max maxx __tmp92 items
write maxx MEMORY n
jump __label50 lessThanEq maxx MAX
op mul MAX 2 CAPACITY
op div MUL BAR_LENGTH MAX
label __label50
jump __label52 greaterThan MAX CAPACITY
draw color 0 128 0 255 0 0
jump __label53 always 0 0
label __label52
draw color 128 128 0 255 0 0
label __label53
op mul __tmp100 items MUL
draw rect x y __tmp100 BAR_WIDTH 0 0
jump __label54 equal MEMORY null
draw color 220 220 220 255 0 0
op mul __tmp103 maxx MUL
draw lineRect x y __tmp103 BAR_WIDTH 0 0
label __label54
jump __label56 greaterThan MAX CAPACITY
draw color 0 255 0 255 0 0
draw lineRect x y BAR_LENGTH BAR_WIDTH 0 0
jump __label57 always 0 0
label __label56
draw color 255 255 0 255 0 0
draw lineRect x y HALF_BAR BAR_WIDTH 0 0
op add __tmp106 x HALF_BAR
draw lineRect __tmp106 y HALF_BAR BAR_WIDTH 0 0
label __label57
op add index index 1
label __label48
op add n n 1
jump __label61 lessThan n @links
label __label47
drawflush DISPLAY
print "Mass Driver Monitor\n"
op sub __tmp109 @time start
op floor __tmp110 __tmp109 0
print "[lightgray]Draw time: "
print __tmp110
print " ms"
printflush MESSAGE
sensor __tmp72 SWITCH @enabled
jump __label62 equal __tmp72 0
label __label44
end
