   267 instructions before optimizations.
    42 instructions eliminated by Temp Variables Elimination.
    34 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
    17 instructions eliminated by Jump Optimization (4 iterations).
    13 instructions eliminated by Single Step Elimination (5 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 3 iterations).
    12 instructions eliminated by Data Flow Optimization (8 iterations).
     1 instructions added by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     3 instructions eliminated by Jump Straightening (4 iterations).
     4 instructions updated by PropagateJumpTargets.
     2 instructions eliminated by Unreachable Code Elimination.
     6 instructions eliminated by Print Merging.
   136 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 857):
  * Loop Optimization: replicate condition at line 69            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-42 instructions):
 
     8 set CONV1 CONV2
     9 set MEMORY CONV1
    10 set LINKED 0
-    * set __tmp0 @links
-    * set LINKS __tmp0
+   11 set LINKS @links
    12 set n LINKS
    13 label __label3
-    * op sub __tmp1 n 1
-    * set n __tmp1
-    * getlink __tmp2 n
-    * set block __tmp2
-    * sensor __tmp3 block @type
-    * set __ast0 __tmp3
+   14 op sub n n 1
+   15 getlink block n
+   16 sensor __ast0 block @type
    17 jump __label8 equal __ast0 @memory-cell
    18 jump __label7 always
    19 label __label8
 
    37 set CONV3 CONV2
    38 set CONV2 CONV1
    39 set CONV1 block
-    * op add __tmp5 LINKED 1
-    * set LINKED __tmp5
+   40 op add LINKED LINKED 1
    41 set __tmp4 LINKED
    42 jump __label6 always
    43 label __label11
 
    88 label __label2
    89 set BATCH_DURATION 2000
    90 op idiv __tmp13 MIN_BATCH 10
-    * op max __tmp14 __tmp13 1
-    * set MIN_BATCH __tmp14
+   91 op max MIN_BATCH __tmp13 1
    92 op idiv __tmp15 MAX_BATCH 10
-    * op max __tmp16 __tmp15 MIN_BATCH
-    * set MAX_BATCH __tmp16
+   93 op max MAX_BATCH __tmp15 MIN_BATCH
    94 set BATCH_STEP 1
    95 set BATCH MIN_BATCH
-    * op mul __tmp17 BATCH 10
-    * set BATCH_TXT __tmp17
-    * read __tmp18 MEMORY 0
-    * set total __tmp18
-    * op idiv __tmp19 total 10
-    * set batches __tmp19
-    * op add __tmp20 batches BATCH
-    * set limit __tmp20
+   96 op mul BATCH_TXT BATCH 10
+   97 read total MEMORY 0
+   98 op idiv batches total 10
+   99 op add limit batches BATCH
   100 control enabled switch1 0
   101 set b4 0
   102 set b3 b4
 
   107 set a2 a3
   108 set a1 a2
   109 set ratePerMin 0
-    * set __tmp21 @time
-    * set startTime __tmp21
+  110 set startTime @time
   111 label __label19
   112 sensor __tmp22 switch1 @enabled
   113 op equal __tmp23 __tmp22 0
   114 jump __label21 equal __tmp23 false
-    * set __tmp24 @time
-    * set start __tmp24
-    * sensor __tmp25 CONV1 @totalItems
-    * set a1 __tmp25
+  115 set start @time
+  116 sensor a1 CONV1 @totalItems
   117 op lessThan __tmp26 a1 b1
   118 jump __label22 equal __tmp26 false
-    * op add __tmp28 batches 1
-    * set batches __tmp28
+  119 op add batches batches 1
   120 set __tmp27 batches
   121 jump __label23 always
   122 label __label22
   123 set __tmp27 null
   124 label __label23
-    * sensor __tmp29 CONV2 @totalItems
-    * set a2 __tmp29
+  125 sensor a2 CONV2 @totalItems
   126 op lessThan __tmp30 a2 b2
   127 jump __label24 equal __tmp30 false
-    * op add __tmp32 batches 1
-    * set batches __tmp32
+  128 op add batches batches 1
   129 set __tmp31 batches
   130 jump __label25 always
   131 label __label24
   132 set __tmp31 null
   133 label __label25
-    * sensor __tmp33 CONV3 @totalItems
-    * set a3 __tmp33
+  134 sensor a3 CONV3 @totalItems
   135 op lessThan __tmp34 a3 b3
   136 jump __label26 equal __tmp34 false
-    * op add __tmp36 batches 1
-    * set batches __tmp36
+  137 op add batches batches 1
   138 set __tmp35 batches
   139 jump __label27 always
   140 label __label26
   141 set __tmp35 null
   142 label __label27
-    * sensor __tmp37 CONV4 @totalItems
-    * set a4 __tmp37
+  143 sensor a4 CONV4 @totalItems
   144 op lessThan __tmp38 a4 b4
   145 jump __label28 equal __tmp38 false
-    * op add __tmp40 batches 1
-    * set batches __tmp40
+  146 op add batches batches 1
   147 set __tmp39 batches
   148 jump __label29 always
   149 label __label28
 
   151 label __label29
   152 op greaterThan __tmp41 batches limit
   153 jump __label30 equal __tmp41 false
-    * op sub __tmp43 @time startTime
-    * set duration __tmp43
-    * set __tmp44 @time
-    * set startTime __tmp44
-    * op div __tmp45 BATCH duration
-    * set rate __tmp45
+  154 op sub duration @time startTime
+  155 set startTime @time
+  156 op div rate BATCH duration
   157 op mul __tmp46 rate 166.66666666666666
   158 write __tmp46 MEMORY lastCell
   159 op mul __tmp47 rate 600000
-    * op floor __tmp48 __tmp47
-    * set ratePerMin __tmp48
+  160 op floor ratePerMin __tmp47
   161 op lessThanEq __tmp49 duration BATCH_DURATION
   162 jump __label32 equal __tmp49 false
   163 op add __tmp51 BATCH BATCH_STEP
-    * op min __tmp52 __tmp51 MAX_BATCH
-    * set BATCH __tmp52
-    * op mul __tmp53 BATCH 10
-    * set BATCH_TXT __tmp53
+  164 op min BATCH __tmp51 MAX_BATCH
+  165 op mul BATCH_TXT BATCH 10
   166 set __tmp50 BATCH_TXT
   167 jump __label33 always
   168 label __label32
   169 set __tmp50 null
   170 label __label33
-    * op add __tmp54 limit BATCH
-    * set limit __tmp54
+  171 op add limit limit BATCH
   172 set __tmp42 limit
   173 jump __label31 always
   174 label __label30
   175 set __tmp42 null
   176 label __label31
-    * op mul __tmp55 batches 10
-    * set total __tmp55
+  177 op mul total batches 10
   178 write total MEMORY 0
   179 print "Item Counter                  \n"
   180 print "Monitoring [green]"
 
   186 print "Rate: [green]"
   187 print ratePerMin
   188 print "[] items/min\n"
-    * sensor __tmp56 CONV1 @totalItems
-    * set b1 __tmp56
+  189 sensor b1 CONV1 @totalItems
   190 op lessThan __tmp57 b1 a1
   191 jump __label34 equal __tmp57 false
-    * op add __tmp59 batches 1
-    * set batches __tmp59
+  192 op add batches batches 1
   193 set __tmp58 batches
   194 jump __label35 always
   195 label __label34
   196 set __tmp58 null
   197 label __label35
-    * sensor __tmp60 CONV2 @totalItems
-    * set b2 __tmp60
+  198 sensor b2 CONV2 @totalItems
   199 op lessThan __tmp61 b2 a2
   200 jump __label36 equal __tmp61 false
-    * op add __tmp63 batches 1
-    * set batches __tmp63
+  201 op add batches batches 1
   202 set __tmp62 batches
   203 jump __label37 always
   204 label __label36
   205 set __tmp62 null
   206 label __label37
-    * sensor __tmp64 CONV3 @totalItems
-    * set b3 __tmp64
+  207 sensor b3 CONV3 @totalItems
   208 op lessThan __tmp65 b3 a3
   209 jump __label38 equal __tmp65 false
-    * op add __tmp67 batches 1
-    * set batches __tmp67
+  210 op add batches batches 1
   211 set __tmp66 batches
   212 jump __label39 always
   213 label __label38
   214 set __tmp66 null
   215 label __label39
-    * sensor __tmp68 CONV4 @totalItems
-    * set b4 __tmp68
+  216 sensor b4 CONV4 @totalItems
   217 op lessThan __tmp69 b4 a4
   218 jump __label40 equal __tmp69 false
-    * op add __tmp71 batches 1
-    * set batches __tmp71
+  219 op add batches batches 1
   220 set __tmp70 batches
   221 jump __label41 always
   222 label __label40
   223 set __tmp70 null
   224 label __label41
   225 op sub __tmp72 @time startTime
-    * op floor __tmp73 __tmp72
-    * set elapsed __tmp73
+  226 op floor elapsed __tmp72
   227 op greaterThanEq __tmp74 elapsed 10000
   228 jump __label42 equal __tmp74 false
   229 op idiv __tmp76 BATCH 5
-    * op max __tmp77 __tmp76 MIN_BATCH
-    * set BATCH __tmp77
-    * op mul __tmp78 BATCH 10
-    * set BATCH_TXT __tmp78
-    * op add __tmp79 batches BATCH
-    * set limit __tmp79
+  230 op max BATCH __tmp76 MIN_BATCH
+  231 op mul BATCH_TXT BATCH 10
+  232 op add limit batches BATCH
   233 write 0 MEMORY lastCell
   234 set ratePerMin 0
-    * set __tmp80 @time
-    * set startTime __tmp80
+  235 set startTime @time
   236 set __tmp75 startTime
   237 jump __label43 always
   238 label __label42

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-30 instructions):
 
    19 label __label8
    20 set MEMORY block
    21 set lastCell 63
-    * set __tmp4 lastCell
    22 jump __label6 always
    23 label __label7
    24 jump __label10 equal __ast0 @memory-bank
 
    26 label __label10
    27 set MEMORY block
    28 set lastCell 511
-    * set __tmp4 lastCell
    29 jump __label6 always
    30 label __label9
    31 jump __label12 equal __ast0 @plastanium-conveyor
 
    36 set CONV2 CONV1
    37 set CONV1 block
    38 op add LINKED LINKED 1
-    * set __tmp4 LINKED
    39 jump __label6 always
    40 label __label11
-    * set __tmp4 null
    41 label __label6
    42 label __label4
    43 op greaterThan __tmp6 n 0
 
    51 print LINKED
    52 print ")"
    53 printflush message1
-    * set __tmp8 null
    54 jump __label14 always
    55 label __label13
    56 op greaterThan __tmp9 LINKED 4
 
    76 label __label18
    77 set __tmp10 __tmp12
    78 label __label16
-    * set __tmp8 __tmp10
    79 label __label14
    80 label __label1
    81 jump __label0 always
 
   111 op lessThan __tmp26 a1 b1
   112 jump __label22 equal __tmp26 false
   113 op add batches batches 1
-    * set __tmp27 batches
   114 jump __label23 always
   115 label __label22
-    * set __tmp27 null
   116 label __label23
   117 sensor a2 CONV2 @totalItems
   118 op lessThan __tmp30 a2 b2
   119 jump __label24 equal __tmp30 false
   120 op add batches batches 1
-    * set __tmp31 batches
   121 jump __label25 always
   122 label __label24
-    * set __tmp31 null
   123 label __label25
   124 sensor a3 CONV3 @totalItems
   125 op lessThan __tmp34 a3 b3
   126 jump __label26 equal __tmp34 false
   127 op add batches batches 1
-    * set __tmp35 batches
   128 jump __label27 always
   129 label __label26
-    * set __tmp35 null
   130 label __label27
   131 sensor a4 CONV4 @totalItems
   132 op lessThan __tmp38 a4 b4
   133 jump __label28 equal __tmp38 false
   134 op add batches batches 1
-    * set __tmp39 batches
   135 jump __label29 always
   136 label __label28
-    * set __tmp39 null
   137 label __label29
   138 op greaterThan __tmp41 batches limit
   139 jump __label30 equal __tmp41 false
 
   149 op add __tmp51 BATCH BATCH_STEP
   150 op min BATCH __tmp51 MAX_BATCH
   151 op mul BATCH_TXT BATCH 10
-    * set __tmp50 BATCH_TXT
   152 jump __label33 always
   153 label __label32
-    * set __tmp50 null
   154 label __label33
   155 op add limit limit BATCH
-    * set __tmp42 limit
   156 jump __label31 always
   157 label __label30
-    * set __tmp42 null
   158 label __label31
   159 op mul total batches 10
   160 write total MEMORY 0
 
   172 op lessThan __tmp57 b1 a1
   173 jump __label34 equal __tmp57 false
   174 op add batches batches 1
-    * set __tmp58 batches
   175 jump __label35 always
   176 label __label34
-    * set __tmp58 null
   177 label __label35
   178 sensor b2 CONV2 @totalItems
   179 op lessThan __tmp61 b2 a2
   180 jump __label36 equal __tmp61 false
   181 op add batches batches 1
-    * set __tmp62 batches
   182 jump __label37 always
   183 label __label36
-    * set __tmp62 null
   184 label __label37
   185 sensor b3 CONV3 @totalItems
   186 op lessThan __tmp65 b3 a3
   187 jump __label38 equal __tmp65 false
   188 op add batches batches 1
-    * set __tmp66 batches
   189 jump __label39 always
   190 label __label38
-    * set __tmp66 null
   191 label __label39
   192 sensor b4 CONV4 @totalItems
   193 op lessThan __tmp69 b4 a4
   194 jump __label40 equal __tmp69 false
   195 op add batches batches 1
-    * set __tmp70 batches
   196 jump __label41 always
   197 label __label40
-    * set __tmp70 null
   198 label __label41
   199 op sub __tmp72 @time startTime
   200 op floor elapsed __tmp72
 
   207 write 0 MEMORY lastCell
   208 set ratePerMin 0
   209 set startTime @time
-    * set __tmp75 startTime
   210 jump __label43 always
   211 label __label42
-    * set __tmp75 null
   212 label __label43
   213 print "Batch size: [green]"
   214 print BATCH_TXT
 
   228 op notEqual __tmp84 LINKS @links
   229 jump __label44 equal __tmp84 false
   230 end
-    * set __tmp85 null
   231 jump __label45 always
   232 label __label44
-    * set __tmp85 null
   233 label __label45
   234 label __label20
   235 jump __label19 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    61 print LINKED
    62 print ")"
    63 printflush message1
-    * set __tmp10 null
    64 jump __label16 always
    65 label __label15
    66 op equal __tmp11 MEMORY null
 
    73 jump __label2 always
    74 set __tmp12 null
    75 label __label18
-    * set __tmp10 __tmp12
    76 label __label16
    77 label __label14
    78 label __label1

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
    67 jump __label17 equal __tmp11 false
    68 print "Item Counter\n[salmon]No memory attached."
    69 printflush message1
-    * set __tmp12 null
    70 jump __label18 always
    71 label __label17
    72 jump __label2 always
-    * set __tmp12 null
    73 label __label18
    74 label __label16
    75 label __label14

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
     1 set MAX_BATCH 1000
     2 set lastCell 0
     3 label __label0
-    * jump __label2 equal true false
     4 set CONV4 null
     5 set CONV3 CONV4
     6 set CONV2 CONV3

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-3 instructions):
 
    13 op sub n n 1
    14 getlink block n
    15 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @memory-cell
-    * jump __label7 always
+   16 jump __label7 notEqual __ast0 @memory-cell
    17 label __label8
    18 set MEMORY block
    19 set lastCell 63
    20 jump __label6 always
    21 label __label7
-    * jump __label10 equal __ast0 @memory-bank
-    * jump __label9 always
+   22 jump __label9 notEqual __ast0 @memory-bank
    23 label __label10
    24 set MEMORY block
    25 set lastCell 511
    26 jump __label6 always
    27 label __label9
-    * jump __label12 equal __ast0 @plastanium-conveyor
-    * jump __label11 always
+   28 jump __label11 notEqual __ast0 @plastanium-conveyor
    29 label __label12
    30 set CONV4 CONV3
    31 set CONV3 CONV2

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-17 instructions):
 
    36 label __label11
    37 label __label6
    38 label __label4
-    * op greaterThan __tmp6 n 0
-    * jump __label3 notEqual __tmp6 false
+   39 jump __label3 greaterThan n 0
    40 label __label5
-    * op equal __tmp7 LINKED 0
-    * jump __label13 equal __tmp7 false
+   41 jump __label13 notEqual LINKED 0
    42 print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "
    43 print 4
    44 print ", found: "
 
    47 printflush message1
    48 jump __label14 always
    49 label __label13
-    * op greaterThan __tmp9 LINKED 4
-    * jump __label15 equal __tmp9 false
+   50 jump __label15 lessThanEq LINKED 4
    51 print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
    52 print 4
    53 print ", found: "
 
    56 printflush message1
    57 jump __label16 always
    58 label __label15
-    * op equal __tmp11 MEMORY null
-    * jump __label17 equal __tmp11 false
+   59 jump __label17 notEqual MEMORY null
    60 print "Item Counter\n[salmon]No memory attached."
    61 printflush message1
    62 jump __label18 always
 
    92 set startTime @time
    93 label __label19
    94 sensor __tmp22 switch1 @enabled
-    * op equal __tmp23 __tmp22 0
-    * jump __label21 equal __tmp23 false
+   95 jump __label21 notEqual __tmp22 0
    96 set start @time
    97 sensor a1 CONV1 @totalItems
-    * op lessThan __tmp26 a1 b1
-    * jump __label22 equal __tmp26 false
+   98 jump __label22 greaterThanEq a1 b1
    99 op add batches batches 1
   100 jump __label23 always
   101 label __label22
   102 label __label23
   103 sensor a2 CONV2 @totalItems
-    * op lessThan __tmp30 a2 b2
-    * jump __label24 equal __tmp30 false
+  104 jump __label24 greaterThanEq a2 b2
   105 op add batches batches 1
   106 jump __label25 always
   107 label __label24
   108 label __label25
   109 sensor a3 CONV3 @totalItems
-    * op lessThan __tmp34 a3 b3
-    * jump __label26 equal __tmp34 false
+  110 jump __label26 greaterThanEq a3 b3
   111 op add batches batches 1
   112 jump __label27 always
   113 label __label26
   114 label __label27
   115 sensor a4 CONV4 @totalItems
-    * op lessThan __tmp38 a4 b4
-    * jump __label28 equal __tmp38 false
+  116 jump __label28 greaterThanEq a4 b4
   117 op add batches batches 1
   118 jump __label29 always
   119 label __label28
   120 label __label29
-    * op greaterThan __tmp41 batches limit
-    * jump __label30 equal __tmp41 false
+  121 jump __label30 lessThanEq batches limit
   122 op sub duration @time startTime
   123 set startTime @time
   124 op div rate BATCH duration
 
   126 write __tmp46 MEMORY lastCell
   127 op mul __tmp47 rate 600000
   128 op floor ratePerMin __tmp47
-    * op lessThanEq __tmp49 duration BATCH_DURATION
-    * jump __label32 equal __tmp49 false
+  129 jump __label32 greaterThan duration BATCH_DURATION
   130 op add __tmp51 BATCH BATCH_STEP
   131 op min BATCH __tmp51 MAX_BATCH
   132 op mul BATCH_TXT BATCH 10
 
   150 print ratePerMin
   151 print "[] items/min\n"
   152 sensor b1 CONV1 @totalItems
-    * op lessThan __tmp57 b1 a1
-    * jump __label34 equal __tmp57 false
+  153 jump __label34 greaterThanEq b1 a1
   154 op add batches batches 1
   155 jump __label35 always
   156 label __label34
   157 label __label35
   158 sensor b2 CONV2 @totalItems
-    * op lessThan __tmp61 b2 a2
-    * jump __label36 equal __tmp61 false
+  159 jump __label36 greaterThanEq b2 a2
   160 op add batches batches 1
   161 jump __label37 always
   162 label __label36
   163 label __label37
   164 sensor b3 CONV3 @totalItems
-    * op lessThan __tmp65 b3 a3
-    * jump __label38 equal __tmp65 false
+  165 jump __label38 greaterThanEq b3 a3
   166 op add batches batches 1
   167 jump __label39 always
   168 label __label38
   169 label __label39
   170 sensor b4 CONV4 @totalItems
-    * op lessThan __tmp69 b4 a4
-    * jump __label40 equal __tmp69 false
+  171 jump __label40 greaterThanEq b4 a4
   172 op add batches batches 1
   173 jump __label41 always
   174 label __label40
   175 label __label41
   176 op sub __tmp72 @time startTime
   177 op floor elapsed __tmp72
-    * op greaterThanEq __tmp74 elapsed 10000
-    * jump __label42 equal __tmp74 false
+  178 jump __label42 lessThan elapsed 10000
   179 op idiv __tmp76 BATCH 5
   180 op max BATCH __tmp76 MIN_BATCH
   181 op mul BATCH_TXT BATCH 10
 
   201 print __tmp83
   202 print " ms"
   203 printflush message1
-    * op notEqual __tmp84 LINKS @links
-    * jump __label44 equal __tmp84 false
+  204 jump __label44 equal LINKS @links
   205 end
   206 jump __label45 always
   207 label __label44

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-13 instructions):
 
    32 set CONV2 CONV1
    33 set CONV1 block
    34 op add LINKED LINKED 1
-    * jump __label6 always
    35 label __label11
    36 label __label6
    37 label __label4
 
    96 sensor a1 CONV1 @totalItems
    97 jump __label22 greaterThanEq a1 b1
    98 op add batches batches 1
-    * jump __label23 always
    99 label __label22
   100 label __label23
   101 sensor a2 CONV2 @totalItems
   102 jump __label24 greaterThanEq a2 b2
   103 op add batches batches 1
-    * jump __label25 always
   104 label __label24
   105 label __label25
   106 sensor a3 CONV3 @totalItems
   107 jump __label26 greaterThanEq a3 b3
   108 op add batches batches 1
-    * jump __label27 always
   109 label __label26
   110 label __label27
   111 sensor a4 CONV4 @totalItems
   112 jump __label28 greaterThanEq a4 b4
   113 op add batches batches 1
-    * jump __label29 always
   114 label __label28
   115 label __label29
   116 jump __label30 lessThanEq batches limit
 
   125 op add __tmp51 BATCH BATCH_STEP
   126 op min BATCH __tmp51 MAX_BATCH
   127 op mul BATCH_TXT BATCH 10
-    * jump __label33 always
   128 label __label32
   129 label __label33
   130 op add limit limit BATCH
-    * jump __label31 always
   131 label __label30
   132 label __label31
   133 op mul total batches 10
 
   145 sensor b1 CONV1 @totalItems
   146 jump __label34 greaterThanEq b1 a1
   147 op add batches batches 1
-    * jump __label35 always
   148 label __label34
   149 label __label35
   150 sensor b2 CONV2 @totalItems
   151 jump __label36 greaterThanEq b2 a2
   152 op add batches batches 1
-    * jump __label37 always
   153 label __label36
   154 label __label37
   155 sensor b3 CONV3 @totalItems
   156 jump __label38 greaterThanEq b3 a3
   157 op add batches batches 1
-    * jump __label39 always
   158 label __label38
   159 label __label39
   160 sensor b4 CONV4 @totalItems
   161 jump __label40 greaterThanEq b4 a4
   162 op add batches batches 1
-    * jump __label41 always
   163 label __label40
   164 label __label41
   165 op sub __tmp72 @time startTime
 
   172 write 0 MEMORY lastCell
   173 set ratePerMin 0
   174 set startTime @time
-    * jump __label43 always
   175 label __label42
   176 label __label43
   177 print "Batch size: [green]"
 
   191 printflush message1
   192 jump __label44 equal LINKS @links
   193 end
-    * jump __label45 always
   194 label __label44
   195 label __label45
   196 label __label20

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   119 op div rate BATCH duration
   120 op mul __tmp46 rate 166.66666666666666
   121 write __tmp46 MEMORY lastCell
-    * op mul __tmp47 rate 600000
-    * op floor ratePerMin __tmp47
+  122 op idiv ratePerMin rate 0.0000016666666666666667
   123 jump __label32 greaterThan duration BATCH_DURATION
   124 op add __tmp51 BATCH BATCH_STEP
   125 op min BATCH __tmp51 MAX_BATCH
 
   182 print "[] ms"
   183 print "\n"
   184 op sub __tmp81 @time start
-    * op div __tmp82 __tmp81 2
-    * op floor __tmp83 __tmp82
+  185 op idiv __tmp83 __tmp81 2
   186 print "[lightgray]Loop time: "
   187 print __tmp83
   188 print " ms"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     2 set lastCell 0
     3 label __label0
     4 set CONV4 null
-    * set CONV3 CONV4
-    * set CONV2 CONV3
-    * set CONV1 CONV2
-    * set MEMORY CONV1
+    5 set CONV3 null
+    6 set CONV2 CONV4
+    7 set CONV1 CONV3
+    8 set MEMORY CONV2
     9 set LINKED 0
    10 set LINKS @links
    11 set n LINKS
 
    68 jump __label0 always
    69 label __label2
    70 set BATCH_DURATION 2000
-    * op idiv __tmp13 MIN_BATCH 10
-    * op max MIN_BATCH __tmp13 1
-    * op idiv __tmp15 MAX_BATCH 10
-    * op max MAX_BATCH __tmp15 MIN_BATCH
+   71 op idiv __tmp13 10 10
+   72 op max MIN_BATCH 1 1
+   73 op idiv __tmp15 1000 10
+   74 op max MAX_BATCH 100 1
    75 set BATCH_STEP 1
-    * set BATCH MIN_BATCH
-    * op mul BATCH_TXT BATCH 10
+   76 set BATCH 1
+   77 op mul BATCH_TXT MIN_BATCH 10
    78 read total MEMORY 0
    79 op idiv batches total 10
-    * op add limit batches BATCH
+   80 op add limit batches MIN_BATCH
    81 control enabled switch1 0
    82 set b4 0
-    * set b3 b4
-    * set b2 b3
-    * set b1 b2
-    * set a4 b1
-    * set a3 a4
-    * set a2 a3
-    * set a1 a2
+   83 set b3 0
+   84 set b2 b4
+   85 set b1 b3
+   86 set a4 b2
+   87 set a3 b1
+   88 set a2 a4
+   89 set a1 a3
    90 set ratePerMin 0
    91 set startTime @time
    92 label __label19
 
   120 op mul __tmp46 rate 166.66666666666666
   121 write __tmp46 MEMORY lastCell
   122 op idiv ratePerMin rate 0.0000016666666666666667
-    * jump __label32 greaterThan duration BATCH_DURATION
-    * op add __tmp51 BATCH BATCH_STEP
-    * op min BATCH __tmp51 MAX_BATCH
+  123 jump __label32 greaterThan duration 2000
+  124 op add __tmp51 BATCH 1
+  125 op min BATCH __tmp51 100
   126 op mul BATCH_TXT BATCH 10
   127 label __label32
   128 label __label33
 
   165 op floor elapsed __tmp72
   166 jump __label42 lessThan elapsed 10000
   167 op idiv __tmp76 BATCH 5
-    * op max BATCH __tmp76 MIN_BATCH
+  168 op max BATCH __tmp76 1
   169 op mul BATCH_TXT BATCH 10
   170 op add limit batches BATCH
   171 write 0 MEMORY lastCell

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
-    * set MIN_BATCH 10
-    * set MAX_BATCH 1000
     0 set lastCell 0
     1 label __label0
     2 set CONV4 null
     3 set CONV3 null
-    * set CONV2 CONV4
-    * set CONV1 CONV3
-    * set MEMORY CONV2
+    4 set CONV2 null
+    5 set CONV1 null
+    6 set MEMORY CONV4
     7 set LINKED 0
     8 set LINKS @links
     9 set n LINKS
 
    65 label __label1
    66 jump __label0 always
    67 label __label2
-    * set BATCH_DURATION 2000
-    * op idiv __tmp13 10 10
    68 op max MIN_BATCH 1 1
-    * op idiv __tmp15 1000 10
-    * op max MAX_BATCH 100 1
-    * set BATCH_STEP 1
    69 set BATCH 1
-    * op mul BATCH_TXT MIN_BATCH 10
+   70 op mul BATCH_TXT 1 10
    71 read total MEMORY 0
    72 op idiv batches total 10
-    * op add limit batches MIN_BATCH
+   73 op add limit batches 1
    74 control enabled switch1 0
    75 set b4 0
    76 set b3 0
-    * set b2 b4
-    * set b1 b3
-    * set a4 b2
-    * set a3 b1
-    * set a2 a4
-    * set a1 a3
+   77 set b2 0
+   78 set b1 0
+   79 set a4 b4
+   80 set a3 b3
+   81 set a2 b2
+   82 set a1 b1
    83 set ratePerMin 0
    84 set startTime @time
    85 label __label19

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
     3 set CONV3 null
     4 set CONV2 null
     5 set CONV1 null
-    * set MEMORY CONV4
+    6 set MEMORY null
     7 set LINKED 0
     8 set LINKS @links
     9 set n LINKS
 
    65 label __label1
    66 jump __label0 always
    67 label __label2
-    * op max MIN_BATCH 1 1
    68 set BATCH 1
    69 op mul BATCH_TXT 1 10
    70 read total MEMORY 0
 
    75 set b3 0
    76 set b2 0
    77 set b1 0
-    * set a4 b4
-    * set a3 b3
-    * set a2 b2
-    * set a1 b1
+   78 set a4 0
+   79 set a3 0
+   80 set a2 0
+   81 set a1 0
    82 set ratePerMin 0
    83 set startTime @time
    84 label __label19

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-4 instructions):
 
    75 set b3 0
    76 set b2 0
    77 set b1 0
-    * set a4 0
-    * set a3 0
-    * set a2 0
-    * set a1 0
    78 set ratePerMin 0
    79 set startTime @time
    80 label __label19

Modifications by Loop Optimization: replicate condition at line 69 (+1 instructions):
 
    80 label __label19
    81 sensor __tmp22 switch1 @enabled
    82 jump __label21 notEqual __tmp22 0
+   83 label __label46
    84 set start @time
    85 sensor a1 CONV1 @totalItems
    86 jump __label22 greaterThanEq a1 b1
 
   181 label __label44
   182 label __label45
   183 label __label20
-    * jump __label19 always
+  184 sensor __tmp22 switch1 @enabled
+  185 jump __label46 equal __tmp22 0
   186 label __label21
   187 control enabled switch1 0
   188 write 0 MEMORY lastCell

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    66 jump __label0 always
    67 label __label2
    68 set BATCH 1
-    * op mul BATCH_TXT 1 10
+   69 set BATCH_TXT 10
    70 read total MEMORY 0
    71 op idiv batches total 10
    72 op add limit batches 1

Modifications by Final phase, Jump Threading, iteration 1:
 
    42 print LINKED
    43 print ")"
    44 printflush message1
-    * jump __label14 always
+   45 jump __label0 always
    46 label __label13
    47 jump __label15 lessThanEq LINKED 4
    48 print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
 
    51 print LINKED
    52 print ")"
    53 printflush message1
-    * jump __label16 always
+   54 jump __label0 always
    55 label __label15
-    * jump __label17 notEqual MEMORY null
+   56 jump __label2 notEqual MEMORY null
    57 print "Item Counter\n[salmon]No memory attached."
    58 printflush message1
-    * jump __label18 always
+   59 jump __label0 always
    60 label __label17
    61 jump __label2 always
    62 label __label18

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-2 instructions):
 
    57 print "Item Counter\n[salmon]No memory attached."
    58 printflush message1
    59 jump __label0 always
-    * label __label17
-    * jump __label2 always
-    * label __label18
-    * label __label16
-    * label __label14
-    * label __label1
-    * jump __label0 always
    60 label __label2
    61 set BATCH 1
    62 set BATCH_TXT 10

Modifications by Final phase, Print Merging, iteration 1 (-6 instructions):
 
   116 print "Item Counter                  \n"
   117 print "Monitoring [green]"
   118 print LINKED
-    * print "[] conveyors\n"
-    * print "Total items: [gold]"
+  119 print "[] conveyors\nTotal items: [gold]"
   120 print total
-    * print "[]\n"
-    * print "Rate: [green]"
+  121 print "[]\nRate: [green]"
   122 print ratePerMin
   123 print "[] items/min\n"
   124 sensor b1 CONV1 @totalItems
 
   155 label __label43
   156 print "Batch size: [green]"
   157 print BATCH_TXT
-    * print "[]"
-    * print "\n"
-    * print "Batch time: [gold]"
+  158 print "[]\nBatch time: [gold]"
   159 print elapsed
-    * print "[] ms"
-    * print "\n"
   160 op sub __tmp81 @time start
   161 op idiv __tmp83 __tmp81 2
-    * print "[lightgray]Loop time: "
+  162 print "[] ms\n[lightgray]Loop time: "
   163 print __tmp83
   164 print " ms"
   165 printflush message1

Final code before resolving virtual instructions:

set lastCell 0
label __label0
set CONV4 null
set CONV3 null
set CONV2 null
set CONV1 null
set MEMORY null
set LINKED 0
set LINKS @links
set n LINKS
label __label3
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @memory-cell
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @memory-bank
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __ast0 @plastanium-conveyor
set CONV4 CONV3
set CONV3 CONV2
set CONV2 CONV1
set CONV1 block
op add LINKED LINKED 1
label __label11
label __label6
jump __label3 greaterThan n 0
jump __label13 notEqual LINKED 0
print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label13
jump __label15 lessThanEq LINKED 4
print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label15
jump __label2 notEqual MEMORY null
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 always 0 0
label __label2
set BATCH 1
set BATCH_TXT 10
read total MEMORY 0
op idiv batches total 10
op add limit batches 1
control enabled switch1 0 0 0 0
set b4 0
set b3 0
set b2 0
set b1 0
set ratePerMin 0
set startTime @time
sensor __tmp22 switch1 @enabled
jump __label21 notEqual __tmp22 0
label __label46
set start @time
sensor a1 CONV1 @totalItems
jump __label22 greaterThanEq a1 b1
op add batches batches 1
label __label22
sensor a2 CONV2 @totalItems
jump __label24 greaterThanEq a2 b2
op add batches batches 1
label __label24
sensor a3 CONV3 @totalItems
jump __label26 greaterThanEq a3 b3
op add batches batches 1
label __label26
sensor a4 CONV4 @totalItems
jump __label28 greaterThanEq a4 b4
op add batches batches 1
label __label28
jump __label30 lessThanEq batches limit
op sub duration @time startTime
set startTime @time
op div rate BATCH duration
op mul __tmp46 rate 166.66666666666666
write __tmp46 MEMORY lastCell
op idiv ratePerMin rate 0.0000016666666666666667
jump __label32 greaterThan duration 2000
op add __tmp51 BATCH 1
op min BATCH __tmp51 100
op mul BATCH_TXT BATCH 10
label __label32
op add limit limit BATCH
label __label30
op mul total batches 10
write total MEMORY 0
print "Item Counter                  \n"
print "Monitoring [green]"
print LINKED
print "[] conveyors\nTotal items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\n"
sensor b1 CONV1 @totalItems
jump __label34 greaterThanEq b1 a1
op add batches batches 1
label __label34
sensor b2 CONV2 @totalItems
jump __label36 greaterThanEq b2 a2
op add batches batches 1
label __label36
sensor b3 CONV3 @totalItems
jump __label38 greaterThanEq b3 a3
op add batches batches 1
label __label38
sensor b4 CONV4 @totalItems
jump __label40 greaterThanEq b4 a4
op add batches batches 1
label __label40
op sub __tmp72 @time startTime
op floor elapsed __tmp72 0
jump __label42 lessThan elapsed 10000
op idiv __tmp76 BATCH 5
op max BATCH __tmp76 1
op mul BATCH_TXT BATCH 10
op add limit batches BATCH
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label42
print "Batch size: [green]"
print BATCH_TXT
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp81 @time start
op idiv __tmp83 __tmp81 2
print "[] ms\n[lightgray]Loop time: "
print __tmp83
print " ms"
printflush message1
jump __label44 equal LINKS @links
end
label __label44
sensor __tmp22 switch1 @enabled
jump __label46 equal __tmp22 0
label __label21
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
write 0 MEMORY 0
end
