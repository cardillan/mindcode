    41 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     6 instructions eliminated by Dead Code Elimination (4 iterations).
     3 instructions eliminated by Jump Optimization (4 iterations).
     2 instructions eliminated by Single Step Elimination (5 iterations).
     3 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
    23 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 977):
  ! Loop Unrolling: unroll loop at line 4                        cost  1421, benefit     4500,0, efficiency        3,2

Pass 2: speed optimization selection (cost limit 977):
  ! Loop Unrolling: unroll loop at line 4                        cost  1421, benefit     4500,0, efficiency        3,2

Pass 3: speed optimization selection (cost limit 977):
  ! Loop Unrolling: unroll loop at line 4                        cost  1421, benefit     4500,0, efficiency        3,2

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
     4 set j i
     5 label __label3
     6 jump __label5 greaterThanEq j 100
-    * op mul __tmp0 i j
-    * set num __tmp0
+    7 op mul num i j
+    8 noop
     9 op greaterThan __tmp1 num max
    10 jump __label6 equal __tmp1 false
    11 label __label8
 
    16 jump __label12 equal __tmp4 false
    17 op mul __tmp5 10 __fn0_res
    18 op mod __tmp6 __fn0_num 10
-    * op add __tmp7 __tmp5 __tmp6
-    * set __fn0_res __tmp7
-    * op idiv __tmp8 __fn0_num 10
-    * set __fn0_num __tmp8
+   19 op add __fn0_res __tmp5 __tmp6
+   20 noop
+   21 op idiv __fn0_num __fn0_num 10
+   22 noop
    23 label __label11
    24 jump __label10 always
    25 label __label12

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-4 instructions):
 
    33 label __label13
    34 set __tmp10 null
    35 label __label14
-    * set __tmp2 __tmp10
+   36 noop
    37 jump __label7 always
    38 label __label6
-    * set __tmp2 null
+   39 noop
    40 label __label7
    41 label __label4
    42 op add j j 1
 
    49 label __label15
    50 set __fn1_v 9009
    51 print __fn1_v
-    * set __tmp11 __fn1_v
+   52 noop
    53 label __label16
    54 label __label17
    55 set __fn2_v max
    56 print __fn2_v
-    * set __tmp12 __fn2_v
+   57 noop
    58 label __label18
    59 end

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
    28 op equal __tmp9 num __tmp3
    29 jump __label13 equal __tmp9 false
    30 set max num
-    * set __tmp10 max
+   31 noop
    32 jump __label14 always
    33 label __label13
-    * set __tmp10 null
+   34 noop
    35 label __label14
    36 noop
    37 jump __label7 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-3 instructions):
 
     6 jump __label5 greaterThanEq j 100
     7 op mul num i j
     8 noop
-    * op greaterThan __tmp1 num max
-    * jump __label6 equal __tmp1 false
+    9 jump __label6 lessThanEq num max
    10 label __label8
    11 set __fn0_num num
    12 set __fn0_res 0
    13 label __label10
-    * op greaterThan __tmp4 __fn0_num 0
-    * jump __label12 equal __tmp4 false
+   14 jump __label12 lessThanEq __fn0_num 0
    15 op mul __tmp5 10 __fn0_res
    16 op mod __tmp6 __fn0_num 10
    17 op add __fn0_res __tmp5 __tmp6
 
    23 label __label12
    24 set __tmp3 __fn0_res
    25 label __label9
-    * op equal __tmp9 num __tmp3
-    * jump __label13 equal __tmp9 false
+   26 jump __label13 notEqual num __tmp3
    27 set max num
    28 noop
    29 jump __label14 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-2 instructions):
 
    26 jump __label13 notEqual num __tmp3
    27 set max num
    28 noop
-    * jump __label14 always
+   29 noop
    30 label __label13
    31 noop
    32 label __label14
    33 noop
-    * jump __label7 always
+   34 noop
    35 label __label6
    36 noop
    37 label __label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    23 label __label12
    24 set __tmp3 __fn0_res
    25 label __label9
-    * jump __label13 notEqual num __tmp3
+   26 jump __label13 notEqual num __fn0_res
    27 set max num
    28 noop
    29 noop
 
    45 label __label2
    46 label __label15
    47 set __fn1_v 9009
-    * print __fn1_v
+   48 print 9009
    49 noop
    50 label __label16
    51 label __label17
    52 set __fn2_v max
-    * print __fn2_v
+   53 print max
    54 noop
    55 label __label18
    56 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    21 label __label11
    22 jump __label10 always
    23 label __label12
-    * set __tmp3 __fn0_res
    24 label __label9
    25 jump __label13 notEqual num __fn0_res
    26 set max num
 
    43 jump __label0 always
    44 label __label2
    45 label __label15
-    * set __fn1_v 9009
    46 print 9009
    47 noop
    48 label __label16
    49 label __label17
-    * set __fn2_v max
    50 print max
    51 noop
    52 label __label18

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
     0 set max 0
     1 set i 10
     2 label __label0
-    * jump __label2 greaterThanEq i 100
+    3 label __label19
     4 set j i
     5 label __label3
     6 jump __label5 greaterThanEq j 100
+    7 label __label20
     8 op mul num i j
     9 noop
    10 jump __label6 lessThanEq num max
 
    13 set __fn0_res 0
    14 label __label10
    15 jump __label12 lessThanEq __fn0_num 0
+   16 label __label21
    17 op mul __tmp5 10 __fn0_res
    18 op mod __tmp6 __fn0_num 10
    19 op add __fn0_res __tmp5 __tmp6
 
    21 op idiv __fn0_num __fn0_num 10
    22 noop
    23 label __label11
-    * jump __label10 always
+   24 jump __label21 greaterThan __fn0_num 0
    25 label __label12
    26 label __label9
    27 jump __label13 notEqual num __fn0_res
 
    38 label __label7
    39 label __label4
    40 op add j j 1
-    * jump __label3 always
+   41 jump __label20 lessThan j 100
    42 label __label5
    43 label __label1
    44 op add i i 1
-    * jump __label0 always
+   45 jump __label19 lessThan i 100
    46 label __label2
    47 label __label15
    48 print 9009

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     3 label __label19
     4 set j i
     5 label __label3
-    * jump __label5 greaterThanEq j 100
+    6 jump __label5 greaterThanEq i 100
     7 label __label20
     8 op mul num i j
     9 noop
 
    12 set __fn0_num num
    13 set __fn0_res 0
    14 label __label10
-    * jump __label12 lessThanEq __fn0_num 0
+   15 jump __label12 lessThanEq num 0
    16 label __label21
    17 op mul __tmp5 10 __fn0_res
    18 op mod __tmp6 __fn0_num 10

Final code before resolving virtual instructions:

set max 0
set i 10
label __label19
set j i
jump __label5 greaterThanEq i 100
label __label20
op mul num i j
jump __label6 lessThanEq num max
set __fn0_num num
set __fn0_res 0
jump __label12 lessThanEq num 0
label __label21
op mul __tmp5 10 __fn0_res
op mod __tmp6 __fn0_num 10
op add __fn0_res __tmp5 __tmp6
op idiv __fn0_num __fn0_num 10
jump __label21 greaterThan __fn0_num 0
label __label12
jump __label13 notEqual num __fn0_res
set max num
label __label13
label __label6
op add j j 1
jump __label20 lessThan j 100
label __label5
op add i i 1
jump __label19 lessThan i 100
print 9009
print max
end
