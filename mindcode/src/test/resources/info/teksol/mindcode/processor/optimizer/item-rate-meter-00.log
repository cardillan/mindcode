   176 instructions before optimizations.
    20 instructions eliminated by Temp Variables Elimination.
    20 instructions eliminated by Dead Code Elimination (4 iterations).
    12 instructions eliminated by Jump Optimization (3 iterations).
     7 instructions eliminated by Single Step Elimination (4 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
     1 instructions eliminated by If Expression Optimization (2 iterations).
     2 instructions modified by Data Flow Optimization (4 iterations).
     1 instructions added by Loop Optimization (2 iterations).
     4 loops improved by Loop Optimization.
     5 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
     5 instructions eliminated by Print Merging.
   105 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 890):
  * Loop Optimization: replicate condition at line 56            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-20 instructions):
 
     4 op equal __tmp0 SOURCE_MEMORY null
     5 jump __label2 equal __tmp0 false
     6 print "Item Rate Meter"
-    * set __tmp1 @links
-    * set n __tmp1
+    7 set n @links
+    8 noop
     9 label __label3
    10 op greaterThan __tmp2 n 0
    11 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
+   12 op sub n n 1
+   13 noop
+   14 getlink block n
+   15 noop
    16 print "\nFound: "
    17 print block
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   18 sensor __ast0 block @type
+   19 noop
    20 jump __label8 equal __ast0 @message
    21 jump __label7 always
    22 label __label8
 
    74 set __tmp10 null
    75 label __label16
    76 set startIndex 0
-    * sensor __tmp11 TARGET_MEMORY @type
-    * set __ast1 __tmp11
+   77 sensor __ast1 TARGET_MEMORY @type
+   78 noop
    79 jump __label19 equal __ast1 @memory-cell
    80 jump __label18 always
    81 label __label19
 
    93 set memSize __tmp12
    94 op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
    95 jump __label22 equal __tmp13 false
-    * op idiv __tmp15 memSize 2
-    * set startIndex __tmp15
-    * op sub __tmp16 memSize 1
-    * set memSize __tmp16
+   96 op idiv startIndex memSize 2
+   97 noop
+   98 op sub memSize memSize 1
+   99 noop
   100 set __tmp14 memSize
   101 jump __label23 always
   102 label __label22
   103 set __tmp14 null
   104 label __label23
-    * set __tmp17 @tick
-    * set prevTick __tmp17
-    * read __tmp18 SOURCE_MEMORY 0
-    * set prev __tmp18
+  105 set prevTick @tick
+  106 noop
+  107 read prev SOURCE_MEMORY 0
+  108 noop
   109 set currTick prevTick
   110 set curr prev
   111 read __tmp19 TARGET_MEMORY startIndex
-    * op max __tmp20 startIndex __tmp19
-    * set index __tmp20
+  112 op max index startIndex __tmp19
+  113 noop
   114 set nextTick prevTick
   115 label __label24
   116 sensor __tmp21 switch1 @enabled
   117 op equal __tmp22 __tmp21 0
   118 jump __label26 equal __tmp22 false
-    * op add __tmp23 nextTick TICKS
-    * set nextTick __tmp23
+  119 op add nextTick nextTick TICKS
+  120 noop
   121 op add __tmp24 nextTick TICKS
   122 op greaterThan __tmp25 @tick __tmp24
   123 jump __label27 equal __tmp25 false
-    * set __tmp27 @tick
-    * set prevTick __tmp27
-    * op add __tmp28 prevTick TICKS
-    * set nextTick __tmp28
+  124 set prevTick @tick
+  125 noop
+  126 op add nextTick prevTick TICKS
+  127 noop
   128 set currTick prevTick
   129 set __tmp26 currTick
   130 jump __label28 always
 
   140 set __tmp31 null
   141 jump __label33 always
   142 label __label32
-    * read __tmp32 SOURCE_MEMORY 0
-    * set value __tmp32
+  143 read value SOURCE_MEMORY 0
+  144 noop
   145 op notEqual __tmp33 value curr
   146 jump __label34 equal __tmp33 false
-    * set __tmp35 @tick
-    * set currTick __tmp35
+  147 set currTick @tick
+  148 noop
   149 set curr value
   150 set __tmp34 curr
   151 jump __label35 always
 
   157 label __label30
   158 jump __label29 always
   159 label __label31
-    * op sub __tmp36 curr prev
-    * set amount __tmp36
-    * op sub __tmp37 currTick prevTick
-    * set time __tmp37
+  160 op sub amount curr prev
+  161 noop
+  162 op sub time currTick prevTick
+  163 noop
   164 op equal __tmp38 amount 0
   165 jump __label36 equal __tmp38 false
   166 set rate 0
 
   168 jump __label37 always
   169 label __label36
   170 op div __tmp40 amount time
-    * op max __tmp41 __tmp40 0
-    * set rate __tmp41
+  171 op max rate __tmp40 0
+  172 noop
   173 set __tmp39 rate
   174 label __label37
-    * op add __tmp42 index 1
-    * set index __tmp42
+  175 op add index index 1
+  176 noop
   177 op greaterThanEq __tmp43 index memSize
   178 jump __label38 equal __tmp43 false
-    * op add __tmp45 startIndex 1
-    * set index __tmp45
+  179 op add index startIndex 1
+  180 noop
   181 set __tmp44 index
   182 jump __label39 always
   183 label __label38

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-18 instructions):
 
    21 jump __label7 always
    22 label __label8
    23 set MESSAGE block
-    * set __tmp6 MESSAGE
+   24 noop
    25 jump __label6 always
    26 label __label7
    27 jump __label10 equal __ast0 @switch
    28 jump __label9 always
    29 label __label10
    30 set SWITCH block
-    * set __tmp6 SWITCH
+   31 noop
    32 jump __label6 always
    33 label __label9
    34 jump __label12 equal __ast0 @memory-bank
 
    37 label __label12
    38 set TARGET_MEMORY SOURCE_MEMORY
    39 set SOURCE_MEMORY block
-    * set __tmp6 SOURCE_MEMORY
+   40 noop
    41 jump __label6 always
    42 label __label11
-    * set __tmp6 null
+   43 noop
    44 label __label6
    45 label __label4
    46 jump __label3 always
 
    56 op equal __tmp7 SOURCE_MEMORY null
    57 jump __label13 equal __tmp7 false
    58 print "\nNo memory."
-    * set __tmp8 "\nNo memory."
+   59 noop
    60 jump __label14 always
    61 label __label13
-    * set __tmp8 null
+   62 noop
    63 label __label14
    64 printflush MESSAGE
    65 label __label1
 
    68 op equal __tmp9 TARGET_MEMORY null
    69 jump __label15 equal __tmp9 false
    70 set TARGET_MEMORY SOURCE_MEMORY
-    * set __tmp10 TARGET_MEMORY
+   71 noop
    72 jump __label16 always
    73 label __label15
-    * set __tmp10 null
+   74 noop
    75 label __label16
    76 set startIndex 0
    77 sensor __ast1 TARGET_MEMORY @type
 
    97 noop
    98 op sub memSize memSize 1
    99 noop
-    * set __tmp14 memSize
+  100 noop
   101 jump __label23 always
   102 label __label22
-    * set __tmp14 null
+  103 noop
   104 label __label23
   105 set prevTick @tick
   106 noop
 
   126 op add nextTick prevTick TICKS
   127 noop
   128 set currTick prevTick
-    * set __tmp26 currTick
+  129 noop
   130 jump __label28 always
   131 label __label27
-    * set __tmp26 null
+  132 noop
   133 label __label28
   134 label __label29
   135 op lessThan __tmp29 @tick nextTick
 
   137 op lessThan __tmp30 @tick prevTick
   138 jump __label32 equal __tmp30 false
   139 end
-    * set __tmp31 null
+  140 noop
   141 jump __label33 always
   142 label __label32
   143 read value SOURCE_MEMORY 0
 
   152 label __label34
   153 set __tmp34 null
   154 label __label35
-    * set __tmp31 __tmp34
+  155 noop
   156 label __label33
   157 label __label30
   158 jump __label29 always
 
   164 op equal __tmp38 amount 0
   165 jump __label36 equal __tmp38 false
   166 set rate 0
-    * set __tmp39 rate
+  167 noop
   168 jump __label37 always
   169 label __label36
   170 op div __tmp40 amount time
   171 op max rate __tmp40 0
   172 noop
-    * set __tmp39 rate
+  173 noop
   174 label __label37
   175 op add index index 1
   176 noop
 
   178 jump __label38 equal __tmp43 false
   179 op add index startIndex 1
   180 noop
-    * set __tmp44 index
+  181 noop
   182 jump __label39 always
   183 label __label38
-    * set __tmp44 null
+  184 noop
   185 label __label39
   186 write index TARGET_MEMORY startIndex
   187 write rate TARGET_MEMORY index

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   147 set currTick @tick
   148 noop
   149 set curr value
-    * set __tmp34 curr
+  150 noop
   151 jump __label35 always
   152 label __label34
-    * set __tmp34 null
+  153 noop
   154 label __label35
   155 noop
   156 label __label33

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-5 instructions):
 
    17 print block
    18 sensor __ast0 block @type
    19 noop
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   20 jump __label7 notEqual __ast0 @message
+   21 noop
    22 label __label8
    23 set MESSAGE block
    24 noop
    25 jump __label6 always
    26 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   27 jump __label9 notEqual __ast0 @switch
+   28 noop
    29 label __label10
    30 set SWITCH block
    31 noop
    32 jump __label6 always
    33 label __label9
    34 jump __label12 equal __ast0 @memory-bank
-    * jump __label12 equal __ast0 @memory-cell
-    * jump __label11 always
+   35 jump __label11 notEqual __ast0 @memory-cell
+   36 noop
    37 label __label12
    38 set TARGET_MEMORY SOURCE_MEMORY
    39 set SOURCE_MEMORY block
 
    76 set startIndex 0
    77 sensor __ast1 TARGET_MEMORY @type
    78 noop
-    * jump __label19 equal __ast1 @memory-cell
-    * jump __label18 always
+   79 jump __label18 notEqual __ast1 @memory-cell
+   80 noop
    81 label __label19
    82 set __tmp12 64
    83 jump __label17 always
    84 label __label18
-    * jump __label21 equal __ast1 @memory-bank
-    * jump __label20 always
+   85 jump __label20 notEqual __ast1 @memory-bank
+   86 noop
    87 label __label21
    88 set __tmp12 512
    89 jump __label17 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-12 instructions):
 
     1 set SOURCE_MEMORY null
     2 set TARGET_MEMORY null
     3 label __label0
-    * op equal __tmp0 SOURCE_MEMORY null
-    * jump __label2 equal __tmp0 false
+    4 jump __label2 notEqual SOURCE_MEMORY null
     5 print "Item Rate Meter"
     6 set n @links
     7 noop
     8 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+    9 jump __label5 lessThanEq n 0
    10 op sub n n 1
    11 noop
    12 getlink block n
 
    51 print SOURCE_MEMORY
    52 print "\nTarget memory: "
    53 print TARGET_MEMORY
-    * op equal __tmp7 SOURCE_MEMORY null
-    * jump __label13 equal __tmp7 false
+   54 jump __label13 notEqual SOURCE_MEMORY null
    55 print "\nNo memory."
    56 noop
    57 jump __label14 always
 
    62 label __label1
    63 jump __label0 always
    64 label __label2
-    * op equal __tmp9 TARGET_MEMORY null
-    * jump __label15 equal __tmp9 false
+   65 jump __label15 notEqual TARGET_MEMORY null
    66 set TARGET_MEMORY SOURCE_MEMORY
    67 noop
    68 jump __label16 always
 
    87 set __tmp12 0
    88 label __label17
    89 set memSize __tmp12
-    * op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
-    * jump __label22 equal __tmp13 false
+   90 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
    91 op idiv startIndex memSize 2
    92 noop
    93 op sub memSize memSize 1
 
   109 set nextTick prevTick
   110 label __label24
   111 sensor __tmp21 switch1 @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label26 equal __tmp22 false
+  112 jump __label26 notEqual __tmp21 0
   113 op add nextTick nextTick TICKS
   114 noop
   115 op add __tmp24 nextTick TICKS
-    * op greaterThan __tmp25 @tick __tmp24
-    * jump __label27 equal __tmp25 false
+  116 jump __label27 lessThanEq @tick __tmp24
   117 set prevTick @tick
   118 noop
   119 op add nextTick prevTick TICKS
 
   125 noop
   126 label __label28
   127 label __label29
-    * op lessThan __tmp29 @tick nextTick
-    * jump __label31 equal __tmp29 false
-    * op lessThan __tmp30 @tick prevTick
-    * jump __label32 equal __tmp30 false
+  128 jump __label31 greaterThanEq @tick nextTick
+  129 jump __label32 greaterThanEq @tick prevTick
   130 end
   131 noop
   132 jump __label33 always
   133 label __label32
   134 read value SOURCE_MEMORY 0
   135 noop
-    * op notEqual __tmp33 value curr
-    * jump __label34 equal __tmp33 false
+  136 jump __label34 equal value curr
   137 set currTick @tick
   138 noop
   139 set curr value
 
   151 noop
   152 op sub time currTick prevTick
   153 noop
-    * op equal __tmp38 amount 0
-    * jump __label36 equal __tmp38 false
+  154 jump __label36 notEqual amount 0
   155 set rate 0
   156 noop
   157 jump __label37 always
 
   163 label __label37
   164 op add index index 1
   165 noop
-    * op greaterThanEq __tmp43 index memSize
-    * jump __label38 equal __tmp43 false
+  166 jump __label38 lessThan index memSize
   167 op add index startIndex 1
   168 noop
   169 noop

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-7 instructions):
 
    36 set TARGET_MEMORY SOURCE_MEMORY
    37 set SOURCE_MEMORY block
    38 noop
-    * jump __label6 always
+   39 noop
    40 label __label11
    41 noop
    42 label __label6
 
    54 jump __label13 notEqual SOURCE_MEMORY null
    55 print "\nNo memory."
    56 noop
-    * jump __label14 always
+   57 noop
    58 label __label13
    59 noop
    60 label __label14
 
    65 jump __label15 notEqual TARGET_MEMORY null
    66 set TARGET_MEMORY SOURCE_MEMORY
    67 noop
-    * jump __label16 always
+   68 noop
    69 label __label15
    70 noop
    71 label __label16
 
    93 op sub memSize memSize 1
    94 noop
    95 noop
-    * jump __label23 always
+   96 noop
    97 label __label22
    98 noop
    99 label __label23
 
   120 noop
   121 set currTick prevTick
   122 noop
-    * jump __label28 always
+  123 noop
   124 label __label27
   125 noop
   126 label __label28
 
   138 noop
   139 set curr value
   140 noop
-    * jump __label35 always
+  141 noop
   142 label __label34
   143 noop
   144 label __label35
 
   167 op add index startIndex 1
   168 noop
   169 noop
-    * jump __label39 always
+  170 noop
   171 label __label38
   172 noop
   173 label __label39

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   178 print "Total items: [gold]"
   179 print curr
   180 print "[]\n"
-    * op mul __tmp46 rate 3600
-    * op floor __tmp47 __tmp46
+  181 noop
+  182 op idiv __tmp47 rate 0.0002777777777777778
   183 print "Current rate [green]"
   184 print __tmp47
   185 print "[]/min\n"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   151 noop
   152 op sub time currTick prevTick
   153 noop
-    * jump __label36 notEqual amount 0
   154 set rate 0
   155 noop
-    * jump __label37 always
+  156 jump __label37 equal amount 0
   157 label __label36
   158 op div __tmp40 amount time
   159 op max rate __tmp40 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    88 label __label17
    89 set memSize __tmp12
    90 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
-    * op idiv startIndex memSize 2
+   91 op idiv startIndex __tmp12 2
    92 noop
-    * op sub memSize memSize 1
+   93 op sub memSize __tmp12 1
    94 noop
    95 noop
    96 noop

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     2 set TARGET_MEMORY null
     3 label __label0
     4 jump __label2 notEqual SOURCE_MEMORY null
+    5 label __label40
     6 print "Item Rate Meter"
     7 set n @links
     8 noop
     9 label __label3
    10 jump __label5 lessThanEq n 0
+   11 label __label41
    12 op sub n n 1
    13 noop
    14 getlink block n
 
    43 noop
    44 label __label6
    45 label __label4
-    * jump __label3 always
+   46 jump __label41 greaterThan n 0
    47 label __label5
    48 print "\nMessage: "
    49 print MESSAGE
 
    62 label __label14
    63 printflush MESSAGE
    64 label __label1
-    * jump __label0 always
+   65 jump __label40 equal SOURCE_MEMORY null
    66 label __label2
    67 jump __label15 notEqual TARGET_MEMORY null
    68 set TARGET_MEMORY SOURCE_MEMORY
 
   128 label __label28
   129 label __label29
   130 jump __label31 greaterThanEq @tick nextTick
+  131 label __label42
   132 jump __label32 greaterThanEq @tick prevTick
   133 end
   134 noop
 
   148 noop
   149 label __label33
   150 label __label30
-    * jump __label29 always
+  151 jump __label42 lessThan @tick nextTick
   152 label __label31
   153 op sub amount curr prev
   154 noop

Modifications by Loop Optimization: replicate condition at line 56 (+1 instructions):
 
   112 label __label24
   113 sensor __tmp21 switch1 @enabled
   114 jump __label26 notEqual __tmp21 0
+  115 label __label43
   116 op add nextTick nextTick TICKS
   117 noop
   118 op add __tmp24 nextTick TICKS
 
   200 set prevTick currTick
   201 set prev curr
   202 label __label25
-    * jump __label24 always
+  203 sensor __tmp21 switch1 @enabled
+  204 jump __label43 equal __tmp21 0
   205 label __label26
   206 control enabled switch1 0
   207 end

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
   132 label __label42
   133 jump __label32 greaterThanEq @tick prevTick
   134 end
-    * noop
-    * jump __label33 always
   135 label __label32
   136 read value SOURCE_MEMORY 0
   137 noop

Modifications by Final phase, Print Merging, iteration 1 (-5 instructions):
 
   174 label __label39
   175 write index TARGET_MEMORY startIndex
   176 write rate TARGET_MEMORY index
-    * print "Item Rate Meter"
-    * print "\n"
+  177 print "Item Rate Meter\n"
   178 print "Total items: [gold]"
   179 print curr
-    * print "[]\n"
   180 noop
   181 op idiv __tmp47 rate 0.0002777777777777778
-    * print "Current rate [green]"
+  182 print "[]\nCurrent rate [green]"
   183 print __tmp47
-    * print "[]/min\n"
-    * print "  memory start: [gold]"
+  184 print "[]/min\n  memory start: [gold]"
   185 print startIndex
-    * print "[]\n"
-    * print "  memory index: [gold]"
+  186 print "[]\n  memory index: [gold]"
   187 print index
-    * print "[]\n"
   188 op floor __tmp48 time
-    * print "[lightgray]Loop time: "
+  189 print "[]\n[lightgray]Loop time: "
   190 print __tmp48
   191 print " ms"
   192 printflush message1

Final code before resolving virtual instructions:

set TICKS 60
set SOURCE_MEMORY null
set TARGET_MEMORY null
jump __label2 notEqual SOURCE_MEMORY null
label __label40
print "Item Rate Meter"
set n @links
jump __label5 lessThanEq n 0
label __label41
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @memory-bank
jump __label11 notEqual __ast0 @memory-cell
label __label12
set TARGET_MEMORY SOURCE_MEMORY
set SOURCE_MEMORY block
label __label11
label __label6
jump __label41 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSource memory: "
print SOURCE_MEMORY
print "\nTarget memory: "
print TARGET_MEMORY
jump __label13 notEqual SOURCE_MEMORY null
print "\nNo memory."
label __label13
printflush MESSAGE
jump __label40 equal SOURCE_MEMORY null
label __label2
jump __label15 notEqual TARGET_MEMORY null
set TARGET_MEMORY SOURCE_MEMORY
label __label15
set startIndex 0
sensor __ast1 TARGET_MEMORY @type
jump __label18 notEqual __ast1 @memory-cell
set __tmp12 64
jump __label17 always 0 0
label __label18
jump __label20 notEqual __ast1 @memory-bank
set __tmp12 512
jump __label17 always 0 0
label __label20
set __tmp12 0
label __label17
set memSize __tmp12
jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
op idiv startIndex __tmp12 2
op sub memSize __tmp12 1
label __label22
set prevTick @tick
read prev SOURCE_MEMORY 0
set currTick prevTick
set curr prev
read __tmp19 TARGET_MEMORY startIndex
op max index startIndex __tmp19
set nextTick prevTick
sensor __tmp21 switch1 @enabled
jump __label26 notEqual __tmp21 0
label __label43
op add nextTick nextTick TICKS
op add __tmp24 nextTick TICKS
jump __label27 lessThanEq @tick __tmp24
set prevTick @tick
op add nextTick prevTick TICKS
set currTick prevTick
label __label27
jump __label31 greaterThanEq @tick nextTick
label __label42
jump __label32 greaterThanEq @tick prevTick
end
label __label32
read value SOURCE_MEMORY 0
jump __label34 equal value curr
set currTick @tick
set curr value
label __label34
jump __label42 lessThan @tick nextTick
label __label31
op sub amount curr prev
op sub time currTick prevTick
set rate 0
jump __label37 equal amount 0
op div __tmp40 amount time
op max rate __tmp40 0
label __label37
op add index index 1
jump __label38 lessThan index memSize
op add index startIndex 1
label __label38
write index TARGET_MEMORY startIndex
write rate TARGET_MEMORY index
print "Item Rate Meter\n"
print "Total items: [gold]"
print curr
op idiv __tmp47 rate 0.0002777777777777778
print "[]\nCurrent rate [green]"
print __tmp47
print "[]/min\n  memory start: [gold]"
print startIndex
print "[]\n  memory index: [gold]"
print index
op floor __tmp48 time 0
print "[]\n[lightgray]Loop time: "
print __tmp48
print " ms"
printflush message1
set prevTick currTick
set prev curr
sensor __tmp21 switch1 @enabled
jump __label43 equal __tmp21 0
label __label26
control enabled switch1 0 0 0 0
end
