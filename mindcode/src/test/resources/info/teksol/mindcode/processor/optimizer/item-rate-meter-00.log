   178 instructions before optimizations.
    20 instructions eliminated by Temp Variables Elimination.
    20 instructions eliminated by Dead Code Elimination (4 iterations).
    12 instructions eliminated by Jump Optimization (3 iterations).
     7 instructions eliminated by Single Step Elimination (4 iterations).
     1 instructions eliminated by Expression Optimization (2 iterations).
     1 instructions eliminated by If Expression Optimization (2 iterations).
     3 instructions modified by Data Flow Optimization (4 iterations).
     4 instructions modified by Loop Optimization (2 iterations).
     4 loops improved by Loop Optimization.
     5 instructions eliminated by Jump Straightening (3 iterations).
     1 instructions eliminated by Unreachable Code Elimination.
     5 instructions eliminated by Print Merging.
   106 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 889):
  * Loop Optimization: replicate condition at line 57            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-20 instructions):
 
     6 op equal __tmp0 SOURCE_MEMORY null
     7 jump __label2 equal __tmp0 false
     8 print "Item Rate Meter"
-    * set __tmp1 @links
-    * set n __tmp1
+    9 set n @links
    10 label __label3
    11 op greaterThan __tmp2 n 0
    12 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
+   13 op sub n n 1
+   14 getlink block n
    15 print "\nFound: "
    16 print block
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   17 sensor __ast0 block @type
    18 jump __label8 equal __ast0 @message
    19 jump __label7 always
    20 label __label8
 
    72 set __tmp10 null
    73 label __label16
    74 set startIndex 0
-    * sensor __tmp11 TARGET_MEMORY @type
-    * set __ast1 __tmp11
+   75 sensor __ast1 TARGET_MEMORY @type
    76 jump __label19 equal __ast1 @memory-cell
    77 jump __label18 always
    78 label __label19
 
    90 set memSize __tmp12
    91 op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
    92 jump __label22 equal __tmp13 false
-    * op idiv __tmp15 memSize 2
-    * set startIndex __tmp15
-    * op sub __tmp16 memSize 1
-    * set memSize __tmp16
+   93 op idiv startIndex memSize 2
+   94 op sub memSize memSize 1
    95 set __tmp14 memSize
    96 jump __label23 always
    97 label __label22
    98 set __tmp14 null
    99 label __label23
-    * set __tmp17 @tick
-    * set prevTick __tmp17
-    * read __tmp18 SOURCE_MEMORY 0
-    * set prev __tmp18
+  100 set prevTick @tick
+  101 read prev SOURCE_MEMORY 0
   102 set currTick prevTick
   103 set curr prev
   104 read __tmp19 TARGET_MEMORY startIndex
-    * op max __tmp20 startIndex __tmp19
-    * set index __tmp20
+  105 op max index startIndex __tmp19
   106 set nextTick prevTick
   107 label __label24
   108 sensor __tmp21 switch1 @enabled
   109 op equal __tmp22 __tmp21 0
   110 jump __label26 equal __tmp22 false
-    * op add __tmp23 nextTick TICKS
-    * set nextTick __tmp23
+  111 op add nextTick nextTick TICKS
   112 op add __tmp24 nextTick TICKS
   113 op greaterThan __tmp25 @tick __tmp24
   114 jump __label27 equal __tmp25 false
-    * set __tmp27 @tick
-    * set prevTick __tmp27
-    * op add __tmp28 prevTick TICKS
-    * set nextTick __tmp28
+  115 set prevTick @tick
+  116 op add nextTick prevTick TICKS
   117 set currTick prevTick
   118 set __tmp26 currTick
   119 jump __label28 always
 
   129 set __tmp31 null
   130 jump __label33 always
   131 label __label32
-    * read __tmp32 SOURCE_MEMORY 0
-    * set value __tmp32
+  132 read value SOURCE_MEMORY 0
   133 op notEqual __tmp33 value curr
   134 jump __label34 equal __tmp33 false
-    * set __tmp35 @tick
-    * set currTick __tmp35
+  135 set currTick @tick
   136 set curr value
   137 set __tmp34 curr
   138 jump __label35 always
 
   144 label __label30
   145 jump __label29 always
   146 label __label31
-    * op sub __tmp36 curr prev
-    * set amount __tmp36
-    * op sub __tmp37 currTick prevTick
-    * set time __tmp37
+  147 op sub amount curr prev
+  148 op sub time currTick prevTick
   149 op equal __tmp38 amount 0
   150 jump __label36 equal __tmp38 false
   151 set rate 0
 
   153 jump __label37 always
   154 label __label36
   155 op div __tmp40 amount time
-    * op max __tmp41 __tmp40 0
-    * set rate __tmp41
+  156 op max rate __tmp40 0
   157 set __tmp39 rate
   158 label __label37
-    * op add __tmp42 index 1
-    * set index __tmp42
+  159 op add index index 1
   160 op greaterThanEq __tmp43 index memSize
   161 jump __label38 equal __tmp43 false
-    * op add __tmp45 startIndex 1
-    * set index __tmp45
+  162 op add index startIndex 1
   163 set __tmp44 index
   164 jump __label39 always
   165 label __label38

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-18 instructions):
 
    19 jump __label7 always
    20 label __label8
    21 set MESSAGE block
-    * set __tmp6 MESSAGE
    22 jump __label6 always
    23 label __label7
    24 jump __label10 equal __ast0 @switch
    25 jump __label9 always
    26 label __label10
    27 set SWITCH block
-    * set __tmp6 SWITCH
    28 jump __label6 always
    29 label __label9
    30 jump __label12 equal __ast0 @memory-bank
 
    33 label __label12
    34 set TARGET_MEMORY SOURCE_MEMORY
    35 set SOURCE_MEMORY block
-    * set __tmp6 SOURCE_MEMORY
    36 jump __label6 always
    37 label __label11
-    * set __tmp6 null
    38 label __label6
    39 label __label4
    40 jump __label3 always
 
    50 op equal __tmp7 SOURCE_MEMORY null
    51 jump __label13 equal __tmp7 false
    52 print "\nNo memory."
-    * set __tmp8 "\nNo memory."
    53 jump __label14 always
    54 label __label13
-    * set __tmp8 null
    55 label __label14
    56 printflush MESSAGE
    57 label __label1
 
    60 op equal __tmp9 TARGET_MEMORY null
    61 jump __label15 equal __tmp9 false
    62 set TARGET_MEMORY SOURCE_MEMORY
-    * set __tmp10 TARGET_MEMORY
    63 jump __label16 always
    64 label __label15
-    * set __tmp10 null
    65 label __label16
    66 set startIndex 0
    67 sensor __ast1 TARGET_MEMORY @type
 
    84 jump __label22 equal __tmp13 false
    85 op idiv startIndex memSize 2
    86 op sub memSize memSize 1
-    * set __tmp14 memSize
    87 jump __label23 always
    88 label __label22
-    * set __tmp14 null
    89 label __label23
    90 set prevTick @tick
    91 read prev SOURCE_MEMORY 0
 
   105 set prevTick @tick
   106 op add nextTick prevTick TICKS
   107 set currTick prevTick
-    * set __tmp26 currTick
   108 jump __label28 always
   109 label __label27
-    * set __tmp26 null
   110 label __label28
   111 label __label29
   112 op lessThan __tmp29 @tick nextTick
 
   114 op lessThan __tmp30 @tick prevTick
   115 jump __label32 equal __tmp30 false
   116 end
-    * set __tmp31 null
   117 jump __label33 always
   118 label __label32
   119 read value SOURCE_MEMORY 0
 
   126 label __label34
   127 set __tmp34 null
   128 label __label35
-    * set __tmp31 __tmp34
   129 label __label33
   130 label __label30
   131 jump __label29 always
 
   135 op equal __tmp38 amount 0
   136 jump __label36 equal __tmp38 false
   137 set rate 0
-    * set __tmp39 rate
   138 jump __label37 always
   139 label __label36
   140 op div __tmp40 amount time
   141 op max rate __tmp40 0
-    * set __tmp39 rate
   142 label __label37
   143 op add index index 1
   144 op greaterThanEq __tmp43 index memSize
   145 jump __label38 equal __tmp43 false
   146 op add index startIndex 1
-    * set __tmp44 index
   147 jump __label39 always
   148 label __label38
-    * set __tmp44 null
   149 label __label39
   150 write index TARGET_MEMORY startIndex
   151 write rate TARGET_MEMORY index

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   121 jump __label34 equal __tmp33 false
   122 set currTick @tick
   123 set curr value
-    * set __tmp34 curr
   124 jump __label35 always
   125 label __label34
-    * set __tmp34 null
   126 label __label35
   127 label __label33
   128 label __label30

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-5 instructions):
 
    15 print "\nFound: "
    16 print block
    17 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   18 jump __label7 notEqual __ast0 @message
    19 label __label8
    20 set MESSAGE block
    21 jump __label6 always
    22 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   23 jump __label9 notEqual __ast0 @switch
    24 label __label10
    25 set SWITCH block
    26 jump __label6 always
    27 label __label9
    28 jump __label12 equal __ast0 @memory-bank
-    * jump __label12 equal __ast0 @memory-cell
-    * jump __label11 always
+   29 jump __label11 notEqual __ast0 @memory-cell
    30 label __label12
    31 set TARGET_MEMORY SOURCE_MEMORY
    32 set SOURCE_MEMORY block
 
    62 label __label16
    63 set startIndex 0
    64 sensor __ast1 TARGET_MEMORY @type
-    * jump __label19 equal __ast1 @memory-cell
-    * jump __label18 always
+   65 jump __label18 notEqual __ast1 @memory-cell
    66 label __label19
    67 set __tmp12 64
    68 jump __label17 always
    69 label __label18
-    * jump __label21 equal __ast1 @memory-bank
-    * jump __label20 always
+   70 jump __label20 notEqual __ast1 @memory-bank
    71 label __label21
    72 set __tmp12 512
    73 jump __label17 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-12 instructions):
 
     3 set SWITCH null
     4 set MESSAGE SWITCH
     5 label __label0
-    * op equal __tmp0 SOURCE_MEMORY null
-    * jump __label2 equal __tmp0 false
+    6 jump __label2 notEqual SOURCE_MEMORY null
     7 print "Item Rate Meter"
     8 set n @links
     9 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+   10 jump __label5 lessThanEq n 0
    11 op sub n n 1
    12 getlink block n
    13 print "\nFound: "
 
    42 print SOURCE_MEMORY
    43 print "\nTarget memory: "
    44 print TARGET_MEMORY
-    * op equal __tmp7 SOURCE_MEMORY null
-    * jump __label13 equal __tmp7 false
+   45 jump __label13 notEqual SOURCE_MEMORY null
    46 print "\nNo memory."
    47 jump __label14 always
    48 label __label13
 
    51 label __label1
    52 jump __label0 always
    53 label __label2
-    * op equal __tmp9 TARGET_MEMORY null
-    * jump __label15 equal __tmp9 false
+   54 jump __label15 notEqual TARGET_MEMORY null
    55 set TARGET_MEMORY SOURCE_MEMORY
    56 jump __label16 always
    57 label __label15
 
    71 set __tmp12 0
    72 label __label17
    73 set memSize __tmp12
-    * op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
-    * jump __label22 equal __tmp13 false
+   74 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
    75 op idiv startIndex memSize 2
    76 op sub memSize memSize 1
    77 jump __label23 always
 
    86 set nextTick prevTick
    87 label __label24
    88 sensor __tmp21 switch1 @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label26 equal __tmp22 false
+   89 jump __label26 notEqual __tmp21 0
    90 op add nextTick nextTick TICKS
    91 op add __tmp24 nextTick TICKS
-    * op greaterThan __tmp25 @tick __tmp24
-    * jump __label27 equal __tmp25 false
+   92 jump __label27 lessThanEq @tick __tmp24
    93 set prevTick @tick
    94 op add nextTick prevTick TICKS
    95 set currTick prevTick
 
    97 label __label27
    98 label __label28
    99 label __label29
-    * op lessThan __tmp29 @tick nextTick
-    * jump __label31 equal __tmp29 false
-    * op lessThan __tmp30 @tick prevTick
-    * jump __label32 equal __tmp30 false
+  100 jump __label31 greaterThanEq @tick nextTick
+  101 jump __label32 greaterThanEq @tick prevTick
   102 end
   103 jump __label33 always
   104 label __label32
   105 read value SOURCE_MEMORY 0
-    * op notEqual __tmp33 value curr
-    * jump __label34 equal __tmp33 false
+  106 jump __label34 equal value curr
   107 set currTick @tick
   108 set curr value
   109 jump __label35 always
 
   115 label __label31
   116 op sub amount curr prev
   117 op sub time currTick prevTick
-    * op equal __tmp38 amount 0
-    * jump __label36 equal __tmp38 false
+  118 jump __label36 notEqual amount 0
   119 set rate 0
   120 jump __label37 always
   121 label __label36
 
   123 op max rate __tmp40 0
   124 label __label37
   125 op add index index 1
-    * op greaterThanEq __tmp43 index memSize
-    * jump __label38 equal __tmp43 false
+  126 jump __label38 lessThan index memSize
   127 op add index startIndex 1
   128 jump __label39 always
   129 label __label38

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-7 instructions):
 
    28 label __label12
    29 set TARGET_MEMORY SOURCE_MEMORY
    30 set SOURCE_MEMORY block
-    * jump __label6 always
    31 label __label11
    32 label __label6
    33 label __label4
 
    43 print TARGET_MEMORY
    44 jump __label13 notEqual SOURCE_MEMORY null
    45 print "\nNo memory."
-    * jump __label14 always
    46 label __label13
    47 label __label14
    48 printflush MESSAGE
 
    51 label __label2
    52 jump __label15 notEqual TARGET_MEMORY null
    53 set TARGET_MEMORY SOURCE_MEMORY
-    * jump __label16 always
    54 label __label15
    55 label __label16
    56 set startIndex 0
 
    71 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
    72 op idiv startIndex memSize 2
    73 op sub memSize memSize 1
-    * jump __label23 always
    74 label __label22
    75 label __label23
    76 set prevTick @tick
 
    89 set prevTick @tick
    90 op add nextTick prevTick TICKS
    91 set currTick prevTick
-    * jump __label28 always
    92 label __label27
    93 label __label28
    94 label __label29
 
   101 jump __label34 equal value curr
   102 set currTick @tick
   103 set curr value
-    * jump __label35 always
   104 label __label34
   105 label __label35
   106 label __label33
 
   119 op add index index 1
   120 jump __label38 lessThan index memSize
   121 op add index startIndex 1
-    * jump __label39 always
   122 label __label38
   123 label __label39
   124 write index TARGET_MEMORY startIndex

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   128 print "Total items: [gold]"
   129 print curr
   130 print "[]\n"
-    * op mul __tmp46 rate 3600
-    * op floor __tmp47 __tmp46
+  131 op idiv __tmp47 rate 0.0002777777777777778
   132 print "Current rate [green]"
   133 print __tmp47
   134 print "[]/min\n"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   109 label __label31
   110 op sub amount curr prev
   111 op sub time currTick prevTick
-    * jump __label36 notEqual amount 0
   112 set rate 0
-    * jump __label37 always
+  113 jump __label37 equal amount 0
   114 label __label36
   115 op div __tmp40 amount time
   116 op max rate __tmp40 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 set SOURCE_MEMORY null
     2 set TARGET_MEMORY null
     3 set SWITCH null
-    * set MESSAGE SWITCH
+    4 set MESSAGE null
     5 label __label0
     6 jump __label2 notEqual SOURCE_MEMORY null
     7 print "Item Rate Meter"
 
    69 label __label17
    70 set memSize __tmp12
    71 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
-    * op idiv startIndex memSize 2
-    * op sub memSize memSize 1
+   72 op idiv startIndex __tmp12 2
+   73 op sub memSize __tmp12 1
    74 label __label22
    75 label __label23
    76 set prevTick @tick

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     3 set SWITCH null
     4 set MESSAGE null
     5 label __label0
-    * jump __label2 notEqual SOURCE_MEMORY null
+    6 label __label40
     7 print "Item Rate Meter"
     8 set n @links
     9 label __label3
    10 jump __label5 lessThanEq n 0
+   11 label __label41
    12 op sub n n 1
    13 getlink block n
    14 print "\nFound: "
 
    32 label __label11
    33 label __label6
    34 label __label4
-    * jump __label3 always
+   35 jump __label41 greaterThan n 0
    36 label __label5
    37 print "\nMessage: "
    38 print MESSAGE
 
    48 label __label14
    49 printflush MESSAGE
    50 label __label1
-    * jump __label0 always
+   51 jump __label40 equal SOURCE_MEMORY null
    52 label __label2
    53 jump __label15 notEqual TARGET_MEMORY null
    54 set TARGET_MEMORY SOURCE_MEMORY
 
    94 label __label28
    95 label __label29
    96 jump __label31 greaterThanEq @tick nextTick
+   97 label __label42
    98 jump __label32 greaterThanEq @tick prevTick
    99 end
   100 jump __label33 always
 
   107 label __label35
   108 label __label33
   109 label __label30
-    * jump __label29 always
+  110 jump __label42 lessThan @tick nextTick
   111 label __label31
   112 op sub amount curr prev
   113 op sub time currTick prevTick

Modifications by Loop Optimization: replicate condition at line 57 (+1 instructions):
 
    84 label __label24
    85 sensor __tmp21 switch1 @enabled
    86 jump __label26 notEqual __tmp21 0
+   87 label __label43
    88 op add nextTick nextTick TICKS
    89 op add __tmp24 nextTick TICKS
    90 jump __label27 lessThanEq @tick __tmp24
 
   148 set prevTick currTick
   149 set prev curr
   150 label __label25
-    * jump __label24 always
+  151 sensor __tmp21 switch1 @enabled
+  152 jump __label43 equal __tmp21 0
   153 label __label26
   154 control enabled switch1 0
   155 end

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-1 instructions):
 
    98 label __label42
    99 jump __label32 greaterThanEq @tick prevTick
   100 end
-    * jump __label33 always
   101 label __label32
   102 read value SOURCE_MEMORY 0
   103 jump __label34 equal value curr

Modifications by Final phase, Print Merging, iteration 1 (-5 instructions):
 
   124 label __label39
   125 write index TARGET_MEMORY startIndex
   126 write rate TARGET_MEMORY index
-    * print "Item Rate Meter"
-    * print "\n"
+  127 print "Item Rate Meter\n"
   128 print "Total items: [gold]"
   129 print curr
-    * print "[]\n"
   130 op idiv __tmp47 rate 0.0002777777777777778
-    * print "Current rate [green]"
+  131 print "[]\nCurrent rate [green]"
   132 print __tmp47
-    * print "[]/min\n"
-    * print "  memory start: [gold]"
+  133 print "[]/min\n  memory start: [gold]"
   134 print startIndex
-    * print "[]\n"
-    * print "  memory index: [gold]"
+  135 print "[]\n  memory index: [gold]"
   136 print index
-    * print "[]\n"
   137 op floor __tmp48 time
-    * print "[lightgray]Loop time: "
+  138 print "[]\n[lightgray]Loop time: "
   139 print __tmp48
   140 print " ms"
   141 printflush message1

Final code before resolving virtual instructions:

set TICKS 60
set SOURCE_MEMORY null
set TARGET_MEMORY null
set SWITCH null
set MESSAGE null
label __label40
print "Item Rate Meter"
set n @links
jump __label5 lessThanEq n 0
label __label41
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @memory-bank
jump __label11 notEqual __ast0 @memory-cell
label __label12
set TARGET_MEMORY SOURCE_MEMORY
set SOURCE_MEMORY block
label __label11
label __label6
jump __label41 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSource memory: "
print SOURCE_MEMORY
print "\nTarget memory: "
print TARGET_MEMORY
jump __label13 notEqual SOURCE_MEMORY null
print "\nNo memory."
label __label13
printflush MESSAGE
jump __label40 equal SOURCE_MEMORY null
jump __label15 notEqual TARGET_MEMORY null
set TARGET_MEMORY SOURCE_MEMORY
label __label15
set startIndex 0
sensor __ast1 TARGET_MEMORY @type
jump __label18 notEqual __ast1 @memory-cell
set __tmp12 64
jump __label17 always 0 0
label __label18
jump __label20 notEqual __ast1 @memory-bank
set __tmp12 512
jump __label17 always 0 0
label __label20
set __tmp12 0
label __label17
set memSize __tmp12
jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
op idiv startIndex __tmp12 2
op sub memSize __tmp12 1
label __label22
set prevTick @tick
read prev SOURCE_MEMORY 0
set currTick prevTick
set curr prev
read __tmp19 TARGET_MEMORY startIndex
op max index startIndex __tmp19
set nextTick prevTick
sensor __tmp21 switch1 @enabled
jump __label26 notEqual __tmp21 0
label __label43
op add nextTick nextTick TICKS
op add __tmp24 nextTick TICKS
jump __label27 lessThanEq @tick __tmp24
set prevTick @tick
op add nextTick prevTick TICKS
set currTick prevTick
label __label27
jump __label31 greaterThanEq @tick nextTick
label __label42
jump __label32 greaterThanEq @tick prevTick
end
label __label32
read value SOURCE_MEMORY 0
jump __label34 equal value curr
set currTick @tick
set curr value
label __label34
jump __label42 lessThan @tick nextTick
label __label31
op sub amount curr prev
op sub time currTick prevTick
set rate 0
jump __label37 equal amount 0
op div __tmp40 amount time
op max rate __tmp40 0
label __label37
op add index index 1
jump __label38 lessThan index memSize
op add index startIndex 1
label __label38
write index TARGET_MEMORY startIndex
write rate TARGET_MEMORY index
print "Item Rate Meter\n"
print "Total items: [gold]"
print curr
op idiv __tmp47 rate 0.0002777777777777778
print "[]\nCurrent rate [green]"
print __tmp47
print "[]/min\n  memory start: [gold]"
print startIndex
print "[]\n  memory index: [gold]"
print index
op floor __tmp48 time 0
print "[]\n[lightgray]Loop time: "
print __tmp48
print " ms"
printflush message1
set prevTick currTick
set prev curr
sensor __tmp21 switch1 @enabled
jump __label43 equal __tmp21 0
label __label26
control enabled switch1 0 0 0 0
end
