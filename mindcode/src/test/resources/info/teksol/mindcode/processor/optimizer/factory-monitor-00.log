   532 instructions before optimizations.
    56 instructions eliminated by Temp Variables Elimination.
    43 instructions eliminated by Dead Code Elimination (5 iterations).
    20 instructions eliminated by Jump Optimization (4 iterations).
    15 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     8 instructions eliminated by If Expression Optimization (3 iterations).
    16 instructions eliminated by Data Flow Optimization (3 passes, 12 iterations).
     4 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    11 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
     1 instructions updated by PropagateJumpTargets.
    10 instructions eliminated by Print Merging.
   357 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 627):
    Loop Optimization: replicate condition at line 14            cost     3, benefit       25,0, efficiency        8,3
  * Loop Optimization: replicate condition at line 160           cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Pass 1: speed optimization selection (cost limit 626):
  * Loop Optimization: replicate condition at line 14            cost     3, benefit       25,0, efficiency        8,3 (+0 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-56 instructions):
 
    12 jump __label2 equal __tmp2 false
    13 print "Universal Factory Monitor"
    14 print "\n"
-    * set __tmp3 @links
-    * set n __tmp3
+   15 set n @links
    16 label __label3
    17 op greaterThan __tmp4 n 0
    18 jump __label5 equal __tmp4 false
-    * op sub __tmp5 n 1
-    * set n __tmp5
-    * getlink __tmp6 n
-    * set block __tmp6
-    * sensor __tmp7 block @type
-    * set __ast0 __tmp7
+   19 op sub n n 1
+   20 getlink block n
+   21 sensor __ast0 block @type
    22 jump __label8 equal __ast0 @message
    23 jump __label7 always
    24 label __label8
 
    45 jump __label13 always
    46 label __label14
    47 set TYPE @silicon-factory
-    * sensor __tmp9 block @itemCapacity
-    * set CAPACITY __tmp9
+   48 sensor CAPACITY block @itemCapacity
    49 set RES1 @sand
    50 set RES2 @coal
    51 set RES3 @itemCapacity
-    * op div __tmp10 100 CAPACITY
-    * set MUL3 __tmp10
+   52 op div MUL3 100 CAPACITY
    53 set MUL2 MUL3
    54 set MUL1 MUL2
    55 set OUTPUT @silicon
 
    60 jump __label15 always
    61 label __label16
    62 set TYPE @silicon-crucible
-    * sensor __tmp11 block @itemCapacity
-    * set CAPACITY __tmp11
+   63 sensor CAPACITY block @itemCapacity
    64 set RES1 @sand
    65 set RES2 @coal
    66 set RES3 @pyratite
-    * op div __tmp12 100 CAPACITY
-    * set MUL3 __tmp12
+   67 op div MUL3 100 CAPACITY
    68 set MUL2 MUL3
    69 set MUL1 MUL2
    70 set OUTPUT @silicon
 
    75 jump __label17 always
    76 label __label18
    77 set TYPE @kiln
-    * sensor __tmp13 block @itemCapacity
-    * set CAPACITY __tmp13
+   78 sensor CAPACITY block @itemCapacity
    79 set RES1 @sand
    80 set RES2 @lead
    81 set RES3 @itemCapacity
-    * op div __tmp14 100 CAPACITY
-    * set MUL3 __tmp14
+   82 op div MUL3 100 CAPACITY
    83 set MUL2 MUL3
    84 set MUL1 MUL2
    85 set OUTPUT @metaglass
 
    90 jump __label19 always
    91 label __label20
    92 set TYPE @phase-weaver
-    * sensor __tmp15 block @itemCapacity
-    * set CAPACITY __tmp15
+   93 sensor CAPACITY block @itemCapacity
    94 set RES1 @sand
    95 set RES2 @thorium
    96 set RES3 @itemCapacity
-    * op div __tmp16 100 CAPACITY
-    * set MUL3 __tmp16
+   97 op div MUL3 100 CAPACITY
    98 set MUL2 MUL3
    99 set MUL1 MUL2
   100 set OUTPUT @phase-fabric
 
   105 jump __label21 always
   106 label __label22
   107 set TYPE @pyratite-mixer
-    * sensor __tmp17 block @itemCapacity
-    * set CAPACITY __tmp17
+  108 sensor CAPACITY block @itemCapacity
   109 set RES1 @sand
   110 set RES2 @coal
   111 set RES3 @lead
-    * op div __tmp18 100 CAPACITY
-    * set MUL3 __tmp18
+  112 op div MUL3 100 CAPACITY
   113 set MUL2 MUL3
   114 set MUL1 MUL2
   115 set OUTPUT @pyratite
 
   120 jump __label23 always
   121 label __label24
   122 set TYPE @blast-mixer
-    * sensor __tmp19 block @itemCapacity
-    * set CAPACITY __tmp19
+  123 sensor CAPACITY block @itemCapacity
   124 set RES1 @pyratite
   125 set RES2 @spore-pod
   126 set RES3 @itemCapacity
-    * op div __tmp20 100 CAPACITY
-    * set MUL3 __tmp20
+  127 op div MUL3 100 CAPACITY
   128 set MUL2 MUL3
   129 set MUL1 MUL2
   130 set OUTPUT @blast-compound
 
   135 jump __label25 always
   136 label __label26
   137 set TYPE @plastanium-compressor
-    * sensor __tmp21 block @itemCapacity
-    * set CAPACITY __tmp21
+  138 sensor CAPACITY block @itemCapacity
   139 set RES1 @titanium
   140 set RES2 @oil
   141 set RES3 @itemCapacity
-    * op div __tmp22 100 CAPACITY
-    * set MUL3 __tmp22
+  142 op div MUL3 100 CAPACITY
   143 set MUL1 MUL3
   144 sensor __tmp23 block @liquidCapacity
-    * op div __tmp24 250 __tmp23
-    * set MUL2 __tmp24
+  145 op div MUL2 250 __tmp23
   146 set OUTPUT @plastanium
   147 set __tmp8 OUTPUT
   148 jump __label6 always
 
   208 set clx 0
   209 set crx clx
   210 op add __tmp32 OFFSET_X BAR_SPACE
-    * op sub __tmp33 __tmp32 2
-    * set clw __tmp33
+  211 op sub clw __tmp32 2
   212 set crw clw
   213 op equal __tmp34 FROM_INDEX 0
   214 jump __label31 equal __tmp34 false
 
   216 jump __label32 always
   217 label __label31
   218 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp37 OFFSET_Y __tmp36
-    * set __tmp35 __tmp37
+  219 op add __tmp35 OFFSET_Y __tmp36
   220 label __label32
   221 set cly __tmp35
   222 set cry cly
   223 op lessThan __tmp38 TO_INDEX 8
   224 jump __label33 equal __tmp38 false
   225 op mul __tmp40 TO_INDEX BAR_GAP
-    * op add __tmp41 OFFSET_Y __tmp40
-    * set __tmp39 __tmp41
+  226 op add __tmp39 OFFSET_Y __tmp40
   227 jump __label34 always
   228 label __label33
   229 set __tmp39 176
   230 label __label34
-    * op sub __tmp42 __tmp39 cly
-    * set clh __tmp42
+  231 op sub clh __tmp39 cly
   232 set crh clh
   233 set __tmp31 crh
   234 jump __label30 always
 
   242 op greaterThanEq __tmp43 FROM_INDEX 8
   243 jump __label35 equal __tmp43 false
   244 op add __tmp45 OFFSET_X BAR_SPACE
-    * op sub __tmp46 __tmp45 2
-    * set crx __tmp46
+  245 op sub crx __tmp45 2
   246 op add __tmp47 OFFSET_X BAR_SPACE
   247 op sub __tmp48 176 __tmp47
-    * op add __tmp49 __tmp48 1
-    * set crw __tmp49
+  248 op add crw __tmp48 1
   249 op mod __tmp50 FROM_INDEX 8
   250 op equal __tmp51 __tmp50 0
   251 jump __label37 equal __tmp51 false
 
   254 label __label37
   255 op mod __tmp53 FROM_INDEX 8
   256 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp55 OFFSET_Y __tmp54
-    * set __tmp52 __tmp55
+  257 op add __tmp52 OFFSET_Y __tmp54
   258 label __label38
   259 set cry __tmp52
   260 op lessThan __tmp56 TO_INDEX 16
   261 jump __label39 equal __tmp56 false
   262 op mod __tmp58 TO_INDEX 8
   263 op mul __tmp59 __tmp58 BAR_GAP
-    * op add __tmp60 OFFSET_Y __tmp59
-    * set __tmp57 __tmp60
+  264 op add __tmp57 OFFSET_Y __tmp59
   265 jump __label40 always
   266 label __label39
   267 set __tmp57 176
   268 label __label40
-    * op sub __tmp61 __tmp57 cry
-    * set crh __tmp61
+  269 op sub crh __tmp57 cry
   270 set clx crx
   271 set clw crw
   272 set cly cry
 
   276 label __label35
   277 set clx 0
   278 op add __tmp62 OFFSET_X BAR_SPACE
-    * op sub __tmp63 __tmp62 2
-    * set clw __tmp63
+  279 op sub clw __tmp62 2
   280 op equal __tmp64 FROM_INDEX 0
   281 jump __label41 equal __tmp64 false
   282 set __tmp65 0
   283 jump __label42 always
   284 label __label41
   285 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp67 OFFSET_Y __tmp66
-    * set __tmp65 __tmp67
+  286 op add __tmp65 OFFSET_Y __tmp66
   287 label __label42
   288 set cly __tmp65
   289 op lessThan __tmp68 TO_INDEX 8
   290 jump __label43 equal __tmp68 false
   291 op mul __tmp70 TO_INDEX BAR_GAP
-    * op add __tmp71 OFFSET_Y __tmp70
-    * set __tmp69 __tmp71
+  292 op add __tmp69 OFFSET_Y __tmp70
   293 jump __label44 always
   294 label __label43
   295 set __tmp69 176
   296 label __label44
-    * op sub __tmp72 __tmp69 cly
-    * set clh __tmp72
+  297 op sub clh __tmp69 cly
   298 op greaterThanEq __tmp73 TO_INDEX 8
   299 jump __label45 equal __tmp73 false
   300 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub __tmp76 __tmp75 2
-    * set crx __tmp76
+  301 op sub crx __tmp75 2
   302 op add __tmp77 OFFSET_X BAR_SPACE
   303 op sub __tmp78 176 __tmp77
-    * op add __tmp79 __tmp78 1
-    * set crw __tmp79
+  304 op add crw __tmp78 1
   305 set cry 0
   306 op lessThan __tmp80 TO_INDEX 16
   307 jump __label47 equal __tmp80 false
   308 op mod __tmp82 TO_INDEX 8
   309 op mul __tmp83 __tmp82 BAR_GAP
-    * op add __tmp84 OFFSET_Y __tmp83
-    * set __tmp81 __tmp84
+  310 op add __tmp81 OFFSET_Y __tmp83
   311 jump __label48 always
   312 label __label47
   313 set __tmp81 176
   314 label __label48
-    * op sub __tmp85 __tmp81 cry
-    * set crh __tmp85
+  315 op sub crh __tmp81 cry
   316 set __tmp74 crh
   317 jump __label46 always
   318 label __label45
 
   331 sensor __tmp86 SWITCH @enabled
   332 op equal __tmp87 __tmp86 0
   333 jump __label51 equal __tmp87 false
-    * set __tmp88 @time
-    * set start __tmp88
+  334 set start @time
   335 print "Universal Factory Monitor"
   336 print "\n"
   337 print "Monitoring: "
 
   353 label __label55
   354 set __tmp91 null
   355 label __label56
-    * getlink __tmp92 n
-    * set factory __tmp92
+  356 getlink factory n
   357 sensor __tmp93 factory @type
   358 op equal __tmp94 __tmp93 TYPE
   359 jump __label57 equal __tmp94 false
   360 set minimum 101
   361 sensor __tmp96 factory RES1
-    * op mul __tmp97 MUL1 __tmp96
-    * set r1 __tmp97
+  362 op mul r1 MUL1 __tmp96
   363 sensor __tmp98 factory RES2
-    * op mul __tmp99 MUL2 __tmp98
-    * set r2 __tmp99
+  364 op mul r2 MUL2 __tmp98
   365 sensor __tmp100 factory RES3
-    * op mul __tmp101 MUL3 __tmp100
-    * set r3 __tmp101
+  366 op mul r3 MUL3 __tmp100
   367 sensor __tmp102 factory OUTPUT
-    * op mul __tmp103 MUL1 __tmp102
-    * set out __tmp103
-    * sensor __tmp104 factory @enabled
-    * set e __tmp104
-    * sensor __tmp105 factory @totalPower
-    * set power __tmp105
-    * sensor __tmp106 factory @timescale
-    * set boost __tmp106
+  368 op mul out MUL1 __tmp102
+  369 sensor e factory @enabled
+  370 sensor power factory @totalPower
+  371 sensor boost factory @timescale
   372 op lessThan __tmp107 r1 minimum
   373 jump __label59 equal __tmp107 false
   374 set minimum r1
 
   399 op greaterThan __tmp113 out LIM1
   400 op sub __tmp114 100 out
   401 op lessThan __tmp115 __tmp114 minimum
-    * op land __tmp116 __tmp113 __tmp115
-    * set showout __tmp116
+  402 op land showout __tmp113 __tmp115
   403 jump __label65 equal showout false
   404 set icon OUTPUT
   405 set __tmp117 icon
 
   407 label __label65
   408 set __tmp117 null
   409 label __label66
-    * op idiv __tmp118 index 8
-    * set column __tmp118
-    * op mod __tmp119 index 8
-    * set row __tmp119
+  410 op idiv column index 8
+  411 op mod row index 8
   412 op mul __tmp120 column BAR_SPACE
-    * op add __tmp121 OFFSET_X __tmp120
-    * set x __tmp121
+  413 op add x OFFSET_X __tmp120
   414 op mul __tmp122 row BAR_GAP
-    * op add __tmp123 OFFSET_Y __tmp122
-    * set y __tmp123
+  415 op add y OFFSET_Y __tmp122
   416 op greaterThan __tmp124 minimum LIM2
   417 op equal __tmp125 showout false
   418 op land __tmp126 __tmp124 __tmp125
 
   474 draw stroke 2
   475 set __tmp128 null
   476 label __label70
-    * op add __tmp152 x 16
-    * set x __tmp152
+  477 op add x x 16
   478 op equal __tmp153 power 0
   479 op equal __tmp154 e 0
   480 op land __tmp155 __tmp153 __tmp154
 
   518 label __label74
   519 op greaterThan __tmp164 boost EXPECTED_BOOST
   520 jump __label81 equal __tmp164 false
-    * op max __tmp166 192 red
-    * set red __tmp166
-    * op max __tmp167 192 green
-    * set green __tmp167
-    * op max __tmp168 192 blue
-    * set blue __tmp168
+  521 op max red 192 red
+  522 op max green 192 green
+  523 op max blue 192 blue
   524 set boost EXPECTED_BOOST
   525 set __tmp165 boost
   526 jump __label82 always
 
   528 set __tmp165 null
   529 label __label82
   530 op mul __tmp169 BAR_LENGTH boost
-    * op idiv __tmp170 __tmp169 EXPECTED_BOOST
-    * set length __tmp170
+  531 op idiv length __tmp169 EXPECTED_BOOST
   532 draw color red green blue 128
   533 op mul __tmp171 minimum length
   534 op idiv __tmp172 __tmp171 100
   535 draw rect x y __tmp172 BAR_WIDTH
   536 draw color red green blue 255
   537 draw lineRect x y length BAR_WIDTH
-    * op add __tmp173 index 1
-    * set index __tmp173
+  538 op add index index 1
   539 set __tmp95 index
   540 jump __label58 always
   541 label __label57

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-35 instructions):
 
    23 jump __label7 always
    24 label __label8
    25 set MESSAGE block
-    * set __tmp8 MESSAGE
    26 jump __label6 always
    27 label __label7
    28 jump __label10 equal __ast0 @switch
    29 jump __label9 always
    30 label __label10
    31 set SWITCH block
-    * set __tmp8 SWITCH
    32 jump __label6 always
    33 label __label9
    34 jump __label12 equal __ast0 @logic-display
 
    36 jump __label11 always
    37 label __label12
    38 set DISPLAY block
-    * set __tmp8 DISPLAY
    39 jump __label6 always
    40 label __label11
    41 jump __label14 equal __ast0 @silicon-factory
 
    50 set MUL2 MUL3
    51 set MUL1 MUL2
    52 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    53 jump __label6 always
    54 label __label13
    55 jump __label16 equal __ast0 @silicon-crucible
 
    64 set MUL2 MUL3
    65 set MUL1 MUL2
    66 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    67 jump __label6 always
    68 label __label15
    69 jump __label18 equal __ast0 @kiln
 
    78 set MUL2 MUL3
    79 set MUL1 MUL2
    80 set OUTPUT @metaglass
-    * set __tmp8 OUTPUT
    81 jump __label6 always
    82 label __label17
    83 jump __label20 equal __ast0 @phase-weaver
 
    92 set MUL2 MUL3
    93 set MUL1 MUL2
    94 set OUTPUT @phase-fabric
-    * set __tmp8 OUTPUT
    95 jump __label6 always
    96 label __label19
    97 jump __label22 equal __ast0 @pyratite-mixer
 
   106 set MUL2 MUL3
   107 set MUL1 MUL2
   108 set OUTPUT @pyratite
-    * set __tmp8 OUTPUT
   109 jump __label6 always
   110 label __label21
   111 jump __label24 equal __ast0 @blast-mixer
 
   120 set MUL2 MUL3
   121 set MUL1 MUL2
   122 set OUTPUT @blast-compound
-    * set __tmp8 OUTPUT
   123 jump __label6 always
   124 label __label23
   125 jump __label26 equal __ast0 @plastanium-compressor
 
   135 sensor __tmp23 block @liquidCapacity
   136 op div MUL2 250 __tmp23
   137 set OUTPUT @plastanium
-    * set __tmp8 OUTPUT
   138 jump __label6 always
   139 label __label25
   140 print "\n  "
   141 print block
   142 print " not supported"
-    * set __tmp8 " not supported"
   143 label __label6
   144 label __label4
   145 jump __label3 always
 
   176 op or __tmp27 __tmp25 __tmp26
   177 jump __label27 equal __tmp27 false
   178 print "No block to monitor or display."
-    * set __tmp28 "No block to monitor or display."
   179 jump __label28 always
   180 label __label27
-    * set __tmp28 null
   181 label __label28
   182 printflush MESSAGE
   183 label __label1
 
   217 label __label34
   218 op sub clh __tmp39 cly
   219 set crh clh
-    * set __tmp31 crh
   220 jump __label30 always
   221 label __label29
   222 set OFFSET_X 5
 
   310 label __label46
   311 set __tmp44 __tmp74
   312 label __label36
-    * set __tmp31 __tmp44
   313 label __label30
   314 control enabled SWITCH 0
   315 label __label49
 
   333 op greaterThanEq __tmp90 index TO_INDEX
   334 jump __label55 equal __tmp90 false
   335 jump __label54 always
-    * set __tmp91 null
   336 jump __label56 always
   337 label __label55
-    * set __tmp91 null
   338 label __label56
   339 getlink factory n
   340 sensor __tmp93 factory @type
 
   356 jump __label59 equal __tmp107 false
   357 set minimum r1
   358 set icon RES1
-    * set __tmp108 icon
   359 jump __label60 always
   360 label __label59
-    * set __tmp108 null
   361 label __label60
   362 op lessThan __tmp109 r2 minimum
   363 jump __label61 equal __tmp109 false
   364 set minimum r2
   365 set icon RES2
-    * set __tmp110 icon
   366 jump __label62 always
   367 label __label61
-    * set __tmp110 null
   368 label __label62
   369 op lessThan __tmp111 r3 minimum
   370 jump __label63 equal __tmp111 false
   371 set minimum r3
   372 set icon RES3
-    * set __tmp112 icon
   373 jump __label64 always
   374 label __label63
-    * set __tmp112 null
   375 label __label64
   376 op greaterThan __tmp113 out LIM1
   377 op sub __tmp114 100 out
 
   379 op land showout __tmp113 __tmp115
   380 jump __label65 equal showout false
   381 set icon OUTPUT
-    * set __tmp117 icon
   382 jump __label66 always
   383 label __label65
-    * set __tmp117 null
   384 label __label66
   385 op idiv column index 8
   386 op mod row index 8
 
   393 op land __tmp126 __tmp124 __tmp125
   394 jump __label67 equal __tmp126 false
   395 set icon TYPE
-    * set __tmp127 icon
   396 jump __label68 always
   397 label __label67
-    * set __tmp127 null
   398 label __label68
   399 draw color 255 255 255 255
   400 jump __label69 equal e false
 
   425 draw rect __tmp140 __tmp141 2 2
   426 set __tmp130 null
   427 label __label72
-    * set __tmp128 __tmp130
   428 jump __label70 always
   429 label __label69
   430 draw color 255 80 80 255
 
   444 op sub __tmp151 y 1
   445 draw lineRect __tmp150 __tmp151 16 16
   446 draw stroke 2
-    * set __tmp128 null
   447 label __label70
   448 op add x x 16
   449 op equal __tmp153 power 0
 
   453 set red 255
   454 set green 0
   455 set blue 0
-    * set __tmp156 blue
   456 jump __label74 always
   457 label __label73
   458 jump __label75 equal showout false
 
   484 set blue 0
   485 set __tmp157 blue
   486 label __label76
-    * set __tmp156 __tmp157
   487 label __label74
   488 op greaterThan __tmp164 boost EXPECTED_BOOST
   489 jump __label81 equal __tmp164 false
 
   491 op max green 192 green
   492 op max blue 192 blue
   493 set boost EXPECTED_BOOST
-    * set __tmp165 boost
   494 jump __label82 always
   495 label __label81
-    * set __tmp165 null
   496 label __label82
   497 op mul __tmp169 BAR_LENGTH boost
   498 op idiv length __tmp169 EXPECTED_BOOST
 
   503 draw color red green blue 255
   504 draw lineRect x y length BAR_WIDTH
   505 op add index index 1
-    * set __tmp95 index
   506 jump __label58 always
   507 label __label57
-    * set __tmp95 null
   508 label __label58
   509 label __label53
   510 op add n n 1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-6 instructions):
 
   257 set clw crw
   258 set cly cry
   259 set clh crh
-    * set __tmp44 clh
   260 jump __label36 always
   261 label __label35
   262 set clx 0
 
   307 set crh clh
   308 set __tmp74 crh
   309 label __label46
-    * set __tmp44 __tmp74
   310 label __label36
   311 label __label30
   312 control enabled SWITCH 0
 
   401 op add __tmp131 x 7
   402 op add __tmp132 y 7
   403 draw image __tmp131 __tmp132 icon 16 0
-    * set __tmp130 null
   404 jump __label72 always
   405 label __label71
   406 draw color 255 80 80 255
 
   420 op add __tmp140 x 4
   421 op add __tmp141 y 6
   422 draw rect __tmp140 __tmp141 2 2
-    * set __tmp130 null
   423 label __label72
   424 jump __label70 always
   425 label __label69
 
   456 set green 0
   457 set blue 255
   458 set minimum out
-    * set __tmp157 minimum
   459 jump __label76 always
   460 label __label75
   461 op greaterThan __tmp158 minimum LIM2
 
   477 label __label80
   478 set green __tmp163
   479 set blue 0
-    * set __tmp157 blue
   480 label __label76
   481 label __label74
   482 op greaterThan __tmp164 boost EXPECTED_BOOST

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   298 set __tmp81 176
   299 label __label48
   300 op sub crh __tmp81 cry
-    * set __tmp74 crh
   301 jump __label46 always
   302 label __label45
   303 set crx clx
   304 set crw clw
   305 set cry cly
   306 set crh clh
-    * set __tmp74 crh
   307 label __label46
   308 label __label36
   309 label __label30

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
    19 op sub n n 1
    20 getlink block n
    21 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   22 jump __label7 notEqual __ast0 @message
    23 label __label8
    24 set MESSAGE block
    25 jump __label6 always
    26 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   27 jump __label9 notEqual __ast0 @switch
    28 label __label10
    29 set SWITCH block
    30 jump __label6 always
    31 label __label9
    32 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   33 jump __label11 notEqual __ast0 @large-logic-display
    34 label __label12
    35 set DISPLAY block
    36 jump __label6 always
    37 label __label11
-    * jump __label14 equal __ast0 @silicon-factory
-    * jump __label13 always
+   38 jump __label13 notEqual __ast0 @silicon-factory
    39 label __label14
    40 set TYPE @silicon-factory
    41 sensor CAPACITY block @itemCapacity
 
    48 set OUTPUT @silicon
    49 jump __label6 always
    50 label __label13
-    * jump __label16 equal __ast0 @silicon-crucible
-    * jump __label15 always
+   51 jump __label15 notEqual __ast0 @silicon-crucible
    52 label __label16
    53 set TYPE @silicon-crucible
    54 sensor CAPACITY block @itemCapacity
 
    61 set OUTPUT @silicon
    62 jump __label6 always
    63 label __label15
-    * jump __label18 equal __ast0 @kiln
-    * jump __label17 always
+   64 jump __label17 notEqual __ast0 @kiln
    65 label __label18
    66 set TYPE @kiln
    67 sensor CAPACITY block @itemCapacity
 
    74 set OUTPUT @metaglass
    75 jump __label6 always
    76 label __label17
-    * jump __label20 equal __ast0 @phase-weaver
-    * jump __label19 always
+   77 jump __label19 notEqual __ast0 @phase-weaver
    78 label __label20
    79 set TYPE @phase-weaver
    80 sensor CAPACITY block @itemCapacity
 
    87 set OUTPUT @phase-fabric
    88 jump __label6 always
    89 label __label19
-    * jump __label22 equal __ast0 @pyratite-mixer
-    * jump __label21 always
+   90 jump __label21 notEqual __ast0 @pyratite-mixer
    91 label __label22
    92 set TYPE @pyratite-mixer
    93 sensor CAPACITY block @itemCapacity
 
   100 set OUTPUT @pyratite
   101 jump __label6 always
   102 label __label21
-    * jump __label24 equal __ast0 @blast-mixer
-    * jump __label23 always
+  103 jump __label23 notEqual __ast0 @blast-mixer
   104 label __label24
   105 set TYPE @blast-mixer
   106 sensor CAPACITY block @itemCapacity
 
   113 set OUTPUT @blast-compound
   114 jump __label6 always
   115 label __label23
-    * jump __label26 equal __ast0 @plastanium-compressor
-    * jump __label25 always
+  116 jump __label25 notEqual __ast0 @plastanium-compressor
   117 label __label26
   118 set TYPE @plastanium-compressor
   119 sensor CAPACITY block @itemCapacity

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-20 instructions):
 
    14 print "\n"
    15 set n @links
    16 label __label3
-    * op greaterThan __tmp4 n 0
-    * jump __label5 equal __tmp4 false
+   17 jump __label5 lessThanEq n 0
    18 op sub n n 1
    19 getlink block n
    20 sensor __ast0 block @type
 
   173 jump __label0 always
   174 label __label2
   175 sensor __tmp29 DISPLAY @type
-    * op equal __tmp30 __tmp29 @logic-display
-    * jump __label29 equal __tmp30 false
+  176 jump __label29 notEqual __tmp29 @logic-display
   177 set OFFSET_X 2
   178 set OFFSET_Y 2
   179 set BAR_WIDTH 14
 
   185 op add __tmp32 OFFSET_X BAR_SPACE
   186 op sub clw __tmp32 2
   187 set crw clw
-    * op equal __tmp34 FROM_INDEX 0
-    * jump __label31 equal __tmp34 false
+  188 jump __label31 notEqual FROM_INDEX 0
   189 set __tmp35 0
   190 jump __label32 always
   191 label __label31
 
   194 label __label32
   195 set cly __tmp35
   196 set cry cly
-    * op lessThan __tmp38 TO_INDEX 8
-    * jump __label33 equal __tmp38 false
+  197 jump __label33 greaterThanEq TO_INDEX 8
   198 op mul __tmp40 TO_INDEX BAR_GAP
   199 op add __tmp39 OFFSET_Y __tmp40
   200 jump __label34 always
 
   211 set BAR_LENGTH 61
   212 set BAR_SPACE 88
   213 set BAR_GAP 22
-    * op greaterThanEq __tmp43 FROM_INDEX 8
-    * jump __label35 equal __tmp43 false
+  214 jump __label35 lessThan FROM_INDEX 8
   215 op add __tmp45 OFFSET_X BAR_SPACE
   216 op sub crx __tmp45 2
   217 op add __tmp47 OFFSET_X BAR_SPACE
   218 op sub __tmp48 176 __tmp47
   219 op add crw __tmp48 1
   220 op mod __tmp50 FROM_INDEX 8
-    * op equal __tmp51 __tmp50 0
-    * jump __label37 equal __tmp51 false
+  221 jump __label37 notEqual __tmp50 0
   222 set __tmp52 0
   223 jump __label38 always
   224 label __label37
 
   227 op add __tmp52 OFFSET_Y __tmp54
   228 label __label38
   229 set cry __tmp52
-    * op lessThan __tmp56 TO_INDEX 16
-    * jump __label39 equal __tmp56 false
+  230 jump __label39 greaterThanEq TO_INDEX 16
   231 op mod __tmp58 TO_INDEX 8
   232 op mul __tmp59 __tmp58 BAR_GAP
   233 op add __tmp57 OFFSET_Y __tmp59
 
   245 set clx 0
   246 op add __tmp62 OFFSET_X BAR_SPACE
   247 op sub clw __tmp62 2
-    * op equal __tmp64 FROM_INDEX 0
-    * jump __label41 equal __tmp64 false
+  248 jump __label41 notEqual FROM_INDEX 0
   249 set __tmp65 0
   250 jump __label42 always
   251 label __label41
 
   253 op add __tmp65 OFFSET_Y __tmp66
   254 label __label42
   255 set cly __tmp65
-    * op lessThan __tmp68 TO_INDEX 8
-    * jump __label43 equal __tmp68 false
+  256 jump __label43 greaterThanEq TO_INDEX 8
   257 op mul __tmp70 TO_INDEX BAR_GAP
   258 op add __tmp69 OFFSET_Y __tmp70
   259 jump __label44 always
 
   261 set __tmp69 176
   262 label __label44
   263 op sub clh __tmp69 cly
-    * op greaterThanEq __tmp73 TO_INDEX 8
-    * jump __label45 equal __tmp73 false
+  264 jump __label45 lessThan TO_INDEX 8
   265 op add __tmp75 OFFSET_X BAR_SPACE
   266 op sub crx __tmp75 2
   267 op add __tmp77 OFFSET_X BAR_SPACE
   268 op sub __tmp78 176 __tmp77
   269 op add crw __tmp78 1
   270 set cry 0
-    * op lessThan __tmp80 TO_INDEX 16
-    * jump __label47 equal __tmp80 false
+  271 jump __label47 greaterThanEq TO_INDEX 16
   272 op mod __tmp82 TO_INDEX 8
   273 op mul __tmp83 __tmp82 BAR_GAP
   274 op add __tmp81 OFFSET_Y __tmp83
 
   289 control enabled SWITCH 0
   290 label __label49
   291 sensor __tmp86 SWITCH @enabled
-    * op equal __tmp87 __tmp86 0
-    * jump __label51 equal __tmp87 false
+  292 jump __label51 notEqual __tmp86 0
   293 set start @time
   294 print "Universal Factory Monitor"
   295 print "\n"
 
   304 set n 0
   305 label __label52
   306 jump __label54 greaterThanEq n __tmp89
-    * op greaterThanEq __tmp90 index TO_INDEX
-    * jump __label55 equal __tmp90 false
+  307 jump __label55 lessThan index TO_INDEX
   308 jump __label54 always
   309 jump __label56 always
   310 label __label55
   311 label __label56
   312 getlink factory n
   313 sensor __tmp93 factory @type
-    * op equal __tmp94 __tmp93 TYPE
-    * jump __label57 equal __tmp94 false
+  314 jump __label57 notEqual __tmp93 TYPE
   315 set minimum 101
   316 sensor __tmp96 factory RES1
   317 op mul r1 MUL1 __tmp96
 
   324 sensor e factory @enabled
   325 sensor power factory @totalPower
   326 sensor boost factory @timescale
-    * op lessThan __tmp107 r1 minimum
-    * jump __label59 equal __tmp107 false
+  327 jump __label59 greaterThanEq r1 minimum
   328 set minimum r1
   329 set icon RES1
   330 jump __label60 always
   331 label __label59
   332 label __label60
-    * op lessThan __tmp109 r2 minimum
-    * jump __label61 equal __tmp109 false
+  333 jump __label61 greaterThanEq r2 minimum
   334 set minimum r2
   335 set icon RES2
   336 jump __label62 always
   337 label __label61
   338 label __label62
-    * op lessThan __tmp111 r3 minimum
-    * jump __label63 equal __tmp111 false
+  339 jump __label63 greaterThanEq r3 minimum
   340 set minimum r3
   341 set icon RES3
   342 jump __label64 always
 
   367 label __label68
   368 draw color 255 255 255 255
   369 jump __label69 equal e false
-    * op greaterThan __tmp129 power 0
-    * jump __label71 equal __tmp129 false
+  370 jump __label71 lessThanEq power 0
   371 op add __tmp131 x 7
   372 op add __tmp132 y 7
   373 draw image __tmp131 __tmp132 icon 16 0
 
   438 set __tmp161 255
   439 label __label78
   440 set red __tmp161
-    * op greaterThan __tmp162 minimum LIM1
-    * jump __label79 equal __tmp162 false
+  441 jump __label79 lessThanEq minimum LIM1
   442 set __tmp163 255
   443 jump __label80 always
   444 label __label79
 
   448 set blue 0
   449 label __label76
   450 label __label74
-    * op greaterThan __tmp164 boost EXPECTED_BOOST
-    * jump __label81 equal __tmp164 false
+  451 jump __label81 lessThanEq boost EXPECTED_BOOST
   452 op max red 192 red
   453 op max green 192 green
   454 op max blue 192 blue

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
   165 op or __tmp27 __tmp25 __tmp26
   166 jump __label27 equal __tmp27 false
   167 print "No block to monitor or display."
-    * jump __label28 always
   168 label __label27
   169 label __label28
   170 printflush MESSAGE
 
   305 jump __label54 greaterThanEq n __tmp89
   306 jump __label55 lessThan index TO_INDEX
   307 jump __label54 always
-    * jump __label56 always
   308 label __label55
   309 label __label56
   310 getlink factory n
 
   325 jump __label59 greaterThanEq r1 minimum
   326 set minimum r1
   327 set icon RES1
-    * jump __label60 always
   328 label __label59
   329 label __label60
   330 jump __label61 greaterThanEq r2 minimum
   331 set minimum r2
   332 set icon RES2
-    * jump __label62 always
   333 label __label61
   334 label __label62
   335 jump __label63 greaterThanEq r3 minimum
   336 set minimum r3
   337 set icon RES3
-    * jump __label64 always
   338 label __label63
   339 label __label64
   340 op greaterThan __tmp113 out LIM1
 
   343 op land showout __tmp113 __tmp115
   344 jump __label65 equal showout false
   345 set icon OUTPUT
-    * jump __label66 always
   346 label __label65
   347 label __label66
   348 op idiv column index 8
 
   356 op land __tmp126 __tmp124 __tmp125
   357 jump __label67 equal __tmp126 false
   358 set icon TYPE
-    * jump __label68 always
   359 label __label67
   360 label __label68
   361 draw color 255 255 255 255
 
   446 op max green 192 green
   447 op max blue 192 blue
   448 set boost EXPECTED_BOOST
-    * jump __label82 always
   449 label __label81
   450 label __label82
   451 op mul __tmp169 BAR_LENGTH boost
 
   457 draw color red green blue 255
   458 draw lineRect x y length BAR_WIDTH
   459 op add index index 1
-    * jump __label58 always
   460 label __label57
   461 label __label58
   462 label __label53

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-8 instructions):
 
   184 op add __tmp32 OFFSET_X BAR_SPACE
   185 op sub clw __tmp32 2
   186 set crw clw
-    * jump __label31 notEqual FROM_INDEX 0
-    * set __tmp35 0
-    * jump __label32 always
+  187 set cly 0
+  188 jump __label32 equal FROM_INDEX 0
   189 label __label31
   190 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp36
+  191 op add cly OFFSET_Y __tmp36
   192 label __label32
-    * set cly __tmp35
   193 set cry cly
-    * jump __label33 greaterThanEq TO_INDEX 8
+  194 set __tmp39 176
+  195 jump __label34 greaterThanEq TO_INDEX 8
   196 op mul __tmp40 TO_INDEX BAR_GAP
   197 op add __tmp39 OFFSET_Y __tmp40
   198 jump __label34 always
-    * label __label33
-    * set __tmp39 176
   199 label __label34
   200 op sub clh __tmp39 cly
   201 set crh clh
 
   213 op add __tmp47 OFFSET_X BAR_SPACE
   214 op sub __tmp48 176 __tmp47
   215 op add crw __tmp48 1
+  216 set cry 0
   217 op mod __tmp50 FROM_INDEX 8
-    * jump __label37 notEqual __tmp50 0
-    * set __tmp52 0
-    * jump __label38 always
+  218 jump __label38 equal __tmp50 0
   219 label __label37
   220 op mod __tmp53 FROM_INDEX 8
   221 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp52 OFFSET_Y __tmp54
+  222 op add cry OFFSET_Y __tmp54
   223 label __label38
-    * set cry __tmp52
-    * jump __label39 greaterThanEq TO_INDEX 16
+  224 set __tmp57 176
+  225 jump __label40 greaterThanEq TO_INDEX 16
   226 op mod __tmp58 TO_INDEX 8
   227 op mul __tmp59 __tmp58 BAR_GAP
   228 op add __tmp57 OFFSET_Y __tmp59
   229 jump __label40 always
-    * label __label39
-    * set __tmp57 176
   230 label __label40
   231 op sub crh __tmp57 cry
   232 set clx crx
 
   238 set clx 0
   239 op add __tmp62 OFFSET_X BAR_SPACE
   240 op sub clw __tmp62 2
-    * jump __label41 notEqual FROM_INDEX 0
-    * set __tmp65 0
-    * jump __label42 always
+  241 set cly 0
+  242 jump __label42 equal FROM_INDEX 0
   243 label __label41
   244 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp65 OFFSET_Y __tmp66
+  245 op add cly OFFSET_Y __tmp66
   246 label __label42
-    * set cly __tmp65
-    * jump __label43 greaterThanEq TO_INDEX 8
+  247 set __tmp69 176
+  248 jump __label44 greaterThanEq TO_INDEX 8
   249 op mul __tmp70 TO_INDEX BAR_GAP
   250 op add __tmp69 OFFSET_Y __tmp70
   251 jump __label44 always
-    * label __label43
-    * set __tmp69 176
   252 label __label44
   253 op sub clh __tmp69 cly
   254 jump __label45 lessThan TO_INDEX 8
 
   258 op sub __tmp78 176 __tmp77
   259 op add crw __tmp78 1
   260 set cry 0
-    * jump __label47 greaterThanEq TO_INDEX 16
+  261 set __tmp81 176
+  262 jump __label48 greaterThanEq TO_INDEX 16
   263 op mod __tmp82 TO_INDEX 8
   264 op mul __tmp83 __tmp82 BAR_GAP
   265 op add __tmp81 OFFSET_Y __tmp83
   266 jump __label48 always
-    * label __label47
-    * set __tmp81 176
   267 label __label48
   268 op sub crh __tmp81 cry
   269 jump __label46 always
 
   411 set minimum out
   412 jump __label76 always
   413 label __label75
+  414 set red 255
   415 op greaterThan __tmp158 minimum LIM2
   416 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   417 op land __tmp160 __tmp158 __tmp159
-    * jump __label77 equal __tmp160 false
-    * set __tmp161 0
+  418 jump __label78 equal __tmp160 false
+  419 set red 0
   420 jump __label78 always
-    * label __label77
-    * set __tmp161 255
   421 label __label78
-    * set red __tmp161
-    * jump __label79 lessThanEq minimum LIM1
-    * set __tmp163 255
+  422 set green 0
+  423 jump __label80 lessThanEq minimum LIM1
+  424 set green 255
   425 jump __label80 always
-    * label __label79
-    * set __tmp163 0
   426 label __label80
-    * set green __tmp163
   427 set blue 0
   428 label __label76
   429 label __label74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   180 set BAR_SPACE 80
   181 set BAR_GAP 20
   182 set clx 0
-    * set crx clx
+  183 set crx 0
   184 op add __tmp32 OFFSET_X BAR_SPACE
   185 op sub clw __tmp32 2
   186 set crw clw
 
   211 op add __tmp45 OFFSET_X BAR_SPACE
   212 op sub crx __tmp45 2
   213 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp47
-    * op add crw __tmp48 1
+  214 op sub __tmp48 176 __tmp45
+  215 op sub crw 177 __tmp47
   216 set cry 0
   217 op mod __tmp50 FROM_INDEX 8
   218 jump __label38 equal __tmp50 0
   219 label __label37
   220 op mod __tmp53 FROM_INDEX 8
-    * op mul __tmp54 __tmp53 BAR_GAP
+  221 op mul __tmp54 __tmp50 BAR_GAP
   222 op add cry OFFSET_Y __tmp54
   223 label __label38
   224 set __tmp57 176
 
   253 op sub clh __tmp69 cly
   254 jump __label45 lessThan TO_INDEX 8
   255 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub crx __tmp75 2
+  256 op sub crx __tmp62 2
   257 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp77
-    * op add crw __tmp78 1
+  258 op sub __tmp78 176 __tmp62
+  259 op sub crw 177 __tmp77
   260 set cry 0
   261 set __tmp81 176
   262 jump __label48 greaterThanEq TO_INDEX 16
 
   265 op add __tmp81 OFFSET_Y __tmp83
   266 jump __label48 always
   267 label __label48
-    * op sub crh __tmp81 cry
+  268 op sub crh __tmp81 0
   269 jump __label46 always
   270 label __label45
-    * set crx clx
+  271 set crx 0
   272 set crw clw
   273 set cry cly
   274 set crh clh
 
   312 sensor e factory @enabled
   313 sensor power factory @totalPower
   314 sensor boost factory @timescale
-    * jump __label59 greaterThanEq r1 minimum
+  315 jump __label59 greaterThanEq r1 101
   316 set minimum r1
   317 set icon RES1
   318 label __label59
 
   365 draw rect __tmp134 __tmp135 8 4
   366 op add __tmp136 x 12
   367 op add __tmp137 y 3
-    * draw rect __tmp136 __tmp137 2 2
+  368 draw rect __tmp136 __tmp133 2 2
   369 op add __tmp138 x 12
   370 op add __tmp139 y 9
-    * draw rect __tmp138 __tmp139 2 2
+  371 draw rect __tmp136 __tmp139 2 2
   372 draw color 255 80 80 255
   373 op add __tmp140 x 4
   374 op add __tmp141 y 6
 
   387 op add __tmp147 y 2
   388 op add __tmp148 x 12
   389 op add __tmp149 y 12
-    * draw line __tmp146 __tmp147 __tmp148 __tmp149
+  390 draw line __tmp142 __tmp145 __tmp144 __tmp143
   391 draw color 0 0 0 255
   392 op sub __tmp150 x 1
   393 op sub __tmp151 y 1
 
   414 set red 255
   415 op greaterThan __tmp158 minimum LIM2
   416 op greaterThanEq __tmp159 boost EXPECTED_BOOST
-    * op land __tmp160 __tmp158 __tmp159
+  417 op land __tmp160 __tmp124 __tmp159
   418 jump __label78 equal __tmp160 false
   419 set red 0
   420 jump __label78 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   211 op add __tmp45 OFFSET_X BAR_SPACE
   212 op sub crx __tmp45 2
   213 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp45
-    * op sub crw 177 __tmp47
+  214 op sub crw 177 __tmp45
   215 set cry 0
   216 op mod __tmp50 FROM_INDEX 8
   217 jump __label38 equal __tmp50 0
   218 label __label37
-    * op mod __tmp53 FROM_INDEX 8
   219 op mul __tmp54 __tmp50 BAR_GAP
   220 op add cry OFFSET_Y __tmp54
   221 label __label38
 
   250 label __label44
   251 op sub clh __tmp69 cly
   252 jump __label45 lessThan TO_INDEX 8
-    * op add __tmp75 OFFSET_X BAR_SPACE
   253 op sub crx __tmp62 2
   254 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp62
-    * op sub crw 177 __tmp77
+  255 op sub crw 177 __tmp62
   256 set cry 0
   257 set __tmp81 176
   258 jump __label48 greaterThanEq TO_INDEX 16
 
   360 op add __tmp135 y 5
   361 draw rect __tmp134 __tmp135 8 4
   362 op add __tmp136 x 12
-    * op add __tmp137 y 3
   363 draw rect __tmp136 __tmp133 2 2
-    * op add __tmp138 x 12
   364 op add __tmp139 y 9
   365 draw rect __tmp136 __tmp139 2 2
   366 draw color 255 80 80 255
 
   377 op add __tmp144 x 12
   378 op add __tmp145 y 2
   379 draw line __tmp142 __tmp143 __tmp144 __tmp145
-    * op add __tmp146 x 2
-    * op add __tmp147 y 2
-    * op add __tmp148 x 12
-    * op add __tmp149 y 12
   380 draw line __tmp142 __tmp145 __tmp144 __tmp143
   381 draw color 0 0 0 255
   382 op sub __tmp150 x 1
 
   402 jump __label76 always
   403 label __label75
   404 set red 255
-    * op greaterThan __tmp158 minimum LIM2
   405 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   406 op land __tmp160 __tmp124 __tmp159
   407 jump __label78 equal __tmp160 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
   210 jump __label35 lessThan FROM_INDEX 8
   211 op add __tmp45 OFFSET_X BAR_SPACE
   212 op sub crx __tmp45 2
-    * op add __tmp47 OFFSET_X BAR_SPACE
   213 op sub crw 177 __tmp45
   214 set cry 0
   215 op mod __tmp50 FROM_INDEX 8
 
   250 op sub clh __tmp69 cly
   251 jump __label45 lessThan TO_INDEX 8
   252 op sub crx __tmp62 2
-    * op add __tmp77 OFFSET_X BAR_SPACE
   253 op sub crw 177 __tmp62
   254 set cry 0
   255 set __tmp81 176

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    15 set n @links
    16 label __label3
    17 jump __label5 lessThanEq n 0
+   18 label __label83
    19 op sub n n 1
    20 getlink block n
    21 sensor __ast0 block @type
 
   132 print " not supported"
   133 label __label6
   134 label __label4
-    * jump __label3 always
+  135 jump __label83 greaterThan n 0
   136 label __label5
   137 print "Message: "
   138 print MESSAGE
 
   288 set n 0
   289 label __label52
   290 jump __label54 greaterThanEq n __tmp89
+  291 label __label84
   292 jump __label55 lessThan index TO_INDEX
   293 jump __label54 always
   294 label __label55
 
   436 label __label58
   437 label __label53
   438 op add n n 1
-    * jump __label52 always
+  439 jump __label84 lessThan n __tmp89
   440 label __label54
   441 drawflush DISPLAY
   442 op sub __tmp174 @time start

Modifications by Loop Optimization: replicate condition at line 160 (+1 instructions):
 
   274 label __label49
   275 sensor __tmp86 SWITCH @enabled
   276 jump __label51 notEqual __tmp86 0
+  277 label __label85
   278 set start @time
   279 print "Universal Factory Monitor"
   280 print "\n"
 
   447 print " ms"
   448 printflush MESSAGE
   449 label __label50
-    * jump __label49 always
+  450 sensor __tmp86 SWITCH @enabled
+  451 jump __label85 equal __tmp86 0
   452 label __label51
   453 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   288 set __tmp89 @links
   289 set n 0
   290 label __label52
-    * jump __label54 greaterThanEq n __tmp89
+  291 jump __label54 greaterThanEq 0 __tmp89
   292 label __label84
   293 jump __label55 lessThan index TO_INDEX
   294 jump __label54 always

Modifications by Loop Optimization: replicate condition at line 14 (+3 instructions):
 
    10 op equal __tmp1 TYPE null
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
+   13 label __label86
    14 print "Universal Factory Monitor"
    15 print "\n"
    16 set n @links
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * jump __label0 always
+  174 op equal __tmp0 DISPLAY null
+  175 op equal __tmp1 TYPE null
+  176 op or __tmp2 __tmp0 __tmp1
+  177 jump __label86 notEqual __tmp2 false
   178 label __label2
   179 sensor __tmp29 DISPLAY @type
   180 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   173 label __label1
   174 op equal __tmp0 DISPLAY null
   175 op equal __tmp1 TYPE null
-    * op or __tmp2 __tmp0 __tmp1
+  176 op or __tmp2 __tmp25 __tmp26
   177 jump __label86 notEqual __tmp2 false
   178 label __label2
   179 sensor __tmp29 DISPLAY @type

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * op equal __tmp0 DISPLAY null
-    * op equal __tmp1 TYPE null
   174 op or __tmp2 __tmp25 __tmp26
-    * jump __label86 notEqual __tmp2 false
+  175 jump __label86 notEqual __tmp27 false
   176 label __label2
   177 sensor __tmp29 DISPLAY @type
   178 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * op or __tmp2 __tmp25 __tmp26
   174 jump __label86 notEqual __tmp27 false
   175 label __label2
   176 sensor __tmp29 DISPLAY @type

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   197 jump __label34 greaterThanEq TO_INDEX 8
   198 op mul __tmp40 TO_INDEX BAR_GAP
   199 op add __tmp39 OFFSET_Y __tmp40
-    * jump __label34 always
   200 label __label34
   201 op sub clh __tmp39 cly
   202 set crh clh
 
   224 op mod __tmp58 TO_INDEX 8
   225 op mul __tmp59 __tmp58 BAR_GAP
   226 op add __tmp57 OFFSET_Y __tmp59
-    * jump __label40 always
   227 label __label40
   228 op sub crh __tmp57 cry
   229 set clx crx
 
   245 jump __label44 greaterThanEq TO_INDEX 8
   246 op mul __tmp70 TO_INDEX BAR_GAP
   247 op add __tmp69 OFFSET_Y __tmp70
-    * jump __label44 always
   248 label __label44
   249 op sub clh __tmp69 cly
   250 jump __label45 lessThan TO_INDEX 8
 
   256 op mod __tmp82 TO_INDEX 8
   257 op mul __tmp83 __tmp82 BAR_GAP
   258 op add __tmp81 OFFSET_Y __tmp83
-    * jump __label48 always
   259 label __label48
   260 op sub crh __tmp81 0
   261 jump __label46 always
 
   404 op land __tmp160 __tmp124 __tmp159
   405 jump __label78 equal __tmp160 false
   406 set red 0
-    * jump __label78 always
   407 label __label78
   408 set green 0
   409 jump __label80 lessThanEq minimum LIM1
   410 set green 255
-    * jump __label80 always
   411 label __label80
   412 set blue 0
   413 label __label76

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   257 op mul __tmp83 __tmp82 BAR_GAP
   258 op add __tmp81 OFFSET_Y __tmp83
   259 label __label48
-    * op sub crh __tmp81 0
+  260 set crh __tmp81
   261 jump __label46 always
   262 label __label45
   263 set crx 0

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
   287 label __label52
   288 jump __label54 greaterThanEq 0 __tmp89
   289 label __label84
-    * jump __label55 lessThan index TO_INDEX
-    * jump __label54 always
+  290 jump __label54 greaterThanEq index TO_INDEX
   291 label __label55
   292 label __label56
   293 getlink factory n

Modifications by Final phase, Jump Threading, iteration 1:
 
   347 op add __tmp131 x 7
   348 op add __tmp132 y 7
   349 draw image __tmp131 __tmp132 icon 16 0
-    * jump __label72 always
+  350 jump __label70 always
   351 label __label71
   352 draw color 255 80 80 255
   353 op add __tmp133 y 3

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
    13 label __label86
-    * print "Universal Factory Monitor"
-    * print "\n"
+   14 print "Universal Factory Monitor\n"
    15 set n @links
    16 label __label3
    17 jump __label5 lessThanEq n 0
 
   136 label __label5
   137 print "Message: "
   138 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+  139 print "\nSwitch: "
   140 print SWITCH
-    * print "\n"
-    * print "Display: "
+  141 print "\nDisplay: "
   142 print DISPLAY
-    * print "\n"
-    * print "Monitoring: "
+  143 print "\nMonitoring: "
   144 print TYPE
-    * print "\n"
-    * print "Capacity: "
+  145 print "\nCapacity: "
   146 print CAPACITY
-    * print "\n"
-    * print "Resource 1: "
+  147 print "\nResource 1: "
   148 print RES1
-    * print "\n"
-    * print "Resource 2: "
+  149 print "\nResource 2: "
   150 print RES2
-    * print "\n"
-    * print "Resource 3: "
+  151 print "\nResource 3: "
   152 print RES3
-    * print "\n"
-    * print "Output: "
+  153 print "\nOutput: "
   154 print OUTPUT
   155 print "\n"
   156 op equal __tmp25 DISPLAY null
 
   264 jump __label51 notEqual __tmp86 0
   265 label __label85
   266 set start @time
-    * print "Universal Factory Monitor"
-    * print "\n"
+  267 print "Universal Factory Monitor\n"
   268 print "Monitoring: "
   269 print TYPE
   270 draw color 0 0 80 255

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set EXPECTED_BOOST 1.5
set LIM1 33
set LIM2 66
set DISPLAY null
set TYPE null
set icon null
op equal __tmp0 DISPLAY null
op equal __tmp1 TYPE null
op or __tmp2 __tmp0 __tmp1
jump __label2 equal __tmp2 false
label __label86
print "Universal Factory Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label83
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label13 notEqual __ast0 @silicon-factory
set TYPE @silicon-factory
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label13
jump __label15 notEqual __ast0 @silicon-crucible
set TYPE @silicon-crucible
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @pyratite
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label15
jump __label17 notEqual __ast0 @kiln
set TYPE @kiln
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @lead
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @metaglass
jump __label6 always 0 0
label __label17
jump __label19 notEqual __ast0 @phase-weaver
set TYPE @phase-weaver
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @thorium
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @phase-fabric
jump __label6 always 0 0
label __label19
jump __label21 notEqual __ast0 @pyratite-mixer
set TYPE @pyratite-mixer
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @lead
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @pyratite
jump __label6 always 0 0
label __label21
jump __label23 notEqual __ast0 @blast-mixer
set TYPE @blast-mixer
sensor CAPACITY block @itemCapacity
set RES1 @pyratite
set RES2 @spore-pod
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @blast-compound
jump __label6 always 0 0
label __label23
jump __label25 notEqual __ast0 @plastanium-compressor
set TYPE @plastanium-compressor
sensor CAPACITY block @itemCapacity
set RES1 @titanium
set RES2 @oil
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL1 MUL3
sensor __tmp23 block @liquidCapacity
op div MUL2 250 __tmp23
set OUTPUT @plastanium
jump __label6 always 0 0
label __label25
print "\n  "
print block
print " not supported"
label __label6
jump __label83 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nDisplay: "
print DISPLAY
print "\nMonitoring: "
print TYPE
print "\nCapacity: "
print CAPACITY
print "\nResource 1: "
print RES1
print "\nResource 2: "
print RES2
print "\nResource 3: "
print RES3
print "\nOutput: "
print OUTPUT
print "\n"
op equal __tmp25 DISPLAY null
op equal __tmp26 TYPE null
op or __tmp27 __tmp25 __tmp26
jump __label27 equal __tmp27 false
print "No block to monitor or display."
label __label27
printflush MESSAGE
jump __label86 notEqual __tmp27 false
label __label2
sensor __tmp29 DISPLAY @type
jump __label29 notEqual __tmp29 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp32 OFFSET_X BAR_SPACE
op sub clw __tmp32 2
set crw clw
set cly 0
jump __label32 equal FROM_INDEX 0
op mul __tmp36 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp36
label __label32
set cry cly
set __tmp39 176
jump __label34 greaterThanEq TO_INDEX 8
op mul __tmp40 TO_INDEX BAR_GAP
op add __tmp39 OFFSET_Y __tmp40
label __label34
op sub clh __tmp39 cly
set crh clh
jump __label30 always 0 0
label __label29
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 88
set BAR_GAP 22
jump __label35 lessThan FROM_INDEX 8
op add __tmp45 OFFSET_X BAR_SPACE
op sub crx __tmp45 2
op sub crw 177 __tmp45
set cry 0
op mod __tmp50 FROM_INDEX 8
jump __label38 equal __tmp50 0
op mul __tmp54 __tmp50 BAR_GAP
op add cry OFFSET_Y __tmp54
label __label38
set __tmp57 176
jump __label40 greaterThanEq TO_INDEX 16
op mod __tmp58 TO_INDEX 8
op mul __tmp59 __tmp58 BAR_GAP
op add __tmp57 OFFSET_Y __tmp59
label __label40
op sub crh __tmp57 cry
set clx crx
set clw crw
set cly cry
set clh crh
jump __label36 always 0 0
label __label35
set clx 0
op add __tmp62 OFFSET_X BAR_SPACE
op sub clw __tmp62 2
set cly 0
jump __label42 equal FROM_INDEX 0
op mul __tmp66 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp66
label __label42
set __tmp69 176
jump __label44 greaterThanEq TO_INDEX 8
op mul __tmp70 TO_INDEX BAR_GAP
op add __tmp69 OFFSET_Y __tmp70
label __label44
op sub clh __tmp69 cly
jump __label45 lessThan TO_INDEX 8
op sub crx __tmp62 2
op sub crw 177 __tmp62
set cry 0
set __tmp81 176
jump __label48 greaterThanEq TO_INDEX 16
op mod __tmp82 TO_INDEX 8
op mul __tmp83 __tmp82 BAR_GAP
op add __tmp81 OFFSET_Y __tmp83
label __label48
set crh __tmp81
jump __label46 always 0 0
label __label45
set crx 0
set crw clw
set cry cly
set crh clh
label __label46
label __label36
label __label30
control enabled SWITCH 0 0 0 0
sensor __tmp86 SWITCH @enabled
jump __label51 notEqual __tmp86 0
label __label85
set start @time
print "Universal Factory Monitor\n"
print "Monitoring: "
print TYPE
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set __tmp89 @links
set n 0
jump __label54 greaterThanEq 0 __tmp89
label __label84
jump __label54 greaterThanEq index TO_INDEX
getlink factory n
sensor __tmp93 factory @type
jump __label57 notEqual __tmp93 TYPE
set minimum 101
sensor __tmp96 factory RES1
op mul r1 MUL1 __tmp96
sensor __tmp98 factory RES2
op mul r2 MUL2 __tmp98
sensor __tmp100 factory RES3
op mul r3 MUL3 __tmp100
sensor __tmp102 factory OUTPUT
op mul out MUL1 __tmp102
sensor e factory @enabled
sensor power factory @totalPower
sensor boost factory @timescale
jump __label59 greaterThanEq r1 101
set minimum r1
set icon RES1
label __label59
jump __label61 greaterThanEq r2 minimum
set minimum r2
set icon RES2
label __label61
jump __label63 greaterThanEq r3 minimum
set minimum r3
set icon RES3
label __label63
op greaterThan __tmp113 out LIM1
op sub __tmp114 100 out
op lessThan __tmp115 __tmp114 minimum
op land showout __tmp113 __tmp115
jump __label65 equal showout false
set icon OUTPUT
label __label65
op idiv column index 8
op mod row index 8
op mul __tmp120 column BAR_SPACE
op add x OFFSET_X __tmp120
op mul __tmp122 row BAR_GAP
op add y OFFSET_Y __tmp122
op greaterThan __tmp124 minimum LIM2
op equal __tmp125 showout false
op land __tmp126 __tmp124 __tmp125
jump __label67 equal __tmp126 false
set icon TYPE
label __label67
draw color 255 255 255 255 0 0
jump __label69 equal e false
jump __label71 lessThanEq power 0
op add __tmp131 x 7
op add __tmp132 y 7
draw image __tmp131 __tmp132 icon 16 0 0
jump __label70 always 0 0
label __label71
draw color 255 80 80 255 0 0
op add __tmp133 y 3
draw rect x __tmp133 14 8 0 0
draw color 0 0 0 255 0 0
op add __tmp134 x 2
op add __tmp135 y 5
draw rect __tmp134 __tmp135 8 4 0 0
op add __tmp136 x 12
draw rect __tmp136 __tmp133 2 2 0 0
op add __tmp139 y 9
draw rect __tmp136 __tmp139 2 2 0 0
draw color 255 80 80 255 0 0
op add __tmp140 x 4
op add __tmp141 y 6
draw rect __tmp140 __tmp141 2 2 0 0
jump __label70 always 0 0
label __label69
draw color 255 80 80 255 0 0
draw stroke 3 0 0 0 0 0
op add __tmp142 x 2
op add __tmp143 y 12
op add __tmp144 x 12
op add __tmp145 y 2
draw line __tmp142 __tmp143 __tmp144 __tmp145 0 0
draw line __tmp142 __tmp145 __tmp144 __tmp143 0 0
draw color 0 0 0 255 0 0
op sub __tmp150 x 1
op sub __tmp151 y 1
draw lineRect __tmp150 __tmp151 16 16 0 0
draw stroke 2 0 0 0 0 0
label __label70
op add x x 16
op equal __tmp153 power 0
op equal __tmp154 e 0
op land __tmp155 __tmp153 __tmp154
jump __label73 equal __tmp155 false
set red 255
set green 0
set blue 0
jump __label74 always 0 0
label __label73
jump __label75 equal showout false
set red 255
set green 0
set blue 255
set minimum out
jump __label76 always 0 0
label __label75
set red 255
op greaterThanEq __tmp159 boost EXPECTED_BOOST
op land __tmp160 __tmp124 __tmp159
jump __label78 equal __tmp160 false
set red 0
label __label78
set green 0
jump __label80 lessThanEq minimum LIM1
set green 255
label __label80
set blue 0
label __label76
label __label74
jump __label81 lessThanEq boost EXPECTED_BOOST
op max red 192 red
op max green 192 green
op max blue 192 blue
set boost EXPECTED_BOOST
label __label81
op mul __tmp169 BAR_LENGTH boost
op idiv length __tmp169 EXPECTED_BOOST
draw color red green blue 128 0 0
op mul __tmp171 minimum length
op idiv __tmp172 __tmp171 100
draw rect x y __tmp172 BAR_WIDTH 0 0
draw color red green blue 255 0 0
draw lineRect x y length BAR_WIDTH 0 0
op add index index 1
label __label57
op add n n 1
jump __label84 lessThan n __tmp89
label __label54
drawflush DISPLAY
op sub __tmp174 @time start
op floor __tmp175 __tmp174 0
print "\nDraw time: "
print __tmp175
print " ms"
printflush MESSAGE
sensor __tmp86 SWITCH @enabled
jump __label85 equal __tmp86 0
label __label51
end
