   530 instructions before optimizations.
    56 instructions eliminated by Temp Variables Elimination.
    43 instructions eliminated by Dead Code Elimination (5 iterations).
    20 instructions eliminated by Jump Optimization (4 iterations).
    15 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     8 instructions eliminated by If Expression Optimization (3 iterations).
    16 instructions eliminated by Data Flow Optimization (3 passes, 11 iterations).
     4 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    11 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
     1 instructions updated by PropagateJumpTargets.
    10 instructions eliminated by Print Merging.
   355 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 629):
    Loop Optimization: replicate condition at line 14            cost     3, benefit       25,0, efficiency        8,3
  * Loop Optimization: replicate condition at line 160           cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Pass 1: speed optimization selection (cost limit 628):
  * Loop Optimization: replicate condition at line 14            cost     3, benefit       25,0, efficiency        8,3 (+0 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-56 instructions):
 
    10 jump __label2 equal __tmp2 false
    11 print "Universal Factory Monitor"
    12 print "\n"
-    * set __tmp3 @links
-    * set n __tmp3
+   13 set n @links
    14 label __label3
    15 op greaterThan __tmp4 n 0
    16 jump __label5 equal __tmp4 false
-    * op sub __tmp5 n 1
-    * set n __tmp5
-    * getlink __tmp6 n
-    * set block __tmp6
-    * sensor __tmp7 block @type
-    * set __ast0 __tmp7
+   17 op sub n n 1
+   18 getlink block n
+   19 sensor __ast0 block @type
    20 jump __label8 equal __ast0 @message
    21 jump __label7 always
    22 label __label8
 
    43 jump __label13 always
    44 label __label14
    45 set TYPE @silicon-factory
-    * sensor __tmp9 block @itemCapacity
-    * set CAPACITY __tmp9
+   46 sensor CAPACITY block @itemCapacity
    47 set RES1 @sand
    48 set RES2 @coal
    49 set RES3 @itemCapacity
-    * op div __tmp10 100 CAPACITY
-    * set MUL3 __tmp10
+   50 op div MUL3 100 CAPACITY
    51 set MUL2 MUL3
    52 set MUL1 MUL2
    53 set OUTPUT @silicon
 
    58 jump __label15 always
    59 label __label16
    60 set TYPE @silicon-crucible
-    * sensor __tmp11 block @itemCapacity
-    * set CAPACITY __tmp11
+   61 sensor CAPACITY block @itemCapacity
    62 set RES1 @sand
    63 set RES2 @coal
    64 set RES3 @pyratite
-    * op div __tmp12 100 CAPACITY
-    * set MUL3 __tmp12
+   65 op div MUL3 100 CAPACITY
    66 set MUL2 MUL3
    67 set MUL1 MUL2
    68 set OUTPUT @silicon
 
    73 jump __label17 always
    74 label __label18
    75 set TYPE @kiln
-    * sensor __tmp13 block @itemCapacity
-    * set CAPACITY __tmp13
+   76 sensor CAPACITY block @itemCapacity
    77 set RES1 @sand
    78 set RES2 @lead
    79 set RES3 @itemCapacity
-    * op div __tmp14 100 CAPACITY
-    * set MUL3 __tmp14
+   80 op div MUL3 100 CAPACITY
    81 set MUL2 MUL3
    82 set MUL1 MUL2
    83 set OUTPUT @metaglass
 
    88 jump __label19 always
    89 label __label20
    90 set TYPE @phase-weaver
-    * sensor __tmp15 block @itemCapacity
-    * set CAPACITY __tmp15
+   91 sensor CAPACITY block @itemCapacity
    92 set RES1 @sand
    93 set RES2 @thorium
    94 set RES3 @itemCapacity
-    * op div __tmp16 100 CAPACITY
-    * set MUL3 __tmp16
+   95 op div MUL3 100 CAPACITY
    96 set MUL2 MUL3
    97 set MUL1 MUL2
    98 set OUTPUT @phase-fabric
 
   103 jump __label21 always
   104 label __label22
   105 set TYPE @pyratite-mixer
-    * sensor __tmp17 block @itemCapacity
-    * set CAPACITY __tmp17
+  106 sensor CAPACITY block @itemCapacity
   107 set RES1 @sand
   108 set RES2 @coal
   109 set RES3 @lead
-    * op div __tmp18 100 CAPACITY
-    * set MUL3 __tmp18
+  110 op div MUL3 100 CAPACITY
   111 set MUL2 MUL3
   112 set MUL1 MUL2
   113 set OUTPUT @pyratite
 
   118 jump __label23 always
   119 label __label24
   120 set TYPE @blast-mixer
-    * sensor __tmp19 block @itemCapacity
-    * set CAPACITY __tmp19
+  121 sensor CAPACITY block @itemCapacity
   122 set RES1 @pyratite
   123 set RES2 @spore-pod
   124 set RES3 @itemCapacity
-    * op div __tmp20 100 CAPACITY
-    * set MUL3 __tmp20
+  125 op div MUL3 100 CAPACITY
   126 set MUL2 MUL3
   127 set MUL1 MUL2
   128 set OUTPUT @blast-compound
 
   133 jump __label25 always
   134 label __label26
   135 set TYPE @plastanium-compressor
-    * sensor __tmp21 block @itemCapacity
-    * set CAPACITY __tmp21
+  136 sensor CAPACITY block @itemCapacity
   137 set RES1 @titanium
   138 set RES2 @oil
   139 set RES3 @itemCapacity
-    * op div __tmp22 100 CAPACITY
-    * set MUL3 __tmp22
+  140 op div MUL3 100 CAPACITY
   141 set MUL1 MUL3
   142 sensor __tmp23 block @liquidCapacity
-    * op div __tmp24 250 __tmp23
-    * set MUL2 __tmp24
+  143 op div MUL2 250 __tmp23
   144 set OUTPUT @plastanium
   145 set __tmp8 OUTPUT
   146 jump __label6 always
 
   206 set clx 0
   207 set crx clx
   208 op add __tmp32 OFFSET_X BAR_SPACE
-    * op sub __tmp33 __tmp32 2
-    * set clw __tmp33
+  209 op sub clw __tmp32 2
   210 set crw clw
   211 op equal __tmp34 FROM_INDEX 0
   212 jump __label31 equal __tmp34 false
 
   214 jump __label32 always
   215 label __label31
   216 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp37 OFFSET_Y __tmp36
-    * set __tmp35 __tmp37
+  217 op add __tmp35 OFFSET_Y __tmp36
   218 label __label32
   219 set cly __tmp35
   220 set cry cly
   221 op lessThan __tmp38 TO_INDEX 8
   222 jump __label33 equal __tmp38 false
   223 op mul __tmp40 TO_INDEX BAR_GAP
-    * op add __tmp41 OFFSET_Y __tmp40
-    * set __tmp39 __tmp41
+  224 op add __tmp39 OFFSET_Y __tmp40
   225 jump __label34 always
   226 label __label33
   227 set __tmp39 176
   228 label __label34
-    * op sub __tmp42 __tmp39 cly
-    * set clh __tmp42
+  229 op sub clh __tmp39 cly
   230 set crh clh
   231 set __tmp31 crh
   232 jump __label30 always
 
   240 op greaterThanEq __tmp43 FROM_INDEX 8
   241 jump __label35 equal __tmp43 false
   242 op add __tmp45 OFFSET_X BAR_SPACE
-    * op sub __tmp46 __tmp45 2
-    * set crx __tmp46
+  243 op sub crx __tmp45 2
   244 op add __tmp47 OFFSET_X BAR_SPACE
   245 op sub __tmp48 176 __tmp47
-    * op add __tmp49 __tmp48 1
-    * set crw __tmp49
+  246 op add crw __tmp48 1
   247 op mod __tmp50 FROM_INDEX 8
   248 op equal __tmp51 __tmp50 0
   249 jump __label37 equal __tmp51 false
 
   252 label __label37
   253 op mod __tmp53 FROM_INDEX 8
   254 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp55 OFFSET_Y __tmp54
-    * set __tmp52 __tmp55
+  255 op add __tmp52 OFFSET_Y __tmp54
   256 label __label38
   257 set cry __tmp52
   258 op lessThan __tmp56 TO_INDEX 16
   259 jump __label39 equal __tmp56 false
   260 op mod __tmp58 TO_INDEX 8
   261 op mul __tmp59 __tmp58 BAR_GAP
-    * op add __tmp60 OFFSET_Y __tmp59
-    * set __tmp57 __tmp60
+  262 op add __tmp57 OFFSET_Y __tmp59
   263 jump __label40 always
   264 label __label39
   265 set __tmp57 176
   266 label __label40
-    * op sub __tmp61 __tmp57 cry
-    * set crh __tmp61
+  267 op sub crh __tmp57 cry
   268 set clx crx
   269 set clw crw
   270 set cly cry
 
   274 label __label35
   275 set clx 0
   276 op add __tmp62 OFFSET_X BAR_SPACE
-    * op sub __tmp63 __tmp62 2
-    * set clw __tmp63
+  277 op sub clw __tmp62 2
   278 op equal __tmp64 FROM_INDEX 0
   279 jump __label41 equal __tmp64 false
   280 set __tmp65 0
   281 jump __label42 always
   282 label __label41
   283 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp67 OFFSET_Y __tmp66
-    * set __tmp65 __tmp67
+  284 op add __tmp65 OFFSET_Y __tmp66
   285 label __label42
   286 set cly __tmp65
   287 op lessThan __tmp68 TO_INDEX 8
   288 jump __label43 equal __tmp68 false
   289 op mul __tmp70 TO_INDEX BAR_GAP
-    * op add __tmp71 OFFSET_Y __tmp70
-    * set __tmp69 __tmp71
+  290 op add __tmp69 OFFSET_Y __tmp70
   291 jump __label44 always
   292 label __label43
   293 set __tmp69 176
   294 label __label44
-    * op sub __tmp72 __tmp69 cly
-    * set clh __tmp72
+  295 op sub clh __tmp69 cly
   296 op greaterThanEq __tmp73 TO_INDEX 8
   297 jump __label45 equal __tmp73 false
   298 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub __tmp76 __tmp75 2
-    * set crx __tmp76
+  299 op sub crx __tmp75 2
   300 op add __tmp77 OFFSET_X BAR_SPACE
   301 op sub __tmp78 176 __tmp77
-    * op add __tmp79 __tmp78 1
-    * set crw __tmp79
+  302 op add crw __tmp78 1
   303 set cry 0
   304 op lessThan __tmp80 TO_INDEX 16
   305 jump __label47 equal __tmp80 false
   306 op mod __tmp82 TO_INDEX 8
   307 op mul __tmp83 __tmp82 BAR_GAP
-    * op add __tmp84 OFFSET_Y __tmp83
-    * set __tmp81 __tmp84
+  308 op add __tmp81 OFFSET_Y __tmp83
   309 jump __label48 always
   310 label __label47
   311 set __tmp81 176
   312 label __label48
-    * op sub __tmp85 __tmp81 cry
-    * set crh __tmp85
+  313 op sub crh __tmp81 cry
   314 set __tmp74 crh
   315 jump __label46 always
   316 label __label45
 
   329 sensor __tmp86 SWITCH @enabled
   330 op equal __tmp87 __tmp86 0
   331 jump __label51 equal __tmp87 false
-    * set __tmp88 @time
-    * set start __tmp88
+  332 set start @time
   333 print "Universal Factory Monitor"
   334 print "\n"
   335 print "Monitoring: "
 
   351 label __label55
   352 set __tmp91 null
   353 label __label56
-    * getlink __tmp92 n
-    * set factory __tmp92
+  354 getlink factory n
   355 sensor __tmp93 factory @type
   356 op equal __tmp94 __tmp93 TYPE
   357 jump __label57 equal __tmp94 false
   358 set minimum 101
   359 sensor __tmp96 factory RES1
-    * op mul __tmp97 MUL1 __tmp96
-    * set r1 __tmp97
+  360 op mul r1 MUL1 __tmp96
   361 sensor __tmp98 factory RES2
-    * op mul __tmp99 MUL2 __tmp98
-    * set r2 __tmp99
+  362 op mul r2 MUL2 __tmp98
   363 sensor __tmp100 factory RES3
-    * op mul __tmp101 MUL3 __tmp100
-    * set r3 __tmp101
+  364 op mul r3 MUL3 __tmp100
   365 sensor __tmp102 factory OUTPUT
-    * op mul __tmp103 MUL1 __tmp102
-    * set out __tmp103
-    * sensor __tmp104 factory @enabled
-    * set e __tmp104
-    * sensor __tmp105 factory @totalPower
-    * set power __tmp105
-    * sensor __tmp106 factory @timescale
-    * set boost __tmp106
+  366 op mul out MUL1 __tmp102
+  367 sensor e factory @enabled
+  368 sensor power factory @totalPower
+  369 sensor boost factory @timescale
   370 op lessThan __tmp107 r1 minimum
   371 jump __label59 equal __tmp107 false
   372 set minimum r1
 
   397 op greaterThan __tmp113 out 33
   398 op sub __tmp114 100 out
   399 op lessThan __tmp115 __tmp114 minimum
-    * op land __tmp116 __tmp113 __tmp115
-    * set showout __tmp116
+  400 op land showout __tmp113 __tmp115
   401 jump __label65 equal showout false
   402 set icon OUTPUT
   403 set __tmp117 icon
 
   405 label __label65
   406 set __tmp117 null
   407 label __label66
-    * op idiv __tmp118 index 8
-    * set column __tmp118
-    * op mod __tmp119 index 8
-    * set row __tmp119
+  408 op idiv column index 8
+  409 op mod row index 8
   410 op mul __tmp120 column BAR_SPACE
-    * op add __tmp121 OFFSET_X __tmp120
-    * set x __tmp121
+  411 op add x OFFSET_X __tmp120
   412 op mul __tmp122 row BAR_GAP
-    * op add __tmp123 OFFSET_Y __tmp122
-    * set y __tmp123
+  413 op add y OFFSET_Y __tmp122
   414 op greaterThan __tmp124 minimum 66
   415 op equal __tmp125 showout false
   416 op land __tmp126 __tmp124 __tmp125
 
   472 draw stroke 2
   473 set __tmp128 null
   474 label __label70
-    * op add __tmp152 x 16
-    * set x __tmp152
+  475 op add x x 16
   476 op equal __tmp153 power 0
   477 op equal __tmp154 e 0
   478 op land __tmp155 __tmp153 __tmp154
 
   516 label __label74
   517 op greaterThan __tmp164 boost EXPECTED_BOOST
   518 jump __label81 equal __tmp164 false
-    * op max __tmp166 192 red
-    * set red __tmp166
-    * op max __tmp167 192 green
-    * set green __tmp167
-    * op max __tmp168 192 blue
-    * set blue __tmp168
+  519 op max red 192 red
+  520 op max green 192 green
+  521 op max blue 192 blue
   522 set boost EXPECTED_BOOST
   523 set __tmp165 boost
   524 jump __label82 always
 
   526 set __tmp165 null
   527 label __label82
   528 op mul __tmp169 BAR_LENGTH boost
-    * op idiv __tmp170 __tmp169 EXPECTED_BOOST
-    * set length __tmp170
+  529 op idiv length __tmp169 EXPECTED_BOOST
   530 draw color red green blue 128
   531 op mul __tmp171 minimum length
   532 op idiv __tmp172 __tmp171 100
   533 draw rect x y __tmp172 BAR_WIDTH
   534 draw color red green blue 255
   535 draw lineRect x y length BAR_WIDTH
-    * op add __tmp173 index 1
-    * set index __tmp173
+  536 op add index index 1
   537 set __tmp95 index
   538 jump __label58 always
   539 label __label57

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-35 instructions):
 
    21 jump __label7 always
    22 label __label8
    23 set MESSAGE block
-    * set __tmp8 MESSAGE
    24 jump __label6 always
    25 label __label7
    26 jump __label10 equal __ast0 @switch
    27 jump __label9 always
    28 label __label10
    29 set SWITCH block
-    * set __tmp8 SWITCH
    30 jump __label6 always
    31 label __label9
    32 jump __label12 equal __ast0 @logic-display
 
    34 jump __label11 always
    35 label __label12
    36 set DISPLAY block
-    * set __tmp8 DISPLAY
    37 jump __label6 always
    38 label __label11
    39 jump __label14 equal __ast0 @silicon-factory
 
    48 set MUL2 MUL3
    49 set MUL1 MUL2
    50 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    51 jump __label6 always
    52 label __label13
    53 jump __label16 equal __ast0 @silicon-crucible
 
    62 set MUL2 MUL3
    63 set MUL1 MUL2
    64 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    65 jump __label6 always
    66 label __label15
    67 jump __label18 equal __ast0 @kiln
 
    76 set MUL2 MUL3
    77 set MUL1 MUL2
    78 set OUTPUT @metaglass
-    * set __tmp8 OUTPUT
    79 jump __label6 always
    80 label __label17
    81 jump __label20 equal __ast0 @phase-weaver
 
    90 set MUL2 MUL3
    91 set MUL1 MUL2
    92 set OUTPUT @phase-fabric
-    * set __tmp8 OUTPUT
    93 jump __label6 always
    94 label __label19
    95 jump __label22 equal __ast0 @pyratite-mixer
 
   104 set MUL2 MUL3
   105 set MUL1 MUL2
   106 set OUTPUT @pyratite
-    * set __tmp8 OUTPUT
   107 jump __label6 always
   108 label __label21
   109 jump __label24 equal __ast0 @blast-mixer
 
   118 set MUL2 MUL3
   119 set MUL1 MUL2
   120 set OUTPUT @blast-compound
-    * set __tmp8 OUTPUT
   121 jump __label6 always
   122 label __label23
   123 jump __label26 equal __ast0 @plastanium-compressor
 
   133 sensor __tmp23 block @liquidCapacity
   134 op div MUL2 250 __tmp23
   135 set OUTPUT @plastanium
-    * set __tmp8 OUTPUT
   136 jump __label6 always
   137 label __label25
   138 print "\n  "
   139 print block
   140 print " not supported"
-    * set __tmp8 " not supported"
   141 label __label6
   142 label __label4
   143 jump __label3 always
 
   174 op or __tmp27 __tmp25 __tmp26
   175 jump __label27 equal __tmp27 false
   176 print "No block to monitor or display."
-    * set __tmp28 "No block to monitor or display."
   177 jump __label28 always
   178 label __label27
-    * set __tmp28 null
   179 label __label28
   180 printflush MESSAGE
   181 label __label1
 
   215 label __label34
   216 op sub clh __tmp39 cly
   217 set crh clh
-    * set __tmp31 crh
   218 jump __label30 always
   219 label __label29
   220 set OFFSET_X 5
 
   308 label __label46
   309 set __tmp44 __tmp74
   310 label __label36
-    * set __tmp31 __tmp44
   311 label __label30
   312 control enabled SWITCH 0
   313 label __label49
 
   331 op greaterThanEq __tmp90 index TO_INDEX
   332 jump __label55 equal __tmp90 false
   333 jump __label54 always
-    * set __tmp91 null
   334 jump __label56 always
   335 label __label55
-    * set __tmp91 null
   336 label __label56
   337 getlink factory n
   338 sensor __tmp93 factory @type
 
   354 jump __label59 equal __tmp107 false
   355 set minimum r1
   356 set icon RES1
-    * set __tmp108 icon
   357 jump __label60 always
   358 label __label59
-    * set __tmp108 null
   359 label __label60
   360 op lessThan __tmp109 r2 minimum
   361 jump __label61 equal __tmp109 false
   362 set minimum r2
   363 set icon RES2
-    * set __tmp110 icon
   364 jump __label62 always
   365 label __label61
-    * set __tmp110 null
   366 label __label62
   367 op lessThan __tmp111 r3 minimum
   368 jump __label63 equal __tmp111 false
   369 set minimum r3
   370 set icon RES3
-    * set __tmp112 icon
   371 jump __label64 always
   372 label __label63
-    * set __tmp112 null
   373 label __label64
   374 op greaterThan __tmp113 out 33
   375 op sub __tmp114 100 out
 
   377 op land showout __tmp113 __tmp115
   378 jump __label65 equal showout false
   379 set icon OUTPUT
-    * set __tmp117 icon
   380 jump __label66 always
   381 label __label65
-    * set __tmp117 null
   382 label __label66
   383 op idiv column index 8
   384 op mod row index 8
 
   391 op land __tmp126 __tmp124 __tmp125
   392 jump __label67 equal __tmp126 false
   393 set icon TYPE
-    * set __tmp127 icon
   394 jump __label68 always
   395 label __label67
-    * set __tmp127 null
   396 label __label68
   397 draw color 255 255 255 255
   398 jump __label69 equal e false
 
   423 draw rect __tmp140 __tmp141 2 2
   424 set __tmp130 null
   425 label __label72
-    * set __tmp128 __tmp130
   426 jump __label70 always
   427 label __label69
   428 draw color 255 80 80 255
 
   442 op sub __tmp151 y 1
   443 draw lineRect __tmp150 __tmp151 16 16
   444 draw stroke 2
-    * set __tmp128 null
   445 label __label70
   446 op add x x 16
   447 op equal __tmp153 power 0
 
   451 set red 255
   452 set green 0
   453 set blue 0
-    * set __tmp156 blue
   454 jump __label74 always
   455 label __label73
   456 jump __label75 equal showout false
 
   482 set blue 0
   483 set __tmp157 blue
   484 label __label76
-    * set __tmp156 __tmp157
   485 label __label74
   486 op greaterThan __tmp164 boost EXPECTED_BOOST
   487 jump __label81 equal __tmp164 false
 
   489 op max green 192 green
   490 op max blue 192 blue
   491 set boost EXPECTED_BOOST
-    * set __tmp165 boost
   492 jump __label82 always
   493 label __label81
-    * set __tmp165 null
   494 label __label82
   495 op mul __tmp169 BAR_LENGTH boost
   496 op idiv length __tmp169 EXPECTED_BOOST
 
   501 draw color red green blue 255
   502 draw lineRect x y length BAR_WIDTH
   503 op add index index 1
-    * set __tmp95 index
   504 jump __label58 always
   505 label __label57
-    * set __tmp95 null
   506 label __label58
   507 label __label53
   508 op add n n 1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-6 instructions):
 
   255 set clw crw
   256 set cly cry
   257 set clh crh
-    * set __tmp44 clh
   258 jump __label36 always
   259 label __label35
   260 set clx 0
 
   305 set crh clh
   306 set __tmp74 crh
   307 label __label46
-    * set __tmp44 __tmp74
   308 label __label36
   309 label __label30
   310 control enabled SWITCH 0
 
   399 op add __tmp131 x 7
   400 op add __tmp132 y 7
   401 draw image __tmp131 __tmp132 icon 16 0
-    * set __tmp130 null
   402 jump __label72 always
   403 label __label71
   404 draw color 255 80 80 255
 
   418 op add __tmp140 x 4
   419 op add __tmp141 y 6
   420 draw rect __tmp140 __tmp141 2 2
-    * set __tmp130 null
   421 label __label72
   422 jump __label70 always
   423 label __label69
 
   454 set green 0
   455 set blue 255
   456 set minimum out
-    * set __tmp157 minimum
   457 jump __label76 always
   458 label __label75
   459 op greaterThan __tmp158 minimum 66
 
   475 label __label80
   476 set green __tmp163
   477 set blue 0
-    * set __tmp157 blue
   478 label __label76
   479 label __label74
   480 op greaterThan __tmp164 boost EXPECTED_BOOST

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   296 set __tmp81 176
   297 label __label48
   298 op sub crh __tmp81 cry
-    * set __tmp74 crh
   299 jump __label46 always
   300 label __label45
   301 set crx clx
   302 set crw clw
   303 set cry cly
   304 set crh clh
-    * set __tmp74 crh
   305 label __label46
   306 label __label36
   307 label __label30

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
    17 op sub n n 1
    18 getlink block n
    19 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   20 jump __label7 notEqual __ast0 @message
    21 label __label8
    22 set MESSAGE block
    23 jump __label6 always
    24 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   25 jump __label9 notEqual __ast0 @switch
    26 label __label10
    27 set SWITCH block
    28 jump __label6 always
    29 label __label9
    30 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   31 jump __label11 notEqual __ast0 @large-logic-display
    32 label __label12
    33 set DISPLAY block
    34 jump __label6 always
    35 label __label11
-    * jump __label14 equal __ast0 @silicon-factory
-    * jump __label13 always
+   36 jump __label13 notEqual __ast0 @silicon-factory
    37 label __label14
    38 set TYPE @silicon-factory
    39 sensor CAPACITY block @itemCapacity
 
    46 set OUTPUT @silicon
    47 jump __label6 always
    48 label __label13
-    * jump __label16 equal __ast0 @silicon-crucible
-    * jump __label15 always
+   49 jump __label15 notEqual __ast0 @silicon-crucible
    50 label __label16
    51 set TYPE @silicon-crucible
    52 sensor CAPACITY block @itemCapacity
 
    59 set OUTPUT @silicon
    60 jump __label6 always
    61 label __label15
-    * jump __label18 equal __ast0 @kiln
-    * jump __label17 always
+   62 jump __label17 notEqual __ast0 @kiln
    63 label __label18
    64 set TYPE @kiln
    65 sensor CAPACITY block @itemCapacity
 
    72 set OUTPUT @metaglass
    73 jump __label6 always
    74 label __label17
-    * jump __label20 equal __ast0 @phase-weaver
-    * jump __label19 always
+   75 jump __label19 notEqual __ast0 @phase-weaver
    76 label __label20
    77 set TYPE @phase-weaver
    78 sensor CAPACITY block @itemCapacity
 
    85 set OUTPUT @phase-fabric
    86 jump __label6 always
    87 label __label19
-    * jump __label22 equal __ast0 @pyratite-mixer
-    * jump __label21 always
+   88 jump __label21 notEqual __ast0 @pyratite-mixer
    89 label __label22
    90 set TYPE @pyratite-mixer
    91 sensor CAPACITY block @itemCapacity
 
    98 set OUTPUT @pyratite
    99 jump __label6 always
   100 label __label21
-    * jump __label24 equal __ast0 @blast-mixer
-    * jump __label23 always
+  101 jump __label23 notEqual __ast0 @blast-mixer
   102 label __label24
   103 set TYPE @blast-mixer
   104 sensor CAPACITY block @itemCapacity
 
   111 set OUTPUT @blast-compound
   112 jump __label6 always
   113 label __label23
-    * jump __label26 equal __ast0 @plastanium-compressor
-    * jump __label25 always
+  114 jump __label25 notEqual __ast0 @plastanium-compressor
   115 label __label26
   116 set TYPE @plastanium-compressor
   117 sensor CAPACITY block @itemCapacity

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-20 instructions):
 
    12 print "\n"
    13 set n @links
    14 label __label3
-    * op greaterThan __tmp4 n 0
-    * jump __label5 equal __tmp4 false
+   15 jump __label5 lessThanEq n 0
    16 op sub n n 1
    17 getlink block n
    18 sensor __ast0 block @type
 
   171 jump __label0 always
   172 label __label2
   173 sensor __tmp29 DISPLAY @type
-    * op equal __tmp30 __tmp29 @logic-display
-    * jump __label29 equal __tmp30 false
+  174 jump __label29 notEqual __tmp29 @logic-display
   175 set OFFSET_X 2
   176 set OFFSET_Y 2
   177 set BAR_WIDTH 14
 
   183 op add __tmp32 OFFSET_X BAR_SPACE
   184 op sub clw __tmp32 2
   185 set crw clw
-    * op equal __tmp34 FROM_INDEX 0
-    * jump __label31 equal __tmp34 false
+  186 jump __label31 notEqual FROM_INDEX 0
   187 set __tmp35 0
   188 jump __label32 always
   189 label __label31
 
   192 label __label32
   193 set cly __tmp35
   194 set cry cly
-    * op lessThan __tmp38 TO_INDEX 8
-    * jump __label33 equal __tmp38 false
+  195 jump __label33 greaterThanEq TO_INDEX 8
   196 op mul __tmp40 TO_INDEX BAR_GAP
   197 op add __tmp39 OFFSET_Y __tmp40
   198 jump __label34 always
 
   209 set BAR_LENGTH 61
   210 set BAR_SPACE 88
   211 set BAR_GAP 22
-    * op greaterThanEq __tmp43 FROM_INDEX 8
-    * jump __label35 equal __tmp43 false
+  212 jump __label35 lessThan FROM_INDEX 8
   213 op add __tmp45 OFFSET_X BAR_SPACE
   214 op sub crx __tmp45 2
   215 op add __tmp47 OFFSET_X BAR_SPACE
   216 op sub __tmp48 176 __tmp47
   217 op add crw __tmp48 1
   218 op mod __tmp50 FROM_INDEX 8
-    * op equal __tmp51 __tmp50 0
-    * jump __label37 equal __tmp51 false
+  219 jump __label37 notEqual __tmp50 0
   220 set __tmp52 0
   221 jump __label38 always
   222 label __label37
 
   225 op add __tmp52 OFFSET_Y __tmp54
   226 label __label38
   227 set cry __tmp52
-    * op lessThan __tmp56 TO_INDEX 16
-    * jump __label39 equal __tmp56 false
+  228 jump __label39 greaterThanEq TO_INDEX 16
   229 op mod __tmp58 TO_INDEX 8
   230 op mul __tmp59 __tmp58 BAR_GAP
   231 op add __tmp57 OFFSET_Y __tmp59
 
   243 set clx 0
   244 op add __tmp62 OFFSET_X BAR_SPACE
   245 op sub clw __tmp62 2
-    * op equal __tmp64 FROM_INDEX 0
-    * jump __label41 equal __tmp64 false
+  246 jump __label41 notEqual FROM_INDEX 0
   247 set __tmp65 0
   248 jump __label42 always
   249 label __label41
 
   251 op add __tmp65 OFFSET_Y __tmp66
   252 label __label42
   253 set cly __tmp65
-    * op lessThan __tmp68 TO_INDEX 8
-    * jump __label43 equal __tmp68 false
+  254 jump __label43 greaterThanEq TO_INDEX 8
   255 op mul __tmp70 TO_INDEX BAR_GAP
   256 op add __tmp69 OFFSET_Y __tmp70
   257 jump __label44 always
 
   259 set __tmp69 176
   260 label __label44
   261 op sub clh __tmp69 cly
-    * op greaterThanEq __tmp73 TO_INDEX 8
-    * jump __label45 equal __tmp73 false
+  262 jump __label45 lessThan TO_INDEX 8
   263 op add __tmp75 OFFSET_X BAR_SPACE
   264 op sub crx __tmp75 2
   265 op add __tmp77 OFFSET_X BAR_SPACE
   266 op sub __tmp78 176 __tmp77
   267 op add crw __tmp78 1
   268 set cry 0
-    * op lessThan __tmp80 TO_INDEX 16
-    * jump __label47 equal __tmp80 false
+  269 jump __label47 greaterThanEq TO_INDEX 16
   270 op mod __tmp82 TO_INDEX 8
   271 op mul __tmp83 __tmp82 BAR_GAP
   272 op add __tmp81 OFFSET_Y __tmp83
 
   287 control enabled SWITCH 0
   288 label __label49
   289 sensor __tmp86 SWITCH @enabled
-    * op equal __tmp87 __tmp86 0
-    * jump __label51 equal __tmp87 false
+  290 jump __label51 notEqual __tmp86 0
   291 set start @time
   292 print "Universal Factory Monitor"
   293 print "\n"
 
   302 set n 0
   303 label __label52
   304 jump __label54 greaterThanEq n __tmp89
-    * op greaterThanEq __tmp90 index TO_INDEX
-    * jump __label55 equal __tmp90 false
+  305 jump __label55 lessThan index TO_INDEX
   306 jump __label54 always
   307 jump __label56 always
   308 label __label55
   309 label __label56
   310 getlink factory n
   311 sensor __tmp93 factory @type
-    * op equal __tmp94 __tmp93 TYPE
-    * jump __label57 equal __tmp94 false
+  312 jump __label57 notEqual __tmp93 TYPE
   313 set minimum 101
   314 sensor __tmp96 factory RES1
   315 op mul r1 MUL1 __tmp96
 
   322 sensor e factory @enabled
   323 sensor power factory @totalPower
   324 sensor boost factory @timescale
-    * op lessThan __tmp107 r1 minimum
-    * jump __label59 equal __tmp107 false
+  325 jump __label59 greaterThanEq r1 minimum
   326 set minimum r1
   327 set icon RES1
   328 jump __label60 always
   329 label __label59
   330 label __label60
-    * op lessThan __tmp109 r2 minimum
-    * jump __label61 equal __tmp109 false
+  331 jump __label61 greaterThanEq r2 minimum
   332 set minimum r2
   333 set icon RES2
   334 jump __label62 always
   335 label __label61
   336 label __label62
-    * op lessThan __tmp111 r3 minimum
-    * jump __label63 equal __tmp111 false
+  337 jump __label63 greaterThanEq r3 minimum
   338 set minimum r3
   339 set icon RES3
   340 jump __label64 always
 
   365 label __label68
   366 draw color 255 255 255 255
   367 jump __label69 equal e false
-    * op greaterThan __tmp129 power 0
-    * jump __label71 equal __tmp129 false
+  368 jump __label71 lessThanEq power 0
   369 op add __tmp131 x 7
   370 op add __tmp132 y 7
   371 draw image __tmp131 __tmp132 icon 16 0
 
   436 set __tmp161 255
   437 label __label78
   438 set red __tmp161
-    * op greaterThan __tmp162 minimum 33
-    * jump __label79 equal __tmp162 false
+  439 jump __label79 lessThanEq minimum 33
   440 set __tmp163 255
   441 jump __label80 always
   442 label __label79
 
   446 set blue 0
   447 label __label76
   448 label __label74
-    * op greaterThan __tmp164 boost EXPECTED_BOOST
-    * jump __label81 equal __tmp164 false
+  449 jump __label81 lessThanEq boost EXPECTED_BOOST
   450 op max red 192 red
   451 op max green 192 green
   452 op max blue 192 blue

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
   163 op or __tmp27 __tmp25 __tmp26
   164 jump __label27 equal __tmp27 false
   165 print "No block to monitor or display."
-    * jump __label28 always
   166 label __label27
   167 label __label28
   168 printflush MESSAGE
 
   303 jump __label54 greaterThanEq n __tmp89
   304 jump __label55 lessThan index TO_INDEX
   305 jump __label54 always
-    * jump __label56 always
   306 label __label55
   307 label __label56
   308 getlink factory n
 
   323 jump __label59 greaterThanEq r1 minimum
   324 set minimum r1
   325 set icon RES1
-    * jump __label60 always
   326 label __label59
   327 label __label60
   328 jump __label61 greaterThanEq r2 minimum
   329 set minimum r2
   330 set icon RES2
-    * jump __label62 always
   331 label __label61
   332 label __label62
   333 jump __label63 greaterThanEq r3 minimum
   334 set minimum r3
   335 set icon RES3
-    * jump __label64 always
   336 label __label63
   337 label __label64
   338 op greaterThan __tmp113 out 33
 
   341 op land showout __tmp113 __tmp115
   342 jump __label65 equal showout false
   343 set icon OUTPUT
-    * jump __label66 always
   344 label __label65
   345 label __label66
   346 op idiv column index 8
 
   354 op land __tmp126 __tmp124 __tmp125
   355 jump __label67 equal __tmp126 false
   356 set icon TYPE
-    * jump __label68 always
   357 label __label67
   358 label __label68
   359 draw color 255 255 255 255
 
   444 op max green 192 green
   445 op max blue 192 blue
   446 set boost EXPECTED_BOOST
-    * jump __label82 always
   447 label __label81
   448 label __label82
   449 op mul __tmp169 BAR_LENGTH boost
 
   455 draw color red green blue 255
   456 draw lineRect x y length BAR_WIDTH
   457 op add index index 1
-    * jump __label58 always
   458 label __label57
   459 label __label58
   460 label __label53

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-8 instructions):
 
   182 op add __tmp32 OFFSET_X BAR_SPACE
   183 op sub clw __tmp32 2
   184 set crw clw
-    * jump __label31 notEqual FROM_INDEX 0
-    * set __tmp35 0
-    * jump __label32 always
+  185 set cly 0
+  186 jump __label32 equal FROM_INDEX 0
   187 label __label31
   188 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp36
+  189 op add cly OFFSET_Y __tmp36
   190 label __label32
-    * set cly __tmp35
   191 set cry cly
-    * jump __label33 greaterThanEq TO_INDEX 8
+  192 set __tmp39 176
+  193 jump __label34 greaterThanEq TO_INDEX 8
   194 op mul __tmp40 TO_INDEX BAR_GAP
   195 op add __tmp39 OFFSET_Y __tmp40
   196 jump __label34 always
-    * label __label33
-    * set __tmp39 176
   197 label __label34
   198 op sub clh __tmp39 cly
   199 set crh clh
 
   211 op add __tmp47 OFFSET_X BAR_SPACE
   212 op sub __tmp48 176 __tmp47
   213 op add crw __tmp48 1
+  214 set cry 0
   215 op mod __tmp50 FROM_INDEX 8
-    * jump __label37 notEqual __tmp50 0
-    * set __tmp52 0
-    * jump __label38 always
+  216 jump __label38 equal __tmp50 0
   217 label __label37
   218 op mod __tmp53 FROM_INDEX 8
   219 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp52 OFFSET_Y __tmp54
+  220 op add cry OFFSET_Y __tmp54
   221 label __label38
-    * set cry __tmp52
-    * jump __label39 greaterThanEq TO_INDEX 16
+  222 set __tmp57 176
+  223 jump __label40 greaterThanEq TO_INDEX 16
   224 op mod __tmp58 TO_INDEX 8
   225 op mul __tmp59 __tmp58 BAR_GAP
   226 op add __tmp57 OFFSET_Y __tmp59
   227 jump __label40 always
-    * label __label39
-    * set __tmp57 176
   228 label __label40
   229 op sub crh __tmp57 cry
   230 set clx crx
 
   236 set clx 0
   237 op add __tmp62 OFFSET_X BAR_SPACE
   238 op sub clw __tmp62 2
-    * jump __label41 notEqual FROM_INDEX 0
-    * set __tmp65 0
-    * jump __label42 always
+  239 set cly 0
+  240 jump __label42 equal FROM_INDEX 0
   241 label __label41
   242 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp65 OFFSET_Y __tmp66
+  243 op add cly OFFSET_Y __tmp66
   244 label __label42
-    * set cly __tmp65
-    * jump __label43 greaterThanEq TO_INDEX 8
+  245 set __tmp69 176
+  246 jump __label44 greaterThanEq TO_INDEX 8
   247 op mul __tmp70 TO_INDEX BAR_GAP
   248 op add __tmp69 OFFSET_Y __tmp70
   249 jump __label44 always
-    * label __label43
-    * set __tmp69 176
   250 label __label44
   251 op sub clh __tmp69 cly
   252 jump __label45 lessThan TO_INDEX 8
 
   256 op sub __tmp78 176 __tmp77
   257 op add crw __tmp78 1
   258 set cry 0
-    * jump __label47 greaterThanEq TO_INDEX 16
+  259 set __tmp81 176
+  260 jump __label48 greaterThanEq TO_INDEX 16
   261 op mod __tmp82 TO_INDEX 8
   262 op mul __tmp83 __tmp82 BAR_GAP
   263 op add __tmp81 OFFSET_Y __tmp83
   264 jump __label48 always
-    * label __label47
-    * set __tmp81 176
   265 label __label48
   266 op sub crh __tmp81 cry
   267 jump __label46 always
 
   409 set minimum out
   410 jump __label76 always
   411 label __label75
+  412 set red 255
   413 op greaterThan __tmp158 minimum 66
   414 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   415 op land __tmp160 __tmp158 __tmp159
-    * jump __label77 equal __tmp160 false
-    * set __tmp161 0
+  416 jump __label78 equal __tmp160 false
+  417 set red 0
   418 jump __label78 always
-    * label __label77
-    * set __tmp161 255
   419 label __label78
-    * set red __tmp161
-    * jump __label79 lessThanEq minimum 33
-    * set __tmp163 255
+  420 set green 0
+  421 jump __label80 lessThanEq minimum 33
+  422 set green 255
   423 jump __label80 always
-    * label __label79
-    * set __tmp163 0
   424 label __label80
-    * set green __tmp163
   425 set blue 0
   426 label __label76
   427 label __label74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   178 set BAR_SPACE 80
   179 set BAR_GAP 20
   180 set clx 0
-    * set crx clx
+  181 set crx 0
   182 op add __tmp32 OFFSET_X BAR_SPACE
   183 op sub clw __tmp32 2
   184 set crw clw
 
   209 op add __tmp45 OFFSET_X BAR_SPACE
   210 op sub crx __tmp45 2
   211 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp47
-    * op add crw __tmp48 1
+  212 op sub __tmp48 176 __tmp45
+  213 op sub crw 177 __tmp47
   214 set cry 0
   215 op mod __tmp50 FROM_INDEX 8
   216 jump __label38 equal __tmp50 0
   217 label __label37
   218 op mod __tmp53 FROM_INDEX 8
-    * op mul __tmp54 __tmp53 BAR_GAP
+  219 op mul __tmp54 __tmp50 BAR_GAP
   220 op add cry OFFSET_Y __tmp54
   221 label __label38
   222 set __tmp57 176
 
   251 op sub clh __tmp69 cly
   252 jump __label45 lessThan TO_INDEX 8
   253 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub crx __tmp75 2
+  254 op sub crx __tmp62 2
   255 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp77
-    * op add crw __tmp78 1
+  256 op sub __tmp78 176 __tmp62
+  257 op sub crw 177 __tmp77
   258 set cry 0
   259 set __tmp81 176
   260 jump __label48 greaterThanEq TO_INDEX 16
 
   263 op add __tmp81 OFFSET_Y __tmp83
   264 jump __label48 always
   265 label __label48
-    * op sub crh __tmp81 cry
+  266 op sub crh __tmp81 0
   267 jump __label46 always
   268 label __label45
-    * set crx clx
+  269 set crx 0
   270 set crw clw
   271 set cry cly
   272 set crh clh
 
   310 sensor e factory @enabled
   311 sensor power factory @totalPower
   312 sensor boost factory @timescale
-    * jump __label59 greaterThanEq r1 minimum
+  313 jump __label59 greaterThanEq r1 101
   314 set minimum r1
   315 set icon RES1
   316 label __label59
 
   363 draw rect __tmp134 __tmp135 8 4
   364 op add __tmp136 x 12
   365 op add __tmp137 y 3
-    * draw rect __tmp136 __tmp137 2 2
+  366 draw rect __tmp136 __tmp133 2 2
   367 op add __tmp138 x 12
   368 op add __tmp139 y 9
-    * draw rect __tmp138 __tmp139 2 2
+  369 draw rect __tmp136 __tmp139 2 2
   370 draw color 255 80 80 255
   371 op add __tmp140 x 4
   372 op add __tmp141 y 6
 
   385 op add __tmp147 y 2
   386 op add __tmp148 x 12
   387 op add __tmp149 y 12
-    * draw line __tmp146 __tmp147 __tmp148 __tmp149
+  388 draw line __tmp142 __tmp145 __tmp144 __tmp143
   389 draw color 0 0 0 255
   390 op sub __tmp150 x 1
   391 op sub __tmp151 y 1
 
   412 set red 255
   413 op greaterThan __tmp158 minimum 66
   414 op greaterThanEq __tmp159 boost EXPECTED_BOOST
-    * op land __tmp160 __tmp158 __tmp159
+  415 op land __tmp160 __tmp124 __tmp159
   416 jump __label78 equal __tmp160 false
   417 set red 0
   418 jump __label78 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   209 op add __tmp45 OFFSET_X BAR_SPACE
   210 op sub crx __tmp45 2
   211 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp45
-    * op sub crw 177 __tmp47
+  212 op sub crw 177 __tmp45
   213 set cry 0
   214 op mod __tmp50 FROM_INDEX 8
   215 jump __label38 equal __tmp50 0
   216 label __label37
-    * op mod __tmp53 FROM_INDEX 8
   217 op mul __tmp54 __tmp50 BAR_GAP
   218 op add cry OFFSET_Y __tmp54
   219 label __label38
 
   248 label __label44
   249 op sub clh __tmp69 cly
   250 jump __label45 lessThan TO_INDEX 8
-    * op add __tmp75 OFFSET_X BAR_SPACE
   251 op sub crx __tmp62 2
   252 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp62
-    * op sub crw 177 __tmp77
+  253 op sub crw 177 __tmp62
   254 set cry 0
   255 set __tmp81 176
   256 jump __label48 greaterThanEq TO_INDEX 16
 
   358 op add __tmp135 y 5
   359 draw rect __tmp134 __tmp135 8 4
   360 op add __tmp136 x 12
-    * op add __tmp137 y 3
   361 draw rect __tmp136 __tmp133 2 2
-    * op add __tmp138 x 12
   362 op add __tmp139 y 9
   363 draw rect __tmp136 __tmp139 2 2
   364 draw color 255 80 80 255
 
   375 op add __tmp144 x 12
   376 op add __tmp145 y 2
   377 draw line __tmp142 __tmp143 __tmp144 __tmp145
-    * op add __tmp146 x 2
-    * op add __tmp147 y 2
-    * op add __tmp148 x 12
-    * op add __tmp149 y 12
   378 draw line __tmp142 __tmp145 __tmp144 __tmp143
   379 draw color 0 0 0 255
   380 op sub __tmp150 x 1
 
   400 jump __label76 always
   401 label __label75
   402 set red 255
-    * op greaterThan __tmp158 minimum 66
   403 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   404 op land __tmp160 __tmp124 __tmp159
   405 jump __label78 equal __tmp160 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
   208 jump __label35 lessThan FROM_INDEX 8
   209 op add __tmp45 OFFSET_X BAR_SPACE
   210 op sub crx __tmp45 2
-    * op add __tmp47 OFFSET_X BAR_SPACE
   211 op sub crw 177 __tmp45
   212 set cry 0
   213 op mod __tmp50 FROM_INDEX 8
 
   248 op sub clh __tmp69 cly
   249 jump __label45 lessThan TO_INDEX 8
   250 op sub crx __tmp62 2
-    * op add __tmp77 OFFSET_X BAR_SPACE
   251 op sub crw 177 __tmp62
   252 set cry 0
   253 set __tmp81 176

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    13 set n @links
    14 label __label3
    15 jump __label5 lessThanEq n 0
+   16 label __label83
    17 op sub n n 1
    18 getlink block n
    19 sensor __ast0 block @type
 
   130 print " not supported"
   131 label __label6
   132 label __label4
-    * jump __label3 always
+  133 jump __label83 greaterThan n 0
   134 label __label5
   135 print "Message: "
   136 print MESSAGE
 
   286 set n 0
   287 label __label52
   288 jump __label54 greaterThanEq n __tmp89
+  289 label __label84
   290 jump __label55 lessThan index TO_INDEX
   291 jump __label54 always
   292 label __label55
 
   434 label __label58
   435 label __label53
   436 op add n n 1
-    * jump __label52 always
+  437 jump __label84 lessThan n __tmp89
   438 label __label54
   439 drawflush DISPLAY
   440 op sub __tmp174 @time start

Modifications by Loop Optimization: replicate condition at line 160 (+1 instructions):
 
   272 label __label49
   273 sensor __tmp86 SWITCH @enabled
   274 jump __label51 notEqual __tmp86 0
+  275 label __label85
   276 set start @time
   277 print "Universal Factory Monitor"
   278 print "\n"
 
   445 print " ms"
   446 printflush MESSAGE
   447 label __label50
-    * jump __label49 always
+  448 sensor __tmp86 SWITCH @enabled
+  449 jump __label85 equal __tmp86 0
   450 label __label51
   451 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   286 set __tmp89 @links
   287 set n 0
   288 label __label52
-    * jump __label54 greaterThanEq n __tmp89
+  289 jump __label54 greaterThanEq 0 __tmp89
   290 label __label84
   291 jump __label55 lessThan index TO_INDEX
   292 jump __label54 always

Modifications by Loop Optimization: replicate condition at line 14 (+3 instructions):
 
     8 op equal __tmp1 TYPE null
     9 op or __tmp2 __tmp0 __tmp1
    10 jump __label2 equal __tmp2 false
+   11 label __label86
    12 print "Universal Factory Monitor"
    13 print "\n"
    14 set n @links
 
   169 label __label28
   170 printflush MESSAGE
   171 label __label1
-    * jump __label0 always
+  172 op equal __tmp0 DISPLAY null
+  173 op equal __tmp1 TYPE null
+  174 op or __tmp2 __tmp0 __tmp1
+  175 jump __label86 notEqual __tmp2 false
   176 label __label2
   177 sensor __tmp29 DISPLAY @type
   178 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   171 label __label1
   172 op equal __tmp0 DISPLAY null
   173 op equal __tmp1 TYPE null
-    * op or __tmp2 __tmp0 __tmp1
-    * jump __label86 notEqual __tmp2 false
+  174 op or __tmp2 __tmp25 __tmp26
+  175 jump __label86 notEqual __tmp27 false
   176 label __label2
   177 sensor __tmp29 DISPLAY @type
   178 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   169 label __label28
   170 printflush MESSAGE
   171 label __label1
-    * op equal __tmp0 DISPLAY null
-    * op equal __tmp1 TYPE null
-    * op or __tmp2 __tmp25 __tmp26
   172 jump __label86 notEqual __tmp27 false
   173 label __label2
   174 sensor __tmp29 DISPLAY @type

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   195 jump __label34 greaterThanEq TO_INDEX 8
   196 op mul __tmp40 TO_INDEX BAR_GAP
   197 op add __tmp39 OFFSET_Y __tmp40
-    * jump __label34 always
   198 label __label34
   199 op sub clh __tmp39 cly
   200 set crh clh
 
   222 op mod __tmp58 TO_INDEX 8
   223 op mul __tmp59 __tmp58 BAR_GAP
   224 op add __tmp57 OFFSET_Y __tmp59
-    * jump __label40 always
   225 label __label40
   226 op sub crh __tmp57 cry
   227 set clx crx
 
   243 jump __label44 greaterThanEq TO_INDEX 8
   244 op mul __tmp70 TO_INDEX BAR_GAP
   245 op add __tmp69 OFFSET_Y __tmp70
-    * jump __label44 always
   246 label __label44
   247 op sub clh __tmp69 cly
   248 jump __label45 lessThan TO_INDEX 8
 
   254 op mod __tmp82 TO_INDEX 8
   255 op mul __tmp83 __tmp82 BAR_GAP
   256 op add __tmp81 OFFSET_Y __tmp83
-    * jump __label48 always
   257 label __label48
   258 op sub crh __tmp81 0
   259 jump __label46 always
 
   402 op land __tmp160 __tmp124 __tmp159
   403 jump __label78 equal __tmp160 false
   404 set red 0
-    * jump __label78 always
   405 label __label78
   406 set green 0
   407 jump __label80 lessThanEq minimum 33
   408 set green 255
-    * jump __label80 always
   409 label __label80
   410 set blue 0
   411 label __label76

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   255 op mul __tmp83 __tmp82 BAR_GAP
   256 op add __tmp81 OFFSET_Y __tmp83
   257 label __label48
-    * op sub crh __tmp81 0
+  258 set crh __tmp81
   259 jump __label46 always
   260 label __label45
   261 set crx 0

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
   285 label __label52
   286 jump __label54 greaterThanEq 0 __tmp89
   287 label __label84
-    * jump __label55 lessThan index TO_INDEX
-    * jump __label54 always
+  288 jump __label54 greaterThanEq index TO_INDEX
   289 label __label55
   290 label __label56
   291 getlink factory n

Modifications by Final phase, Jump Threading, iteration 1:
 
   345 op add __tmp131 x 7
   346 op add __tmp132 y 7
   347 draw image __tmp131 __tmp132 icon 16 0
-    * jump __label72 always
+  348 jump __label70 always
   349 label __label71
   350 draw color 255 80 80 255
   351 op add __tmp133 y 3

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
     9 op or __tmp2 __tmp0 __tmp1
    10 jump __label2 equal __tmp2 false
    11 label __label86
-    * print "Universal Factory Monitor"
-    * print "\n"
+   12 print "Universal Factory Monitor\n"
    13 set n @links
    14 label __label3
    15 jump __label5 lessThanEq n 0
 
   134 label __label5
   135 print "Message: "
   136 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+  137 print "\nSwitch: "
   138 print SWITCH
-    * print "\n"
-    * print "Display: "
+  139 print "\nDisplay: "
   140 print DISPLAY
-    * print "\n"
-    * print "Monitoring: "
+  141 print "\nMonitoring: "
   142 print TYPE
-    * print "\n"
-    * print "Capacity: "
+  143 print "\nCapacity: "
   144 print CAPACITY
-    * print "\n"
-    * print "Resource 1: "
+  145 print "\nResource 1: "
   146 print RES1
-    * print "\n"
-    * print "Resource 2: "
+  147 print "\nResource 2: "
   148 print RES2
-    * print "\n"
-    * print "Resource 3: "
+  149 print "\nResource 3: "
   150 print RES3
-    * print "\n"
-    * print "Output: "
+  151 print "\nOutput: "
   152 print OUTPUT
   153 print "\n"
   154 op equal __tmp25 DISPLAY null
 
   262 jump __label51 notEqual __tmp86 0
   263 label __label85
   264 set start @time
-    * print "Universal Factory Monitor"
-    * print "\n"
+  265 print "Universal Factory Monitor\n"
   266 print "Monitoring: "
   267 print TYPE
   268 draw color 0 0 80 255

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set EXPECTED_BOOST 1.5
set DISPLAY null
set TYPE null
set icon null
op equal __tmp0 DISPLAY null
op equal __tmp1 TYPE null
op or __tmp2 __tmp0 __tmp1
jump __label2 equal __tmp2 false
label __label86
print "Universal Factory Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label83
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label13 notEqual __ast0 @silicon-factory
set TYPE @silicon-factory
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label13
jump __label15 notEqual __ast0 @silicon-crucible
set TYPE @silicon-crucible
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @pyratite
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label15
jump __label17 notEqual __ast0 @kiln
set TYPE @kiln
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @lead
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @metaglass
jump __label6 always 0 0
label __label17
jump __label19 notEqual __ast0 @phase-weaver
set TYPE @phase-weaver
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @thorium
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @phase-fabric
jump __label6 always 0 0
label __label19
jump __label21 notEqual __ast0 @pyratite-mixer
set TYPE @pyratite-mixer
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @lead
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @pyratite
jump __label6 always 0 0
label __label21
jump __label23 notEqual __ast0 @blast-mixer
set TYPE @blast-mixer
sensor CAPACITY block @itemCapacity
set RES1 @pyratite
set RES2 @spore-pod
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @blast-compound
jump __label6 always 0 0
label __label23
jump __label25 notEqual __ast0 @plastanium-compressor
set TYPE @plastanium-compressor
sensor CAPACITY block @itemCapacity
set RES1 @titanium
set RES2 @oil
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL1 MUL3
sensor __tmp23 block @liquidCapacity
op div MUL2 250 __tmp23
set OUTPUT @plastanium
jump __label6 always 0 0
label __label25
print "\n  "
print block
print " not supported"
label __label6
jump __label83 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nDisplay: "
print DISPLAY
print "\nMonitoring: "
print TYPE
print "\nCapacity: "
print CAPACITY
print "\nResource 1: "
print RES1
print "\nResource 2: "
print RES2
print "\nResource 3: "
print RES3
print "\nOutput: "
print OUTPUT
print "\n"
op equal __tmp25 DISPLAY null
op equal __tmp26 TYPE null
op or __tmp27 __tmp25 __tmp26
jump __label27 equal __tmp27 false
print "No block to monitor or display."
label __label27
printflush MESSAGE
jump __label86 notEqual __tmp27 false
label __label2
sensor __tmp29 DISPLAY @type
jump __label29 notEqual __tmp29 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp32 OFFSET_X BAR_SPACE
op sub clw __tmp32 2
set crw clw
set cly 0
jump __label32 equal FROM_INDEX 0
op mul __tmp36 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp36
label __label32
set cry cly
set __tmp39 176
jump __label34 greaterThanEq TO_INDEX 8
op mul __tmp40 TO_INDEX BAR_GAP
op add __tmp39 OFFSET_Y __tmp40
label __label34
op sub clh __tmp39 cly
set crh clh
jump __label30 always 0 0
label __label29
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 88
set BAR_GAP 22
jump __label35 lessThan FROM_INDEX 8
op add __tmp45 OFFSET_X BAR_SPACE
op sub crx __tmp45 2
op sub crw 177 __tmp45
set cry 0
op mod __tmp50 FROM_INDEX 8
jump __label38 equal __tmp50 0
op mul __tmp54 __tmp50 BAR_GAP
op add cry OFFSET_Y __tmp54
label __label38
set __tmp57 176
jump __label40 greaterThanEq TO_INDEX 16
op mod __tmp58 TO_INDEX 8
op mul __tmp59 __tmp58 BAR_GAP
op add __tmp57 OFFSET_Y __tmp59
label __label40
op sub crh __tmp57 cry
set clx crx
set clw crw
set cly cry
set clh crh
jump __label36 always 0 0
label __label35
set clx 0
op add __tmp62 OFFSET_X BAR_SPACE
op sub clw __tmp62 2
set cly 0
jump __label42 equal FROM_INDEX 0
op mul __tmp66 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp66
label __label42
set __tmp69 176
jump __label44 greaterThanEq TO_INDEX 8
op mul __tmp70 TO_INDEX BAR_GAP
op add __tmp69 OFFSET_Y __tmp70
label __label44
op sub clh __tmp69 cly
jump __label45 lessThan TO_INDEX 8
op sub crx __tmp62 2
op sub crw 177 __tmp62
set cry 0
set __tmp81 176
jump __label48 greaterThanEq TO_INDEX 16
op mod __tmp82 TO_INDEX 8
op mul __tmp83 __tmp82 BAR_GAP
op add __tmp81 OFFSET_Y __tmp83
label __label48
set crh __tmp81
jump __label46 always 0 0
label __label45
set crx 0
set crw clw
set cry cly
set crh clh
label __label46
label __label36
label __label30
control enabled SWITCH 0 0 0 0
sensor __tmp86 SWITCH @enabled
jump __label51 notEqual __tmp86 0
label __label85
set start @time
print "Universal Factory Monitor\n"
print "Monitoring: "
print TYPE
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set __tmp89 @links
set n 0
jump __label54 greaterThanEq 0 __tmp89
label __label84
jump __label54 greaterThanEq index TO_INDEX
getlink factory n
sensor __tmp93 factory @type
jump __label57 notEqual __tmp93 TYPE
set minimum 101
sensor __tmp96 factory RES1
op mul r1 MUL1 __tmp96
sensor __tmp98 factory RES2
op mul r2 MUL2 __tmp98
sensor __tmp100 factory RES3
op mul r3 MUL3 __tmp100
sensor __tmp102 factory OUTPUT
op mul out MUL1 __tmp102
sensor e factory @enabled
sensor power factory @totalPower
sensor boost factory @timescale
jump __label59 greaterThanEq r1 101
set minimum r1
set icon RES1
label __label59
jump __label61 greaterThanEq r2 minimum
set minimum r2
set icon RES2
label __label61
jump __label63 greaterThanEq r3 minimum
set minimum r3
set icon RES3
label __label63
op greaterThan __tmp113 out 33
op sub __tmp114 100 out
op lessThan __tmp115 __tmp114 minimum
op land showout __tmp113 __tmp115
jump __label65 equal showout false
set icon OUTPUT
label __label65
op idiv column index 8
op mod row index 8
op mul __tmp120 column BAR_SPACE
op add x OFFSET_X __tmp120
op mul __tmp122 row BAR_GAP
op add y OFFSET_Y __tmp122
op greaterThan __tmp124 minimum 66
op equal __tmp125 showout false
op land __tmp126 __tmp124 __tmp125
jump __label67 equal __tmp126 false
set icon TYPE
label __label67
draw color 255 255 255 255 0 0
jump __label69 equal e false
jump __label71 lessThanEq power 0
op add __tmp131 x 7
op add __tmp132 y 7
draw image __tmp131 __tmp132 icon 16 0 0
jump __label70 always 0 0
label __label71
draw color 255 80 80 255 0 0
op add __tmp133 y 3
draw rect x __tmp133 14 8 0 0
draw color 0 0 0 255 0 0
op add __tmp134 x 2
op add __tmp135 y 5
draw rect __tmp134 __tmp135 8 4 0 0
op add __tmp136 x 12
draw rect __tmp136 __tmp133 2 2 0 0
op add __tmp139 y 9
draw rect __tmp136 __tmp139 2 2 0 0
draw color 255 80 80 255 0 0
op add __tmp140 x 4
op add __tmp141 y 6
draw rect __tmp140 __tmp141 2 2 0 0
jump __label70 always 0 0
label __label69
draw color 255 80 80 255 0 0
draw stroke 3 0 0 0 0 0
op add __tmp142 x 2
op add __tmp143 y 12
op add __tmp144 x 12
op add __tmp145 y 2
draw line __tmp142 __tmp143 __tmp144 __tmp145 0 0
draw line __tmp142 __tmp145 __tmp144 __tmp143 0 0
draw color 0 0 0 255 0 0
op sub __tmp150 x 1
op sub __tmp151 y 1
draw lineRect __tmp150 __tmp151 16 16 0 0
draw stroke 2 0 0 0 0 0
label __label70
op add x x 16
op equal __tmp153 power 0
op equal __tmp154 e 0
op land __tmp155 __tmp153 __tmp154
jump __label73 equal __tmp155 false
set red 255
set green 0
set blue 0
jump __label74 always 0 0
label __label73
jump __label75 equal showout false
set red 255
set green 0
set blue 255
set minimum out
jump __label76 always 0 0
label __label75
set red 255
op greaterThanEq __tmp159 boost EXPECTED_BOOST
op land __tmp160 __tmp124 __tmp159
jump __label78 equal __tmp160 false
set red 0
label __label78
set green 0
jump __label80 lessThanEq minimum 33
set green 255
label __label80
set blue 0
label __label76
label __label74
jump __label81 lessThanEq boost EXPECTED_BOOST
op max red 192 red
op max green 192 green
op max blue 192 blue
set boost EXPECTED_BOOST
label __label81
op mul __tmp169 BAR_LENGTH boost
op idiv length __tmp169 EXPECTED_BOOST
draw color red green blue 128 0 0
op mul __tmp171 minimum length
op idiv __tmp172 __tmp171 100
draw rect x y __tmp172 BAR_WIDTH 0 0
draw color red green blue 255 0 0
draw lineRect x y length BAR_WIDTH 0 0
op add index index 1
label __label57
op add n n 1
jump __label84 lessThan n __tmp89
label __label54
drawflush DISPLAY
op sub __tmp174 @time start
op floor __tmp175 __tmp174 0
print "\nDraw time: "
print __tmp175
print " ms"
printflush MESSAGE
sensor __tmp86 SWITCH @enabled
jump __label85 equal __tmp86 0
label __label51
end
