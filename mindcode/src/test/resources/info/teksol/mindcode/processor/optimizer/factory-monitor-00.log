   532 instructions before optimizations.
    56 instructions eliminated by Temp Variables Elimination.
    43 instructions eliminated by Dead Code Elimination (5 iterations).
    20 instructions eliminated by Jump Optimization (4 iterations).
    15 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     8 instructions eliminated by If Expression Optimization (3 iterations).
    16 instructions eliminated by Data Flow Optimization (3 passes, 12 iterations).
     4 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    11 instructions eliminated by Jump Straightening (2 passes, 4 iterations).
     1 instructions updated by PropagateJumpTargets.
    10 instructions eliminated by Print Merging.
   357 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 627):
    Loop Optimization: replicate condition at line 14            cost   3, benefit       25.0, efficiency        8.3
  * Loop Optimization: replicate condition at line 160           cost   1, benefit       25.0, efficiency       25.0 (+1 instructions)

Pass 1: speed optimization selection (cost limit 626):
  * Loop Optimization: replicate condition at line 14            cost   3, benefit       25.0, efficiency        8.3 (+0 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-56 instructions):
 
    12 jump __label2 equal __tmp2 false
    13 print "Universal Factory Monitor"
    14 print "\n"
-    * set __tmp3 @links
-    * set n __tmp3
+   15 set n @links
+   16 noop
    17 label __label3
    18 op greaterThan __tmp4 n 0
    19 jump __label5 equal __tmp4 false
-    * op sub __tmp5 n 1
-    * set n __tmp5
-    * getlink __tmp6 n
-    * set block __tmp6
-    * sensor __tmp7 block @type
-    * set __ast0 __tmp7
+   20 op sub n n 1
+   21 noop
+   22 getlink block n
+   23 noop
+   24 sensor __ast0 block @type
+   25 noop
    26 jump __label8 equal __ast0 @message
    27 jump __label7 always
    28 label __label8
 
    49 jump __label13 always
    50 label __label14
    51 set TYPE @silicon-factory
-    * sensor __tmp9 block @itemCapacity
-    * set CAPACITY __tmp9
+   52 sensor CAPACITY block @itemCapacity
+   53 noop
    54 set RES1 @sand
    55 set RES2 @coal
    56 set RES3 @itemCapacity
-    * op div __tmp10 100 CAPACITY
-    * set MUL3 __tmp10
+   57 op div MUL3 100 CAPACITY
+   58 noop
    59 set MUL2 MUL3
    60 set MUL1 MUL2
    61 set OUTPUT @silicon
 
    66 jump __label15 always
    67 label __label16
    68 set TYPE @silicon-crucible
-    * sensor __tmp11 block @itemCapacity
-    * set CAPACITY __tmp11
+   69 sensor CAPACITY block @itemCapacity
+   70 noop
    71 set RES1 @sand
    72 set RES2 @coal
    73 set RES3 @pyratite
-    * op div __tmp12 100 CAPACITY
-    * set MUL3 __tmp12
+   74 op div MUL3 100 CAPACITY
+   75 noop
    76 set MUL2 MUL3
    77 set MUL1 MUL2
    78 set OUTPUT @silicon
 
    83 jump __label17 always
    84 label __label18
    85 set TYPE @kiln
-    * sensor __tmp13 block @itemCapacity
-    * set CAPACITY __tmp13
+   86 sensor CAPACITY block @itemCapacity
+   87 noop
    88 set RES1 @sand
    89 set RES2 @lead
    90 set RES3 @itemCapacity
-    * op div __tmp14 100 CAPACITY
-    * set MUL3 __tmp14
+   91 op div MUL3 100 CAPACITY
+   92 noop
    93 set MUL2 MUL3
    94 set MUL1 MUL2
    95 set OUTPUT @metaglass
 
   100 jump __label19 always
   101 label __label20
   102 set TYPE @phase-weaver
-    * sensor __tmp15 block @itemCapacity
-    * set CAPACITY __tmp15
+  103 sensor CAPACITY block @itemCapacity
+  104 noop
   105 set RES1 @sand
   106 set RES2 @thorium
   107 set RES3 @itemCapacity
-    * op div __tmp16 100 CAPACITY
-    * set MUL3 __tmp16
+  108 op div MUL3 100 CAPACITY
+  109 noop
   110 set MUL2 MUL3
   111 set MUL1 MUL2
   112 set OUTPUT @phase-fabric
 
   117 jump __label21 always
   118 label __label22
   119 set TYPE @pyratite-mixer
-    * sensor __tmp17 block @itemCapacity
-    * set CAPACITY __tmp17
+  120 sensor CAPACITY block @itemCapacity
+  121 noop
   122 set RES1 @sand
   123 set RES2 @coal
   124 set RES3 @lead
-    * op div __tmp18 100 CAPACITY
-    * set MUL3 __tmp18
+  125 op div MUL3 100 CAPACITY
+  126 noop
   127 set MUL2 MUL3
   128 set MUL1 MUL2
   129 set OUTPUT @pyratite
 
   134 jump __label23 always
   135 label __label24
   136 set TYPE @blast-mixer
-    * sensor __tmp19 block @itemCapacity
-    * set CAPACITY __tmp19
+  137 sensor CAPACITY block @itemCapacity
+  138 noop
   139 set RES1 @pyratite
   140 set RES2 @spore-pod
   141 set RES3 @itemCapacity
-    * op div __tmp20 100 CAPACITY
-    * set MUL3 __tmp20
+  142 op div MUL3 100 CAPACITY
+  143 noop
   144 set MUL2 MUL3
   145 set MUL1 MUL2
   146 set OUTPUT @blast-compound
 
   151 jump __label25 always
   152 label __label26
   153 set TYPE @plastanium-compressor
-    * sensor __tmp21 block @itemCapacity
-    * set CAPACITY __tmp21
+  154 sensor CAPACITY block @itemCapacity
+  155 noop
   156 set RES1 @titanium
   157 set RES2 @oil
   158 set RES3 @itemCapacity
-    * op div __tmp22 100 CAPACITY
-    * set MUL3 __tmp22
+  159 op div MUL3 100 CAPACITY
+  160 noop
   161 set MUL1 MUL3
   162 sensor __tmp23 block @liquidCapacity
-    * op div __tmp24 250 __tmp23
-    * set MUL2 __tmp24
+  163 op div MUL2 250 __tmp23
+  164 noop
   165 set OUTPUT @plastanium
   166 set __tmp8 OUTPUT
   167 jump __label6 always
 
   227 set clx 0
   228 set crx clx
   229 op add __tmp32 OFFSET_X BAR_SPACE
-    * op sub __tmp33 __tmp32 2
-    * set clw __tmp33
+  230 op sub clw __tmp32 2
+  231 noop
   232 set crw clw
   233 op equal __tmp34 FROM_INDEX 0
   234 jump __label31 equal __tmp34 false
 
   236 jump __label32 always
   237 label __label31
   238 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp37 OFFSET_Y __tmp36
-    * set __tmp35 __tmp37
+  239 op add __tmp35 OFFSET_Y __tmp36
+  240 noop
   241 label __label32
   242 set cly __tmp35
   243 set cry cly
   244 op lessThan __tmp38 TO_INDEX 8
   245 jump __label33 equal __tmp38 false
   246 op mul __tmp40 TO_INDEX BAR_GAP
-    * op add __tmp41 OFFSET_Y __tmp40
-    * set __tmp39 __tmp41
+  247 op add __tmp39 OFFSET_Y __tmp40
+  248 noop
   249 jump __label34 always
   250 label __label33
   251 set __tmp39 176
   252 label __label34
-    * op sub __tmp42 __tmp39 cly
-    * set clh __tmp42
+  253 op sub clh __tmp39 cly
+  254 noop
   255 set crh clh
   256 set __tmp31 crh
   257 jump __label30 always
 
   265 op greaterThanEq __tmp43 FROM_INDEX 8
   266 jump __label35 equal __tmp43 false
   267 op add __tmp45 OFFSET_X BAR_SPACE
-    * op sub __tmp46 __tmp45 2
-    * set crx __tmp46
+  268 op sub crx __tmp45 2
+  269 noop
   270 op add __tmp47 OFFSET_X BAR_SPACE
   271 op sub __tmp48 176 __tmp47
-    * op add __tmp49 __tmp48 1
-    * set crw __tmp49
+  272 op add crw __tmp48 1
+  273 noop
   274 op mod __tmp50 FROM_INDEX 8
   275 op equal __tmp51 __tmp50 0
   276 jump __label37 equal __tmp51 false
 
   279 label __label37
   280 op mod __tmp53 FROM_INDEX 8
   281 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp55 OFFSET_Y __tmp54
-    * set __tmp52 __tmp55
+  282 op add __tmp52 OFFSET_Y __tmp54
+  283 noop
   284 label __label38
   285 set cry __tmp52
   286 op lessThan __tmp56 TO_INDEX 16
   287 jump __label39 equal __tmp56 false
   288 op mod __tmp58 TO_INDEX 8
   289 op mul __tmp59 __tmp58 BAR_GAP
-    * op add __tmp60 OFFSET_Y __tmp59
-    * set __tmp57 __tmp60
+  290 op add __tmp57 OFFSET_Y __tmp59
+  291 noop
   292 jump __label40 always
   293 label __label39
   294 set __tmp57 176
   295 label __label40
-    * op sub __tmp61 __tmp57 cry
-    * set crh __tmp61
+  296 op sub crh __tmp57 cry
+  297 noop
   298 set clx crx
   299 set clw crw
   300 set cly cry
 
   304 label __label35
   305 set clx 0
   306 op add __tmp62 OFFSET_X BAR_SPACE
-    * op sub __tmp63 __tmp62 2
-    * set clw __tmp63
+  307 op sub clw __tmp62 2
+  308 noop
   309 op equal __tmp64 FROM_INDEX 0
   310 jump __label41 equal __tmp64 false
   311 set __tmp65 0
   312 jump __label42 always
   313 label __label41
   314 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp67 OFFSET_Y __tmp66
-    * set __tmp65 __tmp67
+  315 op add __tmp65 OFFSET_Y __tmp66
+  316 noop
   317 label __label42
   318 set cly __tmp65
   319 op lessThan __tmp68 TO_INDEX 8
   320 jump __label43 equal __tmp68 false
   321 op mul __tmp70 TO_INDEX BAR_GAP
-    * op add __tmp71 OFFSET_Y __tmp70
-    * set __tmp69 __tmp71
+  322 op add __tmp69 OFFSET_Y __tmp70
+  323 noop
   324 jump __label44 always
   325 label __label43
   326 set __tmp69 176
   327 label __label44
-    * op sub __tmp72 __tmp69 cly
-    * set clh __tmp72
+  328 op sub clh __tmp69 cly
+  329 noop
   330 op greaterThanEq __tmp73 TO_INDEX 8
   331 jump __label45 equal __tmp73 false
   332 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub __tmp76 __tmp75 2
-    * set crx __tmp76
+  333 op sub crx __tmp75 2
+  334 noop
   335 op add __tmp77 OFFSET_X BAR_SPACE
   336 op sub __tmp78 176 __tmp77
-    * op add __tmp79 __tmp78 1
-    * set crw __tmp79
+  337 op add crw __tmp78 1
+  338 noop
   339 set cry 0
   340 op lessThan __tmp80 TO_INDEX 16
   341 jump __label47 equal __tmp80 false
   342 op mod __tmp82 TO_INDEX 8
   343 op mul __tmp83 __tmp82 BAR_GAP
-    * op add __tmp84 OFFSET_Y __tmp83
-    * set __tmp81 __tmp84
+  344 op add __tmp81 OFFSET_Y __tmp83
+  345 noop
   346 jump __label48 always
   347 label __label47
   348 set __tmp81 176
   349 label __label48
-    * op sub __tmp85 __tmp81 cry
-    * set crh __tmp85
+  350 op sub crh __tmp81 cry
+  351 noop
   352 set __tmp74 crh
   353 jump __label46 always
   354 label __label45
 
   367 sensor __tmp86 SWITCH @enabled
   368 op equal __tmp87 __tmp86 0
   369 jump __label51 equal __tmp87 false
-    * set __tmp88 @time
-    * set start __tmp88
+  370 set start @time
+  371 noop
   372 print "Universal Factory Monitor"
   373 print "\n"
   374 print "Monitoring: "
 
   390 label __label55
   391 set __tmp91 null
   392 label __label56
-    * getlink __tmp92 n
-    * set factory __tmp92
+  393 getlink factory n
+  394 noop
   395 sensor __tmp93 factory @type
   396 op equal __tmp94 __tmp93 TYPE
   397 jump __label57 equal __tmp94 false
   398 set minimum 101
   399 sensor __tmp96 factory RES1
-    * op mul __tmp97 MUL1 __tmp96
-    * set r1 __tmp97
+  400 op mul r1 MUL1 __tmp96
+  401 noop
   402 sensor __tmp98 factory RES2
-    * op mul __tmp99 MUL2 __tmp98
-    * set r2 __tmp99
+  403 op mul r2 MUL2 __tmp98
+  404 noop
   405 sensor __tmp100 factory RES3
-    * op mul __tmp101 MUL3 __tmp100
-    * set r3 __tmp101
+  406 op mul r3 MUL3 __tmp100
+  407 noop
   408 sensor __tmp102 factory OUTPUT
-    * op mul __tmp103 MUL1 __tmp102
-    * set out __tmp103
-    * sensor __tmp104 factory @enabled
-    * set e __tmp104
-    * sensor __tmp105 factory @totalPower
-    * set power __tmp105
-    * sensor __tmp106 factory @timescale
-    * set boost __tmp106
+  409 op mul out MUL1 __tmp102
+  410 noop
+  411 sensor e factory @enabled
+  412 noop
+  413 sensor power factory @totalPower
+  414 noop
+  415 sensor boost factory @timescale
+  416 noop
   417 op lessThan __tmp107 r1 minimum
   418 jump __label59 equal __tmp107 false
   419 set minimum r1
 
   444 op greaterThan __tmp113 out LIM1
   445 op sub __tmp114 100 out
   446 op lessThan __tmp115 __tmp114 minimum
-    * op land __tmp116 __tmp113 __tmp115
-    * set showout __tmp116
+  447 op land showout __tmp113 __tmp115
+  448 noop
   449 jump __label65 equal showout false
   450 set icon OUTPUT
   451 set __tmp117 icon
 
   453 label __label65
   454 set __tmp117 null
   455 label __label66
-    * op idiv __tmp118 index 8
-    * set column __tmp118
-    * op mod __tmp119 index 8
-    * set row __tmp119
+  456 op idiv column index 8
+  457 noop
+  458 op mod row index 8
+  459 noop
   460 op mul __tmp120 column BAR_SPACE
-    * op add __tmp121 OFFSET_X __tmp120
-    * set x __tmp121
+  461 op add x OFFSET_X __tmp120
+  462 noop
   463 op mul __tmp122 row BAR_GAP
-    * op add __tmp123 OFFSET_Y __tmp122
-    * set y __tmp123
+  464 op add y OFFSET_Y __tmp122
+  465 noop
   466 op greaterThan __tmp124 minimum LIM2
   467 op equal __tmp125 showout false
   468 op land __tmp126 __tmp124 __tmp125
 
   524 draw stroke 2
   525 set __tmp128 null
   526 label __label70
-    * op add __tmp152 x 16
-    * set x __tmp152
+  527 op add x x 16
+  528 noop
   529 op equal __tmp153 power 0
   530 op equal __tmp154 e 0
   531 op land __tmp155 __tmp153 __tmp154
 
   569 label __label74
   570 op greaterThan __tmp164 boost EXPECTED_BOOST
   571 jump __label81 equal __tmp164 false
-    * op max __tmp166 192 red
-    * set red __tmp166
-    * op max __tmp167 192 green
-    * set green __tmp167
-    * op max __tmp168 192 blue
-    * set blue __tmp168
+  572 op max red 192 red
+  573 noop
+  574 op max green 192 green
+  575 noop
+  576 op max blue 192 blue
+  577 noop
   578 set boost EXPECTED_BOOST
   579 set __tmp165 boost
   580 jump __label82 always
 
   582 set __tmp165 null
   583 label __label82
   584 op mul __tmp169 BAR_LENGTH boost
-    * op idiv __tmp170 __tmp169 EXPECTED_BOOST
-    * set length __tmp170
+  585 op idiv length __tmp169 EXPECTED_BOOST
+  586 noop
   587 draw color red green blue 128
   588 op mul __tmp171 minimum length
   589 op idiv __tmp172 __tmp171 100
   590 draw rect x y __tmp172 BAR_WIDTH
   591 draw color red green blue 255
   592 draw lineRect x y length BAR_WIDTH
-    * op add __tmp173 index 1
-    * set index __tmp173
+  593 op add index index 1
+  594 noop
   595 set __tmp95 index
   596 jump __label58 always
   597 label __label57

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-35 instructions):
 
    27 jump __label7 always
    28 label __label8
    29 set MESSAGE block
-    * set __tmp8 MESSAGE
+   30 noop
    31 jump __label6 always
    32 label __label7
    33 jump __label10 equal __ast0 @switch
    34 jump __label9 always
    35 label __label10
    36 set SWITCH block
-    * set __tmp8 SWITCH
+   37 noop
    38 jump __label6 always
    39 label __label9
    40 jump __label12 equal __ast0 @logic-display
 
    42 jump __label11 always
    43 label __label12
    44 set DISPLAY block
-    * set __tmp8 DISPLAY
+   45 noop
    46 jump __label6 always
    47 label __label11
    48 jump __label14 equal __ast0 @silicon-factory
 
    59 set MUL2 MUL3
    60 set MUL1 MUL2
    61 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
+   62 noop
    63 jump __label6 always
    64 label __label13
    65 jump __label16 equal __ast0 @silicon-crucible
 
    76 set MUL2 MUL3
    77 set MUL1 MUL2
    78 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
+   79 noop
    80 jump __label6 always
    81 label __label15
    82 jump __label18 equal __ast0 @kiln
 
    93 set MUL2 MUL3
    94 set MUL1 MUL2
    95 set OUTPUT @metaglass
-    * set __tmp8 OUTPUT
+   96 noop
    97 jump __label6 always
    98 label __label17
    99 jump __label20 equal __ast0 @phase-weaver
 
   110 set MUL2 MUL3
   111 set MUL1 MUL2
   112 set OUTPUT @phase-fabric
-    * set __tmp8 OUTPUT
+  113 noop
   114 jump __label6 always
   115 label __label19
   116 jump __label22 equal __ast0 @pyratite-mixer
 
   127 set MUL2 MUL3
   128 set MUL1 MUL2
   129 set OUTPUT @pyratite
-    * set __tmp8 OUTPUT
+  130 noop
   131 jump __label6 always
   132 label __label21
   133 jump __label24 equal __ast0 @blast-mixer
 
   144 set MUL2 MUL3
   145 set MUL1 MUL2
   146 set OUTPUT @blast-compound
-    * set __tmp8 OUTPUT
+  147 noop
   148 jump __label6 always
   149 label __label23
   150 jump __label26 equal __ast0 @plastanium-compressor
 
   163 op div MUL2 250 __tmp23
   164 noop
   165 set OUTPUT @plastanium
-    * set __tmp8 OUTPUT
+  166 noop
   167 jump __label6 always
   168 label __label25
   169 print "\n  "
   170 print block
   171 print " not supported"
-    * set __tmp8 " not supported"
+  172 noop
   173 label __label6
   174 label __label4
   175 jump __label3 always
 
   206 op or __tmp27 __tmp25 __tmp26
   207 jump __label27 equal __tmp27 false
   208 print "No block to monitor or display."
-    * set __tmp28 "No block to monitor or display."
+  209 noop
   210 jump __label28 always
   211 label __label27
-    * set __tmp28 null
+  212 noop
   213 label __label28
   214 printflush MESSAGE
   215 label __label1
 
   253 op sub clh __tmp39 cly
   254 noop
   255 set crh clh
-    * set __tmp31 crh
+  256 noop
   257 jump __label30 always
   258 label __label29
   259 set OFFSET_X 5
 
   360 label __label46
   361 set __tmp44 __tmp74
   362 label __label36
-    * set __tmp31 __tmp44
+  363 noop
   364 label __label30
   365 control enabled SWITCH 0
   366 label __label49
 
   385 op greaterThanEq __tmp90 index TO_INDEX
   386 jump __label55 equal __tmp90 false
   387 jump __label54 always
-    * set __tmp91 null
+  388 noop
   389 jump __label56 always
   390 label __label55
-    * set __tmp91 null
+  391 noop
   392 label __label56
   393 getlink factory n
   394 noop
 
   418 jump __label59 equal __tmp107 false
   419 set minimum r1
   420 set icon RES1
-    * set __tmp108 icon
+  421 noop
   422 jump __label60 always
   423 label __label59
-    * set __tmp108 null
+  424 noop
   425 label __label60
   426 op lessThan __tmp109 r2 minimum
   427 jump __label61 equal __tmp109 false
   428 set minimum r2
   429 set icon RES2
-    * set __tmp110 icon
+  430 noop
   431 jump __label62 always
   432 label __label61
-    * set __tmp110 null
+  433 noop
   434 label __label62
   435 op lessThan __tmp111 r3 minimum
   436 jump __label63 equal __tmp111 false
   437 set minimum r3
   438 set icon RES3
-    * set __tmp112 icon
+  439 noop
   440 jump __label64 always
   441 label __label63
-    * set __tmp112 null
+  442 noop
   443 label __label64
   444 op greaterThan __tmp113 out LIM1
   445 op sub __tmp114 100 out
 
   448 noop
   449 jump __label65 equal showout false
   450 set icon OUTPUT
-    * set __tmp117 icon
+  451 noop
   452 jump __label66 always
   453 label __label65
-    * set __tmp117 null
+  454 noop
   455 label __label66
   456 op idiv column index 8
   457 noop
 
   468 op land __tmp126 __tmp124 __tmp125
   469 jump __label67 equal __tmp126 false
   470 set icon TYPE
-    * set __tmp127 icon
+  471 noop
   472 jump __label68 always
   473 label __label67
-    * set __tmp127 null
+  474 noop
   475 label __label68
   476 draw color 255 255 255 255
   477 jump __label69 equal e false
 
   502 draw rect __tmp140 __tmp141 2 2
   503 set __tmp130 null
   504 label __label72
-    * set __tmp128 __tmp130
+  505 noop
   506 jump __label70 always
   507 label __label69
   508 draw color 255 80 80 255
 
   522 op sub __tmp151 y 1
   523 draw lineRect __tmp150 __tmp151 16 16
   524 draw stroke 2
-    * set __tmp128 null
+  525 noop
   526 label __label70
   527 op add x x 16
   528 noop
 
   533 set red 255
   534 set green 0
   535 set blue 0
-    * set __tmp156 blue
+  536 noop
   537 jump __label74 always
   538 label __label73
   539 jump __label75 equal showout false
 
   565 set blue 0
   566 set __tmp157 blue
   567 label __label76
-    * set __tmp156 __tmp157
+  568 noop
   569 label __label74
   570 op greaterThan __tmp164 boost EXPECTED_BOOST
   571 jump __label81 equal __tmp164 false
 
   576 op max blue 192 blue
   577 noop
   578 set boost EXPECTED_BOOST
-    * set __tmp165 boost
+  579 noop
   580 jump __label82 always
   581 label __label81
-    * set __tmp165 null
+  582 noop
   583 label __label82
   584 op mul __tmp169 BAR_LENGTH boost
   585 op idiv length __tmp169 EXPECTED_BOOST
 
   592 draw lineRect x y length BAR_WIDTH
   593 op add index index 1
   594 noop
-    * set __tmp95 index
+  595 noop
   596 jump __label58 always
   597 label __label57
-    * set __tmp95 null
+  598 noop
   599 label __label58
   600 label __label53
   601 op add n n 1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-6 instructions):
 
   299 set clw crw
   300 set cly cry
   301 set clh crh
-    * set __tmp44 clh
+  302 noop
   303 jump __label36 always
   304 label __label35
   305 set clx 0
 
   358 set crh clh
   359 set __tmp74 crh
   360 label __label46
-    * set __tmp44 __tmp74
+  361 noop
   362 label __label36
   363 noop
   364 label __label30
 
   480 op add __tmp131 x 7
   481 op add __tmp132 y 7
   482 draw image __tmp131 __tmp132 icon 16 0
-    * set __tmp130 null
+  483 noop
   484 jump __label72 always
   485 label __label71
   486 draw color 255 80 80 255
 
   500 op add __tmp140 x 4
   501 op add __tmp141 y 6
   502 draw rect __tmp140 __tmp141 2 2
-    * set __tmp130 null
+  503 noop
   504 label __label72
   505 noop
   506 jump __label70 always
 
   541 set green 0
   542 set blue 255
   543 set minimum out
-    * set __tmp157 minimum
+  544 noop
   545 jump __label76 always
   546 label __label75
   547 op greaterThan __tmp158 minimum LIM2
 
   563 label __label80
   564 set green __tmp163
   565 set blue 0
-    * set __tmp157 blue
+  566 noop
   567 label __label76
   568 noop
   569 label __label74

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   349 label __label48
   350 op sub crh __tmp81 cry
   351 noop
-    * set __tmp74 crh
+  352 noop
   353 jump __label46 always
   354 label __label45
   355 set crx clx
   356 set crw clw
   357 set cry cly
   358 set crh clh
-    * set __tmp74 crh
+  359 noop
   360 label __label46
   361 noop
   362 label __label36

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-10 instructions):
 
    23 noop
    24 sensor __ast0 block @type
    25 noop
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   26 jump __label7 notEqual __ast0 @message
+   27 noop
    28 label __label8
    29 set MESSAGE block
    30 noop
    31 jump __label6 always
    32 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   33 jump __label9 notEqual __ast0 @switch
+   34 noop
    35 label __label10
    36 set SWITCH block
    37 noop
    38 jump __label6 always
    39 label __label9
    40 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   41 jump __label11 notEqual __ast0 @large-logic-display
+   42 noop
    43 label __label12
    44 set DISPLAY block
    45 noop
    46 jump __label6 always
    47 label __label11
-    * jump __label14 equal __ast0 @silicon-factory
-    * jump __label13 always
+   48 jump __label13 notEqual __ast0 @silicon-factory
+   49 noop
    50 label __label14
    51 set TYPE @silicon-factory
    52 sensor CAPACITY block @itemCapacity
 
    62 noop
    63 jump __label6 always
    64 label __label13
-    * jump __label16 equal __ast0 @silicon-crucible
-    * jump __label15 always
+   65 jump __label15 notEqual __ast0 @silicon-crucible
+   66 noop
    67 label __label16
    68 set TYPE @silicon-crucible
    69 sensor CAPACITY block @itemCapacity
 
    79 noop
    80 jump __label6 always
    81 label __label15
-    * jump __label18 equal __ast0 @kiln
-    * jump __label17 always
+   82 jump __label17 notEqual __ast0 @kiln
+   83 noop
    84 label __label18
    85 set TYPE @kiln
    86 sensor CAPACITY block @itemCapacity
 
    96 noop
    97 jump __label6 always
    98 label __label17
-    * jump __label20 equal __ast0 @phase-weaver
-    * jump __label19 always
+   99 jump __label19 notEqual __ast0 @phase-weaver
+  100 noop
   101 label __label20
   102 set TYPE @phase-weaver
   103 sensor CAPACITY block @itemCapacity
 
   113 noop
   114 jump __label6 always
   115 label __label19
-    * jump __label22 equal __ast0 @pyratite-mixer
-    * jump __label21 always
+  116 jump __label21 notEqual __ast0 @pyratite-mixer
+  117 noop
   118 label __label22
   119 set TYPE @pyratite-mixer
   120 sensor CAPACITY block @itemCapacity
 
   130 noop
   131 jump __label6 always
   132 label __label21
-    * jump __label24 equal __ast0 @blast-mixer
-    * jump __label23 always
+  133 jump __label23 notEqual __ast0 @blast-mixer
+  134 noop
   135 label __label24
   136 set TYPE @blast-mixer
   137 sensor CAPACITY block @itemCapacity
 
   147 noop
   148 jump __label6 always
   149 label __label23
-    * jump __label26 equal __ast0 @plastanium-compressor
-    * jump __label25 always
+  150 jump __label25 notEqual __ast0 @plastanium-compressor
+  151 noop
   152 label __label26
   153 set TYPE @plastanium-compressor
   154 sensor CAPACITY block @itemCapacity

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-20 instructions):
 
    15 set n @links
    16 noop
    17 label __label3
-    * op greaterThan __tmp4 n 0
-    * jump __label5 equal __tmp4 false
+   18 jump __label5 lessThanEq n 0
    19 op sub n n 1
    20 noop
    21 getlink block n
 
   215 jump __label0 always
   216 label __label2
   217 sensor __tmp29 DISPLAY @type
-    * op equal __tmp30 __tmp29 @logic-display
-    * jump __label29 equal __tmp30 false
+  218 jump __label29 notEqual __tmp29 @logic-display
   219 set OFFSET_X 2
   220 set OFFSET_Y 2
   221 set BAR_WIDTH 14
 
   228 op sub clw __tmp32 2
   229 noop
   230 set crw clw
-    * op equal __tmp34 FROM_INDEX 0
-    * jump __label31 equal __tmp34 false
+  231 jump __label31 notEqual FROM_INDEX 0
   232 set __tmp35 0
   233 jump __label32 always
   234 label __label31
 
   238 label __label32
   239 set cly __tmp35
   240 set cry cly
-    * op lessThan __tmp38 TO_INDEX 8
-    * jump __label33 equal __tmp38 false
+  241 jump __label33 greaterThanEq TO_INDEX 8
   242 op mul __tmp40 TO_INDEX BAR_GAP
   243 op add __tmp39 OFFSET_Y __tmp40
   244 noop
 
   258 set BAR_LENGTH 61
   259 set BAR_SPACE 88
   260 set BAR_GAP 22
-    * op greaterThanEq __tmp43 FROM_INDEX 8
-    * jump __label35 equal __tmp43 false
+  261 jump __label35 lessThan FROM_INDEX 8
   262 op add __tmp45 OFFSET_X BAR_SPACE
   263 op sub crx __tmp45 2
   264 noop
 
   267 op add crw __tmp48 1
   268 noop
   269 op mod __tmp50 FROM_INDEX 8
-    * op equal __tmp51 __tmp50 0
-    * jump __label37 equal __tmp51 false
+  270 jump __label37 notEqual __tmp50 0
   271 set __tmp52 0
   272 jump __label38 always
   273 label __label37
 
   277 noop
   278 label __label38
   279 set cry __tmp52
-    * op lessThan __tmp56 TO_INDEX 16
-    * jump __label39 equal __tmp56 false
+  280 jump __label39 greaterThanEq TO_INDEX 16
   281 op mod __tmp58 TO_INDEX 8
   282 op mul __tmp59 __tmp58 BAR_GAP
   283 op add __tmp57 OFFSET_Y __tmp59
 
   299 op add __tmp62 OFFSET_X BAR_SPACE
   300 op sub clw __tmp62 2
   301 noop
-    * op equal __tmp64 FROM_INDEX 0
-    * jump __label41 equal __tmp64 false
+  302 jump __label41 notEqual FROM_INDEX 0
   303 set __tmp65 0
   304 jump __label42 always
   305 label __label41
 
   308 noop
   309 label __label42
   310 set cly __tmp65
-    * op lessThan __tmp68 TO_INDEX 8
-    * jump __label43 equal __tmp68 false
+  311 jump __label43 greaterThanEq TO_INDEX 8
   312 op mul __tmp70 TO_INDEX BAR_GAP
   313 op add __tmp69 OFFSET_Y __tmp70
   314 noop
 
   318 label __label44
   319 op sub clh __tmp69 cly
   320 noop
-    * op greaterThanEq __tmp73 TO_INDEX 8
-    * jump __label45 equal __tmp73 false
+  321 jump __label45 lessThan TO_INDEX 8
   322 op add __tmp75 OFFSET_X BAR_SPACE
   323 op sub crx __tmp75 2
   324 noop
 
   327 op add crw __tmp78 1
   328 noop
   329 set cry 0
-    * op lessThan __tmp80 TO_INDEX 16
-    * jump __label47 equal __tmp80 false
+  330 jump __label47 greaterThanEq TO_INDEX 16
   331 op mod __tmp82 TO_INDEX 8
   332 op mul __tmp83 __tmp82 BAR_GAP
   333 op add __tmp81 OFFSET_Y __tmp83
 
   354 control enabled SWITCH 0
   355 label __label49
   356 sensor __tmp86 SWITCH @enabled
-    * op equal __tmp87 __tmp86 0
-    * jump __label51 equal __tmp87 false
+  357 jump __label51 notEqual __tmp86 0
   358 set start @time
   359 noop
   360 print "Universal Factory Monitor"
 
   370 set n 0
   371 label __label52
   372 jump __label54 greaterThanEq n __tmp89
-    * op greaterThanEq __tmp90 index TO_INDEX
-    * jump __label55 equal __tmp90 false
+  373 jump __label55 lessThan index TO_INDEX
   374 jump __label54 always
   375 noop
   376 jump __label56 always
 
   380 getlink factory n
   381 noop
   382 sensor __tmp93 factory @type
-    * op equal __tmp94 __tmp93 TYPE
-    * jump __label57 equal __tmp94 false
+  383 jump __label57 notEqual __tmp93 TYPE
   384 set minimum 101
   385 sensor __tmp96 factory RES1
   386 op mul r1 MUL1 __tmp96
 
   400 noop
   401 sensor boost factory @timescale
   402 noop
-    * op lessThan __tmp107 r1 minimum
-    * jump __label59 equal __tmp107 false
+  403 jump __label59 greaterThanEq r1 minimum
   404 set minimum r1
   405 set icon RES1
   406 noop
 
   408 label __label59
   409 noop
   410 label __label60
-    * op lessThan __tmp109 r2 minimum
-    * jump __label61 equal __tmp109 false
+  411 jump __label61 greaterThanEq r2 minimum
   412 set minimum r2
   413 set icon RES2
   414 noop
 
   416 label __label61
   417 noop
   418 label __label62
-    * op lessThan __tmp111 r3 minimum
-    * jump __label63 equal __tmp111 false
+  419 jump __label63 greaterThanEq r3 minimum
   420 set minimum r3
   421 set icon RES3
   422 noop
 
   458 label __label68
   459 draw color 255 255 255 255
   460 jump __label69 equal e false
-    * op greaterThan __tmp129 power 0
-    * jump __label71 equal __tmp129 false
+  461 jump __label71 lessThanEq power 0
   462 op add __tmp131 x 7
   463 op add __tmp132 y 7
   464 draw image __tmp131 __tmp132 icon 16 0
 
   536 set __tmp161 255
   537 label __label78
   538 set red __tmp161
-    * op greaterThan __tmp162 minimum LIM1
-    * jump __label79 equal __tmp162 false
+  539 jump __label79 lessThanEq minimum LIM1
   540 set __tmp163 255
   541 jump __label80 always
   542 label __label79
 
   548 label __label76
   549 noop
   550 label __label74
-    * op greaterThan __tmp164 boost EXPECTED_BOOST
-    * jump __label81 equal __tmp164 false
+  551 jump __label81 lessThanEq boost EXPECTED_BOOST
   552 op max red 192 red
   553 noop
   554 op max green 192 green

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
   206 jump __label27 equal __tmp27 false
   207 print "No block to monitor or display."
   208 noop
-    * jump __label28 always
+  209 noop
   210 label __label27
   211 noop
   212 label __label28
 
   373 jump __label55 lessThan index TO_INDEX
   374 jump __label54 always
   375 noop
-    * jump __label56 always
+  376 noop
   377 label __label55
   378 noop
   379 label __label56
 
   404 set minimum r1
   405 set icon RES1
   406 noop
-    * jump __label60 always
+  407 noop
   408 label __label59
   409 noop
   410 label __label60
 
   412 set minimum r2
   413 set icon RES2
   414 noop
-    * jump __label62 always
+  415 noop
   416 label __label61
   417 noop
   418 label __label62
 
   420 set minimum r3
   421 set icon RES3
   422 noop
-    * jump __label64 always
+  423 noop
   424 label __label63
   425 noop
   426 label __label64
 
   432 jump __label65 equal showout false
   433 set icon OUTPUT
   434 noop
-    * jump __label66 always
+  435 noop
   436 label __label65
   437 noop
   438 label __label66
 
   452 jump __label67 equal __tmp126 false
   453 set icon TYPE
   454 noop
-    * jump __label68 always
+  455 noop
   456 label __label67
   457 noop
   458 label __label68
 
   557 noop
   558 set boost EXPECTED_BOOST
   559 noop
-    * jump __label82 always
+  560 noop
   561 label __label81
   562 noop
   563 label __label82
 
   573 op add index index 1
   574 noop
   575 noop
-    * jump __label58 always
+  576 noop
   577 label __label57
   578 noop
   579 label __label58

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-8 instructions):
 
   228 op sub clw __tmp32 2
   229 noop
   230 set crw clw
-    * jump __label31 notEqual FROM_INDEX 0
-    * set __tmp35 0
-    * jump __label32 always
+  231 set cly 0
+  232 jump __label32 equal FROM_INDEX 0
   233 label __label31
   234 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp36
+  235 op add cly OFFSET_Y __tmp36
   236 noop
   237 label __label32
-    * set cly __tmp35
   238 set cry cly
-    * jump __label33 greaterThanEq TO_INDEX 8
+  239 set __tmp39 176
+  240 jump __label34 greaterThanEq TO_INDEX 8
   241 op mul __tmp40 TO_INDEX BAR_GAP
   242 op add __tmp39 OFFSET_Y __tmp40
   243 noop
   244 jump __label34 always
-    * label __label33
-    * set __tmp39 176
   245 label __label34
   246 op sub clh __tmp39 cly
   247 noop
 
   263 op sub __tmp48 176 __tmp47
   264 op add crw __tmp48 1
   265 noop
+  266 set cry 0
   267 op mod __tmp50 FROM_INDEX 8
-    * jump __label37 notEqual __tmp50 0
-    * set __tmp52 0
-    * jump __label38 always
+  268 jump __label38 equal __tmp50 0
   269 label __label37
   270 op mod __tmp53 FROM_INDEX 8
   271 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp52 OFFSET_Y __tmp54
+  272 op add cry OFFSET_Y __tmp54
   273 noop
   274 label __label38
-    * set cry __tmp52
-    * jump __label39 greaterThanEq TO_INDEX 16
+  275 set __tmp57 176
+  276 jump __label40 greaterThanEq TO_INDEX 16
   277 op mod __tmp58 TO_INDEX 8
   278 op mul __tmp59 __tmp58 BAR_GAP
   279 op add __tmp57 OFFSET_Y __tmp59
   280 noop
   281 jump __label40 always
-    * label __label39
-    * set __tmp57 176
   282 label __label40
   283 op sub crh __tmp57 cry
   284 noop
 
   293 op add __tmp62 OFFSET_X BAR_SPACE
   294 op sub clw __tmp62 2
   295 noop
-    * jump __label41 notEqual FROM_INDEX 0
-    * set __tmp65 0
-    * jump __label42 always
+  296 set cly 0
+  297 jump __label42 equal FROM_INDEX 0
   298 label __label41
   299 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp65 OFFSET_Y __tmp66
+  300 op add cly OFFSET_Y __tmp66
   301 noop
   302 label __label42
-    * set cly __tmp65
-    * jump __label43 greaterThanEq TO_INDEX 8
+  303 set __tmp69 176
+  304 jump __label44 greaterThanEq TO_INDEX 8
   305 op mul __tmp70 TO_INDEX BAR_GAP
   306 op add __tmp69 OFFSET_Y __tmp70
   307 noop
   308 jump __label44 always
-    * label __label43
-    * set __tmp69 176
   309 label __label44
   310 op sub clh __tmp69 cly
   311 noop
 
   318 op add crw __tmp78 1
   319 noop
   320 set cry 0
-    * jump __label47 greaterThanEq TO_INDEX 16
+  321 set __tmp81 176
+  322 jump __label48 greaterThanEq TO_INDEX 16
   323 op mod __tmp82 TO_INDEX 8
   324 op mul __tmp83 __tmp82 BAR_GAP
   325 op add __tmp81 OFFSET_Y __tmp83
   326 noop
   327 jump __label48 always
-    * label __label47
-    * set __tmp81 176
   328 label __label48
   329 op sub crh __tmp81 cry
   330 noop
 
   516 noop
   517 jump __label76 always
   518 label __label75
+  519 set red 255
   520 op greaterThan __tmp158 minimum LIM2
   521 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   522 op land __tmp160 __tmp158 __tmp159
-    * jump __label77 equal __tmp160 false
-    * set __tmp161 0
+  523 jump __label78 equal __tmp160 false
+  524 set red 0
   525 jump __label78 always
-    * label __label77
-    * set __tmp161 255
   526 label __label78
-    * set red __tmp161
-    * jump __label79 lessThanEq minimum LIM1
-    * set __tmp163 255
+  527 set green 0
+  528 jump __label80 lessThanEq minimum LIM1
+  529 set green 255
   530 jump __label80 always
-    * label __label79
-    * set __tmp163 0
   531 label __label80
-    * set green __tmp163
   532 set blue 0
   533 noop
   534 label __label76

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   223 set BAR_SPACE 80
   224 set BAR_GAP 20
   225 set clx 0
-    * set crx clx
+  226 set crx 0
   227 op add __tmp32 OFFSET_X BAR_SPACE
   228 op sub clw __tmp32 2
   229 noop
 
   260 op sub crx __tmp45 2
   261 noop
   262 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp47
-    * op add crw __tmp48 1
+  263 op sub __tmp48 176 __tmp45
+  264 op sub crw 177 __tmp47
   265 noop
   266 set cry 0
   267 op mod __tmp50 FROM_INDEX 8
   268 jump __label38 equal __tmp50 0
   269 label __label37
   270 op mod __tmp53 FROM_INDEX 8
-    * op mul __tmp54 __tmp53 BAR_GAP
+  271 op mul __tmp54 __tmp50 BAR_GAP
   272 op add cry OFFSET_Y __tmp54
   273 noop
   274 label __label38
 
   311 noop
   312 jump __label45 lessThan TO_INDEX 8
   313 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub crx __tmp75 2
+  314 op sub crx __tmp62 2
   315 noop
   316 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp77
-    * op add crw __tmp78 1
+  317 op sub __tmp78 176 __tmp62
+  318 op sub crw 177 __tmp77
   319 noop
   320 set cry 0
   321 set __tmp81 176
 
   326 noop
   327 jump __label48 always
   328 label __label48
-    * op sub crh __tmp81 cry
+  329 op sub crh __tmp81 0
   330 noop
   331 noop
   332 jump __label46 always
   333 label __label45
-    * set crx clx
+  334 set crx 0
   335 set crw clw
   336 set cry cly
   337 set crh clh
 
   390 noop
   391 sensor boost factory @timescale
   392 noop
-    * jump __label59 greaterThanEq r1 minimum
+  393 jump __label59 greaterThanEq r1 101
   394 set minimum r1
   395 set icon RES1
   396 noop
 
   464 draw rect __tmp134 __tmp135 8 4
   465 op add __tmp136 x 12
   466 op add __tmp137 y 3
-    * draw rect __tmp136 __tmp137 2 2
+  467 draw rect __tmp136 __tmp133 2 2
   468 op add __tmp138 x 12
   469 op add __tmp139 y 9
-    * draw rect __tmp138 __tmp139 2 2
+  470 draw rect __tmp136 __tmp139 2 2
   471 draw color 255 80 80 255
   472 op add __tmp140 x 4
   473 op add __tmp141 y 6
 
   488 op add __tmp147 y 2
   489 op add __tmp148 x 12
   490 op add __tmp149 y 12
-    * draw line __tmp146 __tmp147 __tmp148 __tmp149
+  491 draw line __tmp142 __tmp145 __tmp144 __tmp143
   492 draw color 0 0 0 255
   493 op sub __tmp150 x 1
   494 op sub __tmp151 y 1
 
   519 set red 255
   520 op greaterThan __tmp158 minimum LIM2
   521 op greaterThanEq __tmp159 boost EXPECTED_BOOST
-    * op land __tmp160 __tmp158 __tmp159
+  522 op land __tmp160 __tmp124 __tmp159
   523 jump __label78 equal __tmp160 false
   524 set red 0
   525 jump __label78 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   260 op sub crx __tmp45 2
   261 noop
   262 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp45
-    * op sub crw 177 __tmp47
+  263 op sub crw 177 __tmp45
   264 noop
   265 set cry 0
   266 op mod __tmp50 FROM_INDEX 8
   267 jump __label38 equal __tmp50 0
   268 label __label37
-    * op mod __tmp53 FROM_INDEX 8
   269 op mul __tmp54 __tmp50 BAR_GAP
   270 op add cry OFFSET_Y __tmp54
   271 noop
 
   308 op sub clh __tmp69 cly
   309 noop
   310 jump __label45 lessThan TO_INDEX 8
-    * op add __tmp75 OFFSET_X BAR_SPACE
   311 op sub crx __tmp62 2
   312 noop
   313 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp62
-    * op sub crw 177 __tmp77
+  314 op sub crw 177 __tmp62
   315 noop
   316 set cry 0
   317 set __tmp81 176
 
   459 op add __tmp135 y 5
   460 draw rect __tmp134 __tmp135 8 4
   461 op add __tmp136 x 12
-    * op add __tmp137 y 3
   462 draw rect __tmp136 __tmp133 2 2
-    * op add __tmp138 x 12
   463 op add __tmp139 y 9
   464 draw rect __tmp136 __tmp139 2 2
   465 draw color 255 80 80 255
 
   478 op add __tmp144 x 12
   479 op add __tmp145 y 2
   480 draw line __tmp142 __tmp143 __tmp144 __tmp145
-    * op add __tmp146 x 2
-    * op add __tmp147 y 2
-    * op add __tmp148 x 12
-    * op add __tmp149 y 12
   481 draw line __tmp142 __tmp145 __tmp144 __tmp143
   482 draw color 0 0 0 255
   483 op sub __tmp150 x 1
 
   507 jump __label76 always
   508 label __label75
   509 set red 255
-    * op greaterThan __tmp158 minimum LIM2
   510 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   511 op land __tmp160 __tmp124 __tmp159
   512 jump __label78 equal __tmp160 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
   259 op add __tmp45 OFFSET_X BAR_SPACE
   260 op sub crx __tmp45 2
   261 noop
-    * op add __tmp47 OFFSET_X BAR_SPACE
   262 op sub crw 177 __tmp45
   263 noop
   264 set cry 0
 
   309 jump __label45 lessThan TO_INDEX 8
   310 op sub crx __tmp62 2
   311 noop
-    * op add __tmp77 OFFSET_X BAR_SPACE
   312 op sub crw 177 __tmp62
   313 noop
   314 set cry 0

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    16 noop
    17 label __label3
    18 jump __label5 lessThanEq n 0
+   19 label __label83
    20 op sub n n 1
    21 noop
    22 getlink block n
 
   172 noop
   173 label __label6
   174 label __label4
-    * jump __label3 always
+  175 jump __label83 greaterThan n 0
   176 label __label5
   177 print "Message: "
   178 print MESSAGE
 
   355 set n 0
   356 label __label52
   357 jump __label54 greaterThanEq n __tmp89
+  358 label __label84
   359 jump __label55 lessThan index TO_INDEX
   360 jump __label54 always
   361 noop
 
   554 label __label58
   555 label __label53
   556 op add n n 1
-    * jump __label52 always
+  557 jump __label84 lessThan n __tmp89
   558 label __label54
   559 drawflush DISPLAY
   560 op sub __tmp174 @time start

Modifications by Loop Optimization: replicate condition at line 160 (+1 instructions):
 
   340 label __label49
   341 sensor __tmp86 SWITCH @enabled
   342 jump __label51 notEqual __tmp86 0
+  343 label __label85
   344 set start @time
   345 noop
   346 print "Universal Factory Monitor"
 
   565 print " ms"
   566 printflush MESSAGE
   567 label __label50
-    * jump __label49 always
+  568 sensor __tmp86 SWITCH @enabled
+  569 jump __label85 equal __tmp86 0
   570 label __label51
   571 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   355 set __tmp89 @links
   356 set n 0
   357 label __label52
-    * jump __label54 greaterThanEq n __tmp89
+  358 jump __label54 greaterThanEq 0 __tmp89
   359 label __label84
   360 jump __label55 lessThan index TO_INDEX
   361 jump __label54 always

Modifications by Loop Optimization: replicate condition at line 14 (+3 instructions):
 
    10 op equal __tmp1 TYPE null
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
+   13 label __label86
    14 print "Universal Factory Monitor"
    15 print "\n"
    16 set n @links
 
   214 label __label28
   215 printflush MESSAGE
   216 label __label1
-    * jump __label0 always
+  217 op equal __tmp0 DISPLAY null
+  218 op equal __tmp1 TYPE null
+  219 op or __tmp2 __tmp0 __tmp1
+  220 jump __label86 notEqual __tmp2 false
   221 label __label2
   222 sensor __tmp29 DISPLAY @type
   223 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   216 label __label1
   217 op equal __tmp0 DISPLAY null
   218 op equal __tmp1 TYPE null
-    * op or __tmp2 __tmp0 __tmp1
+  219 op or __tmp2 __tmp25 __tmp26
   220 jump __label86 notEqual __tmp2 false
   221 label __label2
   222 sensor __tmp29 DISPLAY @type

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   214 label __label28
   215 printflush MESSAGE
   216 label __label1
-    * op equal __tmp0 DISPLAY null
-    * op equal __tmp1 TYPE null
   217 op or __tmp2 __tmp25 __tmp26
-    * jump __label86 notEqual __tmp2 false
+  218 jump __label86 notEqual __tmp27 false
   219 label __label2
   220 sensor __tmp29 DISPLAY @type
   221 jump __label29 notEqual __tmp29 @logic-display

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   214 label __label28
   215 printflush MESSAGE
   216 label __label1
-    * op or __tmp2 __tmp25 __tmp26
   217 jump __label86 notEqual __tmp27 false
   218 label __label2
   219 sensor __tmp29 DISPLAY @type

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   243 op mul __tmp40 TO_INDEX BAR_GAP
   244 op add __tmp39 OFFSET_Y __tmp40
   245 noop
-    * jump __label34 always
+  246 noop
   247 label __label34
   248 op sub clh __tmp39 cly
   249 noop
 
   277 op mul __tmp59 __tmp58 BAR_GAP
   278 op add __tmp57 OFFSET_Y __tmp59
   279 noop
-    * jump __label40 always
+  280 noop
   281 label __label40
   282 op sub crh __tmp57 cry
   283 noop
 
   304 op mul __tmp70 TO_INDEX BAR_GAP
   305 op add __tmp69 OFFSET_Y __tmp70
   306 noop
-    * jump __label44 always
+  307 noop
   308 label __label44
   309 op sub clh __tmp69 cly
   310 noop
 
   320 op mul __tmp83 __tmp82 BAR_GAP
   321 op add __tmp81 OFFSET_Y __tmp83
   322 noop
-    * jump __label48 always
+  323 noop
   324 label __label48
   325 op sub crh __tmp81 0
   326 noop
 
   513 op land __tmp160 __tmp124 __tmp159
   514 jump __label78 equal __tmp160 false
   515 set red 0
-    * jump __label78 always
+  516 noop
   517 label __label78
   518 set green 0
   519 jump __label80 lessThanEq minimum LIM1
   520 set green 255
-    * jump __label80 always
+  521 noop
   522 label __label80
   523 set blue 0
   524 noop

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
   358 label __label52
   359 jump __label54 greaterThanEq 0 __tmp89
   360 label __label84
-    * jump __label55 lessThan index TO_INDEX
-    * jump __label54 always
+  361 jump __label54 greaterThanEq index TO_INDEX
+  362 noop
   363 noop
   364 noop
   365 label __label55

Modifications by Final phase, Jump Threading, iteration 1:
 
   451 op add __tmp132 y 7
   452 draw image __tmp131 __tmp132 icon 16 0
   453 noop
-    * jump __label72 always
+  454 jump __label70 always
   455 label __label71
   456 draw color 255 80 80 255
   457 op add __tmp133 y 3

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
    13 label __label86
-    * print "Universal Factory Monitor"
-    * print "\n"
+   14 print "Universal Factory Monitor\n"
    15 set n @links
    16 noop
    17 label __label3
 
   176 label __label5
   177 print "Message: "
   178 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+  179 print "\nSwitch: "
   180 print SWITCH
-    * print "\n"
-    * print "Display: "
+  181 print "\nDisplay: "
   182 print DISPLAY
-    * print "\n"
-    * print "Monitoring: "
+  183 print "\nMonitoring: "
   184 print TYPE
-    * print "\n"
-    * print "Capacity: "
+  185 print "\nCapacity: "
   186 print CAPACITY
-    * print "\n"
-    * print "Resource 1: "
+  187 print "\nResource 1: "
   188 print RES1
-    * print "\n"
-    * print "Resource 2: "
+  189 print "\nResource 2: "
   190 print RES2
-    * print "\n"
-    * print "Resource 3: "
+  191 print "\nResource 3: "
   192 print RES3
-    * print "\n"
-    * print "Output: "
+  193 print "\nOutput: "
   194 print OUTPUT
   195 print "\n"
   196 op equal __tmp25 DISPLAY null
 
   335 label __label85
   336 set start @time
   337 noop
-    * print "Universal Factory Monitor"
-    * print "\n"
+  338 print "Universal Factory Monitor\n"
   339 print "Monitoring: "
   340 print TYPE
   341 draw color 0 0 80 255

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set EXPECTED_BOOST 1.5
set LIM1 33
set LIM2 66
set DISPLAY null
set TYPE null
set icon null
op equal __tmp0 DISPLAY null
op equal __tmp1 TYPE null
op or __tmp2 __tmp0 __tmp1
jump __label2 equal __tmp2 false
label __label86
print "Universal Factory Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label83
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label13 notEqual __ast0 @silicon-factory
set TYPE @silicon-factory
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label13
jump __label15 notEqual __ast0 @silicon-crucible
set TYPE @silicon-crucible
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @pyratite
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label15
jump __label17 notEqual __ast0 @kiln
set TYPE @kiln
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @lead
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @metaglass
jump __label6 always 0 0
label __label17
jump __label19 notEqual __ast0 @phase-weaver
set TYPE @phase-weaver
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @thorium
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @phase-fabric
jump __label6 always 0 0
label __label19
jump __label21 notEqual __ast0 @pyratite-mixer
set TYPE @pyratite-mixer
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @lead
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @pyratite
jump __label6 always 0 0
label __label21
jump __label23 notEqual __ast0 @blast-mixer
set TYPE @blast-mixer
sensor CAPACITY block @itemCapacity
set RES1 @pyratite
set RES2 @spore-pod
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @blast-compound
jump __label6 always 0 0
label __label23
jump __label25 notEqual __ast0 @plastanium-compressor
set TYPE @plastanium-compressor
sensor CAPACITY block @itemCapacity
set RES1 @titanium
set RES2 @oil
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL1 MUL3
sensor __tmp23 block @liquidCapacity
op div MUL2 250 __tmp23
set OUTPUT @plastanium
jump __label6 always 0 0
label __label25
print "\n  "
print block
print " not supported"
label __label6
jump __label83 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nDisplay: "
print DISPLAY
print "\nMonitoring: "
print TYPE
print "\nCapacity: "
print CAPACITY
print "\nResource 1: "
print RES1
print "\nResource 2: "
print RES2
print "\nResource 3: "
print RES3
print "\nOutput: "
print OUTPUT
print "\n"
op equal __tmp25 DISPLAY null
op equal __tmp26 TYPE null
op or __tmp27 __tmp25 __tmp26
jump __label27 equal __tmp27 false
print "No block to monitor or display."
label __label27
printflush MESSAGE
jump __label86 notEqual __tmp27 false
label __label2
sensor __tmp29 DISPLAY @type
jump __label29 notEqual __tmp29 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp32 OFFSET_X BAR_SPACE
op sub clw __tmp32 2
set crw clw
set cly 0
jump __label32 equal FROM_INDEX 0
op mul __tmp36 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp36
label __label32
set cry cly
set __tmp39 176
jump __label34 greaterThanEq TO_INDEX 8
op mul __tmp40 TO_INDEX BAR_GAP
op add __tmp39 OFFSET_Y __tmp40
label __label34
op sub clh __tmp39 cly
set crh clh
jump __label30 always 0 0
label __label29
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 88
set BAR_GAP 22
jump __label35 lessThan FROM_INDEX 8
op add __tmp45 OFFSET_X BAR_SPACE
op sub crx __tmp45 2
op sub crw 177 __tmp45
set cry 0
op mod __tmp50 FROM_INDEX 8
jump __label38 equal __tmp50 0
op mul __tmp54 __tmp50 BAR_GAP
op add cry OFFSET_Y __tmp54
label __label38
set __tmp57 176
jump __label40 greaterThanEq TO_INDEX 16
op mod __tmp58 TO_INDEX 8
op mul __tmp59 __tmp58 BAR_GAP
op add __tmp57 OFFSET_Y __tmp59
label __label40
op sub crh __tmp57 cry
set clx crx
set clw crw
set cly cry
set clh crh
jump __label36 always 0 0
label __label35
set clx 0
op add __tmp62 OFFSET_X BAR_SPACE
op sub clw __tmp62 2
set cly 0
jump __label42 equal FROM_INDEX 0
op mul __tmp66 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp66
label __label42
set __tmp69 176
jump __label44 greaterThanEq TO_INDEX 8
op mul __tmp70 TO_INDEX BAR_GAP
op add __tmp69 OFFSET_Y __tmp70
label __label44
op sub clh __tmp69 cly
jump __label45 lessThan TO_INDEX 8
op sub crx __tmp62 2
op sub crw 177 __tmp62
set cry 0
set __tmp81 176
jump __label48 greaterThanEq TO_INDEX 16
op mod __tmp82 TO_INDEX 8
op mul __tmp83 __tmp82 BAR_GAP
op add __tmp81 OFFSET_Y __tmp83
label __label48
op sub crh __tmp81 0
jump __label46 always 0 0
label __label45
set crx 0
set crw clw
set cry cly
set crh clh
label __label46
label __label36
label __label30
control enabled SWITCH 0 0 0 0
sensor __tmp86 SWITCH @enabled
jump __label51 notEqual __tmp86 0
label __label85
set start @time
print "Universal Factory Monitor\n"
print "Monitoring: "
print TYPE
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set __tmp89 @links
set n 0
jump __label54 greaterThanEq 0 __tmp89
label __label84
jump __label54 greaterThanEq index TO_INDEX
getlink factory n
sensor __tmp93 factory @type
jump __label57 notEqual __tmp93 TYPE
set minimum 101
sensor __tmp96 factory RES1
op mul r1 MUL1 __tmp96
sensor __tmp98 factory RES2
op mul r2 MUL2 __tmp98
sensor __tmp100 factory RES3
op mul r3 MUL3 __tmp100
sensor __tmp102 factory OUTPUT
op mul out MUL1 __tmp102
sensor e factory @enabled
sensor power factory @totalPower
sensor boost factory @timescale
jump __label59 greaterThanEq r1 101
set minimum r1
set icon RES1
label __label59
jump __label61 greaterThanEq r2 minimum
set minimum r2
set icon RES2
label __label61
jump __label63 greaterThanEq r3 minimum
set minimum r3
set icon RES3
label __label63
op greaterThan __tmp113 out LIM1
op sub __tmp114 100 out
op lessThan __tmp115 __tmp114 minimum
op land showout __tmp113 __tmp115
jump __label65 equal showout false
set icon OUTPUT
label __label65
op idiv column index 8
op mod row index 8
op mul __tmp120 column BAR_SPACE
op add x OFFSET_X __tmp120
op mul __tmp122 row BAR_GAP
op add y OFFSET_Y __tmp122
op greaterThan __tmp124 minimum LIM2
op equal __tmp125 showout false
op land __tmp126 __tmp124 __tmp125
jump __label67 equal __tmp126 false
set icon TYPE
label __label67
draw color 255 255 255 255 0 0
jump __label69 equal e false
jump __label71 lessThanEq power 0
op add __tmp131 x 7
op add __tmp132 y 7
draw image __tmp131 __tmp132 icon 16 0 0
jump __label70 always 0 0
label __label71
draw color 255 80 80 255 0 0
op add __tmp133 y 3
draw rect x __tmp133 14 8 0 0
draw color 0 0 0 255 0 0
op add __tmp134 x 2
op add __tmp135 y 5
draw rect __tmp134 __tmp135 8 4 0 0
op add __tmp136 x 12
draw rect __tmp136 __tmp133 2 2 0 0
op add __tmp139 y 9
draw rect __tmp136 __tmp139 2 2 0 0
draw color 255 80 80 255 0 0
op add __tmp140 x 4
op add __tmp141 y 6
draw rect __tmp140 __tmp141 2 2 0 0
jump __label70 always 0 0
label __label69
draw color 255 80 80 255 0 0
draw stroke 3 0 0 0 0 0
op add __tmp142 x 2
op add __tmp143 y 12
op add __tmp144 x 12
op add __tmp145 y 2
draw line __tmp142 __tmp143 __tmp144 __tmp145 0 0
draw line __tmp142 __tmp145 __tmp144 __tmp143 0 0
draw color 0 0 0 255 0 0
op sub __tmp150 x 1
op sub __tmp151 y 1
draw lineRect __tmp150 __tmp151 16 16 0 0
draw stroke 2 0 0 0 0 0
label __label70
op add x x 16
op equal __tmp153 power 0
op equal __tmp154 e 0
op land __tmp155 __tmp153 __tmp154
jump __label73 equal __tmp155 false
set red 255
set green 0
set blue 0
jump __label74 always 0 0
label __label73
jump __label75 equal showout false
set red 255
set green 0
set blue 255
set minimum out
jump __label76 always 0 0
label __label75
set red 255
op greaterThanEq __tmp159 boost EXPECTED_BOOST
op land __tmp160 __tmp124 __tmp159
jump __label78 equal __tmp160 false
set red 0
label __label78
set green 0
jump __label80 lessThanEq minimum LIM1
set green 255
label __label80
set blue 0
label __label76
label __label74
jump __label81 lessThanEq boost EXPECTED_BOOST
op max red 192 red
op max green 192 green
op max blue 192 blue
set boost EXPECTED_BOOST
label __label81
op mul __tmp169 BAR_LENGTH boost
op idiv length __tmp169 EXPECTED_BOOST
draw color red green blue 128 0 0
op mul __tmp171 minimum length
op idiv __tmp172 __tmp171 100
draw rect x y __tmp172 BAR_WIDTH 0 0
draw color red green blue 255 0 0
draw lineRect x y length BAR_WIDTH 0 0
op add index index 1
label __label57
op add n n 1
jump __label84 lessThan n __tmp89
label __label54
drawflush DISPLAY
op sub __tmp174 @time start
op floor __tmp175 __tmp174 0
print "\nDraw time: "
print __tmp175
print " ms"
printflush MESSAGE
sensor __tmp86 SWITCH @enabled
jump __label85 equal __tmp86 0
label __label51
end
