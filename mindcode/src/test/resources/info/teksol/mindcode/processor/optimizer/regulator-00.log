   240 instructions before optimizations.
    22 instructions eliminated by Temp Variables Elimination.
    27 instructions eliminated by Dead Code Elimination (6 iterations).
    10 instructions eliminated by Jump Optimization (4 iterations).
     9 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
     3 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     1 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     7 instructions eliminated by Jump Straightening (4 iterations).
     2 instructions updated by PropagateJumpTargets.
     7 instructions eliminated by Print Merging.
   153 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 838):
  * Loop Optimization: replicate condition at line 70            cost     1, benefit       25,0, efficiency       25,0 (+1 instructions)

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-22 instructions):
 
     4 label __label0
     5 print "Configuring regulator..."
     6 print "\n"
-    * set __tmp0 @links
-    * set n __tmp0
+    7 set n @links
+    8 noop
     9 label __label3
    10 op greaterThan __tmp1 n 0
    11 jump __label5 equal __tmp1 false
-    * op sub __tmp2 n 1
-    * set n __tmp2
-    * getlink __tmp3 n
-    * set block __tmp3
+   12 op sub n n 1
+   13 noop
+   14 getlink block n
+   15 noop
    16 print "Found: "
    17 print block
    18 print "\n"
-    * sensor __tmp4 block @type
-    * set __ast0 __tmp4
+   19 sensor __ast0 block @type
+   20 noop
    21 jump __label8 equal __ast0 @message
    22 jump __label7 always
    23 label __label8
 
    51 set CONTAINER block
    52 set SENSOR @totalItems
    53 set MAXIMUM @itemCapacity
-    * op add __tmp6 n 1
-    * set START __tmp6
+   54 op add START n 1
+   55 noop
    56 set __tmp5 START
    57 jump __label6 always
    58 label __label13
 
    64 set CONTAINER block
    65 set SENSOR @totalLiquids
    66 set MAXIMUM @liquidCapacity
-    * op add __tmp7 n 1
-    * set START __tmp7
+   67 op add START n 1
+   68 noop
    69 set __tmp5 START
    70 jump __label6 always
    71 label __label15
 
    76 set CONTAINER block
    77 set SENSOR @totalPower
    78 set MAXIMUM @powerCapacity
-    * op add __tmp8 n 1
-    * set START __tmp8
+   79 op add START n 1
+   80 noop
    81 set __tmp5 START
    82 jump __label6 always
    83 label __label17
 
    89 set CONTAINER block
    90 set SENSOR @powerNetStored
    91 set MAXIMUM @powerNetCapacity
-    * op add __tmp9 n 1
-    * set START __tmp9
+   92 op add START n 1
+   93 noop
    94 set __tmp5 START
    95 jump __label6 always
    96 label __label19
 
   126 jump __label0 notEqual __tmp12 false
   127 label __label2
   128 sensor __tmp13 SORTER @type
-    * op strictEqual __tmp14 __tmp13 @inverted-sorter
-    * set INVERTED __tmp14
+  129 op strictEqual INVERTED __tmp13 @inverted-sorter
+  130 noop
   131 label __label23
   132 set __fn0_newState true
   133 op notEqual __tmp16 STATE __fn0_newState
   134 jump __label25 equal __tmp16 false
   135 set STATE __fn0_newState
-    * op add __tmp18 CYCLES 1
-    * set CYCLES __tmp18
-    * op xor __tmp19 INVERTED STATE
-    * set ON __tmp19
+  136 op add CYCLES CYCLES 1
+  137 noop
+  138 op xor ON INVERTED STATE
+  139 noop
   140 jump __label27 equal ON false
   141 set __tmp20 "\nCurrently active:[green]"
   142 jump __label28 always
 
   157 sensor __tmp21 SWITCH @enabled
   158 op equal __tmp22 __tmp21 0
   159 jump __label31 equal __tmp22 false
-    * set __tmp23 @time
-    * set start __tmp23
-    * sensor __tmp24 SORTER @config
-    * set item __tmp24
+  160 set start @time
+  161 noop
+  162 sensor item SORTER @config
+  163 noop
   164 op equal __tmp25 item null
   165 op notEqual __tmp26 SENSOR @totalItems
   166 op or __tmp27 __tmp25 __tmp26
 
   177 print CONTAINER
   178 set __tmp28 null
   179 label __label33
-    * sensor __tmp29 CONTAINER MAXIMUM
-    * set max __tmp29
-    * sensor __tmp30 CONTAINER item
-    * set amount __tmp30
+  180 sensor max CONTAINER MAXIMUM
+  181 noop
+  182 sensor amount CONTAINER item
+  183 noop
   184 op mul __tmp31 100 amount
-    * op idiv __tmp32 __tmp31 max
-    * set pct __tmp32
+  185 op idiv pct __tmp31 max
+  186 noop
   187 op lessThanEq __tmp33 pct PCT_LOW
   188 jump __label34 equal __tmp33 false
   189 label __label36
 
   191 op notEqual __tmp36 STATE __fn1_newState
   192 jump __label38 equal __tmp36 false
   193 set STATE __fn1_newState
-    * op add __tmp38 CYCLES 1
-    * set CYCLES __tmp38
-    * op xor __tmp39 INVERTED STATE
-    * set ON __tmp39
+  194 op add CYCLES CYCLES 1
+  195 noop
+  196 op xor ON INVERTED STATE
+  197 noop
   198 jump __label40 equal ON false
   199 set __tmp40 "\nCurrently active:[green]"
   200 jump __label41 always
 
   219 op notEqual __tmp44 STATE __fn2_newState
   220 jump __label46 equal __tmp44 false
   221 set STATE __fn2_newState
-    * op add __tmp46 CYCLES 1
-    * set CYCLES __tmp46
-    * op xor __tmp47 INVERTED STATE
-    * set ON __tmp47
+  222 op add CYCLES CYCLES 1
+  223 noop
+  224 op xor ON INVERTED STATE
+  225 noop
   226 jump __label48 equal ON false
   227 set __tmp48 "\nCurrently active:[green]"
   228 jump __label49 always
 
   270 label __label52
   271 op lessThan __tmp50 n @links
   272 jump __label54 equal __tmp50 false
-    * getlink __tmp51 n
-    * set block __tmp51
+  273 getlink block n
+  274 noop
   275 control enabled block ON
   276 print "\n    "
   277 print block
-    * op add __tmp52 n 1
-    * set n __tmp52
+  278 op add n n 1
+  279 noop
   280 label __label53
   281 jump __label52 always
   282 label __label54

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-17 instructions):
 
    22 jump __label7 always
    23 label __label8
    24 set MESSAGE block
-    * set __tmp5 MESSAGE
+   25 noop
    26 jump __label6 always
    27 label __label7
    28 jump __label10 equal __ast0 @switch
    29 jump __label9 always
    30 label __label10
    31 set SWITCH block
-    * set __tmp5 SWITCH
+   32 noop
    33 jump __label6 always
    34 label __label9
    35 jump __label12 equal __ast0 @sorter
 
    38 jump __label11 always
    39 label __label12
    40 set SORTER block
-    * set __tmp5 SORTER
+   41 noop
    42 jump __label6 always
    43 label __label11
    44 jump __label14 equal __ast0 @vault
 
    53 set MAXIMUM @itemCapacity
    54 op add START n 1
    55 noop
-    * set __tmp5 START
+   56 noop
    57 jump __label6 always
    58 label __label13
    59 jump __label16 equal __ast0 @liquid-tank
 
    66 set MAXIMUM @liquidCapacity
    67 op add START n 1
    68 noop
-    * set __tmp5 START
+   69 noop
    70 jump __label6 always
    71 label __label15
    72 jump __label18 equal __ast0 @battery
 
    78 set MAXIMUM @powerCapacity
    79 op add START n 1
    80 noop
-    * set __tmp5 START
+   81 noop
    82 jump __label6 always
    83 label __label17
    84 jump __label20 equal __ast0 @power-node
 
    91 set MAXIMUM @powerNetCapacity
    92 op add START n 1
    93 noop
-    * set __tmp5 START
+   94 noop
    95 jump __label6 always
    96 label __label19
-    * set __tmp5 null
+   97 noop
    98 label __label6
    99 label __label4
   100 jump __label3 always
 
   115 jump __label21 equal __tmp10 false
   116 print "No container."
   117 print "\n"
-    * set __tmp11 "No container."
+  118 noop
   119 jump __label22 always
   120 label __label21
-    * set __tmp11 null
+  121 noop
   122 label __label22
   123 printflush MESSAGE
   124 label __label1
 
   149 label __label25
   150 set __tmp17 null
   151 label __label26
-    * set __tmp15 __tmp17
+  152 noop
   153 label __label24
   154 set CYCLES 0
   155 control enabled SWITCH 0
 
   168 set item SENSOR
   169 print "Measuring [gold]total[] in "
   170 print CONTAINER
-    * set __tmp28 null
+  171 noop
   172 jump __label33 always
   173 label __label32
   174 print "Measuring [gold]"
   175 print item
   176 print "[] in "
   177 print CONTAINER
-    * set __tmp28 null
+  178 noop
   179 label __label33
   180 sensor max CONTAINER MAXIMUM
   181 noop
 
   209 label __label39
   210 set __tmp35 __tmp37
   211 label __label37
-    * set __tmp34 __tmp35
+  212 noop
   213 jump __label35 always
   214 label __label34
   215 op greaterThanEq __tmp41 pct PCT_HIGH
 
   242 label __label42
   243 set __tmp42 null
   244 label __label43
-    * set __tmp34 __tmp42
+  245 noop
   246 label __label35
   247 print "\nLevel: [gold]"
   248 print pct
 
   254 print "\nDeactivate below [salmon]"
   255 print PCT_LOW
   256 print "%[]"
-    * set __tmp49 null
+  257 noop
   258 jump __label51 always
   259 label __label50
   260 print "\nActivate below [green]"
 
   263 print "\nDeactivate above [salmon]"
   264 print PCT_HIGH
   265 print "%[]"
-    * set __tmp49 null
+  266 noop
   267 label __label51
   268 print ACTIVE_TEXT
   269 set n START

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-5 instructions):
 
   144 set __tmp20 "\nCurrently inactive:[salmon]"
   145 label __label28
   146 set ACTIVE_TEXT __tmp20
-    * set __tmp17 ACTIVE_TEXT
+  147 noop
   148 jump __label26 always
   149 label __label25
-    * set __tmp17 null
+  150 noop
   151 label __label26
   152 noop
   153 label __label24
 
   207 label __label38
   208 set __tmp37 null
   209 label __label39
-    * set __tmp35 __tmp37
+  210 noop
   211 label __label37
   212 noop
   213 jump __label35 always
 
   237 label __label47
   238 set __tmp43 __tmp45
   239 label __label45
-    * set __tmp42 __tmp43
+  240 noop
   241 jump __label43 always
   242 label __label42
-    * set __tmp42 null
+  243 noop
   244 label __label43
   245 noop
   246 label __label35

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-3 instructions):
 
   202 set __tmp40 "\nCurrently inactive:[salmon]"
   203 label __label41
   204 set ACTIVE_TEXT __tmp40
-    * set __tmp37 ACTIVE_TEXT
+  205 noop
   206 jump __label39 always
   207 label __label38
-    * set __tmp37 null
+  208 noop
   209 label __label39
   210 noop
   211 label __label37
 
   235 label __label46
   236 set __tmp45 null
   237 label __label47
-    * set __tmp43 __tmp45
+  238 noop
   239 label __label45
   240 noop
   241 jump __label43 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   230 set __tmp48 "\nCurrently inactive:[salmon]"
   231 label __label49
   232 set ACTIVE_TEXT __tmp48
-    * set __tmp45 ACTIVE_TEXT
+  233 noop
   234 jump __label47 always
   235 label __label46
-    * set __tmp45 null
+  236 noop
   237 label __label47
   238 noop
   239 label __label45

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-7 instructions):
 
    18 print "\n"
    19 sensor __ast0 block @type
    20 noop
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   21 jump __label7 notEqual __ast0 @message
+   22 noop
    23 label __label8
    24 set MESSAGE block
    25 noop
    26 jump __label6 always
    27 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   28 jump __label9 notEqual __ast0 @switch
+   29 noop
    30 label __label10
    31 set SWITCH block
    32 noop
 
    34 label __label9
    35 jump __label12 equal __ast0 @sorter
    36 jump __label12 equal __ast0 @inverted-sorter
-    * jump __label12 equal __ast0 @unloader
-    * jump __label11 always
+   37 jump __label11 notEqual __ast0 @unloader
+   38 noop
    39 label __label12
    40 set SORTER block
    41 noop
 
    45 jump __label14 equal __ast0 @container
    46 jump __label14 equal __ast0 @core-shard
    47 jump __label14 equal __ast0 @core-foundation
-    * jump __label14 equal __ast0 @core-nucleus
-    * jump __label13 always
+   48 jump __label13 notEqual __ast0 @core-nucleus
+   49 noop
    50 label __label14
    51 set CONTAINER block
    52 set SENSOR @totalItems
 
    58 label __label13
    59 jump __label16 equal __ast0 @liquid-tank
    60 jump __label16 equal __ast0 @liquid-container
-    * jump __label16 equal __ast0 @liquid-router
-    * jump __label15 always
+   61 jump __label15 notEqual __ast0 @liquid-router
+   62 noop
    63 label __label16
    64 set CONTAINER block
    65 set SENSOR @totalLiquids
 
    70 jump __label6 always
    71 label __label15
    72 jump __label18 equal __ast0 @battery
-    * jump __label18 equal __ast0 @battery-large
-    * jump __label17 always
+   73 jump __label17 notEqual __ast0 @battery-large
+   74 noop
    75 label __label18
    76 set CONTAINER block
    77 set SENSOR @totalPower
 
    83 label __label17
    84 jump __label20 equal __ast0 @power-node
    85 jump __label20 equal __ast0 @power-node-large
-    * jump __label20 equal __ast0 @surge-tower
-    * jump __label19 always
+   86 jump __label19 notEqual __ast0 @surge-tower
+   87 noop
    88 label __label20
    89 set CONTAINER block
    90 set SENSOR @powerNetStored

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-10 instructions):
 
     7 set n @links
     8 noop
     9 label __label3
-    * op greaterThan __tmp1 n 0
-    * jump __label5 equal __tmp1 false
+   10 jump __label5 lessThanEq n 0
    11 op sub n n 1
    12 noop
    13 getlink block n
 
   110 print "Container: "
   111 print CONTAINER
   112 print "\n"
-    * op equal __tmp10 CONTAINER null
-    * jump __label21 equal __tmp10 false
+  113 jump __label21 notEqual CONTAINER null
   114 print "No container."
   115 print "\n"
   116 noop
 
   120 label __label22
   121 printflush MESSAGE
   122 label __label1
-    * op equal __tmp12 CONTAINER null
-    * jump __label0 notEqual __tmp12 false
+  123 jump __label0 equal CONTAINER null
   124 label __label2
   125 sensor __tmp13 SORTER @type
   126 op strictEqual INVERTED __tmp13 @inverted-sorter
   127 noop
   128 label __label23
   129 set __fn0_newState true
-    * op notEqual __tmp16 STATE __fn0_newState
-    * jump __label25 equal __tmp16 false
+  130 jump __label25 equal STATE __fn0_newState
   131 set STATE __fn0_newState
   132 op add CYCLES CYCLES 1
   133 noop
 
   151 control enabled SWITCH 0
   152 label __label29
   153 sensor __tmp21 SWITCH @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label31 equal __tmp22 false
+  154 jump __label31 notEqual __tmp21 0
   155 set start @time
   156 noop
   157 sensor item SORTER @config
 
   179 op mul __tmp31 100 amount
   180 op idiv pct __tmp31 max
   181 noop
-    * op lessThanEq __tmp33 pct PCT_LOW
-    * jump __label34 equal __tmp33 false
+  182 jump __label34 greaterThan pct PCT_LOW
   183 label __label36
   184 set __fn1_newState true
-    * op notEqual __tmp36 STATE __fn1_newState
-    * jump __label38 equal __tmp36 false
+  185 jump __label38 equal STATE __fn1_newState
   186 set STATE __fn1_newState
   187 op add CYCLES CYCLES 1
   188 noop
 
   205 noop
   206 jump __label35 always
   207 label __label34
-    * op greaterThanEq __tmp41 pct PCT_HIGH
-    * jump __label42 equal __tmp41 false
+  208 jump __label42 lessThan pct PCT_HIGH
   209 label __label44
   210 set __fn2_newState false
-    * op notEqual __tmp44 STATE __fn2_newState
-    * jump __label46 equal __tmp44 false
+  211 jump __label46 equal STATE __fn2_newState
   212 set STATE __fn2_newState
   213 op add CYCLES CYCLES 1
   214 noop
 
   259 print ACTIVE_TEXT
   260 set n START
   261 label __label52
-    * op lessThan __tmp50 n @links
-    * jump __label54 equal __tmp50 false
+  262 jump __label54 greaterThanEq n @links
   263 getlink block n
   264 noop
   265 control enabled block ON

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    91 op add START n 1
    92 noop
    93 noop
-    * jump __label6 always
+   94 noop
    95 label __label19
    96 noop
    97 label __label6
 
   114 print "No container."
   115 print "\n"
   116 noop
-    * jump __label22 always
+  117 noop
   118 label __label21
   119 noop
   120 label __label22
 
   141 label __label28
   142 set ACTIVE_TEXT __tmp20
   143 noop
-    * jump __label26 always
+  144 noop
   145 label __label25
   146 noop
   147 label __label26
 
   196 label __label41
   197 set ACTIVE_TEXT __tmp40
   198 noop
-    * jump __label39 always
+  199 noop
   200 label __label38
   201 noop
   202 label __label39
 
   222 label __label49
   223 set ACTIVE_TEXT __tmp48
   224 noop
-    * jump __label47 always
+  225 noop
   226 label __label46
   227 noop
   228 label __label47
   229 noop
   230 label __label45
   231 noop
-    * jump __label43 always
+  232 noop
   233 label __label42
   234 noop
   235 label __label43

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-3 instructions):
 
   133 noop
   134 op xor ON INVERTED STATE
   135 noop
-    * jump __label27 equal ON false
-    * set __tmp20 "\nCurrently active:[green]"
+  136 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  137 jump __label28 equal ON false
+  138 set ACTIVE_TEXT "\nCurrently active:[green]"
   139 jump __label28 always
-    * label __label27
-    * set __tmp20 "\nCurrently inactive:[salmon]"
   140 label __label28
-    * set ACTIVE_TEXT __tmp20
   141 noop
   142 noop
   143 label __label25
 
   186 noop
   187 op xor ON INVERTED STATE
   188 noop
-    * jump __label40 equal ON false
-    * set __tmp40 "\nCurrently active:[green]"
+  189 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  190 jump __label41 equal ON false
+  191 set ACTIVE_TEXT "\nCurrently active:[green]"
   192 jump __label41 always
-    * label __label40
-    * set __tmp40 "\nCurrently inactive:[salmon]"
   193 label __label41
-    * set ACTIVE_TEXT __tmp40
   194 noop
   195 noop
   196 label __label38
 
   210 noop
   211 op xor ON INVERTED STATE
   212 noop
-    * jump __label48 equal ON false
-    * set __tmp48 "\nCurrently active:[green]"
+  213 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  214 jump __label49 equal ON false
+  215 set ACTIVE_TEXT "\nCurrently active:[green]"
   216 jump __label49 always
-    * label __label48
-    * set __tmp48 "\nCurrently inactive:[salmon]"
   217 label __label49
-    * set ACTIVE_TEXT __tmp48
   218 noop
   219 noop
   220 label __label46

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   127 noop
   128 label __label23
   129 set __fn0_newState true
-    * jump __label25 equal STATE __fn0_newState
-    * set STATE __fn0_newState
+  130 jump __label25 equal STATE true
+  131 set STATE true
   132 op add CYCLES CYCLES 1
   133 noop
   134 op xor ON INVERTED STATE
 
   180 jump __label34 greaterThan pct PCT_LOW
   181 label __label36
   182 set __fn1_newState true
-    * jump __label38 equal STATE __fn1_newState
-    * set STATE __fn1_newState
+  183 jump __label38 equal STATE true
+  184 set STATE true
   185 op add CYCLES CYCLES 1
   186 noop
   187 op xor ON INVERTED STATE
 
   204 jump __label42 lessThan pct PCT_HIGH
   205 label __label44
   206 set __fn2_newState false
-    * jump __label46 equal STATE __fn2_newState
-    * set STATE __fn2_newState
+  207 jump __label46 equal STATE false
+  208 set STATE false
   209 op add CYCLES CYCLES 1
   210 noop
   211 op xor ON INVERTED STATE

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   126 op strictEqual INVERTED __tmp13 @inverted-sorter
   127 noop
   128 label __label23
-    * set __fn0_newState true
   129 jump __label25 equal STATE true
   130 set STATE true
   131 op add CYCLES CYCLES 1
 
   178 noop
   179 jump __label34 greaterThan pct PCT_LOW
   180 label __label36
-    * set __fn1_newState true
   181 jump __label38 equal STATE true
   182 set STATE true
   183 op add CYCLES CYCLES 1
 
   201 label __label34
   202 jump __label42 lessThan pct PCT_HIGH
   203 label __label44
-    * set __fn2_newState false
   204 jump __label46 equal STATE false
   205 set STATE false
   206 op add CYCLES CYCLES 1

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     8 noop
     9 label __label3
    10 jump __label5 lessThanEq n 0
+   11 label __label55
    12 op sub n n 1
    13 noop
    14 getlink block n
 
    97 noop
    98 label __label6
    99 label __label4
-    * jump __label3 always
+  100 jump __label55 greaterThan n 0
   101 label __label5
   102 print "Message: "
   103 print MESSAGE
 
   252 set n START
   253 label __label52
   254 jump __label54 greaterThanEq n @links
+  255 label __label56
   256 getlink block n
   257 noop
   258 control enabled block ON
 
   261 op add n n 1
   262 noop
   263 label __label53
-    * jump __label52 always
+  264 jump __label56 lessThan n @links
   265 label __label54
   266 print "[]\n# of cycles: "
   267 print CYCLES

Modifications by Loop Optimization: replicate condition at line 70 (+1 instructions):
 
   150 label __label29
   151 sensor __tmp21 SWITCH @enabled
   152 jump __label31 notEqual __tmp21 0
+  153 label __label57
   154 set start @time
   155 noop
   156 sensor item SORTER @config
 
   273 print " ms"
   274 printflush MESSAGE
   275 label __label30
-    * jump __label29 always
+  276 sensor __tmp21 SWITCH @enabled
+  277 jump __label57 equal __tmp21 0
   278 label __label31
   279 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   252 print ACTIVE_TEXT
   253 set n START
   254 label __label52
-    * jump __label54 greaterThanEq n @links
+  255 jump __label54 greaterThanEq START @links
   256 label __label56
   257 getlink block n
   258 noop

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-3 instructions):
 
   136 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   137 jump __label28 equal ON false
   138 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label28 always
+  139 noop
   140 label __label28
   141 noop
   142 noop
 
   189 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   190 jump __label41 equal ON false
   191 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label41 always
+  192 noop
   193 label __label41
   194 noop
   195 noop
 
   212 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   213 jump __label49 equal ON false
   214 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label49 always
+  215 noop
   216 label __label49
   217 noop
   218 noop

Modifications by Final phase, Jump Threading, iteration 1:
 
   180 noop
   181 jump __label34 greaterThan pct PCT_LOW
   182 label __label36
-    * jump __label38 equal STATE true
+  183 jump __label35 equal STATE true
   184 set STATE true
   185 op add CYCLES CYCLES 1
   186 noop
   187 op xor ON INVERTED STATE
   188 noop
   189 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
-    * jump __label41 equal ON false
+  190 jump __label35 equal ON false
   191 set ACTIVE_TEXT "\nCurrently active:[green]"
   192 noop
   193 label __label41

Modifications by Final phase, Print Merging, iteration 1 (-7 instructions):
 
     2 set CONTAINER null
     3 set SORTER null
     4 label __label0
-    * print "Configuring regulator..."
-    * print "\n"
+    5 print "Configuring regulator...\n"
     6 set n @links
     7 noop
     8 label __label3
 
   100 label __label5
   101 print "Message: "
   102 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+  103 print "\nSwitch: "
   104 print SWITCH
-    * print "\n"
-    * print "Sorter: "
+  105 print "\nSorter: "
   106 print SORTER
-    * print "\n"
-    * print "Container: "
+  107 print "\nContainer: "
   108 print CONTAINER
   109 print "\n"
   110 jump __label21 notEqual CONTAINER null
-    * print "No container."
-    * print "\n"
+  111 print "No container.\n"
   112 noop
   113 noop
   114 label __label21
 
   229 jump __label50 equal INVERTED false
   230 print "\nActivate above [green]"
   231 print PCT_HIGH
-    * print "%[]"
-    * print "\nDeactivate below [salmon]"
+  232 print "%[]\nDeactivate below [salmon]"
   233 print PCT_LOW
   234 print "%[]"
   235 noop
 
   237 label __label50
   238 print "\nActivate below [green]"
   239 print PCT_LOW
-    * print "%[]"
-    * print "\nDeactivate above [salmon]"
+  240 print "%[]\nDeactivate above [salmon]"
   241 print PCT_HIGH
   242 print "%[]"
   243 noop

Final code before resolving virtual instructions:

set PCT_LOW 60
set PCT_HIGH 80
set CONTAINER null
set SORTER null
label __label0
print "Configuring regulator...\n"
set n @links
jump __label5 lessThanEq n 0
label __label55
op sub n n 1
getlink block n
print "Found: "
print block
print "\n"
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @sorter
jump __label12 equal __ast0 @inverted-sorter
jump __label11 notEqual __ast0 @unloader
label __label12
set SORTER block
jump __label6 always 0 0
label __label11
jump __label14 equal __ast0 @vault
jump __label14 equal __ast0 @container
jump __label14 equal __ast0 @core-shard
jump __label14 equal __ast0 @core-foundation
jump __label13 notEqual __ast0 @core-nucleus
label __label14
set CONTAINER block
set SENSOR @totalItems
set MAXIMUM @itemCapacity
op add START n 1
jump __label6 always 0 0
label __label13
jump __label16 equal __ast0 @liquid-tank
jump __label16 equal __ast0 @liquid-container
jump __label15 notEqual __ast0 @liquid-router
label __label16
set CONTAINER block
set SENSOR @totalLiquids
set MAXIMUM @liquidCapacity
op add START n 1
jump __label6 always 0 0
label __label15
jump __label18 equal __ast0 @battery
jump __label17 notEqual __ast0 @battery-large
label __label18
set CONTAINER block
set SENSOR @totalPower
set MAXIMUM @powerCapacity
op add START n 1
jump __label6 always 0 0
label __label17
jump __label20 equal __ast0 @power-node
jump __label20 equal __ast0 @power-node-large
jump __label19 notEqual __ast0 @surge-tower
label __label20
set CONTAINER block
set SENSOR @powerNetStored
set MAXIMUM @powerNetCapacity
op add START n 1
label __label19
label __label6
jump __label55 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSorter: "
print SORTER
print "\nContainer: "
print CONTAINER
print "\n"
jump __label21 notEqual CONTAINER null
print "No container.\n"
label __label21
printflush MESSAGE
jump __label0 equal CONTAINER null
sensor __tmp13 SORTER @type
op strictEqual INVERTED __tmp13 @inverted-sorter
jump __label25 equal STATE true
set STATE true
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label28 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
label __label28
label __label25
set CYCLES 0
control enabled SWITCH 0 0 0 0
sensor __tmp21 SWITCH @enabled
jump __label31 notEqual __tmp21 0
label __label57
set start @time
sensor item SORTER @config
op equal __tmp25 item null
op notEqual __tmp26 SENSOR @totalItems
op or __tmp27 __tmp25 __tmp26
jump __label32 equal __tmp27 false
set item SENSOR
print "Measuring [gold]total[] in "
print CONTAINER
jump __label33 always 0 0
label __label32
print "Measuring [gold]"
print item
print "[] in "
print CONTAINER
label __label33
sensor max CONTAINER MAXIMUM
sensor amount CONTAINER item
op mul __tmp31 100 amount
op idiv pct __tmp31 max
jump __label34 greaterThan pct PCT_LOW
jump __label35 equal STATE true
set STATE true
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label35 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
jump __label35 always 0 0
label __label34
jump __label42 lessThan pct PCT_HIGH
jump __label46 equal STATE false
set STATE false
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label49 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
label __label49
label __label46
label __label42
label __label35
print "\nLevel: [gold]"
print pct
print "%[]"
jump __label50 equal INVERTED false
print "\nActivate above [green]"
print PCT_HIGH
print "%[]\nDeactivate below [salmon]"
print PCT_LOW
print "%[]"
jump __label51 always 0 0
label __label50
print "\nActivate below [green]"
print PCT_LOW
print "%[]\nDeactivate above [salmon]"
print PCT_HIGH
print "%[]"
label __label51
print ACTIVE_TEXT
set n START
jump __label54 greaterThanEq START @links
label __label56
getlink block n
control enabled block ON 0 0 0
print "\n    "
print block
op add n n 1
jump __label56 lessThan n @links
label __label54
print "[]\n# of cycles: "
print CYCLES
op sub __tmp53 @time start
op floor __tmp54 __tmp53 0
print "\n[lightgray]Loop: "
print __tmp54
print " ms"
printflush MESSAGE
sensor __tmp21 SWITCH @enabled
jump __label57 equal __tmp21 0
label __label31
end
