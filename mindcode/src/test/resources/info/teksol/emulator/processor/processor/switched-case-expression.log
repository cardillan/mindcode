    97 instructions before optimizations.
    11 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    13 instructions eliminated by Dead Code Elimination (4 iterations).
     1 instructions eliminated by Jump Optimization (3 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 5 iterations).
     1 instructions eliminated by Data Flow Optimization (2 passes, 8 iterations).
     1 instructions eliminated by Loop Optimization (2 iterations).
     2 loops improved by Loop Optimization.
     3 instructions added by Case Switching (3 iterations).
     1 case expressions converted to switched jumps Case Switching.
    10 instructions eliminated by Jump Straightening (3 iterations).
    60 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 942):
  * Case Switching: convert case at line 16                      cost     3, benefit      625.0, efficiency      208.3 (+3 instructions)

Final code before resolving virtual instructions:

set S9 0
set S8 0
set S7 0
set S6 0
set S5 0
set S4 0
set S3 0
set S2 0
set S1 0
set S0 0
set i 1
label __label31
set __fn0_n i
jump __label7 lessThanEq i 0
label __label32
op mod __tmp2 __fn0_n 10
jump __label33 lessThan __tmp2 0
jump __label33 greaterThan __tmp2 9
gotooffset __label35 __tmp2 0 __label34
gotolabel __label35 __label34
jump __label12 always 0 0
gotolabel __label36 __label34
jump __label14 always 0 0
gotolabel __label37 __label34
jump __label16 always 0 0
gotolabel __label38 __label34
jump __label18 always 0 0
gotolabel __label39 __label34
jump __label20 always 0 0
gotolabel __label40 __label34
jump __label22 always 0 0
gotolabel __label41 __label34
jump __label24 always 0 0
gotolabel __label42 __label34
jump __label26 always 0 0
gotolabel __label43 __label34
jump __label28 always 0 0
gotolabel __label44 __label34
jump __label30 always 0 0
label __label12
op add S0 S0 1
jump __label10 always 0 0
label __label14
op add S1 S1 1
jump __label10 always 0 0
label __label16
op add S2 S2 1
jump __label10 always 0 0
label __label18
op add S3 S3 1
jump __label10 always 0 0
label __label20
op add S4 S4 1
jump __label10 always 0 0
label __label22
op add S5 S5 1
jump __label10 always 0 0
label __label24
op add S6 S6 1
jump __label10 always 0 0
label __label26
op add S7 S7 1
jump __label10 always 0 0
label __label28
op add S8 S8 1
jump __label10 always 0 0
label __label30
op add S9 S9 1
label __label33
label __label10
op idiv __fn0_n __fn0_n 10
jump __label32 greaterThan __fn0_n 0
label __label7
op add i i 1
jump __label31 lessThanEq i 100
print S0
print S1
print S2
print S3
print S4
print S5
print S6
print S7
print S8
print S9
