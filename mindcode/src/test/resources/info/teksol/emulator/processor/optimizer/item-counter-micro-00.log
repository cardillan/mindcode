   267 instructions before optimizations.
    41 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    34 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
    17 instructions eliminated by Jump Optimization (4 iterations).
    14 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 3 iterations).
    12 instructions eliminated by Data Flow Optimization (8 iterations).
     1 instructions added by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     3 instructions eliminated by Jump Straightening (4 iterations).
     4 instructions updated by PropagateJumpTargets.
     2 instructions eliminated by Unreachable Code Elimination.
     6 instructions eliminated by Print Merging.
   135 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 857):
  * Loop Optimization: replicate condition at line 69            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)

Final code before resolving virtual instructions:

set lastCell 0
label __label0
set CONV4 null
set CONV3 null
set CONV2 null
set CONV1 null
set MEMORY null
set LINKED 0
set LINKS @links
set n LINKS
label __label3
op sub n n 1
getlink block n
sensor __tmp3 block @type
jump __label7 notEqual __tmp3 @memory-cell
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __tmp3 @memory-bank
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __tmp3 @plastanium-conveyor
set CONV4 CONV3
set CONV3 CONV2
set CONV2 CONV1
set CONV1 block
op add LINKED LINKED 1
label __label11
label __label6
jump __label3 greaterThan n 0
jump __label13 notEqual LINKED 0
print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label13
jump __label15 lessThanEq LINKED 4
print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label15
jump __label2 notEqual MEMORY null
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 always 0 0
label __label2
set BATCH 1
set BATCH_TXT 10
read total MEMORY 0
op idiv batches total 10
op add limit batches 1
control enabled switch1 0 0 0 0
set b4 0
set b3 0
set b2 0
set b1 0
set ratePerMin 0
set startTime @time
sensor __tmp22 switch1 @enabled
jump __label21 notEqual __tmp22 0
label __label46
set start @time
sensor a1 CONV1 @totalItems
jump __label22 greaterThanEq a1 b1
op add batches batches 1
label __label22
sensor a2 CONV2 @totalItems
jump __label24 greaterThanEq a2 b2
op add batches batches 1
label __label24
sensor a3 CONV3 @totalItems
jump __label26 greaterThanEq a3 b3
op add batches batches 1
label __label26
sensor a4 CONV4 @totalItems
jump __label28 greaterThanEq a4 b4
op add batches batches 1
label __label28
jump __label30 lessThanEq batches limit
op sub duration @time startTime
set startTime @time
op div rate BATCH duration
op mul __tmp46 rate 166.66666666666666
write __tmp46 MEMORY lastCell
op idiv ratePerMin rate 0.0000016666666666666667
jump __label32 greaterThan duration 2000
op add __tmp51 BATCH 1
op min BATCH __tmp51 100
op mul BATCH_TXT BATCH 10
label __label32
op add limit limit BATCH
label __label30
op mul total batches 10
write total MEMORY 0
print "Item Counter                  \n"
print "Monitoring [green]"
print LINKED
print "[] conveyors\nTotal items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\n"
sensor b1 CONV1 @totalItems
jump __label34 greaterThanEq b1 a1
op add batches batches 1
label __label34
sensor b2 CONV2 @totalItems
jump __label36 greaterThanEq b2 a2
op add batches batches 1
label __label36
sensor b3 CONV3 @totalItems
jump __label38 greaterThanEq b3 a3
op add batches batches 1
label __label38
sensor b4 CONV4 @totalItems
jump __label40 greaterThanEq b4 a4
op add batches batches 1
label __label40
op sub __tmp72 @time startTime
op floor elapsed __tmp72 0
jump __label42 lessThan elapsed 10000
op idiv __tmp76 BATCH 5
op max BATCH __tmp76 1
op mul BATCH_TXT BATCH 10
op add limit batches BATCH
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label42
print "Batch size: [green]"
print BATCH_TXT
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp81 @time start
op idiv __tmp83 __tmp81 2
print "[] ms\n[lightgray]Loop time: "
print __tmp83
print " ms"
printflush message1
jump __label44 equal LINKS @links
end
label __label44
sensor __tmp22 switch1 @enabled
jump __label46 equal __tmp22 0
label __label21
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
write 0 MEMORY 0
