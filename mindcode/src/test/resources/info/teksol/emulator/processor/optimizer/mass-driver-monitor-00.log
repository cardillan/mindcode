   314 instructions before optimizations.
    36 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
    25 instructions eliminated by Dead Code Elimination (5 iterations).
    22 instructions eliminated by Jump Optimization (4 iterations).
    12 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
    14 instructions eliminated by Data Flow Optimization (2 passes, 7 iterations).
     5 instructions modified by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
     4 instructions eliminated by Jump Straightening (4 iterations).
     6 instructions eliminated by Print Merging.
   191 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 799):
  * Loop Optimization: replicate condition at line 91            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set CAPACITY 120
set DISPLAY null
set MEMORY null
set SWITCH null
set MESSAGE null
label __label58
print "Mass Driver Monitor\n"
set n @links
jump __label5 lessThanEq n 0
label __label59
op sub n n 1
getlink block n
print "Found: "
print block
print "\n"
sensor __tmp5 block @type
jump __label7 notEqual __tmp5 @message
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __tmp5 @switch
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __tmp5 @logic-display
jump __label11 notEqual __tmp5 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label14 equal __tmp5 @memory-bank
jump __label13 notEqual __tmp5 @memory-cell
label __label14
set MEMORY block
label __label13
label __label6
jump __label59 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nMemory: "
print MEMORY
print "\nDisplay: "
print DISPLAY
print "\n"
jump __label15 notEqual DISPLAY null
print "No display.\n"
label __label15
printflush MESSAGE
jump __label58 equal DISPLAY null
sensor __tmp9 DISPLAY @type
jump __label17 notEqual __tmp9 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op sub clw 82 2
set crw 80
set __tmp15 0
jump __label20 equal FROM_INDEX 0
op mul __tmp16 FROM_INDEX 20
op add __tmp15 2 __tmp16
label __label20
set cly __tmp15
set cry __tmp15
set __tmp19 176
jump __label22 greaterThanEq TO_INDEX 8
op mul __tmp20 TO_INDEX 20
op add __tmp19 2 __tmp20
label __label22
op sub clh __tmp19 __tmp15
set crh clh
jump __label18 always 0 0
label __label17
set OFFSET_X 5
set OFFSET_Y 4
set BAR_SPACE 88
set BAR_GAP 22
jump __label23 lessThan FROM_INDEX 8
op sub clx 93 2
set crx 91
op add clw 83 1
set crw 84
set __tmp32 0
op mod __tmp30 FROM_INDEX 8
jump __label26 equal __tmp30 0
op mul __tmp34 __tmp30 22
op add __tmp32 4 __tmp34
label __label26
set cly __tmp32
set cry __tmp32
set __tmp37 176
jump __label28 greaterThanEq TO_INDEX 16
op mod __tmp38 TO_INDEX 8
op mul __tmp39 __tmp38 22
op add __tmp37 4 __tmp39
label __label28
op sub clh __tmp37 __tmp32
set crh clh
jump __label24 always 0 0
label __label23
set clx 0
set crx 0
op sub clw 93 2
set crw 91
set __tmp45 0
jump __label30 equal FROM_INDEX 0
op mul __tmp46 FROM_INDEX 22
op add __tmp45 4 __tmp46
label __label30
set cly __tmp45
set cry __tmp45
set __tmp49 176
jump __label32 greaterThanEq TO_INDEX 8
op mul __tmp50 TO_INDEX 22
op add __tmp49 4 __tmp50
label __label32
op sub clh __tmp49 __tmp45
set crh clh
jump __label33 lessThan TO_INDEX 8
op sub crx 93 2
op add crw 83 1
set cry 0
set __tmp61 176
jump __label36 greaterThanEq TO_INDEX 16
op mod __tmp62 TO_INDEX 8
op mul __tmp63 __tmp62 22
op add __tmp61 4 __tmp63
label __label36
set crh __tmp61
label __label33
label __label24
label __label18
set MAX CAPACITY
op div MUL 60 CAPACITY
jump __label37 equal MEMORY null
set n 0
jump __label41 greaterThanEq 0 @links
label __label60
write 0 MEMORY n
op add n n 1
jump __label60 lessThan n @links
label __label41
label __label37
control enabled SWITCH 0 0 0 0
sensor __tmp72 SWITCH @enabled
jump __label44 notEqual __tmp72 0
label __label62
set start @time
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set n 0
jump __label47 greaterThanEq 0 @links
label __label61
getlink driver n
sensor __tmp77 driver @type
jump __label48 notEqual __tmp77 @mass-driver
op idiv column index 8
op mod row index 8
op mul __tmp82 column BAR_SPACE
op add x OFFSET_X __tmp82
op mul __tmp84 row BAR_GAP
op add y OFFSET_Y __tmp84
draw color 0 0 80 255 0 0
op sub __tmp86 x 1
op sub __tmp87 y 1
draw rect __tmp86 __tmp87 BAR_SPACE 16 0 0
draw color 255 255 255 255 0 0
op add __tmp88 x 7
op add __tmp89 y 7
draw image __tmp88 __tmp89 @mass-driver 16 0 0
op add x x 16
sensor items driver @totalItems
read __tmp92 MEMORY n
op max maxx __tmp92 items
write maxx MEMORY n
jump __label50 lessThanEq maxx MAX
op mul MAX 2 CAPACITY
op div MUL 60 MAX
label __label50
jump __label52 greaterThan MAX CAPACITY
draw color 0 128 0 255 0 0
jump __label53 always 0 0
label __label52
draw color 128 128 0 255 0 0
label __label53
op mul __tmp100 items MUL
draw rect x y __tmp100 14 0 0
jump __label54 equal MEMORY null
draw color 220 220 220 255 0 0
op mul __tmp103 maxx MUL
draw lineRect x y __tmp103 14 0 0
label __label54
jump __label56 greaterThan MAX CAPACITY
draw color 0 255 0 255 0 0
draw lineRect x y 60 14 0 0
jump __label57 always 0 0
label __label56
draw color 255 255 0 255 0 0
draw lineRect x y 30 14 0 0
op add __tmp106 x 30
draw lineRect __tmp106 y 30 14 0 0
label __label57
op add index index 1
label __label48
op add n n 1
jump __label61 lessThan n @links
label __label47
drawflush DISPLAY
print "Mass Driver Monitor\n"
op sub __tmp109 @time start
op floor __tmp110 __tmp109 0
print "[lightgray]Draw time: "
print __tmp110
print " ms"
printflush MESSAGE
sensor __tmp72 SWITCH @enabled
jump __label62 equal __tmp72 0
label __label44
