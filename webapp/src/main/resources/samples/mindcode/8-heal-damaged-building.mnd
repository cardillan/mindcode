// Patrols around a building and heals any damaged building
// Since the patrolling ship is close by, repairing
// will happen faster than usual

/// Configurable options:
CENTER = foundation1;
UNIT = @poly;

/// Don't modify anything below this line.

// Find a unit if we don't have one
if @unit.dead !== 0 or @unit.controller != @this then
    findUnit();
end

if ulocate(damaged, dmgx, dmgy) then
    printf("Damaged at $dmgx, $dmgy\n");
    approach(dmgx, dmgy, 5);
    target(dmgx, dmgy, true);
else
    print("Patrolling");
    approach(CENTER.x + 10 * sin(@tick), CENTER.y + 10 * cos(@tick), 2);
end;

printflush(message1);

inline def findUnit()
    // Keep looking for unit until one is found
    while true
        ubind(UNIT);
        if @unit == null
            printf("No unit of type $UNIT found.");
        elsif @unit.controlled != 0
            printf("Looking for a free $UNIT...");
        else
            flag(rand(1000));   // Mark unit as active
            return;
        end;
        printflush(message1);
    end;
end;

