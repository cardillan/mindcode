// Bind a single unit of this type:
type = @poly;

// Mindustry's execution model is that all local variables will
// stay put between invocations. Memory cells and banks are more
// permanent forms of storage, as they survive the destruction
// and recreation of a processor.
//
// For illustrative purposes, local variables are sufficient:
FLAG = floor(rand(10000));
found = false;

// If the unit died, we need to search for a new unit again
// (this doesn't handle situations where unit was taken over by a player)
if @unit.dead then
    found = false;
end;

// Then, if we haven't found a unit, look for one until
// we do find one that satisfies us
while !found do
    do
        ubind(type);
        if @unit.flag == 0 then
            flag(FLAG);
            found = true;
        end;
    loop while @unit === null;
end;

// Yay! We found a unit, so let's move the
// unit around to indicate which one it is
if found then
    move(30, 50);
end

// Debugging information
println("FLAG: ", FLAG);
println("found: ", found);
printflush(message1);
